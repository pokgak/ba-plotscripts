<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201115 21:59:55.434" rpa="false">
<suite id="s1" name="tests_ztimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201115 21:59:59.061" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201115 21:59:59.069" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201115 22:00:00.163" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201115 21:59:59.059" endtime="20201115 22:00:00.165"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201115 22:00:00.170" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201115 22:00:00.167" endtime="20201115 22:00:00.171"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.058" endtime="20201115 22:00:00.172"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:00.177" endtime="20201115 22:00:00.413"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.174" endtime="20201115 22:00:00.413"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:00.426" endtime="20201115 22:00:03.449"></status>
</kw>
<msg timestamp="20201115 22:00:03.451" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:00.425" endtime="20201115 22:00:03.451"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:03.456" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:03.453" endtime="20201115 22:00:03.457"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:00:03.463" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:00:03.459" endtime="20201115 22:00:03.464"></status>
</kw>
<status status="FAIL" starttime="20201115 22:00:00.422" endtime="20201115 22:00:03.465"></status>
</kw>
<status status="FAIL" starttime="20201115 22:00:00.420" endtime="20201115 22:00:03.467"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.419" endtime="20201115 22:00:03.467"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:00:03.476" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:00:03.474" endtime="20201115 22:00:03.477"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.469" endtime="20201115 22:00:03.477"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.418" endtime="20201115 22:00:03.478"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.417" endtime="20201115 22:00:03.478"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:03.480" endtime="20201115 22:00:03.483"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.416" endtime="20201115 22:00:03.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:03.486" endtime="20201115 22:00:03.489"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.414" endtime="20201115 22:00:03.490"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.056" endtime="20201115 22:00:03.491"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:03.507" endtime="20201115 22:00:03.529"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.503" endtime="20201115 22:00:03.530"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:03.563" endtime="20201115 22:00:06.587"></status>
</kw>
<msg timestamp="20201115 22:00:06.588" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:03.557" endtime="20201115 22:00:06.588"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:06.593" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:06.590" endtime="20201115 22:00:06.594"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:00:06.600" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:00:06.596" endtime="20201115 22:00:06.600"></status>
</kw>
<status status="FAIL" starttime="20201115 22:00:03.551" endtime="20201115 22:00:06.602"></status>
</kw>
<status status="FAIL" starttime="20201115 22:00:03.546" endtime="20201115 22:00:06.603"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.542" endtime="20201115 22:00:06.604"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:00:06.612" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:00:06.610" endtime="20201115 22:00:06.613"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.606" endtime="20201115 22:00:06.613"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.540" endtime="20201115 22:00:06.613"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.539" endtime="20201115 22:00:06.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:06.616" endtime="20201115 22:00:06.619"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.536" endtime="20201115 22:00:06.620"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.532" endtime="20201115 22:00:06.621"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.500" endtime="20201115 22:00:06.622"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:06.638" endtime="20201115 22:00:06.652"></status>
</kw>
<msg timestamp="20201115 22:00:06.653" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:06.634" endtime="20201115 22:00:06.653"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:06.658" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:06.655" endtime="20201115 22:00:06.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:06.661" endtime="20201115 22:00:06.665"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.628" endtime="20201115 22:00:06.666"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.624" endtime="20201115 22:00:06.667"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:06.677" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201115 22:00:06.674" endtime="20201115 22:00:06.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:06.682" level="INFO">VALUE: ztimer</msg>
<status status="PASS" starttime="20201115 22:00:06.680" endtime="20201115 22:00:06.683"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.669" endtime="20201115 22:00:06.685"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:00:03.492" endtime="20201115 22:00:06.686" critical="yes"></status>
</test>
<status status="PASS" starttime="20201115 21:59:55.547" endtime="20201115 22:00:06.690"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201115 22:00:06.746" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201115 22:00:06.754" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201115 22:00:07.833" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201115 22:00:06.745" endtime="20201115 22:00:07.834"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201115 22:00:07.837" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201115 22:00:07.835" endtime="20201115 22:00:07.837"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.743" endtime="20201115 22:00:07.838"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:07.840" endtime="20201115 22:00:08.061"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.838" endtime="20201115 22:00:08.061"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:08.074" endtime="20201115 22:00:11.097"></status>
</kw>
<msg timestamp="20201115 22:00:11.098" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:08.072" endtime="20201115 22:00:11.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:11.103" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:11.100" endtime="20201115 22:00:11.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:00:11.110" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:00:11.106" endtime="20201115 22:00:11.111"></status>
</kw>
<status status="FAIL" starttime="20201115 22:00:08.070" endtime="20201115 22:00:11.112"></status>
</kw>
<status status="FAIL" starttime="20201115 22:00:08.067" endtime="20201115 22:00:11.114"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.066" endtime="20201115 22:00:11.114"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:00:11.122" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:00:11.121" endtime="20201115 22:00:11.123"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.116" endtime="20201115 22:00:11.124"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.065" endtime="20201115 22:00:11.124"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.065" endtime="20201115 22:00:11.124"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:11.126" endtime="20201115 22:00:11.129"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.063" endtime="20201115 22:00:11.131"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:11.132" endtime="20201115 22:00:11.136"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.062" endtime="20201115 22:00:11.137"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.742" endtime="20201115 22:00:11.138"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO/">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:11.152" endtime="20201115 22:00:11.175"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.147" endtime="20201115 22:00:11.176"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:11.203" endtime="20201115 22:00:14.226"></status>
</kw>
<msg timestamp="20201115 22:00:14.227" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:11.201" endtime="20201115 22:00:14.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:14.233" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:14.230" endtime="20201115 22:00:14.234"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:00:14.240" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:00:14.236" endtime="20201115 22:00:14.241"></status>
</kw>
<status status="FAIL" starttime="20201115 22:00:11.195" endtime="20201115 22:00:14.242"></status>
</kw>
<status status="FAIL" starttime="20201115 22:00:11.190" endtime="20201115 22:00:14.243"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.187" endtime="20201115 22:00:14.244"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:00:14.252" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:00:14.250" endtime="20201115 22:00:14.253"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.246" endtime="20201115 22:00:14.253"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.186" endtime="20201115 22:00:14.254"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.184" endtime="20201115 22:00:14.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:14.256" endtime="20201115 22:00:14.259"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.181" endtime="20201115 22:00:14.261"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.178" endtime="20201115 22:00:14.262"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.144" endtime="20201115 22:00:14.262"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure GPIO Overhead</arg>
</arguments>
<msg timestamp="20201115 22:00:14.269" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:14.286" endtime="20201115 22:00:14.304"></status>
</kw>
<msg timestamp="20201115 22:00:14.305" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:14.283" endtime="20201115 22:00:14.306"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:14.311" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:14.308" endtime="20201115 22:00:14.312"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:14.313" endtime="20201115 22:00:14.317"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.277" endtime="20201115 22:00:14.318"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.273" endtime="20201115 22:00:14.319"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:14.333" endtime="20201115 22:00:14.617"></status>
</kw>
<msg timestamp="20201115 22:00:14.619" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.125743139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.125751347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:14.330" endtime="20201115 22:00:14.619"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:14.624" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.125743139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.125751347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:14.620" endtime="20201115 22:00:14.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:14.626" endtime="20201115 22:00:14.627"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.324" endtime="20201115 22:00:14.628"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.320" endtime="20201115 22:00:14.628"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:14.632" level="INFO">${RESULT} = [{'time': 3.125751347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.208000000120563e-06, 'source_diff': 8.208000000120563e-06}, {'time': 3.1257625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:00:14.629" endtime="20201115 22:00:14.632"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:14.641" level="INFO">${GPIO_OVERHEAD} = {'time': [3.125751347, 3.1257625, 3.125771111, 3.125788361, 3.125800694, 3.125815181, 3.125828292, 3.125843014, 3.125854639, 3.125868167, 3.125881056, 3.125891056, 3.12590125, 3.125909375, 3.125925278...</msg>
<status status="PASS" starttime="20201115 22:00:14.633" endtime="20201115 22:00:14.641"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:14.645" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201115 22:00:14.644" endtime="20201115 22:00:14.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:14.648" level="INFO">VALUE: [8.208000000120563e-06, 5.596999999912811e-06, 3.958000000192641e-06, 7.917000000023933e-06, 9.819000000188538e-06, 7.528000000256441e-06, 3.945000000005194e-06, 9.431000000059697e-06, 2.916999999769132e-06, 9.348000000297674e-06, 7.055999999838747e-06, 7.500000000160156e-06, 3.2220000001359494e-06, 5.611000000182997e-06, 9.874999999937017e-06, 3.416999999839021e-06, 2.6809999997823297e-06, 8.208000000120563e-06, 4.639000000139504e-06, 3.708000000379741e-06, 5.389000000022293e-06, 7.264000000173354e-06, 8.860999999971142e-06, 5.290999999907342e-06, 6.084000000239342e-06]</msg>
<status status="PASS" starttime="20201115 22:00:14.646" endtime="20201115 22:00:14.648"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.642" endtime="20201115 22:00:14.648"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:14.651" endtime="20201115 22:00:14.652"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:14.654" endtime="20201115 22:00:14.674"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.653" endtime="20201115 22:00:14.675"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.649" endtime="20201115 22:00:14.675"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.270" endtime="20201115 22:00:14.675"></status>
</kw>
<msg timestamp="20201115 22:00:14.676" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:14.684" endtime="20201115 22:00:14.695"></status>
</kw>
<msg timestamp="20201115 22:00:14.696" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:14.682" endtime="20201115 22:00:14.696"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:14.698" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:14.697" endtime="20201115 22:00:14.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:14.699" endtime="20201115 22:00:14.701"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.679" endtime="20201115 22:00:14.701"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.678" endtime="20201115 22:00:14.702"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:14.709" endtime="20201115 22:00:14.977"></status>
</kw>
<msg timestamp="20201115 22:00:14.979" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018021681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018029625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:14.707" endtime="20201115 22:00:14.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:14.985" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018021681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018029625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:14.980" endtime="20201115 22:00:14.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:14.986" endtime="20201115 22:00:14.988"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.704" endtime="20201115 22:00:14.988"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.702" endtime="20201115 22:00:14.989"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:14.992" level="INFO">${RESULT} = [{'time': 0.018029625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.943999999999313e-06, 'source_diff': 7.943999999999313e-06}, {'time': 0.018041222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:14.990" endtime="20201115 22:00:14.993"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:15.001" level="INFO">${GPIO_OVERHEAD} = {'time': [0.018029625, 0.018041222, 0.018053569, 0.018061681, 0.018069569, 0.018082917, 0.018097625, 0.018115153, 0.018126917, 0.018136083, 0.018151042, 0.018162903, 0.018175472, 0.018186181, 0.018199...</msg>
<status status="PASS" starttime="20201115 22:00:14.994" endtime="20201115 22:00:15.001"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:15.006" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201115 22:00:15.004" endtime="20201115 22:00:15.006"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:15.008" level="INFO">VALUE: [7.943999999999313e-06, 2.679999999997962e-06, 3.957999999998352e-06, 5.61199999999859e-06, 4.902000000001072e-06, 3.709000000001045e-06, 7.971999999998453e-06, 8.374999999997967e-06, 7.903000000000077e-06, 4.069000000002376e-06, 8.222999999998176e-06, 8.792000000000522e-06, 9.889000000002507e-06, 2.7229999999996146e-06, 9.819000000001188e-06, 4.637999999997783e-06, 6.526999999999228e-06, 8.361000000001867e-06, 7.693999999999063e-06, 9.360999999999398e-06, 5.389000000001476e-06, 7.514000000000132e-06, 7.971999999998453e-06, 9.417000000001147e-06, 9.388999999998537e-06]</msg>
<status status="PASS" starttime="20201115 22:00:15.007" endtime="20201115 22:00:15.009"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.002" endtime="20201115 22:00:15.009"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:15.012" endtime="20201115 22:00:15.013"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:15.015" endtime="20201115 22:00:15.035"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.014" endtime="20201115 22:00:15.036"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.010" endtime="20201115 22:00:15.036"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.676" endtime="20201115 22:00:15.036"></status>
</kw>
<msg timestamp="20201115 22:00:15.037" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:15.044" endtime="20201115 22:00:15.056"></status>
</kw>
<msg timestamp="20201115 22:00:15.056" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:15.043" endtime="20201115 22:00:15.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:15.059" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:15.057" endtime="20201115 22:00:15.059"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:15.060" endtime="20201115 22:00:15.062"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.040" endtime="20201115 22:00:15.062"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.038" endtime="20201115 22:00:15.063"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:15.070" endtime="20201115 22:00:15.337"></status>
</kw>
<msg timestamp="20201115 22:00:15.339" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018066542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018074042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:15.068" endtime="20201115 22:00:15.339"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:15.344" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018066542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018074042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:15.340" endtime="20201115 22:00:15.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:15.345" endtime="20201115 22:00:15.347"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.065" endtime="20201115 22:00:15.348"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.063" endtime="20201115 22:00:15.348"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:15.351" level="INFO">${RESULT} = [{'time': 0.018074042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.499999999997092e-06, 'source_diff': 7.499999999997092e-06}, {'time': 0.018085736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:15.349" endtime="20201115 22:00:15.352"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:15.361" level="INFO">${GPIO_OVERHEAD} = {'time': [0.018074042, 0.018085736, 0.018101167, 0.018113903, 0.018126181, 0.018135667, 0.018150431, 0.018162778, 0.018174222, 0.018185181, 0.018200333, 0.018214514, 0.018232625, 0.018248458, 0.018260...</msg>
<status status="PASS" starttime="20201115 22:00:15.353" endtime="20201115 22:00:15.361"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:15.365" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201115 22:00:15.364" endtime="20201115 22:00:15.366"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:15.368" level="INFO">VALUE: [7.499999999997092e-06, 6.069000000000907e-06, 8.459000000002326e-06, 8.222000000002172e-06, 9.820000000000662e-06, 5.625000000002156e-06, 5.820000000000131e-06, 8.236000000001742e-06, 7.500000000000562e-06, 7.723000000001146e-06, 7.276999999999978e-06, 7.875000000000937e-06, 9.416999999997677e-06, 9.360999999999398e-06, 6.959000000000826e-06, 9.181000000000467e-06, 2.7500000000027502e-06, 4.582999999998977e-06, 9.778000000001952e-06, 5.778000000001421e-06, 7.042000000002241e-06, 9.138999999998287e-06, 3.943999999998782e-06, 2.999999999999531e-06, 5.5839999999994505e-06]</msg>
<status status="PASS" starttime="20201115 22:00:15.366" endtime="20201115 22:00:15.368"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.362" endtime="20201115 22:00:15.369"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:15.371" endtime="20201115 22:00:15.372"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:15.375" endtime="20201115 22:00:15.394"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.373" endtime="20201115 22:00:15.395"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.369" endtime="20201115 22:00:15.395"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.037" endtime="20201115 22:00:15.396"></status>
</kw>
<msg timestamp="20201115 22:00:15.396" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:15.404" endtime="20201115 22:00:15.416"></status>
</kw>
<msg timestamp="20201115 22:00:15.416" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:15.402" endtime="20201115 22:00:15.416"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:15.419" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:15.417" endtime="20201115 22:00:15.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:15.420" endtime="20201115 22:00:15.422"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.400" endtime="20201115 22:00:15.422"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.398" endtime="20201115 22:00:15.423"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:15.429" endtime="20201115 22:00:15.696"></status>
</kw>
<msg timestamp="20201115 22:00:15.698" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018083278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018089486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:15.428" endtime="20201115 22:00:15.698"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:15.704" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018083278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018089486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:15.699" endtime="20201115 22:00:15.704"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:15.705" endtime="20201115 22:00:15.707"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.425" endtime="20201115 22:00:15.707"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.423" endtime="20201115 22:00:15.708"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:15.711" level="INFO">${RESULT} = [{'time': 0.018089486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.2079999999971325e-06, 'source_diff': 6.2079999999971325e-06}, {'time': 0.018103278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:15.708" endtime="20201115 22:00:15.711"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:15.720" level="INFO">${GPIO_OVERHEAD} = {'time': [0.018089486, 0.018103278, 0.018116389, 0.01813175, 0.018145694, 0.018155222, 0.018172069, 0.018182972, 0.018194597, 0.018211639, 0.018224667, 0.018241292, 0.018255292, 0.018261125, 0.0182715...</msg>
<status status="PASS" starttime="20201115 22:00:15.712" endtime="20201115 22:00:15.720"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:15.725" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201115 22:00:15.723" endtime="20201115 22:00:15.726"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:15.728" level="INFO">VALUE: [6.2079999999971325e-06, 9.681000000000967e-06, 8.555999999999842e-06, 6.097000000000047e-06, 4.097000000001516e-06, 3.2219999999971716e-06, 6.9719999999974525e-06, 7.499999999997092e-06, 8.153000000000327e-06, 7.222000000001172e-06, 9.347999999999301e-06, 9.167000000000897e-06, 5.8479999999992704e-06, 2.681000000000905e-06, 4.902000000001072e-06, 9.583999999999981e-06, 2.52800000000164e-06, 3.929999999999212e-06, 9.124999999998717e-06, 3.4029999999990457e-06, 6.792000000001991e-06, 3.611000000000586e-06, 8.582999999999508e-06, 8.403000000000577e-06, 2.749999999999281e-06]</msg>
<status status="PASS" starttime="20201115 22:00:15.726" endtime="20201115 22:00:15.728"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.721" endtime="20201115 22:00:15.728"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:15.731" endtime="20201115 22:00:15.732"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:15.734" endtime="20201115 22:00:15.754"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.733" endtime="20201115 22:00:15.754"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.729" endtime="20201115 22:00:15.755"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.397" endtime="20201115 22:00:15.755"></status>
</kw>
<msg timestamp="20201115 22:00:15.756" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:15.764" endtime="20201115 22:00:15.776"></status>
</kw>
<msg timestamp="20201115 22:00:15.777" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:15.762" endtime="20201115 22:00:15.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:15.779" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:15.778" endtime="20201115 22:00:15.779"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:15.780" endtime="20201115 22:00:15.782"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.759" endtime="20201115 22:00:15.782"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.757" endtime="20201115 22:00:15.783"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:15.790" endtime="20201115 22:00:16.055"></status>
</kw>
<msg timestamp="20201115 22:00:16.057" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018151736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018156097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:15.788" endtime="20201115 22:00:16.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:16.063" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018151736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018156097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:16.058" endtime="20201115 22:00:16.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:16.064" endtime="20201115 22:00:16.065"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.785" endtime="20201115 22:00:16.066"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.783" endtime="20201115 22:00:16.066"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:16.070" level="INFO">${RESULT} = [{'time': 0.018156097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.360999999997867e-06, 'source_diff': 4.360999999997867e-06}, {'time': 0.018169111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:16.067" endtime="20201115 22:00:16.070"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:16.080" level="INFO">${GPIO_OVERHEAD} = {'time': [0.018156097, 0.018169111, 0.018184236, 0.018195139, 0.018206069, 0.018217431, 0.018233097, 0.018243292, 0.018254903, 0.018270097, 0.0182815, 0.018290708, 0.018298069, 0.018312528, 0.01832677...</msg>
<status status="PASS" starttime="20201115 22:00:16.071" endtime="20201115 22:00:16.080"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:16.084" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201115 22:00:16.083" endtime="20201115 22:00:16.085"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:16.087" level="INFO">VALUE: [4.360999999997867e-06, 7.444000000002282e-06, 9.346999999999828e-06, 3.6949999999980054e-06, 8.415999999997203e-06, 8.236999999997746e-06, 8.111000000001617e-06, 5.07000000000285e-06, 6.959000000000826e-06, 8.707999999999633e-06, 7.680999999998966e-06, 5.1249999999981866e-06, 2.999999999999531e-06, 6.070000000000381e-06, 8.402999999997107e-06, 8.917000000000647e-06, 4.34800000000124e-06, 8.860999999998898e-06, 4.652000000000822e-06, 3.02800000000214e-06, 3.875000000000406e-06, 8.875000000001937e-06, 8.945000000003256e-06, 2.999999999999531e-06, 6.806000000001561e-06]</msg>
<status status="PASS" starttime="20201115 22:00:16.085" endtime="20201115 22:00:16.087"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.081" endtime="20201115 22:00:16.088"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:16.090" endtime="20201115 22:00:16.091"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:16.093" endtime="20201115 22:00:16.113"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.092" endtime="20201115 22:00:16.113"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.088" endtime="20201115 22:00:16.114"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.756" endtime="20201115 22:00:16.114"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.266" endtime="20201115 22:00:16.115"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:16.119" endtime="20201115 22:00:16.139"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.118" endtime="20201115 22:00:16.140"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.116" endtime="20201115 22:00:16.140"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:00:11.138" endtime="20201115 22:00:16.141" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:16.149" endtime="20201115 22:00:16.168"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.147" endtime="20201115 22:00:16.169"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:16.182" endtime="20201115 22:00:19.204"></status>
</kw>
<msg timestamp="20201115 22:00:19.205" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:16.181" endtime="20201115 22:00:19.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:19.210" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:19.207" endtime="20201115 22:00:19.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:00:19.217" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:00:19.213" endtime="20201115 22:00:19.218"></status>
</kw>
<status status="FAIL" starttime="20201115 22:00:16.178" endtime="20201115 22:00:19.219"></status>
</kw>
<status status="FAIL" starttime="20201115 22:00:16.176" endtime="20201115 22:00:19.220"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.174" endtime="20201115 22:00:19.221"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:00:19.229" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:00:19.227" endtime="20201115 22:00:19.230"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.223" endtime="20201115 22:00:19.231"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.173" endtime="20201115 22:00:19.232"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.173" endtime="20201115 22:00:19.232"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:19.234" endtime="20201115 22:00:19.238"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.171" endtime="20201115 22:00:19.239"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.170" endtime="20201115 22:00:19.240"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.146" endtime="20201115 22:00:19.240"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer Now Overhead</arg>
</arguments>
<msg timestamp="20201115 22:00:19.246" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:19.265" endtime="20201115 22:00:19.281"></status>
</kw>
<msg timestamp="20201115 22:00:19.282" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:19.261" endtime="20201115 22:00:19.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:19.288" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:19.285" endtime="20201115 22:00:19.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:19.290" endtime="20201115 22:00:19.294"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.253" endtime="20201115 22:00:19.295"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.250" endtime="20201115 22:00:19.296"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:19.310" endtime="20201115 22:00:19.606"></status>
</kw>
<msg timestamp="20201115 22:00:19.610" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.107661042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.107662028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:19.307" endtime="20201115 22:00:19.610"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:19.618" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.107661042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.107662028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:19.611" endtime="20201115 22:00:19.619"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:19.620" endtime="20201115 22:00:19.621"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.301" endtime="20201115 22:00:19.622"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.297" endtime="20201115 22:00:19.622"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:19.627" level="INFO">${RESULT} = [{'time': 3.107662028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.859999998695912e-07, 'source_diff': 9.859999998695912e-07}, {'time': 3.107666153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:19.623" endtime="20201115 22:00:19.627"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:19.640" level="INFO">${OVERHEAD} = {'time': [3.107662028, 3.107666153, 3.107671514, 3.107679056, 3.107683014, 3.107690819, 3.107695181, 3.107698681, 3.107702903, 3.107709736, 3.107717778, 3.107721431, 3.107728028, 3.107736444, 3.107744...</msg>
<status status="PASS" starttime="20201115 22:00:19.628" endtime="20201115 22:00:19.641"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:19.645" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201115 22:00:19.644" endtime="20201115 22:00:19.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:19.648" level="INFO">VALUE: [9.859999998695912e-07, 9.589999998560472e-07, 9.58000000217396e-07, 9.999999996956888e-07, 9.720000000434936e-07, 9.860000003136804e-07, 9.73000000126234e-07, 9.589999998560472e-07, 9.859999998695912e-07, 9.859999998695912e-07, 9.859999998695912e-07, 9.869999999523316e-07, 9.859999998695912e-07, 9.720000000434936e-07, 9.720000000434936e-07, 9.859999998695912e-07, 1.0139999999658755e-06, 9.720000000434936e-07, 9.869999999523316e-07, 1.000000000139778e-06, 1.000000000139778e-06, 9.719999995994044e-07, 9.300000001211117e-07, 9.720000000434936e-07, 9.720000000434936e-07, 9.58000000217396e-07, 9.439999999472093e-07, 9.579999997733069e-07, 9.860000003136804e-07, 1.000000000139778e-06, 9.859999998695912e-07, 9.859999998695912e-07, 9.720000000434936e-07, 9.859999998695912e-07, 9.859999998695912e-07, 9.579999997733069e-07, 9.030000001075678e-07, 9.720000000434936e-07, 9.579999997733069e-07, 9.299999996770225e-07, 9.58000000217396e-07, 9.579999997733069e-07, 1.0420000000621599e-06, 9.729999996821448e-07, 9.729999996821448e-07, 1.000000000139778e-06, 9.720000000434936e-07, 9.859999998695912e-07, 9.860000003136804e-07, 1.0139999999658755e-06]</msg>
<status status="PASS" starttime="20201115 22:00:19.646" endtime="20201115 22:00:19.649"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.641" endtime="20201115 22:00:19.649"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:19.652" endtime="20201115 22:00:19.653"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:19.655" endtime="20201115 22:00:19.675"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.654" endtime="20201115 22:00:19.675"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.650" endtime="20201115 22:00:19.676"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.247" endtime="20201115 22:00:19.676"></status>
</kw>
<msg timestamp="20201115 22:00:19.676" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:19.684" endtime="20201115 22:00:19.697"></status>
</kw>
<msg timestamp="20201115 22:00:19.697" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:19.683" endtime="20201115 22:00:19.698"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:19.700" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:19.699" endtime="20201115 22:00:19.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:19.701" endtime="20201115 22:00:19.703"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.680" endtime="20201115 22:00:19.703"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.678" endtime="20201115 22:00:19.704"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:19.711" endtime="20201115 22:00:19.997"></status>
</kw>
<msg timestamp="20201115 22:00:20.000" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019350792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019351778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:19.709" endtime="20201115 22:00:20.001"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:20.009" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019350792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019351778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:20.002" endtime="20201115 22:00:20.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:20.010" endtime="20201115 22:00:20.012"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.706" endtime="20201115 22:00:20.013"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.704" endtime="20201115 22:00:20.013"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:20.017" level="INFO">${RESULT} = [{'time': 0.019351778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.860000000014302e-07, 'source_diff': 9.860000000014302e-07}, {'time': 0.019362403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:20.014" endtime="20201115 22:00:20.018"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:20.031" level="INFO">${OVERHEAD} = {'time': [0.019351778, 0.019362403, 0.019368764, 0.019374167, 0.019382681, 0.019386111, 0.019394764, 0.019402069, 0.019410514, 0.019417986, 0.019423389, 0.019426819, 0.019431528, 0.019437389, 0.019444...</msg>
<status status="PASS" starttime="20201115 22:00:20.018" endtime="20201115 22:00:20.032"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:20.036" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201115 22:00:20.035" endtime="20201115 22:00:20.037"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:20.039" level="INFO">VALUE: [9.860000000014302e-07, 9.59000000001764e-07, 9.719999999983908e-07, 9.73000000001334e-07, 9.169999999995848e-07, 9.580000000022904e-07, 9.719999999983908e-07, 9.720000000018603e-07, 9.860000000014302e-07, 9.860000000014302e-07, 9.719999999983908e-07, 9.860000000014302e-07, 1.000000000001e-06, 9.719999999983908e-07, 9.580000000022904e-07, 9.719999999983908e-07, 9.720000000018603e-07, 9.859999999979607e-07, 9.860000000014302e-07, 9.73000000001334e-07, 9.43999999999251e-07, 9.73000000001334e-07, 9.719999999983908e-07, 9.719999999983908e-07, 9.57999999998821e-07, 9.299999999996811e-07, 9.720000000018603e-07, 9.720000000018603e-07, 9.719999999983908e-07, 9.720000000018603e-07, 9.860000000014302e-07, 9.57999999998821e-07, 1.02800000000014e-06, 9.720000000018603e-07, 9.57999999998821e-07, 9.589999999982945e-07, 9.73000000001334e-07, 9.719999999983908e-07, 9.860000000014302e-07, 9.57999999998821e-07, 9.720000000018603e-07, 9.860000000014302e-07, 9.73000000001334e-07, 9.729999999978645e-07, 9.589999999982945e-07, 9.719999999983908e-07, 9.719999999983908e-07, 9.719999999983908e-07, 9.859999999979607e-07, 9.719999999983908e-07]</msg>
<status status="PASS" starttime="20201115 22:00:20.038" endtime="20201115 22:00:20.040"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.032" endtime="20201115 22:00:20.041"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:20.043" endtime="20201115 22:00:20.045"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:20.047" endtime="20201115 22:00:20.067"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.045" endtime="20201115 22:00:20.067"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.042" endtime="20201115 22:00:20.068"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.677" endtime="20201115 22:00:20.068"></status>
</kw>
<msg timestamp="20201115 22:00:20.068" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:20.076" endtime="20201115 22:00:20.089"></status>
</kw>
<msg timestamp="20201115 22:00:20.089" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:20.075" endtime="20201115 22:00:20.090"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:20.092" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:20.091" endtime="20201115 22:00:20.092"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:20.093" endtime="20201115 22:00:20.095"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.072" endtime="20201115 22:00:20.095"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.070" endtime="20201115 22:00:20.096"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:20.104" endtime="20201115 22:00:20.393"></status>
</kw>
<msg timestamp="20201115 22:00:20.397" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018540528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018541514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:20.102" endtime="20201115 22:00:20.397"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:20.405" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018540528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018541514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:20.398" endtime="20201115 22:00:20.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:20.406" endtime="20201115 22:00:20.408"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.098" endtime="20201115 22:00:20.409"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.097" endtime="20201115 22:00:20.409"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:20.413" level="INFO">${RESULT} = [{'time': 0.018541514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.859999999979607e-07, 'source_diff': 9.859999999979607e-07}, {'time': 0.018547556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:20.410" endtime="20201115 22:00:20.414"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:20.427" level="INFO">${OVERHEAD} = {'time': [0.018541514, 0.018547556, 0.018554319, 0.018564958, 0.018570833, 0.018576889, 0.018580389, 0.018588208, 0.018598583, 0.018607028, 0.018613792, 0.018622458, 0.018628014, 0.018638625, 0.018643...</msg>
<status status="PASS" starttime="20201115 22:00:20.414" endtime="20201115 22:00:20.427"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:20.431" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201115 22:00:20.430" endtime="20201115 22:00:20.432"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:20.434" level="INFO">VALUE: [9.859999999979607e-07, 9.870000000009038e-07, 9.859999999979607e-07, 9.57999999998821e-07, 9.719999999983908e-07, 9.719999999983908e-07, 9.57999999998821e-07, 1.0139999999971006e-06, 9.859999999979607e-07, 1.000000000001e-06, 9.860000000014302e-07, 1.000000000001e-06, 9.719999999983908e-07, 1.01400000000057e-06, 9.860000000014302e-07, 9.720000000018603e-07, 9.720000000018603e-07, 1.0279999999966705e-06, 9.719999999983908e-07, 9.73000000001334e-07, 9.860000000014302e-07, 9.860000000014302e-07, 9.860000000014302e-07, 9.719999999983908e-07, 9.719999999983908e-07, 9.999999999975306e-07, 9.720000000018603e-07, 9.309999999991547e-07, 9.73000000001334e-07, 9.860000000014302e-07, 9.719999999983908e-07, 9.450000000021941e-07, 9.719999999983908e-07, 9.57999999998821e-07, 9.73000000001334e-07, 9.720000000018603e-07, 9.720000000018603e-07, 9.720000000018603e-07, 9.859999999979607e-07, 9.73000000001334e-07, 9.309999999991547e-07, 9.720000000018603e-07, 9.57999999998821e-07, 9.160000000001112e-07, 9.860000000014302e-07, 9.309999999991547e-07, 9.73000000001334e-07, 9.729999999978645e-07, 9.720000000018603e-07, 9.719999999983908e-07]</msg>
<status status="PASS" starttime="20201115 22:00:20.433" endtime="20201115 22:00:20.435"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.428" endtime="20201115 22:00:20.436"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:20.438" endtime="20201115 22:00:20.439"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:20.441" endtime="20201115 22:00:20.461"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.440" endtime="20201115 22:00:20.462"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.436" endtime="20201115 22:00:20.462"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.069" endtime="20201115 22:00:20.462"></status>
</kw>
<msg timestamp="20201115 22:00:20.463" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:20.471" endtime="20201115 22:00:20.483"></status>
</kw>
<msg timestamp="20201115 22:00:20.483" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:20.469" endtime="20201115 22:00:20.483"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:20.486" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:20.484" endtime="20201115 22:00:20.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:20.487" endtime="20201115 22:00:20.489"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.466" endtime="20201115 22:00:20.489"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.464" endtime="20201115 22:00:20.490"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:20.497" endtime="20201115 22:00:20.787"></status>
</kw>
<msg timestamp="20201115 22:00:20.790" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018706903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018707861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:20.495" endtime="20201115 22:00:20.791"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:20.799" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018706903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018707861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:20.792" endtime="20201115 22:00:20.799"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:20.800" endtime="20201115 22:00:20.802"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.492" endtime="20201115 22:00:20.802"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.490" endtime="20201115 22:00:20.803"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:20.807" level="INFO">${RESULT} = [{'time': 0.018707861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.57999999998821e-07, 'source_diff': 9.57999999998821e-07}, {'time': 0.018711056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:00:20.804" endtime="20201115 22:00:20.807"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:20.822" level="INFO">${OVERHEAD} = {'time': [0.018707861, 0.018711056, 0.018721694, 0.018726806, 0.018735458, 0.018742819, 0.018749139, 0.01875875, 0.018768972, 0.018778556, 0.018782681, 0.018787306, 0.018794306, 0.018798681, 0.0188074...</msg>
<status status="PASS" starttime="20201115 22:00:20.808" endtime="20201115 22:00:20.822"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:20.826" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201115 22:00:20.825" endtime="20201115 22:00:20.827"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:20.829" level="INFO">VALUE: [9.57999999998821e-07, 9.73000000001334e-07, 9.720000000018603e-07, 9.869999999974344e-07, 9.57999999998821e-07, 1.0270000000006663e-06, 9.580000000022904e-07, 9.720000000018603e-07, 1.0139999999971006e-06, 9.999999999975306e-07, 9.729999999978645e-07, 9.169999999995848e-07, 9.59000000001764e-07, 9.73000000001334e-07, 9.729999999978645e-07, 9.860000000014302e-07, 9.719999999983908e-07, 9.719999999983908e-07, 9.729999999978645e-07, 9.870000000009038e-07, 9.999999999975306e-07, 9.299999999996811e-07, 9.719999999983908e-07, 9.729999999978645e-07, 9.589999999982945e-07, 9.73000000001334e-07, 9.719999999983908e-07, 1.0419999999997098e-06, 9.73000000001334e-07, 9.580000000022904e-07, 9.73000000001334e-07, 1.0420000000031793e-06, 9.720000000018603e-07, 9.729999999978645e-07, 9.720000000018603e-07, 9.720000000018603e-07, 9.73000000001334e-07, 9.57999999998821e-07, 9.719999999983908e-07, 9.720000000018603e-07, 9.589999999982945e-07, 9.169999999995848e-07, 9.860000000014302e-07, 9.719999999983908e-07, 9.719999999983908e-07, 9.859999999979607e-07, 9.57999999998821e-07, 9.580000000022904e-07, 9.729999999978645e-07, 9.720000000018603e-07]</msg>
<status status="PASS" starttime="20201115 22:00:20.828" endtime="20201115 22:00:20.830"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.823" endtime="20201115 22:00:20.830"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:20.833" endtime="20201115 22:00:20.834"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:20.836" endtime="20201115 22:00:20.856"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.835" endtime="20201115 22:00:20.856"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.831" endtime="20201115 22:00:20.857"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.463" endtime="20201115 22:00:20.857"></status>
</kw>
<msg timestamp="20201115 22:00:20.857" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:20.865" endtime="20201115 22:00:20.876"></status>
</kw>
<msg timestamp="20201115 22:00:20.877" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:20.864" endtime="20201115 22:00:20.877"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:20.879" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:20.878" endtime="20201115 22:00:20.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:20.881" endtime="20201115 22:00:20.882"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.861" endtime="20201115 22:00:20.883"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.859" endtime="20201115 22:00:20.883"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:20.890" endtime="20201115 22:00:21.178"></status>
</kw>
<msg timestamp="20201115 22:00:21.181" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018418347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018419333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:20.888" endtime="20201115 22:00:21.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:21.189" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018418347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018419333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:21.182" endtime="20201115 22:00:21.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:21.191" endtime="20201115 22:00:21.192"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.886" endtime="20201115 22:00:21.193"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.884" endtime="20201115 22:00:21.193"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:21.198" level="INFO">${RESULT} = [{'time': 0.018419333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.859999999979607e-07, 'source_diff': 9.859999999979607e-07}, {'time': 0.018423556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:21.194" endtime="20201115 22:00:21.198"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:21.211" level="INFO">${OVERHEAD} = {'time': [0.018419333, 0.018423556, 0.018429819, 0.018435625, 0.018442181, 0.018446139, 0.018454556, 0.018459972, 0.018467042, 0.018474431, 0.018484986, 0.018488903, 0.018496389, 0.018500403, 0.018507...</msg>
<status status="PASS" starttime="20201115 22:00:21.199" endtime="20201115 22:00:21.212"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:21.216" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201115 22:00:21.215" endtime="20201115 22:00:21.216"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:21.218" level="INFO">VALUE: [9.859999999979607e-07, 9.870000000009038e-07, 9.719999999983908e-07, 9.580000000022904e-07, 9.999999999975306e-07, 9.720000000018603e-07, 9.73000000001334e-07, 9.860000000014302e-07, 9.729999999978645e-07, 1.0419999999997098e-06, 9.57999999998821e-07, 9.860000000014302e-07, 9.859999999979607e-07, 1.02800000000014e-06, 9.59000000001764e-07, 9.719999999983908e-07, 9.450000000021941e-07, 9.57999999998821e-07, 9.580000000022904e-07, 9.719999999983908e-07, 9.719999999983908e-07, 9.73000000001334e-07, 1.000000000001e-06, 9.719999999983908e-07, 9.859999999979607e-07, 9.860000000014302e-07, 9.719999999983908e-07, 9.729999999978645e-07, 9.73000000001334e-07, 1.000000000001e-06, 9.719999999983908e-07, 1.000000000001e-06, 9.73000000001334e-07, 9.860000000014302e-07, 9.73000000001334e-07, 9.719999999983908e-07, 9.719999999983908e-07, 9.73000000001334e-07, 1.000000000001e-06, 9.57999999998821e-07, 9.859999999979607e-07, 9.729999999978645e-07, 9.999999999975306e-07, 9.73000000001334e-07, 9.859999999979607e-07, 9.57999999998821e-07, 9.859999999979607e-07, 9.589999999982945e-07, 9.860000000014302e-07, 9.870000000009038e-07]</msg>
<status status="PASS" starttime="20201115 22:00:21.217" endtime="20201115 22:00:21.219"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.212" endtime="20201115 22:00:21.220"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:21.222" endtime="20201115 22:00:21.224"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:21.226" endtime="20201115 22:00:21.245"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.224" endtime="20201115 22:00:21.246"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.220" endtime="20201115 22:00:21.246"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.858" endtime="20201115 22:00:21.247"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.243" endtime="20201115 22:00:21.247"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:21.252" endtime="20201115 22:00:21.271"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.250" endtime="20201115 22:00:21.272"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.248" endtime="20201115 22:00:21.272"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:00:16.143" endtime="20201115 22:00:21.272" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set List">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:21.280" endtime="20201115 22:00:21.300"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.279" endtime="20201115 22:00:21.301"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:21.315" endtime="20201115 22:00:24.337"></status>
</kw>
<msg timestamp="20201115 22:00:24.338" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:21.313" endtime="20201115 22:00:24.338"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:24.343" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:24.340" endtime="20201115 22:00:24.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:00:24.350" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:00:24.346" endtime="20201115 22:00:24.351"></status>
</kw>
<status status="FAIL" starttime="20201115 22:00:21.310" endtime="20201115 22:00:24.352"></status>
</kw>
<status status="FAIL" starttime="20201115 22:00:21.307" endtime="20201115 22:00:24.353"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.306" endtime="20201115 22:00:24.354"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:00:24.362" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:00:24.361" endtime="20201115 22:00:24.363"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.356" endtime="20201115 22:00:24.363"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.305" endtime="20201115 22:00:24.364"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.305" endtime="20201115 22:00:24.364"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:24.366" endtime="20201115 22:00:24.369"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.303" endtime="20201115 22:00:24.370"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.301" endtime="20201115 22:00:24.371"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.277" endtime="20201115 22:00:24.372"></status>
</kw>
<kw name="${n} IN RANGE [ 25 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:24.378" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:24.388" endtime="20201115 22:00:24.398"></status>
</kw>
<msg timestamp="20201115 22:00:24.399" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:24.387" endtime="20201115 22:00:24.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:24.401" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:24.400" endtime="20201115 22:00:24.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:24.402" endtime="20201115 22:00:24.404"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.383" endtime="20201115 22:00:24.404"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.381" endtime="20201115 22:00:24.405"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:24.412" endtime="20201115 22:00:24.708"></status>
</kw>
<msg timestamp="20201115 22:00:24.711" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.098081722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.098085806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:24.410" endtime="20201115 22:00:24.712"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:24.720" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.098081722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.098085806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:24.712" endtime="20201115 22:00:24.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:24.721" endtime="20201115 22:00:24.723"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.407" endtime="20201115 22:00:24.723"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.406" endtime="20201115 22:00:24.724"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:24.728" level="INFO">${RESULT} = [{'time': 3.098085806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.0839999999597865e-06, 'source_diff': 4.0839999999597865e-06}, {'time': 3.098136042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:24.725" endtime="20201115 22:00:24.728"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:24.742" level="INFO">${OVERHEAD} = {'time': [3.098085806, 3.098136042, 3.098184653, 3.098229889, 3.098274931, 3.098321444, 3.09836775, 3.098418083, 3.098468597, 3.098513389, 3.098559597, 3.098607556, 3.098654722, 3.098700944, 3.0987451...</msg>
<status status="PASS" starttime="20201115 22:00:24.729" endtime="20201115 22:00:24.742"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:24.747" level="INFO">NAME: 00-overhead-1-set</msg>
<status status="PASS" starttime="20201115 22:00:24.746" endtime="20201115 22:00:24.747"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:24.749" level="INFO">VALUE: [4.0839999999597865e-06, 4.056000000307591e-06, 4.056000000307591e-06, 3.986000000288925e-06, 4.028000000211307e-06, 4.027000000128567e-06, 4.0420000000374046e-06, 4.026999999684477e-06, 4.055000000224851e-06, 4.0420000000374046e-06, 4.027999999767218e-06, 4.0420000000374046e-06, 4.028000000211307e-06, 4.040999999954664e-06, 4.027999999767218e-06, 3.9579999997485515e-06, 4.027999999767218e-06, 4.026999999684477e-06, 4.01399999994112e-06, 4.01399999994112e-06, 4.028000000211307e-06, 4.027999999767218e-06, 4.041000000398753e-06, 4.040999999954664e-06, 4.056000000307591e-06, 4.040999999954664e-06, 4.0420000000374046e-06, 4.01399999994112e-06, 3.958000000192641e-06, 4.027999999767218e-06, 4.040999999954664e-06, 4.0420000000374046e-06, 4.0420000000374046e-06, 4.027000000128567e-06, 4.054999999780762e-06, 4.027999999767218e-06, 4.027999999767218e-06, 4.055999999863502e-06, 4.054999999780762e-06, 4.0420000000374046e-06, 4.040999999954664e-06, 4.056000000307591e-06, 4.027999999767218e-06, 4.054999999780762e-06, 4.040999999954664e-06, 3.985999999844836e-06, 4.0140000003852094e-06, 4.0420000000374046e-06, 4.040999999954664e-06, 4.000000000115023e-06]</msg>
<status status="PASS" starttime="20201115 22:00:24.748" endtime="20201115 22:00:24.750"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.743" endtime="20201115 22:00:24.750"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:24.753" endtime="20201115 22:00:24.754"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:24.756" endtime="20201115 22:00:24.776"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.754" endtime="20201115 22:00:24.776"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.751" endtime="20201115 22:00:24.777"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.379" endtime="20201115 22:00:24.777"></status>
</kw>
<msg timestamp="20201115 22:00:24.778" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:24.787" endtime="20201115 22:00:24.800"></status>
</kw>
<msg timestamp="20201115 22:00:24.801" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:24.785" endtime="20201115 22:00:24.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:24.803" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:24.802" endtime="20201115 22:00:24.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:24.804" endtime="20201115 22:00:24.806"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.783" endtime="20201115 22:00:24.807"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.780" endtime="20201115 22:00:24.807"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:24.814" endtime="20201115 22:00:25.101"></status>
</kw>
<msg timestamp="20201115 22:00:25.104" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021655556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021659625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:24.812" endtime="20201115 22:00:25.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:25.112" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021655556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021659625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:25.105" endtime="20201115 22:00:25.113"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:25.114" endtime="20201115 22:00:25.115"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.810" endtime="20201115 22:00:25.116"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.808" endtime="20201115 22:00:25.116"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:25.121" level="INFO">${RESULT} = [{'time': 0.021659625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.068999999998907e-06, 'source_diff': 4.068999999998907e-06}, {'time': 0.021708458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:25.117" endtime="20201115 22:00:25.121"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:25.134" level="INFO">${OVERHEAD} = {'time': [0.021659625, 0.021708458, 0.021757361, 0.021806736, 0.021855944, 0.021901931, 0.021953222, 0.022000653, 0.022046611, 0.022096181, 0.022143639, 0.022191625, 0.022237417, 0.022288486, 0.022339...</msg>
<status status="PASS" starttime="20201115 22:00:25.122" endtime="20201115 22:00:25.134"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:25.139" level="INFO">NAME: 00-overhead-1-set</msg>
<status status="PASS" starttime="20201115 22:00:25.138" endtime="20201115 22:00:25.139"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:25.141" level="INFO">VALUE: [4.068999999998907e-06, 4.068999999998907e-06, 4.041999999999241e-06, 4.014000000000101e-06, 4.1109999999976166e-06, 4.041999999999241e-06, 4.040999999999767e-06, 4.0559999999988106e-06, 4.041999999999241e-06, 4.041999999999241e-06, 4.027999999999671e-06, 4.0559999999988106e-06, 4.027999999999671e-06, 4.027999999999671e-06, 4.027999999999671e-06, 4.054999999999337e-06, 4.027999999999671e-06, 4.027999999999671e-06, 4.040999999999767e-06, 4.040999999999767e-06, 4.027999999999671e-06, 4.041999999999241e-06, 4.027000000000197e-06, 4.027999999999671e-06, 4.013000000000627e-06, 4.0559999999988106e-06, 4.055000000002806e-06, 4.041999999999241e-06, 4.041999999999241e-06, 4.041999999999241e-06, 4.041999999999241e-06, 4.027999999999671e-06, 4.027999999999671e-06, 4.040999999999767e-06, 4.014000000000101e-06, 3.972000000001391e-06, 4.041999999999241e-06, 4.111000000001086e-06, 3.971999999997922e-06, 3.958000000001821e-06, 4.014000000000101e-06, 4.068999999998907e-06, 4.041999999999241e-06, 4.027999999999671e-06, 4.027000000000197e-06, 4.04200000000271e-06, 4.041999999999241e-06, 4.040999999999767e-06, 4.014000000000101e-06, 4.041999999999241e-06]</msg>
<status status="PASS" starttime="20201115 22:00:25.140" endtime="20201115 22:00:25.142"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.135" endtime="20201115 22:00:25.142"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:25.145" endtime="20201115 22:00:25.147"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:25.149" endtime="20201115 22:00:25.168"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.147" endtime="20201115 22:00:25.169"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.143" endtime="20201115 22:00:25.170"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.778" endtime="20201115 22:00:25.170"></status>
</kw>
<msg timestamp="20201115 22:00:25.170" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:25.180" endtime="20201115 22:00:25.194"></status>
</kw>
<msg timestamp="20201115 22:00:25.194" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:25.178" endtime="20201115 22:00:25.194"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:25.197" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:25.195" endtime="20201115 22:00:25.197"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:25.198" endtime="20201115 22:00:25.199"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.175" endtime="20201115 22:00:25.200"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.173" endtime="20201115 22:00:25.200"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:25.207" endtime="20201115 22:00:25.496"></status>
</kw>
<msg timestamp="20201115 22:00:25.499" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021838042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021842083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:25.206" endtime="20201115 22:00:25.500"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:25.508" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021838042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021842083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:25.501" endtime="20201115 22:00:25.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:25.509" endtime="20201115 22:00:25.511"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.203" endtime="20201115 22:00:25.511"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.201" endtime="20201115 22:00:25.512"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:25.516" level="INFO">${RESULT} = [{'time': 0.021842083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.0410000000032364e-06, 'source_diff': 4.0410000000032364e-06}, {'time': 0.021886681, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:25.513" endtime="20201115 22:00:25.516"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:25.530" level="INFO">${OVERHEAD} = {'time': [0.021842083, 0.021886681, 0.021934417, 0.021979264, 0.022026986, 0.022077819, 0.02212425, 0.022168847, 0.022213667, 0.022260444, 0.022308556, 0.022359778, 0.022407722, 0.022452222, 0.0225010...</msg>
<status status="PASS" starttime="20201115 22:00:25.517" endtime="20201115 22:00:25.530"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:25.534" level="INFO">NAME: 00-overhead-1-set</msg>
<status status="PASS" starttime="20201115 22:00:25.533" endtime="20201115 22:00:25.535"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:25.537" level="INFO">VALUE: [4.0410000000032364e-06, 4.04200000000271e-06, 4.05600000000228e-06, 4.041999999999241e-06, 4.041999999999241e-06, 4.054999999999337e-06, 4.014000000000101e-06, 4.054999999999337e-06, 4.027999999999671e-06, 4.040999999999767e-06, 4.027999999999671e-06, 4.014000000000101e-06, 4.083000000001946e-06, 4.040999999999767e-06, 4.027999999999671e-06, 4.02800000000314e-06, 4.0699999999983805e-06, 4.027999999999671e-06, 4.040999999999767e-06, 4.040999999999767e-06, 4.0410000000032364e-06, 4.027999999999671e-06, 4.027000000000197e-06, 4.014000000000101e-06, 4.040999999999767e-06, 4.027999999999671e-06, 4.027999999999671e-06, 4.027999999999671e-06, 4.041999999999241e-06, 4.027000000000197e-06, 4.027999999999671e-06, 4.096999999998047e-06, 4.040999999999767e-06, 4.040999999999767e-06, 4.041999999999241e-06, 4.041999999999241e-06, 4.027999999999671e-06, 4.0559999999988106e-06, 4.068999999998907e-06, 4.027999999999671e-06, 3.9859999999974915e-06, 4.041999999999241e-06, 4.040999999999767e-06, 4.068999999998907e-06, 4.04200000000271e-06, 4.041999999999241e-06, 4.027999999999671e-06, 4.040999999999767e-06, 4.041999999999241e-06, 4.054999999999337e-06]</msg>
<status status="PASS" starttime="20201115 22:00:25.536" endtime="20201115 22:00:25.538"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.531" endtime="20201115 22:00:25.538"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:25.541" endtime="20201115 22:00:25.542"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:25.544" endtime="20201115 22:00:25.564"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.543" endtime="20201115 22:00:25.564"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.539" endtime="20201115 22:00:25.565"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.171" endtime="20201115 22:00:25.565"></status>
</kw>
<msg timestamp="20201115 22:00:25.566" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:25.575" endtime="20201115 22:00:25.586"></status>
</kw>
<msg timestamp="20201115 22:00:25.587" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:25.573" endtime="20201115 22:00:25.587"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:25.590" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:25.588" endtime="20201115 22:00:25.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:25.591" endtime="20201115 22:00:25.592"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.570" endtime="20201115 22:00:25.593"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.568" endtime="20201115 22:00:25.593"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:25.600" endtime="20201115 22:00:25.888"></status>
</kw>
<msg timestamp="20201115 22:00:25.891" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020427417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020431458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:25.599" endtime="20201115 22:00:25.891"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:25.899" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020427417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020431458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:25.892" endtime="20201115 22:00:25.900"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:25.901" endtime="20201115 22:00:25.902"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.596" endtime="20201115 22:00:25.903"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.594" endtime="20201115 22:00:25.903"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:25.908" level="INFO">${RESULT} = [{'time': 0.020431458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.040999999999767e-06, 'source_diff': 4.040999999999767e-06}, {'time': 0.020481014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:25.904" endtime="20201115 22:00:25.908"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:25.921" level="INFO">${OVERHEAD} = {'time': [0.020431458, 0.020481014, 0.020527806, 0.020575972, 0.020621722, 0.020672792, 0.020721611, 0.020770944, 0.020815972, 0.020861764, 0.020911389, 0.020957264, 0.021001306, 0.021052097, 0.021097...</msg>
<status status="PASS" starttime="20201115 22:00:25.909" endtime="20201115 22:00:25.921"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:25.926" level="INFO">NAME: 00-overhead-1-set</msg>
<status status="PASS" starttime="20201115 22:00:25.925" endtime="20201115 22:00:25.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:25.929" level="INFO">VALUE: [4.040999999999767e-06, 4.041999999999241e-06, 4.000000000000531e-06, 4.000000000000531e-06, 4.027999999999671e-06, 4.041999999999241e-06, 4.041999999999241e-06, 4.054999999999337e-06, 4.054999999999337e-06, 4.014000000000101e-06, 4.027999999999671e-06, 4.096999999998047e-06, 3.973000000000865e-06, 4.014000000000101e-06, 4.013999999996631e-06, 4.041999999999241e-06, 4.055000000002806e-06, 4.027999999999671e-06, 4.054999999999337e-06, 4.027999999999671e-06, 4.027999999999671e-06, 4.0559999999988106e-06, 4.041999999999241e-06, 3.9999999999970615e-06, 4.040999999999767e-06, 4.02800000000314e-06, 4.027000000000197e-06, 4.041999999999241e-06, 4.0559999999988106e-06, 4.083000000001946e-06, 4.0559999999988106e-06, 4.041999999999241e-06, 4.027999999999671e-06, 4.027999999999671e-06, 4.040999999999767e-06, 4.000000000000531e-06, 4.027999999999671e-06, 4.041999999999241e-06, 4.041999999999241e-06, 4.040999999999767e-06, 4.02800000000314e-06, 4.027000000000197e-06, 4.027999999999671e-06, 4.027000000000197e-06, 4.0699999999983805e-06, 4.027999999999671e-06, 4.02800000000314e-06, 4.04200000000271e-06, 4.027999999999671e-06, 4.027999999999671e-06]</msg>
<status status="PASS" starttime="20201115 22:00:25.927" endtime="20201115 22:00:25.929"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.922" endtime="20201115 22:00:25.930"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:25.932" endtime="20201115 22:00:25.934"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:25.936" endtime="20201115 22:00:25.955"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.934" endtime="20201115 22:00:25.956"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.931" endtime="20201115 22:00:25.956"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.566" endtime="20201115 22:00:25.957"></status>
</kw>
<msg timestamp="20201115 22:00:25.957" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:25.966" endtime="20201115 22:00:25.980"></status>
</kw>
<msg timestamp="20201115 22:00:25.980" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:25.965" endtime="20201115 22:00:25.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:25.983" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:25.981" endtime="20201115 22:00:25.983"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:25.984" endtime="20201115 22:00:25.986"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.962" endtime="20201115 22:00:25.986"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.960" endtime="20201115 22:00:25.987"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:25.993" endtime="20201115 22:00:26.281"></status>
</kw>
<msg timestamp="20201115 22:00:26.284" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021157875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021161917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:25.992" endtime="20201115 22:00:26.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:26.292" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021157875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021161917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:26.285" endtime="20201115 22:00:26.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:26.294" endtime="20201115 22:00:26.295"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.989" endtime="20201115 22:00:26.296"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.987" endtime="20201115 22:00:26.296"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:26.301" level="INFO">${RESULT} = [{'time': 0.021161917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.041999999999241e-06, 'source_diff': 4.041999999999241e-06}, {'time': 0.021207722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:26.297" endtime="20201115 22:00:26.301"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:26.314" level="INFO">${OVERHEAD} = {'time': [0.021161917, 0.021207722, 0.021256167, 0.021302931, 0.021347556, 0.021392583, 0.021439056, 0.021486764, 0.021537986, 0.02158325, 0.021634306, 0.021682681, 0.021730931, 0.021778792, 0.0218271...</msg>
<status status="PASS" starttime="20201115 22:00:26.302" endtime="20201115 22:00:26.314"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:26.319" level="INFO">NAME: 00-overhead-1-set</msg>
<status status="PASS" starttime="20201115 22:00:26.318" endtime="20201115 22:00:26.319"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:26.321" level="INFO">VALUE: [4.041999999999241e-06, 4.027999999999671e-06, 4.041999999999241e-06, 4.041999999999241e-06, 4.000000000000531e-06, 4.027000000000197e-06, 4.04200000000271e-06, 4.041999999999241e-06, 4.027999999999671e-06, 3.971999999997922e-06, 4.041999999999241e-06, 4.014000000000101e-06, 4.11199999999709e-06, 4.07000000000185e-06, 4.027999999999671e-06, 4.027999999999671e-06, 4.040999999999767e-06, 4.027999999999671e-06, 4.027000000000197e-06, 4.027999999999671e-06, 4.054999999999337e-06, 4.027999999999671e-06, 4.05600000000228e-06, 4.054999999999337e-06, 4.027999999999671e-06, 4.000000000000531e-06, 4.054999999999337e-06, 4.041999999999241e-06, 4.041999999999241e-06, 4.04200000000271e-06, 4.040999999999767e-06, 4.027999999999671e-06, 4.027999999999671e-06, 4.02800000000314e-06, 4.041999999999241e-06, 4.0559999999988106e-06, 4.055000000002806e-06, 4.027999999999671e-06, 4.027999999999671e-06, 4.000000000000531e-06, 4.111000000001086e-06, 4.068999999998907e-06, 4.040999999999767e-06, 4.041999999999241e-06, 4.041999999999241e-06, 4.041999999999241e-06, 4.027999999999671e-06, 4.068999999998907e-06, 4.040999999999767e-06, 4.027999999999671e-06]</msg>
<status status="PASS" starttime="20201115 22:00:26.320" endtime="20201115 22:00:26.322"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.315" endtime="20201115 22:00:26.323"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:26.325" endtime="20201115 22:00:26.327"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:26.329" endtime="20201115 22:00:26.348"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.327" endtime="20201115 22:00:26.349"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.323" endtime="20201115 22:00:26.349"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.958" endtime="20201115 22:00:26.350"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.377" endtime="20201115 22:00:26.350"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.376" endtime="20201115 22:00:26.350"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:26.353" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:26.362" endtime="20201115 22:00:26.373"></status>
</kw>
<msg timestamp="20201115 22:00:26.373" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:26.360" endtime="20201115 22:00:26.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:26.376" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:26.374" endtime="20201115 22:00:26.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:26.377" endtime="20201115 22:00:26.379"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.357" endtime="20201115 22:00:26.379"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.355" endtime="20201115 22:00:26.380"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:26.386" endtime="20201115 22:00:26.673"></status>
</kw>
<msg timestamp="20201115 22:00:26.677" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0227065, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022709333, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:00:26.385" endtime="20201115 22:00:26.677"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:26.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0227065, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022709333, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:00:26.678" endtime="20201115 22:00:26.686"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:26.686" endtime="20201115 22:00:26.688"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.382" endtime="20201115 22:00:26.689"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.380" endtime="20201115 22:00:26.689"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:26.693" level="INFO">${RESULT} = [{'time': 0.022709333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.833000000000696e-06, 'source_diff': 2.833000000000696e-06}, {'time': 0.022760236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:26.690" endtime="20201115 22:00:26.694"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:26.707" level="INFO">${OVERHEAD} = {'time': [0.022709333, 0.022760236, 0.022814583, 0.022871153, 0.022927361, 0.022980972, 0.023036389, 0.023090681, 0.023145875, 0.023203431, 0.023255764, 0.023310222, 0.023361597, 0.023413931, 0.023467...</msg>
<status status="PASS" starttime="20201115 22:00:26.694" endtime="20201115 22:00:26.707"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:26.712" level="INFO">NAME: 00-overhead-2-set</msg>
<status status="PASS" starttime="20201115 22:00:26.711" endtime="20201115 22:00:26.712"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:26.715" level="INFO">VALUE: [2.833000000000696e-06, 2.847000000000266e-06, 2.874999999999406e-06, 2.847000000000266e-06, 2.847000000000266e-06, 2.847000000000266e-06, 2.860999999999836e-06, 2.8059999999975604e-06, 2.860999999999836e-06, 2.8479999999997396e-06, 2.847000000000266e-06, 2.8329999999972266e-06, 2.819000000001126e-06, 2.8059999999975604e-06, 2.8340000000001697e-06, 2.8750000000028753e-06, 2.847000000000266e-06, 2.917000000001585e-06, 2.860999999999836e-06, 2.8479999999997396e-06, 2.8750000000028753e-06, 2.833000000000696e-06, 2.833000000000696e-06, 2.887999999999502e-06, 2.7910000000019863e-06, 2.7779999999984206e-06, 2.847000000000266e-06, 2.860999999999836e-06, 2.847000000000266e-06, 2.8889999999989757e-06, 2.847000000000266e-06, 2.860999999999836e-06, 2.8340000000001697e-06, 2.804999999998087e-06, 2.887999999999502e-06, 2.860999999999836e-06, 2.847000000000266e-06, 2.8479999999997396e-06, 2.847000000000266e-06, 2.80600000000103e-06, 2.847000000000266e-06, 2.8479999999997396e-06, 2.847000000000266e-06, 2.833000000000696e-06, 2.8469999999967965e-06, 2.847000000000266e-06, 2.79200000000146e-06, 2.77800000000189e-06, 2.833000000000696e-06, 2.847000000000266e-06]</msg>
<status status="PASS" starttime="20201115 22:00:26.713" endtime="20201115 22:00:26.715"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.708" endtime="20201115 22:00:26.716"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:26.718" endtime="20201115 22:00:26.720"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:26.722" endtime="20201115 22:00:26.741"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.720" endtime="20201115 22:00:26.742"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.717" endtime="20201115 22:00:26.742"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.353" endtime="20201115 22:00:26.743"></status>
</kw>
<msg timestamp="20201115 22:00:26.743" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:26.752" endtime="20201115 22:00:26.765"></status>
</kw>
<msg timestamp="20201115 22:00:26.766" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:26.751" endtime="20201115 22:00:26.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:26.769" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:26.767" endtime="20201115 22:00:26.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:26.770" endtime="20201115 22:00:26.771"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.748" endtime="20201115 22:00:26.772"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.746" endtime="20201115 22:00:26.772"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:26.779" endtime="20201115 22:00:27.069"></status>
</kw>
<msg timestamp="20201115 22:00:27.072" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020327556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020330417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:26.778" endtime="20201115 22:00:27.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:27.080" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020327556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020330417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:27.073" endtime="20201115 22:00:27.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:27.082" endtime="20201115 22:00:27.083"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.775" endtime="20201115 22:00:27.084"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.773" endtime="20201115 22:00:27.084"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:27.089" level="INFO">${RESULT} = [{'time': 0.020330417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.860999999999836e-06, 'source_diff': 2.860999999999836e-06}, {'time': 0.020384153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:27.085" endtime="20201115 22:00:27.089"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:27.102" level="INFO">${OVERHEAD} = {'time': [0.020330417, 0.020384153, 0.020441792, 0.020495861, 0.020549694, 0.020605819, 0.0206575, 0.020713, 0.020766097, 0.020817181, 0.020870764, 0.020927403, 0.020982569, 0.021036083, 0.021089375, ...</msg>
<status status="PASS" starttime="20201115 22:00:27.090" endtime="20201115 22:00:27.103"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:27.107" level="INFO">NAME: 00-overhead-2-set</msg>
<status status="PASS" starttime="20201115 22:00:27.106" endtime="20201115 22:00:27.108"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:27.110" level="INFO">VALUE: [2.860999999999836e-06, 2.847000000000266e-06, 2.8479999999997396e-06, 2.847000000000266e-06, 2.860999999999836e-06, 2.819000000001126e-06, 2.8329999999972266e-06, 2.847000000000266e-06, 2.903000000002015e-06, 2.8340000000001697e-06, 2.917000000001585e-06, 2.8340000000001697e-06, 2.833000000000696e-06, 2.847000000000266e-06, 2.847000000000266e-06, 2.860999999999836e-06, 2.8479999999997396e-06, 2.8340000000001697e-06, 2.7639999999988507e-06, 2.847000000000266e-06, 2.847000000000266e-06, 2.860999999999836e-06, 2.860999999999836e-06, 2.8200000000006e-06, 2.847000000000266e-06, 2.874999999999406e-06, 2.8469999999967965e-06, 2.860999999999836e-06, 2.819000000001126e-06, 2.847000000000266e-06, 2.847000000000266e-06, 2.804999999998087e-06, 2.847000000000266e-06, 2.847000000000266e-06, 2.833000000000696e-06, 2.860999999999836e-06, 2.7919999999979905e-06, 2.833000000000696e-06, 2.8340000000001697e-06, 2.847000000000266e-06, 2.847000000000266e-06, 2.8340000000001697e-06, 2.8200000000006e-06, 2.860999999999836e-06, 2.833000000000696e-06, 2.917000000001585e-06, 2.889000000002445e-06, 2.819000000001126e-06, 2.917000000001585e-06, 2.8479999999997396e-06]</msg>
<status status="PASS" starttime="20201115 22:00:27.108" endtime="20201115 22:00:27.110"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.104" endtime="20201115 22:00:27.111"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:27.113" endtime="20201115 22:00:27.114"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:27.117" endtime="20201115 22:00:27.136"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.115" endtime="20201115 22:00:27.137"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.111" endtime="20201115 22:00:27.137"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.743" endtime="20201115 22:00:27.138"></status>
</kw>
<msg timestamp="20201115 22:00:27.138" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:27.147" endtime="20201115 22:00:27.159"></status>
</kw>
<msg timestamp="20201115 22:00:27.160" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:27.146" endtime="20201115 22:00:27.160"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:27.162" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:27.161" endtime="20201115 22:00:27.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:27.163" endtime="20201115 22:00:27.165"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.143" endtime="20201115 22:00:27.166"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.141" endtime="20201115 22:00:27.166"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:27.173" endtime="20201115 22:00:27.464"></status>
</kw>
<msg timestamp="20201115 22:00:27.467" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020789458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020792264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:27.171" endtime="20201115 22:00:27.467"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:27.476" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020789458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020792264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:27.468" endtime="20201115 22:00:27.476"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:27.477" endtime="20201115 22:00:27.479"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.169" endtime="20201115 22:00:27.479"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.167" endtime="20201115 22:00:27.480"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:27.484" level="INFO">${RESULT} = [{'time': 0.020792264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.80600000000103e-06, 'source_diff': 2.80600000000103e-06}, {'time': 0.020845375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:00:27.481" endtime="20201115 22:00:27.485"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:27.498" level="INFO">${OVERHEAD} = {'time': [0.020792264, 0.020845375, 0.020899847, 0.020956528, 0.021010278, 0.021067611, 0.021121681, 0.021175917, 0.021227597, 0.021281375, 0.021336528, 0.021388625, 0.021442694, 0.021497, 0.021549153...</msg>
<status status="PASS" starttime="20201115 22:00:27.486" endtime="20201115 22:00:27.498"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:27.503" level="INFO">NAME: 00-overhead-2-set</msg>
<status status="PASS" starttime="20201115 22:00:27.502" endtime="20201115 22:00:27.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:27.505" level="INFO">VALUE: [2.80600000000103e-06, 2.847000000000266e-06, 2.847000000000266e-06, 2.8340000000001697e-06, 2.847000000000266e-06, 2.819000000001126e-06, 2.79200000000146e-06, 2.8200000000006e-06, 2.833000000000696e-06, 2.8750000000028753e-06, 2.8200000000006e-06, 2.833000000000696e-06, 2.847000000000266e-06, 2.847000000000266e-06, 2.847000000000266e-06, 2.847000000000266e-06, 2.847000000000266e-06, 2.833000000000696e-06, 2.833000000000696e-06, 2.860999999999836e-06, 2.8329999999972266e-06, 2.833000000000696e-06, 2.833000000000696e-06, 2.847000000000266e-06, 2.7910000000019863e-06, 2.833000000000696e-06, 2.9169999999981155e-06, 2.860999999999836e-06, 2.8189999999976567e-06, 2.8340000000001697e-06, 2.8340000000001697e-06, 2.8340000000001697e-06, 2.862000000002779e-06, 2.9160000000021113e-06, 2.8059999999975604e-06, 2.847000000000266e-06, 2.8750000000028753e-06, 2.847000000000266e-06, 2.8610000000033053e-06, 2.833000000000696e-06, 2.917000000001585e-06, 2.917000000001585e-06, 2.860999999999836e-06, 2.847000000000266e-06, 2.847000000000266e-06, 2.847000000000266e-06, 2.833000000000696e-06, 2.8329999999972266e-06, 2.8479999999997396e-06, 2.80600000000103e-06]</msg>
<status status="PASS" starttime="20201115 22:00:27.504" endtime="20201115 22:00:27.506"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.499" endtime="20201115 22:00:27.506"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:27.509" endtime="20201115 22:00:27.510"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:27.512" endtime="20201115 22:00:27.532"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.511" endtime="20201115 22:00:27.532"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.507" endtime="20201115 22:00:27.533"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.138" endtime="20201115 22:00:27.533"></status>
</kw>
<msg timestamp="20201115 22:00:27.533" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:27.543" endtime="20201115 22:00:27.556"></status>
</kw>
<msg timestamp="20201115 22:00:27.556" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:27.541" endtime="20201115 22:00:27.556"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:27.559" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:27.557" endtime="20201115 22:00:27.559"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:27.560" endtime="20201115 22:00:27.561"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.538" endtime="20201115 22:00:27.562"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.536" endtime="20201115 22:00:27.562"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:27.569" endtime="20201115 22:00:27.857"></status>
</kw>
<msg timestamp="20201115 22:00:27.860" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020254306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020257181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:27.568" endtime="20201115 22:00:27.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:27.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020254306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020257181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:27.861" endtime="20201115 22:00:27.869"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:27.870" endtime="20201115 22:00:27.872"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.565" endtime="20201115 22:00:27.872"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.563" endtime="20201115 22:00:27.873"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:27.877" level="INFO">${RESULT} = [{'time': 0.020257181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.874999999999406e-06, 'source_diff': 2.874999999999406e-06}, {'time': 0.020314792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:27.873" endtime="20201115 22:00:27.877"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:27.891" level="INFO">${OVERHEAD} = {'time': [0.020257181, 0.020314792, 0.020370458, 0.020428333, 0.020482861, 0.020536792, 0.020594611, 0.020649153, 0.020701319, 0.020751958, 0.020805972, 0.020860236, 0.020911875, 0.020967125, 0.021023...</msg>
<status status="PASS" starttime="20201115 22:00:27.878" endtime="20201115 22:00:27.891"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:27.895" level="INFO">NAME: 00-overhead-2-set</msg>
<status status="PASS" starttime="20201115 22:00:27.894" endtime="20201115 22:00:27.896"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:27.898" level="INFO">VALUE: [2.874999999999406e-06, 2.848000000003209e-06, 2.819000000001126e-06, 2.847000000000266e-06, 2.889000000002445e-06, 2.8340000000001697e-06, 2.847000000000266e-06, 2.860999999999836e-06, 2.847000000000266e-06, 2.833000000000696e-06, 2.860999999999836e-06, 2.889000000002445e-06, 2.847000000000266e-06, 2.819000000001126e-06, 2.847000000000266e-06, 2.8880000000029715e-06, 2.7919999999979905e-06, 2.915999999998642e-06, 2.874999999999406e-06, 2.860999999999836e-06, 2.901999999999072e-06, 2.9029999999985456e-06, 2.8479999999997396e-06, 2.8340000000001697e-06, 2.860999999999836e-06, 2.860999999999836e-06, 2.8189999999976567e-06, 2.8619999999993095e-06, 2.847000000000266e-06, 2.8050000000015562e-06, 2.79200000000146e-06, 2.860999999999836e-06, 2.847000000000266e-06, 2.8479999999997396e-06, 2.860999999999836e-06, 2.847000000000266e-06, 2.847000000000266e-06, 2.833000000000696e-06, 2.847000000000266e-06, 2.8189999999976567e-06, 2.833000000000696e-06, 2.847000000000266e-06, 2.833000000000696e-06, 2.833000000000696e-06, 2.847000000000266e-06, 2.847000000000266e-06, 2.847000000000266e-06, 2.874999999999406e-06, 2.860999999999836e-06, 2.8479999999997396e-06]</msg>
<status status="PASS" starttime="20201115 22:00:27.897" endtime="20201115 22:00:27.898"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.892" endtime="20201115 22:00:27.899"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:27.901" endtime="20201115 22:00:27.903"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:27.905" endtime="20201115 22:00:27.924"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.903" endtime="20201115 22:00:27.925"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.900" endtime="20201115 22:00:27.926"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.534" endtime="20201115 22:00:27.926"></status>
</kw>
<msg timestamp="20201115 22:00:27.926" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:27.935" endtime="20201115 22:00:27.949"></status>
</kw>
<msg timestamp="20201115 22:00:27.949" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:27.934" endtime="20201115 22:00:27.949"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:27.952" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:27.950" endtime="20201115 22:00:27.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:27.953" endtime="20201115 22:00:27.954"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.931" endtime="20201115 22:00:27.955"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.929" endtime="20201115 22:00:27.956"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:27.962" endtime="20201115 22:00:28.250"></status>
</kw>
<msg timestamp="20201115 22:00:28.253" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020443153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020445944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:27.961" endtime="20201115 22:00:28.253"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:28.262" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020443153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020445944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:28.254" endtime="20201115 22:00:28.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:28.263" endtime="20201115 22:00:28.265"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.958" endtime="20201115 22:00:28.265"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.956" endtime="20201115 22:00:28.266"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:28.270" level="INFO">${RESULT} = [{'time': 0.020445944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7910000000019863e-06, 'source_diff': 2.7910000000019863e-06}, {'time': 0.020501111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:28.267" endtime="20201115 22:00:28.270"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:28.284" level="INFO">${OVERHEAD} = {'time': [0.020445944, 0.020501111, 0.020558181, 0.020613861, 0.020667917, 0.020720236, 0.020777583, 0.020835208, 0.020887181, 0.020937792, 0.020989486, 0.021046806, 0.021099375, 0.021155875, 0.021209...</msg>
<status status="PASS" starttime="20201115 22:00:28.271" endtime="20201115 22:00:28.284"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:28.289" level="INFO">NAME: 00-overhead-2-set</msg>
<status status="PASS" starttime="20201115 22:00:28.288" endtime="20201115 22:00:28.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:28.291" level="INFO">VALUE: [2.7910000000019863e-06, 2.860999999999836e-06, 2.8339999999967003e-06, 2.860999999999836e-06, 2.8479999999997396e-06, 2.833000000000696e-06, 2.860999999999836e-06, 2.833000000000696e-06, 2.889000000002445e-06, 2.8340000000001697e-06, 2.8610000000033053e-06, 2.79200000000146e-06, 2.847000000000266e-06, 2.889000000002445e-06, 2.9169999999981155e-06, 2.847000000000266e-06, 2.8329999999972266e-06, 2.860999999999836e-06, 2.833000000000696e-06, 2.847000000000266e-06, 2.833000000000696e-06, 2.860999999999836e-06, 2.8610000000033053e-06, 2.8479999999997396e-06, 2.8339999999967003e-06, 2.833000000000696e-06, 2.847000000000266e-06, 2.847000000000266e-06, 2.860999999999836e-06, 2.860999999999836e-06, 2.847000000000266e-06, 2.847000000000266e-06, 2.847000000000266e-06, 2.847000000000266e-06, 2.847000000000266e-06, 2.8329999999972266e-06, 2.8479999999997396e-06, 2.847000000000266e-06, 2.8340000000001697e-06, 2.860999999999836e-06, 2.847000000000266e-06, 2.8329999999972266e-06, 2.860999999999836e-06, 2.847000000000266e-06, 2.8340000000001697e-06, 2.860999999999836e-06, 2.8340000000001697e-06, 2.833000000000696e-06, 2.8340000000001697e-06, 2.8479999999997396e-06]</msg>
<status status="PASS" starttime="20201115 22:00:28.290" endtime="20201115 22:00:28.292"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.285" endtime="20201115 22:00:28.292"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:28.294" endtime="20201115 22:00:28.296"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:28.298" endtime="20201115 22:00:28.317"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.296" endtime="20201115 22:00:28.318"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.293" endtime="20201115 22:00:28.319"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.927" endtime="20201115 22:00:28.319"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.351" endtime="20201115 22:00:28.319"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.351" endtime="20201115 22:00:28.319"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:28.322" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:28.331" endtime="20201115 22:00:28.343"></status>
</kw>
<msg timestamp="20201115 22:00:28.343" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:28.329" endtime="20201115 22:00:28.343"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:28.346" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:28.344" endtime="20201115 22:00:28.346"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:28.347" endtime="20201115 22:00:28.349"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.326" endtime="20201115 22:00:28.349"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.324" endtime="20201115 22:00:28.350"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:28.357" endtime="20201115 22:00:28.645"></status>
</kw>
<msg timestamp="20201115 22:00:28.648" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023085597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023088694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:28.355" endtime="20201115 22:00:28.648"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:28.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023085597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023088694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:28.649" endtime="20201115 22:00:28.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:28.658" endtime="20201115 22:00:28.659"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.353" endtime="20201115 22:00:28.660"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.351" endtime="20201115 22:00:28.660"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:28.665" level="INFO">${RESULT} = [{'time': 0.023088694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.097000000000516e-06, 'source_diff': 3.097000000000516e-06}, {'time': 0.023146444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:28.661" endtime="20201115 22:00:28.665"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:28.678" level="INFO">${OVERHEAD} = {'time': [0.023088694, 0.023146444, 0.023204736, 0.023264986, 0.023323153, 0.023384472, 0.023442222, 0.023506222, 0.023568736, 0.023633208, 0.023695042, 0.023754958, 0.023818444, 0.023877847, 0.023937...</msg>
<status status="PASS" starttime="20201115 22:00:28.666" endtime="20201115 22:00:28.678"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:28.683" level="INFO">NAME: 00-overhead-3-set</msg>
<status status="PASS" starttime="20201115 22:00:28.682" endtime="20201115 22:00:28.683"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:28.686" level="INFO">VALUE: [3.097000000000516e-06, 3.0829999999974766e-06, 3.111000000000086e-06, 3.097000000000516e-06, 3.111000000000086e-06, 3.097000000000516e-06, 3.0969999999970466e-06, 3.111000000000086e-06, 3.111000000000086e-06, 3.097000000000516e-06, 3.1389999999992257e-06, 3.083000000000946e-06, 3.124999999999656e-06, 3.111000000000086e-06, 3.111000000000086e-06, 3.083000000000946e-06, 3.111000000000086e-06, 3.069000000001376e-06, 3.124999999999656e-06, 3.111000000000086e-06, 3.124999999999656e-06, 3.0840000000004197e-06, 3.1119999999995596e-06, 3.097000000000516e-06, 3.111000000000086e-06, 3.069000000001376e-06, 3.026999999999197e-06, 3.1389999999992257e-06, 3.0969999999970466e-06, 3.097000000000516e-06, 3.124999999999656e-06, 3.0969999999970466e-06, 3.124999999999656e-06, 3.097000000000516e-06, 3.167000000001835e-06, 3.111000000000086e-06, 3.0969999999970466e-06, 3.111000000000086e-06, 3.124999999999656e-06, 3.111000000000086e-06, 3.1660000000023614e-06, 3.1660000000023614e-06, 3.1119999999995596e-06, 3.124999999999656e-06, 3.111000000000086e-06, 3.097000000000516e-06, 3.111000000000086e-06, 3.097000000000516e-06, 3.124999999999656e-06, 3.0979999999999897e-06]</msg>
<status status="PASS" starttime="20201115 22:00:28.684" endtime="20201115 22:00:28.686"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.679" endtime="20201115 22:00:28.686"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:28.689" endtime="20201115 22:00:28.690"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:28.692" endtime="20201115 22:00:28.712"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.691" endtime="20201115 22:00:28.712"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.687" endtime="20201115 22:00:28.713"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.322" endtime="20201115 22:00:28.713"></status>
</kw>
<msg timestamp="20201115 22:00:28.713" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:28.723" endtime="20201115 22:00:28.736"></status>
</kw>
<msg timestamp="20201115 22:00:28.736" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:28.721" endtime="20201115 22:00:28.736"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:28.739" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:28.737" endtime="20201115 22:00:28.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:28.740" endtime="20201115 22:00:28.742"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.718" endtime="20201115 22:00:28.743"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.716" endtime="20201115 22:00:28.743"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:28.750" endtime="20201115 22:00:29.037"></status>
</kw>
<msg timestamp="20201115 22:00:29.040" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020243847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020246958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:28.748" endtime="20201115 22:00:29.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:29.048" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020243847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020246958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:29.041" endtime="20201115 22:00:29.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:29.049" endtime="20201115 22:00:29.051"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.745" endtime="20201115 22:00:29.052"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.744" endtime="20201115 22:00:29.052"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:29.056" level="INFO">${RESULT} = [{'time': 0.020246958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.111000000000086e-06, 'source_diff': 3.111000000000086e-06}, {'time': 0.020309931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:29.053" endtime="20201115 22:00:29.057"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:29.070" level="INFO">${OVERHEAD} = {'time': [0.020246958, 0.020309931, 0.020367917, 0.020425264, 0.020488069, 0.020550431, 0.020613431, 0.020676153, 0.020733736, 0.020791, 0.020855653, 0.020916236, 0.020978125, 0.02104, 0.021099889, 0....</msg>
<status status="PASS" starttime="20201115 22:00:29.057" endtime="20201115 22:00:29.070"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:29.074" level="INFO">NAME: 00-overhead-3-set</msg>
<status status="PASS" starttime="20201115 22:00:29.073" endtime="20201115 22:00:29.075"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:29.077" level="INFO">VALUE: [3.111000000000086e-06, 3.1119999999995596e-06, 3.0840000000004197e-06, 3.111000000000086e-06, 3.097000000000516e-06, 3.124999999999656e-06, 3.139000000002695e-06, 3.07000000000085e-06, 3.179999999998462e-06, 3.124999999999656e-06, 3.124999999999656e-06, 3.111000000000086e-06, 3.124999999999656e-06, 3.111000000000086e-06, 3.097000000000516e-06, 3.1669999999983656e-06, 3.097000000000516e-06, 3.097000000000516e-06, 3.124999999999656e-06, 3.124999999999656e-06, 3.111000000000086e-06, 3.0979999999999897e-06, 3.151999999999322e-06, 3.0839999999969503e-06, 3.097000000000516e-06, 3.111000000000086e-06, 3.111000000000086e-06, 3.124999999999656e-06, 3.111000000000086e-06, 3.097000000000516e-06, 3.097000000000516e-06, 3.111000000000086e-06, 3.097000000000516e-06, 3.124999999999656e-06, 3.097000000000516e-06, 3.0979999999999897e-06, 3.097000000000516e-06, 3.0969999999970466e-06, 3.097000000000516e-06, 3.111000000000086e-06, 3.1250000000031253e-06, 3.097000000000516e-06, 3.083000000000946e-06, 3.097000000000516e-06, 3.111000000000086e-06, 3.0979999999999897e-06, 3.0829999999974766e-06, 3.111000000000086e-06, 3.097000000000516e-06, 3.083000000000946e-06]</msg>
<status status="PASS" starttime="20201115 22:00:29.076" endtime="20201115 22:00:29.078"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.071" endtime="20201115 22:00:29.078"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:29.080" endtime="20201115 22:00:29.082"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:29.084" endtime="20201115 22:00:29.104"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.082" endtime="20201115 22:00:29.104"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.079" endtime="20201115 22:00:29.105"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.714" endtime="20201115 22:00:29.105"></status>
</kw>
<msg timestamp="20201115 22:00:29.105" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:29.115" endtime="20201115 22:00:29.128"></status>
</kw>
<msg timestamp="20201115 22:00:29.129" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:29.113" endtime="20201115 22:00:29.129"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:29.131" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:29.130" endtime="20201115 22:00:29.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:29.133" endtime="20201115 22:00:29.134"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.110" endtime="20201115 22:00:29.135"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.108" endtime="20201115 22:00:29.135"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:29.142" endtime="20201115 22:00:29.430"></status>
</kw>
<msg timestamp="20201115 22:00:29.433" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020797083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020800181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:29.140" endtime="20201115 22:00:29.434"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:29.442" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020797083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020800181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:29.435" endtime="20201115 22:00:29.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:29.443" endtime="20201115 22:00:29.445"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.138" endtime="20201115 22:00:29.446"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.136" endtime="20201115 22:00:29.446"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:29.450" level="INFO">${RESULT} = [{'time': 0.020800181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0979999999999897e-06, 'source_diff': 3.0979999999999897e-06}, {'time': 0.020864681, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:29.447" endtime="20201115 22:00:29.450"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:29.464" level="INFO">${OVERHEAD} = {'time': [0.020800181, 0.020864681, 0.020929139, 0.020989528, 0.021047347, 0.021105792, 0.021168542, 0.021232375, 0.021295097, 0.021352639, 0.021413806, 0.021472347, 0.021532194, 0.021594319, 0.021655...</msg>
<status status="PASS" starttime="20201115 22:00:29.451" endtime="20201115 22:00:29.464"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:29.469" level="INFO">NAME: 00-overhead-3-set</msg>
<status status="PASS" starttime="20201115 22:00:29.468" endtime="20201115 22:00:29.469"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:29.471" level="INFO">VALUE: [3.0979999999999897e-06, 3.1119999999995596e-06, 3.097000000000516e-06, 3.097000000000516e-06, 3.111000000000086e-06, 3.111000000000086e-06, 3.111000000000086e-06, 3.167000000001835e-06, 3.1529999999987957e-06, 3.111000000000086e-06, 3.1119999999995596e-06, 3.1389999999992257e-06, 3.083000000000946e-06, 3.124999999999656e-06, 3.097000000000516e-06, 3.139000000002695e-06, 3.1529999999987957e-06, 3.124999999999656e-06, 3.097000000000516e-06, 3.124999999999656e-06, 3.097000000000516e-06, 3.0979999999999897e-06, 3.111000000000086e-06, 3.097000000000516e-06, 3.0689999999979067e-06, 3.0979999999999897e-06, 3.083000000000946e-06, 3.111000000000086e-06, 3.1119999999995596e-06, 3.111000000000086e-06, 3.1529999999987957e-06, 3.1250000000031253e-06, 3.097000000000516e-06, 3.167000000001835e-06, 3.1660000000023614e-06, 3.111000000000086e-06, 3.083000000000946e-06, 3.111000000000086e-06, 3.097000000000516e-06, 3.111000000000086e-06, 3.069000000001376e-06, 3.097000000000516e-06, 3.069000000001376e-06, 3.0840000000004197e-06, 3.111000000000086e-06, 3.0979999999999897e-06, 3.124999999999656e-06, 3.1529999999987957e-06, 3.0979999999999897e-06, 3.0979999999999897e-06]</msg>
<status status="PASS" starttime="20201115 22:00:29.470" endtime="20201115 22:00:29.472"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.465" endtime="20201115 22:00:29.472"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:29.474" endtime="20201115 22:00:29.476"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:29.478" endtime="20201115 22:00:29.498"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.476" endtime="20201115 22:00:29.498"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.473" endtime="20201115 22:00:29.499"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.106" endtime="20201115 22:00:29.499"></status>
</kw>
<msg timestamp="20201115 22:00:29.500" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:29.509" endtime="20201115 22:00:29.522"></status>
</kw>
<msg timestamp="20201115 22:00:29.523" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:29.507" endtime="20201115 22:00:29.523"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:29.525" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:29.524" endtime="20201115 22:00:29.526"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:29.526" endtime="20201115 22:00:29.528"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.505" endtime="20201115 22:00:29.529"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.502" endtime="20201115 22:00:29.529"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:29.536" endtime="20201115 22:00:29.822"></status>
</kw>
<msg timestamp="20201115 22:00:29.826" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020892347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020895458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:29.534" endtime="20201115 22:00:29.826"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:29.834" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020892347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020895458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:29.827" endtime="20201115 22:00:29.835"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:29.836" endtime="20201115 22:00:29.837"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.532" endtime="20201115 22:00:29.838"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.530" endtime="20201115 22:00:29.838"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:29.843" level="INFO">${RESULT} = [{'time': 0.020895458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.111000000000086e-06, 'source_diff': 3.111000000000086e-06}, {'time': 0.020952861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:29.839" endtime="20201115 22:00:29.843"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:29.856" level="INFO">${OVERHEAD} = {'time': [0.020895458, 0.020952861, 0.021010139, 0.021072236, 0.021132833, 0.021195125, 0.021253333, 0.021316875, 0.021377708, 0.021441181, 0.021504139, 0.021565083, 0.021626944, 0.021684903, 0.021749...</msg>
<status status="PASS" starttime="20201115 22:00:29.844" endtime="20201115 22:00:29.856"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:29.861" level="INFO">NAME: 00-overhead-3-set</msg>
<status status="PASS" starttime="20201115 22:00:29.860" endtime="20201115 22:00:29.861"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:29.863" level="INFO">VALUE: [3.111000000000086e-06, 3.1669999999983656e-06, 3.111000000000086e-06, 3.097000000000516e-06, 3.097000000000516e-06, 3.124999999999656e-06, 3.111000000000086e-06, 3.111000000000086e-06, 3.111000000000086e-06, 3.1119999999995596e-06, 3.0969999999970466e-06, 3.1389999999992257e-06, 3.124999999999656e-06, 3.111000000000086e-06, 3.181000000001405e-06, 3.111000000000086e-06, 3.083000000000946e-06, 3.1250000000031253e-06, 3.0689999999979067e-06, 3.111000000000086e-06, 3.167000000001835e-06, 3.111000000000086e-06, 3.083000000000946e-06, 3.0969999999970466e-06, 3.111000000000086e-06, 3.0979999999999897e-06, 3.083000000000946e-06, 3.0969999999970466e-06, 3.097000000000516e-06, 3.1389999999992257e-06, 3.0689999999979067e-06, 3.124999999999656e-06, 3.097000000000516e-06, 3.0840000000004197e-06, 3.069000000001376e-06, 3.111000000000086e-06, 3.111000000000086e-06, 3.124999999999656e-06, 3.111000000000086e-06, 3.111000000000086e-06, 3.111000000000086e-06, 3.111000000000086e-06, 3.083000000000946e-06, 3.069000000001376e-06, 3.111000000000086e-06, 3.1809999999979355e-06, 3.124999999999656e-06, 3.0689999999979067e-06, 3.111000000000086e-06, 3.097000000000516e-06]</msg>
<status status="PASS" starttime="20201115 22:00:29.862" endtime="20201115 22:00:29.864"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.857" endtime="20201115 22:00:29.864"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:29.867" endtime="20201115 22:00:29.869"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:29.871" endtime="20201115 22:00:29.890"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.869" endtime="20201115 22:00:29.891"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.865" endtime="20201115 22:00:29.891"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.500" endtime="20201115 22:00:29.892"></status>
</kw>
<msg timestamp="20201115 22:00:29.892" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:29.901" endtime="20201115 22:00:29.915"></status>
</kw>
<msg timestamp="20201115 22:00:29.915" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:29.900" endtime="20201115 22:00:29.916"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:29.918" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:29.917" endtime="20201115 22:00:29.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:29.919" endtime="20201115 22:00:29.921"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.897" endtime="20201115 22:00:29.921"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.895" endtime="20201115 22:00:29.922"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:29.928" endtime="20201115 22:00:30.218"></status>
</kw>
<msg timestamp="20201115 22:00:30.221" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020280333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020283514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:29.927" endtime="20201115 22:00:30.221"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:30.229" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020280333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020283514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:30.222" endtime="20201115 22:00:30.230"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:30.231" endtime="20201115 22:00:30.233"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.924" endtime="20201115 22:00:30.233"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.922" endtime="20201115 22:00:30.234"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:30.238" level="INFO">${RESULT} = [{'time': 0.020283514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.1809999999979355e-06, 'source_diff': 3.1809999999979355e-06}, {'time': 0.020343319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:30.234" endtime="20201115 22:00:30.239"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:30.252" level="INFO">${OVERHEAD} = {'time': [0.020283514, 0.020343319, 0.020407764, 0.020470722, 0.020535389, 0.020599625, 0.020659347, 0.020716694, 0.020780222, 0.020843736, 0.020906028, 0.020970736, 0.021033014, 0.021093667, 0.021152...</msg>
<status status="PASS" starttime="20201115 22:00:30.239" endtime="20201115 22:00:30.253"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:30.257" level="INFO">NAME: 00-overhead-3-set</msg>
<status status="PASS" starttime="20201115 22:00:30.256" endtime="20201115 22:00:30.258"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:30.260" level="INFO">VALUE: [3.1809999999979355e-06, 3.040999999998767e-06, 3.1389999999992257e-06, 3.111000000000086e-06, 3.124999999999656e-06, 3.097000000000516e-06, 3.111000000000086e-06, 3.124999999999656e-06, 3.111000000000086e-06, 3.083000000000946e-06, 3.05600000000128e-06, 3.069000000001376e-06, 3.124999999999656e-06, 3.0840000000004197e-06, 3.111000000000086e-06, 3.111000000000086e-06, 3.0840000000004197e-06, 3.124999999999656e-06, 3.111000000000086e-06, 3.05600000000128e-06, 3.111000000000086e-06, 3.139000000002695e-06, 3.1119999999995596e-06, 3.0979999999999897e-06, 3.097000000000516e-06, 3.1389999999992257e-06, 3.0979999999999897e-06, 3.153000000002265e-06, 3.083000000000946e-06, 3.111000000000086e-06, 3.0829999999974766e-06, 3.0979999999999897e-06, 3.0979999999999897e-06, 3.083000000000946e-06, 3.054999999998337e-06, 3.097000000000516e-06, 3.124999999999656e-06, 3.0839999999969503e-06, 3.0969999999970466e-06, 3.1119999999995596e-06, 3.0979999999999897e-06, 3.097000000000516e-06, 3.1250000000031253e-06, 3.165999999998892e-06, 3.111000000000086e-06, 3.111000000000086e-06, 3.124999999999656e-06, 3.0979999999999897e-06, 3.111000000000086e-06, 3.124999999999656e-06]</msg>
<status status="PASS" starttime="20201115 22:00:30.258" endtime="20201115 22:00:30.261"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.253" endtime="20201115 22:00:30.261"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:30.264" endtime="20201115 22:00:30.265"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:30.267" endtime="20201115 22:00:30.287"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.266" endtime="20201115 22:00:30.287"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.262" endtime="20201115 22:00:30.288"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.892" endtime="20201115 22:00:30.288"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.320" endtime="20201115 22:00:30.288"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.320" endtime="20201115 22:00:30.289"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:30.291" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:30.300" endtime="20201115 22:00:30.313"></status>
</kw>
<msg timestamp="20201115 22:00:30.313" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:30.298" endtime="20201115 22:00:30.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:30.316" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:30.314" endtime="20201115 22:00:30.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:30.317" endtime="20201115 22:00:30.319"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.296" endtime="20201115 22:00:30.319"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.293" endtime="20201115 22:00:30.320"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:30.326" endtime="20201115 22:00:30.613"></status>
</kw>
<msg timestamp="20201115 22:00:30.616" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022889736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022893097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:30.325" endtime="20201115 22:00:30.616"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:30.624" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022889736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022893097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:30.617" endtime="20201115 22:00:30.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:30.626" endtime="20201115 22:00:30.627"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.322" endtime="20201115 22:00:30.628"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.320" endtime="20201115 22:00:30.628"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:30.633" level="INFO">${RESULT} = [{'time': 0.022893097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.361000000000336e-06, 'source_diff': 3.361000000000336e-06}, {'time': 0.022963486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:30.629" endtime="20201115 22:00:30.633"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:30.646" level="INFO">${OVERHEAD} = {'time': [0.022893097, 0.022963486, 0.023034389, 0.023102653, 0.023168444, 0.023236694, 0.023306139, 0.023377736, 0.023446153, 0.023516333, 0.023584986, 0.023654597, 0.023725472, 0.023793028, 0.023857...</msg>
<status status="PASS" starttime="20201115 22:00:30.634" endtime="20201115 22:00:30.647"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:30.651" level="INFO">NAME: 00-overhead-4-set</msg>
<status status="PASS" starttime="20201115 22:00:30.650" endtime="20201115 22:00:30.651"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:30.654" level="INFO">VALUE: [3.361000000000336e-06, 3.361000000000336e-06, 3.3469999999972966e-06, 3.3889999999994758e-06, 3.361000000000336e-06, 3.361000000000336e-06, 3.374999999999906e-06, 3.374999999999906e-06, 3.374999999999906e-06, 3.374999999999906e-06, 3.374999999999906e-06, 3.374999999999906e-06, 3.374999999999906e-06, 3.3889999999994758e-06, 3.361000000000336e-06, 3.3059999999980605e-06, 3.361000000000336e-06, 3.361000000000336e-06, 3.374999999999906e-06, 3.374999999999906e-06, 3.374999999999906e-06, 3.374999999999906e-06, 3.30600000000153e-06, 3.3329999999977267e-06, 3.361000000000336e-06, 3.347000000000766e-06, 3.374999999999906e-06, 3.374999999999906e-06, 3.361000000000336e-06, 3.3609999999968665e-06, 3.417000000002085e-06, 3.3469999999972966e-06, 3.361000000000336e-06, 3.319000000001626e-06, 3.3889999999994758e-06, 3.445000000001225e-06, 3.361000000000336e-06, 3.374999999999906e-06, 3.361000000000336e-06, 3.361000000000336e-06, 3.3469999999972966e-06, 3.347000000000766e-06, 3.445000000001225e-06, 3.3889999999994758e-06, 3.374999999999906e-06, 3.374999999999906e-06, 3.29200000000196e-06, 3.3619999999998096e-06, 3.374999999999906e-06, 3.4029999999990457e-06]</msg>
<status status="PASS" starttime="20201115 22:00:30.652" endtime="20201115 22:00:30.654"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.647" endtime="20201115 22:00:30.655"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:30.657" endtime="20201115 22:00:30.659"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:30.661" endtime="20201115 22:00:30.680"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.659" endtime="20201115 22:00:30.681"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.656" endtime="20201115 22:00:30.681"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.291" endtime="20201115 22:00:30.682"></status>
</kw>
<msg timestamp="20201115 22:00:30.682" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:30.691" endtime="20201115 22:00:30.705"></status>
</kw>
<msg timestamp="20201115 22:00:30.706" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:30.690" endtime="20201115 22:00:30.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:30.708" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:30.707" endtime="20201115 22:00:30.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:30.709" endtime="20201115 22:00:30.711"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.687" endtime="20201115 22:00:30.711"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.685" endtime="20201115 22:00:30.712"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:30.719" endtime="20201115 22:00:31.006"></status>
</kw>
<msg timestamp="20201115 22:00:31.010" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020450806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020454167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:30.717" endtime="20201115 22:00:31.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:31.018" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020450806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020454167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:31.011" endtime="20201115 22:00:31.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:31.019" endtime="20201115 22:00:31.021"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.714" endtime="20201115 22:00:31.022"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.713" endtime="20201115 22:00:31.022"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:31.026" level="INFO">${RESULT} = [{'time': 0.020454167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.361000000000336e-06, 'source_diff': 3.361000000000336e-06}, {'time': 0.020518792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:31.023" endtime="20201115 22:00:31.027"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:31.040" level="INFO">${OVERHEAD} = {'time': [0.020454167, 0.020518792, 0.020590542, 0.020659514, 0.020724611, 0.020791431, 0.020862236, 0.020928125, 0.020993278, 0.021064556, 0.021136153, 0.021204819, 0.021273472, 0.021338333, 0.021402...</msg>
<status status="PASS" starttime="20201115 22:00:31.027" endtime="20201115 22:00:31.041"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:31.045" level="INFO">NAME: 00-overhead-4-set</msg>
<status status="PASS" starttime="20201115 22:00:31.044" endtime="20201115 22:00:31.045"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:31.048" level="INFO">VALUE: [3.361000000000336e-06, 3.361000000000336e-06, 3.3480000000002397e-06, 3.361000000000336e-06, 3.319000000001626e-06, 3.3619999999998096e-06, 3.304999999998587e-06, 3.374999999999906e-06, 3.361000000000336e-06, 3.3480000000002397e-06, 3.374999999999906e-06, 3.374999999999906e-06, 3.347000000000766e-06, 3.374999999999906e-06, 3.361000000000336e-06, 3.374999999999906e-06, 3.30600000000153e-06, 3.361000000000336e-06, 3.361000000000336e-06, 3.3750000000033753e-06, 3.361000000000336e-06, 3.361000000000336e-06, 3.374999999999906e-06, 3.374999999999906e-06, 3.3750000000033753e-06, 3.361000000000336e-06, 3.361000000000336e-06, 3.361000000000336e-06, 3.3889999999994758e-06, 3.361000000000336e-06, 3.3469999999972966e-06, 3.361000000000336e-06, 3.361000000000336e-06, 3.361000000000336e-06, 3.347000000000766e-06, 3.374999999999906e-06, 3.374999999999906e-06, 3.361000000000336e-06, 3.3889999999994758e-06, 3.3889999999994758e-06, 3.374999999999906e-06, 3.361000000000336e-06, 3.374999999999906e-06, 3.3609999999968665e-06, 3.361000000000336e-06, 3.403000000002515e-06, 3.361000000000336e-06, 3.361000000000336e-06, 3.3189999999981568e-06, 3.361000000000336e-06]</msg>
<status status="PASS" starttime="20201115 22:00:31.046" endtime="20201115 22:00:31.048"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.041" endtime="20201115 22:00:31.049"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:31.051" endtime="20201115 22:00:31.052"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:31.054" endtime="20201115 22:00:31.074"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.053" endtime="20201115 22:00:31.075"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.049" endtime="20201115 22:00:31.075"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.683" endtime="20201115 22:00:31.075"></status>
</kw>
<msg timestamp="20201115 22:00:31.076" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:31.085" endtime="20201115 22:00:31.099"></status>
</kw>
<msg timestamp="20201115 22:00:31.099" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:31.083" endtime="20201115 22:00:31.099"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:31.102" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:31.100" endtime="20201115 22:00:31.102"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:31.103" endtime="20201115 22:00:31.105"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.081" endtime="20201115 22:00:31.105"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.078" endtime="20201115 22:00:31.106"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:31.112" endtime="20201115 22:00:31.407"></status>
</kw>
<msg timestamp="20201115 22:00:31.410" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020551819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020555208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:31.111" endtime="20201115 22:00:31.410"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:31.419" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020551819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020555208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:31.411" endtime="20201115 22:00:31.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:31.420" endtime="20201115 22:00:31.422"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.108" endtime="20201115 22:00:31.422"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.106" endtime="20201115 22:00:31.423"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:31.427" level="INFO">${RESULT} = [{'time': 0.020555208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3889999999994758e-06, 'source_diff': 3.3889999999994758e-06}, {'time': 0.020620111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:31.423" endtime="20201115 22:00:31.428"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:31.441" level="INFO">${OVERHEAD} = {'time': [0.020555208, 0.020620111, 0.020688375, 0.020758222, 0.02083, 0.020898736, 0.020967153, 0.021033014, 0.021100972, 0.021166778, 0.021233125, 0.021299639, 0.021364972, 0.021435306, 0.021499986,...</msg>
<status status="PASS" starttime="20201115 22:00:31.428" endtime="20201115 22:00:31.441"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:31.446" level="INFO">NAME: 00-overhead-4-set</msg>
<status status="PASS" starttime="20201115 22:00:31.445" endtime="20201115 22:00:31.446"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:31.448" level="INFO">VALUE: [3.3889999999994758e-06, 3.347000000000766e-06, 3.374999999999906e-06, 3.3189999999981568e-06, 3.361000000000336e-06, 3.361000000000336e-06, 3.374999999999906e-06, 3.361000000000336e-06, 3.374999999999906e-06, 3.374999999999906e-06, 3.3609999999968665e-06, 3.361000000000336e-06, 3.361000000000336e-06, 3.374999999999906e-06, 3.361000000000336e-06, 3.2919999999984906e-06, 3.374999999999906e-06, 3.361000000000336e-06, 3.374999999999906e-06, 3.3890000000029452e-06, 3.361000000000336e-06, 3.30600000000153e-06, 3.374999999999906e-06, 3.3480000000002397e-06, 3.2919999999984906e-06, 3.374999999999906e-06, 3.361000000000336e-06, 3.374999999999906e-06, 3.361000000000336e-06, 3.3889999999994758e-06, 3.361000000000336e-06, 3.374999999999906e-06, 3.3609999999968665e-06, 3.374999999999906e-06, 3.3619999999998096e-06, 3.374999999999906e-06, 3.374999999999906e-06, 3.361000000000336e-06, 3.374999999999906e-06, 3.3890000000029452e-06, 3.3480000000002397e-06, 3.3480000000002397e-06, 3.290999999999017e-06, 3.374999999999906e-06, 3.3889999999994758e-06, 3.374999999999906e-06, 3.374999999999906e-06, 3.4169999999986156e-06, 3.3339999999972003e-06, 3.361000000000336e-06]</msg>
<status status="PASS" starttime="20201115 22:00:31.447" endtime="20201115 22:00:31.449"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.442" endtime="20201115 22:00:31.449"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:31.452" endtime="20201115 22:00:31.453"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:31.455" endtime="20201115 22:00:31.475"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.454" endtime="20201115 22:00:31.476"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.450" endtime="20201115 22:00:31.476"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.076" endtime="20201115 22:00:31.476"></status>
</kw>
<msg timestamp="20201115 22:00:31.477" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:31.486" endtime="20201115 22:00:31.500"></status>
</kw>
<msg timestamp="20201115 22:00:31.501" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:31.484" endtime="20201115 22:00:31.501"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:31.503" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:31.502" endtime="20201115 22:00:31.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:31.505" endtime="20201115 22:00:31.506"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.481" endtime="20201115 22:00:31.507"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.479" endtime="20201115 22:00:31.507"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:31.514" endtime="20201115 22:00:31.802"></status>
</kw>
<msg timestamp="20201115 22:00:31.806" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020508986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020512389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:31.512" endtime="20201115 22:00:31.806"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:31.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020508986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020512389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:31.807" endtime="20201115 22:00:31.814"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:31.816" endtime="20201115 22:00:31.817"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.510" endtime="20201115 22:00:31.818"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.508" endtime="20201115 22:00:31.818"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:31.823" level="INFO">${RESULT} = [{'time': 0.020512389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4029999999990457e-06, 'source_diff': 3.4029999999990457e-06}, {'time': 0.020578861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:31.819" endtime="20201115 22:00:31.823"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:31.836" level="INFO">${OVERHEAD} = {'time': [0.020512389, 0.020578861, 0.020646097, 0.020713333, 0.020780319, 0.020845736, 0.020913986, 0.020982167, 0.021050361, 0.021118069, 0.021187069, 0.021256417, 0.021321056, 0.021386611, 0.021455...</msg>
<status status="PASS" starttime="20201115 22:00:31.824" endtime="20201115 22:00:31.836"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:31.841" level="INFO">NAME: 00-overhead-4-set</msg>
<status status="PASS" starttime="20201115 22:00:31.840" endtime="20201115 22:00:31.841"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:31.843" level="INFO">VALUE: [3.4029999999990457e-06, 3.361000000000336e-06, 3.374999999999906e-06, 3.361000000000336e-06, 3.276999999999447e-06, 3.3889999999994758e-06, 3.3469999999972966e-06, 3.374999999999906e-06, 3.361000000000336e-06, 3.374999999999906e-06, 3.388000000000002e-06, 3.3200000000011e-06, 3.403000000002515e-06, 3.374999999999906e-06, 3.361000000000336e-06, 3.4029999999990457e-06, 3.361000000000336e-06, 3.3480000000002397e-06, 3.415999999999142e-06, 3.374999999999906e-06, 3.3619999999998096e-06, 3.361000000000336e-06, 3.361000000000336e-06, 3.374999999999906e-06, 3.374999999999906e-06, 3.374999999999906e-06, 3.319000000001626e-06, 3.374999999999906e-06, 3.361000000000336e-06, 3.4169999999986156e-06, 3.3480000000002397e-06, 3.374999999999906e-06, 3.374999999999906e-06, 3.374999999999906e-06, 3.4029999999990457e-06, 3.374999999999906e-06, 3.374999999999906e-06, 3.374999999999906e-06, 3.361000000000336e-06, 3.3189999999981568e-06, 3.361000000000336e-06, 3.3189999999981568e-06, 3.361000000000336e-06, 3.361000000000336e-06, 3.4169999999986156e-06, 3.361000000000336e-06, 3.361000000000336e-06, 3.374999999999906e-06, 3.3890000000029452e-06, 3.361000000000336e-06]</msg>
<status status="PASS" starttime="20201115 22:00:31.842" endtime="20201115 22:00:31.844"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.837" endtime="20201115 22:00:31.844"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:31.847" endtime="20201115 22:00:31.848"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:31.850" endtime="20201115 22:00:31.870"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.849" endtime="20201115 22:00:31.870"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.845" endtime="20201115 22:00:31.871"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.477" endtime="20201115 22:00:31.871"></status>
</kw>
<msg timestamp="20201115 22:00:31.871" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:31.881" endtime="20201115 22:00:31.894"></status>
</kw>
<msg timestamp="20201115 22:00:31.895" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:31.879" endtime="20201115 22:00:31.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:31.898" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:31.896" endtime="20201115 22:00:31.898"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:31.899" endtime="20201115 22:00:31.900"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.876" endtime="20201115 22:00:31.901"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.874" endtime="20201115 22:00:31.901"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:31.908" endtime="20201115 22:00:32.195"></status>
</kw>
<msg timestamp="20201115 22:00:32.198" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0203645, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020367889, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:00:31.906" endtime="20201115 22:00:32.199"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:32.207" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0203645, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020367889, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:00:32.200" endtime="20201115 22:00:32.208"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:32.208" endtime="20201115 22:00:32.210"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.904" endtime="20201115 22:00:32.211"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.902" endtime="20201115 22:00:32.211"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:32.215" level="INFO">${RESULT} = [{'time': 0.020367889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3889999999994758e-06, 'source_diff': 3.3889999999994758e-06}, {'time': 0.020433208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:32.212" endtime="20201115 22:00:32.216"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:32.229" level="INFO">${OVERHEAD} = {'time': [0.020367889, 0.020433208, 0.020502167, 0.020570125, 0.02063575, 0.020706514, 0.020776597, 0.0208425, 0.020907556, 0.020976306, 0.021047167, 0.021116306, 0.021186222, 0.021256083, 0.021326722...</msg>
<status status="PASS" starttime="20201115 22:00:32.216" endtime="20201115 22:00:32.229"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:32.234" level="INFO">NAME: 00-overhead-4-set</msg>
<status status="PASS" starttime="20201115 22:00:32.233" endtime="20201115 22:00:32.234"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:32.236" level="INFO">VALUE: [3.3889999999994758e-06, 3.374999999999906e-06, 3.3480000000002397e-06, 3.374999999999906e-06, 3.417000000002085e-06, 3.374999999999906e-06, 3.374999999999906e-06, 3.4029999999990457e-06, 3.3619999999998096e-06, 3.374999999999906e-06, 3.374999999999906e-06, 3.374999999999906e-06, 3.361000000000336e-06, 3.374999999999906e-06, 3.374999999999906e-06, 3.361000000000336e-06, 3.374999999999906e-06, 3.374999999999906e-06, 3.361000000000336e-06, 3.3750000000033753e-06, 3.3619999999998096e-06, 3.361000000000336e-06, 3.3199999999976304e-06, 3.388000000000002e-06, 3.374999999999906e-06, 3.3189999999981568e-06, 3.361000000000336e-06, 3.3609999999968665e-06, 3.3619999999998096e-06, 3.374999999999906e-06, 3.3609999999968665e-06, 3.361000000000336e-06, 3.374999999999906e-06, 3.445000000001225e-06, 3.374999999999906e-06, 3.3889999999994758e-06, 3.304999999998587e-06, 3.374999999999906e-06, 3.347000000000766e-06, 3.361000000000336e-06, 3.374999999999906e-06, 3.3609999999968665e-06, 3.374999999999906e-06, 3.361000000000336e-06, 3.401999999999572e-06, 3.4029999999990457e-06, 3.374999999999906e-06, 3.361000000000336e-06, 3.374999999999906e-06, 3.374999999999906e-06]</msg>
<status status="PASS" starttime="20201115 22:00:32.235" endtime="20201115 22:00:32.237"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.230" endtime="20201115 22:00:32.237"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:32.240" endtime="20201115 22:00:32.241"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:32.243" endtime="20201115 22:00:32.266"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.242" endtime="20201115 22:00:32.267"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.238" endtime="20201115 22:00:32.267"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.872" endtime="20201115 22:00:32.267"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.290" endtime="20201115 22:00:32.268"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.289" endtime="20201115 22:00:32.268"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:32.270" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:32.280" endtime="20201115 22:00:32.294"></status>
</kw>
<msg timestamp="20201115 22:00:32.295" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:32.279" endtime="20201115 22:00:32.295"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:32.298" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:32.296" endtime="20201115 22:00:32.298"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:32.299" endtime="20201115 22:00:32.300"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.276" endtime="20201115 22:00:32.301"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.273" endtime="20201115 22:00:32.301"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:32.309" endtime="20201115 22:00:32.595"></status>
</kw>
<msg timestamp="20201115 22:00:32.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027311319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027314944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:32.307" endtime="20201115 22:00:32.599"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:32.607" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027311319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027314944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:32.600" endtime="20201115 22:00:32.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:32.609" endtime="20201115 22:00:32.610"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.304" endtime="20201115 22:00:32.611"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.302" endtime="20201115 22:00:32.611"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:32.616" level="INFO">${RESULT} = [{'time': 0.027314944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.625000000000156e-06, 'source_diff': 3.625000000000156e-06}, {'time': 0.027389319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:32.612" endtime="20201115 22:00:32.616"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:32.629" level="INFO">${OVERHEAD} = {'time': [0.027314944, 0.027389319, 0.027467792, 0.027545986, 0.027621597, 0.027693417, 0.0277685, 0.027845264, 0.027922278, 0.028000014, 0.028072542, 0.028149833, 0.028227056, 0.028305944, 0.02838133...</msg>
<status status="PASS" starttime="20201115 22:00:32.617" endtime="20201115 22:00:32.629"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:32.634" level="INFO">NAME: 00-overhead-5-set</msg>
<status status="PASS" starttime="20201115 22:00:32.633" endtime="20201115 22:00:32.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:32.637" level="INFO">VALUE: [3.625000000000156e-06, 3.638000000000252e-06, 3.5840000000009198e-06, 3.625000000000156e-06, 3.611000000000586e-06, 3.625000000000156e-06, 3.597000000001016e-06, 3.653000000002765e-06, 3.6809999999984355e-06, 3.6389999999997258e-06, 3.6389999999997258e-06, 3.6389999999997258e-06, 3.625000000000156e-06, 3.625000000000156e-06, 3.6390000000031952e-06, 3.709000000001045e-06, 3.625000000000156e-06, 3.6389999999997258e-06, 3.625000000000156e-06, 3.6249999999966864e-06, 3.6120000000000596e-06, 3.6389999999997258e-06, 3.611000000000586e-06, 3.625000000000156e-06, 3.625000000000156e-06, 3.6389999999997258e-06, 3.665999999999392e-06, 3.695000000001475e-06, 3.597000000001016e-06, 3.6389999999997258e-06, 3.625000000000156e-06, 3.6529999999992957e-06, 3.625000000000156e-06, 3.6389999999997258e-06, 3.625000000000156e-06, 3.6389999999997258e-06, 3.625000000000156e-06, 3.6389999999997258e-06, 3.625000000000156e-06, 3.625000000000156e-06, 3.625000000000156e-06, 3.611000000000586e-06, 3.625000000000156e-06, 3.611000000000586e-06, 3.6389999999997258e-06, 3.611000000000586e-06, 3.638000000000252e-06, 3.6529999999992957e-06, 3.6120000000000596e-06, 3.597000000001016e-06]</msg>
<status status="PASS" starttime="20201115 22:00:32.635" endtime="20201115 22:00:32.637"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.630" endtime="20201115 22:00:32.637"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:32.640" endtime="20201115 22:00:32.641"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:32.643" endtime="20201115 22:00:32.663"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.642" endtime="20201115 22:00:32.663"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.638" endtime="20201115 22:00:32.664"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.271" endtime="20201115 22:00:32.664"></status>
</kw>
<msg timestamp="20201115 22:00:32.664" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:32.674" endtime="20201115 22:00:32.688"></status>
</kw>
<msg timestamp="20201115 22:00:32.688" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:32.672" endtime="20201115 22:00:32.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:32.691" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:32.689" endtime="20201115 22:00:32.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:32.692" endtime="20201115 22:00:32.694"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.669" endtime="20201115 22:00:32.695"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.667" endtime="20201115 22:00:32.695"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:32.702" endtime="20201115 22:00:32.990"></status>
</kw>
<msg timestamp="20201115 22:00:32.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020317208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020320847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:32.700" endtime="20201115 22:00:32.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:33.002" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020317208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020320847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:32.995" endtime="20201115 22:00:33.003"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:33.004" endtime="20201115 22:00:33.005"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.698" endtime="20201115 22:00:33.006"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.696" endtime="20201115 22:00:33.006"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:33.011" level="INFO">${RESULT} = [{'time': 0.020320847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6389999999997258e-06, 'source_diff': 3.6389999999997258e-06}, {'time': 0.020398069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:33.007" endtime="20201115 22:00:33.011"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:33.024" level="INFO">${OVERHEAD} = {'time': [0.020320847, 0.020398069, 0.020474819, 0.020549653, 0.020627361, 0.020700125, 0.020778375, 0.020853444, 0.020931, 0.02100425, 0.021082486, 0.021155653, 0.021233181, 0.021307639, 0.021384125,...</msg>
<status status="PASS" starttime="20201115 22:00:33.012" endtime="20201115 22:00:33.024"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:33.029" level="INFO">NAME: 00-overhead-5-set</msg>
<status status="PASS" starttime="20201115 22:00:33.028" endtime="20201115 22:00:33.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:33.031" level="INFO">VALUE: [3.6389999999997258e-06, 3.638000000000252e-06, 3.6379999999967827e-06, 3.625000000000156e-06, 3.6389999999997258e-06, 3.625000000000156e-06, 3.5690000000018762e-06, 3.625000000000156e-06, 3.653000000002765e-06, 3.6529999999992957e-06, 3.6389999999997258e-06, 3.5840000000009198e-06, 3.625000000000156e-06, 3.6529999999992957e-06, 3.625000000000156e-06, 3.625000000000156e-06, 3.6389999999997258e-06, 3.7079999999981017e-06, 3.6389999999997258e-06, 3.6389999999997258e-06, 3.6389999999997258e-06, 3.638000000000252e-06, 3.625000000000156e-06, 3.625000000000156e-06, 3.57000000000135e-06, 3.6389999999997258e-06, 3.6389999999997258e-06, 3.6109999999971165e-06, 3.625000000000156e-06, 3.611000000000586e-06, 3.5980000000004897e-06, 3.625000000000156e-06, 3.6529999999992957e-06, 3.625000000000156e-06, 3.6389999999997258e-06, 3.6389999999997258e-06, 3.611000000000586e-06, 3.5829999999979767e-06, 3.625000000000156e-06, 3.625000000000156e-06, 3.625000000000156e-06, 3.6389999999997258e-06, 3.625000000000156e-06, 3.6389999999997258e-06, 3.6529999999992957e-06, 3.653000000002765e-06, 3.6109999999971165e-06, 3.625000000000156e-06, 3.6120000000000596e-06, 3.6389999999997258e-06]</msg>
<status status="PASS" starttime="20201115 22:00:33.030" endtime="20201115 22:00:33.032"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.025" endtime="20201115 22:00:33.032"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:33.035" endtime="20201115 22:00:33.036"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:33.038" endtime="20201115 22:00:33.058"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.037" endtime="20201115 22:00:33.058"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.033" endtime="20201115 22:00:33.059"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.665" endtime="20201115 22:00:33.059"></status>
</kw>
<msg timestamp="20201115 22:00:33.059" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:33.069" endtime="20201115 22:00:33.082"></status>
</kw>
<msg timestamp="20201115 22:00:33.083" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:33.067" endtime="20201115 22:00:33.083"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:33.085" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:33.084" endtime="20201115 22:00:33.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:33.086" endtime="20201115 22:00:33.088"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.064" endtime="20201115 22:00:33.089"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.062" endtime="20201115 22:00:33.089"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:33.096" endtime="20201115 22:00:33.385"></status>
</kw>
<msg timestamp="20201115 22:00:33.389" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020969264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020972889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:33.094" endtime="20201115 22:00:33.389"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:33.397" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020969264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020972889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:33.390" endtime="20201115 22:00:33.398"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:33.398" endtime="20201115 22:00:33.400"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.092" endtime="20201115 22:00:33.401"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.090" endtime="20201115 22:00:33.401"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:33.405" level="INFO">${RESULT} = [{'time': 0.020972889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.625000000000156e-06, 'source_diff': 3.625000000000156e-06}, {'time': 0.021045819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:33.402" endtime="20201115 22:00:33.406"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:33.419" level="INFO">${OVERHEAD} = {'time': [0.020972889, 0.021045819, 0.021120667, 0.021196292, 0.02126875, 0.021340778, 0.021416778, 0.021492694, 0.021571292, 0.021644, 0.021720347, 0.021796833, 0.021875083, 0.021954222, 0.022029764,...</msg>
<status status="PASS" starttime="20201115 22:00:33.406" endtime="20201115 22:00:33.419"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:33.424" level="INFO">NAME: 00-overhead-5-set</msg>
<status status="PASS" starttime="20201115 22:00:33.422" endtime="20201115 22:00:33.424"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:33.426" level="INFO">VALUE: [3.625000000000156e-06, 3.625000000000156e-06, 3.6389999999997258e-06, 3.625000000000156e-06, 3.597000000001016e-06, 3.667000000002335e-06, 3.6389999999997258e-06, 3.679999999998962e-06, 3.5839999999974503e-06, 3.625000000000156e-06, 3.625000000000156e-06, 3.597000000001016e-06, 3.6389999999997258e-06, 3.6389999999997258e-06, 3.625000000000156e-06, 3.625000000000156e-06, 3.6389999999997258e-06, 3.5969999999975466e-06, 3.597000000001016e-06, 3.625000000000156e-06, 3.625000000000156e-06, 3.611000000000586e-06, 3.625000000000156e-06, 3.6249999999966864e-06, 3.6390000000031952e-06, 3.6389999999997258e-06, 3.5840000000009198e-06, 3.6389999999997258e-06, 3.6389999999997258e-06, 3.6389999999997258e-06, 3.625000000000156e-06, 3.625000000000156e-06, 3.625000000000156e-06, 3.625000000000156e-06, 3.6389999999997258e-06, 3.6389999999997258e-06, 3.6389999999997258e-06, 3.653000000002765e-06, 3.5689999999984068e-06, 3.625000000000156e-06, 3.625000000000156e-06, 3.625000000000156e-06, 3.625000000000156e-06, 3.625000000000156e-06, 3.611000000000586e-06, 3.625000000000156e-06, 3.611000000000586e-06, 3.611000000000586e-06, 3.625000000000156e-06, 3.667000000002335e-06]</msg>
<status status="PASS" starttime="20201115 22:00:33.425" endtime="20201115 22:00:33.427"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.420" endtime="20201115 22:00:33.427"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:33.429" endtime="20201115 22:00:33.431"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:33.433" endtime="20201115 22:00:33.452"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.431" endtime="20201115 22:00:33.453"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.428" endtime="20201115 22:00:33.454"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.060" endtime="20201115 22:00:33.454"></status>
</kw>
<msg timestamp="20201115 22:00:33.454" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:33.464" endtime="20201115 22:00:33.476"></status>
</kw>
<msg timestamp="20201115 22:00:33.476" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:33.462" endtime="20201115 22:00:33.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:33.479" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:33.478" endtime="20201115 22:00:33.479"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:33.480" endtime="20201115 22:00:33.482"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.460" endtime="20201115 22:00:33.482"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.457" endtime="20201115 22:00:33.483"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:33.490" endtime="20201115 22:00:33.777"></status>
</kw>
<msg timestamp="20201115 22:00:33.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020773028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020776667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:33.488" endtime="20201115 22:00:33.781"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:33.789" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020773028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020776667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:33.782" endtime="20201115 22:00:33.789"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:33.790" endtime="20201115 22:00:33.792"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.485" endtime="20201115 22:00:33.792"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.483" endtime="20201115 22:00:33.793"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:33.797" level="INFO">${RESULT} = [{'time': 0.020776667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6389999999997258e-06, 'source_diff': 3.6389999999997258e-06}, {'time': 0.020848528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:33.794" endtime="20201115 22:00:33.797"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:33.811" level="INFO">${OVERHEAD} = {'time': [0.020776667, 0.020848528, 0.020921958, 0.021000139, 0.021078597, 0.021153875, 0.021229028, 0.021301083, 0.021375764, 0.021448778, 0.021521694, 0.021598528, 0.021676236, 0.021753931, 0.021825...</msg>
<status status="PASS" starttime="20201115 22:00:33.798" endtime="20201115 22:00:33.811"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:33.815" level="INFO">NAME: 00-overhead-5-set</msg>
<status status="PASS" starttime="20201115 22:00:33.814" endtime="20201115 22:00:33.816"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:33.818" level="INFO">VALUE: [3.6389999999997258e-06, 3.653000000002765e-06, 3.5690000000018762e-06, 3.625000000000156e-06, 3.6800000000024313e-06, 3.6389999999997258e-06, 3.6389999999997258e-06, 3.6389999999997258e-06, 3.625000000000156e-06, 3.5840000000009198e-06, 3.611000000000586e-06, 3.6389999999997258e-06, 3.653000000002765e-06, 3.6389999999997258e-06, 3.6529999999992957e-06, 3.625000000000156e-06, 3.625000000000156e-06, 3.625000000000156e-06, 3.625000000000156e-06, 3.625000000000156e-06, 3.638000000000252e-06, 3.6109999999971165e-06, 3.6389999999997258e-06, 3.651999999999822e-06, 3.625000000000156e-06, 3.597000000001016e-06, 3.6669999999988656e-06, 3.653000000002765e-06, 3.625000000000156e-06, 3.611000000000586e-06, 3.625000000000156e-06, 3.665999999999392e-06, 3.6389999999997258e-06, 3.625000000000156e-06, 3.611000000000586e-06, 3.625000000000156e-06, 3.5829999999979767e-06, 3.625000000000156e-06, 3.611000000000586e-06, 3.6390000000031952e-06, 3.6389999999997258e-06, 3.625000000000156e-06, 3.6389999999997258e-06, 3.6389999999997258e-06, 3.638000000000252e-06, 3.611000000000586e-06, 3.611000000000586e-06, 3.6389999999997258e-06, 3.6529999999992957e-06, 3.6529999999992957e-06]</msg>
<status status="PASS" starttime="20201115 22:00:33.817" endtime="20201115 22:00:33.818"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.812" endtime="20201115 22:00:33.819"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:33.821" endtime="20201115 22:00:33.823"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:33.825" endtime="20201115 22:00:33.845"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.824" endtime="20201115 22:00:33.846"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.820" endtime="20201115 22:00:33.846"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.455" endtime="20201115 22:00:33.846"></status>
</kw>
<msg timestamp="20201115 22:00:33.847" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:33.856" endtime="20201115 22:00:33.868"></status>
</kw>
<msg timestamp="20201115 22:00:33.869" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:33.854" endtime="20201115 22:00:33.869"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:33.871" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:33.870" endtime="20201115 22:00:33.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:33.872" endtime="20201115 22:00:33.874"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.851" endtime="20201115 22:00:33.875"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.849" endtime="20201115 22:00:33.875"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:33.882" endtime="20201115 22:00:34.169"></status>
</kw>
<msg timestamp="20201115 22:00:34.172" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020484889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020488542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:33.880" endtime="20201115 22:00:34.173"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:34.181" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020484889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020488542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:34.174" endtime="20201115 22:00:34.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:34.182" endtime="20201115 22:00:34.184"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.878" endtime="20201115 22:00:34.185"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.876" endtime="20201115 22:00:34.185"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:34.189" level="INFO">${RESULT} = [{'time': 0.020488542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6529999999992957e-06, 'source_diff': 3.6529999999992957e-06}, {'time': 0.020565819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:34.186" endtime="20201115 22:00:34.190"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:34.203" level="INFO">${OVERHEAD} = {'time': [0.020488542, 0.020565819, 0.020639306, 0.020714931, 0.020792931, 0.020866819, 0.020944042, 0.021018958, 0.021097917, 0.021175931, 0.021253153, 0.021326583, 0.021404042, 0.021481556, 0.021559...</msg>
<status status="PASS" starttime="20201115 22:00:34.190" endtime="20201115 22:00:34.203"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:34.208" level="INFO">NAME: 00-overhead-5-set</msg>
<status status="PASS" starttime="20201115 22:00:34.207" endtime="20201115 22:00:34.208"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:34.210" level="INFO">VALUE: [3.6529999999992957e-06, 3.5969999999975466e-06, 3.6389999999997258e-06, 3.6389999999997258e-06, 3.57000000000135e-06, 3.625000000000156e-06, 3.625000000000156e-06, 3.611000000000586e-06, 3.625000000000156e-06, 3.6120000000000596e-06, 3.625000000000156e-06, 3.651999999999822e-06, 3.6390000000031952e-06, 3.625000000000156e-06, 3.667000000002335e-06, 3.625000000000156e-06, 3.6529999999992957e-06, 3.625000000000156e-06, 3.625000000000156e-06, 3.611000000000586e-06, 3.611000000000586e-06, 3.7079999999981017e-06, 3.665999999999392e-06, 3.6529999999992957e-06, 3.611000000000586e-06, 3.6389999999997258e-06, 3.6389999999997258e-06, 3.6529999999992957e-06, 3.6389999999997258e-06, 3.625000000000156e-06, 3.693999999998532e-06, 3.6390000000031952e-06, 3.625000000000156e-06, 3.5840000000009198e-06, 3.6389999999997258e-06, 3.625000000000156e-06, 3.653000000002765e-06, 3.625000000000156e-06, 3.625000000000156e-06, 3.611000000000586e-06, 3.6529999999992957e-06, 3.6389999999997258e-06, 3.625000000000156e-06, 3.611000000000586e-06, 3.6120000000000596e-06, 3.625000000000156e-06, 3.611000000000586e-06, 3.625000000000156e-06, 3.625000000000156e-06, 3.625000000000156e-06]</msg>
<status status="PASS" starttime="20201115 22:00:34.209" endtime="20201115 22:00:34.211"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.204" endtime="20201115 22:00:34.212"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:34.214" endtime="20201115 22:00:34.215"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:34.218" endtime="20201115 22:00:34.237"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.216" endtime="20201115 22:00:34.238"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.212" endtime="20201115 22:00:34.238"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.847" endtime="20201115 22:00:34.239"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.269" endtime="20201115 22:00:34.239"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.268" endtime="20201115 22:00:34.239"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:34.241" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:34.251" endtime="20201115 22:00:34.266"></status>
</kw>
<msg timestamp="20201115 22:00:34.266" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:34.249" endtime="20201115 22:00:34.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:34.269" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:34.267" endtime="20201115 22:00:34.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:34.270" endtime="20201115 22:00:34.272"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.246" endtime="20201115 22:00:34.272"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.244" endtime="20201115 22:00:34.273"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:34.279" endtime="20201115 22:00:34.567"></status>
</kw>
<msg timestamp="20201115 22:00:34.571" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022752986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022756917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:34.278" endtime="20201115 22:00:34.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:34.579" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022752986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022756917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:34.572" endtime="20201115 22:00:34.579"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:34.580" endtime="20201115 22:00:34.582"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.275" endtime="20201115 22:00:34.582"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.273" endtime="20201115 22:00:34.583"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:34.587" level="INFO">${RESULT} = [{'time': 0.022756917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.931000000002155e-06, 'source_diff': 3.931000000002155e-06}, {'time': 0.022839347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:34.584" endtime="20201115 22:00:34.587"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:34.601" level="INFO">${OVERHEAD} = {'time': [0.022756917, 0.022839347, 0.022923319, 0.023003417, 0.023083042, 0.023165819, 0.023251931, 0.023337597, 0.023420833, 0.023500486, 0.023581569, 0.023662611, 0.023747722, 0.023828819, 0.023908...</msg>
<status status="PASS" starttime="20201115 22:00:34.588" endtime="20201115 22:00:34.601"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:34.606" level="INFO">NAME: 00-overhead-6-set</msg>
<status status="PASS" starttime="20201115 22:00:34.605" endtime="20201115 22:00:34.606"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:34.613" level="INFO">VALUE: [3.931000000002155e-06, 3.888999999999976e-06, 3.888000000000502e-06, 3.875000000000406e-06, 3.888999999999976e-06, 3.902000000000072e-06, 3.875000000000406e-06, 3.847000000001266e-06, 3.888999999999976e-06, 3.930000000002681e-06, 3.902000000000072e-06, 3.875000000000406e-06, 3.902999999999546e-06, 3.958000000001821e-06, 3.9449999999982555e-06, 3.875000000000406e-06, 3.875000000000406e-06, 3.8199999999981304e-06, 3.888000000000502e-06, 3.901999999996603e-06, 3.958000000001821e-06, 3.888999999999976e-06, 3.902999999999546e-06, 3.902999999999546e-06, 3.902999999999546e-06, 3.875000000000406e-06, 3.888000000000502e-06, 3.875000000000406e-06, 3.875000000000406e-06, 3.902999999999546e-06, 3.888999999999976e-06, 3.861000000000836e-06, 3.888999999999976e-06, 3.888999999999976e-06, 3.875000000000406e-06, 3.875000000000406e-06, 3.9449999999982555e-06, 3.902999999999546e-06, 3.888999999999976e-06, 3.902999999999546e-06, 3.8749999999969365e-06, 3.888999999999976e-06, 3.888999999999976e-06, 3.875000000000406e-06, 3.888999999999976e-06, 3.888000000000502e-06, 3.888999999999976e-06, 3.903000000003015e-06, 3.902999999999546e-06, 3.943999999998782e-06]</msg>
<status status="PASS" starttime="20201115 22:00:34.607" endtime="20201115 22:00:34.614"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.602" endtime="20201115 22:00:34.614"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:34.617" endtime="20201115 22:00:34.618"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:34.621" endtime="20201115 22:00:34.640"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.619" endtime="20201115 22:00:34.641"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.615" endtime="20201115 22:00:34.641"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.242" endtime="20201115 22:00:34.641"></status>
</kw>
<msg timestamp="20201115 22:00:34.642" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:34.651" endtime="20201115 22:00:34.667"></status>
</kw>
<msg timestamp="20201115 22:00:34.667" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:34.649" endtime="20201115 22:00:34.667"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:34.670" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:34.668" endtime="20201115 22:00:34.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:34.671" endtime="20201115 22:00:34.673"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.647" endtime="20201115 22:00:34.673"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.644" endtime="20201115 22:00:34.674"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:34.680" endtime="20201115 22:00:34.968"></status>
</kw>
<msg timestamp="20201115 22:00:34.972" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021148042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021151931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:34.679" endtime="20201115 22:00:34.972"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:34.980" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021148042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021151931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:34.973" endtime="20201115 22:00:34.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:34.981" endtime="20201115 22:00:34.983"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.676" endtime="20201115 22:00:34.984"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.674" endtime="20201115 22:00:34.984"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:34.988" level="INFO">${RESULT} = [{'time': 0.021151931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.888999999999976e-06, 'source_diff': 3.888999999999976e-06}, {'time': 0.0212325, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:00:34.985" endtime="20201115 22:00:34.989"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:35.002" level="INFO">${OVERHEAD} = {'time': [0.021151931, 0.0212325, 0.021313306, 0.021393403, 0.0214785, 0.021563819, 0.021647958, 0.021731458, 0.021814, 0.021900375, 0.021985542, 0.022070694, 0.022152764, 0.022237403, 0.0223185, 0.02...</msg>
<status status="PASS" starttime="20201115 22:00:34.989" endtime="20201115 22:00:35.003"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:35.007" level="INFO">NAME: 00-overhead-6-set</msg>
<status status="PASS" starttime="20201115 22:00:35.006" endtime="20201115 22:00:35.008"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:35.010" level="INFO">VALUE: [3.888999999999976e-06, 3.888999999999976e-06, 3.888999999999976e-06, 3.902999999999546e-06, 3.888999999999976e-06, 3.861000000000836e-06, 3.8749999999969365e-06, 3.888999999999976e-06, 3.888999999999976e-06, 3.902999999999546e-06, 3.861000000000836e-06, 3.8609999999973665e-06, 3.902999999999546e-06, 3.902999999999546e-06, 3.861000000000836e-06, 3.887999999997033e-06, 3.875000000000406e-06, 3.902999999999546e-06, 3.888999999999976e-06, 3.902999999999546e-06, 3.902999999999546e-06, 3.888999999999976e-06, 3.888999999999976e-06, 3.888000000000502e-06, 3.8749999999969365e-06, 3.887999999997033e-06, 3.8749999999969365e-06, 3.902999999999546e-06, 3.8749999999969365e-06, 3.931000000002155e-06, 3.902999999999546e-06, 3.888999999999976e-06, 3.903000000003015e-06, 3.902999999999546e-06, 3.888999999999976e-06, 3.903000000003015e-06, 3.8749999999969365e-06, 3.902999999999546e-06, 3.888999999999976e-06, 3.916999999999116e-06, 3.875000000000406e-06, 3.888999999999976e-06, 3.875000000000406e-06, 3.875000000000406e-06, 3.888999999999976e-06, 3.9309999999986855e-06, 3.9160000000031114e-06, 3.902999999999546e-06, 3.902999999999546e-06, 3.875000000000406e-06]</msg>
<status status="PASS" starttime="20201115 22:00:35.008" endtime="20201115 22:00:35.010"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.003" endtime="20201115 22:00:35.011"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:35.013" endtime="20201115 22:00:35.014"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:35.017" endtime="20201115 22:00:35.036"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.015" endtime="20201115 22:00:35.037"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.011" endtime="20201115 22:00:35.037"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.642" endtime="20201115 22:00:35.038"></status>
</kw>
<msg timestamp="20201115 22:00:35.038" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:35.047" endtime="20201115 22:00:35.061"></status>
</kw>
<msg timestamp="20201115 22:00:35.061" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:35.045" endtime="20201115 22:00:35.061"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:35.064" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:35.062" endtime="20201115 22:00:35.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:35.065" endtime="20201115 22:00:35.067"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.043" endtime="20201115 22:00:35.067"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.040" endtime="20201115 22:00:35.068"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:35.074" endtime="20201115 22:00:35.363"></status>
</kw>
<msg timestamp="20201115 22:00:35.366" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021069125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021073042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:35.073" endtime="20201115 22:00:35.367"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:35.375" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021069125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021073042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:35.368" endtime="20201115 22:00:35.375"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:35.376" endtime="20201115 22:00:35.378"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.070" endtime="20201115 22:00:35.378"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.068" endtime="20201115 22:00:35.379"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:35.383" level="INFO">${RESULT} = [{'time': 0.021073042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.916999999999116e-06, 'source_diff': 3.916999999999116e-06}, {'time': 0.021155319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:35.380" endtime="20201115 22:00:35.384"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:35.397" level="INFO">${OVERHEAD} = {'time': [0.021073042, 0.021155319, 0.021239306, 0.021325111, 0.021406694, 0.021493083, 0.021577236, 0.021662778, 0.021743167, 0.021830014, 0.021910389, 0.021995486, 0.022077556, 0.022163944, 0.022244...</msg>
<status status="PASS" starttime="20201115 22:00:35.385" endtime="20201115 22:00:35.398"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:35.402" level="INFO">NAME: 00-overhead-6-set</msg>
<status status="PASS" starttime="20201115 22:00:35.401" endtime="20201115 22:00:35.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:35.405" level="INFO">VALUE: [3.916999999999116e-06, 3.888000000000502e-06, 3.902999999999546e-06, 3.902999999999546e-06, 3.875000000000406e-06, 3.929999999999212e-06, 3.943999999998782e-06, 3.916999999999116e-06, 3.902999999999546e-06, 3.916999999999116e-06, 3.888999999999976e-06, 3.875000000000406e-06, 3.84800000000074e-06, 3.930000000002681e-06, 3.9309999999986855e-06, 3.819000000002126e-06, 3.902999999999546e-06, 3.8200000000016e-06, 3.945000000001725e-06, 3.875000000000406e-06, 3.902999999999546e-06, 3.915999999999642e-06, 3.902999999999546e-06, 3.902999999999546e-06, 3.9309999999986855e-06, 3.902999999999546e-06, 3.916999999999116e-06, 3.888999999999976e-06, 3.875000000000406e-06, 3.888999999999976e-06, 3.832999999998227e-06, 3.917000000002585e-06, 3.902999999999546e-06, 3.888999999999976e-06, 3.888999999999976e-06, 3.945000000001725e-06, 3.888999999999976e-06, 3.902000000000072e-06, 3.888000000000502e-06, 3.888999999999976e-06, 3.888999999999976e-06, 3.861000000000836e-06, 3.875000000000406e-06, 3.888999999999976e-06, 3.887999999997033e-06, 3.875000000000406e-06, 3.916999999999116e-06, 3.888999999999976e-06, 3.9449999999982555e-06, 3.887999999997033e-06]</msg>
<status status="PASS" starttime="20201115 22:00:35.403" endtime="20201115 22:00:35.405"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.398" endtime="20201115 22:00:35.406"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:35.408" endtime="20201115 22:00:35.409"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:35.411" endtime="20201115 22:00:35.431"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.410" endtime="20201115 22:00:35.432"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.406" endtime="20201115 22:00:35.432"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.038" endtime="20201115 22:00:35.432"></status>
</kw>
<msg timestamp="20201115 22:00:35.433" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:35.442" endtime="20201115 22:00:35.457"></status>
</kw>
<msg timestamp="20201115 22:00:35.458" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:35.440" endtime="20201115 22:00:35.458"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:35.460" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:35.459" endtime="20201115 22:00:35.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:35.462" endtime="20201115 22:00:35.463"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.438" endtime="20201115 22:00:35.464"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.435" endtime="20201115 22:00:35.464"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:35.471" endtime="20201115 22:00:35.758"></status>
</kw>
<msg timestamp="20201115 22:00:35.761" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021093458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021097347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:35.469" endtime="20201115 22:00:35.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:35.770" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021093458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021097347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:35.762" endtime="20201115 22:00:35.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:35.771" endtime="20201115 22:00:35.773"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.467" endtime="20201115 22:00:35.774"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.465" endtime="20201115 22:00:35.774"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:35.778" level="INFO">${RESULT} = [{'time': 0.021097347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.888999999999976e-06, 'source_diff': 3.888999999999976e-06}, {'time': 0.021180125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:35.775" endtime="20201115 22:00:35.779"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:35.792" level="INFO">${OVERHEAD} = {'time': [0.021097347, 0.021180125, 0.021260694, 0.021343403, 0.021427653, 0.021509847, 0.021596681, 0.021682986, 0.021766708, 0.021848528, 0.021929861, 0.022012556, 0.022095472, 0.022179931, 0.022260...</msg>
<status status="PASS" starttime="20201115 22:00:35.779" endtime="20201115 22:00:35.792"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:35.797" level="INFO">NAME: 00-overhead-6-set</msg>
<status status="PASS" starttime="20201115 22:00:35.796" endtime="20201115 22:00:35.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:35.799" level="INFO">VALUE: [3.888999999999976e-06, 3.888999999999976e-06, 3.875000000000406e-06, 3.888999999999976e-06, 3.917000000002585e-06, 3.818999999998657e-06, 3.888999999999976e-06, 3.917000000002585e-06, 3.888999999999976e-06, 3.875000000000406e-06, 3.929999999999212e-06, 3.902999999999546e-06, 3.888999999999976e-06, 3.888999999999976e-06, 3.8200000000016e-06, 3.875000000000406e-06, 3.888000000000502e-06, 3.944000000002251e-06, 3.888999999999976e-06, 3.888000000000502e-06, 3.944000000002251e-06, 3.888999999999976e-06, 3.943999999998782e-06, 3.888000000000502e-06, 3.902999999999546e-06, 3.888999999999976e-06, 3.875000000000406e-06, 3.917000000002585e-06, 3.902999999999546e-06, 3.902999999999546e-06, 3.888999999999976e-06, 3.902999999999546e-06, 3.888999999999976e-06, 3.916999999999116e-06, 3.888999999999976e-06, 3.888999999999976e-06, 3.875000000000406e-06, 3.903000000003015e-06, 3.861000000000836e-06, 3.902999999999546e-06, 3.888999999999976e-06, 3.888999999999976e-06, 3.888999999999976e-06, 3.888999999999976e-06, 3.902000000000072e-06, 3.915999999999642e-06, 3.888999999999976e-06, 3.888999999999976e-06, 3.888999999999976e-06, 3.958000000001821e-06]</msg>
<status status="PASS" starttime="20201115 22:00:35.798" endtime="20201115 22:00:35.800"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.793" endtime="20201115 22:00:35.800"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:35.803" endtime="20201115 22:00:35.804"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:35.806" endtime="20201115 22:00:35.826"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.804" endtime="20201115 22:00:35.826"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.801" endtime="20201115 22:00:35.827"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.433" endtime="20201115 22:00:35.827"></status>
</kw>
<msg timestamp="20201115 22:00:35.827" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:35.837" endtime="20201115 22:00:35.851"></status>
</kw>
<msg timestamp="20201115 22:00:35.852" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:35.835" endtime="20201115 22:00:35.852"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:35.854" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:35.853" endtime="20201115 22:00:35.854"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:35.855" endtime="20201115 22:00:35.857"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.832" endtime="20201115 22:00:35.858"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.830" endtime="20201115 22:00:35.858"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:35.865" endtime="20201115 22:00:36.152"></status>
</kw>
<msg timestamp="20201115 22:00:36.156" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020370764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020374653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:35.863" endtime="20201115 22:00:36.156"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:36.164" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020370764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020374653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:36.157" endtime="20201115 22:00:36.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:36.166" endtime="20201115 22:00:36.167"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.860" endtime="20201115 22:00:36.168"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.859" endtime="20201115 22:00:36.168"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:36.173" level="INFO">${RESULT} = [{'time': 0.020374653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.888999999999976e-06, 'source_diff': 3.888999999999976e-06}, {'time': 0.020458389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:36.169" endtime="20201115 22:00:36.173"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:36.186" level="INFO">${OVERHEAD} = {'time': [0.020374653, 0.020458389, 0.02053975, 0.020620861, 0.020706042, 0.020789056, 0.020875181, 0.020955736, 0.021036306, 0.021118306, 0.021199653, 0.02127975, 0.021366514, 0.021452403, 0.0215335,...</msg>
<status status="PASS" starttime="20201115 22:00:36.174" endtime="20201115 22:00:36.186"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:36.191" level="INFO">NAME: 00-overhead-6-set</msg>
<status status="PASS" starttime="20201115 22:00:36.190" endtime="20201115 22:00:36.191"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:36.194" level="INFO">VALUE: [3.888999999999976e-06, 3.888999999999976e-06, 3.888999999999976e-06, 3.888999999999976e-06, 3.84800000000074e-06, 3.888999999999976e-06, 3.902999999999546e-06, 3.888999999999976e-06, 3.888999999999976e-06, 3.902999999999546e-06, 3.888999999999976e-06, 3.888999999999976e-06, 3.902999999999546e-06, 3.902999999999546e-06, 3.861000000000836e-06, 3.902999999999546e-06, 3.888999999999976e-06, 3.902000000000072e-06, 3.902999999999546e-06, 3.875000000000406e-06, 3.888999999999976e-06, 3.888000000000502e-06, 3.888999999999976e-06, 3.915999999999642e-06, 3.888999999999976e-06, 3.875000000000406e-06, 3.888999999999976e-06, 3.888999999999976e-06, 3.902999999999546e-06, 3.818999999998657e-06, 3.902999999999546e-06, 3.902999999999546e-06, 3.902999999999546e-06, 3.888999999999976e-06, 3.902999999999546e-06, 3.861000000000836e-06, 3.902000000000072e-06, 3.875000000000406e-06, 3.819000000002126e-06, 3.903000000003015e-06, 3.8609999999973665e-06, 3.861000000000836e-06, 3.888999999999976e-06, 3.902999999999546e-06, 3.888000000000502e-06, 3.888999999999976e-06, 3.903000000003015e-06, 3.888999999999976e-06, 3.902999999999546e-06, 3.929999999999212e-06]</msg>
<status status="PASS" starttime="20201115 22:00:36.192" endtime="20201115 22:00:36.194"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.187" endtime="20201115 22:00:36.194"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:36.197" endtime="20201115 22:00:36.198"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:36.200" endtime="20201115 22:00:36.220"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.199" endtime="20201115 22:00:36.221"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.195" endtime="20201115 22:00:36.221"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.828" endtime="20201115 22:00:36.221"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.240" endtime="20201115 22:00:36.222"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.239" endtime="20201115 22:00:36.222"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:36.224" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:36.233" endtime="20201115 22:00:36.248"></status>
</kw>
<msg timestamp="20201115 22:00:36.248" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:36.232" endtime="20201115 22:00:36.249"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:36.251" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:36.250" endtime="20201115 22:00:36.251"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:36.252" endtime="20201115 22:00:36.254"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.229" endtime="20201115 22:00:36.254"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.227" endtime="20201115 22:00:36.255"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:36.262" endtime="20201115 22:00:36.550"></status>
</kw>
<msg timestamp="20201115 22:00:36.554" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022866208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022870361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:36.260" endtime="20201115 22:00:36.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:36.562" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022866208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022870361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:36.555" endtime="20201115 22:00:36.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:36.563" endtime="20201115 22:00:36.565"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.258" endtime="20201115 22:00:36.566"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.256" endtime="20201115 22:00:36.566"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:36.570" level="INFO">${RESULT} = [{'time': 0.022870361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.152999999999796e-06, 'source_diff': 4.152999999999796e-06}, {'time': 0.022964069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:36.567" endtime="20201115 22:00:36.571"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:36.584" level="INFO">${OVERHEAD} = {'time': [0.022870361, 0.022964069, 0.023054917, 0.023142736, 0.023235542, 0.02332975, 0.023419153, 0.023507194, 0.023601611, 0.023696264, 0.023785681, 0.023879931, 0.023967222, 0.024057806, 0.0241479...</msg>
<status status="PASS" starttime="20201115 22:00:36.571" endtime="20201115 22:00:36.584"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:36.589" level="INFO">NAME: 00-overhead-7-set</msg>
<status status="PASS" starttime="20201115 22:00:36.588" endtime="20201115 22:00:36.589"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:36.591" level="INFO">VALUE: [4.152999999999796e-06, 4.152000000000322e-06, 4.152999999999796e-06, 4.166999999999366e-06, 4.125000000000656e-06, 4.166999999999366e-06, 4.167000000002835e-06, 4.137999999997283e-06, 4.152999999999796e-06, 4.139000000000226e-06, 4.139000000000226e-06, 4.152999999999796e-06, 4.165999999999892e-06, 4.152999999999796e-06, 4.139000000000226e-06, 4.082999999998477e-06, 4.166999999999366e-06, 4.194000000002501e-06, 4.09800000000099e-06, 4.181000000002405e-06, 4.166999999999366e-06, 4.179999999999462e-06, 4.139000000000226e-06, 4.153000000003265e-06, 4.151999999996853e-06, 4.181000000002405e-06, 4.152999999999796e-06, 4.152000000000322e-06, 4.165999999999892e-06, 4.166999999999366e-06, 4.11200000000056e-06, 4.1809999999989356e-06, 4.152999999999796e-06, 4.139000000000226e-06, 4.139000000000226e-06, 4.152000000000322e-06, 4.152999999999796e-06, 4.179999999999462e-06, 4.208000000002071e-06, 4.167000000002835e-06, 4.125000000000656e-06, 4.139000000000226e-06, 4.139000000000226e-06, 4.152999999999796e-06, 4.139000000000226e-06, 4.166999999999366e-06, 4.152999999999796e-06, 4.152999999999796e-06, 4.166999999999366e-06, 4.152999999999796e-06]</msg>
<status status="PASS" starttime="20201115 22:00:36.590" endtime="20201115 22:00:36.592"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.585" endtime="20201115 22:00:36.592"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:36.595" endtime="20201115 22:00:36.596"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:36.598" endtime="20201115 22:00:36.618"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.597" endtime="20201115 22:00:36.618"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.593" endtime="20201115 22:00:36.619"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.225" endtime="20201115 22:00:36.619"></status>
</kw>
<msg timestamp="20201115 22:00:36.619" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:36.629" endtime="20201115 22:00:36.641"></status>
</kw>
<msg timestamp="20201115 22:00:36.642" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:36.627" endtime="20201115 22:00:36.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:36.645" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:36.643" endtime="20201115 22:00:36.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:36.646" endtime="20201115 22:00:36.648"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.624" endtime="20201115 22:00:36.648"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.622" endtime="20201115 22:00:36.649"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:36.656" endtime="20201115 22:00:36.943"></status>
</kw>
<msg timestamp="20201115 22:00:36.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020748903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020753056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:36.654" endtime="20201115 22:00:36.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:36.955" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020748903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020753056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:36.947" endtime="20201115 22:00:36.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:36.956" endtime="20201115 22:00:36.958"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.651" endtime="20201115 22:00:36.958"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.650" endtime="20201115 22:00:36.959"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:36.963" level="INFO">${RESULT} = [{'time': 0.020753056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.152999999999796e-06, 'source_diff': 4.152999999999796e-06}, {'time': 0.020846583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:36.959" endtime="20201115 22:00:36.963"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:36.976" level="INFO">${OVERHEAD} = {'time': [0.020753056, 0.020846583, 0.020935986, 0.021023514, 0.021114583, 0.021208125, 0.021296417, 0.021389639, 0.021484292, 0.021575208, 0.021667306, 0.021757514, 0.021849597, 0.021942361, 0.022032...</msg>
<status status="PASS" starttime="20201115 22:00:36.964" endtime="20201115 22:00:36.977"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:36.981" level="INFO">NAME: 00-overhead-7-set</msg>
<status status="PASS" starttime="20201115 22:00:36.980" endtime="20201115 22:00:36.981"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:36.984" level="INFO">VALUE: [4.152999999999796e-06, 4.165999999999892e-06, 4.068999999998907e-06, 4.152999999999796e-06, 4.152000000000322e-06, 4.167000000002835e-06, 4.152999999999796e-06, 4.152999999999796e-06, 4.1109999999976166e-06, 4.139000000000226e-06, 4.125000000000656e-06, 4.1249999999971865e-06, 4.193999999999032e-06, 4.152999999999796e-06, 4.179999999999462e-06, 4.221999999998172e-06, 4.152999999999796e-06, 4.1809999999989356e-06, 4.1949999999985055e-06, 4.152000000000322e-06, 4.152999999999796e-06, 4.208000000002071e-06, 4.166999999999366e-06, 4.207999999998602e-06, 4.139000000000226e-06, 4.195000000001975e-06, 4.193999999999032e-06, 4.082999999998477e-06, 4.125000000000656e-06, 4.166999999999366e-06, 4.179999999999462e-06, 4.139000000000226e-06, 4.152999999999796e-06, 4.179999999999462e-06, 4.193999999999032e-06, 4.09799999999752e-06, 4.166999999999366e-06, 4.139000000000226e-06, 4.139000000000226e-06, 4.152999999999796e-06, 4.111000000001086e-06, 4.139000000000226e-06, 4.166999999999366e-06, 4.138000000000752e-06, 4.152999999999796e-06, 4.152999999999796e-06, 4.137999999997283e-06, 4.166999999999366e-06, 4.167000000002835e-06, 4.152999999999796e-06]</msg>
<status status="PASS" starttime="20201115 22:00:36.982" endtime="20201115 22:00:36.984"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.977" endtime="20201115 22:00:36.985"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:36.987" endtime="20201115 22:00:36.988"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:36.990" endtime="20201115 22:00:37.010"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.989" endtime="20201115 22:00:37.011"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.985" endtime="20201115 22:00:37.011"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.620" endtime="20201115 22:00:37.011"></status>
</kw>
<msg timestamp="20201115 22:00:37.012" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:37.021" endtime="20201115 22:00:37.035"></status>
</kw>
<msg timestamp="20201115 22:00:37.035" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:37.019" endtime="20201115 22:00:37.035"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:37.038" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:37.036" endtime="20201115 22:00:37.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:37.039" endtime="20201115 22:00:37.041"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.017" endtime="20201115 22:00:37.041"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.014" endtime="20201115 22:00:37.042"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:37.048" endtime="20201115 22:00:37.335"></status>
</kw>
<msg timestamp="20201115 22:00:37.339" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020895681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020899833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:37.047" endtime="20201115 22:00:37.339"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:37.348" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020895681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020899833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:37.340" endtime="20201115 22:00:37.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:37.349" endtime="20201115 22:00:37.351"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.044" endtime="20201115 22:00:37.352"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.042" endtime="20201115 22:00:37.352"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:37.357" level="INFO">${RESULT} = [{'time': 0.020899833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.152000000000322e-06, 'source_diff': 4.152000000000322e-06}, {'time': 0.020987806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:37.353" endtime="20201115 22:00:37.357"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:37.370" level="INFO">${OVERHEAD} = {'time': [0.020899833, 0.020987806, 0.021076986, 0.021165917, 0.021257569, 0.021347986, 0.021439639, 0.021534111, 0.021622181, 0.021715875, 0.021804694, 0.021894542, 0.021984014, 0.022072472, 0.022160...</msg>
<status status="PASS" starttime="20201115 22:00:37.358" endtime="20201115 22:00:37.370"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:37.375" level="INFO">NAME: 00-overhead-7-set</msg>
<status status="PASS" starttime="20201115 22:00:37.374" endtime="20201115 22:00:37.375"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:37.378" level="INFO">VALUE: [4.152000000000322e-06, 4.152999999999796e-06, 4.125000000000656e-06, 4.139000000000226e-06, 4.165999999999892e-06, 4.096999999998047e-06, 4.1809999999989356e-06, 4.167000000002835e-06, 4.152999999999796e-06, 4.152999999999796e-06, 4.193999999999032e-06, 4.152999999999796e-06, 4.125000000000656e-06, 4.139000000000226e-06, 4.139000000000226e-06, 4.138999999996756e-06, 4.193999999999032e-06, 4.166999999999366e-06, 4.139000000000226e-06, 4.166999999999366e-06, 4.153000000003265e-06, 4.236000000001211e-06, 4.152999999999796e-06, 4.152999999999796e-06, 4.152999999999796e-06, 4.165999999999892e-06, 4.166999999999366e-06, 4.1660000000033615e-06, 4.139000000000226e-06, 4.152999999999796e-06, 4.152000000000322e-06, 4.139000000000226e-06, 4.139000000000226e-06, 4.181000000002405e-06, 4.193999999999032e-06, 4.165999999999892e-06, 4.125000000000656e-06, 4.09800000000099e-06, 4.167000000002835e-06, 4.152999999999796e-06, 4.153000000003265e-06, 4.166999999999366e-06, 4.068999999998907e-06, 4.139000000000226e-06, 4.166999999999366e-06, 4.166999999999366e-06, 4.165999999999892e-06, 4.139000000000226e-06, 4.179999999999462e-06, 4.152999999999796e-06]</msg>
<status status="PASS" starttime="20201115 22:00:37.376" endtime="20201115 22:00:37.378"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.371" endtime="20201115 22:00:37.378"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:37.381" endtime="20201115 22:00:37.382"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:37.384" endtime="20201115 22:00:37.404"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.383" endtime="20201115 22:00:37.404"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.379" endtime="20201115 22:00:37.405"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.012" endtime="20201115 22:00:37.405"></status>
</kw>
<msg timestamp="20201115 22:00:37.406" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:37.415" endtime="20201115 22:00:37.428"></status>
</kw>
<msg timestamp="20201115 22:00:37.429" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:37.414" endtime="20201115 22:00:37.429"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:37.431" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:37.430" endtime="20201115 22:00:37.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:37.432" endtime="20201115 22:00:37.434"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.411" endtime="20201115 22:00:37.434"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.409" endtime="20201115 22:00:37.435"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:37.442" endtime="20201115 22:00:37.730"></status>
</kw>
<msg timestamp="20201115 22:00:37.733" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021331444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021335597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:37.440" endtime="20201115 22:00:37.733"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:37.741" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021331444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021335597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:37.734" endtime="20201115 22:00:37.742"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:37.742" endtime="20201115 22:00:37.744"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.437" endtime="20201115 22:00:37.745"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.436" endtime="20201115 22:00:37.745"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:37.749" level="INFO">${RESULT} = [{'time': 0.021335597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.152999999999796e-06, 'source_diff': 4.152999999999796e-06}, {'time': 0.021424792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:37.746" endtime="20201115 22:00:37.750"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:37.763" level="INFO">${OVERHEAD} = {'time': [0.021335597, 0.021424792, 0.021515625, 0.021603861, 0.021695472, 0.021786153, 0.021879139, 0.021970236, 0.022060417, 0.022152694, 0.022243778, 0.022338042, 0.022425389, 0.022519375, 0.022608...</msg>
<status status="PASS" starttime="20201115 22:00:37.750" endtime="20201115 22:00:37.763"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:37.768" level="INFO">NAME: 00-overhead-7-set</msg>
<status status="PASS" starttime="20201115 22:00:37.767" endtime="20201115 22:00:37.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:37.771" level="INFO">VALUE: [4.152999999999796e-06, 4.167000000002835e-06, 4.152999999999796e-06, 4.152999999999796e-06, 4.152999999999796e-06, 4.125000000000656e-06, 4.152999999999796e-06, 4.166999999999366e-06, 4.152999999999796e-06, 4.152000000000322e-06, 4.152999999999796e-06, 4.166999999999366e-06, 4.1809999999989356e-06, 4.139000000000226e-06, 4.096999999998047e-06, 4.152000000000322e-06, 4.138000000000752e-06, 4.193999999999032e-06, 4.208999999998075e-06, 4.165999999999892e-06, 4.152999999999796e-06, 4.139000000000226e-06, 4.096999999998047e-06, 4.207999999998602e-06, 4.152999999999796e-06, 4.139000000000226e-06, 4.152999999999796e-06, 4.152999999999796e-06, 4.152000000000322e-06, 4.152999999999796e-06, 4.152999999999796e-06, 4.125000000000656e-06, 4.152999999999796e-06, 4.153000000003265e-06, 4.152999999999796e-06, 4.152000000000322e-06, 4.097000000001516e-06, 4.193999999999032e-06, 4.139000000000226e-06, 4.152999999999796e-06, 4.152999999999796e-06, 4.166999999999366e-06, 4.179999999999462e-06, 4.125000000000656e-06, 4.153000000003265e-06, 4.166999999999366e-06, 4.222000000001641e-06, 4.152999999999796e-06, 4.222000000001641e-06, 4.139000000000226e-06]</msg>
<status status="PASS" starttime="20201115 22:00:37.770" endtime="20201115 22:00:37.771"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.764" endtime="20201115 22:00:37.772"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:37.774" endtime="20201115 22:00:37.776"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:37.778" endtime="20201115 22:00:37.798"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.777" endtime="20201115 22:00:37.799"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.773" endtime="20201115 22:00:37.799"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.407" endtime="20201115 22:00:37.799"></status>
</kw>
<msg timestamp="20201115 22:00:37.800" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:37.809" endtime="20201115 22:00:37.824"></status>
</kw>
<msg timestamp="20201115 22:00:37.825" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:37.807" endtime="20201115 22:00:37.825"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:37.827" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:37.826" endtime="20201115 22:00:37.828"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:37.829" endtime="20201115 22:00:37.830"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.804" endtime="20201115 22:00:37.831"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.802" endtime="20201115 22:00:37.831"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:37.838" endtime="20201115 22:00:38.127"></status>
</kw>
<msg timestamp="20201115 22:00:38.130" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020731333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0207355, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:00:37.836" endtime="20201115 22:00:38.131"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:38.139" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020731333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0207355, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:00:38.131" endtime="20201115 22:00:38.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:38.140" endtime="20201115 22:00:38.142"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.834" endtime="20201115 22:00:38.142"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.832" endtime="20201115 22:00:38.143"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:38.147" level="INFO">${RESULT} = [{'time': 0.0207355, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.166999999999366e-06, 'source_diff': 4.166999999999366e-06}, {'time': 0.020823944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:00:38.144" endtime="20201115 22:00:38.147"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:38.161" level="INFO">${OVERHEAD} = {'time': [0.0207355, 0.020823944, 0.020918597, 0.021006653, 0.021097069, 0.021190333, 0.021279028, 0.021370903, 0.021461028, 0.021555667, 0.021644139, 0.021738861, 0.021831486, 0.021924431, 0.02201915...</msg>
<status status="PASS" starttime="20201115 22:00:38.148" endtime="20201115 22:00:38.161"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:38.165" level="INFO">NAME: 00-overhead-7-set</msg>
<status status="PASS" starttime="20201115 22:00:38.164" endtime="20201115 22:00:38.166"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:38.168" level="INFO">VALUE: [4.166999999999366e-06, 4.111000000001086e-06, 4.152999999999796e-06, 4.152999999999796e-06, 4.193999999999032e-06, 4.165999999999892e-06, 4.152999999999796e-06, 4.166999999999366e-06, 4.152999999999796e-06, 4.125000000000656e-06, 4.139000000000226e-06, 4.139000000000226e-06, 4.193999999999032e-06, 4.152999999999796e-06, 4.139000000000226e-06, 4.139000000000226e-06, 4.165999999999892e-06, 4.152000000000322e-06, 4.152000000000322e-06, 4.152999999999796e-06, 4.139000000000226e-06, 4.139000000000226e-06, 4.166999999999366e-06, 4.1809999999989356e-06, 4.152000000000322e-06, 4.139000000000226e-06, 4.152999999999796e-06, 4.152999999999796e-06, 4.152999999999796e-06, 4.166999999999366e-06, 4.152999999999796e-06, 4.152999999999796e-06, 4.151999999996853e-06, 4.193999999999032e-06, 4.167000000002835e-06, 4.152999999999796e-06, 4.165999999999892e-06, 4.167000000002835e-06, 4.166999999999366e-06, 4.111000000001086e-06, 4.1949999999985055e-06, 4.152999999999796e-06, 4.1809999999989356e-06, 4.152999999999796e-06, 4.1809999999989356e-06, 4.152999999999796e-06, 4.139000000000226e-06, 4.138000000000752e-06, 4.165999999999892e-06, 4.165999999999892e-06]</msg>
<status status="PASS" starttime="20201115 22:00:38.167" endtime="20201115 22:00:38.169"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.162" endtime="20201115 22:00:38.169"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:38.173" endtime="20201115 22:00:38.174"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:38.177" endtime="20201115 22:00:38.196"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.175" endtime="20201115 22:00:38.197"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.171" endtime="20201115 22:00:38.197"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.800" endtime="20201115 22:00:38.197"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.223" endtime="20201115 22:00:38.198"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.222" endtime="20201115 22:00:38.198"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:38.200" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:38.209" endtime="20201115 22:00:38.223"></status>
</kw>
<msg timestamp="20201115 22:00:38.224" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:38.207" endtime="20201115 22:00:38.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:38.226" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:38.225" endtime="20201115 22:00:38.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:38.228" endtime="20201115 22:00:38.229"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.205" endtime="20201115 22:00:38.230"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.203" endtime="20201115 22:00:38.230"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:38.236" endtime="20201115 22:00:38.531"></status>
</kw>
<msg timestamp="20201115 22:00:38.538" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022195167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022199597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:38.235" endtime="20201115 22:00:38.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:38.556" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022195167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022199597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:38.540" endtime="20201115 22:00:38.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:38.559" endtime="20201115 22:00:38.562"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.232" endtime="20201115 22:00:38.563"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.231" endtime="20201115 22:00:38.564"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:38.573" level="INFO">${RESULT} = [{'time': 0.022199597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.430000000003181e-06, 'source_diff': 4.430000000003181e-06}, {'time': 0.022297236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:38.566" endtime="20201115 22:00:38.573"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:38.602" level="INFO">${OVERHEAD} = {'time': [0.022199597, 0.022297236, 0.022396306, 0.022495069, 0.022593903, 0.022690278, 0.022791972, 0.022890486, 0.022987583, 0.023087903, 0.023187167, 0.023284083, 0.023380222, 0.023482167, 0.023584...</msg>
<status status="PASS" starttime="20201115 22:00:38.575" endtime="20201115 22:00:38.603"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:38.607" level="INFO">NAME: 00-overhead-8-set</msg>
<status status="PASS" starttime="20201115 22:00:38.606" endtime="20201115 22:00:38.607"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:38.610" level="INFO">VALUE: [4.430000000003181e-06, 4.375000000000906e-06, 4.416999999999616e-06, 4.402000000000572e-06, 4.416999999999616e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.417000000003085e-06, 4.416000000000142e-06, 4.403000000000046e-06, 4.417000000003085e-06, 4.402000000000572e-06, 4.416000000000142e-06, 4.431000000002655e-06, 4.429999999999712e-06, 4.429999999999712e-06, 4.457999999998852e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.429999999999712e-06, 4.430999999999186e-06, 4.4449999999987555e-06, 4.375000000000906e-06, 4.416999999999616e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.416000000000142e-06, 4.430999999999186e-06, 4.417000000003085e-06, 4.429999999999712e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.429999999999712e-06, 4.375000000000906e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.360999999997867e-06, 4.34800000000124e-06, 4.429999999999712e-06, 4.416999999999616e-06, 4.416000000000142e-06, 4.416999999999616e-06, 4.416999999999616e-06, 4.416999999999616e-06, 4.416999999999616e-06, 4.500000000001031e-06, 4.416999999999616e-06, 4.416999999999616e-06, 4.416999999999616e-06, 4.403000000000046e-06]</msg>
<status status="PASS" starttime="20201115 22:00:38.608" endtime="20201115 22:00:38.610"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.603" endtime="20201115 22:00:38.611"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:38.613" endtime="20201115 22:00:38.614"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:38.617" endtime="20201115 22:00:38.636"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.615" endtime="20201115 22:00:38.637"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.611" endtime="20201115 22:00:38.637"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.201" endtime="20201115 22:00:38.638"></status>
</kw>
<msg timestamp="20201115 22:00:38.638" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:38.647" endtime="20201115 22:00:38.661"></status>
</kw>
<msg timestamp="20201115 22:00:38.662" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:38.645" endtime="20201115 22:00:38.662"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:38.664" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:38.663" endtime="20201115 22:00:38.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:38.666" endtime="20201115 22:00:38.667"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.642" endtime="20201115 22:00:38.668"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.640" endtime="20201115 22:00:38.668"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:38.675" endtime="20201115 22:00:38.961"></status>
</kw>
<msg timestamp="20201115 22:00:38.964" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019908264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019912667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:38.673" endtime="20201115 22:00:38.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:38.972" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019908264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019912667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:38.965" endtime="20201115 22:00:38.973"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:38.974" endtime="20201115 22:00:38.975"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.670" endtime="20201115 22:00:38.976"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.669" endtime="20201115 22:00:38.976"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:38.980" level="INFO">${RESULT} = [{'time': 0.019912667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.403000000000046e-06, 'source_diff': 4.403000000000046e-06}, {'time': 0.020011903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:38.977" endtime="20201115 22:00:38.981"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:38.994" level="INFO">${OVERHEAD} = {'time': [0.019912667, 0.020011903, 0.020107333, 0.02020475, 0.020301917, 0.020403528, 0.020499528, 0.020602139, 0.020698764, 0.020798944, 0.020900639, 0.020997514, 0.021093403, 0.021192472, 0.0212920...</msg>
<status status="PASS" starttime="20201115 22:00:38.981" endtime="20201115 22:00:38.994"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:38.999" level="INFO">NAME: 00-overhead-8-set</msg>
<status status="PASS" starttime="20201115 22:00:38.998" endtime="20201115 22:00:38.999"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:39.002" level="INFO">VALUE: [4.403000000000046e-06, 4.403000000000046e-06, 4.416000000000142e-06, 4.416999999999616e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.416000000000142e-06, 4.416999999999616e-06, 4.346999999998297e-06, 4.416999999999616e-06, 4.416000000000142e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.416000000000142e-06, 4.403000000000046e-06, 4.430999999999186e-06, 4.416000000000142e-06, 4.416999999999616e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.429999999999712e-06, 4.416999999999616e-06, 4.416000000000142e-06, 4.430999999999186e-06, 4.458000000002321e-06, 4.416000000000142e-06, 4.417000000003085e-06, 4.416999999999616e-06, 4.346999999998297e-06, 4.403000000000046e-06, 4.430000000003181e-06, 4.416999999999616e-06, 4.360999999997867e-06, 4.403000000000046e-06, 4.486000000001461e-06, 4.430999999999186e-06, 4.431000000002655e-06, 4.416000000000142e-06, 4.472000000001891e-06, 4.3749999999974365e-06, 4.416000000000142e-06, 4.486000000001461e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.430999999999186e-06, 4.416999999999616e-06]</msg>
<status status="PASS" starttime="20201115 22:00:39.000" endtime="20201115 22:00:39.002"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.995" endtime="20201115 22:00:39.003"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:39.005" endtime="20201115 22:00:39.006"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:39.009" endtime="20201115 22:00:39.028"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.007" endtime="20201115 22:00:39.029"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.003" endtime="20201115 22:00:39.029"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.638" endtime="20201115 22:00:39.029"></status>
</kw>
<msg timestamp="20201115 22:00:39.030" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:39.039" endtime="20201115 22:00:39.054"></status>
</kw>
<msg timestamp="20201115 22:00:39.055" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:39.037" endtime="20201115 22:00:39.055"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:39.057" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:39.056" endtime="20201115 22:00:39.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:39.058" endtime="20201115 22:00:39.060"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.034" endtime="20201115 22:00:39.061"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.032" endtime="20201115 22:00:39.061"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:39.067" endtime="20201115 22:00:39.354"></status>
</kw>
<msg timestamp="20201115 22:00:39.357" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020061958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020066361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:39.066" endtime="20201115 22:00:39.358"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:39.366" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020061958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020066361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:39.359" endtime="20201115 22:00:39.366"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:39.367" endtime="20201115 22:00:39.379"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.063" endtime="20201115 22:00:39.379"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.062" endtime="20201115 22:00:39.380"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:39.384" level="INFO">${RESULT} = [{'time': 0.020066361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.403000000000046e-06, 'source_diff': 4.403000000000046e-06}, {'time': 0.020167819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:39.380" endtime="20201115 22:00:39.384"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:39.398" level="INFO">${OVERHEAD} = {'time': [0.020066361, 0.020167819, 0.020269264, 0.020368569, 0.020466139, 0.020567597, 0.020668514, 0.020764958, 0.020863708, 0.020961042, 0.021061944, 0.021163653, 0.021265014, 0.02136125, 0.0214609...</msg>
<status status="PASS" starttime="20201115 22:00:39.385" endtime="20201115 22:00:39.398"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:39.402" level="INFO">NAME: 00-overhead-8-set</msg>
<status status="PASS" starttime="20201115 22:00:39.401" endtime="20201115 22:00:39.403"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:39.405" level="INFO">VALUE: [4.403000000000046e-06, 4.416000000000142e-06, 4.416999999999616e-06, 4.402000000000572e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.430999999999186e-06, 4.416000000000142e-06, 4.389000000000476e-06, 4.360999999997867e-06, 4.416000000000142e-06, 4.361000000001336e-06, 4.403000000000046e-06, 4.430999999999186e-06, 4.416000000000142e-06, 4.416999999999616e-06, 4.429999999999712e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.402000000000572e-06, 4.472000000001891e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.416999999999616e-06, 4.500000000001031e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.361000000001336e-06, 4.471999999998422e-06, 4.416999999999616e-06, 4.429999999999712e-06, 4.429999999999712e-06, 4.430000000003181e-06, 4.444000000002751e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.417000000003085e-06, 4.403000000000046e-06, 4.402000000000572e-06, 4.416000000000142e-06, 4.403000000000046e-06, 4.429999999999712e-06, 4.416000000000142e-06, 4.416999999999616e-06, 4.430999999999186e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.4449999999987555e-06, 4.416999999999616e-06]</msg>
<status status="PASS" starttime="20201115 22:00:39.404" endtime="20201115 22:00:39.406"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.399" endtime="20201115 22:00:39.406"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:39.409" endtime="20201115 22:00:39.410"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:39.412" endtime="20201115 22:00:39.432"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.411" endtime="20201115 22:00:39.432"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.407" endtime="20201115 22:00:39.433"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.030" endtime="20201115 22:00:39.433"></status>
</kw>
<msg timestamp="20201115 22:00:39.433" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:39.442" endtime="20201115 22:00:39.456"></status>
</kw>
<msg timestamp="20201115 22:00:39.456" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:39.441" endtime="20201115 22:00:39.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:39.459" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:39.457" endtime="20201115 22:00:39.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:39.460" endtime="20201115 22:00:39.461"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.438" endtime="20201115 22:00:39.462"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.436" endtime="20201115 22:00:39.462"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:39.469" endtime="20201115 22:00:39.758"></status>
</kw>
<msg timestamp="20201115 22:00:39.761" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020243375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020247764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:39.467" endtime="20201115 22:00:39.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:39.769" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020243375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020247764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:39.762" endtime="20201115 22:00:39.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:39.775" endtime="20201115 22:00:39.777"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.464" endtime="20201115 22:00:39.778"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.463" endtime="20201115 22:00:39.778"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:39.782" level="INFO">${RESULT} = [{'time': 0.020247764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.389000000000476e-06, 'source_diff': 4.389000000000476e-06}, {'time': 0.020347944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:39.779" endtime="20201115 22:00:39.783"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:39.796" level="INFO">${OVERHEAD} = {'time': [0.020247764, 0.020347944, 0.020443681, 0.020542681, 0.020643111, 0.020742347, 0.020842139, 0.020941153, 0.021038056, 0.021137792, 0.02123375, 0.021330917, 0.021433556, 0.021532625, 0.0216307...</msg>
<status status="PASS" starttime="20201115 22:00:39.783" endtime="20201115 22:00:39.796"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:39.800" level="INFO">NAME: 00-overhead-8-set</msg>
<status status="PASS" starttime="20201115 22:00:39.799" endtime="20201115 22:00:39.801"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:39.803" level="INFO">VALUE: [4.389000000000476e-06, 4.402000000000572e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.430999999999186e-06, 4.416999999999616e-06, 4.430999999999186e-06, 4.403000000000046e-06, 4.375000000000906e-06, 4.416999999999616e-06, 4.416999999999616e-06, 4.416999999999616e-06, 4.430000000003181e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.430999999999186e-06, 4.389000000000476e-06, 4.445000000002225e-06, 4.416999999999616e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.417000000003085e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.416999999999616e-06, 4.430999999999186e-06, 4.416999999999616e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.430999999999186e-06, 4.416999999999616e-06, 4.402000000000572e-06, 4.443999999999282e-06, 4.429999999999712e-06, 4.416999999999616e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.429999999999712e-06, 4.500000000001031e-06, 4.389000000000476e-06, 4.416999999999616e-06, 4.361000000001336e-06]</msg>
<status status="PASS" starttime="20201115 22:00:39.801" endtime="20201115 22:00:39.803"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.797" endtime="20201115 22:00:39.804"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:39.806" endtime="20201115 22:00:39.807"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:39.810" endtime="20201115 22:00:39.829"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.808" endtime="20201115 22:00:39.830"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.804" endtime="20201115 22:00:39.830"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.434" endtime="20201115 22:00:39.830"></status>
</kw>
<msg timestamp="20201115 22:00:39.831" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:39.840" endtime="20201115 22:00:39.854"></status>
</kw>
<msg timestamp="20201115 22:00:39.854" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:39.838" endtime="20201115 22:00:39.854"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:39.857" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:39.855" endtime="20201115 22:00:39.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:39.858" endtime="20201115 22:00:39.860"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.836" endtime="20201115 22:00:39.860"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.833" endtime="20201115 22:00:39.860"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:39.867" endtime="20201115 22:00:40.153"></status>
</kw>
<msg timestamp="20201115 22:00:40.156" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019989056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019993458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:39.865" endtime="20201115 22:00:40.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:40.165" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019989056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019993458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:40.158" endtime="20201115 22:00:40.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:40.166" endtime="20201115 22:00:40.168"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.863" endtime="20201115 22:00:40.168"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.861" endtime="20201115 22:00:40.169"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:40.173" level="INFO">${RESULT} = [{'time': 0.019993458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.401999999997103e-06, 'source_diff': 4.401999999997103e-06}, {'time': 0.020095625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:40.169" endtime="20201115 22:00:40.173"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:40.186" level="INFO">${OVERHEAD} = {'time': [0.019993458, 0.020095625, 0.020195181, 0.020291556, 0.020390389, 0.020489042, 0.020587069, 0.020683486, 0.020784625, 0.020880847, 0.020977694, 0.021080097, 0.021180542, 0.021282389, 0.021381...</msg>
<status status="PASS" starttime="20201115 22:00:40.174" endtime="20201115 22:00:40.186"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:40.191" level="INFO">NAME: 00-overhead-8-set</msg>
<status status="PASS" starttime="20201115 22:00:40.190" endtime="20201115 22:00:40.191"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:40.193" level="INFO">VALUE: [4.401999999997103e-06, 4.416999999999616e-06, 4.416999999999616e-06, 4.416999999999616e-06, 4.3749999999974365e-06, 4.472999999997895e-06, 4.443999999999282e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.486000000001461e-06, 4.347000000001766e-06, 4.403000000000046e-06, 4.430999999999186e-06, 4.416999999999616e-06, 4.416000000000142e-06, 4.416999999999616e-06, 4.3339999999982e-06, 4.401999999997103e-06, 4.429999999999712e-06, 4.416999999999616e-06, 4.416999999999616e-06, 4.416000000000142e-06, 4.416000000000142e-06, 4.458000000002321e-06, 4.500000000001031e-06, 4.416000000000142e-06, 4.416000000000142e-06, 4.416000000000142e-06, 4.416000000000142e-06, 4.429999999999712e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.430999999999186e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.417000000003085e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.472000000001891e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.429999999999712e-06, 4.416000000000142e-06, 4.416999999999616e-06, 4.417000000003085e-06, 4.430999999999186e-06, 4.429999999999712e-06, 4.416999999999616e-06, 4.417000000003085e-06]</msg>
<status status="PASS" starttime="20201115 22:00:40.192" endtime="20201115 22:00:40.194"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.187" endtime="20201115 22:00:40.194"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:40.196" endtime="20201115 22:00:40.198"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:40.200" endtime="20201115 22:00:40.219"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.198" endtime="20201115 22:00:40.220"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.195" endtime="20201115 22:00:40.221"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.831" endtime="20201115 22:00:40.221"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.199" endtime="20201115 22:00:40.221"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.198" endtime="20201115 22:00:40.221"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:40.224" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:40.233" endtime="20201115 22:00:40.250"></status>
</kw>
<msg timestamp="20201115 22:00:40.251" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:40.232" endtime="20201115 22:00:40.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:40.253" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:40.252" endtime="20201115 22:00:40.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:40.255" endtime="20201115 22:00:40.256"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.229" endtime="20201115 22:00:40.257"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.226" endtime="20201115 22:00:40.257"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:40.264" endtime="20201115 22:00:40.551"></status>
</kw>
<msg timestamp="20201115 22:00:40.554" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023600847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023605528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:40.263" endtime="20201115 22:00:40.555"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:40.563" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023600847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023605528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:40.556" endtime="20201115 22:00:40.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:40.564" endtime="20201115 22:00:40.565"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.260" endtime="20201115 22:00:40.566"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.258" endtime="20201115 22:00:40.566"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:40.570" level="INFO">${RESULT} = [{'time': 0.023605528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.680999999999436e-06, 'source_diff': 4.680999999999436e-06}, {'time': 0.023716361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:40.567" endtime="20201115 22:00:40.571"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:40.584" level="INFO">${OVERHEAD} = {'time': [0.023605528, 0.023716361, 0.023824556, 0.023933167, 0.0240435, 0.024149903, 0.024260653, 0.024366764, 0.024476597, 0.024584472, 0.024692375, 0.024797181, 0.024903708, 0.025008569, 0.02511955...</msg>
<status status="PASS" starttime="20201115 22:00:40.571" endtime="20201115 22:00:40.584"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:40.588" level="INFO">NAME: 00-overhead-9-set</msg>
<status status="PASS" starttime="20201115 22:00:40.587" endtime="20201115 22:00:40.589"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:40.591" level="INFO">VALUE: [4.680999999999436e-06, 4.666999999999866e-06, 4.666999999999866e-06, 4.611000000001586e-06, 4.721999999998672e-06, 4.680999999999436e-06, 4.666999999999866e-06, 4.721999999998672e-06, 4.693999999999532e-06, 4.666000000000392e-06, 4.666999999999866e-06, 4.695000000002475e-06, 4.666000000000392e-06, 4.679999999999962e-06, 4.666999999999866e-06, 4.6949999999990055e-06, 4.666000000000392e-06, 4.6949999999990055e-06, 4.666999999999866e-06, 4.694000000003001e-06, 4.680999999999436e-06, 4.693999999999532e-06, 4.666000000000392e-06, 4.680999999999436e-06, 4.6389999999972564e-06, 4.707999999999102e-06, 4.6949999999990055e-06, 4.666999999999866e-06, 4.653000000000296e-06, 4.679999999999962e-06, 4.680999999999436e-06, 4.679999999999962e-06, 4.666000000000392e-06, 4.666999999999866e-06, 4.652000000000822e-06, 4.679999999999962e-06, 4.679999999999962e-06, 4.695000000002475e-06, 4.680999999999436e-06, 4.666999999999866e-06, 4.610999999998117e-06, 4.680999999999436e-06, 4.666000000000392e-06, 4.679999999999962e-06, 4.680999999999436e-06, 4.680999999999436e-06, 4.6949999999990055e-06, 4.666999999999866e-06, 4.653000000000296e-06, 4.695000000002475e-06]</msg>
<status status="PASS" starttime="20201115 22:00:40.589" endtime="20201115 22:00:40.591"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.585" endtime="20201115 22:00:40.592"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:40.594" endtime="20201115 22:00:40.595"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:40.597" endtime="20201115 22:00:40.617"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.596" endtime="20201115 22:00:40.618"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.592" endtime="20201115 22:00:40.618"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.224" endtime="20201115 22:00:40.618"></status>
</kw>
<msg timestamp="20201115 22:00:40.618" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:40.628" endtime="20201115 22:00:40.643"></status>
</kw>
<msg timestamp="20201115 22:00:40.643" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:40.626" endtime="20201115 22:00:40.644"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:40.646" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:40.645" endtime="20201115 22:00:40.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:40.648" endtime="20201115 22:00:40.649"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.623" endtime="20201115 22:00:40.650"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.621" endtime="20201115 22:00:40.650"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:40.657" endtime="20201115 22:00:40.944"></status>
</kw>
<msg timestamp="20201115 22:00:40.947" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020223208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020227819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:40.655" endtime="20201115 22:00:40.947"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:40.955" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020223208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020227819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:40.948" endtime="20201115 22:00:40.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:40.957" endtime="20201115 22:00:40.958"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.653" endtime="20201115 22:00:40.959"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.651" endtime="20201115 22:00:40.959"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:40.963" level="INFO">${RESULT} = [{'time': 0.020227819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.611000000001586e-06, 'source_diff': 4.611000000001586e-06}, {'time': 0.020338861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:40.960" endtime="20201115 22:00:40.964"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:40.977" level="INFO">${OVERHEAD} = {'time': [0.020227819, 0.020338861, 0.020446125, 0.020556722, 0.020661278, 0.020770417, 0.020877431, 0.020983486, 0.021093764, 0.021205083, 0.021312722, 0.021421611, 0.021527069, 0.021638375, 0.021744...</msg>
<status status="PASS" starttime="20201115 22:00:40.964" endtime="20201115 22:00:40.977"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:40.981" level="INFO">NAME: 00-overhead-9-set</msg>
<status status="PASS" starttime="20201115 22:00:40.980" endtime="20201115 22:00:40.982"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:40.984" level="INFO">VALUE: [4.611000000001586e-06, 4.666999999999866e-06, 4.666999999999866e-06, 4.693999999999532e-06, 4.695000000002475e-06, 4.680999999999436e-06, 4.680999999999436e-06, 4.7499999999978115e-06, 4.666999999999866e-06, 4.693999999999532e-06, 4.596999999998547e-06, 4.721999999998672e-06, 4.666000000000392e-06, 4.681000000002905e-06, 4.680999999999436e-06, 4.681000000002905e-06, 4.679999999999962e-06, 4.6389999999972564e-06, 4.666000000000392e-06, 4.666999999999866e-06, 4.679999999999962e-06, 4.695000000002475e-06, 4.679999999999962e-06, 4.639000000000726e-06, 4.721999999998672e-06, 4.693999999999532e-06, 4.680999999999436e-06, 4.679999999999962e-06, 4.679999999999962e-06, 4.666999999999866e-06, 4.653000000000296e-06, 4.653000000000296e-06, 4.6949999999990055e-06, 4.6949999999990055e-06, 4.639000000000726e-06, 4.680999999999436e-06, 4.639000000000726e-06, 4.680999999999436e-06, 4.693999999999532e-06, 4.679999999999962e-06, 4.679999999999962e-06, 4.653000000000296e-06, 4.666999999999866e-06, 4.667000000003335e-06, 4.666999999999866e-06, 4.666000000000392e-06, 4.693999999999532e-06, 4.735999999998242e-06, 4.735999999998242e-06, 4.680999999999436e-06]</msg>
<status status="PASS" starttime="20201115 22:00:40.982" endtime="20201115 22:00:40.984"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.977" endtime="20201115 22:00:40.985"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:40.987" endtime="20201115 22:00:40.989"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:40.991" endtime="20201115 22:00:41.010"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.989" endtime="20201115 22:00:41.011"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.985" endtime="20201115 22:00:41.011"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.619" endtime="20201115 22:00:41.012"></status>
</kw>
<msg timestamp="20201115 22:00:41.012" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:41.021" endtime="20201115 22:00:41.036"></status>
</kw>
<msg timestamp="20201115 22:00:41.037" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:41.019" endtime="20201115 22:00:41.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:41.039" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:41.038" endtime="20201115 22:00:41.040"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:41.040" endtime="20201115 22:00:41.042"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.017" endtime="20201115 22:00:41.043"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.014" endtime="20201115 22:00:41.043"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:41.050" endtime="20201115 22:00:41.338"></status>
</kw>
<msg timestamp="20201115 22:00:41.341" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020563222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020567889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:41.048" endtime="20201115 22:00:41.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:41.349" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020563222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020567889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:41.342" endtime="20201115 22:00:41.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:41.350" endtime="20201115 22:00:41.352"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.045" endtime="20201115 22:00:41.352"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.044" endtime="20201115 22:00:41.353"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:41.357" level="INFO">${RESULT} = [{'time': 0.020567889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.666999999999866e-06, 'source_diff': 4.666999999999866e-06}, {'time': 0.020672681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:41.353" endtime="20201115 22:00:41.357"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:41.370" level="INFO">${OVERHEAD} = {'time': [0.020567889, 0.020672681, 0.020781597, 0.020890208, 0.021000333, 0.021109486, 0.021215694, 0.021324375, 0.021428222, 0.021534278, 0.021642736, 0.021748514, 0.021857097, 0.021967361, 0.022072...</msg>
<status status="PASS" starttime="20201115 22:00:41.358" endtime="20201115 22:00:41.370"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:41.375" level="INFO">NAME: 00-overhead-9-set</msg>
<status status="PASS" starttime="20201115 22:00:41.374" endtime="20201115 22:00:41.375"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:41.377" level="INFO">VALUE: [4.666999999999866e-06, 4.666999999999866e-06, 4.666000000000392e-06, 4.679999999999962e-06, 4.679999999999962e-06, 4.693999999999532e-06, 4.679999999999962e-06, 4.610999999998117e-06, 4.666000000000392e-06, 4.653000000000296e-06, 4.693999999999532e-06, 4.721999999998672e-06, 4.693999999999532e-06, 4.679999999999962e-06, 4.666999999999866e-06, 4.666999999999866e-06, 4.680999999999436e-06, 4.695000000002475e-06, 4.653000000000296e-06, 4.693999999999532e-06, 4.680000000003431e-06, 4.680999999999436e-06, 4.653000000000296e-06, 4.735999999998242e-06, 4.693999999999532e-06, 4.680999999999436e-06, 4.666999999999866e-06, 4.596999999998547e-06, 4.681000000002905e-06, 4.666999999999866e-06, 4.680999999999436e-06, 4.680999999999436e-06, 4.666999999999866e-06, 4.666999999999866e-06, 4.666999999999866e-06, 4.679999999999962e-06, 4.6949999999990055e-06, 4.693999999999532e-06, 4.693999999999532e-06, 4.666999999999866e-06, 4.666999999999866e-06, 4.679999999999962e-06, 4.666999999999866e-06, 4.665999999996923e-06, 4.6949999999990055e-06, 4.679999999999962e-06, 4.695000000002475e-06, 4.6949999999990055e-06, 4.680999999999436e-06, 4.7089999999985754e-06]</msg>
<status status="PASS" starttime="20201115 22:00:41.376" endtime="20201115 22:00:41.378"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.371" endtime="20201115 22:00:41.378"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:41.380" endtime="20201115 22:00:41.382"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:41.384" endtime="20201115 22:00:41.403"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.382" endtime="20201115 22:00:41.404"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.379" endtime="20201115 22:00:41.404"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.012" endtime="20201115 22:00:41.404"></status>
</kw>
<msg timestamp="20201115 22:00:41.405" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:41.415" endtime="20201115 22:00:41.431"></status>
</kw>
<msg timestamp="20201115 22:00:41.431" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:41.413" endtime="20201115 22:00:41.432"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:41.434" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:41.432" endtime="20201115 22:00:41.434"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:41.435" endtime="20201115 22:00:41.437"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.410" endtime="20201115 22:00:41.437"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.408" endtime="20201115 22:00:41.438"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:41.444" endtime="20201115 22:00:41.730"></status>
</kw>
<msg timestamp="20201115 22:00:41.734" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021198986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021203681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:41.443" endtime="20201115 22:00:41.734"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:41.742" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021198986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021203681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:41.735" endtime="20201115 22:00:41.742"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:41.743" endtime="20201115 22:00:41.745"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.440" endtime="20201115 22:00:41.745"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.438" endtime="20201115 22:00:41.746"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:41.750" level="INFO">${RESULT} = [{'time': 0.021203681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.6949999999990055e-06, 'source_diff': 4.6949999999990055e-06}, {'time': 0.021312264, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:41.746" endtime="20201115 22:00:41.750"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:41.763" level="INFO">${OVERHEAD} = {'time': [0.021203681, 0.021312264, 0.021423528, 0.021534083, 0.021638278, 0.021745972, 0.021856792, 0.021963736, 0.022068819, 0.022177444, 0.022287722, 0.022398, 0.022503028, 0.022610931, 0.022715792...</msg>
<status status="PASS" starttime="20201115 22:00:41.751" endtime="20201115 22:00:41.763"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:41.768" level="INFO">NAME: 00-overhead-9-set</msg>
<status status="PASS" starttime="20201115 22:00:41.767" endtime="20201115 22:00:41.768"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:41.770" level="INFO">VALUE: [4.6949999999990055e-06, 4.666999999999866e-06, 4.709000000002045e-06, 4.666000000000392e-06, 4.721999999998672e-06, 4.666000000000392e-06, 4.680999999999436e-06, 4.693999999999532e-06, 4.735999999998242e-06, 4.679999999999962e-06, 4.666000000000392e-06, 4.693999999999532e-06, 4.666999999999866e-06, 4.695000000002475e-06, 4.666999999999866e-06, 4.680999999999436e-06, 4.653000000000296e-06, 4.721999999998672e-06, 4.666000000000392e-06, 4.6949999999990055e-06, 4.625000000001156e-06, 4.679999999999962e-06, 4.680999999999436e-06, 4.680999999999436e-06, 4.737000000001185e-06, 4.666000000000392e-06, 4.680999999999436e-06, 4.693999999999532e-06, 4.679999999999962e-06, 4.750000000001281e-06, 4.666999999999866e-06, 4.680999999999436e-06, 4.679999999999962e-06, 4.6949999999990055e-06, 4.680999999999436e-06, 4.610999999998117e-06, 4.666000000000392e-06, 4.679999999999962e-06, 4.666999999999866e-06, 4.680999999999436e-06, 4.679999999999962e-06, 4.679999999999962e-06, 4.625000000001156e-06, 4.666999999999866e-06, 4.681000000002905e-06, 4.680999999999436e-06, 4.708000000002571e-06, 4.6949999999990055e-06, 4.681000000002905e-06, 4.680999999999436e-06]</msg>
<status status="PASS" starttime="20201115 22:00:41.769" endtime="20201115 22:00:41.771"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.764" endtime="20201115 22:00:41.771"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:41.773" endtime="20201115 22:00:41.775"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:41.777" endtime="20201115 22:00:41.797"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.776" endtime="20201115 22:00:41.798"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.772" endtime="20201115 22:00:41.798"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.406" endtime="20201115 22:00:41.798"></status>
</kw>
<msg timestamp="20201115 22:00:41.799" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:41.808" endtime="20201115 22:00:41.823"></status>
</kw>
<msg timestamp="20201115 22:00:41.823" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:41.806" endtime="20201115 22:00:41.823"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:41.826" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:41.824" endtime="20201115 22:00:41.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:41.827" endtime="20201115 22:00:41.828"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.803" endtime="20201115 22:00:41.829"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.801" endtime="20201115 22:00:41.829"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:41.836" endtime="20201115 22:00:42.123"></status>
</kw>
<msg timestamp="20201115 22:00:42.126" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020066917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020071542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:41.834" endtime="20201115 22:00:42.126"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:42.134" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020066917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020071542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:42.127" endtime="20201115 22:00:42.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:42.135" endtime="20201115 22:00:42.137"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.832" endtime="20201115 22:00:42.137"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.830" endtime="20201115 22:00:42.138"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:42.142" level="INFO">${RESULT} = [{'time': 0.020071542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.625000000001156e-06, 'source_diff': 4.625000000001156e-06}, {'time': 0.020180694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:42.139" endtime="20201115 22:00:42.142"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:42.155" level="INFO">${OVERHEAD} = {'time': [0.020071542, 0.020180694, 0.020287389, 0.020392972, 0.020497847, 0.020608833, 0.020715361, 0.020823278, 0.020933125, 0.021040792, 0.021150181, 0.021254972, 0.021362153, 0.021466, 0.021570875...</msg>
<status status="PASS" starttime="20201115 22:00:42.143" endtime="20201115 22:00:42.155"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:42.160" level="INFO">NAME: 00-overhead-9-set</msg>
<status status="PASS" starttime="20201115 22:00:42.159" endtime="20201115 22:00:42.160"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:42.162" level="INFO">VALUE: [4.625000000001156e-06, 4.679999999999962e-06, 4.666999999999866e-06, 4.679999999999962e-06, 4.679999999999962e-06, 4.625000000001156e-06, 4.666999999999866e-06, 4.6949999999990055e-06, 4.653000000000296e-06, 4.680999999999436e-06, 4.680999999999436e-06, 4.653000000000296e-06, 4.666999999999866e-06, 4.666999999999866e-06, 4.680999999999436e-06, 4.679999999999962e-06, 4.679999999999962e-06, 4.679999999999962e-06, 4.666999999999866e-06, 4.666000000000392e-06, 4.679999999999962e-06, 4.666999999999866e-06, 4.680999999999436e-06, 4.680999999999436e-06, 4.679999999999962e-06, 4.679999999999962e-06, 4.693999999999532e-06, 4.680999999999436e-06, 4.680999999999436e-06, 4.681000000002905e-06, 4.653000000000296e-06, 4.693999999999532e-06, 4.666999999999866e-06, 4.666999999999866e-06, 4.679999999999962e-06, 4.651999999997353e-06, 4.679999999999962e-06, 4.667000000003335e-06, 4.6949999999990055e-06, 4.680999999999436e-06, 4.736000000001711e-06, 4.679999999999962e-06, 4.6949999999990055e-06, 4.653000000000296e-06, 4.680999999999436e-06, 4.680999999999436e-06, 4.693999999999532e-06, 4.680999999999436e-06, 4.681000000002905e-06, 4.680999999999436e-06]</msg>
<status status="PASS" starttime="20201115 22:00:42.161" endtime="20201115 22:00:42.163"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.156" endtime="20201115 22:00:42.164"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:42.166" endtime="20201115 22:00:42.167"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:42.169" endtime="20201115 22:00:42.189"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.168" endtime="20201115 22:00:42.189"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.164" endtime="20201115 22:00:42.190"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.799" endtime="20201115 22:00:42.190"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.222" endtime="20201115 22:00:42.190"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.222" endtime="20201115 22:00:42.191"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:42.193" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:42.202" endtime="20201115 22:00:42.217"></status>
</kw>
<msg timestamp="20201115 22:00:42.217" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:42.200" endtime="20201115 22:00:42.218"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:42.220" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:42.218" endtime="20201115 22:00:42.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:42.221" endtime="20201115 22:00:42.223"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.198" endtime="20201115 22:00:42.223"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.195" endtime="20201115 22:00:42.224"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:42.230" endtime="20201115 22:00:42.517"></status>
</kw>
<msg timestamp="20201115 22:00:42.520" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022500347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022505292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:42.229" endtime="20201115 22:00:42.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:42.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022500347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022505292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:42.521" endtime="20201115 22:00:42.529"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:42.529" endtime="20201115 22:00:42.531"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.226" endtime="20201115 22:00:42.532"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.224" endtime="20201115 22:00:42.532"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:42.536" level="INFO">${RESULT} = [{'time': 0.022505292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.9449999999992555e-06, 'source_diff': 4.9449999999992555e-06}, {'time': 0.022622083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:42.533" endtime="20201115 22:00:42.536"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:42.549" level="INFO">${OVERHEAD} = {'time': [0.022505292, 0.022622083, 0.022739847, 0.022857861, 0.022970847, 0.023086278, 0.023202639, 0.023316833, 0.023433181, 0.023549569, 0.023668597, 0.023782708, 0.023901111, 0.024020139, 0.024132...</msg>
<status status="PASS" starttime="20201115 22:00:42.537" endtime="20201115 22:00:42.550"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:42.554" level="INFO">NAME: 00-overhead-10-set</msg>
<status status="PASS" starttime="20201115 22:00:42.553" endtime="20201115 22:00:42.554"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:42.557" level="INFO">VALUE: [4.9449999999992555e-06, 4.943999999999782e-06, 4.943999999999782e-06, 4.943999999999782e-06, 4.930000000000212e-06, 4.985999999998492e-06, 4.9449999999992555e-06, 4.943999999999782e-06, 4.959000000002295e-06, 4.943999999999782e-06, 4.943999999999782e-06, 5.027000000001197e-06, 4.957999999999352e-06, 4.957999999999352e-06, 4.943999999999782e-06, 4.930999999999686e-06, 4.930999999999686e-06, 4.957999999999352e-06, 4.917000000000116e-06, 4.930999999999686e-06, 4.9449999999992555e-06, 4.943999999999782e-06, 4.916000000000642e-06, 4.889000000000976e-06, 4.943999999999782e-06, 4.943999999999782e-06, 4.945000000002725e-06, 4.958000000002821e-06, 4.943999999999782e-06, 4.9589999999988255e-06, 4.930000000000212e-06, 4.943999999999782e-06, 5.000000000001531e-06, 4.930999999999686e-06, 4.930999999999686e-06, 4.931000000003155e-06, 4.903000000000546e-06, 4.943999999999782e-06, 4.930999999999686e-06, 4.875000000001406e-06, 4.917000000000116e-06, 4.889000000000976e-06, 4.9999999999980616e-06, 4.943999999999782e-06, 4.943999999999782e-06, 4.9449999999992555e-06, 4.930000000000212e-06, 4.959000000002295e-06, 4.943999999999782e-06, 4.860999999998367e-06]</msg>
<status status="PASS" starttime="20201115 22:00:42.555" endtime="20201115 22:00:42.558"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.550" endtime="20201115 22:00:42.558"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:42.560" endtime="20201115 22:00:42.562"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:42.564" endtime="20201115 22:00:42.583"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.562" endtime="20201115 22:00:42.584"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.559" endtime="20201115 22:00:42.584"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.193" endtime="20201115 22:00:42.585"></status>
</kw>
<msg timestamp="20201115 22:00:42.585" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:42.594" endtime="20201115 22:00:42.610"></status>
</kw>
<msg timestamp="20201115 22:00:42.610" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:42.592" endtime="20201115 22:00:42.611"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:42.613" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:42.612" endtime="20201115 22:00:42.613"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:42.614" endtime="20201115 22:00:42.616"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.590" endtime="20201115 22:00:42.616"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.587" endtime="20201115 22:00:42.617"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:42.623" endtime="20201115 22:00:42.910"></status>
</kw>
<msg timestamp="20201115 22:00:42.913" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020233611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020238556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:42.622" endtime="20201115 22:00:42.914"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:42.921" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020233611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020238556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:42.914" endtime="20201115 22:00:42.922"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:42.923" endtime="20201115 22:00:42.924"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.619" endtime="20201115 22:00:42.925"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.617" endtime="20201115 22:00:42.925"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:42.929" level="INFO">${RESULT} = [{'time': 0.020238556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.945000000002725e-06, 'source_diff': 4.945000000002725e-06}, {'time': 0.020358514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:42.926" endtime="20201115 22:00:42.930"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:42.943" level="INFO">${OVERHEAD} = {'time': [0.020238556, 0.020358514, 0.020473125, 0.020587389, 0.020705861, 0.020823694, 0.020937889, 0.021057875, 0.021177792, 0.021290847, 0.021405042, 0.021524306, 0.021640236, 0.021754736, 0.021871...</msg>
<status status="PASS" starttime="20201115 22:00:42.930" endtime="20201115 22:00:42.943"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:42.948" level="INFO">NAME: 00-overhead-10-set</msg>
<status status="PASS" starttime="20201115 22:00:42.947" endtime="20201115 22:00:42.948"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:42.950" level="INFO">VALUE: [4.945000000002725e-06, 5.000000000001531e-06, 4.943999999999782e-06, 4.945000000002725e-06, 4.903000000000546e-06, 4.930000000000212e-06, 4.930999999999686e-06, 4.930999999999686e-06, 4.959000000002295e-06, 4.944000000003251e-06, 4.930999999999686e-06, 4.930999999999686e-06, 4.930000000000212e-06, 4.943999999999782e-06, 4.8749999999979365e-06, 4.971999999998922e-06, 4.930999999999686e-06, 4.9299999999967425e-06, 4.9449999999992555e-06, 4.930000000000212e-06, 4.943999999999782e-06, 4.958000000002821e-06, 4.9449999999992555e-06, 4.889000000000976e-06, 4.930999999999686e-06, 4.945000000002725e-06, 4.945000000002725e-06, 4.930999999999686e-06, 4.930999999999686e-06, 4.943999999999782e-06, 4.903000000000546e-06, 4.943999999999782e-06, 4.943999999999782e-06, 4.9449999999992555e-06, 4.9999999999980616e-06, 4.943999999999782e-06, 4.958000000002821e-06, 4.9589999999988255e-06, 4.917000000000116e-06, 4.930000000000212e-06, 4.943999999999782e-06, 4.930999999999686e-06, 4.930000000000212e-06, 4.875000000001406e-06, 4.943999999999782e-06, 4.917000000000116e-06, 4.930000000000212e-06, 4.943999999999782e-06, 4.9449999999992555e-06, 4.943999999999782e-06]</msg>
<status status="PASS" starttime="20201115 22:00:42.949" endtime="20201115 22:00:42.951"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.944" endtime="20201115 22:00:42.951"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:42.953" endtime="20201115 22:00:42.955"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:42.957" endtime="20201115 22:00:42.976"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.955" endtime="20201115 22:00:42.977"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.952" endtime="20201115 22:00:42.977"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.585" endtime="20201115 22:00:42.978"></status>
</kw>
<msg timestamp="20201115 22:00:42.978" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:42.987" endtime="20201115 22:00:43.003"></status>
</kw>
<msg timestamp="20201115 22:00:43.004" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:42.985" endtime="20201115 22:00:43.004"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:43.006" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:43.005" endtime="20201115 22:00:43.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:43.007" endtime="20201115 22:00:43.009"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.983" endtime="20201115 22:00:43.010"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.980" endtime="20201115 22:00:43.010"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:43.017" endtime="20201115 22:00:43.303"></status>
</kw>
<msg timestamp="20201115 22:00:43.306" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019981333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019986278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:43.015" endtime="20201115 22:00:43.306"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:43.314" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019981333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019986278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:43.307" endtime="20201115 22:00:43.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:43.315" endtime="20201115 22:00:43.317"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.013" endtime="20201115 22:00:43.318"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.011" endtime="20201115 22:00:43.318"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:43.322" level="INFO">${RESULT} = [{'time': 0.019986278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.9449999999992555e-06, 'source_diff': 4.9449999999992555e-06}, {'time': 0.0201045, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:43.319" endtime="20201115 22:00:43.323"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:43.336" level="INFO">${OVERHEAD} = {'time': [0.019986278, 0.0201045, 0.020217569, 0.020334389, 0.020450375, 0.020567361, 0.020684986, 0.020797556, 0.020910792, 0.021030056, 0.021145444, 0.021259167, 0.021377417, 0.021497417, 0.02161377...</msg>
<status status="PASS" starttime="20201115 22:00:43.324" endtime="20201115 22:00:43.336"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:43.340" level="INFO">NAME: 00-overhead-10-set</msg>
<status status="PASS" starttime="20201115 22:00:43.339" endtime="20201115 22:00:43.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:43.343" level="INFO">VALUE: [4.9449999999992555e-06, 4.943999999999782e-06, 4.930000000000212e-06, 4.930999999999686e-06, 5.000000000001531e-06, 4.943999999999782e-06, 4.943999999999782e-06, 4.9449999999992555e-06, 4.930999999999686e-06, 4.930999999999686e-06, 4.887999999998033e-06, 4.9449999999992555e-06, 4.9589999999988255e-06, 4.986000000001961e-06, 4.903000000000546e-06, 4.943999999999782e-06, 4.9449999999992555e-06, 4.987000000001435e-06, 4.930000000000212e-06, 4.9449999999992555e-06, 5.000000000001531e-06, 4.945000000002725e-06, 4.943999999999782e-06, 4.915999999997173e-06, 4.930000000000212e-06, 4.930000000000212e-06, 4.943999999999782e-06, 4.930999999999686e-06, 4.889000000000976e-06, 4.9449999999992555e-06, 4.971999999998922e-06, 5.026999999997728e-06, 4.943999999999782e-06, 4.917000000000116e-06, 4.930000000000212e-06, 4.917000000000116e-06, 4.930000000000212e-06, 4.9449999999992555e-06, 4.943999999999782e-06, 4.917000000000116e-06, 4.9589999999988255e-06, 4.902000000001072e-06, 4.930000000000212e-06, 4.9449999999992555e-06, 4.943999999999782e-06, 4.9449999999992555e-06, 4.943999999999782e-06, 4.917000000000116e-06, 4.930000000000212e-06, 4.943999999999782e-06]</msg>
<status status="PASS" starttime="20201115 22:00:43.342" endtime="20201115 22:00:43.343"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.337" endtime="20201115 22:00:43.344"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:43.346" endtime="20201115 22:00:43.348"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:43.350" endtime="20201115 22:00:43.369"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.348" endtime="20201115 22:00:43.370"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.344" endtime="20201115 22:00:43.370"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.978" endtime="20201115 22:00:43.370"></status>
</kw>
<msg timestamp="20201115 22:00:43.371" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:43.380" endtime="20201115 22:00:43.395"></status>
</kw>
<msg timestamp="20201115 22:00:43.396" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:43.378" endtime="20201115 22:00:43.396"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:43.398" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:43.397" endtime="20201115 22:00:43.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:43.399" endtime="20201115 22:00:43.401"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.375" endtime="20201115 22:00:43.402"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.373" endtime="20201115 22:00:43.402"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:43.409" endtime="20201115 22:00:43.696"></status>
</kw>
<msg timestamp="20201115 22:00:43.699" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020170236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020175181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:43.407" endtime="20201115 22:00:43.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:43.707" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020170236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020175181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:43.700" endtime="20201115 22:00:43.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:43.708" endtime="20201115 22:00:43.710"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.404" endtime="20201115 22:00:43.711"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.403" endtime="20201115 22:00:43.711"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:43.715" level="INFO">${RESULT} = [{'time': 0.020175181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.9449999999992555e-06, 'source_diff': 4.9449999999992555e-06}, {'time': 0.020290083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:43.712" endtime="20201115 22:00:43.716"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:43.729" level="INFO">${OVERHEAD} = {'time': [0.020175181, 0.020290083, 0.020408625, 0.020525917, 0.020644875, 0.020761278, 0.020873806, 0.020986806, 0.021103139, 0.021216389, 0.021335639, 0.021448403, 0.021564111, 0.021684042, 0.021800...</msg>
<status status="PASS" starttime="20201115 22:00:43.716" endtime="20201115 22:00:43.729"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:43.733" level="INFO">NAME: 00-overhead-10-set</msg>
<status status="PASS" starttime="20201115 22:00:43.732" endtime="20201115 22:00:43.734"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:43.736" level="INFO">VALUE: [4.9449999999992555e-06, 4.930000000000212e-06, 4.930999999999686e-06, 4.945000000002725e-06, 4.943999999999782e-06, 4.930999999999686e-06, 4.945000000002725e-06, 4.889000000000976e-06, 4.9449999999992555e-06, 4.917000000000116e-06, 4.889000000000976e-06, 4.945000000002725e-06, 4.943999999999782e-06, 4.973000000001865e-06, 4.943999999999782e-06, 4.959000000002295e-06, 5.028000000000671e-06, 4.943999999999782e-06, 4.889000000000976e-06, 4.943999999999782e-06, 4.930000000000212e-06, 4.943999999999782e-06, 4.916000000000642e-06, 4.930000000000212e-06, 4.930000000000212e-06, 4.930999999999686e-06, 4.916000000000642e-06, 4.930000000000212e-06, 4.957999999999352e-06, 4.930000000000212e-06, 4.930999999999686e-06, 4.945000000002725e-06, 4.945000000002725e-06, 4.9449999999992555e-06, 4.9449999999992555e-06, 4.945000000002725e-06, 4.9449999999992555e-06, 4.957999999999352e-06, 4.943999999999782e-06, 4.930999999999686e-06, 4.943999999999782e-06, 4.9449999999992555e-06, 4.930999999999686e-06, 4.889000000000976e-06, 4.930000000000212e-06, 4.9589999999988255e-06, 4.945000000002725e-06, 4.9299999999967425e-06, 4.930000000000212e-06, 4.930000000000212e-06]</msg>
<status status="PASS" starttime="20201115 22:00:43.734" endtime="20201115 22:00:43.736"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.730" endtime="20201115 22:00:43.737"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:43.739" endtime="20201115 22:00:43.740"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:43.742" endtime="20201115 22:00:43.762"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.741" endtime="20201115 22:00:43.762"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.737" endtime="20201115 22:00:43.763"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.371" endtime="20201115 22:00:43.763"></status>
</kw>
<msg timestamp="20201115 22:00:43.763" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:43.772" endtime="20201115 22:00:43.789"></status>
</kw>
<msg timestamp="20201115 22:00:43.789" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:43.771" endtime="20201115 22:00:43.789"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:43.792" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:43.790" endtime="20201115 22:00:43.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:43.793" endtime="20201115 22:00:43.794"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.768" endtime="20201115 22:00:43.795"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.766" endtime="20201115 22:00:43.795"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:43.802" endtime="20201115 22:00:44.089"></status>
</kw>
<msg timestamp="20201115 22:00:44.093" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020400014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020404958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:43.800" endtime="20201115 22:00:44.093"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:44.101" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020400014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020404958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:44.094" endtime="20201115 22:00:44.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:44.102" endtime="20201115 22:00:44.104"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.798" endtime="20201115 22:00:44.104"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.796" endtime="20201115 22:00:44.105"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:44.109" level="INFO">${RESULT} = [{'time': 0.020404958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.943999999999782e-06, 'source_diff': 4.943999999999782e-06}, {'time': 0.020518986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:44.106" endtime="20201115 22:00:44.109"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:44.122" level="INFO">${OVERHEAD} = {'time': [0.020404958, 0.020518986, 0.020638486, 0.02075275, 0.020871542, 0.020985319, 0.021104347, 0.021222833, 0.021335347, 0.021448681, 0.021566986, 0.0216795, 0.021793542, 0.021908986, 0.022025625...</msg>
<status status="PASS" starttime="20201115 22:00:44.110" endtime="20201115 22:00:44.123"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:44.127" level="INFO">NAME: 00-overhead-10-set</msg>
<status status="PASS" starttime="20201115 22:00:44.126" endtime="20201115 22:00:44.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:44.129" level="INFO">VALUE: [4.943999999999782e-06, 4.943999999999782e-06, 4.943999999999782e-06, 4.930999999999686e-06, 4.9449999999992555e-06, 4.887999999998033e-06, 4.930000000000212e-06, 4.930000000000212e-06, 4.930000000000212e-06, 4.959000000002295e-06, 4.957999999999352e-06, 4.943999999999782e-06, 4.930999999999686e-06, 4.943999999999782e-06, 4.943999999999782e-06, 4.944000000003251e-06, 4.9449999999992555e-06, 4.9449999999992555e-06, 4.916000000000642e-06, 4.9589999999988255e-06, 4.943999999999782e-06, 4.958000000002821e-06, 4.943999999999782e-06, 4.943999999999782e-06, 4.943999999999782e-06, 4.943999999999782e-06, 4.943999999999782e-06, 4.943999999999782e-06, 4.930000000000212e-06, 4.9449999999992555e-06, 4.957999999999352e-06, 4.930999999999686e-06, 4.930000000000212e-06, 4.930000000000212e-06, 4.9589999999988255e-06, 4.9449999999992555e-06, 4.957999999999352e-06, 4.916000000000642e-06, 4.916000000000642e-06, 4.930999999999686e-06, 4.985999999998492e-06, 4.930000000000212e-06, 4.917000000000116e-06, 4.957999999999352e-06, 5.014000000001101e-06, 4.875000000001406e-06, 4.945000000002725e-06, 4.8749999999979365e-06, 4.930999999999686e-06, 4.943999999999782e-06]</msg>
<status status="PASS" starttime="20201115 22:00:44.128" endtime="20201115 22:00:44.130"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.123" endtime="20201115 22:00:44.130"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:44.133" endtime="20201115 22:00:44.134"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:44.136" endtime="20201115 22:00:44.156"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.134" endtime="20201115 22:00:44.156"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.131" endtime="20201115 22:00:44.157"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.764" endtime="20201115 22:00:44.157"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.192" endtime="20201115 22:00:44.157"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.191" endtime="20201115 22:00:44.157"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:44.160" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:44.169" endtime="20201115 22:00:44.186"></status>
</kw>
<msg timestamp="20201115 22:00:44.186" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:44.167" endtime="20201115 22:00:44.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:44.188" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:44.187" endtime="20201115 22:00:44.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:44.190" endtime="20201115 22:00:44.191"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.164" endtime="20201115 22:00:44.192"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.162" endtime="20201115 22:00:44.192"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:44.199" endtime="20201115 22:00:44.486"></status>
</kw>
<msg timestamp="20201115 22:00:44.489" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022635167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022640389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:44.198" endtime="20201115 22:00:44.490"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:44.498" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022635167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022640389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:44.491" endtime="20201115 22:00:44.498"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:44.499" endtime="20201115 22:00:44.500"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.195" endtime="20201115 22:00:44.501"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.193" endtime="20201115 22:00:44.501"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:44.506" level="INFO">${RESULT} = [{'time': 0.022640389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.221999999999172e-06, 'source_diff': 5.221999999999172e-06}, {'time': 0.022762639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:44.502" endtime="20201115 22:00:44.506"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:44.519" level="INFO">${OVERHEAD} = {'time': [0.022640389, 0.022762639, 0.022887306, 0.023012542, 0.023140903, 0.023262931, 0.023387569, 0.023511944, 0.023640889, 0.023764, 0.023891417, 0.024019153, 0.024143944, 0.024271958, 0.024400847...</msg>
<status status="PASS" starttime="20201115 22:00:44.507" endtime="20201115 22:00:44.519"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:44.523" level="INFO">NAME: 00-overhead-11-set</msg>
<status status="PASS" starttime="20201115 22:00:44.522" endtime="20201115 22:00:44.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:44.526" level="INFO">VALUE: [5.221999999999172e-06, 5.222000000002641e-06, 5.236999999998215e-06, 5.2089999999990755e-06, 5.125000000001656e-06, 5.2089999999990755e-06, 5.207999999999602e-06, 5.137999999998283e-06, 5.221999999999172e-06, 5.180999999999936e-06, 5.195000000002975e-06, 5.195000000002975e-06, 5.194000000000032e-06, 5.2499999999983116e-06, 5.180000000000462e-06, 5.207999999999602e-06, 5.153000000000796e-06, 5.207999999999602e-06, 5.180999999999936e-06, 5.194000000000032e-06, 5.236000000002211e-06, 5.195000000002975e-06, 5.194000000000032e-06, 5.194000000000032e-06, 5.180999999999936e-06, 5.207999999999602e-06, 5.221999999999172e-06, 5.153000000000796e-06, 5.2089999999990755e-06, 5.195000000002975e-06, 5.1949999999995056e-06, 5.194000000000032e-06, 5.1949999999995056e-06, 5.236000000002211e-06, 5.207999999999602e-06, 5.207999999999602e-06, 5.194000000000032e-06, 5.166000000000892e-06, 5.2089999999990755e-06, 5.1949999999995056e-06, 5.2089999999990755e-06, 5.235999999998742e-06, 5.166999999996896e-06, 5.237000000001685e-06, 5.194000000000032e-06, 5.209000000002545e-06, 5.194000000000032e-06, 5.207999999999602e-06, 5.235999999998742e-06, 5.166000000000892e-06]</msg>
<status status="PASS" starttime="20201115 22:00:44.525" endtime="20201115 22:00:44.527"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.520" endtime="20201115 22:00:44.527"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:44.529" endtime="20201115 22:00:44.531"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:44.533" endtime="20201115 22:00:44.552"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.531" endtime="20201115 22:00:44.553"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.528" endtime="20201115 22:00:44.553"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.160" endtime="20201115 22:00:44.553"></status>
</kw>
<msg timestamp="20201115 22:00:44.554" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:44.563" endtime="20201115 22:00:44.580"></status>
</kw>
<msg timestamp="20201115 22:00:44.580" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:44.561" endtime="20201115 22:00:44.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:44.583" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:44.582" endtime="20201115 22:00:44.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:44.584" endtime="20201115 22:00:44.586"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.558" endtime="20201115 22:00:44.587"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.556" endtime="20201115 22:00:44.587"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:44.594" endtime="20201115 22:00:44.880"></status>
</kw>
<msg timestamp="20201115 22:00:44.883" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020860639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020865847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:44.592" endtime="20201115 22:00:44.883"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:44.891" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020860639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020865847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:44.884" endtime="20201115 22:00:44.891"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:44.892" endtime="20201115 22:00:44.894"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.590" endtime="20201115 22:00:44.894"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.588" endtime="20201115 22:00:44.895"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:44.899" level="INFO">${RESULT} = [{'time': 0.020865847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.207999999999602e-06, 'source_diff': 5.207999999999602e-06}, {'time': 0.020988333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:44.896" endtime="20201115 22:00:44.899"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:44.912" level="INFO">${OVERHEAD} = {'time': [0.020865847, 0.020988333, 0.021115278, 0.021243014, 0.021369486, 0.021496458, 0.021625028, 0.021749417, 0.021876361, 0.021999333, 0.022123083, 0.022244472, 0.022372208, 0.022500417, 0.022624...</msg>
<status status="PASS" starttime="20201115 22:00:44.900" endtime="20201115 22:00:44.913"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:44.917" level="INFO">NAME: 00-overhead-11-set</msg>
<status status="PASS" starttime="20201115 22:00:44.916" endtime="20201115 22:00:44.917"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:44.919" level="INFO">VALUE: [5.207999999999602e-06, 5.180000000000462e-06, 5.209000000002545e-06, 5.1949999999995056e-06, 5.207999999999602e-06, 5.2499999999983116e-06, 5.180999999999936e-06, 5.1949999999995056e-06, 5.180000000000462e-06, 5.207999999999602e-06, 5.264000000001351e-06, 5.194000000000032e-06, 5.207999999999602e-06, 5.209000000002545e-06, 5.166000000000892e-06, 5.208000000003071e-06, 5.207999999999602e-06, 5.2089999999990755e-06, 5.207999999999602e-06, 5.194000000000032e-06, 5.208000000003071e-06, 5.180999999999936e-06, 5.208000000003071e-06, 5.194000000000032e-06, 5.180999999999936e-06, 5.207999999999602e-06, 5.209000000002545e-06, 5.207999999999602e-06, 5.207999999999602e-06, 5.2639999999978815e-06, 5.207999999999602e-06, 5.194000000000032e-06, 5.222000000002641e-06, 5.1949999999995056e-06, 5.180999999999936e-06, 5.207999999999602e-06, 5.1949999999995056e-06, 5.194000000000032e-06, 5.1949999999995056e-06, 5.2089999999990755e-06, 5.2089999999990755e-06, 5.207999999999602e-06, 5.1949999999995056e-06, 5.110999999998617e-06, 5.180000000000462e-06, 5.194000000000032e-06, 5.1949999999995056e-06, 5.195000000002975e-06, 5.194000000000032e-06, 5.209000000002545e-06]</msg>
<status status="PASS" starttime="20201115 22:00:44.918" endtime="20201115 22:00:44.920"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.913" endtime="20201115 22:00:44.920"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:44.923" endtime="20201115 22:00:44.924"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:44.926" endtime="20201115 22:00:44.946"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.924" endtime="20201115 22:00:44.946"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.921" endtime="20201115 22:00:44.947"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.554" endtime="20201115 22:00:44.947"></status>
</kw>
<msg timestamp="20201115 22:00:44.947" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:44.961" endtime="20201115 22:00:44.977"></status>
</kw>
<msg timestamp="20201115 22:00:44.977" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:44.954" endtime="20201115 22:00:44.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:44.980" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:44.978" endtime="20201115 22:00:44.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:44.981" endtime="20201115 22:00:44.982"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.952" endtime="20201115 22:00:44.983"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.950" endtime="20201115 22:00:44.983"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:44.990" endtime="20201115 22:00:45.277"></status>
</kw>
<msg timestamp="20201115 22:00:45.280" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025513486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025518681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:44.988" endtime="20201115 22:00:45.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:45.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025513486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025518681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:45.281" endtime="20201115 22:00:45.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:45.290" endtime="20201115 22:00:45.291"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.986" endtime="20201115 22:00:45.292"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.984" endtime="20201115 22:00:45.292"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:45.296" level="INFO">${RESULT} = [{'time': 0.025518681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.195000000002975e-06, 'source_diff': 5.195000000002975e-06}, {'time': 0.025640625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:45.293" endtime="20201115 22:00:45.297"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:45.310" level="INFO">${OVERHEAD} = {'time': [0.025518681, 0.025640625, 0.025763778, 0.025892625, 0.026014625, 0.02613975, 0.026266028, 0.026393056, 0.026517208, 0.026643986, 0.026770694, 0.026899375, 0.027022569, 0.027144361, 0.0272715...</msg>
<status status="PASS" starttime="20201115 22:00:45.297" endtime="20201115 22:00:45.310"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:45.314" level="INFO">NAME: 00-overhead-11-set</msg>
<status status="PASS" starttime="20201115 22:00:45.313" endtime="20201115 22:00:45.315"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:45.317" level="INFO">VALUE: [5.195000000002975e-06, 5.180999999999936e-06, 5.209000000002545e-06, 5.221999999999172e-06, 5.207999999999602e-06, 5.221999999999172e-06, 5.1949999999995056e-06, 5.209000000002545e-06, 5.207999999999602e-06, 5.180000000000462e-06, 5.207999999999602e-06, 5.194000000000032e-06, 5.180000000000462e-06, 5.207999999999602e-06, 5.180000000000462e-06, 5.222000000002641e-06, 5.152000000001322e-06, 5.221999999999172e-06, 5.1949999999995056e-06, 5.194000000000032e-06, 5.221999999999172e-06, 5.153000000000796e-06, 5.221999999999172e-06, 5.235999999998742e-06, 5.207999999999602e-06, 5.221999999999172e-06, 5.180999999999936e-06, 5.207999999999602e-06, 5.180999999999936e-06, 5.207999999999602e-06, 5.180999999999936e-06, 5.180999999999936e-06, 5.194000000000032e-06, 5.194000000000032e-06, 5.180000000000462e-06, 5.180999999999936e-06, 5.1949999999995056e-06, 5.194000000000032e-06, 5.235999999998742e-06, 5.2089999999990755e-06, 5.180999999999936e-06, 5.1949999999995056e-06, 5.194000000000032e-06, 5.236000000002211e-06, 5.235999999998742e-06, 5.221999999999172e-06, 5.207999999999602e-06, 5.1950000000064445e-06, 5.207999999999602e-06, 5.207999999999602e-06]</msg>
<status status="PASS" starttime="20201115 22:00:45.316" endtime="20201115 22:00:45.317"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.311" endtime="20201115 22:00:45.318"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:45.320" endtime="20201115 22:00:45.321"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:45.323" endtime="20201115 22:00:45.343"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.322" endtime="20201115 22:00:45.344"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.319" endtime="20201115 22:00:45.344"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.948" endtime="20201115 22:00:45.344"></status>
</kw>
<msg timestamp="20201115 22:00:45.345" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:45.354" endtime="20201115 22:00:45.370"></status>
</kw>
<msg timestamp="20201115 22:00:45.371" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:45.352" endtime="20201115 22:00:45.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:45.373" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:45.372" endtime="20201115 22:00:45.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:45.374" endtime="20201115 22:00:45.376"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.350" endtime="20201115 22:00:45.376"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.348" endtime="20201115 22:00:45.377"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:45.383" endtime="20201115 22:00:45.670"></status>
</kw>
<msg timestamp="20201115 22:00:45.673" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021026583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021031708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:45.382" endtime="20201115 22:00:45.673"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:45.681" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021026583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021031708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:45.674" endtime="20201115 22:00:45.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:45.682" endtime="20201115 22:00:45.684"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.379" endtime="20201115 22:00:45.685"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.377" endtime="20201115 22:00:45.685"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:45.689" level="INFO">${RESULT} = [{'time': 0.021031708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.1249999999981866e-06, 'source_diff': 5.1249999999981866e-06}, {'time': 0.021154431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:45.686" endtime="20201115 22:00:45.689"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:45.702" level="INFO">${OVERHEAD} = {'time': [0.021031708, 0.021154431, 0.021280958, 0.021408694, 0.021533486, 0.021656625, 0.021778403, 0.021901542, 0.022027819, 0.022153056, 0.022275958, 0.022404778, 0.022528889, 0.022656597, 0.022780...</msg>
<status status="PASS" starttime="20201115 22:00:45.690" endtime="20201115 22:00:45.703"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:45.707" level="INFO">NAME: 00-overhead-11-set</msg>
<status status="PASS" starttime="20201115 22:00:45.706" endtime="20201115 22:00:45.707"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:45.709" level="INFO">VALUE: [5.1249999999981866e-06, 5.209000000002545e-06, 5.194000000000032e-06, 5.207999999999602e-06, 5.194000000000032e-06, 5.152999999997326e-06, 5.209000000002545e-06, 5.2089999999990755e-06, 5.263000000001877e-06, 5.223000000002115e-06, 5.221999999999172e-06, 5.1949999999995056e-06, 5.221999999999172e-06, 5.207999999999602e-06, 5.181000000003405e-06, 5.2089999999990755e-06, 5.1949999999995056e-06, 5.194000000000032e-06, 5.153000000000796e-06, 5.2089999999990755e-06, 5.194000000000032e-06, 5.221999999999172e-06, 5.221999999999172e-06, 5.194000000000032e-06, 5.194000000000032e-06, 5.264000000001351e-06, 5.194000000000032e-06, 5.180999999999936e-06, 5.166000000000892e-06, 5.2089999999990755e-06, 5.180000000000462e-06, 5.207999999999602e-06, 5.2089999999990755e-06, 5.180999999999936e-06, 5.194000000000032e-06, 5.207999999999602e-06, 5.222000000002641e-06, 5.221999999999172e-06, 5.207999999999602e-06, 5.194000000000032e-06, 5.2089999999990755e-06, 5.207999999999602e-06, 5.235999999998742e-06, 5.194000000000032e-06, 5.1949999999995056e-06, 5.1939999999965625e-06, 5.207999999999602e-06, 5.207999999999602e-06, 5.167000000000366e-06, 5.194000000000032e-06]</msg>
<status status="PASS" starttime="20201115 22:00:45.708" endtime="20201115 22:00:45.710"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.703" endtime="20201115 22:00:45.710"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:45.713" endtime="20201115 22:00:45.715"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:45.717" endtime="20201115 22:00:45.736"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.715" endtime="20201115 22:00:45.737"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.711" endtime="20201115 22:00:45.737"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.346" endtime="20201115 22:00:45.738"></status>
</kw>
<msg timestamp="20201115 22:00:45.738" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:45.747" endtime="20201115 22:00:45.764"></status>
</kw>
<msg timestamp="20201115 22:00:45.764" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:45.745" endtime="20201115 22:00:45.764"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:45.767" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:45.765" endtime="20201115 22:00:45.767"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:45.768" endtime="20201115 22:00:45.769"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.742" endtime="20201115 22:00:45.770"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.740" endtime="20201115 22:00:45.770"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:45.777" endtime="20201115 22:00:46.065"></status>
</kw>
<msg timestamp="20201115 22:00:46.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020462222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020467417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:45.775" endtime="20201115 22:00:46.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:46.076" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020462222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020467417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:46.069" endtime="20201115 22:00:46.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:46.078" endtime="20201115 22:00:46.080"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.773" endtime="20201115 22:00:46.080"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.771" endtime="20201115 22:00:46.080"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:46.085" level="INFO">${RESULT} = [{'time': 0.020467417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.195000000002975e-06, 'source_diff': 5.195000000002975e-06}, {'time': 0.020592958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:46.081" endtime="20201115 22:00:46.085"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:46.098" level="INFO">${OVERHEAD} = {'time': [0.020467417, 0.020592958, 0.020715111, 0.020839514, 0.020966444, 0.021090319, 0.021216139, 0.0213445, 0.021468181, 0.021590472, 0.021713639, 0.021836306, 0.021960153, 0.022084458, 0.02220956...</msg>
<status status="PASS" starttime="20201115 22:00:46.086" endtime="20201115 22:00:46.098"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:46.102" level="INFO">NAME: 00-overhead-11-set</msg>
<status status="PASS" starttime="20201115 22:00:46.101" endtime="20201115 22:00:46.103"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:46.105" level="INFO">VALUE: [5.195000000002975e-06, 5.166000000000892e-06, 5.207999999999602e-06, 5.1949999999995056e-06, 5.194000000000032e-06, 5.221999999999172e-06, 5.221999999999172e-06, 5.207999999999602e-06, 5.1949999999995056e-06, 5.235999999998742e-06, 5.207999999999602e-06, 5.222999999998645e-06, 5.2089999999990755e-06, 5.207999999999602e-06, 5.194000000000032e-06, 5.221999999999172e-06, 5.221999999999172e-06, 5.194000000000032e-06, 5.180999999999936e-06, 5.1949999999995056e-06, 5.180000000000462e-06, 5.250000000001781e-06, 5.1949999999995056e-06, 5.194000000000032e-06, 5.194000000000032e-06, 5.207999999999602e-06, 5.180999999999936e-06, 5.180999999999936e-06, 5.194000000000032e-06, 5.1949999999995056e-06, 5.2089999999990755e-06, 5.207999999999602e-06, 5.221999999999172e-06, 5.2089999999990755e-06, 5.209000000002545e-06, 5.209000000002545e-06, 5.194000000000032e-06, 5.208000000003071e-06, 5.207999999999602e-06, 5.221999999999172e-06, 5.222000000002641e-06, 5.207999999999602e-06, 5.180999999999936e-06, 5.180999999999936e-06, 5.207999999999602e-06, 5.207999999999602e-06, 5.207999999999602e-06, 5.194000000000032e-06, 5.1949999999995056e-06, 5.236000000002211e-06]</msg>
<status status="PASS" starttime="20201115 22:00:46.103" endtime="20201115 22:00:46.106"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.099" endtime="20201115 22:00:46.106"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:46.108" endtime="20201115 22:00:46.110"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:46.112" endtime="20201115 22:00:46.131"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.110" endtime="20201115 22:00:46.132"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.107" endtime="20201115 22:00:46.132"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.738" endtime="20201115 22:00:46.133"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.158" endtime="20201115 22:00:46.133"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.158" endtime="20201115 22:00:46.133"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:46.135" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:46.144" endtime="20201115 22:00:46.161"></status>
</kw>
<msg timestamp="20201115 22:00:46.161" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:46.143" endtime="20201115 22:00:46.161"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:46.164" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:46.162" endtime="20201115 22:00:46.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:46.165" endtime="20201115 22:00:46.167"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.140" endtime="20201115 22:00:46.167"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.138" endtime="20201115 22:00:46.168"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:46.174" endtime="20201115 22:00:46.460"></status>
</kw>
<msg timestamp="20201115 22:00:46.463" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022979028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0229845, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:00:46.172" endtime="20201115 22:00:46.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:46.471" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022979028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0229845, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:00:46.464" endtime="20201115 22:00:46.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:46.473" endtime="20201115 22:00:46.474"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.170" endtime="20201115 22:00:46.475"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.168" endtime="20201115 22:00:46.475"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:46.479" level="INFO">${RESULT} = [{'time': 0.0229845, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.472000000002891e-06, 'source_diff': 5.472000000002891e-06}, {'time': 0.023116583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:00:46.476" endtime="20201115 22:00:46.480"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:46.493" level="INFO">${OVERHEAD} = {'time': [0.0229845, 0.023116583, 0.023254417, 0.023387931, 0.023520111, 0.023655847, 0.023793889, 0.023927014, 0.024060819, 0.024194375, 0.024328694, 0.024461028, 0.024596292, 0.024730833, 0.02486419...</msg>
<status status="PASS" starttime="20201115 22:00:46.480" endtime="20201115 22:00:46.493"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:46.498" level="INFO">NAME: 00-overhead-12-set</msg>
<status status="PASS" starttime="20201115 22:00:46.497" endtime="20201115 22:00:46.498"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:46.501" level="INFO">VALUE: [5.472000000002891e-06, 5.416000000001142e-06, 5.472999999998895e-06, 5.444999999999756e-06, 5.471999999999422e-06, 5.471999999999422e-06, 5.471999999999422e-06, 5.471999999999422e-06, 5.500000000002031e-06, 5.457999999999852e-06, 5.472000000002891e-06, 5.471999999999422e-06, 5.472999999998895e-06, 5.444000000000282e-06, 5.374999999998437e-06, 5.500000000002031e-06, 5.472999999998895e-06, 5.457999999999852e-06, 5.457999999999852e-06, 5.457999999999852e-06, 5.431000000000186e-06, 5.486999999998465e-06, 5.457999999999852e-06, 5.4589999999993255e-06, 5.444000000000282e-06, 5.4589999999993255e-06, 5.486000000002461e-06, 5.472000000002891e-06, 5.500000000002031e-06, 5.486000000002461e-06, 5.444000000000282e-06, 5.444000000000282e-06, 5.4589999999993255e-06, 5.457999999999852e-06, 5.514000000001601e-06, 5.4589999999993255e-06, 5.471999999999422e-06, 5.471999999999422e-06, 5.4589999999993255e-06, 5.457999999999852e-06, 5.471999999999422e-06, 5.457999999999852e-06, 5.457999999999852e-06, 5.457999999999852e-06, 5.444000000000282e-06, 5.374999999998437e-06, 5.471999999999422e-06, 5.471999999999422e-06, 5.486000000002461e-06, 5.457999999999852e-06]</msg>
<status status="PASS" starttime="20201115 22:00:46.499" endtime="20201115 22:00:46.502"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.494" endtime="20201115 22:00:46.502"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:46.505" endtime="20201115 22:00:46.506"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:46.508" endtime="20201115 22:00:46.527"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.506" endtime="20201115 22:00:46.528"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.503" endtime="20201115 22:00:46.529"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.136" endtime="20201115 22:00:46.529"></status>
</kw>
<msg timestamp="20201115 22:00:46.529" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:46.538" endtime="20201115 22:00:46.554"></status>
</kw>
<msg timestamp="20201115 22:00:46.554" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:46.536" endtime="20201115 22:00:46.555"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:46.557" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:46.555" endtime="20201115 22:00:46.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:46.558" endtime="20201115 22:00:46.559"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.534" endtime="20201115 22:00:46.560"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.532" endtime="20201115 22:00:46.560"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:46.567" endtime="20201115 22:00:46.855"></status>
</kw>
<msg timestamp="20201115 22:00:46.858" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020464583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020470083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:46.566" endtime="20201115 22:00:46.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:46.866" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020464583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020470083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:46.859" endtime="20201115 22:00:46.866"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:46.867" endtime="20201115 22:00:46.869"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.563" endtime="20201115 22:00:46.869"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.561" endtime="20201115 22:00:46.870"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:46.874" level="INFO">${RESULT} = [{'time': 0.020470083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.499999999998562e-06, 'source_diff': 5.499999999998562e-06}, {'time': 0.020607694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:46.871" endtime="20201115 22:00:46.874"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:46.887" level="INFO">${OVERHEAD} = {'time': [0.020470083, 0.020607694, 0.020741764, 0.020877208, 0.021013333, 0.021148528, 0.021285139, 0.021417069, 0.021552347, 0.021688736, 0.021819472, 0.021952056, 0.022084694, 0.022219653, 0.022356...</msg>
<status status="PASS" starttime="20201115 22:00:46.875" endtime="20201115 22:00:46.888"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:46.892" level="INFO">NAME: 00-overhead-12-set</msg>
<status status="PASS" starttime="20201115 22:00:46.891" endtime="20201115 22:00:46.892"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:46.895" level="INFO">VALUE: [5.499999999998562e-06, 5.485999999998992e-06, 5.485999999998992e-06, 5.472000000002891e-06, 5.457999999999852e-06, 5.471999999999422e-06, 5.457999999999852e-06, 5.457999999999852e-06, 5.471999999999422e-06, 5.457999999999852e-06, 5.471999999999422e-06, 5.4589999999993255e-06, 5.457999999999852e-06, 5.444999999999756e-06, 5.471999999999422e-06, 5.457999999999852e-06, 5.4589999999993255e-06, 5.4589999999993255e-06, 5.485999999998992e-06, 5.472000000002891e-06, 5.471999999999422e-06, 5.416000000001142e-06, 5.457999999999852e-06, 5.457999999999852e-06, 5.457999999999852e-06, 5.472000000002891e-06, 5.472000000002891e-06, 5.4589999999993255e-06, 5.486000000002461e-06, 5.471999999999422e-06, 5.444000000000282e-06, 5.403000000001046e-06, 5.471999999999422e-06, 5.472000000002891e-06, 5.485999999998992e-06, 5.471999999999422e-06, 5.459000000002795e-06, 5.472999999998895e-06, 5.459000000002795e-06, 5.486000000002461e-06, 5.473000000002365e-06, 5.499999999998562e-06, 5.457999999999852e-06, 5.526999999998228e-06, 5.457999999999852e-06, 5.514000000001601e-06, 5.471999999999422e-06, 5.458000000003321e-06, 5.457999999999852e-06, 5.430000000000712e-06]</msg>
<status status="PASS" starttime="20201115 22:00:46.893" endtime="20201115 22:00:46.895"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.888" endtime="20201115 22:00:46.896"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:46.898" endtime="20201115 22:00:46.899"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:46.901" endtime="20201115 22:00:46.921"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.900" endtime="20201115 22:00:46.921"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.896" endtime="20201115 22:00:46.922"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.530" endtime="20201115 22:00:46.922"></status>
</kw>
<msg timestamp="20201115 22:00:46.922" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:46.931" endtime="20201115 22:00:46.947"></status>
</kw>
<msg timestamp="20201115 22:00:46.948" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:46.930" endtime="20201115 22:00:46.948"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:46.950" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:46.949" endtime="20201115 22:00:46.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:46.951" endtime="20201115 22:00:46.953"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.927" endtime="20201115 22:00:46.953"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.925" endtime="20201115 22:00:46.954"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:46.960" endtime="20201115 22:00:47.247"></status>
</kw>
<msg timestamp="20201115 22:00:47.251" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020578014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020583472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:46.959" endtime="20201115 22:00:47.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:47.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020578014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020583472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:47.252" endtime="20201115 22:00:47.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:47.260" endtime="20201115 22:00:47.262"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.956" endtime="20201115 22:00:47.262"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.954" endtime="20201115 22:00:47.263"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:47.267" level="INFO">${RESULT} = [{'time': 0.020583472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.457999999999852e-06, 'source_diff': 5.457999999999852e-06}, {'time': 0.020720653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:47.263" endtime="20201115 22:00:47.267"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:47.281" level="INFO">${OVERHEAD} = {'time': [0.020583472, 0.020720653, 0.020851792, 0.020984139, 0.021115986, 0.021250792, 0.021384778, 0.021517597, 0.021648333, 0.021782097, 0.021913556, 0.022045417, 0.022179208, 0.022315653, 0.022452...</msg>
<status status="PASS" starttime="20201115 22:00:47.268" endtime="20201115 22:00:47.281"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:47.285" level="INFO">NAME: 00-overhead-12-set</msg>
<status status="PASS" starttime="20201115 22:00:47.284" endtime="20201115 22:00:47.285"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:47.288" level="INFO">VALUE: [5.457999999999852e-06, 5.4589999999993255e-06, 5.4589999999993255e-06, 5.457999999999852e-06, 5.457999999999852e-06, 5.431000000000186e-06, 5.444999999999756e-06, 5.444000000000282e-06, 5.457999999999852e-06, 5.457999999999852e-06, 5.431000000000186e-06, 5.403000000001046e-06, 5.485999999998992e-06, 5.459000000002795e-06, 5.444000000000282e-06, 5.444999999999756e-06, 5.401999999998103e-06, 5.472999999998895e-06, 5.457999999999852e-06, 5.471999999999422e-06, 5.471999999999422e-06, 5.431000000000186e-06, 5.4589999999993255e-06, 5.457999999999852e-06, 5.471999999999422e-06, 5.457999999999852e-06, 5.457999999999852e-06, 5.4589999999993255e-06, 5.457999999999852e-06, 5.486000000002461e-06, 5.457999999999852e-06, 5.471999999999422e-06, 5.485999999998992e-06, 5.4589999999993255e-06, 5.457999999999852e-06, 5.471999999999422e-06, 5.471999999999422e-06, 5.457999999999852e-06, 5.499999999998562e-06, 5.485999999998992e-06, 5.444999999999756e-06, 5.486000000002461e-06, 5.444000000000282e-06, 5.457999999999852e-06, 5.472000000002891e-06, 5.471999999999422e-06, 5.444999999999756e-06, 5.473000000002365e-06, 5.4589999999993255e-06, 5.457999999999852e-06]</msg>
<status status="PASS" starttime="20201115 22:00:47.286" endtime="20201115 22:00:47.288"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.281" endtime="20201115 22:00:47.289"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:47.291" endtime="20201115 22:00:47.292"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:47.294" endtime="20201115 22:00:47.314"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.293" endtime="20201115 22:00:47.314"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.289" endtime="20201115 22:00:47.315"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.923" endtime="20201115 22:00:47.315"></status>
</kw>
<msg timestamp="20201115 22:00:47.315" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:47.324" endtime="20201115 22:00:47.340"></status>
</kw>
<msg timestamp="20201115 22:00:47.341" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:47.323" endtime="20201115 22:00:47.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:47.343" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:47.342" endtime="20201115 22:00:47.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:47.344" endtime="20201115 22:00:47.346"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.320" endtime="20201115 22:00:47.347"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.318" endtime="20201115 22:00:47.347"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:47.353" endtime="20201115 22:00:47.642"></status>
</kw>
<msg timestamp="20201115 22:00:47.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020768694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020774181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:47.352" endtime="20201115 22:00:47.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:47.653" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020768694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020774181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:47.646" endtime="20201115 22:00:47.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:47.655" endtime="20201115 22:00:47.657"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.349" endtime="20201115 22:00:47.657"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.348" endtime="20201115 22:00:47.658"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:47.662" level="INFO">${RESULT} = [{'time': 0.020774181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.486999999998465e-06, 'source_diff': 5.486999999998465e-06}, {'time': 0.020909903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:47.658" endtime="20201115 22:00:47.662"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:47.675" level="INFO">${OVERHEAD} = {'time': [0.020774181, 0.020909903, 0.021044222, 0.021177278, 0.021312306, 0.021449944, 0.021583306, 0.021716667, 0.021854569, 0.021987125, 0.022119528, 0.022257111, 0.022394361, 0.022528292, 0.022659...</msg>
<status status="PASS" starttime="20201115 22:00:47.663" endtime="20201115 22:00:47.675"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:47.680" level="INFO">NAME: 00-overhead-12-set</msg>
<status status="PASS" starttime="20201115 22:00:47.679" endtime="20201115 22:00:47.680"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:47.682" level="INFO">VALUE: [5.486999999998465e-06, 5.4589999999993255e-06, 5.457999999999852e-06, 5.471999999999422e-06, 5.4589999999993255e-06, 5.457999999999852e-06, 5.444999999999756e-06, 5.4589999999993255e-06, 5.486000000002461e-06, 5.457999999999852e-06, 5.4589999999993255e-06, 5.3889999999980065e-06, 5.542000000000741e-06, 5.472999999998895e-06, 5.457999999999852e-06, 5.403000000001046e-06, 5.485999999998992e-06, 5.457999999999852e-06, 5.471999999999422e-06, 5.457999999999852e-06, 5.444999999999756e-06, 5.472999999998895e-06, 5.485999999998992e-06, 5.472999999998895e-06, 5.444999999999756e-06, 5.471999999999422e-06, 5.472000000002891e-06, 5.457999999999852e-06, 5.471999999999422e-06, 5.457999999999852e-06, 5.4589999999993255e-06, 5.485999999998992e-06, 5.4589999999993255e-06, 5.485999999998992e-06, 5.471999999999422e-06, 5.472999999998895e-06, 5.485999999998992e-06, 5.500000000002031e-06, 5.542000000000741e-06, 5.472000000002891e-06, 5.471999999999422e-06, 5.485999999998992e-06, 5.444000000000282e-06, 5.403000000001046e-06, 5.471999999999422e-06, 5.471999999999422e-06, 5.4589999999993255e-06, 5.457999999999852e-06, 5.473000000002365e-06, 5.457999999999852e-06]</msg>
<status status="PASS" starttime="20201115 22:00:47.681" endtime="20201115 22:00:47.682"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.676" endtime="20201115 22:00:47.683"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:47.685" endtime="20201115 22:00:47.686"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:47.689" endtime="20201115 22:00:47.708"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.687" endtime="20201115 22:00:47.709"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.684" endtime="20201115 22:00:47.709"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.316" endtime="20201115 22:00:47.709"></status>
</kw>
<msg timestamp="20201115 22:00:47.710" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:47.719" endtime="20201115 22:00:47.735"></status>
</kw>
<msg timestamp="20201115 22:00:47.735" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:47.717" endtime="20201115 22:00:47.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:47.738" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:47.736" endtime="20201115 22:00:47.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:47.739" endtime="20201115 22:00:47.740"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.714" endtime="20201115 22:00:47.741"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.712" endtime="20201115 22:00:47.741"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:47.748" endtime="20201115 22:00:48.035"></status>
</kw>
<msg timestamp="20201115 22:00:48.038" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020287125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020292583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:47.746" endtime="20201115 22:00:48.039"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:48.047" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020287125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020292583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:48.039" endtime="20201115 22:00:48.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:48.048" endtime="20201115 22:00:48.049"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.743" endtime="20201115 22:00:48.050"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.742" endtime="20201115 22:00:48.050"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:48.055" level="INFO">${RESULT} = [{'time': 0.020292583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.457999999999852e-06, 'source_diff': 5.457999999999852e-06}, {'time': 0.020426986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:48.051" endtime="20201115 22:00:48.055"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:48.068" level="INFO">${OVERHEAD} = {'time': [0.020292583, 0.020426986, 0.020562806, 0.020695181, 0.020829694, 0.020960597, 0.02109325, 0.021227569, 0.021359736, 0.021495708, 0.021627097, 0.021759208, 0.021890917, 0.022028944, 0.0221637...</msg>
<status status="PASS" starttime="20201115 22:00:48.056" endtime="20201115 22:00:48.068"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:48.073" level="INFO">NAME: 00-overhead-12-set</msg>
<status status="PASS" starttime="20201115 22:00:48.072" endtime="20201115 22:00:48.073"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:48.075" level="INFO">VALUE: [5.457999999999852e-06, 5.555000000000837e-06, 5.4589999999993255e-06, 5.472999999998895e-06, 5.457999999999852e-06, 5.457999999999852e-06, 5.457999999999852e-06, 5.444000000000282e-06, 5.457999999999852e-06, 5.444000000000282e-06, 5.472000000002891e-06, 5.485999999998992e-06, 5.499999999998562e-06, 5.458000000003321e-06, 5.471999999999422e-06, 5.485999999998992e-06, 5.402999999997576e-06, 5.402000000001572e-06, 5.528000000001171e-06, 5.444000000000282e-06, 5.472999999998895e-06, 5.472999999998895e-06, 5.457999999999852e-06, 5.457999999999852e-06, 5.5139999999981315e-06, 5.457999999999852e-06, 5.471999999999422e-06, 5.444000000000282e-06, 5.471999999999422e-06, 5.457999999999852e-06, 5.472000000002891e-06, 5.457999999999852e-06, 5.471999999999422e-06, 5.471999999999422e-06, 5.471999999999422e-06, 5.417000000000616e-06, 5.472999999998895e-06, 5.374999999998437e-06, 5.416000000001142e-06, 5.444000000000282e-06, 5.471999999999422e-06, 5.499999999998562e-06, 5.458000000003321e-06, 5.485999999998992e-06, 5.471999999999422e-06, 5.457999999999852e-06, 5.457999999999852e-06, 5.485999999998992e-06, 5.444000000000282e-06, 5.444999999999756e-06]</msg>
<status status="PASS" starttime="20201115 22:00:48.074" endtime="20201115 22:00:48.076"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.069" endtime="20201115 22:00:48.076"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:48.079" endtime="20201115 22:00:48.080"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:48.082" endtime="20201115 22:00:48.101"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.080" endtime="20201115 22:00:48.102"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.077" endtime="20201115 22:00:48.103"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.710" endtime="20201115 22:00:48.103"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.134" endtime="20201115 22:00:48.103"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.133" endtime="20201115 22:00:48.103"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:48.106" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:48.114" endtime="20201115 22:00:48.132"></status>
</kw>
<msg timestamp="20201115 22:00:48.132" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:48.113" endtime="20201115 22:00:48.132"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:48.135" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:48.133" endtime="20201115 22:00:48.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:48.136" endtime="20201115 22:00:48.137"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.110" endtime="20201115 22:00:48.138"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.108" endtime="20201115 22:00:48.138"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:48.145" endtime="20201115 22:00:48.433"></status>
</kw>
<msg timestamp="20201115 22:00:48.436" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022366486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022372222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:48.144" endtime="20201115 22:00:48.436"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:48.444" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022366486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022372222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:48.437" endtime="20201115 22:00:48.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:48.445" endtime="20201115 22:00:48.447"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.141" endtime="20201115 22:00:48.447"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.139" endtime="20201115 22:00:48.448"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:48.452" level="INFO">${RESULT} = [{'time': 0.022372222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.735999999999242e-06, 'source_diff': 5.735999999999242e-06}, {'time': 0.022514806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:48.449" endtime="20201115 22:00:48.452"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:48.465" level="INFO">${OVERHEAD} = {'time': [0.022372222, 0.022514806, 0.022661403, 0.022807208, 0.022947889, 0.023088264, 0.023229361, 0.023375444, 0.023517083, 0.023663, 0.023803847, 0.023949347, 0.024094792, 0.024241153, 0.02438675,...</msg>
<status status="PASS" starttime="20201115 22:00:48.453" endtime="20201115 22:00:48.466"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:48.470" level="INFO">NAME: 00-overhead-13-set</msg>
<status status="PASS" starttime="20201115 22:00:48.469" endtime="20201115 22:00:48.470"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:48.473" level="INFO">VALUE: [5.735999999999242e-06, 5.7229999999991454e-06, 5.749999999998812e-06, 5.721999999999672e-06, 5.681000000000436e-06, 5.721999999999672e-06, 5.735999999999242e-06, 5.651999999998353e-06, 5.736000000002711e-06, 5.708000000000102e-06, 5.721999999999672e-06, 5.7639999999983815e-06, 5.778000000001421e-06, 5.695000000000006e-06, 5.721999999999672e-06, 5.666999999997396e-06, 5.722000000003141e-06, 5.708000000000102e-06, 5.750000000002281e-06, 5.7089999999995755e-06, 5.735999999999242e-06, 5.723000000002615e-06, 5.736000000002711e-06, 5.723000000002615e-06, 5.695000000000006e-06, 5.7229999999991454e-06, 5.735999999999242e-06, 5.7229999999991454e-06, 5.735999999999242e-06, 5.639000000001726e-06, 5.708000000000102e-06, 5.721999999999672e-06, 5.7089999999995755e-06, 5.721999999999672e-06, 5.681000000000436e-06, 5.721999999999672e-06, 5.7779999999979514e-06, 5.735999999999242e-06, 5.708000000000102e-06, 5.764000000001851e-06, 5.694000000000532e-06, 5.749999999998812e-06, 5.709000000003045e-06, 5.7229999999991454e-06, 5.721999999999672e-06, 5.737000000002185e-06, 5.721999999999672e-06, 5.735999999999242e-06, 5.721999999999672e-06, 5.694000000000532e-06]</msg>
<status status="PASS" starttime="20201115 22:00:48.471" endtime="20201115 22:00:48.473"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.466" endtime="20201115 22:00:48.473"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:48.476" endtime="20201115 22:00:48.477"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:48.479" endtime="20201115 22:00:48.499"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.478" endtime="20201115 22:00:48.499"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.474" endtime="20201115 22:00:48.500"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.106" endtime="20201115 22:00:48.500"></status>
</kw>
<msg timestamp="20201115 22:00:48.500" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:48.509" endtime="20201115 22:00:48.525"></status>
</kw>
<msg timestamp="20201115 22:00:48.525" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:48.508" endtime="20201115 22:00:48.526"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:48.528" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:48.526" endtime="20201115 22:00:48.529"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:48.530" endtime="20201115 22:00:48.531"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.505" endtime="20201115 22:00:48.532"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.503" endtime="20201115 22:00:48.532"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:48.539" endtime="20201115 22:00:48.826"></status>
</kw>
<msg timestamp="20201115 22:00:48.829" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020121819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020127528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:48.538" endtime="20201115 22:00:48.830"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:48.837" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020121819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020127528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:48.830" endtime="20201115 22:00:48.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:48.839" endtime="20201115 22:00:48.840"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.535" endtime="20201115 22:00:48.841"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.533" endtime="20201115 22:00:48.841"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:48.845" level="INFO">${RESULT} = [{'time': 0.020127528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7089999999995755e-06, 'source_diff': 5.7089999999995755e-06}, {'time': 0.020273694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:48.842" endtime="20201115 22:00:48.846"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:48.859" level="INFO">${OVERHEAD} = {'time': [0.020127528, 0.020273694, 0.020418111, 0.020563958, 0.020708222, 0.020852889, 0.020997528, 0.021143167, 0.021285181, 0.021426097, 0.021568625, 0.021710306, 0.021854681, 0.022000069, 0.022141...</msg>
<status status="PASS" starttime="20201115 22:00:48.846" endtime="20201115 22:00:48.859"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:48.863" level="INFO">NAME: 00-overhead-13-set</msg>
<status status="PASS" starttime="20201115 22:00:48.862" endtime="20201115 22:00:48.864"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:48.866" level="INFO">VALUE: [5.7089999999995755e-06, 5.735999999999242e-06, 5.735999999999242e-06, 5.666000000001392e-06, 5.735999999999242e-06, 5.735999999999242e-06, 5.722000000003141e-06, 5.735999999999242e-06, 5.7229999999991454e-06, 5.722000000003141e-06, 5.721999999999672e-06, 5.7639999999983815e-06, 5.7229999999991454e-06, 5.721999999999672e-06, 5.735999999999242e-06, 5.708000000000102e-06, 5.7229999999991454e-06, 5.721999999999672e-06, 5.694000000000532e-06, 5.721999999999672e-06, 5.762999999998908e-06, 5.721999999999672e-06, 5.721999999999672e-06, 5.721999999999672e-06, 5.7089999999995755e-06, 5.749999999998812e-06, 5.721999999999672e-06, 5.735999999999242e-06, 5.791000000001517e-06, 5.736999999998715e-06, 5.736999999998715e-06, 5.736000000002711e-06, 5.764000000001851e-06, 5.736000000002711e-06, 5.708000000000102e-06, 5.735999999999242e-06, 5.7089999999995755e-06, 5.7229999999991454e-06, 5.735999999999242e-06, 5.735999999999242e-06, 5.749999999998812e-06, 5.708000000000102e-06, 5.721999999999672e-06, 5.7229999999991454e-06, 5.7089999999995755e-06, 5.764000000001851e-06, 5.666999999997396e-06, 5.7229999999991454e-06, 5.721999999999672e-06, 5.750000000002281e-06]</msg>
<status status="PASS" starttime="20201115 22:00:48.864" endtime="20201115 22:00:48.866"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.860" endtime="20201115 22:00:48.867"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:48.869" endtime="20201115 22:00:48.871"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:48.873" endtime="20201115 22:00:48.892"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.871" endtime="20201115 22:00:48.893"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.867" endtime="20201115 22:00:48.893"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.501" endtime="20201115 22:00:48.893"></status>
</kw>
<msg timestamp="20201115 22:00:48.894" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:48.903" endtime="20201115 22:00:48.921"></status>
</kw>
<msg timestamp="20201115 22:00:48.921" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:48.901" endtime="20201115 22:00:48.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:48.924" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:48.922" endtime="20201115 22:00:48.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:48.925" endtime="20201115 22:00:48.927"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.899" endtime="20201115 22:00:48.927"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.896" endtime="20201115 22:00:48.928"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:48.934" endtime="20201115 22:00:49.222"></status>
</kw>
<msg timestamp="20201115 22:00:49.225" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020572403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020578153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:48.932" endtime="20201115 22:00:49.225"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:49.233" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020572403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020578153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:49.226" endtime="20201115 22:00:49.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:49.234" endtime="20201115 22:00:49.236"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.930" endtime="20201115 22:00:49.236"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.928" endtime="20201115 22:00:49.237"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:49.241" level="INFO">${RESULT} = [{'time': 0.020578153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.749999999998812e-06, 'source_diff': 5.749999999998812e-06}, {'time': 0.020720653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:49.237" endtime="20201115 22:00:49.241"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:49.254" level="INFO">${OVERHEAD} = {'time': [0.020578153, 0.020720653, 0.020863014, 0.021004569, 0.021149472, 0.021296542, 0.021439736, 0.021583819, 0.021730417, 0.021874097, 0.022015667, 0.022161028, 0.022305444, 0.022449167, 0.022594...</msg>
<status status="PASS" starttime="20201115 22:00:49.242" endtime="20201115 22:00:49.254"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:49.258" level="INFO">NAME: 00-overhead-13-set</msg>
<status status="PASS" starttime="20201115 22:00:49.257" endtime="20201115 22:00:49.259"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:49.261" level="INFO">VALUE: [5.749999999998812e-06, 5.721999999999672e-06, 5.735999999999242e-06, 5.735999999999242e-06, 5.708000000000102e-06, 5.750000000002281e-06, 5.667000000000866e-06, 5.791000000001517e-06, 5.7639999999983815e-06, 5.735999999999242e-06, 5.695000000000006e-06, 5.721999999999672e-06, 5.708000000000102e-06, 5.735999999999242e-06, 5.721999999999672e-06, 5.721999999999672e-06, 5.750000000002281e-06, 5.736000000002711e-06, 5.721999999999672e-06, 5.749999999998812e-06, 5.694000000000532e-06, 5.708000000000102e-06, 5.721999999999672e-06, 5.721999999999672e-06, 5.721999999999672e-06, 5.735999999999242e-06, 5.708000000000102e-06, 5.735999999999242e-06, 5.7639999999983815e-06, 5.750000000002281e-06, 5.721999999999672e-06, 5.736999999998715e-06, 5.721999999999672e-06, 5.708000000000102e-06, 5.735999999999242e-06, 5.721999999999672e-06, 5.7229999999991454e-06, 5.735999999999242e-06, 5.694000000000532e-06, 5.7229999999991454e-06, 5.721999999999672e-06, 5.723000000002615e-06, 5.749999999998812e-06, 5.653000000001296e-06, 5.736999999998715e-06, 5.736000000002711e-06, 5.721999999999672e-06, 5.721999999999672e-06, 5.721999999999672e-06, 5.7779999999979514e-06]</msg>
<status status="PASS" starttime="20201115 22:00:49.260" endtime="20201115 22:00:49.261"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.255" endtime="20201115 22:00:49.262"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:49.264" endtime="20201115 22:00:49.265"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:49.268" endtime="20201115 22:00:49.287"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.266" endtime="20201115 22:00:49.288"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.262" endtime="20201115 22:00:49.288"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.894" endtime="20201115 22:00:49.288"></status>
</kw>
<msg timestamp="20201115 22:00:49.289" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:49.298" endtime="20201115 22:00:49.315"></status>
</kw>
<msg timestamp="20201115 22:00:49.315" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:49.296" endtime="20201115 22:00:49.316"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:49.318" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:49.316" endtime="20201115 22:00:49.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:49.319" endtime="20201115 22:00:49.320"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.294" endtime="20201115 22:00:49.321"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.292" endtime="20201115 22:00:49.322"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:49.328" endtime="20201115 22:00:49.615"></status>
</kw>
<msg timestamp="20201115 22:00:49.618" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021177167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021182889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:49.327" endtime="20201115 22:00:49.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:49.626" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021177167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021182889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:49.619" endtime="20201115 22:00:49.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:49.628" endtime="20201115 22:00:49.629"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.324" endtime="20201115 22:00:49.630"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.322" endtime="20201115 22:00:49.630"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:49.634" level="INFO">${RESULT} = [{'time': 0.021182889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.721999999999672e-06, 'source_diff': 5.721999999999672e-06}, {'time': 0.021330444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:49.631" endtime="20201115 22:00:49.634"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:49.648" level="INFO">${OVERHEAD} = {'time': [0.021182889, 0.021330444, 0.021471736, 0.021617347, 0.021759153, 0.021899542, 0.022046875, 0.022191528, 0.022338333, 0.022478486, 0.022625111, 0.02277, 0.022913306, 0.023054236, 0.023194917,...</msg>
<status status="PASS" starttime="20201115 22:00:49.635" endtime="20201115 22:00:49.648"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:49.652" level="INFO">NAME: 00-overhead-13-set</msg>
<status status="PASS" starttime="20201115 22:00:49.651" endtime="20201115 22:00:49.652"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:49.655" level="INFO">VALUE: [5.721999999999672e-06, 5.762999999998908e-06, 5.722000000003141e-06, 5.6939999999970625e-06, 5.721999999999672e-06, 5.750000000002281e-06, 5.708000000000102e-06, 5.680999999996966e-06, 5.679999999997493e-06, 5.735999999999242e-06, 5.721999999999672e-06, 5.708000000000102e-06, 5.709000000003045e-06, 5.735999999999242e-06, 5.7229999999991454e-06, 5.735999999999242e-06, 5.721999999999672e-06, 5.721999999999672e-06, 5.735999999999242e-06, 5.721999999999672e-06, 5.721999999999672e-06, 5.736000000002711e-06, 5.708000000000102e-06, 5.708000000000102e-06, 5.708000000000102e-06, 5.722000000003141e-06, 5.721999999999672e-06, 5.7089999999995755e-06, 5.736000000002711e-06, 5.749999999998812e-06, 5.750000000002281e-06, 5.721999999999672e-06, 5.723000000002615e-06, 5.7229999999991454e-06, 5.708000000000102e-06, 5.6939999999970625e-06, 5.721999999999672e-06, 5.735999999999242e-06, 5.735999999999242e-06, 5.721999999999672e-06, 5.750000000002281e-06, 5.735999999999242e-06, 5.721999999999672e-06, 5.7229999999991454e-06, 5.7229999999991454e-06, 5.735999999999242e-06, 5.721999999999672e-06, 5.721999999999672e-06, 5.708000000000102e-06, 5.735999999999242e-06]</msg>
<status status="PASS" starttime="20201115 22:00:49.653" endtime="20201115 22:00:49.655"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.648" endtime="20201115 22:00:49.656"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:49.658" endtime="20201115 22:00:49.660"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:49.662" endtime="20201115 22:00:49.681"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.660" endtime="20201115 22:00:49.682"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.656" endtime="20201115 22:00:49.682"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.289" endtime="20201115 22:00:49.683"></status>
</kw>
<msg timestamp="20201115 22:00:49.683" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:49.692" endtime="20201115 22:00:49.708"></status>
</kw>
<msg timestamp="20201115 22:00:49.709" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:49.690" endtime="20201115 22:00:49.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:49.711" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:49.710" endtime="20201115 22:00:49.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:49.712" endtime="20201115 22:00:49.714"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.688" endtime="20201115 22:00:49.714"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.685" endtime="20201115 22:00:49.715"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:49.721" endtime="20201115 22:00:50.008"></status>
</kw>
<msg timestamp="20201115 22:00:50.012" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020687153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020692875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:49.720" endtime="20201115 22:00:50.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:50.020" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020687153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020692875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:50.013" endtime="20201115 22:00:50.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:50.021" endtime="20201115 22:00:50.023"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.717" endtime="20201115 22:00:50.023"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.715" endtime="20201115 22:00:50.024"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:50.028" level="INFO">${RESULT} = [{'time': 0.020692875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.721999999999672e-06, 'source_diff': 5.721999999999672e-06}, {'time': 0.020834986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:50.024" endtime="20201115 22:00:50.028"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:50.041" level="INFO">${OVERHEAD} = {'time': [0.020692875, 0.020834986, 0.020978958, 0.021120972, 0.021264208, 0.021404875, 0.021551458, 0.021691889, 0.021837972, 0.021982458, 0.022126014, 0.022270903, 0.022412236, 0.022554833, 0.022699...</msg>
<status status="PASS" starttime="20201115 22:00:50.029" endtime="20201115 22:00:50.041"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:50.046" level="INFO">NAME: 00-overhead-13-set</msg>
<status status="PASS" starttime="20201115 22:00:50.045" endtime="20201115 22:00:50.046"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:50.048" level="INFO">VALUE: [5.721999999999672e-06, 5.735999999999242e-06, 5.7639999999983815e-06, 5.735999999999242e-06, 5.735999999999242e-06, 5.721999999999672e-06, 5.665999999997923e-06, 5.735999999999242e-06, 5.653000000001296e-06, 5.721999999999672e-06, 5.735999999999242e-06, 5.722000000003141e-06, 5.6939999999970625e-06, 5.735999999999242e-06, 5.721999999999672e-06, 5.721999999999672e-06, 5.721999999999672e-06, 5.651999999998353e-06, 5.721999999999672e-06, 5.721999999999672e-06, 5.778000000001421e-06, 5.749999999998812e-06, 5.7229999999991454e-06, 5.708000000000102e-06, 5.736000000002711e-06, 5.695000000000006e-06, 5.7229999999991454e-06, 5.735999999999242e-06, 5.736000000002711e-06, 5.722000000003141e-06, 5.735999999999242e-06, 5.722000000003141e-06, 5.762999999998908e-06, 5.721999999999672e-06, 5.694000000000532e-06, 5.721999999999672e-06, 5.681000000000436e-06, 5.735999999999242e-06, 5.735999999999242e-06, 5.7229999999991454e-06, 5.735999999999242e-06, 5.721999999999672e-06, 5.721999999999672e-06, 5.7229999999991454e-06, 5.721999999999672e-06, 5.736000000002711e-06, 5.708000000000102e-06, 5.736999999998715e-06, 5.749999999998812e-06, 5.721999999999672e-06]</msg>
<status status="PASS" starttime="20201115 22:00:50.047" endtime="20201115 22:00:50.055"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.042" endtime="20201115 22:00:50.056"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:50.058" endtime="20201115 22:00:50.059"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:50.061" endtime="20201115 22:00:50.081"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.060" endtime="20201115 22:00:50.081"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.056" endtime="20201115 22:00:50.082"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.683" endtime="20201115 22:00:50.082"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.104" endtime="20201115 22:00:50.082"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.104" endtime="20201115 22:00:50.083"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:50.085" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:50.094" endtime="20201115 22:00:50.110"></status>
</kw>
<msg timestamp="20201115 22:00:50.110" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:50.092" endtime="20201115 22:00:50.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:50.113" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:50.111" endtime="20201115 22:00:50.113"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:50.114" endtime="20201115 22:00:50.115"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.090" endtime="20201115 22:00:50.116"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.088" endtime="20201115 22:00:50.116"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:50.123" endtime="20201115 22:00:50.409"></status>
</kw>
<msg timestamp="20201115 22:00:50.412" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022554861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022560806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:50.121" endtime="20201115 22:00:50.412"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:50.420" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022554861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022560806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:50.413" endtime="20201115 22:00:50.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:50.422" endtime="20201115 22:00:50.423"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.119" endtime="20201115 22:00:50.424"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.117" endtime="20201115 22:00:50.424"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:50.428" level="INFO">${RESULT} = [{'time': 0.022560806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.945000000000256e-06, 'source_diff': 5.945000000000256e-06}, {'time': 0.022712569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:50.425" endtime="20201115 22:00:50.429"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:50.442" level="INFO">${OVERHEAD} = {'time': [0.022560806, 0.022712569, 0.02286675, 0.023023111, 0.023179444, 0.023332403, 0.023483736, 0.023636417, 0.023792778, 0.023949611, 0.02410125, 0.024252569, 0.024406722, 0.024559444, 0.02471477...</msg>
<status status="PASS" starttime="20201115 22:00:50.429" endtime="20201115 22:00:50.442"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:50.447" level="INFO">NAME: 00-overhead-14-set</msg>
<status status="PASS" starttime="20201115 22:00:50.445" endtime="20201115 22:00:50.447"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:50.449" level="INFO">VALUE: [5.945000000000256e-06, 5.971999999999922e-06, 6.028000000001671e-06, 6.0139999999986316e-06, 5.930000000001212e-06, 5.986000000002961e-06, 6.028000000001671e-06, 5.999999999999062e-06, 5.985999999999492e-06, 5.985999999999492e-06, 6.028000000001671e-06, 5.930000000001212e-06, 5.985999999999492e-06, 5.971999999999922e-06, 5.985999999999492e-06, 5.985999999999492e-06, 5.985999999999492e-06, 5.985999999999492e-06, 5.901999999998603e-06, 5.985999999999492e-06, 5.985999999999492e-06, 5.958000000000352e-06, 5.985999999999492e-06, 5.999999999999062e-06, 5.9439999999973125e-06, 5.999999999999062e-06, 5.971999999999922e-06, 5.985999999999492e-06, 6.028000000001671e-06, 6.0139999999986316e-06, 5.986000000002961e-06, 5.971999999999922e-06, 5.985999999999492e-06, 5.917000000001116e-06, 5.985999999999492e-06, 5.999999999999062e-06, 6.041000000001767e-06, 5.971999999999922e-06, 5.945000000000256e-06, 5.945000000000256e-06, 5.986000000002961e-06, 5.985999999999492e-06, 5.945000000000256e-06, 5.985999999999492e-06, 5.985999999999492e-06, 6.013000000002627e-06, 5.985999999999492e-06, 5.985999999999492e-06, 6.041000000001767e-06, 5.971999999999922e-06]</msg>
<status status="PASS" starttime="20201115 22:00:50.448" endtime="20201115 22:00:50.450"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.443" endtime="20201115 22:00:50.450"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:50.453" endtime="20201115 22:00:50.454"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:50.456" endtime="20201115 22:00:50.476"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.455" endtime="20201115 22:00:50.476"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.451" endtime="20201115 22:00:50.477"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.086" endtime="20201115 22:00:50.477"></status>
</kw>
<msg timestamp="20201115 22:00:50.477" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:50.486" endtime="20201115 22:00:50.503"></status>
</kw>
<msg timestamp="20201115 22:00:50.503" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:50.484" endtime="20201115 22:00:50.504"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:50.506" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:50.505" endtime="20201115 22:00:50.506"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:50.507" endtime="20201115 22:00:50.509"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.482" endtime="20201115 22:00:50.509"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.480" endtime="20201115 22:00:50.510"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:50.516" endtime="20201115 22:00:50.805"></status>
</kw>
<msg timestamp="20201115 22:00:50.808" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020037319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02004325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:00:50.515" endtime="20201115 22:00:50.808"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:50.816" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020037319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02004325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:00:50.809" endtime="20201115 22:00:50.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:50.817" endtime="20201115 22:00:50.819"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.512" endtime="20201115 22:00:50.819"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.510" endtime="20201115 22:00:50.820"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:50.824" level="INFO">${RESULT} = [{'time': 0.02004325, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.930999999997216e-06, 'source_diff': 5.930999999997216e-06}, {'time': 0.020196667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:00:50.820" endtime="20201115 22:00:50.824"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:50.837" level="INFO">${OVERHEAD} = {'time': [0.02004325, 0.020196667, 0.020348431, 0.020500208, 0.020651014, 0.020806167, 0.020961931, 0.021116319, 0.021272931, 0.021429764, 0.021585653, 0.021740069, 0.021895625, 0.022048167, 0.0222052...</msg>
<status status="PASS" starttime="20201115 22:00:50.825" endtime="20201115 22:00:50.838"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:50.842" level="INFO">NAME: 00-overhead-14-set</msg>
<status status="PASS" starttime="20201115 22:00:50.841" endtime="20201115 22:00:50.843"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:50.845" level="INFO">VALUE: [5.930999999997216e-06, 5.986000000002961e-06, 5.986999999998965e-06, 5.999999999999062e-06, 5.985999999999492e-06, 6.042000000001241e-06, 5.986999999998965e-06, 5.986000000002961e-06, 5.999999999999062e-06, 5.985999999999492e-06, 5.971999999999922e-06, 6.012999999999158e-06, 5.999999999999062e-06, 5.985999999999492e-06, 6.028000000001671e-06, 6.070000000000381e-06, 5.958000000000352e-06, 5.958000000000352e-06, 5.9729999999993955e-06, 6.056000000000811e-06, 5.986999999998965e-06, 5.985999999999492e-06, 6.028000000001671e-06, 5.999999999999062e-06, 6.0139999999986316e-06, 6.042000000001241e-06, 5.9729999999993955e-06, 5.999999999999062e-06, 5.986000000002961e-06, 5.999999999999062e-06, 5.985999999999492e-06, 5.9729999999993955e-06, 6.014000000002101e-06, 5.945000000000256e-06, 6.000000000002531e-06, 5.985999999999492e-06, 6.0279999999982015e-06, 6.0279999999982015e-06, 5.985999999999492e-06, 5.985999999999492e-06, 5.985999999999492e-06, 5.985999999999492e-06, 5.985999999999492e-06, 6.055000000001337e-06, 5.999999999999062e-06, 5.985999999999492e-06, 5.945000000000256e-06, 6.000000000002531e-06, 5.999999999999062e-06, 5.971999999999922e-06]</msg>
<status status="PASS" starttime="20201115 22:00:50.843" endtime="20201115 22:00:50.845"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.839" endtime="20201115 22:00:50.846"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:50.848" endtime="20201115 22:00:50.849"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:50.851" endtime="20201115 22:00:50.871"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.850" endtime="20201115 22:00:50.871"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.846" endtime="20201115 22:00:50.872"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.478" endtime="20201115 22:00:50.872"></status>
</kw>
<msg timestamp="20201115 22:00:50.872" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:50.881" endtime="20201115 22:00:50.899"></status>
</kw>
<msg timestamp="20201115 22:00:50.900" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:50.880" endtime="20201115 22:00:50.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:50.902" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:50.901" endtime="20201115 22:00:50.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:50.903" endtime="20201115 22:00:50.905"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.877" endtime="20201115 22:00:50.906"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.875" endtime="20201115 22:00:50.906"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:50.912" endtime="20201115 22:00:51.200"></status>
</kw>
<msg timestamp="20201115 22:00:51.203" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020176597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020182583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:50.911" endtime="20201115 22:00:51.203"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:51.211" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020176597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020182583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:51.204" endtime="20201115 22:00:51.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:51.212" endtime="20201115 22:00:51.214"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.908" endtime="20201115 22:00:51.214"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.907" endtime="20201115 22:00:51.215"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:51.219" level="INFO">${RESULT} = [{'time': 0.020182583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.985999999999492e-06, 'source_diff': 5.985999999999492e-06}, {'time': 0.020337444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:51.216" endtime="20201115 22:00:51.219"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:51.233" level="INFO">${OVERHEAD} = {'time': [0.020182583, 0.020337444, 0.02048875, 0.020645514, 0.020799417, 0.020955708, 0.021111306, 0.021268611, 0.021423583, 0.021579153, 0.021733264, 0.021889819, 0.022043778, 0.022197681, 0.0223512...</msg>
<status status="PASS" starttime="20201115 22:00:51.220" endtime="20201115 22:00:51.233"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:51.237" level="INFO">NAME: 00-overhead-14-set</msg>
<status status="PASS" starttime="20201115 22:00:51.236" endtime="20201115 22:00:51.238"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:51.240" level="INFO">VALUE: [5.985999999999492e-06, 5.985999999999492e-06, 5.999999999999062e-06, 5.999999999999062e-06, 5.985999999999492e-06, 5.985999999999492e-06, 5.999999999999062e-06, 5.999999999999062e-06, 6.026999999998728e-06, 6.028000000001671e-06, 5.985999999999492e-06, 5.986000000002961e-06, 5.9589999999998255e-06, 5.986999999998965e-06, 5.958000000000352e-06, 5.9729999999993955e-06, 6.000000000002531e-06, 6.0139999999986316e-06, 6.040999999998298e-06, 6.0139999999986316e-06, 5.985999999999492e-06, 5.999999999999062e-06, 5.986999999998965e-06, 6.000000000002531e-06, 5.985999999999492e-06, 6.0139999999986316e-06, 5.9589999999998255e-06, 6.012999999999158e-06, 5.958000000000352e-06, 5.985999999999492e-06, 5.9729999999993955e-06, 5.986999999998965e-06, 5.985999999999492e-06, 5.944000000000782e-06, 5.999999999999062e-06, 5.985999999999492e-06, 5.987000000002435e-06, 5.985999999999492e-06, 5.999999999999062e-06, 6.0279999999982015e-06, 5.985999999999492e-06, 5.985999999999492e-06, 5.9589999999998255e-06, 5.9729999999993955e-06, 5.944000000000782e-06, 5.985999999999492e-06, 5.985999999999492e-06, 5.985999999999492e-06, 5.999999999999062e-06, 5.971999999999922e-06]</msg>
<status status="PASS" starttime="20201115 22:00:51.238" endtime="20201115 22:00:51.240"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.234" endtime="20201115 22:00:51.241"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:51.243" endtime="20201115 22:00:51.244"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:51.246" endtime="20201115 22:00:51.266"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.245" endtime="20201115 22:00:51.266"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.241" endtime="20201115 22:00:51.267"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.873" endtime="20201115 22:00:51.267"></status>
</kw>
<msg timestamp="20201115 22:00:51.267" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:51.277" endtime="20201115 22:00:51.293"></status>
</kw>
<msg timestamp="20201115 22:00:51.294" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:51.275" endtime="20201115 22:00:51.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:51.296" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:51.295" endtime="20201115 22:00:51.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:51.297" endtime="20201115 22:00:51.299"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.272" endtime="20201115 22:00:51.299"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.270" endtime="20201115 22:00:51.300"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:51.306" endtime="20201115 22:00:51.594"></status>
</kw>
<msg timestamp="20201115 22:00:51.597" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020815694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020821681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:51.305" endtime="20201115 22:00:51.597"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:51.605" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020815694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020821681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:51.598" endtime="20201115 22:00:51.606"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:51.607" endtime="20201115 22:00:51.609"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.302" endtime="20201115 22:00:51.609"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.300" endtime="20201115 22:00:51.610"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:51.614" level="INFO">${RESULT} = [{'time': 0.020821681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.987000000002435e-06, 'source_diff': 5.987000000002435e-06}, {'time': 0.020973694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:51.610" endtime="20201115 22:00:51.614"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:51.627" level="INFO">${OVERHEAD} = {'time': [0.020821681, 0.020973694, 0.021126028, 0.021280167, 0.021436917, 0.021587583, 0.021738458, 0.021891486, 0.022046236, 0.022197472, 0.022350972, 0.022502583, 0.022654583, 0.022806139, 0.022958...</msg>
<status status="PASS" starttime="20201115 22:00:51.615" endtime="20201115 22:00:51.628"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:51.632" level="INFO">NAME: 00-overhead-14-set</msg>
<status status="PASS" starttime="20201115 22:00:51.631" endtime="20201115 22:00:51.632"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:51.634" level="INFO">VALUE: [5.987000000002435e-06, 5.971999999999922e-06, 5.971999999999922e-06, 5.999999999999062e-06, 5.985999999999492e-06, 5.985999999999492e-06, 5.901999999998603e-06, 5.986000000002961e-06, 6.028000000001671e-06, 5.971999999999922e-06, 5.985999999999492e-06, 5.999999999999062e-06, 5.985999999999492e-06, 6.0139999999986316e-06, 5.985999999999492e-06, 5.985999999999492e-06, 5.986999999998965e-06, 5.958000000000352e-06, 6.014000000002101e-06, 6.0139999999986316e-06, 5.999999999999062e-06, 5.985999999999492e-06, 5.999999999999062e-06, 6.000000000002531e-06, 5.986999999998965e-06, 5.999999999999062e-06, 5.958000000000352e-06, 5.987000000002435e-06, 6.0139999999986316e-06, 5.985999999999492e-06, 5.985999999999492e-06, 6.014000000002101e-06, 5.9589999999998255e-06, 5.985999999999492e-06, 6.055000000001337e-06, 5.971999999999922e-06, 5.985999999999492e-06, 5.916999999997646e-06, 5.986000000002961e-06, 5.985999999999492e-06, 5.985999999999492e-06, 5.985999999999492e-06, 5.985999999999492e-06, 5.985999999999492e-06, 5.999999999999062e-06, 5.985999999999492e-06, 5.944000000000782e-06, 5.999999999999062e-06, 5.985999999999492e-06, 5.985999999999492e-06]</msg>
<status status="PASS" starttime="20201115 22:00:51.633" endtime="20201115 22:00:51.635"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.628" endtime="20201115 22:00:51.635"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:51.638" endtime="20201115 22:00:51.639"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:51.641" endtime="20201115 22:00:51.660"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.640" endtime="20201115 22:00:51.661"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.636" endtime="20201115 22:00:51.662"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.268" endtime="20201115 22:00:51.662"></status>
</kw>
<msg timestamp="20201115 22:00:51.662" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:51.671" endtime="20201115 22:00:51.686"></status>
</kw>
<msg timestamp="20201115 22:00:51.687" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:51.670" endtime="20201115 22:00:51.687"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:51.689" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:51.688" endtime="20201115 22:00:51.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:51.690" endtime="20201115 22:00:51.692"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.667" endtime="20201115 22:00:51.692"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.665" endtime="20201115 22:00:51.693"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:51.699" endtime="20201115 22:00:51.987"></status>
</kw>
<msg timestamp="20201115 22:00:51.990" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020082653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020088639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:51.698" endtime="20201115 22:00:51.991"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:51.999" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020082653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020088639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:51.992" endtime="20201115 22:00:51.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:52.000" endtime="20201115 22:00:52.002"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.695" endtime="20201115 22:00:52.002"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.693" endtime="20201115 22:00:52.003"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:52.007" level="INFO">${RESULT} = [{'time': 0.020088639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.985999999999492e-06, 'source_diff': 5.985999999999492e-06}, {'time': 0.020243736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:52.003" endtime="20201115 22:00:52.007"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:52.020" level="INFO">${OVERHEAD} = {'time': [0.020088639, 0.020243736, 0.020394861, 0.020546222, 0.020697111, 0.020853111, 0.021004861, 0.02115925, 0.021309347, 0.021460958, 0.021614431, 0.02176575, 0.021920847, 0.022075944, 0.02223105...</msg>
<status status="PASS" starttime="20201115 22:00:52.008" endtime="20201115 22:00:52.021"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:52.025" level="INFO">NAME: 00-overhead-14-set</msg>
<status status="PASS" starttime="20201115 22:00:52.024" endtime="20201115 22:00:52.025"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:52.028" level="INFO">VALUE: [5.985999999999492e-06, 5.971999999999922e-06, 5.985999999999492e-06, 5.985999999999492e-06, 6.055000000001337e-06, 5.999999999999062e-06, 5.985999999999492e-06, 5.971999999999922e-06, 5.985999999999492e-06, 5.999999999999062e-06, 6.0139999999986316e-06, 5.985999999999492e-06, 5.971999999999922e-06, 5.971999999999922e-06, 5.9729999999993955e-06, 5.985999999999492e-06, 5.985999999999492e-06, 5.999999999999062e-06, 6.0139999999986316e-06, 5.986000000002961e-06, 5.971999999999922e-06, 5.985999999999492e-06, 5.986999999998965e-06, 5.958000000000352e-06, 6.000000000002531e-06, 5.971999999999922e-06, 6.000000000002531e-06, 6.056000000000811e-06, 5.971999999999922e-06, 6.040999999998298e-06, 5.987000000002435e-06, 6.014000000002101e-06, 6.012999999999158e-06, 5.986000000002961e-06, 5.999999999999062e-06, 5.985999999999492e-06, 5.999999999999062e-06, 5.971999999999922e-06, 5.985999999999492e-06, 5.985999999999492e-06, 6.0139999999986316e-06, 5.971999999999922e-06, 6.0139999999986316e-06, 5.971999999999922e-06, 5.985999999999492e-06, 5.986000000002961e-06, 5.958000000000352e-06, 5.985999999999492e-06, 5.9589999999998255e-06, 6.000000000002531e-06]</msg>
<status status="PASS" starttime="20201115 22:00:52.026" endtime="20201115 22:00:52.028"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.021" endtime="20201115 22:00:52.029"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:52.031" endtime="20201115 22:00:52.032"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:52.034" endtime="20201115 22:00:52.054"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.033" endtime="20201115 22:00:52.054"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.029" endtime="20201115 22:00:52.055"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.663" endtime="20201115 22:00:52.055"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.084" endtime="20201115 22:00:52.055"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.083" endtime="20201115 22:00:52.055"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:52.058" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:52.066" endtime="20201115 22:00:52.084"></status>
</kw>
<msg timestamp="20201115 22:00:52.085" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:52.065" endtime="20201115 22:00:52.085"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:52.088" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:52.086" endtime="20201115 22:00:52.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:52.089" endtime="20201115 22:00:52.090"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.062" endtime="20201115 22:00:52.091"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.060" endtime="20201115 22:00:52.091"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:52.098" endtime="20201115 22:00:52.386"></status>
</kw>
<msg timestamp="20201115 22:00:52.389" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022480875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022487139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:52.097" endtime="20201115 22:00:52.389"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:52.397" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022480875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022487139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:52.390" endtime="20201115 22:00:52.398"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:52.398" endtime="20201115 22:00:52.400"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.094" endtime="20201115 22:00:52.401"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.092" endtime="20201115 22:00:52.401"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:52.405" level="INFO">${RESULT} = [{'time': 0.022487139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.2639999999988816e-06, 'source_diff': 6.2639999999988816e-06}, {'time': 0.022650597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:52.402" endtime="20201115 22:00:52.406"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:52.419" level="INFO">${OVERHEAD} = {'time': [0.022487139, 0.022650597, 0.022811583, 0.02297675, 0.023136861, 0.023298139, 0.023460208, 0.023625819, 0.023790514, 0.023953236, 0.024119583, 0.024282514, 0.024444292, 0.024611514, 0.0247773...</msg>
<status status="PASS" starttime="20201115 22:00:52.406" endtime="20201115 22:00:52.419"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:52.423" level="INFO">NAME: 00-overhead-15-set</msg>
<status status="PASS" starttime="20201115 22:00:52.422" endtime="20201115 22:00:52.424"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:52.426" level="INFO">VALUE: [6.2639999999988816e-06, 6.305000000001587e-06, 6.222000000000172e-06, 6.249999999999312e-06, 6.278000000001921e-06, 6.222000000000172e-06, 6.2639999999988816e-06, 6.249999999999312e-06, 6.249999999999312e-06, 6.2639999999988816e-06, 6.2639999999988816e-06, 6.250000000002781e-06, 6.2639999999988816e-06, 6.249999999999312e-06, 6.249999999999312e-06, 6.306000000001061e-06, 6.250000000002781e-06, 6.2229999999996455e-06, 6.262999999999408e-06, 6.249999999999312e-06, 6.236999999999215e-06, 6.235999999999742e-06, 6.208000000000602e-06, 6.249999999999312e-06, 6.250000000002781e-06, 6.250000000002781e-06, 6.2229999999996455e-06, 6.250000000002781e-06, 6.264000000002351e-06, 6.291999999998021e-06, 6.235999999999742e-06, 6.249999999999312e-06, 6.181000000000936e-06, 6.249999999999312e-06, 6.195000000000506e-06, 6.235999999999742e-06, 6.2639999999988816e-06, 6.235999999999742e-06, 6.222000000000172e-06, 6.222000000000172e-06, 6.235999999999742e-06, 6.249999999999312e-06, 6.194000000001032e-06, 6.264000000002351e-06, 6.2779999999984515e-06, 6.222000000000172e-06, 6.291999999998021e-06, 6.222000000000172e-06, 6.249999999999312e-06, 6.249999999999312e-06]</msg>
<status status="PASS" starttime="20201115 22:00:52.424" endtime="20201115 22:00:52.426"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.420" endtime="20201115 22:00:52.427"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:52.429" endtime="20201115 22:00:52.430"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:52.432" endtime="20201115 22:00:52.452"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.431" endtime="20201115 22:00:52.453"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.427" endtime="20201115 22:00:52.453"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.058" endtime="20201115 22:00:52.453"></status>
</kw>
<msg timestamp="20201115 22:00:52.453" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:52.462" endtime="20201115 22:00:52.481"></status>
</kw>
<msg timestamp="20201115 22:00:52.482" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:52.461" endtime="20201115 22:00:52.482"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:52.484" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:52.483" endtime="20201115 22:00:52.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:52.486" endtime="20201115 22:00:52.487"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.458" endtime="20201115 22:00:52.488"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.456" endtime="20201115 22:00:52.488"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:52.495" endtime="20201115 22:00:52.781"></status>
</kw>
<msg timestamp="20201115 22:00:52.784" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020015431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020021681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:52.493" endtime="20201115 22:00:52.785"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:52.792" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020015431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020021681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:52.785" endtime="20201115 22:00:52.793"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:52.794" endtime="20201115 22:00:52.795"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.491" endtime="20201115 22:00:52.796"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.489" endtime="20201115 22:00:52.796"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:52.800" level="INFO">${RESULT} = [{'time': 0.020021681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.249999999999312e-06, 'source_diff': 6.249999999999312e-06}, {'time': 0.02018725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:00:52.797" endtime="20201115 22:00:52.801"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:52.814" level="INFO">${OVERHEAD} = {'time': [0.020021681, 0.02018725, 0.020350431, 0.020510528, 0.020673236, 0.020834083, 0.020999361, 0.021166431, 0.021331069, 0.021494958, 0.021658681, 0.021823833, 0.021990431, 0.022157708, 0.0223180...</msg>
<status status="PASS" starttime="20201115 22:00:52.801" endtime="20201115 22:00:52.814"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:52.818" level="INFO">NAME: 00-overhead-15-set</msg>
<status status="PASS" starttime="20201115 22:00:52.817" endtime="20201115 22:00:52.819"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:52.821" level="INFO">VALUE: [6.249999999999312e-06, 6.181000000000936e-06, 6.249999999999312e-06, 6.2639999999988816e-06, 6.250000000002781e-06, 6.304999999998118e-06, 6.250000000002781e-06, 6.249999999999312e-06, 6.277000000002447e-06, 6.250000000002781e-06, 6.249999999999312e-06, 6.249999999999312e-06, 6.2229999999996455e-06, 6.291000000002017e-06, 6.2229999999996455e-06, 6.249999999999312e-06, 6.249999999999312e-06, 6.194000000001032e-06, 6.249999999999312e-06, 6.222000000000172e-06, 6.235999999999742e-06, 6.2090000000000756e-06, 6.249999999999312e-06, 6.290999999998548e-06, 6.249999999999312e-06, 6.2639999999988816e-06, 6.264000000002351e-06, 6.250000000002781e-06, 6.334000000000201e-06, 6.249999999999312e-06, 6.2639999999988816e-06, 6.249999999999312e-06, 6.263000000002877e-06, 6.249999999999312e-06, 6.249999999999312e-06, 6.2639999999988816e-06, 6.208000000000602e-06, 6.235999999999742e-06, 6.264000000002351e-06, 6.2639999999988816e-06, 6.278000000001921e-06, 6.2779999999984515e-06, 6.334000000000201e-06, 6.2779999999984515e-06, 6.195000000000506e-06, 6.2090000000000756e-06, 6.249999999999312e-06, 6.235999999999742e-06, 6.235999999999742e-06, 6.222000000000172e-06]</msg>
<status status="PASS" starttime="20201115 22:00:52.819" endtime="20201115 22:00:52.821"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.815" endtime="20201115 22:00:52.822"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:52.824" endtime="20201115 22:00:52.825"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:52.827" endtime="20201115 22:00:52.847"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.826" endtime="20201115 22:00:52.848"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.822" endtime="20201115 22:00:52.848"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.454" endtime="20201115 22:00:52.848"></status>
</kw>
<msg timestamp="20201115 22:00:52.849" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:52.858" endtime="20201115 22:00:52.878"></status>
</kw>
<msg timestamp="20201115 22:00:52.879" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:52.856" endtime="20201115 22:00:52.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:52.881" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:52.880" endtime="20201115 22:00:52.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:52.882" endtime="20201115 22:00:52.884"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.853" endtime="20201115 22:00:52.884"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.851" endtime="20201115 22:00:52.885"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:52.891" endtime="20201115 22:00:53.178"></status>
</kw>
<msg timestamp="20201115 22:00:53.181" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021609014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021615264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:52.890" endtime="20201115 22:00:53.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:53.189" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021609014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021615264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:53.182" endtime="20201115 22:00:53.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:53.191" endtime="20201115 22:00:53.192"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.887" endtime="20201115 22:00:53.193"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.885" endtime="20201115 22:00:53.193"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:53.197" level="INFO">${RESULT} = [{'time': 0.021615264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.249999999999312e-06, 'source_diff': 6.249999999999312e-06}, {'time': 0.021779167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:53.194" endtime="20201115 22:00:53.198"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:53.211" level="INFO">${OVERHEAD} = {'time': [0.021615264, 0.021779167, 0.021941889, 0.022105889, 0.022272611, 0.022439931, 0.022606597, 0.022768667, 0.022928583, 0.023089694, 0.023252, 0.023414722, 0.02357775, 0.023737667, 0.023902514,...</msg>
<status status="PASS" starttime="20201115 22:00:53.198" endtime="20201115 22:00:53.211"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:53.215" level="INFO">NAME: 00-overhead-15-set</msg>
<status status="PASS" starttime="20201115 22:00:53.214" endtime="20201115 22:00:53.216"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:53.218" level="INFO">VALUE: [6.249999999999312e-06, 6.249999999999312e-06, 6.2639999999988816e-06, 6.292000000001491e-06, 6.250000000002781e-06, 6.334000000000201e-06, 6.249999999999312e-06, 6.249999999999312e-06, 6.249999999999312e-06, 6.249999999999312e-06, 6.249999999999312e-06, 6.2639999999988816e-06, 6.236000000003211e-06, 6.2639999999988816e-06, 6.249999999999312e-06, 6.2639999999988816e-06, 6.249999999999312e-06, 6.2639999999988816e-06, 6.236000000003211e-06, 6.305000000001587e-06, 6.264000000002351e-06, 6.306000000001061e-06, 6.249999999999312e-06, 6.249999999999312e-06, 6.195000000000506e-06, 6.249999999999312e-06, 6.249999999999312e-06, 6.2779999999984515e-06, 6.237000000002685e-06, 6.305999999997591e-06, 6.2779999999984515e-06, 6.222000000000172e-06, 6.180000000001462e-06, 6.2639999999988816e-06, 6.278000000001921e-06, 6.236000000003211e-06, 6.181000000000936e-06, 6.264000000002351e-06, 6.249999999999312e-06, 6.264000000002351e-06, 6.249999999999312e-06, 6.235999999999742e-06, 6.3329999999972575e-06, 6.2639999999988816e-06, 6.236999999999215e-06, 6.208000000000602e-06, 6.250000000002781e-06, 6.276999999998978e-06, 6.249999999999312e-06, 6.249999999999312e-06]</msg>
<status status="PASS" starttime="20201115 22:00:53.216" endtime="20201115 22:00:53.218"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.212" endtime="20201115 22:00:53.219"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:53.221" endtime="20201115 22:00:53.222"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:53.224" endtime="20201115 22:00:53.244"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.223" endtime="20201115 22:00:53.244"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.219" endtime="20201115 22:00:53.245"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.849" endtime="20201115 22:00:53.245"></status>
</kw>
<msg timestamp="20201115 22:00:53.246" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:53.255" endtime="20201115 22:00:53.272"></status>
</kw>
<msg timestamp="20201115 22:00:53.272" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:53.253" endtime="20201115 22:00:53.273"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:53.275" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:53.273" endtime="20201115 22:00:53.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:53.276" endtime="20201115 22:00:53.278"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.250" endtime="20201115 22:00:53.278"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.248" endtime="20201115 22:00:53.279"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:53.285" endtime="20201115 22:00:53.571"></status>
</kw>
<msg timestamp="20201115 22:00:53.574" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021373958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021380208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:53.284" endtime="20201115 22:00:53.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:53.583" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021373958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021380208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:53.575" endtime="20201115 22:00:53.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:53.584" endtime="20201115 22:00:53.585"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.281" endtime="20201115 22:00:53.586"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.279" endtime="20201115 22:00:53.586"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:53.591" level="INFO">${RESULT} = [{'time': 0.021380208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.250000000002781e-06, 'source_diff': 6.250000000002781e-06}, {'time': 0.021546806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:53.587" endtime="20201115 22:00:53.591"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:53.605" level="INFO">${OVERHEAD} = {'time': [0.021380208, 0.021546806, 0.021713917, 0.021877361, 0.022041333, 0.022207444, 0.022368653, 0.022535653, 0.022696944, 0.022862569, 0.023024875, 0.023190528, 0.023353458, 0.023517431, 0.023681...</msg>
<status status="PASS" starttime="20201115 22:00:53.592" endtime="20201115 22:00:53.605"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:53.609" level="INFO">NAME: 00-overhead-15-set</msg>
<status status="PASS" starttime="20201115 22:00:53.608" endtime="20201115 22:00:53.610"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:53.612" level="INFO">VALUE: [6.250000000002781e-06, 6.237000000002685e-06, 6.305999999997591e-06, 6.235999999999742e-06, 6.249999999999312e-06, 6.304999999998118e-06, 6.180999999997466e-06, 6.235999999999742e-06, 6.262999999999408e-06, 6.235999999999742e-06, 6.222000000000172e-06, 6.2639999999988816e-06, 6.249999999999312e-06, 6.249999999999312e-06, 6.264000000002351e-06, 6.306000000001061e-06, 6.250000000002781e-06, 6.179999999997993e-06, 6.2639999999988816e-06, 6.249999999999312e-06, 6.235999999999742e-06, 6.249999999999312e-06, 6.235999999999742e-06, 6.235999999999742e-06, 6.222000000000172e-06, 6.264000000002351e-06, 6.2779999999984515e-06, 6.2639999999988816e-06, 6.2639999999988816e-06, 6.250000000002781e-06, 6.249999999999312e-06, 6.249999999999312e-06, 6.2639999999988816e-06, 6.235999999999742e-06, 6.235999999999742e-06, 6.250000000002781e-06, 6.249999999999312e-06, 6.264000000002351e-06, 6.181000000000936e-06, 6.236000000003211e-06, 6.249999999999312e-06, 6.235999999999742e-06, 6.264000000002351e-06, 6.290999999998548e-06, 6.264000000002351e-06, 6.249999999999312e-06, 6.2639999999988816e-06, 6.249999999999312e-06, 6.235999999999742e-06, 6.249999999999312e-06]</msg>
<status status="PASS" starttime="20201115 22:00:53.610" endtime="20201115 22:00:53.612"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.606" endtime="20201115 22:00:53.613"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:53.615" endtime="20201115 22:00:53.617"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:53.619" endtime="20201115 22:00:53.639"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.617" endtime="20201115 22:00:53.639"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.613" endtime="20201115 22:00:53.640"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.246" endtime="20201115 22:00:53.640"></status>
</kw>
<msg timestamp="20201115 22:00:53.640" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:53.649" endtime="20201115 22:00:53.668"></status>
</kw>
<msg timestamp="20201115 22:00:53.669" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:53.648" endtime="20201115 22:00:53.669"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:53.671" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:53.670" endtime="20201115 22:00:53.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:53.672" endtime="20201115 22:00:53.674"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.645" endtime="20201115 22:00:53.674"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.643" endtime="20201115 22:00:53.675"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:53.682" endtime="20201115 22:00:53.970"></status>
</kw>
<msg timestamp="20201115 22:00:53.973" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020246639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020252903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:53.680" endtime="20201115 22:00:53.973"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:53.981" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020246639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020252903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:53.974" endtime="20201115 22:00:53.982"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:53.982" endtime="20201115 22:00:53.984"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.677" endtime="20201115 22:00:53.985"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.675" endtime="20201115 22:00:53.985"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:53.989" level="INFO">${RESULT} = [{'time': 0.020252903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.2639999999988816e-06, 'source_diff': 6.2639999999988816e-06}, {'time': 0.020419194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:53.986" endtime="20201115 22:00:53.989"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:54.003" level="INFO">${OVERHEAD} = {'time': [0.020252903, 0.020419194, 0.020584028, 0.020745361, 0.020908333, 0.021072347, 0.021236264, 0.021401181, 0.021567778, 0.021733569, 0.021893917, 0.022058111, 0.022220986, 0.022387583, 0.022552...</msg>
<status status="PASS" starttime="20201115 22:00:53.990" endtime="20201115 22:00:54.003"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:54.007" level="INFO">NAME: 00-overhead-15-set</msg>
<status status="PASS" starttime="20201115 22:00:54.006" endtime="20201115 22:00:54.008"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:54.010" level="INFO">VALUE: [6.2639999999988816e-06, 6.263000000002877e-06, 6.264000000002351e-06, 6.249999999999312e-06, 6.222000000000172e-06, 6.305000000001587e-06, 6.264000000002351e-06, 6.249999999999312e-06, 6.2639999999988816e-06, 6.250000000002781e-06, 6.2639999999988816e-06, 6.318999999997688e-06, 6.250000000002781e-06, 6.249999999999312e-06, 6.249999999999312e-06, 6.249999999999312e-06, 6.291999999998021e-06, 6.2639999999988816e-06, 6.249999999999312e-06, 6.249999999999312e-06, 6.264000000002351e-06, 6.249999999999312e-06, 6.249999999999312e-06, 6.249999999999312e-06, 6.195000000000506e-06, 6.249999999999312e-06, 6.249999999999312e-06, 6.235999999999742e-06, 6.264000000002351e-06, 6.222000000000172e-06, 6.235999999999742e-06, 6.180999999997466e-06, 6.249999999999312e-06, 6.235999999999742e-06, 6.249999999999312e-06, 6.249999999999312e-06, 6.249999999999312e-06, 6.249999999999312e-06, 6.249999999999312e-06, 6.236000000003211e-06, 6.262999999999408e-06, 6.306000000001061e-06, 6.236999999999215e-06, 6.3329999999972575e-06, 6.2779999999984515e-06, 6.236000000003211e-06, 6.2639999999988816e-06, 6.2639999999988816e-06, 6.235999999999742e-06, 6.249999999999312e-06]</msg>
<status status="PASS" starttime="20201115 22:00:54.008" endtime="20201115 22:00:54.011"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.004" endtime="20201115 22:00:54.011"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:54.013" endtime="20201115 22:00:54.015"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:54.017" endtime="20201115 22:00:54.036"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.015" endtime="20201115 22:00:54.037"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.012" endtime="20201115 22:00:54.037"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.641" endtime="20201115 22:00:54.038"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.057" endtime="20201115 22:00:54.038"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.056" endtime="20201115 22:00:54.038"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:54.040" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:54.049" endtime="20201115 22:00:54.067"></status>
</kw>
<msg timestamp="20201115 22:00:54.068" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:54.048" endtime="20201115 22:00:54.068"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:54.070" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:54.069" endtime="20201115 22:00:54.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:54.071" endtime="20201115 22:00:54.073"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.045" endtime="20201115 22:00:54.073"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.043" endtime="20201115 22:00:54.074"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:54.081" endtime="20201115 22:00:54.368"></status>
</kw>
<msg timestamp="20201115 22:00:54.372" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022676931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022683417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:54.079" endtime="20201115 22:00:54.372"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:54.380" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022676931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022683417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:54.373" endtime="20201115 22:00:54.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:54.381" endtime="20201115 22:00:54.383"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.076" endtime="20201115 22:00:54.383"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.074" endtime="20201115 22:00:54.384"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:54.388" level="INFO">${RESULT} = [{'time': 0.022683417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.485999999999992e-06, 'source_diff': 6.485999999999992e-06}, {'time': 0.022858042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:54.384" endtime="20201115 22:00:54.388"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:54.401" level="INFO">${OVERHEAD} = {'time': [0.022683417, 0.022858042, 0.023030597, 0.023201958, 0.023376819, 0.023547722, 0.023720972, 0.023892986, 0.024063097, 0.024239903, 0.024416708, 0.024593, 0.024767694, 0.024943611, 0.025114708...</msg>
<status status="PASS" starttime="20201115 22:00:54.389" endtime="20201115 22:00:54.402"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:54.406" level="INFO">NAME: 00-overhead-16-set</msg>
<status status="PASS" starttime="20201115 22:00:54.405" endtime="20201115 22:00:54.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:54.409" level="INFO">VALUE: [6.485999999999992e-06, 6.513999999999132e-06, 6.513999999999132e-06, 6.485999999999992e-06, 6.512999999999658e-06, 6.5279999999987015e-06, 6.540999999998798e-06, 6.514000000002601e-06, 6.499999999999562e-06, 6.542000000001741e-06, 6.513999999999132e-06, 6.472000000000422e-06, 6.499999999999562e-06, 6.542000000001741e-06, 6.499999999999562e-06, 6.499999999999562e-06, 6.514000000002601e-06, 6.5279999999987015e-06, 6.5279999999987015e-06, 6.513999999999132e-06, 6.556000000001311e-06, 6.513999999999132e-06, 6.4579999999973825e-06, 6.500000000003031e-06, 6.486999999999465e-06, 6.569000000001407e-06, 6.500000000003031e-06, 6.459000000000326e-06, 6.5279999999987015e-06, 6.554999999998368e-06, 6.513999999999132e-06, 6.499999999999562e-06, 6.513999999999132e-06, 6.513999999999132e-06, 6.5829999999975075e-06, 6.5279999999987015e-06, 6.513999999999132e-06, 6.513999999999132e-06, 6.485999999999992e-06, 6.513999999999132e-06, 6.512999999999658e-06, 6.499999999999562e-06, 6.4729999999998955e-06, 6.513999999999132e-06, 6.485999999999992e-06, 6.513999999999132e-06, 6.513999999999132e-06, 6.514000000002601e-06, 6.528000000002171e-06, 6.513999999999132e-06]</msg>
<status status="PASS" starttime="20201115 22:00:54.407" endtime="20201115 22:00:54.409"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.402" endtime="20201115 22:00:54.410"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:54.412" endtime="20201115 22:00:54.413"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:54.416" endtime="20201115 22:00:54.435"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.414" endtime="20201115 22:00:54.436"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.410" endtime="20201115 22:00:54.436"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.041" endtime="20201115 22:00:54.436"></status>
</kw>
<msg timestamp="20201115 22:00:54.437" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:54.446" endtime="20201115 22:00:54.464"></status>
</kw>
<msg timestamp="20201115 22:00:54.464" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:54.444" endtime="20201115 22:00:54.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:54.467" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:54.466" endtime="20201115 22:00:54.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:54.468" endtime="20201115 22:00:54.470"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.441" endtime="20201115 22:00:54.470"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.439" endtime="20201115 22:00:54.471"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:54.477" endtime="20201115 22:00:54.765"></status>
</kw>
<msg timestamp="20201115 22:00:54.768" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020042556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020049069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:54.475" endtime="20201115 22:00:54.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:54.776" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020042556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020049069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:54.769" endtime="20201115 22:00:54.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:54.777" endtime="20201115 22:00:54.779"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.473" endtime="20201115 22:00:54.779"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.471" endtime="20201115 22:00:54.780"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:54.784" level="INFO">${RESULT} = [{'time': 0.020049069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.512999999999658e-06, 'source_diff': 6.512999999999658e-06}, {'time': 0.020220833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:54.780" endtime="20201115 22:00:54.784"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:54.797" level="INFO">${OVERHEAD} = {'time': [0.020049069, 0.020220833, 0.020393319, 0.020568972, 0.020746069, 0.020922889, 0.021096347, 0.021269542, 0.02144375, 0.021615514, 0.021790139, 0.021965083, 0.022139097, 0.022309722, 0.0224810...</msg>
<status status="PASS" starttime="20201115 22:00:54.785" endtime="20201115 22:00:54.798"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:54.802" level="INFO">NAME: 00-overhead-16-set</msg>
<status status="PASS" starttime="20201115 22:00:54.801" endtime="20201115 22:00:54.803"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:54.805" level="INFO">VALUE: [6.512999999999658e-06, 6.513999999999132e-06, 6.512999999999658e-06, 6.500000000003031e-06, 6.512999999999658e-06, 6.499999999999562e-06, 6.500000000003031e-06, 6.5279999999987015e-06, 6.499999999999562e-06, 6.499999999999562e-06, 6.499999999999562e-06, 6.513999999999132e-06, 6.540999999998798e-06, 6.513999999999132e-06, 6.555999999997841e-06, 6.583000000000977e-06, 6.526999999999228e-06, 6.514000000002601e-06, 6.541999999998271e-06, 6.485999999999992e-06, 6.499999999999562e-06, 6.542000000001741e-06, 6.526999999999228e-06, 6.485999999999992e-06, 6.513999999999132e-06, 6.513999999999132e-06, 6.512999999999658e-06, 6.514000000002601e-06, 6.5279999999987015e-06, 6.528000000002171e-06, 6.5279999999987015e-06, 6.513999999999132e-06, 6.512999999999658e-06, 6.485999999999992e-06, 6.526999999999228e-06, 6.513999999999132e-06, 6.513999999999132e-06, 6.499999999999562e-06, 6.526999999999228e-06, 6.5279999999987015e-06, 6.513999999999132e-06, 6.513999999999132e-06, 6.500000000003031e-06, 6.485999999999992e-06, 6.513999999999132e-06, 6.5279999999987015e-06, 6.513999999999132e-06, 6.514000000002601e-06, 6.5279999999987015e-06, 6.499999999999562e-06]</msg>
<status status="PASS" starttime="20201115 22:00:54.803" endtime="20201115 22:00:54.805"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.799" endtime="20201115 22:00:54.806"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:54.808" endtime="20201115 22:00:54.809"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:54.811" endtime="20201115 22:00:54.831"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.810" endtime="20201115 22:00:54.831"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.806" endtime="20201115 22:00:54.832"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.437" endtime="20201115 22:00:54.832"></status>
</kw>
<msg timestamp="20201115 22:00:54.832" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:54.842" endtime="20201115 22:00:54.860"></status>
</kw>
<msg timestamp="20201115 22:00:54.861" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:54.840" endtime="20201115 22:00:54.861"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:54.864" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:54.862" endtime="20201115 22:00:54.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:54.865" endtime="20201115 22:00:54.866"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.837" endtime="20201115 22:00:54.867"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.835" endtime="20201115 22:00:54.867"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:54.874" endtime="20201115 22:00:55.161"></status>
</kw>
<msg timestamp="20201115 22:00:55.164" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020256403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020262917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:54.872" endtime="20201115 22:00:55.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:55.172" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020256403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020262917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:55.165" endtime="20201115 22:00:55.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:55.173" endtime="20201115 22:00:55.175"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.870" endtime="20201115 22:00:55.176"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.868" endtime="20201115 22:00:55.176"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:55.180" level="INFO">${RESULT} = [{'time': 0.020262917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.513999999999132e-06, 'source_diff': 6.513999999999132e-06}, {'time': 0.020433583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:55.177" endtime="20201115 22:00:55.184"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:55.198" level="INFO">${OVERHEAD} = {'time': [0.020262917, 0.020433583, 0.020605917, 0.020779806, 0.020955208, 0.021131347, 0.021305319, 0.021481847, 0.021652431, 0.021823111, 0.021993986, 0.022170819, 0.022347097, 0.022523417, 0.022693...</msg>
<status status="PASS" starttime="20201115 22:00:55.185" endtime="20201115 22:00:55.198"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:55.202" level="INFO">NAME: 00-overhead-16-set</msg>
<status status="PASS" starttime="20201115 22:00:55.201" endtime="20201115 22:00:55.203"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:55.205" level="INFO">VALUE: [6.513999999999132e-06, 6.527000000002697e-06, 6.556000000001311e-06, 6.528000000002171e-06, 6.513999999999132e-06, 6.514000000002601e-06, 6.512999999999658e-06, 6.513999999999132e-06, 6.513999999999132e-06, 6.541999999998271e-06, 6.472000000000422e-06, 6.527000000002697e-06, 6.513999999999132e-06, 6.528000000002171e-06, 6.540999999998798e-06, 6.514000000002601e-06, 6.514000000002601e-06, 6.526999999999228e-06, 6.512999999999658e-06, 6.499999999999562e-06, 6.513999999999132e-06, 6.499999999999562e-06, 6.5279999999987015e-06, 6.5279999999987015e-06, 6.472000000000422e-06, 6.513999999999132e-06, 6.485999999999992e-06, 6.556000000001311e-06, 6.499999999999562e-06, 6.499999999999562e-06, 6.5279999999987015e-06, 6.499999999999562e-06, 6.485999999999992e-06, 6.499999999999562e-06, 6.5279999999987015e-06, 6.514000000002601e-06, 6.513999999999132e-06, 6.514000000002601e-06, 6.583000000000977e-06, 6.513999999999132e-06, 6.513999999999132e-06, 6.554999999998368e-06, 6.513999999999132e-06, 6.5279999999987015e-06, 6.513999999999132e-06, 6.513999999999132e-06, 6.555999999997841e-06, 6.514000000002601e-06, 6.512999999999658e-06, 6.514000000002601e-06]</msg>
<status status="PASS" starttime="20201115 22:00:55.204" endtime="20201115 22:00:55.205"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.199" endtime="20201115 22:00:55.206"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:55.208" endtime="20201115 22:00:55.209"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:55.212" endtime="20201115 22:00:55.231"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.210" endtime="20201115 22:00:55.232"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.207" endtime="20201115 22:00:55.232"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.833" endtime="20201115 22:00:55.232"></status>
</kw>
<msg timestamp="20201115 22:00:55.233" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:55.242" endtime="20201115 22:00:55.259"></status>
</kw>
<msg timestamp="20201115 22:00:55.260" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:55.240" endtime="20201115 22:00:55.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:55.262" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:55.261" endtime="20201115 22:00:55.263"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:55.263" endtime="20201115 22:00:55.265"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.238" endtime="20201115 22:00:55.265"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.235" endtime="20201115 22:00:55.266"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:55.272" endtime="20201115 22:00:55.561"></status>
</kw>
<msg timestamp="20201115 22:00:55.564" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020499681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020506139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:55.271" endtime="20201115 22:00:55.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:55.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020499681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020506139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:55.565" endtime="20201115 22:00:55.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:55.573" endtime="20201115 22:00:55.575"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.268" endtime="20201115 22:00:55.576"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.266" endtime="20201115 22:00:55.576"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:55.580" level="INFO">${RESULT} = [{'time': 0.020506139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.458000000000852e-06, 'source_diff': 6.458000000000852e-06}, {'time': 0.020678931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:55.577" endtime="20201115 22:00:55.581"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:55.594" level="INFO">${OVERHEAD} = {'time': [0.020506139, 0.020678931, 0.020854347, 0.021024819, 0.021201764, 0.021372458, 0.02154775, 0.021718333, 0.021890819, 0.022062833, 0.022236333, 0.022410556, 0.022581139, 0.022755056, 0.0229318...</msg>
<status status="PASS" starttime="20201115 22:00:55.581" endtime="20201115 22:00:55.594"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:55.598" level="INFO">NAME: 00-overhead-16-set</msg>
<status status="PASS" starttime="20201115 22:00:55.597" endtime="20201115 22:00:55.599"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:55.601" level="INFO">VALUE: [6.458000000000852e-06, 6.459000000000326e-06, 6.513999999999132e-06, 6.569000000001407e-06, 6.472000000000422e-06, 6.540999999998798e-06, 6.499999999999562e-06, 6.499999999999562e-06, 6.512999999999658e-06, 6.513999999999132e-06, 6.444000000001282e-06, 6.514000000002601e-06, 6.513999999999132e-06, 6.513999999999132e-06, 6.512999999999658e-06, 6.499999999999562e-06, 6.513999999999132e-06, 6.513999999999132e-06, 6.499999999999562e-06, 6.513999999999132e-06, 6.513999999999132e-06, 6.5279999999987015e-06, 6.514000000002601e-06, 6.5279999999987015e-06, 6.458000000000852e-06, 6.459000000000326e-06, 6.513999999999132e-06, 6.5279999999987015e-06, 6.541999999998271e-06, 6.569000000001407e-06, 6.569000000001407e-06, 6.513000000003127e-06, 6.459000000000326e-06, 6.4729999999998955e-06, 6.485999999999992e-06, 6.445000000000756e-06, 6.583000000000977e-06, 6.513999999999132e-06, 6.569000000001407e-06, 6.513999999999132e-06, 6.513999999999132e-06, 6.445000000000756e-06, 6.513999999999132e-06, 6.429999999998243e-06, 6.499999999999562e-06, 6.443999999997813e-06, 6.512999999999658e-06, 6.541999999998271e-06, 6.514000000002601e-06, 6.512999999999658e-06]</msg>
<status status="PASS" starttime="20201115 22:00:55.599" endtime="20201115 22:00:55.601"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.595" endtime="20201115 22:00:55.602"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:55.604" endtime="20201115 22:00:55.605"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:55.608" endtime="20201115 22:00:55.627"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.606" endtime="20201115 22:00:55.628"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.602" endtime="20201115 22:00:55.628"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.233" endtime="20201115 22:00:55.629"></status>
</kw>
<msg timestamp="20201115 22:00:55.629" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:55.639" endtime="20201115 22:00:55.656"></status>
</kw>
<msg timestamp="20201115 22:00:55.657" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:55.637" endtime="20201115 22:00:55.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:55.659" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:55.658" endtime="20201115 22:00:55.660"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:55.660" endtime="20201115 22:00:55.662"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.634" endtime="20201115 22:00:55.663"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.632" endtime="20201115 22:00:55.663"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:55.670" endtime="20201115 22:00:55.957"></status>
</kw>
<msg timestamp="20201115 22:00:55.960" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021386792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021393292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:55.668" endtime="20201115 22:00:55.960"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:55.968" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021386792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021393292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:55.961" endtime="20201115 22:00:55.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:55.970" endtime="20201115 22:00:55.971"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.665" endtime="20201115 22:00:55.972"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.664" endtime="20201115 22:00:55.972"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:55.976" level="INFO">${RESULT} = [{'time': 0.021393292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.499999999999562e-06, 'source_diff': 6.499999999999562e-06}, {'time': 0.021566986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:55.973" endtime="20201115 22:00:55.977"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:55.990" level="INFO">${OVERHEAD} = {'time': [0.021393292, 0.021566986, 0.021738097, 0.021910333, 0.022087417, 0.022258069, 0.022430861, 0.022602, 0.022776389, 0.022949819, 0.023125472, 0.02330225, 0.023476931, 0.023654486, 0.023825375,...</msg>
<status status="PASS" starttime="20201115 22:00:55.977" endtime="20201115 22:00:55.990"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:55.995" level="INFO">NAME: 00-overhead-16-set</msg>
<status status="PASS" starttime="20201115 22:00:55.993" endtime="20201115 22:00:55.995"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:55.997" level="INFO">VALUE: [6.499999999999562e-06, 6.5279999999987015e-06, 6.583000000000977e-06, 6.485999999999992e-06, 6.514000000002601e-06, 6.512999999999658e-06, 6.429999999998243e-06, 6.513999999999132e-06, 6.514000000002601e-06, 6.499999999999562e-06, 6.485999999999992e-06, 6.5279999999987015e-06, 6.513999999999132e-06, 6.499999999999562e-06, 6.513999999999132e-06, 6.499999999999562e-06, 6.486999999999465e-06, 6.499999999999562e-06, 6.513999999999132e-06, 6.499999999999562e-06, 6.5279999999987015e-06, 6.499999999999562e-06, 6.472000000000422e-06, 6.513999999999132e-06, 6.512999999999658e-06, 6.5279999999987015e-06, 6.4579999999973825e-06, 6.486000000003461e-06, 6.500000000003031e-06, 6.430999999997716e-06, 6.5279999999987015e-06, 6.472000000000422e-06, 6.555999999997841e-06, 6.513999999999132e-06, 6.513999999999132e-06, 6.485999999999992e-06, 6.499999999999562e-06, 6.486999999999465e-06, 6.514000000002601e-06, 6.513999999999132e-06, 6.513999999999132e-06, 6.540999999998798e-06, 6.513999999999132e-06, 6.513999999999132e-06, 6.513999999999132e-06, 6.513999999999132e-06, 6.513999999999132e-06, 6.514000000002601e-06, 6.513999999999132e-06, 6.513999999999132e-06]</msg>
<status status="PASS" starttime="20201115 22:00:55.996" endtime="20201115 22:00:55.998"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.991" endtime="20201115 22:00:55.998"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:56.000" endtime="20201115 22:00:56.002"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:56.004" endtime="20201115 22:00:56.023"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.002" endtime="20201115 22:00:56.024"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.999" endtime="20201115 22:00:56.024"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.629" endtime="20201115 22:00:56.024"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.039" endtime="20201115 22:00:56.025"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.038" endtime="20201115 22:00:56.025"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:56.027" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:56.036" endtime="20201115 22:00:56.057"></status>
</kw>
<msg timestamp="20201115 22:00:56.057" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:56.035" endtime="20201115 22:00:56.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:56.059" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:56.058" endtime="20201115 22:00:56.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:56.061" endtime="20201115 22:00:56.062"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.032" endtime="20201115 22:00:56.063"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.030" endtime="20201115 22:00:56.063"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:56.070" endtime="20201115 22:00:56.357"></status>
</kw>
<msg timestamp="20201115 22:00:56.360" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022700819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022707611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:56.069" endtime="20201115 22:00:56.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:56.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022700819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022707611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:56.361" endtime="20201115 22:00:56.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:56.369" endtime="20201115 22:00:56.371"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.066" endtime="20201115 22:00:56.372"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.064" endtime="20201115 22:00:56.372"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:56.376" level="INFO">${RESULT} = [{'time': 0.022707611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.7919999999985214e-06, 'source_diff': 6.7919999999985214e-06}, {'time': 0.022891306, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:56.373" endtime="20201115 22:00:56.376"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:56.390" level="INFO">${OVERHEAD} = {'time': [0.022707611, 0.022891306, 0.023072194, 0.023254542, 0.023437292, 0.023621778, 0.023805722, 0.023993028, 0.024178153, 0.024365028, 0.024550958, 0.024733944, 0.024914819, 0.025102417, 0.025286...</msg>
<status status="PASS" starttime="20201115 22:00:56.377" endtime="20201115 22:00:56.390"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:56.394" level="INFO">NAME: 00-overhead-17-set</msg>
<status status="PASS" starttime="20201115 22:00:56.393" endtime="20201115 22:00:56.395"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:56.397" level="INFO">VALUE: [6.7919999999985214e-06, 6.749999999999812e-06, 6.776999999999478e-06, 6.7779999999989515e-06, 6.7779999999989515e-06, 6.7779999999989515e-06, 6.778000000002421e-06, 6.7779999999989515e-06, 6.763999999999382e-06, 6.7779999999989515e-06, 6.776999999999478e-06, 6.749999999999812e-06, 6.791000000002517e-06, 6.7919999999985214e-06, 6.763999999999382e-06, 6.7779999999989515e-06, 6.763999999999382e-06, 6.763999999999382e-06, 6.764000000002851e-06, 6.7779999999989515e-06, 6.749999999999812e-06, 6.792000000001991e-06, 6.776999999999478e-06, 6.749999999999812e-06, 6.806000000001561e-06, 6.722000000000672e-06, 6.7369999999997154e-06, 6.778000000002421e-06, 6.736000000000242e-06, 6.790999999999048e-06, 6.7919999999985214e-06, 6.776999999999478e-06, 6.861000000000367e-06, 6.7779999999989515e-06, 6.7779999999989515e-06, 6.7779999999989515e-06, 6.749999999999812e-06, 6.763999999999382e-06, 6.792000000001991e-06, 6.7779999999989515e-06, 6.763999999999382e-06, 6.763000000003377e-06, 6.764000000002851e-06, 6.708000000001102e-06, 6.7230000000001455e-06, 6.763999999999382e-06, 6.763999999999382e-06, 6.7779999999989515e-06, 6.805000000005557e-06, 6.7780000000058904e-06]</msg>
<status status="PASS" starttime="20201115 22:00:56.396" endtime="20201115 22:00:56.397"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.391" endtime="20201115 22:00:56.398"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:56.400" endtime="20201115 22:00:56.401"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:56.403" endtime="20201115 22:00:56.423"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.402" endtime="20201115 22:00:56.423"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.398" endtime="20201115 22:00:56.424"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.028" endtime="20201115 22:00:56.424"></status>
</kw>
<msg timestamp="20201115 22:00:56.424" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:56.433" endtime="20201115 22:00:56.451"></status>
</kw>
<msg timestamp="20201115 22:00:56.451" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:56.432" endtime="20201115 22:00:56.451"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:56.454" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:56.452" endtime="20201115 22:00:56.454"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:56.455" endtime="20201115 22:00:56.457"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.429" endtime="20201115 22:00:56.458"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.427" endtime="20201115 22:00:56.458"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:56.465" endtime="20201115 22:00:56.752"></status>
</kw>
<msg timestamp="20201115 22:00:56.755" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020066819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020073625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:56.463" endtime="20201115 22:00:56.755"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:56.763" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020066819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020073625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:56.756" endtime="20201115 22:00:56.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:56.765" endtime="20201115 22:00:56.766"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.460" endtime="20201115 22:00:56.767"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.459" endtime="20201115 22:00:56.767"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:56.771" level="INFO">${RESULT} = [{'time': 0.020073625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.806000000001561e-06, 'source_diff': 6.806000000001561e-06}, {'time': 0.020258556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:56.768" endtime="20201115 22:00:56.772"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:56.785" level="INFO">${OVERHEAD} = {'time': [0.020073625, 0.020258556, 0.020444736, 0.020629222, 0.020816264, 0.021002194, 0.021188514, 0.021369153, 0.021552917, 0.02173575, 0.021918097, 0.022105236, 0.022288542, 0.022475097, 0.0226593...</msg>
<status status="PASS" starttime="20201115 22:00:56.772" endtime="20201115 22:00:56.785"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:56.789" level="INFO">NAME: 00-overhead-17-set</msg>
<status status="PASS" starttime="20201115 22:00:56.788" endtime="20201115 22:00:56.790"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:56.792" level="INFO">VALUE: [6.806000000001561e-06, 6.7779999999989515e-06, 6.750000000003281e-06, 6.7779999999989515e-06, 6.749999999999812e-06, 6.776999999999478e-06, 6.763999999999382e-06, 6.7919999999985214e-06, 6.778000000002421e-06, 6.750000000003281e-06, 6.763999999999382e-06, 6.7779999999989515e-06, 6.792000000001991e-06, 6.7779999999989515e-06, 6.7779999999989515e-06, 6.763999999999382e-06, 6.7779999999989515e-06, 6.763999999999382e-06, 6.763999999999382e-06, 6.861000000000367e-06, 6.778000000002421e-06, 6.750000000003281e-06, 6.7919999999985214e-06, 6.776999999999478e-06, 6.7779999999989515e-06, 6.833000000001227e-06, 6.709000000000576e-06, 6.777000000002947e-06, 6.7919999999985214e-06, 6.792000000001991e-06, 6.804999999998618e-06, 6.792000000001991e-06, 6.762999999999908e-06, 6.7779999999989515e-06, 6.763999999999382e-06, 6.820000000001131e-06, 6.736000000000242e-06, 6.763999999999382e-06, 6.778000000002421e-06, 6.776999999999478e-06, 6.8329999999977575e-06, 6.847000000000797e-06, 6.763999999999382e-06, 6.7919999999985214e-06, 6.777000000002947e-06, 6.778000000002421e-06, 6.778000000002421e-06, 6.7779999999989515e-06, 6.764000000002851e-06, 6.7779999999989515e-06]</msg>
<status status="PASS" starttime="20201115 22:00:56.791" endtime="20201115 22:00:56.792"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.786" endtime="20201115 22:00:56.793"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:56.795" endtime="20201115 22:00:56.797"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:56.799" endtime="20201115 22:00:56.818"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.797" endtime="20201115 22:00:56.819"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.793" endtime="20201115 22:00:56.819"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.425" endtime="20201115 22:00:56.820"></status>
</kw>
<msg timestamp="20201115 22:00:56.820" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:56.829" endtime="20201115 22:00:56.847"></status>
</kw>
<msg timestamp="20201115 22:00:56.848" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:56.827" endtime="20201115 22:00:56.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:56.850" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:56.849" endtime="20201115 22:00:56.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:56.851" endtime="20201115 22:00:56.853"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.824" endtime="20201115 22:00:56.854"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.822" endtime="20201115 22:00:56.854"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:56.861" endtime="20201115 22:00:57.149"></status>
</kw>
<msg timestamp="20201115 22:00:57.152" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020636569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020643389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:56.859" endtime="20201115 22:00:57.152"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:57.160" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020636569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020643389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:57.153" endtime="20201115 22:00:57.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:57.162" endtime="20201115 22:00:57.163"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.856" endtime="20201115 22:00:57.164"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.855" endtime="20201115 22:00:57.164"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:57.168" level="INFO">${RESULT} = [{'time': 0.020643389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.820000000001131e-06, 'source_diff': 6.820000000001131e-06}, {'time': 0.020830389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:57.165" endtime="20201115 22:00:57.169"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:57.182" level="INFO">${OVERHEAD} = {'time': [0.020643389, 0.020830389, 0.021014333, 0.021197569, 0.021379222, 0.021560611, 0.021746944, 0.021928361, 0.0221135, 0.022298472, 0.022480028, 0.022666833, 0.022848236, 0.023035361, 0.02322081...</msg>
<status status="PASS" starttime="20201115 22:00:57.169" endtime="20201115 22:00:57.182"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:57.186" level="INFO">NAME: 00-overhead-17-set</msg>
<status status="PASS" starttime="20201115 22:00:57.185" endtime="20201115 22:00:57.187"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:57.189" level="INFO">VALUE: [6.820000000001131e-06, 6.764000000002851e-06, 6.749999999999812e-06, 6.749999999999812e-06, 6.7779999999989515e-06, 6.763999999999382e-06, 6.776999999999478e-06, 6.792000000001991e-06, 6.749999999999812e-06, 6.790999999999048e-06, 6.763999999999382e-06, 6.763999999999382e-06, 6.778000000002421e-06, 6.778000000002421e-06, 6.790999999999048e-06, 6.778000000002421e-06, 6.7779999999989515e-06, 6.763999999999382e-06, 6.778000000002421e-06, 6.749999999999812e-06, 6.792000000001991e-06, 6.749999999999812e-06, 6.791000000002517e-06, 6.763999999999382e-06, 6.762999999999908e-06, 6.776999999999478e-06, 6.806000000001561e-06, 6.778000000002421e-06, 6.776999999999478e-06, 6.749999999999812e-06, 6.7779999999989515e-06, 6.763999999999382e-06, 6.818999999998188e-06, 6.778000000002421e-06, 6.805999999998091e-06, 6.764000000002851e-06, 6.804999999998618e-06, 6.764000000002851e-06, 6.778000000002421e-06, 6.7779999999989515e-06, 6.8469999999973274e-06, 6.7779999999989515e-06, 6.791000000002517e-06, 6.722999999996676e-06, 6.790999999999048e-06, 6.7779999999989515e-06, 6.818999999998188e-06, 6.763999999999382e-06, 6.778000000002421e-06, 6.764000000002851e-06]</msg>
<status status="PASS" starttime="20201115 22:00:57.187" endtime="20201115 22:00:57.189"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.183" endtime="20201115 22:00:57.190"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:57.192" endtime="20201115 22:00:57.193"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:57.196" endtime="20201115 22:00:57.215"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.194" endtime="20201115 22:00:57.216"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.190" endtime="20201115 22:00:57.216"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.820" endtime="20201115 22:00:57.216"></status>
</kw>
<msg timestamp="20201115 22:00:57.217" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:57.226" endtime="20201115 22:00:57.245"></status>
</kw>
<msg timestamp="20201115 22:00:57.246" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:57.224" endtime="20201115 22:00:57.246"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:57.248" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:57.247" endtime="20201115 22:00:57.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:57.249" endtime="20201115 22:00:57.251"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.222" endtime="20201115 22:00:57.252"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.220" endtime="20201115 22:00:57.252"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:57.259" endtime="20201115 22:00:57.546"></status>
</kw>
<msg timestamp="20201115 22:00:57.549" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02040725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020414014, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:00:57.257" endtime="20201115 22:00:57.549"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:57.557" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02040725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020414014, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:00:57.550" endtime="20201115 22:00:57.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:57.558" endtime="20201115 22:00:57.560"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.254" endtime="20201115 22:00:57.560"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.253" endtime="20201115 22:00:57.561"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:57.565" level="INFO">${RESULT} = [{'time': 0.020414014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.764000000002851e-06, 'source_diff': 6.764000000002851e-06}, {'time': 0.020597556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:57.561" endtime="20201115 22:00:57.565"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:57.578" level="INFO">${OVERHEAD} = {'time': [0.020414014, 0.020597556, 0.020785569, 0.020969583, 0.021154972, 0.021342597, 0.021523236, 0.021704639, 0.021891375, 0.022077944, 0.022260778, 0.022447819, 0.022633431, 0.022814833, 0.022996...</msg>
<status status="PASS" starttime="20201115 22:00:57.566" endtime="20201115 22:00:57.578"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:57.583" level="INFO">NAME: 00-overhead-17-set</msg>
<status status="PASS" starttime="20201115 22:00:57.582" endtime="20201115 22:00:57.583"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:57.585" level="INFO">VALUE: [6.764000000002851e-06, 6.7369999999997154e-06, 6.762999999999908e-06, 6.776999999999478e-06, 6.791000000002517e-06, 6.819000000001657e-06, 6.778000000002421e-06, 6.847000000000797e-06, 6.763999999999382e-06, 6.776999999999478e-06, 6.7779999999989515e-06, 6.762999999999908e-06, 6.709000000000576e-06, 6.722000000000672e-06, 6.7779999999989515e-06, 6.7919999999985214e-06, 6.750000000003281e-06, 6.7779999999989515e-06, 6.749999999999812e-06, 6.749999999999812e-06, 6.749999999999812e-06, 6.736000000000242e-06, 6.763999999999382e-06, 6.7779999999989515e-06, 6.7779999999989515e-06, 6.8469999999973274e-06, 6.7779999999989515e-06, 6.764000000002851e-06, 6.749999999999812e-06, 6.8480000000002705e-06, 6.7779999999989515e-06, 6.792000000001991e-06, 6.749999999999812e-06, 6.7779999999989515e-06, 6.806000000001561e-06, 6.7779999999989515e-06, 6.7919999999985214e-06, 6.7369999999997154e-06, 6.778000000002421e-06, 6.806000000001561e-06, 6.790999999999048e-06, 6.764000000002851e-06, 6.763999999999382e-06, 6.7919999999985214e-06, 6.7779999999989515e-06, 6.762999999999908e-06, 6.778000000002421e-06, 6.7919999999985214e-06, 6.722000000000672e-06, 6.8329999999977575e-06]</msg>
<status status="PASS" starttime="20201115 22:00:57.584" endtime="20201115 22:00:57.586"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.579" endtime="20201115 22:00:57.586"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:57.589" endtime="20201115 22:00:57.590"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:57.593" endtime="20201115 22:00:57.612"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.591" endtime="20201115 22:00:57.613"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.587" endtime="20201115 22:00:57.613"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.217" endtime="20201115 22:00:57.613"></status>
</kw>
<msg timestamp="20201115 22:00:57.614" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:57.623" endtime="20201115 22:00:57.642"></status>
</kw>
<msg timestamp="20201115 22:00:57.643" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:57.621" endtime="20201115 22:00:57.643"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:57.645" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:57.644" endtime="20201115 22:00:57.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:57.646" endtime="20201115 22:00:57.648"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.618" endtime="20201115 22:00:57.648"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.616" endtime="20201115 22:00:57.649"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:57.656" endtime="20201115 22:00:57.943"></status>
</kw>
<msg timestamp="20201115 22:00:57.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020018958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020025792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:57.654" endtime="20201115 22:00:57.947"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:57.954" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020018958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020025792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:57.947" endtime="20201115 22:00:57.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:57.956" endtime="20201115 22:00:57.957"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.651" endtime="20201115 22:00:57.958"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.650" endtime="20201115 22:00:57.958"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:57.962" level="INFO">${RESULT} = [{'time': 0.020025792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.834000000000701e-06, 'source_diff': 6.834000000000701e-06}, {'time': 0.020211694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:57.959" endtime="20201115 22:00:57.963"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:57.976" level="INFO">${OVERHEAD} = {'time': [0.020025792, 0.020211694, 0.020397111, 0.020577722, 0.020761931, 0.020943556, 0.021125597, 0.021310986, 0.021496917, 0.0216785, 0.021859167, 0.022041917, 0.022226889, 0.022408472, 0.02258986...</msg>
<status status="PASS" starttime="20201115 22:00:57.963" endtime="20201115 22:00:57.976"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:57.980" level="INFO">NAME: 00-overhead-17-set</msg>
<status status="PASS" starttime="20201115 22:00:57.979" endtime="20201115 22:00:57.981"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:57.983" level="INFO">VALUE: [6.834000000000701e-06, 6.804999999998618e-06, 6.7079999999976325e-06, 6.763999999999382e-06, 6.792000000001991e-06, 6.7779999999989515e-06, 6.763999999999382e-06, 6.7779999999989515e-06, 6.778000000002421e-06, 6.806000000001561e-06, 6.7779999999989515e-06, 6.764000000002851e-06, 6.749999999999812e-06, 6.763999999999382e-06, 6.736000000000242e-06, 6.8329999999977575e-06, 6.778000000002421e-06, 6.763999999999382e-06, 6.776999999999478e-06, 6.749999999999812e-06, 6.763999999999382e-06, 6.7779999999989515e-06, 6.7919999999985214e-06, 6.804999999998618e-06, 6.763999999999382e-06, 6.791000000002517e-06, 6.805000000002087e-06, 6.792000000001991e-06, 6.763999999999382e-06, 6.764000000002851e-06, 6.763999999999382e-06, 6.764000000002851e-06, 6.7779999999989515e-06, 6.776999999999478e-06, 6.7779999999989515e-06, 6.709000000000576e-06, 6.778000000002421e-06, 6.776999999999478e-06, 6.7779999999989515e-06, 6.778000000002421e-06, 6.749999999999812e-06, 6.778000000002421e-06, 6.778000000002421e-06, 6.749999999999812e-06, 6.7779999999989515e-06, 6.7779999999989515e-06, 6.792000000001991e-06, 6.749999999999812e-06, 6.7919999999985214e-06, 6.7919999999985214e-06]</msg>
<status status="PASS" starttime="20201115 22:00:57.982" endtime="20201115 22:00:57.984"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.977" endtime="20201115 22:00:57.984"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:57.987" endtime="20201115 22:00:57.988"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:57.990" endtime="20201115 22:00:58.010"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.989" endtime="20201115 22:00:58.010"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.985" endtime="20201115 22:00:58.011"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.614" endtime="20201115 22:00:58.011"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.026" endtime="20201115 22:00:58.011"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.025" endtime="20201115 22:00:58.012"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:58.014" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:58.024" endtime="20201115 22:00:58.044"></status>
</kw>
<msg timestamp="20201115 22:00:58.045" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:58.022" endtime="20201115 22:00:58.045"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:58.048" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:58.046" endtime="20201115 22:00:58.048"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:58.049" endtime="20201115 22:00:58.050"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.019" endtime="20201115 22:00:58.051"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.017" endtime="20201115 22:00:58.051"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:58.058" endtime="20201115 22:00:58.345"></status>
</kw>
<msg timestamp="20201115 22:00:58.348" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024059903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024066944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:58.056" endtime="20201115 22:00:58.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:58.356" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024059903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024066944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:58.349" endtime="20201115 22:00:58.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:58.357" endtime="20201115 22:00:58.359"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.053" endtime="20201115 22:00:58.360"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.052" endtime="20201115 22:00:58.360"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:58.364" level="INFO">${RESULT} = [{'time': 0.024066944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.040999999999298e-06, 'source_diff': 7.040999999999298e-06}, {'time': 0.024258319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:58.361" endtime="20201115 22:00:58.364"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:58.378" level="INFO">${OVERHEAD} = {'time': [0.024066944, 0.024258319, 0.024455278, 0.024653389, 0.024849542, 0.025042611, 0.025237444, 0.025428903, 0.025621681, 0.025817139, 0.026011472, 0.026207181, 0.026405722, 0.026600917, 0.026799...</msg>
<status status="PASS" starttime="20201115 22:00:58.365" endtime="20201115 22:00:58.378"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:58.382" level="INFO">NAME: 00-overhead-18-set</msg>
<status status="PASS" starttime="20201115 22:00:58.381" endtime="20201115 22:00:58.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:58.385" level="INFO">VALUE: [7.040999999999298e-06, 7.013000000000158e-06, 7.000000000000062e-06, 7.000000000000062e-06, 7.0279999999992016e-06, 7.0279999999992016e-06, 7.055000000002337e-06, 7.084000000000951e-06, 7.0419999999987715e-06, 7.055999999998341e-06, 7.069000000001907e-06, 7.013999999999632e-06, 7.040999999999298e-06, 7.028000000002671e-06, 7.054999999998868e-06, 7.0279999999992016e-06, 7.042000000002241e-06, 7.055999999998341e-06, 7.040999999999298e-06, 7.0419999999987715e-06, 7.0279999999992016e-06, 7.013999999999632e-06, 7.0419999999987715e-06, 7.054999999998868e-06, 7.0419999999987715e-06, 7.0419999999987715e-06, 7.0419999999987715e-06, 7.042000000002241e-06, 7.042000000002241e-06, 7.0279999999992016e-06, 7.013999999999632e-06, 7.040999999999298e-06, 7.028000000002671e-06, 7.041000000002767e-06, 7.056000000001811e-06, 7.055999999998341e-06, 7.0419999999987715e-06, 7.0830000000049465e-06, 7.0280000000061404e-06, 7.013999999999632e-06, 7.0279999999992016e-06, 7.04200000000571e-06, 7.013999999999632e-06, 7.040999999999298e-06, 7.055999999998341e-06, 7.040999999999298e-06, 7.0279999999992016e-06, 7.0279999999992016e-06, 7.0279999999992016e-06, 7.026999999999728e-06]</msg>
<status status="PASS" starttime="20201115 22:00:58.383" endtime="20201115 22:00:58.386"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.378" endtime="20201115 22:00:58.386"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:58.388" endtime="20201115 22:00:58.390"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:58.392" endtime="20201115 22:00:58.412"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.391" endtime="20201115 22:00:58.412"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.387" endtime="20201115 22:00:58.413"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.014" endtime="20201115 22:00:58.413"></status>
</kw>
<msg timestamp="20201115 22:00:58.413" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:58.422" endtime="20201115 22:00:58.441"></status>
</kw>
<msg timestamp="20201115 22:00:58.442" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:58.421" endtime="20201115 22:00:58.442"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:58.444" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:58.443" endtime="20201115 22:00:58.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:58.445" endtime="20201115 22:00:58.447"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.418" endtime="20201115 22:00:58.447"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.416" endtime="20201115 22:00:58.448"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:58.455" endtime="20201115 22:00:58.743"></status>
</kw>
<msg timestamp="20201115 22:00:58.746" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020182625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020189653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:58.453" endtime="20201115 22:00:58.747"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:58.754" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020182625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020189653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:58.748" endtime="20201115 22:00:58.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:58.756" endtime="20201115 22:00:58.757"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.450" endtime="20201115 22:00:58.758"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.448" endtime="20201115 22:00:58.758"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:58.763" level="INFO">${RESULT} = [{'time': 0.020189653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.0279999999992016e-06, 'source_diff': 7.0279999999992016e-06}, {'time': 0.020386778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:58.759" endtime="20201115 22:00:58.763"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:58.820" level="INFO">${OVERHEAD} = {'time': [0.020189653, 0.020386778, 0.020581319, 0.020775083, 0.020968472, 0.021160083, 0.021355764, 0.021549889, 0.021741708, 0.021937458, 0.022131472, 0.022325833, 0.02252075, 0.022714847, 0.0229074...</msg>
<status status="PASS" starttime="20201115 22:00:58.764" endtime="20201115 22:00:58.820"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:58.825" level="INFO">NAME: 00-overhead-18-set</msg>
<status status="PASS" starttime="20201115 22:00:58.824" endtime="20201115 22:00:58.825"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:58.827" level="INFO">VALUE: [7.0279999999992016e-06, 7.056000000001811e-06, 7.026999999999728e-06, 7.026999999999728e-06, 7.040999999999298e-06, 6.972000000000922e-06, 7.0279999999992016e-06, 7.0829999999980076e-06, 7.026999999999728e-06, 7.040999999999298e-06, 7.0279999999992016e-06, 7.083000000001477e-06, 7.0419999999987715e-06, 7.040999999999298e-06, 7.042000000002241e-06, 7.026999999999728e-06, 7.0419999999987715e-06, 7.0279999999992016e-06, 7.0279999999992016e-06, 7.083000000001477e-06, 7.041000000002767e-06, 7.0279999999992016e-06, 7.026999999999728e-06, 7.0279999999992016e-06, 7.0279999999992016e-06, 7.0279999999992016e-06, 7.0419999999987715e-06, 7.000000000000062e-06, 7.0279999999992016e-06, 7.055999999998341e-06, 7.0279999999992016e-06, 7.055000000002337e-06, 7.055000000002337e-06, 7.042000000002241e-06, 7.040999999999298e-06, 7.042000000002241e-06, 7.0279999999992016e-06, 7.0279999999992016e-06, 7.040999999999298e-06, 7.040999999999298e-06, 7.0419999999987715e-06, 7.040999999999298e-06, 7.013999999999632e-06, 7.055999999998341e-06, 7.0279999999992016e-06, 7.040999999999298e-06, 7.0419999999987715e-06, 7.0419999999987715e-06, 7.0419999999987715e-06, 7.0419999999987715e-06]</msg>
<status status="PASS" starttime="20201115 22:00:58.826" endtime="20201115 22:00:58.828"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.821" endtime="20201115 22:00:58.828"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:58.830" endtime="20201115 22:00:58.832"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:58.834" endtime="20201115 22:00:58.853"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.832" endtime="20201115 22:00:58.854"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.829" endtime="20201115 22:00:58.854"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.414" endtime="20201115 22:00:58.854"></status>
</kw>
<msg timestamp="20201115 22:00:58.855" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:58.865" endtime="20201115 22:00:58.884"></status>
</kw>
<msg timestamp="20201115 22:00:58.885" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:58.863" endtime="20201115 22:00:58.885"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:58.887" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:58.886" endtime="20201115 22:00:58.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:58.888" endtime="20201115 22:00:58.890"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.859" endtime="20201115 22:00:58.891"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.857" endtime="20201115 22:00:58.891"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:58.898" endtime="20201115 22:00:59.183"></status>
</kw>
<msg timestamp="20201115 22:00:59.186" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021270486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0212775, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:00:58.896" endtime="20201115 22:00:59.187"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:59.195" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021270486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0212775, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:00:59.188" endtime="20201115 22:00:59.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:59.196" endtime="20201115 22:00:59.198"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.893" endtime="20201115 22:00:59.198"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.892" endtime="20201115 22:00:59.199"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:59.203" level="INFO">${RESULT} = [{'time': 0.0212775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.013999999999632e-06, 'source_diff': 7.013999999999632e-06}, {'time': 0.021475431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:00:59.199" endtime="20201115 22:00:59.203"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:59.217" level="INFO">${OVERHEAD} = {'time': [0.0212775, 0.021475431, 0.021671778, 0.021864431, 0.022056181, 0.022254667, 0.022451778, 0.022647042, 0.022841542, 0.023037931, 0.023233431, 0.023432264, 0.023629889, 0.023826056, 0.02402479...</msg>
<status status="PASS" starttime="20201115 22:00:59.204" endtime="20201115 22:00:59.217"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:59.221" level="INFO">NAME: 00-overhead-18-set</msg>
<status status="PASS" starttime="20201115 22:00:59.220" endtime="20201115 22:00:59.222"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:59.224" level="INFO">VALUE: [7.013999999999632e-06, 7.084000000000951e-06, 7.0419999999987715e-06, 7.0279999999992016e-06, 7.084000000000951e-06, 7.0279999999992016e-06, 7.013999999999632e-06, 7.0279999999992016e-06, 7.0279999999992016e-06, 7.000000000000062e-06, 7.013999999999632e-06, 7.097000000001047e-06, 7.070000000001381e-06, 7.084000000000951e-06, 7.0279999999992016e-06, 7.0969999999975775e-06, 7.000000000000062e-06, 7.000000000000062e-06, 7.0419999999987715e-06, 7.0279999999992016e-06, 7.000000000000062e-06, 7.0279999999992016e-06, 7.0279999999992016e-06, 7.013999999999632e-06, 7.0419999999987715e-06, 7.0279999999992016e-06, 7.0279999999992016e-06, 7.0419999999987715e-06, 7.013999999999632e-06, 7.0419999999987715e-06, 7.0279999999992016e-06, 7.013999999999632e-06, 7.0279999999992016e-06, 7.041000000002767e-06, 7.013999999999632e-06, 7.040999999999298e-06, 7.0279999999992016e-06, 7.0419999999987715e-06, 7.0419999999987715e-06, 6.9719999999974525e-06, 7.041000000002767e-06, 7.000000000000062e-06, 7.013999999999632e-06, 7.069999999997911e-06, 7.055000000002337e-06, 7.0279999999992016e-06, 7.040999999999298e-06, 7.0419999999987715e-06, 7.013999999999632e-06, 7.042000000002241e-06]</msg>
<status status="PASS" starttime="20201115 22:00:59.222" endtime="20201115 22:00:59.224"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.218" endtime="20201115 22:00:59.225"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:59.227" endtime="20201115 22:00:59.228"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:59.230" endtime="20201115 22:00:59.250"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.229" endtime="20201115 22:00:59.250"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.225" endtime="20201115 22:00:59.251"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.855" endtime="20201115 22:00:59.251"></status>
</kw>
<msg timestamp="20201115 22:00:59.251" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:59.261" endtime="20201115 22:00:59.281"></status>
</kw>
<msg timestamp="20201115 22:00:59.282" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:59.259" endtime="20201115 22:00:59.282"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:59.284" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:59.283" endtime="20201115 22:00:59.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:59.285" endtime="20201115 22:00:59.287"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.256" endtime="20201115 22:00:59.287"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.254" endtime="20201115 22:00:59.288"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:59.294" endtime="20201115 22:00:59.581"></status>
</kw>
<msg timestamp="20201115 22:00:59.584" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020896014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020903056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:59.293" endtime="20201115 22:00:59.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:59.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020896014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020903056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:59.586" endtime="20201115 22:00:59.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:59.594" endtime="20201115 22:00:59.596"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.290" endtime="20201115 22:00:59.596"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.288" endtime="20201115 22:00:59.597"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:59.601" level="INFO">${RESULT} = [{'time': 0.020903056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.0419999999987715e-06, 'source_diff': 7.0419999999987715e-06}, {'time': 0.021100222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:59.598" endtime="20201115 22:00:59.601"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:59.615" level="INFO">${OVERHEAD} = {'time': [0.020903056, 0.021100222, 0.021295667, 0.021488, 0.021685819, 0.021880306, 0.022075514, 0.022272611, 0.022470986, 0.022669514, 0.022862653, 0.023059819, 0.0232555, 0.023447444, 0.023641208, ...</msg>
<status status="PASS" starttime="20201115 22:00:59.602" endtime="20201115 22:00:59.615"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:59.619" level="INFO">NAME: 00-overhead-18-set</msg>
<status status="PASS" starttime="20201115 22:00:59.618" endtime="20201115 22:00:59.620"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:59.622" level="INFO">VALUE: [7.0419999999987715e-06, 7.040999999999298e-06, 7.042000000002241e-06, 7.0419999999987715e-06, 7.026999999999728e-06, 7.013999999999632e-06, 7.042000000002241e-06, 7.028000000002671e-06, 7.013999999999632e-06, 7.028000000002671e-06, 7.0419999999987715e-06, 7.026999999999728e-06, 7.0419999999987715e-06, 7.013000000000158e-06, 7.026999999999728e-06, 7.068999999998438e-06, 7.0980000000005206e-06, 7.040999999999298e-06, 7.083000000001477e-06, 7.0279999999992016e-06, 7.054999999998868e-06, 7.054999999998868e-06, 7.0279999999992016e-06, 7.0279999999992016e-06, 7.028000000002671e-06, 7.055999999998341e-06, 7.0279999999992016e-06, 7.0419999999987715e-06, 7.056000000001811e-06, 7.0419999999987715e-06, 7.000000000000062e-06, 7.026999999999728e-06, 7.0419999999987715e-06, 7.042000000002241e-06, 7.054999999998868e-06, 7.054999999998868e-06, 7.026999999999728e-06, 7.013999999999632e-06, 7.0279999999992016e-06, 7.0279999999992016e-06, 7.0419999999987715e-06, 7.026999999999728e-06, 7.055000000002337e-06, 7.040999999999298e-06, 7.026999999999728e-06, 7.068999999998438e-06, 7.040999999999298e-06, 7.013999999999632e-06, 7.054999999998868e-06, 7.0279999999992016e-06]</msg>
<status status="PASS" starttime="20201115 22:00:59.620" endtime="20201115 22:00:59.622"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.616" endtime="20201115 22:00:59.623"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:59.625" endtime="20201115 22:00:59.626"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:59.628" endtime="20201115 22:00:59.648"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.627" endtime="20201115 22:00:59.648"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.623" endtime="20201115 22:00:59.649"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.252" endtime="20201115 22:00:59.649"></status>
</kw>
<msg timestamp="20201115 22:00:59.649" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:59.658" endtime="20201115 22:00:59.678"></status>
</kw>
<msg timestamp="20201115 22:00:59.678" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:59.657" endtime="20201115 22:00:59.678"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:59.681" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:59.679" endtime="20201115 22:00:59.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:59.682" endtime="20201115 22:00:59.684"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.654" endtime="20201115 22:00:59.685"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.652" endtime="20201115 22:00:59.686"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:59.693" endtime="20201115 22:00:59.979"></status>
</kw>
<msg timestamp="20201115 22:00:59.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020822806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020829833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:59.691" endtime="20201115 22:00:59.982"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:59.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020822806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020829833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:59.983" endtime="20201115 22:00:59.991"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:59.992" endtime="20201115 22:00:59.994"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.688" endtime="20201115 22:00:59.994"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.686" endtime="20201115 22:00:59.995"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:59.999" level="INFO">${RESULT} = [{'time': 0.020829833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.026999999999728e-06, 'source_diff': 7.026999999999728e-06}, {'time': 0.021028611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:59.995" endtime="20201115 22:00:59.999"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:00.012" level="INFO">${OVERHEAD} = {'time': [0.020829833, 0.021028611, 0.021223889, 0.021417014, 0.021609681, 0.021801778, 0.022000139, 0.022192486, 0.022389139, 0.022585097, 0.022780333, 0.022971694, 0.023165056, 0.023357708, 0.023549...</msg>
<status status="PASS" starttime="20201115 22:01:00.000" endtime="20201115 22:01:00.013"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:00.017" level="INFO">NAME: 00-overhead-18-set</msg>
<status status="PASS" starttime="20201115 22:01:00.016" endtime="20201115 22:01:00.017"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:00.020" level="INFO">VALUE: [7.026999999999728e-06, 7.0419999999987715e-06, 7.0279999999992016e-06, 7.028000000002671e-06, 7.055999999998341e-06, 6.972000000000922e-06, 7.0419999999987715e-06, 7.042000000002241e-06, 7.069999999997911e-06, 7.040999999999298e-06, 7.026999999999728e-06, 7.040999999999298e-06, 7.0279999999992016e-06, 7.041000000002767e-06, 7.0279999999992016e-06, 7.042000000002241e-06, 7.0419999999987715e-06, 7.0279999999992016e-06, 7.068999999998438e-06, 7.0419999999987715e-06, 7.069000000001907e-06, 7.068999999998438e-06, 7.026999999999728e-06, 7.0279999999992016e-06, 7.0279999999992016e-06, 7.0279999999992016e-06, 7.083999999997481e-06, 7.0279999999992016e-06, 7.0419999999987715e-06, 7.056000000001811e-06, 7.070000000001381e-06, 7.0419999999987715e-06, 7.028000000002671e-06, 7.054999999998868e-06, 7.0419999999987715e-06, 7.026999999999728e-06, 7.0279999999992016e-06, 7.028000000002671e-06, 7.026999999999728e-06, 7.0279999999992016e-06, 7.0419999999987715e-06, 7.0279999999992016e-06, 7.0279999999992016e-06, 7.013999999999632e-06, 7.083000000001477e-06, 7.083000000001477e-06, 7.0419999999987715e-06, 7.0419999999987715e-06, 7.040999999999298e-06, 7.0279999999992016e-06]</msg>
<status status="PASS" starttime="20201115 22:01:00.018" endtime="20201115 22:01:00.020"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.013" endtime="20201115 22:01:00.020"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:00.023" endtime="20201115 22:01:00.024"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:00.026" endtime="20201115 22:01:00.046"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.025" endtime="20201115 22:01:00.046"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.021" endtime="20201115 22:01:00.047"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.650" endtime="20201115 22:01:00.047"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.013" endtime="20201115 22:01:00.047"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.012" endtime="20201115 22:01:00.047"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:00.050" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:00.059" endtime="20201115 22:01:00.080"></status>
</kw>
<msg timestamp="20201115 22:01:00.080" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:00.057" endtime="20201115 22:01:00.080"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:00.083" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:00.081" endtime="20201115 22:01:00.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:00.084" endtime="20201115 22:01:00.086"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.054" endtime="20201115 22:01:00.086"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.052" endtime="20201115 22:01:00.087"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:00.093" endtime="20201115 22:01:00.379"></status>
</kw>
<msg timestamp="20201115 22:01:00.382" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023307861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023315139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:00.092" endtime="20201115 22:01:00.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:00.390" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023307861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023315139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:00.383" endtime="20201115 22:01:00.391"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:00.392" endtime="20201115 22:01:00.393"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.089" endtime="20201115 22:01:00.394"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.087" endtime="20201115 22:01:00.394"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:00.399" level="INFO">${RESULT} = [{'time': 0.023315139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.2779999999994516e-06, 'source_diff': 7.2779999999994516e-06}, {'time': 0.023522111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:00.395" endtime="20201115 22:01:00.399"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:00.413" level="INFO">${OVERHEAD} = {'time': [0.023315139, 0.023522111, 0.023730944, 0.023935125, 0.024144778, 0.024353458, 0.024559222, 0.024765528, 0.024968903, 0.025173556, 0.025378194, 0.025586583, 0.025794556, 0.026001264, 0.026205...</msg>
<status status="PASS" starttime="20201115 22:01:00.400" endtime="20201115 22:01:00.413"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:00.418" level="INFO">NAME: 00-overhead-19-set</msg>
<status status="PASS" starttime="20201115 22:01:00.417" endtime="20201115 22:01:00.418"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:00.420" level="INFO">VALUE: [7.2779999999994516e-06, 7.318999999998688e-06, 7.290999999999548e-06, 7.292000000002491e-06, 7.319999999998161e-06, 7.291000000003017e-06, 7.304999999999118e-06, 7.305999999998591e-06, 7.306000000002061e-06, 7.2919999999990215e-06, 7.304999999999118e-06, 7.318999999998688e-06, 7.305999999998591e-06, 7.305999999998591e-06, 7.361000000000867e-06, 7.290999999999548e-06, 7.319999999998161e-06, 7.250000000000312e-06, 7.304999999999118e-06, 7.263999999999882e-06, 7.2779999999994516e-06, 7.292000000002491e-06, 7.235999999997272e-06, 7.306000000002061e-06, 7.3469999999978275e-06, 7.290999999999548e-06, 7.306000000002061e-06, 7.305999999998591e-06, 7.290999999999548e-06, 7.306000000002061e-06, 7.278000000002921e-06, 7.306000000002061e-06, 7.236000000000742e-06, 7.306000000002061e-06, 7.2779999999994516e-06, 7.306000000002061e-06, 7.334000000001201e-06, 7.250000000000312e-06, 7.361000000000867e-06, 7.304999999999118e-06, 7.3330000000051965e-06, 7.304999999999118e-06, 7.2779999999994516e-06, 7.304999999999118e-06, 7.290999999999548e-06, 7.304999999999118e-06, 7.2919999999990215e-06, 7.305999999998591e-06, 7.30600000000553e-06, 7.30600000000553e-06]</msg>
<status status="PASS" starttime="20201115 22:01:00.419" endtime="20201115 22:01:00.420"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.414" endtime="20201115 22:01:00.421"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:00.423" endtime="20201115 22:01:00.424"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:00.427" endtime="20201115 22:01:00.446"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.425" endtime="20201115 22:01:00.447"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.421" endtime="20201115 22:01:00.447"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.050" endtime="20201115 22:01:00.447"></status>
</kw>
<msg timestamp="20201115 22:01:00.448" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:00.457" endtime="20201115 22:01:00.477"></status>
</kw>
<msg timestamp="20201115 22:01:00.477" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:00.455" endtime="20201115 22:01:00.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:00.484" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:00.478" endtime="20201115 22:01:00.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:00.486" endtime="20201115 22:01:00.488"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.452" endtime="20201115 22:01:00.489"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.450" endtime="20201115 22:01:00.489"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:00.496" endtime="20201115 22:01:00.780"></status>
</kw>
<msg timestamp="20201115 22:01:00.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02102875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021036056, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:01:00.494" endtime="20201115 22:01:00.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:00.792" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02102875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021036056, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:01:00.785" endtime="20201115 22:01:00.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:00.793" endtime="20201115 22:01:00.795"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.491" endtime="20201115 22:01:00.795"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.490" endtime="20201115 22:01:00.796"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:00.800" level="INFO">${RESULT} = [{'time': 0.021036056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.306000000002061e-06, 'source_diff': 7.306000000002061e-06}, {'time': 0.021242375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:00.797" endtime="20201115 22:01:00.800"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:00.813" level="INFO">${OVERHEAD} = {'time': [0.021036056, 0.021242375, 0.021451306, 0.021654208, 0.021862889, 0.022065542, 0.022270625, 0.022473333, 0.022677528, 0.022880417, 0.023083153, 0.023285889, 0.023493139, 0.023698181, 0.023901...</msg>
<status status="PASS" starttime="20201115 22:01:00.801" endtime="20201115 22:01:00.814"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:00.818" level="INFO">NAME: 00-overhead-19-set</msg>
<status status="PASS" starttime="20201115 22:01:00.817" endtime="20201115 22:01:00.818"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:00.821" level="INFO">VALUE: [7.306000000002061e-06, 7.306000000002061e-06, 7.319999999998161e-06, 7.319000000002157e-06, 7.361000000000867e-06, 7.2919999999990215e-06, 7.332999999998258e-06, 7.305000000002587e-06, 7.319999999998161e-06, 7.320000000001631e-06, 7.319999999998161e-06, 7.320000000001631e-06, 7.305999999998591e-06, 7.2919999999990215e-06, 7.306000000002061e-06, 7.2779999999994516e-06, 7.2219999999977025e-06, 7.276999999999978e-06, 7.292000000002491e-06, 7.2779999999994516e-06, 7.304999999999118e-06, 7.235999999997272e-06, 7.306000000002061e-06, 7.305999999998591e-06, 7.318999999998688e-06, 7.2079999999981326e-06, 7.305000000002587e-06, 7.305999999998591e-06, 7.2919999999990215e-06, 7.263999999999882e-06, 7.2919999999990215e-06, 7.319999999998161e-06, 7.375000000000437e-06, 7.305999999998591e-06, 7.290999999999548e-06, 7.360999999997397e-06, 7.319999999998161e-06, 7.292000000002491e-06, 7.2779999999994516e-06, 7.250000000000312e-06, 7.305999999998591e-06, 7.306000000002061e-06, 7.263999999999882e-06, 7.305999999998591e-06, 7.319999999998161e-06, 7.304999999999118e-06, 7.306000000002061e-06, 7.305000000002587e-06, 7.306000000002061e-06, 7.236000000000742e-06]</msg>
<status status="PASS" starttime="20201115 22:01:00.819" endtime="20201115 22:01:00.821"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.814" endtime="20201115 22:01:00.821"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:00.824" endtime="20201115 22:01:00.825"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:00.827" endtime="20201115 22:01:00.847"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.826" endtime="20201115 22:01:00.847"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.822" endtime="20201115 22:01:00.848"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.448" endtime="20201115 22:01:00.848"></status>
</kw>
<msg timestamp="20201115 22:01:00.848" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:00.858" endtime="20201115 22:01:00.879"></status>
</kw>
<msg timestamp="20201115 22:01:00.879" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:00.856" endtime="20201115 22:01:00.880"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:00.882" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:00.880" endtime="20201115 22:01:00.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:00.883" endtime="20201115 22:01:00.885"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.853" endtime="20201115 22:01:00.886"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.851" endtime="20201115 22:01:00.886"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:00.893" endtime="20201115 22:01:01.179"></status>
</kw>
<msg timestamp="20201115 22:01:01.182" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020784083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020791403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:00.891" endtime="20201115 22:01:01.182"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:01.190" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020784083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020791403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:01.183" endtime="20201115 22:01:01.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:01.192" endtime="20201115 22:01:01.193"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.889" endtime="20201115 22:01:01.194"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.887" endtime="20201115 22:01:01.194"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:01.199" level="INFO">${RESULT} = [{'time': 0.020791403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.320000000001631e-06, 'source_diff': 7.320000000001631e-06}, {'time': 0.020996431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:01.195" endtime="20201115 22:01:01.199"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:01.212" level="INFO">${OVERHEAD} = {'time': [0.020791403, 0.020996431, 0.021203639, 0.021409722, 0.021619569, 0.021827319, 0.022037139, 0.022245097, 0.022450153, 0.022660028, 0.022867056, 0.023075903, 0.023285792, 0.023488236, 0.023698...</msg>
<status status="PASS" starttime="20201115 22:01:01.200" endtime="20201115 22:01:01.212"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:01.217" level="INFO">NAME: 00-overhead-19-set</msg>
<status status="PASS" starttime="20201115 22:01:01.216" endtime="20201115 22:01:01.217"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:01.219" level="INFO">VALUE: [7.320000000001631e-06, 7.2779999999994516e-06, 7.305999999998591e-06, 7.304999999999118e-06, 7.291000000003017e-06, 7.305000000002587e-06, 7.320000000001631e-06, 7.290999999999548e-06, 7.306000000002061e-06, 7.263999999999882e-06, 7.2370000000002155e-06, 7.2779999999994516e-06, 7.305999999998591e-06, 7.304999999999118e-06, 7.291000000003017e-06, 7.306000000002061e-06, 7.2779999999994516e-06, 7.306000000002061e-06, 7.2919999999990215e-06, 7.292000000002491e-06, 7.305999999998591e-06, 7.2779999999994516e-06, 7.304999999999118e-06, 7.263999999999882e-06, 7.2779999999994516e-06, 7.276999999999978e-06, 7.304999999999118e-06, 7.276999999999978e-06, 7.305999999998591e-06, 7.290999999999548e-06, 7.375000000000437e-06, 7.292000000002491e-06, 7.305000000002587e-06, 7.276999999999978e-06, 7.319000000002157e-06, 7.319999999998161e-06, 7.304999999999118e-06, 7.290999999999548e-06, 7.2919999999990215e-06, 7.304999999999118e-06, 7.318999999998688e-06, 7.319999999998161e-06, 7.263999999999882e-06, 7.263999999999882e-06, 7.306000000002061e-06, 7.305999999998591e-06, 7.278000000002921e-06, 7.305999999998591e-06, 7.304999999999118e-06, 7.304999999999118e-06]</msg>
<status status="PASS" starttime="20201115 22:01:01.218" endtime="20201115 22:01:01.220"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.213" endtime="20201115 22:01:01.220"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:01.222" endtime="20201115 22:01:01.224"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:01.226" endtime="20201115 22:01:01.245"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.224" endtime="20201115 22:01:01.246"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.221" endtime="20201115 22:01:01.246"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.849" endtime="20201115 22:01:01.247"></status>
</kw>
<msg timestamp="20201115 22:01:01.247" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:01.256" endtime="20201115 22:01:01.276"></status>
</kw>
<msg timestamp="20201115 22:01:01.276" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:01.255" endtime="20201115 22:01:01.276"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:01.279" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:01.277" endtime="20201115 22:01:01.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:01.280" endtime="20201115 22:01:01.282"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.252" endtime="20201115 22:01:01.283"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.250" endtime="20201115 22:01:01.283"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:01.290" endtime="20201115 22:01:01.577"></status>
</kw>
<msg timestamp="20201115 22:01:01.580" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020578139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020585431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:01.288" endtime="20201115 22:01:01.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:01.588" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020578139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020585431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:01.581" endtime="20201115 22:01:01.589"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:01.589" endtime="20201115 22:01:01.591"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.286" endtime="20201115 22:01:01.592"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.284" endtime="20201115 22:01:01.592"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:01.596" level="INFO">${RESULT} = [{'time': 0.020585431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.292000000002491e-06, 'source_diff': 7.292000000002491e-06}, {'time': 0.020789278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:01.593" endtime="20201115 22:01:01.597"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:01.610" level="INFO">${OVERHEAD} = {'time': [0.020585431, 0.020789278, 0.020996236, 0.021200194, 0.021402833, 0.021607944, 0.021812347, 0.022018125, 0.022220847, 0.022423597, 0.022631028, 0.022834653, 0.023040639, 0.023247194, 0.023453...</msg>
<status status="PASS" starttime="20201115 22:01:01.597" endtime="20201115 22:01:01.610"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:01.614" level="INFO">NAME: 00-overhead-19-set</msg>
<status status="PASS" starttime="20201115 22:01:01.613" endtime="20201115 22:01:01.614"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:01.617" level="INFO">VALUE: [7.292000000002491e-06, 7.292000000002491e-06, 7.222000000001172e-06, 7.332999999998258e-06, 7.290999999999548e-06, 7.276999999999978e-06, 7.290999999999548e-06, 7.2919999999990215e-06, 7.290999999999548e-06, 7.290999999999548e-06, 7.292000000002491e-06, 7.305999999998591e-06, 7.278000000002921e-06, 7.304999999999118e-06, 7.304999999999118e-06, 7.305000000002587e-06, 7.276999999999978e-06, 7.2919999999990215e-06, 7.263999999999882e-06, 7.2779999999994516e-06, 7.3469999999978275e-06, 7.306000000002061e-06, 7.347999999997301e-06, 7.318999999998688e-06, 7.291000000003017e-06, 7.2219999999977025e-06, 7.389000000000007e-06, 7.263999999999882e-06, 7.305999999998591e-06, 7.3469999999978275e-06, 7.276999999999978e-06, 7.2779999999994516e-06, 7.3620000000003405e-06, 7.306000000002061e-06, 7.305999999998591e-06, 7.2919999999990215e-06, 7.318999999998688e-06, 7.333000000001727e-06, 7.320000000001631e-06, 7.304999999999118e-06, 7.304999999999118e-06, 7.306000000002061e-06, 7.2919999999990215e-06, 7.278000000002921e-06, 7.2919999999990215e-06, 7.292000000002491e-06, 7.305999999998591e-06, 7.2779999999994516e-06, 7.347000000001297e-06, 7.290999999999548e-06]</msg>
<status status="PASS" starttime="20201115 22:01:01.615" endtime="20201115 22:01:01.617"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.610" endtime="20201115 22:01:01.617"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:01.620" endtime="20201115 22:01:01.621"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:01.624" endtime="20201115 22:01:01.643"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.622" endtime="20201115 22:01:01.644"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.618" endtime="20201115 22:01:01.644"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.248" endtime="20201115 22:01:01.644"></status>
</kw>
<msg timestamp="20201115 22:01:01.645" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:01.653" endtime="20201115 22:01:01.674"></status>
</kw>
<msg timestamp="20201115 22:01:01.674" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:01.652" endtime="20201115 22:01:01.674"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:01.677" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:01.675" endtime="20201115 22:01:01.677"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:01.678" endtime="20201115 22:01:01.680"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.649" endtime="20201115 22:01:01.681"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.647" endtime="20201115 22:01:01.681"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:01.688" endtime="20201115 22:01:01.986"></status>
</kw>
<msg timestamp="20201115 22:01:01.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020002542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020009847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:01.686" endtime="20201115 22:01:01.993"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:02.011" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020002542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020009847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:01.995" endtime="20201115 22:01:02.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:02.013" endtime="20201115 22:01:02.014"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.684" endtime="20201115 22:01:02.015"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.682" endtime="20201115 22:01:02.015"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:02.019" level="INFO">${RESULT} = [{'time': 0.020009847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.304999999999118e-06, 'source_diff': 7.304999999999118e-06}, {'time': 0.020213778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:02.016" endtime="20201115 22:01:02.020"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:02.034" level="INFO">${OVERHEAD} = {'time': [0.020009847, 0.020213778, 0.020417389, 0.020625611, 0.020829542, 0.021032028, 0.021240208, 0.021447847, 0.021653125, 0.021860597, 0.022067292, 0.022271361, 0.022477458, 0.022681542, 0.022885...</msg>
<status status="PASS" starttime="20201115 22:01:02.020" endtime="20201115 22:01:02.034"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:02.038" level="INFO">NAME: 00-overhead-19-set</msg>
<status status="PASS" starttime="20201115 22:01:02.037" endtime="20201115 22:01:02.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:02.041" level="INFO">VALUE: [7.304999999999118e-06, 7.278000000002921e-06, 7.292000000002491e-06, 7.2919999999990215e-06, 7.2919999999990215e-06, 7.292000000002491e-06, 7.333000000001727e-06, 7.304999999999118e-06, 7.2219999999977025e-06, 7.332999999998258e-06, 7.305999999998591e-06, 7.2779999999994516e-06, 7.304999999999118e-06, 7.2919999999990215e-06, 7.209000000001076e-06, 7.319000000002157e-06, 7.2919999999990215e-06, 7.375000000000437e-06, 7.305000000002587e-06, 7.2919999999990215e-06, 7.292000000002491e-06, 7.2919999999990215e-06, 7.291000000003017e-06, 7.290999999999548e-06, 7.2919999999990215e-06, 7.304999999999118e-06, 7.2219999999977025e-06, 7.292000000002491e-06, 7.3469999999978275e-06, 7.2919999999990215e-06, 7.2919999999990215e-06, 7.305000000002587e-06, 7.320000000001631e-06, 7.304999999999118e-06, 7.278000000002921e-06, 7.2919999999990215e-06, 7.304999999999118e-06, 7.347000000001297e-06, 7.305999999998591e-06, 7.276999999999978e-06, 7.2919999999990215e-06, 7.332999999998258e-06, 7.306000000002061e-06, 7.306000000002061e-06, 7.306000000002061e-06, 7.306000000002061e-06, 7.290999999999548e-06, 7.263000000000408e-06, 7.2779999999994516e-06, 7.292000000002491e-06]</msg>
<status status="PASS" starttime="20201115 22:01:02.039" endtime="20201115 22:01:02.041"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.034" endtime="20201115 22:01:02.042"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:02.044" endtime="20201115 22:01:02.045"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:02.048" endtime="20201115 22:01:02.067"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.046" endtime="20201115 22:01:02.068"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.042" endtime="20201115 22:01:02.068"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.645" endtime="20201115 22:01:02.068"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.049" endtime="20201115 22:01:02.069"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.048" endtime="20201115 22:01:02.069"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:02.071" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:02.080" endtime="20201115 22:01:02.099"></status>
</kw>
<msg timestamp="20201115 22:01:02.100" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:02.078" endtime="20201115 22:01:02.100"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:02.102" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:02.101" endtime="20201115 22:01:02.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:02.103" endtime="20201115 22:01:02.105"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.076" endtime="20201115 22:01:02.105"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.073" endtime="20201115 22:01:02.106"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:02.112" endtime="20201115 22:01:02.397"></status>
</kw>
<msg timestamp="20201115 22:01:02.400" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022251153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022258708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:02.111" endtime="20201115 22:01:02.400"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:02.408" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022251153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022258708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:02.401" endtime="20201115 22:01:02.408"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:02.409" endtime="20201115 22:01:02.411"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.108" endtime="20201115 22:01:02.411"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.107" endtime="20201115 22:01:02.412"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:02.416" level="INFO">${RESULT} = [{'time': 0.022258708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.554999999999368e-06, 'source_diff': 7.554999999999368e-06}, {'time': 0.022474653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:02.413" endtime="20201115 22:01:02.416"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:02.429" level="INFO">${OVERHEAD} = {'time': [0.022258708, 0.022474653, 0.022694889, 0.022912486, 0.023126458, 0.023342319, 0.023560181, 0.023776583, 0.023992056, 0.0242065, 0.024423333, 0.024639028, 0.024854653, 0.025073458, 0.02529155...</msg>
<status status="PASS" starttime="20201115 22:01:02.417" endtime="20201115 22:01:02.429"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:02.434" level="INFO">NAME: 00-overhead-20-set</msg>
<status status="PASS" starttime="20201115 22:01:02.433" endtime="20201115 22:01:02.434"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:02.437" level="INFO">VALUE: [7.554999999999368e-06, 7.527999999999702e-06, 7.569999999998411e-06, 7.554999999999368e-06, 7.554999999999368e-06, 7.540999999999798e-06, 7.5419999999992715e-06, 7.540999999999798e-06, 7.556000000002311e-06, 7.568999999998938e-06, 7.568999999998938e-06, 7.555999999998841e-06, 7.500000000000562e-06, 7.568999999998938e-06, 7.569999999998411e-06, 7.625000000000687e-06, 7.625000000000687e-06, 7.582999999998508e-06, 7.555999999998841e-06, 7.583999999997981e-06, 7.554999999999368e-06, 7.625000000000687e-06, 7.554999999999368e-06, 7.584000000001451e-06, 7.5419999999992715e-06, 7.5969999999980775e-06, 7.555000000002837e-06, 7.583000000001977e-06, 7.568999999998938e-06, 7.583000000001977e-06, 7.568999999998938e-06, 7.514000000000132e-06, 7.527000000000228e-06, 7.570000000001881e-06, 7.555999999998841e-06, 7.527999999999702e-06, 7.500000000000562e-06, 7.583000000001977e-06, 7.584000000001451e-06, 7.554999999999368e-06, 7.554999999999368e-06, 7.556000000002311e-06, 7.554999999999368e-06, 7.583999999997981e-06, 7.555999999998841e-06, 7.55600000000578e-06, 7.569999999998411e-06, 7.486000000000992e-06, 7.554999999999368e-06, 7.597000000005016e-06]</msg>
<status status="PASS" starttime="20201115 22:01:02.435" endtime="20201115 22:01:02.437"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.430" endtime="20201115 22:01:02.438"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:02.440" endtime="20201115 22:01:02.441"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:02.443" endtime="20201115 22:01:02.463"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.442" endtime="20201115 22:01:02.463"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.438" endtime="20201115 22:01:02.464"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.071" endtime="20201115 22:01:02.464"></status>
</kw>
<msg timestamp="20201115 22:01:02.464" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:02.473" endtime="20201115 22:01:02.492"></status>
</kw>
<msg timestamp="20201115 22:01:02.493" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:02.471" endtime="20201115 22:01:02.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:02.495" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:02.494" endtime="20201115 22:01:02.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:02.496" endtime="20201115 22:01:02.499"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.469" endtime="20201115 22:01:02.499"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.467" endtime="20201115 22:01:02.500"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:02.506" endtime="20201115 22:01:02.793"></status>
</kw>
<msg timestamp="20201115 22:01:02.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019888625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019896194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:02.505" endtime="20201115 22:01:02.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:02.804" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019888625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019896194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:02.797" endtime="20201115 22:01:02.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:02.805" endtime="20201115 22:01:02.807"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.502" endtime="20201115 22:01:02.808"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.500" endtime="20201115 22:01:02.808"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:02.812" level="INFO">${RESULT} = [{'time': 0.019896194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.568999999998938e-06, 'source_diff': 7.568999999998938e-06}, {'time': 0.020114681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:02.809" endtime="20201115 22:01:02.812"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:02.825" level="INFO">${OVERHEAD} = {'time': [0.019896194, 0.020114681, 0.020329194, 0.020548431, 0.020762194, 0.020978125, 0.021199306, 0.021417097, 0.021630889, 0.021850639, 0.022068403, 0.022289514, 0.022509778, 0.022728708, 0.022944...</msg>
<status status="PASS" starttime="20201115 22:01:02.813" endtime="20201115 22:01:02.826"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:02.830" level="INFO">NAME: 00-overhead-20-set</msg>
<status status="PASS" starttime="20201115 22:01:02.829" endtime="20201115 22:01:02.831"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:02.833" level="INFO">VALUE: [7.568999999998938e-06, 7.569999999998411e-06, 7.554999999999368e-06, 7.597999999997551e-06, 7.569000000002407e-06, 7.555999999998841e-06, 7.556000000002311e-06, 7.514000000000132e-06, 7.570000000001881e-06, 7.570000000001881e-06, 7.5419999999992715e-06, 7.5419999999992715e-06, 7.584000000001451e-06, 7.568999999998938e-06, 7.584000000001451e-06, 7.570000000001881e-06, 7.569999999998411e-06, 7.582999999998508e-06, 7.555999999998841e-06, 7.568999999998938e-06, 7.555999999998841e-06, 7.568999999998938e-06, 7.582999999998508e-06, 7.569000000002407e-06, 7.570000000001881e-06, 7.554999999999368e-06, 7.598000000001021e-06, 7.624999999997217e-06, 7.570000000001881e-06, 7.472000000001422e-06, 7.568999999998938e-06, 7.568999999998938e-06, 7.527999999999702e-06, 7.584000000001451e-06, 7.555000000002837e-06, 7.556000000002311e-06, 7.5419999999992715e-06, 7.569000000002407e-06, 7.569999999998411e-06, 7.554999999999368e-06, 7.569999999998411e-06, 7.485999999997522e-06, 7.555999999998841e-06, 7.500000000000562e-06, 7.569000000002407e-06, 7.582999999998508e-06, 7.555999999998841e-06, 7.625000000000687e-06, 7.584000000001451e-06, 7.569000000002407e-06]</msg>
<status status="PASS" starttime="20201115 22:01:02.831" endtime="20201115 22:01:02.833"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.827" endtime="20201115 22:01:02.834"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:02.836" endtime="20201115 22:01:02.837"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:02.839" endtime="20201115 22:01:02.859"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.838" endtime="20201115 22:01:02.859"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.834" endtime="20201115 22:01:02.860"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.465" endtime="20201115 22:01:02.860"></status>
</kw>
<msg timestamp="20201115 22:01:02.860" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:02.869" endtime="20201115 22:01:02.889"></status>
</kw>
<msg timestamp="20201115 22:01:02.890" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:02.867" endtime="20201115 22:01:02.890"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:02.892" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:02.891" endtime="20201115 22:01:02.892"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:02.893" endtime="20201115 22:01:02.896"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.865" endtime="20201115 22:01:02.896"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.863" endtime="20201115 22:01:02.897"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:02.903" endtime="20201115 22:01:03.189"></status>
</kw>
<msg timestamp="20201115 22:01:03.192" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020736486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020744028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:02.902" endtime="20201115 22:01:03.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:03.200" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020736486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020744028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:03.193" endtime="20201115 22:01:03.201"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:03.202" endtime="20201115 22:01:03.203"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.899" endtime="20201115 22:01:03.204"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.897" endtime="20201115 22:01:03.204"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:03.208" level="INFO">${RESULT} = [{'time': 0.020744028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.542000000002741e-06, 'source_diff': 7.542000000002741e-06}, {'time': 0.02096325, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:01:03.205" endtime="20201115 22:01:03.209"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:03.222" level="INFO">${OVERHEAD} = {'time': [0.020744028, 0.02096325, 0.021182042, 0.021401306, 0.021616056, 0.021832972, 0.022053417, 0.022270792, 0.022487917, 0.022703319, 0.022918736, 0.023134375, 0.023354333, 0.023575042, 0.0237961...</msg>
<status status="PASS" starttime="20201115 22:01:03.210" endtime="20201115 22:01:03.222"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:03.227" level="INFO">NAME: 00-overhead-20-set</msg>
<status status="PASS" starttime="20201115 22:01:03.226" endtime="20201115 22:01:03.227"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:03.229" level="INFO">VALUE: [7.542000000002741e-06, 7.485999999997522e-06, 7.556000000002311e-06, 7.555999999998841e-06, 7.556000000002311e-06, 7.527999999999702e-06, 7.555999999998841e-06, 7.556000000002311e-06, 7.555999999998841e-06, 7.554999999999368e-06, 7.568999999998938e-06, 7.582999999998508e-06, 7.569000000002407e-06, 7.570000000001881e-06, 7.556000000002311e-06, 7.554999999999368e-06, 7.583999999997981e-06, 7.554999999999368e-06, 7.555000000002837e-06, 7.569999999998411e-06, 7.527000000000228e-06, 7.568999999998938e-06, 7.555999999998841e-06, 7.569999999998411e-06, 7.584000000001451e-06, 7.555000000002837e-06, 7.570000000001881e-06, 7.555999999998841e-06, 7.513999999996662e-06, 7.500000000000562e-06, 7.582999999998508e-06, 7.555999999998841e-06, 7.555999999998841e-06, 7.556000000002311e-06, 7.555999999998841e-06, 7.5419999999992715e-06, 7.542000000002741e-06, 7.555999999998841e-06, 7.514000000000132e-06, 7.625000000000687e-06, 7.554999999999368e-06, 7.555000000002837e-06, 7.582999999998508e-06, 7.527999999999702e-06, 7.555999999998841e-06, 7.583000000001977e-06, 7.500000000000562e-06, 7.555999999998841e-06, 7.554999999999368e-06, 7.514000000000132e-06]</msg>
<status status="PASS" starttime="20201115 22:01:03.228" endtime="20201115 22:01:03.229"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.223" endtime="20201115 22:01:03.230"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:03.232" endtime="20201115 22:01:03.233"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:03.235" endtime="20201115 22:01:03.255"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.234" endtime="20201115 22:01:03.256"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.230" endtime="20201115 22:01:03.256"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.861" endtime="20201115 22:01:03.256"></status>
</kw>
<msg timestamp="20201115 22:01:03.257" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:03.265" endtime="20201115 22:01:03.286"></status>
</kw>
<msg timestamp="20201115 22:01:03.287" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:03.264" endtime="20201115 22:01:03.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:03.289" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:03.288" endtime="20201115 22:01:03.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:03.290" endtime="20201115 22:01:03.293"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.261" endtime="20201115 22:01:03.293"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.259" endtime="20201115 22:01:03.294"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:03.300" endtime="20201115 22:01:03.587"></status>
</kw>
<msg timestamp="20201115 22:01:03.590" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020388903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020396472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:03.299" endtime="20201115 22:01:03.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:03.598" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020388903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020396472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:03.591" endtime="20201115 22:01:03.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:03.600" endtime="20201115 22:01:03.601"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.296" endtime="20201115 22:01:03.602"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.294" endtime="20201115 22:01:03.602"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:03.607" level="INFO">${RESULT} = [{'time': 0.020396472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.568999999998938e-06, 'source_diff': 7.568999999998938e-06}, {'time': 0.020610903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:03.603" endtime="20201115 22:01:03.607"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:03.621" level="INFO">${OVERHEAD} = {'time': [0.020396472, 0.020610903, 0.020829153, 0.021045806, 0.021261764, 0.021481236, 0.021698722, 0.021917333, 0.022135861, 0.022351361, 0.022565583, 0.022783917, 0.022999375, 0.023215806, 0.023436...</msg>
<status status="PASS" starttime="20201115 22:01:03.608" endtime="20201115 22:01:03.621"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:03.625" level="INFO">NAME: 00-overhead-20-set</msg>
<status status="PASS" starttime="20201115 22:01:03.624" endtime="20201115 22:01:03.626"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:03.628" level="INFO">VALUE: [7.568999999998938e-06, 7.555999999998841e-06, 7.527999999999702e-06, 7.5419999999992715e-06, 7.555999999998841e-06, 7.597000000001547e-06, 7.527999999999702e-06, 7.611000000001117e-06, 7.554999999999368e-06, 7.611000000001117e-06, 7.554999999999368e-06, 7.570000000001881e-06, 7.555999999998841e-06, 7.569999999998411e-06, 7.5419999999992715e-06, 7.555999999998841e-06, 7.555999999998841e-06, 7.5419999999992715e-06, 7.5419999999992715e-06, 7.570000000001881e-06, 7.639000000000257e-06, 7.556000000002311e-06, 7.570000000001881e-06, 7.556000000002311e-06, 7.514000000000132e-06, 7.568999999998938e-06, 7.556000000002311e-06, 7.570000000001881e-06, 7.598000000001021e-06, 7.583000000001977e-06, 7.555999999998841e-06, 7.584000000001451e-06, 7.5419999999992715e-06, 7.540999999999798e-06, 7.554999999999368e-06, 7.569000000002407e-06, 7.611000000001117e-06, 7.540999999999798e-06, 7.527999999999702e-06, 7.555999999998841e-06, 7.473000000000896e-06, 7.554999999999368e-06, 7.5419999999992715e-06, 7.568999999998938e-06, 7.555999999998841e-06, 7.540999999999798e-06, 7.5419999999992715e-06, 7.583999999997981e-06, 7.555999999998841e-06, 7.554999999999368e-06]</msg>
<status status="PASS" starttime="20201115 22:01:03.626" endtime="20201115 22:01:03.628"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.622" endtime="20201115 22:01:03.629"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:03.631" endtime="20201115 22:01:03.632"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:03.634" endtime="20201115 22:01:03.654"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.633" endtime="20201115 22:01:03.654"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.629" endtime="20201115 22:01:03.655"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.257" endtime="20201115 22:01:03.655"></status>
</kw>
<msg timestamp="20201115 22:01:03.655" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:03.664" endtime="20201115 22:01:03.685"></status>
</kw>
<msg timestamp="20201115 22:01:03.685" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:03.662" endtime="20201115 22:01:03.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:03.688" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:03.686" endtime="20201115 22:01:03.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:03.689" endtime="20201115 22:01:03.691"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.660" endtime="20201115 22:01:03.692"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.658" endtime="20201115 22:01:03.692"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:03.699" endtime="20201115 22:01:03.985"></status>
</kw>
<msg timestamp="20201115 22:01:03.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020356139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020363694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:03.697" endtime="20201115 22:01:03.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:03.996" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020356139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020363694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:03.989" endtime="20201115 22:01:03.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:03.997" endtime="20201115 22:01:03.999"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.694" endtime="20201115 22:01:04.000"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.693" endtime="20201115 22:01:04.000"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:04.004" level="INFO">${RESULT} = [{'time': 0.020363694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.555000000002837e-06, 'source_diff': 7.555000000002837e-06}, {'time': 0.020581542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:04.001" endtime="20201115 22:01:04.005"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:04.018" level="INFO">${OVERHEAD} = {'time': [0.020363694, 0.020581542, 0.020801528, 0.021017, 0.021235319, 0.021454833, 0.021675306, 0.0218895, 0.022103972, 0.022320597, 0.022541069, 0.022761069, 0.022976944, 0.023193125, 0.023408597, ...</msg>
<status status="PASS" starttime="20201115 22:01:04.005" endtime="20201115 22:01:04.018"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:04.022" level="INFO">NAME: 00-overhead-20-set</msg>
<status status="PASS" starttime="20201115 22:01:04.021" endtime="20201115 22:01:04.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:04.024" level="INFO">VALUE: [7.555000000002837e-06, 7.556000000002311e-06, 7.555999999998841e-06, 7.5419999999992715e-06, 7.540999999999798e-06, 7.554999999999368e-06, 7.638999999996787e-06, 7.5419999999992715e-06, 7.582999999998508e-06, 7.554999999999368e-06, 7.554999999999368e-06, 7.568999999998938e-06, 7.582999999998508e-06, 7.568999999998938e-06, 7.582999999998508e-06, 7.555999999998841e-06, 7.555999999998841e-06, 7.570000000001881e-06, 7.570000000001881e-06, 7.554999999999368e-06, 7.555999999998841e-06, 7.583000000001977e-06, 7.554999999999368e-06, 7.554999999999368e-06, 7.542000000002741e-06, 7.528000000003171e-06, 7.583999999997981e-06, 7.569000000002407e-06, 7.5419999999992715e-06, 7.568999999998938e-06, 7.582999999998508e-06, 7.569999999998411e-06, 7.569000000002407e-06, 7.582999999998508e-06, 7.569000000002407e-06, 7.555999999998841e-06, 7.542000000002741e-06, 7.625000000000687e-06, 7.569999999998411e-06, 7.568999999998938e-06, 7.554999999999368e-06, 7.5419999999992715e-06, 7.569000000002407e-06, 7.5419999999992715e-06, 7.597999999997551e-06, 7.554999999999368e-06, 7.584000000001451e-06, 7.555000000002837e-06, 7.625000000000687e-06, 7.554999999999368e-06]</msg>
<status status="PASS" starttime="20201115 22:01:04.023" endtime="20201115 22:01:04.025"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.018" endtime="20201115 22:01:04.025"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:04.028" endtime="20201115 22:01:04.029"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:04.031" endtime="20201115 22:01:04.050"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.029" endtime="20201115 22:01:04.051"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.026" endtime="20201115 22:01:04.051"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.656" endtime="20201115 22:01:04.052"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.070" endtime="20201115 22:01:04.052"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.069" endtime="20201115 22:01:04.052"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:04.054" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:04.063" endtime="20201115 22:01:04.085"></status>
</kw>
<msg timestamp="20201115 22:01:04.085" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:04.061" endtime="20201115 22:01:04.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:04.088" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:04.086" endtime="20201115 22:01:04.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:04.089" endtime="20201115 22:01:04.091"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.059" endtime="20201115 22:01:04.091"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.057" endtime="20201115 22:01:04.091"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:04.098" endtime="20201115 22:01:04.383"></status>
</kw>
<msg timestamp="20201115 22:01:04.386" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022098792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022106597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:04.097" endtime="20201115 22:01:04.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:04.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022098792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022106597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:04.387" endtime="20201115 22:01:04.394"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:04.395" endtime="20201115 22:01:04.397"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.094" endtime="20201115 22:01:04.397"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.092" endtime="20201115 22:01:04.398"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:04.402" level="INFO">${RESULT} = [{'time': 0.022106597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.804999999999618e-06, 'source_diff': 7.804999999999618e-06}, {'time': 0.022332847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:04.399" endtime="20201115 22:01:04.402"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:04.415" level="INFO">${OVERHEAD} = {'time': [0.022106597, 0.022332847, 0.022561708, 0.022793417, 0.0230195, 0.023247639, 0.023474486, 0.023706236, 0.023933, 0.024160444, 0.024392625, 0.024618861, 0.024846611, 0.025075236, 0.025302903, ...</msg>
<status status="PASS" starttime="20201115 22:01:04.403" endtime="20201115 22:01:04.416"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:04.420" level="INFO">NAME: 00-overhead-21-set</msg>
<status status="PASS" starttime="20201115 22:01:04.419" endtime="20201115 22:01:04.420"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:04.422" level="INFO">VALUE: [7.804999999999618e-06, 7.818999999999188e-06, 7.818999999999188e-06, 7.819999999998661e-06, 7.818999999999188e-06, 7.82000000000213e-06, 7.860999999997897e-06, 7.791999999999522e-06, 7.818999999999188e-06, 7.832999999998758e-06, 7.806000000002561e-06, 7.818999999999188e-06, 7.903000000000077e-06, 7.833000000002227e-06, 7.82000000000213e-06, 7.82000000000213e-06, 7.847999999997801e-06, 7.833999999998231e-06, 7.84800000000127e-06, 7.818999999999188e-06, 7.832999999998758e-06, 7.777999999999952e-06, 7.861999999997371e-06, 7.82000000000213e-06, 7.846999999998328e-06, 7.818999999999188e-06, 7.846999999998328e-06, 7.8340000000017e-06, 7.833999999998231e-06, 7.832999999998758e-06, 7.819999999998661e-06, 7.832999999998758e-06, 7.764000000000382e-06, 7.819000000002657e-06, 7.818999999999188e-06, 7.818999999999188e-06, 7.832999999998758e-06, 7.833000000002227e-06, 7.819999999998661e-06, 7.82000000000213e-06, 7.819999999998661e-06, 7.805999999999091e-06, 7.874999999997467e-06, 7.791999999999522e-06, 7.8200000000056e-06, 7.833999999998231e-06, 7.818999999999188e-06, 7.818999999999188e-06, 7.777999999999952e-06, 7.818999999999188e-06]</msg>
<status status="PASS" starttime="20201115 22:01:04.421" endtime="20201115 22:01:04.423"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.416" endtime="20201115 22:01:04.423"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:04.425" endtime="20201115 22:01:04.427"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:04.429" endtime="20201115 22:01:04.448"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.427" endtime="20201115 22:01:04.449"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.424" endtime="20201115 22:01:04.449"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.055" endtime="20201115 22:01:04.449"></status>
</kw>
<msg timestamp="20201115 22:01:04.450" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:04.459" endtime="20201115 22:01:04.479"></status>
</kw>
<msg timestamp="20201115 22:01:04.479" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:04.457" endtime="20201115 22:01:04.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:04.482" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:04.480" endtime="20201115 22:01:04.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:04.483" endtime="20201115 22:01:04.486"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.454" endtime="20201115 22:01:04.486"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.452" endtime="20201115 22:01:04.487"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:04.493" endtime="20201115 22:01:04.780"></status>
</kw>
<msg timestamp="20201115 22:01:04.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019959083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019966847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:04.491" endtime="20201115 22:01:04.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:04.791" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019959083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019966847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:04.784" endtime="20201115 22:01:04.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:04.792" endtime="20201115 22:01:04.794"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.489" endtime="20201115 22:01:04.795"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.487" endtime="20201115 22:01:04.795"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:04.799" level="INFO">${RESULT} = [{'time': 0.019966847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.764000000000382e-06, 'source_diff': 7.764000000000382e-06}, {'time': 0.020196431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:04.796" endtime="20201115 22:01:04.799"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:04.812" level="INFO">${OVERHEAD} = {'time': [0.019966847, 0.020196431, 0.020428028, 0.020654208, 0.020883153, 0.021112722, 0.021338958, 0.021566861, 0.021792389, 0.022019889, 0.022249486, 0.022475472, 0.022705514, 0.022934139, 0.023163...</msg>
<status status="PASS" starttime="20201115 22:01:04.800" endtime="20201115 22:01:04.813"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:04.817" level="INFO">NAME: 00-overhead-21-set</msg>
<status status="PASS" starttime="20201115 22:01:04.816" endtime="20201115 22:01:04.817"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:04.819" level="INFO">VALUE: [7.764000000000382e-06, 7.8340000000017e-06, 7.861000000001367e-06, 7.818999999999188e-06, 7.8340000000017e-06, 7.791000000000048e-06, 7.819000000002657e-06, 7.818999999999188e-06, 7.805999999999091e-06, 7.82000000000213e-06, 7.832999999998758e-06, 7.818999999999188e-06, 7.819999999998661e-06, 7.805999999999091e-06, 7.818999999999188e-06, 7.818999999999188e-06, 7.818999999999188e-06, 7.818999999999188e-06, 7.832999999998758e-06, 7.818999999999188e-06, 7.818999999999188e-06, 7.833999999998231e-06, 7.832999999998758e-06, 7.833000000002227e-06, 7.818999999999188e-06, 7.806000000002561e-06, 7.791999999999522e-06, 7.818999999999188e-06, 7.82000000000213e-06, 7.832999999998758e-06, 7.819000000002657e-06, 7.819999999998661e-06, 7.832999999998758e-06, 7.818999999999188e-06, 7.818999999999188e-06, 7.818999999999188e-06, 7.832999999998758e-06, 7.819999999998661e-06, 7.861999999997371e-06, 7.846999999998328e-06, 7.804999999999618e-06, 7.818999999999188e-06, 7.804999999999618e-06, 7.777999999999952e-06, 7.818999999999188e-06, 7.818999999999188e-06, 7.818999999999188e-06, 7.832999999998758e-06, 7.819999999998661e-06, 7.804999999999618e-06]</msg>
<status status="PASS" starttime="20201115 22:01:04.818" endtime="20201115 22:01:04.820"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.813" endtime="20201115 22:01:04.820"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:04.822" endtime="20201115 22:01:04.824"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:04.826" endtime="20201115 22:01:04.845"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.824" endtime="20201115 22:01:04.846"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.821" endtime="20201115 22:01:04.846"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.450" endtime="20201115 22:01:04.847"></status>
</kw>
<msg timestamp="20201115 22:01:04.847" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:04.856" endtime="20201115 22:01:04.877"></status>
</kw>
<msg timestamp="20201115 22:01:04.877" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:04.854" endtime="20201115 22:01:04.877"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:04.880" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:04.878" endtime="20201115 22:01:04.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:04.881" endtime="20201115 22:01:04.883"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.851" endtime="20201115 22:01:04.884"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.849" endtime="20201115 22:01:04.884"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:04.891" endtime="20201115 22:01:05.178"></status>
</kw>
<msg timestamp="20201115 22:01:05.181" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021046944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021054792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:04.889" endtime="20201115 22:01:05.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:05.189" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021046944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021054792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:05.182" endtime="20201115 22:01:05.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:05.190" endtime="20201115 22:01:05.192"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.887" endtime="20201115 22:01:05.192"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.885" endtime="20201115 22:01:05.193"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:05.197" level="INFO">${RESULT} = [{'time': 0.021054792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.847999999997801e-06, 'source_diff': 7.847999999997801e-06}, {'time': 0.021287514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:05.194" endtime="20201115 22:01:05.197"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:05.211" level="INFO">${OVERHEAD} = {'time': [0.021054792, 0.021287514, 0.02152025, 0.021752917, 0.021979639, 0.022206903, 0.02243625, 0.022668208, 0.02289825, 0.023129792, 0.023356764, 0.023584264, 0.023816278, 0.024045222, 0.024272, 0...</msg>
<status status="PASS" starttime="20201115 22:01:05.198" endtime="20201115 22:01:05.212"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:05.216" level="INFO">NAME: 00-overhead-21-set</msg>
<status status="PASS" starttime="20201115 22:01:05.215" endtime="20201115 22:01:05.216"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:05.218" level="INFO">VALUE: [7.847999999997801e-06, 7.832999999998758e-06, 7.806000000002561e-06, 7.791999999999522e-06, 7.832999999998758e-06, 7.8340000000017e-06, 7.833000000002227e-06, 7.832999999998758e-06, 7.777999999999952e-06, 7.819999999998661e-06, 7.832999999998758e-06, 7.82000000000213e-06, 7.819999999998661e-06, 7.847000000001797e-06, 7.805999999999091e-06, 7.819999999998661e-06, 7.832999999998758e-06, 7.8340000000017e-06, 7.804999999999618e-06, 7.846999999998328e-06, 7.833000000002227e-06, 7.750000000000812e-06, 7.804999999999618e-06, 7.832999999998758e-06, 7.819999999998661e-06, 7.833000000002227e-06, 7.833999999998231e-06, 7.776999999997009e-06, 7.819999999998661e-06, 7.832999999998758e-06, 7.804999999999618e-06, 7.805999999999091e-06, 7.819999999998661e-06, 7.832999999998758e-06, 7.818999999999188e-06, 7.847000000001797e-06, 7.777999999999952e-06, 7.818999999999188e-06, 7.847999999997801e-06, 7.819999999998661e-06, 7.818999999999188e-06, 7.805999999999091e-06, 7.818999999999188e-06, 7.818999999999188e-06, 7.804999999999618e-06, 7.818999999999188e-06, 7.832999999998758e-06, 7.818999999999188e-06, 7.833000000005697e-06, 7.861000000004836e-06]</msg>
<status status="PASS" starttime="20201115 22:01:05.217" endtime="20201115 22:01:05.219"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.212" endtime="20201115 22:01:05.219"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:05.221" endtime="20201115 22:01:05.223"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:05.225" endtime="20201115 22:01:05.244"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.223" endtime="20201115 22:01:05.245"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.220" endtime="20201115 22:01:05.245"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.847" endtime="20201115 22:01:05.246"></status>
</kw>
<msg timestamp="20201115 22:01:05.246" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:05.255" endtime="20201115 22:01:05.277"></status>
</kw>
<msg timestamp="20201115 22:01:05.278" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:05.254" endtime="20201115 22:01:05.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:05.280" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:05.279" endtime="20201115 22:01:05.280"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:05.281" endtime="20201115 22:01:05.283"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.251" endtime="20201115 22:01:05.284"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.249" endtime="20201115 22:01:05.284"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:05.291" endtime="20201115 22:01:05.579"></status>
</kw>
<msg timestamp="20201115 22:01:05.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020378236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020386056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:05.289" endtime="20201115 22:01:05.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:05.590" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020378236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020386056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:05.583" endtime="20201115 22:01:05.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:05.591" endtime="20201115 22:01:05.593"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.287" endtime="20201115 22:01:05.593"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.285" endtime="20201115 22:01:05.594"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:05.598" level="INFO">${RESULT} = [{'time': 0.020386056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.819999999998661e-06, 'source_diff': 7.819999999998661e-06}, {'time': 0.020615389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:05.594" endtime="20201115 22:01:05.598"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:05.611" level="INFO">${OVERHEAD} = {'time': [0.020386056, 0.020615389, 0.020843639, 0.021073764, 0.021304042, 0.021530333, 0.021761694, 0.021989069, 0.022219597, 0.022448722, 0.022680403, 0.022910306, 0.023135597, 0.023362361, 0.023592...</msg>
<status status="PASS" starttime="20201115 22:01:05.599" endtime="20201115 22:01:05.611"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:05.615" level="INFO">NAME: 00-overhead-21-set</msg>
<status status="PASS" starttime="20201115 22:01:05.614" endtime="20201115 22:01:05.616"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:05.618" level="INFO">VALUE: [7.819999999998661e-06, 7.806000000002561e-06, 7.847000000001797e-06, 7.846999999998328e-06, 7.847999999997801e-06, 7.832999999998758e-06, 7.861000000001367e-06, 7.818999999999188e-06, 7.818999999999188e-06, 7.847000000001797e-06, 7.819999999998661e-06, 7.833999999998231e-06, 7.833000000002227e-06, 7.819000000002657e-06, 7.875000000000937e-06, 7.847000000001797e-06, 7.818999999999188e-06, 7.818999999999188e-06, 7.833000000002227e-06, 7.819999999998661e-06, 7.818999999999188e-06, 7.777000000000478e-06, 7.818999999999188e-06, 7.804999999999618e-06, 7.804999999999618e-06, 7.818999999999188e-06, 7.833999999998231e-06, 7.819999999998661e-06, 7.818999999999188e-06, 7.805999999999091e-06, 7.805999999999091e-06, 7.8340000000017e-06, 7.82000000000213e-06, 7.806000000002561e-06, 7.82000000000213e-06, 7.777999999999952e-06, 7.832999999998758e-06, 7.8340000000017e-06, 7.846999999998328e-06, 7.818999999999188e-06, 7.82000000000213e-06, 7.82000000000213e-06, 7.805999999999091e-06, 7.819999999998661e-06, 7.818999999999188e-06, 7.804999999999618e-06, 7.764000000000382e-06, 7.791999999999522e-06, 7.818999999999188e-06, 7.846999999998328e-06]</msg>
<status status="PASS" starttime="20201115 22:01:05.617" endtime="20201115 22:01:05.618"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.612" endtime="20201115 22:01:05.619"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:05.621" endtime="20201115 22:01:05.629"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:05.631" endtime="20201115 22:01:05.651"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.630" endtime="20201115 22:01:05.651"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.620" endtime="20201115 22:01:05.652"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.247" endtime="20201115 22:01:05.652"></status>
</kw>
<msg timestamp="20201115 22:01:05.652" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:05.661" endtime="20201115 22:01:05.683"></status>
</kw>
<msg timestamp="20201115 22:01:05.684" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:05.660" endtime="20201115 22:01:05.684"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:05.686" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:05.685" endtime="20201115 22:01:05.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:05.687" endtime="20201115 22:01:05.690"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.657" endtime="20201115 22:01:05.690"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.655" endtime="20201115 22:01:05.691"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:05.697" endtime="20201115 22:01:05.984"></status>
</kw>
<msg timestamp="20201115 22:01:05.987" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019904833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019912597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:05.696" endtime="20201115 22:01:05.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:05.995" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019904833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019912597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:05.988" endtime="20201115 22:01:05.996"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:05.997" endtime="20201115 22:01:05.998"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.693" endtime="20201115 22:01:05.999"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.691" endtime="20201115 22:01:05.999"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:06.003" level="INFO">${RESULT} = [{'time': 0.019912597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.764000000000382e-06, 'source_diff': 7.764000000000382e-06}, {'time': 0.020138583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:06.000" endtime="20201115 22:01:06.004"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:06.017" level="INFO">${OVERHEAD} = {'time': [0.019912597, 0.020138583, 0.020368194, 0.020594472, 0.020824833, 0.021052097, 0.021279778, 0.021505056, 0.021735417, 0.021967847, 0.022197972, 0.022427306, 0.022659736, 0.022887236, 0.023116...</msg>
<status status="PASS" starttime="20201115 22:01:06.004" endtime="20201115 22:01:06.017"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:06.021" level="INFO">NAME: 00-overhead-21-set</msg>
<status status="PASS" starttime="20201115 22:01:06.020" endtime="20201115 22:01:06.021"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:06.024" level="INFO">VALUE: [7.764000000000382e-06, 7.777000000000478e-06, 7.846999999998328e-06, 7.818999999999188e-06, 7.804999999999618e-06, 7.818999999999188e-06, 7.833999999998231e-06, 7.777999999999952e-06, 7.819999999998661e-06, 7.791000000000048e-06, 7.832999999998758e-06, 7.82000000000213e-06, 7.804999999999618e-06, 7.804999999999618e-06, 7.819999999998661e-06, 7.805999999999091e-06, 7.832999999998758e-06, 7.84800000000127e-06, 7.875000000000937e-06, 7.833000000002227e-06, 7.818999999999188e-06, 7.818999999999188e-06, 7.777999999999952e-06, 7.82000000000213e-06, 7.818999999999188e-06, 7.818999999999188e-06, 7.818999999999188e-06, 7.804999999999618e-06, 7.818999999999188e-06, 7.833000000002227e-06, 7.804999999999618e-06, 7.819000000002657e-06, 7.804999999999618e-06, 7.82000000000213e-06, 7.833999999998231e-06, 7.82000000000213e-06, 7.804999999999618e-06, 7.832999999998758e-06, 7.8340000000017e-06, 7.777999999999952e-06, 7.791999999999522e-06, 7.819999999998661e-06, 7.804999999999618e-06, 7.846999999998328e-06, 7.8340000000017e-06, 7.804999999999618e-06, 7.832999999998758e-06, 7.804999999999618e-06, 7.82000000000213e-06, 7.819999999998661e-06]</msg>
<status status="PASS" starttime="20201115 22:01:06.022" endtime="20201115 22:01:06.024"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.018" endtime="20201115 22:01:06.025"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:06.027" endtime="20201115 22:01:06.028"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:06.031" endtime="20201115 22:01:06.050"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.029" endtime="20201115 22:01:06.051"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.026" endtime="20201115 22:01:06.051"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.653" endtime="20201115 22:01:06.051"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.053" endtime="20201115 22:01:06.051"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.052" endtime="20201115 22:01:06.052"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:06.054" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:06.063" endtime="20201115 22:01:06.084"></status>
</kw>
<msg timestamp="20201115 22:01:06.085" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:06.061" endtime="20201115 22:01:06.085"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:06.087" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:06.086" endtime="20201115 22:01:06.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:06.089" endtime="20201115 22:01:06.090"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.059" endtime="20201115 22:01:06.091"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.056" endtime="20201115 22:01:06.091"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:06.097" endtime="20201115 22:01:06.383"></status>
</kw>
<msg timestamp="20201115 22:01:06.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022174639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022182722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:06.096" endtime="20201115 22:01:06.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:06.395" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022174639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022182722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:06.388" endtime="20201115 22:01:06.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:06.396" endtime="20201115 22:01:06.398"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.093" endtime="20201115 22:01:06.398"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.092" endtime="20201115 22:01:06.398"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:06.403" level="INFO">${RESULT} = [{'time': 0.022182722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.082999999999008e-06, 'source_diff': 8.082999999999008e-06}, {'time': 0.022425833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:06.399" endtime="20201115 22:01:06.403"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:06.416" level="INFO">${OVERHEAD} = {'time': [0.022182722, 0.022425833, 0.022664847, 0.022903625, 0.023140736, 0.023379042, 0.023618625, 0.023858639, 0.0241025, 0.024343181, 0.024584681, 0.024823486, 0.025063056, 0.025303097, 0.02554622...</msg>
<status status="PASS" starttime="20201115 22:01:06.404" endtime="20201115 22:01:06.416"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:06.420" level="INFO">NAME: 00-overhead-22-set</msg>
<status status="PASS" starttime="20201115 22:01:06.419" endtime="20201115 22:01:06.421"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:06.423" level="INFO">VALUE: [8.082999999999008e-06, 8.082999999999008e-06, 8.040999999996828e-06, 8.082999999999008e-06, 8.028000000000202e-06, 8.083999999998481e-06, 8.111000000001617e-06, 8.041999999999772e-06, 8.028000000000202e-06, 8.041999999999772e-06, 8.125000000001187e-06, 8.082999999999008e-06, 8.08400000000195e-06, 8.082999999999008e-06, 8.153000000000327e-06, 8.068999999999438e-06, 8.068999999999438e-06, 8.069999999998911e-06, 8.083000000002477e-06, 8.083000000002477e-06, 8.110999999998147e-06, 8.068999999999438e-06, 8.055999999999341e-06, 8.166000000000423e-06, 8.083999999998481e-06, 8.082999999999008e-06, 8.082999999999008e-06, 8.068999999999438e-06, 8.055999999999341e-06, 8.082999999999008e-06, 8.08400000000195e-06, 8.08400000000195e-06, 8.054999999999868e-06, 8.000000000001062e-06, 8.096999999998578e-06, 8.083999999998481e-06, 8.069999999998911e-06, 8.083000000002477e-06, 8.028000000000202e-06, 8.083999999998481e-06, 8.096999999998578e-06, 8.096999999998578e-06, 8.082999999999008e-06, 8.014000000000632e-06, 8.082999999999008e-06, 8.055999999999341e-06, 8.097999999998051e-06, 8.096999999998578e-06, 8.069999999998911e-06, 8.05600000000628e-06]</msg>
<status status="PASS" starttime="20201115 22:01:06.421" endtime="20201115 22:01:06.424"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.417" endtime="20201115 22:01:06.424"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:06.426" endtime="20201115 22:01:06.428"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:06.430" endtime="20201115 22:01:06.449"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.428" endtime="20201115 22:01:06.450"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.425" endtime="20201115 22:01:06.450"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.054" endtime="20201115 22:01:06.451"></status>
</kw>
<msg timestamp="20201115 22:01:06.451" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:06.460" endtime="20201115 22:01:06.481"></status>
</kw>
<msg timestamp="20201115 22:01:06.482" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:06.458" endtime="20201115 22:01:06.482"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:06.484" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:06.483" endtime="20201115 22:01:06.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:06.485" endtime="20201115 22:01:06.488"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.456" endtime="20201115 22:01:06.489"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.453" endtime="20201115 22:01:06.489"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:06.495" endtime="20201115 22:01:06.781"></status>
</kw>
<msg timestamp="20201115 22:01:06.784" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019917514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019925653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:06.494" endtime="20201115 22:01:06.785"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:06.793" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019917514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019925653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:06.786" endtime="20201115 22:01:06.793"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:06.794" endtime="20201115 22:01:06.796"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.491" endtime="20201115 22:01:06.797"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.490" endtime="20201115 22:01:06.797"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:06.801" level="INFO">${RESULT} = [{'time': 0.019925653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.139000000000757e-06, 'source_diff': 8.139000000000757e-06}, {'time': 0.020166111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:06.798" endtime="20201115 22:01:06.802"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:06.816" level="INFO">${OVERHEAD} = {'time': [0.019925653, 0.020166111, 0.020406583, 0.020644139, 0.020887556, 0.021126875, 0.021368819, 0.021609278, 0.021848319, 0.022089236, 0.022329792, 0.022567167, 0.022810722, 0.023050514, 0.023291...</msg>
<status status="PASS" starttime="20201115 22:01:06.803" endtime="20201115 22:01:06.816"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:06.821" level="INFO">NAME: 00-overhead-22-set</msg>
<status status="PASS" starttime="20201115 22:01:06.820" endtime="20201115 22:01:06.821"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:06.823" level="INFO">VALUE: [8.139000000000757e-06, 8.082999999999008e-06, 8.110999999998147e-06, 8.082999999999008e-06, 8.11200000000109e-06, 8.110999999998147e-06, 8.125000000001187e-06, 8.139000000000757e-06, 8.083000000002477e-06, 8.000000000001062e-06, 8.09800000000152e-06, 8.083999999998481e-06, 8.096999999998578e-06, 8.083000000002477e-06, 8.096999999998578e-06, 8.082999999999008e-06, 8.068999999999438e-06, 8.082999999999008e-06, 8.082999999999008e-06, 8.054999999999868e-06, 8.083999999998481e-06, 8.096999999998578e-06, 8.097000000002047e-06, 8.096999999998578e-06, 8.125000000001187e-06, 8.068999999999438e-06, 8.083999999998481e-06, 8.083999999998481e-06, 8.069999999998911e-06, 8.082999999999008e-06, 8.028000000000202e-06, 8.082999999999008e-06, 8.125000000001187e-06, 8.083999999998481e-06, 8.083000000002477e-06, 8.055999999999341e-06, 8.069999999998911e-06, 8.082999999999008e-06, 8.096999999998578e-06, 8.07000000000238e-06, 8.083999999998481e-06, 8.069999999998911e-06, 8.069999999998911e-06, 8.055999999999341e-06, 8.041999999999772e-06, 8.083000000002477e-06, 8.08400000000195e-06, 8.082999999999008e-06, 8.096999999998578e-06, 8.096999999998578e-06]</msg>
<status status="PASS" starttime="20201115 22:01:06.822" endtime="20201115 22:01:06.824"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.817" endtime="20201115 22:01:06.824"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:06.826" endtime="20201115 22:01:06.828"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:06.830" endtime="20201115 22:01:06.849"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.828" endtime="20201115 22:01:06.850"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.825" endtime="20201115 22:01:06.850"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.451" endtime="20201115 22:01:06.850"></status>
</kw>
<msg timestamp="20201115 22:01:06.851" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:06.859" endtime="20201115 22:01:06.883"></status>
</kw>
<msg timestamp="20201115 22:01:06.883" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:06.858" endtime="20201115 22:01:06.883"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:06.886" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:06.884" endtime="20201115 22:01:06.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:06.887" endtime="20201115 22:01:06.889"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.855" endtime="20201115 22:01:06.890"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.853" endtime="20201115 22:01:06.890"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:06.897" endtime="20201115 22:01:07.183"></status>
</kw>
<msg timestamp="20201115 22:01:07.186" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019946139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019954236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:06.895" endtime="20201115 22:01:07.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:07.194" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019946139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019954236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:07.187" endtime="20201115 22:01:07.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:07.195" endtime="20201115 22:01:07.197"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.893" endtime="20201115 22:01:07.197"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.891" endtime="20201115 22:01:07.198"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:07.202" level="INFO">${RESULT} = [{'time': 0.019954236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.096999999998578e-06, 'source_diff': 8.096999999998578e-06}, {'time': 0.020194667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:07.198" endtime="20201115 22:01:07.202"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:07.215" level="INFO">${OVERHEAD} = {'time': [0.019954236, 0.020194667, 0.020439167, 0.020677069, 0.020920361, 0.021160431, 0.021404014, 0.021644681, 0.021889181, 0.022129931, 0.022374028, 0.022614111, 0.022851194, 0.023089069, 0.023333...</msg>
<status status="PASS" starttime="20201115 22:01:07.203" endtime="20201115 22:01:07.216"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:07.220" level="INFO">NAME: 00-overhead-22-set</msg>
<status status="PASS" starttime="20201115 22:01:07.219" endtime="20201115 22:01:07.220"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:07.222" level="INFO">VALUE: [8.096999999998578e-06, 8.083999999998481e-06, 8.09800000000152e-06, 8.082999999999008e-06, 8.082999999999008e-06, 8.09800000000152e-06, 8.096999999998578e-06, 8.069999999998911e-06, 8.08400000000195e-06, 8.069999999998911e-06, 8.097000000002047e-06, 8.139000000000757e-06, 8.026999999997259e-06, 8.096999999998578e-06, 8.097000000002047e-06, 8.082999999999008e-06, 8.097000000002047e-06, 8.153000000000327e-06, 8.096999999998578e-06, 8.09800000000152e-06, 8.054999999999868e-06, 8.097000000002047e-06, 8.069999999998911e-06, 8.083000000002477e-06, 8.08400000000195e-06, 8.082999999999008e-06, 8.083000000002477e-06, 8.083000000002477e-06, 8.111000000001617e-06, 8.041999999999772e-06, 8.08400000000195e-06, 8.083999999998481e-06, 8.056000000002811e-06, 8.082999999999008e-06, 8.153000000000327e-06, 8.110999999998147e-06, 8.083999999998481e-06, 8.069000000002907e-06, 8.096999999998578e-06, 8.151999999997384e-06, 8.111000000001617e-06, 8.082999999999008e-06, 8.08400000000195e-06, 8.027000000000728e-06, 8.069999999998911e-06, 8.082999999999008e-06, 8.111000000001617e-06, 8.069999999998911e-06, 8.082999999999008e-06, 8.096999999998578e-06]</msg>
<status status="PASS" starttime="20201115 22:01:07.221" endtime="20201115 22:01:07.223"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.216" endtime="20201115 22:01:07.223"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:07.226" endtime="20201115 22:01:07.227"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:07.229" endtime="20201115 22:01:07.248"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.227" endtime="20201115 22:01:07.249"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.224" endtime="20201115 22:01:07.249"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.851" endtime="20201115 22:01:07.250"></status>
</kw>
<msg timestamp="20201115 22:01:07.250" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:07.259" endtime="20201115 22:01:07.281"></status>
</kw>
<msg timestamp="20201115 22:01:07.281" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:07.257" endtime="20201115 22:01:07.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:07.283" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:07.282" endtime="20201115 22:01:07.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:07.284" endtime="20201115 22:01:07.287"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.254" endtime="20201115 22:01:07.288"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.252" endtime="20201115 22:01:07.288"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:07.294" endtime="20201115 22:01:07.580"></status>
</kw>
<msg timestamp="20201115 22:01:07.583" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01992, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019928083, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201115 22:01:07.293" endtime="20201115 22:01:07.583"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:07.591" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01992, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019928083, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201115 22:01:07.584" endtime="20201115 22:01:07.591"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:07.592" endtime="20201115 22:01:07.594"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.290" endtime="20201115 22:01:07.595"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.289" endtime="20201115 22:01:07.595"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:07.599" level="INFO">${RESULT} = [{'time': 0.019928083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.082999999999008e-06, 'source_diff': 8.082999999999008e-06}, {'time': 0.020172097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:07.596" endtime="20201115 22:01:07.600"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:07.613" level="INFO">${OVERHEAD} = {'time': [0.019928083, 0.020172097, 0.020409778, 0.020649722, 0.020892556, 0.021135208, 0.021374361, 0.021618681, 0.021856792, 0.022100375, 0.022342806, 0.022585444, 0.022826847, 0.023070875, 0.023313...</msg>
<status status="PASS" starttime="20201115 22:01:07.600" endtime="20201115 22:01:07.613"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:07.618" level="INFO">NAME: 00-overhead-22-set</msg>
<status status="PASS" starttime="20201115 22:01:07.617" endtime="20201115 22:01:07.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:07.621" level="INFO">VALUE: [8.082999999999008e-06, 8.082999999999008e-06, 8.166999999999897e-06, 8.082999999999008e-06, 8.069999999998911e-06, 8.082999999999008e-06, 8.139000000000757e-06, 8.139000000000757e-06, 8.111000000001617e-06, 8.041999999999772e-06, 8.083999999998481e-06, 8.082999999999008e-06, 8.083000000002477e-06, 8.056000000002811e-06, 8.082999999999008e-06, 8.069999999998911e-06, 8.139000000000757e-06, 8.068999999999438e-06, 8.07000000000238e-06, 8.082999999999008e-06, 8.082999999999008e-06, 8.097999999998051e-06, 8.083000000002477e-06, 8.082999999999008e-06, 8.082999999999008e-06, 8.069999999998911e-06, 8.083000000002477e-06, 8.083000000002477e-06, 8.082999999999008e-06, 8.08400000000195e-06, 8.083999999998481e-06, 8.082999999999008e-06, 8.068999999999438e-06, 8.07000000000238e-06, 8.083999999998481e-06, 8.000000000001062e-06, 8.068999999999438e-06, 8.08400000000195e-06, 8.069000000002907e-06, 8.042000000003241e-06, 8.124999999997717e-06, 8.083999999998481e-06, 8.082999999999008e-06, 8.07000000000238e-06, 8.07000000000238e-06, 8.097000000002047e-06, 8.082999999999008e-06, 8.082999999999008e-06, 8.097000000005516e-06, 8.041999999999772e-06]</msg>
<status status="PASS" starttime="20201115 22:01:07.619" endtime="20201115 22:01:07.621"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.614" endtime="20201115 22:01:07.621"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:07.624" endtime="20201115 22:01:07.625"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:07.627" endtime="20201115 22:01:07.647"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.626" endtime="20201115 22:01:07.647"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.622" endtime="20201115 22:01:07.648"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.250" endtime="20201115 22:01:07.648"></status>
</kw>
<msg timestamp="20201115 22:01:07.648" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:07.657" endtime="20201115 22:01:07.678"></status>
</kw>
<msg timestamp="20201115 22:01:07.678" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:07.655" endtime="20201115 22:01:07.678"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:07.680" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:07.679" endtime="20201115 22:01:07.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:07.681" endtime="20201115 22:01:07.684"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.653" endtime="20201115 22:01:07.684"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.651" endtime="20201115 22:01:07.685"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:07.691" endtime="20201115 22:01:07.977"></status>
</kw>
<msg timestamp="20201115 22:01:07.980" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020846917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020854986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:07.690" endtime="20201115 22:01:07.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:07.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020846917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020854986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:07.981" endtime="20201115 22:01:07.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:07.990" endtime="20201115 22:01:07.991"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.687" endtime="20201115 22:01:07.992"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.686" endtime="20201115 22:01:07.992"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:07.996" level="INFO">${RESULT} = [{'time': 0.020854986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.068999999999438e-06, 'source_diff': 8.068999999999438e-06}, {'time': 0.021092431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:07.993" endtime="20201115 22:01:07.997"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:08.010" level="INFO">${OVERHEAD} = {'time': [0.020854986, 0.021092431, 0.021330722, 0.021570292, 0.021809764, 0.022050931, 0.022294236, 0.022531417, 0.022772097, 0.023014472, 0.023256792, 0.023497069, 0.023736417, 0.023978736, 0.024219...</msg>
<status status="PASS" starttime="20201115 22:01:07.997" endtime="20201115 22:01:08.010"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:08.014" level="INFO">NAME: 00-overhead-22-set</msg>
<status status="PASS" starttime="20201115 22:01:08.013" endtime="20201115 22:01:08.015"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:08.017" level="INFO">VALUE: [8.068999999999438e-06, 8.083999999998481e-06, 8.054999999999868e-06, 8.08400000000195e-06, 8.069999999998911e-06, 8.083999999998481e-06, 8.096999999998578e-06, 8.09800000000152e-06, 8.097000000002047e-06, 8.111000000001617e-06, 8.013999999997162e-06, 8.068999999999438e-06, 8.110999999998147e-06, 8.028000000000202e-06, 8.151999999997384e-06, 8.096999999998578e-06, 8.096999999998578e-06, 8.083000000002477e-06, 8.08400000000195e-06, 8.152000000000853e-06, 8.083999999998481e-06, 8.082999999999008e-06, 8.08400000000195e-06, 8.097000000002047e-06, 8.083000000002477e-06, 8.125000000001187e-06, 8.083999999998481e-06, 8.08400000000195e-06, 8.069999999998911e-06, 8.068999999999438e-06, 8.069999999998911e-06, 8.08400000000195e-06, 8.083000000002477e-06, 8.08400000000195e-06, 8.069999999998911e-06, 8.096999999998578e-06, 8.083000000002477e-06, 8.08400000000195e-06, 8.069999999998911e-06, 8.097000000002047e-06, 8.153000000000327e-06, 8.082999999999008e-06, 8.08400000000195e-06, 8.082999999999008e-06, 8.083999999998481e-06, 8.083999999998481e-06, 8.124999999997717e-06, 8.013000000001158e-06, 8.096999999998578e-06, 8.055999999999341e-06]</msg>
<status status="PASS" starttime="20201115 22:01:08.015" endtime="20201115 22:01:08.017"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.011" endtime="20201115 22:01:08.018"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:08.020" endtime="20201115 22:01:08.021"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:08.023" endtime="20201115 22:01:08.043"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.022" endtime="20201115 22:01:08.043"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.018" endtime="20201115 22:01:08.044"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.649" endtime="20201115 22:01:08.044"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.053" endtime="20201115 22:01:08.044"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.052" endtime="20201115 22:01:08.044"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:08.047" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:08.055" endtime="20201115 22:01:08.079"></status>
</kw>
<msg timestamp="20201115 22:01:08.079" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:08.054" endtime="20201115 22:01:08.080"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:08.082" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:08.080" endtime="20201115 22:01:08.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:08.083" endtime="20201115 22:01:08.085"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.051" endtime="20201115 22:01:08.085"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.049" endtime="20201115 22:01:08.086"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:08.092" endtime="20201115 22:01:08.381"></status>
</kw>
<msg timestamp="20201115 22:01:08.388" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022220222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022228569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:08.091" endtime="20201115 22:01:08.388"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:08.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022220222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022228569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:08.390" endtime="20201115 22:01:08.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:08.408" endtime="20201115 22:01:08.412"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.088" endtime="20201115 22:01:08.413"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.087" endtime="20201115 22:01:08.414"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:08.423" level="INFO">${RESULT} = [{'time': 0.022228569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.346999999998828e-06, 'source_diff': 8.346999999998828e-06}, {'time': 0.022483236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:08.415" endtime="20201115 22:01:08.423"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:08.455" level="INFO">${OVERHEAD} = {'time': [0.022228569, 0.022483236, 0.022733625, 0.022987417, 0.023240264, 0.023489681, 0.023741569, 0.023994097, 0.024249972, 0.024501306, 0.024750972, 0.02500425, 0.025255861, 0.025510875, 0.0257603...</msg>
<status status="PASS" starttime="20201115 22:01:08.425" endtime="20201115 22:01:08.455"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:08.464" level="INFO">NAME: 00-overhead-23-set</msg>
<status status="PASS" starttime="20201115 22:01:08.462" endtime="20201115 22:01:08.464"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:08.469" level="INFO">VALUE: [8.346999999998828e-06, 8.346999999998828e-06, 8.346999999998828e-06, 8.347999999998301e-06, 8.430999999999716e-06, 8.333999999998731e-06, 8.318999999999688e-06, 8.332999999999258e-06, 8.347000000002297e-06, 8.3340000000022e-06, 8.346999999998828e-06, 8.374999999997967e-06, 8.332999999999258e-06, 8.374999999997967e-06, 8.346999999998828e-06, 8.332999999999258e-06, 8.346999999998828e-06, 8.291000000000548e-06, 8.346999999998828e-06, 8.333999999998731e-06, 8.361000000001867e-06, 8.360999999998397e-06, 8.332999999999258e-06, 8.430999999999716e-06, 8.333000000002727e-06, 8.347000000002297e-06, 8.332999999999258e-06, 8.347999999998301e-06, 8.333999999998731e-06, 8.360999999998397e-06, 8.374999999997967e-06, 8.346999999998828e-06, 8.34800000000177e-06, 8.375000000001437e-06, 8.347000000002297e-06, 8.347000000002297e-06, 8.333999999998731e-06, 8.346999999998828e-06, 8.292000000000022e-06, 8.291000000000548e-06, 8.332999999999258e-06, 8.347000000005766e-06, 8.332999999999258e-06, 8.347999999998301e-06, 8.346999999998828e-06, 8.33400000000567e-06, 8.333000000006197e-06, 8.318999999999688e-06, 8.332999999999258e-06, 8.346999999998828e-06]</msg>
<status status="PASS" starttime="20201115 22:01:08.466" endtime="20201115 22:01:08.469"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.456" endtime="20201115 22:01:08.470"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:08.472" endtime="20201115 22:01:08.473"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:08.476" endtime="20201115 22:01:08.495"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.474" endtime="20201115 22:01:08.496"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.470" endtime="20201115 22:01:08.496"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.047" endtime="20201115 22:01:08.496"></status>
</kw>
<msg timestamp="20201115 22:01:08.497" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:08.505" endtime="20201115 22:01:08.529"></status>
</kw>
<msg timestamp="20201115 22:01:08.529" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:08.504" endtime="20201115 22:01:08.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:08.532" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:08.530" endtime="20201115 22:01:08.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:08.533" endtime="20201115 22:01:08.536"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.501" endtime="20201115 22:01:08.536"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.499" endtime="20201115 22:01:08.537"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:08.543" endtime="20201115 22:01:08.829"></status>
</kw>
<msg timestamp="20201115 22:01:08.832" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020624694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020633056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:08.541" endtime="20201115 22:01:08.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:08.841" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020624694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020633056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:08.833" endtime="20201115 22:01:08.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:08.842" endtime="20201115 22:01:08.843"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.539" endtime="20201115 22:01:08.844"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.537" endtime="20201115 22:01:08.844"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:08.849" level="INFO">${RESULT} = [{'time': 0.020633056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.36200000000134e-06, 'source_diff': 8.36200000000134e-06}, {'time': 0.020884458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:01:08.845" endtime="20201115 22:01:08.849"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:08.862" level="INFO">${OVERHEAD} = {'time': [0.020633056, 0.020884458, 0.021137069, 0.021389361, 0.021641403, 0.021891861, 0.022147958, 0.022401694, 0.022652153, 0.022908264, 0.023159417, 0.023410819, 0.023662472, 0.023915486, 0.024167...</msg>
<status status="PASS" starttime="20201115 22:01:08.850" endtime="20201115 22:01:08.862"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:08.866" level="INFO">NAME: 00-overhead-23-set</msg>
<status status="PASS" starttime="20201115 22:01:08.865" endtime="20201115 22:01:08.867"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:08.869" level="INFO">VALUE: [8.36200000000134e-06, 8.347000000002297e-06, 8.347000000002297e-06, 8.360999999998397e-06, 8.333999999998731e-06, 8.332999999999258e-06, 8.305000000000118e-06, 8.346999999998828e-06, 8.430999999999716e-06, 8.375000000001437e-06, 8.361000000001867e-06, 8.305000000000118e-06, 8.361000000001867e-06, 8.360999999998397e-06, 8.305000000000118e-06, 8.346999999998828e-06, 8.346999999998828e-06, 8.291000000000548e-06, 8.34800000000177e-06, 8.318999999999688e-06, 8.34800000000177e-06, 8.346999999998828e-06, 8.347000000002297e-06, 8.347000000002297e-06, 8.347999999998301e-06, 8.346999999998828e-06, 8.361000000001867e-06, 8.333000000002727e-06, 8.34800000000177e-06, 8.346999999998828e-06, 8.346999999998828e-06, 8.333000000002727e-06, 8.346999999998828e-06, 8.333999999998731e-06, 8.346999999998828e-06, 8.346999999998828e-06, 8.347000000002297e-06, 8.346999999998828e-06, 8.361000000001867e-06, 8.346999999998828e-06, 8.374999999997967e-06, 8.346999999998828e-06, 8.347000000002297e-06, 8.34800000000524e-06, 8.360999999998397e-06, 8.361000000005336e-06, 8.319999999999161e-06, 8.346999999998828e-06, 8.346999999998828e-06, 8.346999999998828e-06]</msg>
<status status="PASS" starttime="20201115 22:01:08.867" endtime="20201115 22:01:08.869"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.863" endtime="20201115 22:01:08.870"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:08.872" endtime="20201115 22:01:08.873"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:08.875" endtime="20201115 22:01:08.895"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.874" endtime="20201115 22:01:08.895"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.870" endtime="20201115 22:01:08.896"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.497" endtime="20201115 22:01:08.896"></status>
</kw>
<msg timestamp="20201115 22:01:08.896" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:08.905" endtime="20201115 22:01:08.928"></status>
</kw>
<msg timestamp="20201115 22:01:08.928" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:08.903" endtime="20201115 22:01:08.928"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:08.930" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:08.929" endtime="20201115 22:01:08.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:08.931" endtime="20201115 22:01:08.934"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.901" endtime="20201115 22:01:08.934"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.899" endtime="20201115 22:01:08.935"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:08.941" endtime="20201115 22:01:09.227"></status>
</kw>
<msg timestamp="20201115 22:01:09.230" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020726639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020734986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:08.940" endtime="20201115 22:01:09.231"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:09.238" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020726639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020734986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:09.231" endtime="20201115 22:01:09.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:09.240" endtime="20201115 22:01:09.241"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.937" endtime="20201115 22:01:09.242"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.936" endtime="20201115 22:01:09.242"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:09.246" level="INFO">${RESULT} = [{'time': 0.020734986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.346999999998828e-06, 'source_diff': 8.346999999998828e-06}, {'time': 0.020985139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:09.243" endtime="20201115 22:01:09.247"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:09.260" level="INFO">${OVERHEAD} = {'time': [0.020734986, 0.020985139, 0.021241292, 0.021497625, 0.021747778, 0.021997236, 0.022248542, 0.022502569, 0.022758042, 0.023013722, 0.023264347, 0.023519097, 0.023773292, 0.024029694, 0.024280...</msg>
<status status="PASS" starttime="20201115 22:01:09.247" endtime="20201115 22:01:09.260"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:09.264" level="INFO">NAME: 00-overhead-23-set</msg>
<status status="PASS" starttime="20201115 22:01:09.263" endtime="20201115 22:01:09.264"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:09.267" level="INFO">VALUE: [8.346999999998828e-06, 8.375000000001437e-06, 8.333999999998731e-06, 8.332999999999258e-06, 8.346999999998828e-06, 8.375000000001437e-06, 8.347999999998301e-06, 8.346999999998828e-06, 8.333999999998731e-06, 8.332999999999258e-06, 8.347000000002297e-06, 8.332999999999258e-06, 8.3340000000022e-06, 8.347000000002297e-06, 8.347000000002297e-06, 8.346999999998828e-06, 8.347000000002297e-06, 8.346999999998828e-06, 8.346999999998828e-06, 8.360999999998397e-06, 8.375000000001437e-06, 8.333999999998731e-06, 8.389000000001007e-06, 8.360999999998397e-06, 8.34800000000177e-06, 8.332999999999258e-06, 8.361000000001867e-06, 8.346999999998828e-06, 8.332999999999258e-06, 8.333999999998731e-06, 8.346999999998828e-06, 8.360999999998397e-06, 8.347000000002297e-06, 8.346999999998828e-06, 8.347000000002297e-06, 8.346999999998828e-06, 8.361000000001867e-06, 8.346999999998828e-06, 8.361000000001867e-06, 8.346999999998828e-06, 8.346999999998828e-06, 8.375000000001437e-06, 8.346999999998828e-06, 8.416000000004142e-06, 8.403000000004046e-06, 8.34800000000524e-06, 8.346999999998828e-06, 8.332999999999258e-06, 8.333999999998731e-06, 8.346999999998828e-06]</msg>
<status status="PASS" starttime="20201115 22:01:09.265" endtime="20201115 22:01:09.267"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.260" endtime="20201115 22:01:09.268"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:09.270" endtime="20201115 22:01:09.271"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:09.273" endtime="20201115 22:01:09.292"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.272" endtime="20201115 22:01:09.293"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.268" endtime="20201115 22:01:09.294"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.897" endtime="20201115 22:01:09.294"></status>
</kw>
<msg timestamp="20201115 22:01:09.294" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:09.303" endtime="20201115 22:01:09.325"></status>
</kw>
<msg timestamp="20201115 22:01:09.325" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:09.302" endtime="20201115 22:01:09.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:09.327" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:09.326" endtime="20201115 22:01:09.328"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:09.329" endtime="20201115 22:01:09.331"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.299" endtime="20201115 22:01:09.332"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.297" endtime="20201115 22:01:09.332"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:09.338" endtime="20201115 22:01:09.624"></status>
</kw>
<msg timestamp="20201115 22:01:09.627" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020235542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020243875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:09.337" endtime="20201115 22:01:09.627"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:09.635" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020235542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020243875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:09.628" endtime="20201115 22:01:09.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:09.636" endtime="20201115 22:01:09.638"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.334" endtime="20201115 22:01:09.638"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.333" endtime="20201115 22:01:09.639"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:09.643" level="INFO">${RESULT} = [{'time': 0.020243875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.333000000002727e-06, 'source_diff': 8.333000000002727e-06}, {'time': 0.020494028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:09.640" endtime="20201115 22:01:09.643"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:09.656" level="INFO">${OVERHEAD} = {'time': [0.020243875, 0.020494028, 0.020748708, 0.021002194, 0.021254542, 0.021504694, 0.021755861, 0.022009014, 0.022263389, 0.022517403, 0.022771833, 0.023027056, 0.023280611, 0.023530111, 0.023780...</msg>
<status status="PASS" starttime="20201115 22:01:09.644" endtime="20201115 22:01:09.657"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:09.661" level="INFO">NAME: 00-overhead-23-set</msg>
<status status="PASS" starttime="20201115 22:01:09.660" endtime="20201115 22:01:09.661"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:09.663" level="INFO">VALUE: [8.333000000002727e-06, 8.3340000000022e-06, 8.333000000002727e-06, 8.346999999998828e-06, 8.34800000000177e-06, 8.333000000002727e-06, 8.318999999999688e-06, 8.417000000000147e-06, 8.347000000002297e-06, 8.346999999998828e-06, 8.346999999998828e-06, 8.3340000000022e-06, 8.278000000000452e-06, 8.346999999998828e-06, 8.346999999998828e-06, 8.318999999999688e-06, 8.305999999999591e-06, 8.346999999998828e-06, 8.361000000001867e-06, 8.318999999999688e-06, 8.318999999999688e-06, 8.361000000001867e-06, 8.346999999998828e-06, 8.333000000002727e-06, 8.346999999998828e-06, 8.347999999998301e-06, 8.361000000001867e-06, 8.346999999998828e-06, 8.361000000001867e-06, 8.347000000002297e-06, 8.291000000000548e-06, 8.388999999997537e-06, 8.332999999999258e-06, 8.347000000002297e-06, 8.346999999998828e-06, 8.305000000000118e-06, 8.347000000002297e-06, 8.332999999999258e-06, 8.332999999999258e-06, 8.291000000000548e-06, 8.292000000000022e-06, 8.361000000001867e-06, 8.318999999999688e-06, 8.332999999999258e-06, 8.347000000005766e-06, 8.388999999997537e-06, 8.332999999999258e-06, 8.33400000000567e-06, 8.346999999998828e-06, 8.360999999998397e-06]</msg>
<status status="PASS" starttime="20201115 22:01:09.662" endtime="20201115 22:01:09.664"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.657" endtime="20201115 22:01:09.664"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:09.666" endtime="20201115 22:01:09.668"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:09.670" endtime="20201115 22:01:09.690"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.669" endtime="20201115 22:01:09.690"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.665" endtime="20201115 22:01:09.691"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.295" endtime="20201115 22:01:09.691"></status>
</kw>
<msg timestamp="20201115 22:01:09.691" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:09.700" endtime="20201115 22:01:09.722"></status>
</kw>
<msg timestamp="20201115 22:01:09.722" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:09.699" endtime="20201115 22:01:09.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:09.724" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:09.723" endtime="20201115 22:01:09.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:09.726" endtime="20201115 22:01:09.728"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.696" endtime="20201115 22:01:09.729"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.694" endtime="20201115 22:01:09.729"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:09.735" endtime="20201115 22:01:10.021"></status>
</kw>
<msg timestamp="20201115 22:01:10.025" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019896764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019905083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:09.734" endtime="20201115 22:01:10.025"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:10.033" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019896764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019905083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:10.026" endtime="20201115 22:01:10.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:10.034" endtime="20201115 22:01:10.035"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.731" endtime="20201115 22:01:10.036"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.730" endtime="20201115 22:01:10.036"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:10.040" level="INFO">${RESULT} = [{'time': 0.019905083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.318999999999688e-06, 'source_diff': 8.318999999999688e-06}, {'time': 0.020161722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:10.037" endtime="20201115 22:01:10.041"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:10.055" level="INFO">${OVERHEAD} = {'time': [0.019905083, 0.020161722, 0.020413375, 0.020664083, 0.020916917, 0.021166111, 0.021420389, 0.021675208, 0.021931556, 0.022181028, 0.022435889, 0.022690583, 0.022941444, 0.023192528, 0.023443...</msg>
<status status="PASS" starttime="20201115 22:01:10.041" endtime="20201115 22:01:10.055"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:10.059" level="INFO">NAME: 00-overhead-23-set</msg>
<status status="PASS" starttime="20201115 22:01:10.058" endtime="20201115 22:01:10.060"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:10.062" level="INFO">VALUE: [8.318999999999688e-06, 8.346999999998828e-06, 8.292000000000022e-06, 8.346999999998828e-06, 8.34800000000177e-06, 8.347000000002297e-06, 8.431000000003186e-06, 8.333000000002727e-06, 8.34800000000177e-06, 8.388999999997537e-06, 8.346999999998828e-06, 8.346999999998828e-06, 8.346999999998828e-06, 8.333999999998731e-06, 8.346999999998828e-06, 8.347000000002297e-06, 8.360999999998397e-06, 8.346999999998828e-06, 8.346999999998828e-06, 8.34800000000177e-06, 8.305000000000118e-06, 8.347000000002297e-06, 8.34800000000177e-06, 8.34800000000177e-06, 8.278000000000452e-06, 8.361000000001867e-06, 8.417000000000147e-06, 8.360999999998397e-06, 8.319999999999161e-06, 8.346999999998828e-06, 8.360999999998397e-06, 8.34800000000177e-06, 8.3340000000022e-06, 8.346999999998828e-06, 8.332999999999258e-06, 8.347999999998301e-06, 8.319999999999161e-06, 8.360999999998397e-06, 8.292000000000022e-06, 8.347000000002297e-06, 8.346999999998828e-06, 8.332999999999258e-06, 8.360999999998397e-06, 8.360999999998397e-06, 8.374999999997967e-06, 8.347000000005766e-06, 8.264000000000882e-06, 8.319999999999161e-06, 8.361000000005336e-06, 8.361000000005336e-06]</msg>
<status status="PASS" starttime="20201115 22:01:10.060" endtime="20201115 22:01:10.062"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.056" endtime="20201115 22:01:10.063"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:10.065" endtime="20201115 22:01:10.067"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:10.069" endtime="20201115 22:01:10.088"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.067" endtime="20201115 22:01:10.089"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.064" endtime="20201115 22:01:10.089"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.692" endtime="20201115 22:01:10.089"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.046" endtime="20201115 22:01:10.090"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.045" endtime="20201115 22:01:10.090"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:10.092" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:10.101" endtime="20201115 22:01:10.123"></status>
</kw>
<msg timestamp="20201115 22:01:10.124" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:10.099" endtime="20201115 22:01:10.124"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:10.126" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:10.125" endtime="20201115 22:01:10.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:10.128" endtime="20201115 22:01:10.129"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.097" endtime="20201115 22:01:10.130"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.095" endtime="20201115 22:01:10.130"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:10.136" endtime="20201115 22:01:10.422"></status>
</kw>
<msg timestamp="20201115 22:01:10.426" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022222042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022230667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:10.135" endtime="20201115 22:01:10.426"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:10.434" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022222042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022230667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:10.427" endtime="20201115 22:01:10.434"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:10.435" endtime="20201115 22:01:10.436"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.132" endtime="20201115 22:01:10.437"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.131" endtime="20201115 22:01:10.437"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:10.442" level="INFO">${RESULT} = [{'time': 0.022230667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.624999999998217e-06, 'source_diff': 8.624999999998217e-06}, {'time': 0.022499153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:10.438" endtime="20201115 22:01:10.442"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:10.455" level="INFO">${OVERHEAD} = {'time': [0.022230667, 0.022499153, 0.022767681, 0.023036139, 0.023304347, 0.023565944, 0.023829861, 0.024091722, 0.024353569, 0.024615111, 0.024881028, 0.025144653, 0.025408778, 0.025672083, 0.025933...</msg>
<status status="PASS" starttime="20201115 22:01:10.443" endtime="20201115 22:01:10.455"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:10.459" level="INFO">NAME: 00-overhead-24-set</msg>
<status status="PASS" starttime="20201115 22:01:10.458" endtime="20201115 22:01:10.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:10.462" level="INFO">VALUE: [8.624999999998217e-06, 8.58400000000245e-06, 8.61200000000159e-06, 8.625000000001687e-06, 8.582999999999508e-06, 8.610999999998648e-06, 8.596999999999078e-06, 8.610999999998648e-06, 8.610999999998648e-06, 8.610999999998648e-06, 8.694999999999536e-06, 8.638999999997787e-06, 8.596999999999078e-06, 8.624999999998217e-06, 8.568999999999938e-06, 8.582999999999508e-06, 8.610999999998648e-06, 8.582999999999508e-06, 8.625000000001687e-06, 8.542000000000272e-06, 8.611000000002117e-06, 8.582999999999508e-06, 8.582999999999508e-06, 8.639000000001257e-06, 8.596999999999078e-06, 8.583000000002977e-06, 8.568999999999938e-06, 8.610999999998648e-06, 8.611000000002117e-06, 8.596999999999078e-06, 8.540999999997329e-06, 8.611000000002117e-06, 8.597999999998551e-06, 8.569999999999411e-06, 8.611000000002117e-06, 8.596999999999078e-06, 8.611000000005586e-06, 8.61200000000506e-06, 8.611999999998121e-06, 8.597999999998551e-06, 8.582999999999508e-06, 8.611999999998121e-06, 8.624999999998217e-06, 8.624999999998217e-06, 8.596999999999078e-06, 8.596999999999078e-06, 8.610999999998648e-06, 8.694000000003532e-06, 8.611000000005586e-06, 8.582999999999508e-06]</msg>
<status status="PASS" starttime="20201115 22:01:10.461" endtime="20201115 22:01:10.463"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.456" endtime="20201115 22:01:10.463"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:10.466" endtime="20201115 22:01:10.467"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:10.469" endtime="20201115 22:01:10.488"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.468" endtime="20201115 22:01:10.489"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.464" endtime="20201115 22:01:10.489"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.093" endtime="20201115 22:01:10.490"></status>
</kw>
<msg timestamp="20201115 22:01:10.490" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:10.499" endtime="20201115 22:01:10.520"></status>
</kw>
<msg timestamp="20201115 22:01:10.521" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:10.497" endtime="20201115 22:01:10.521"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:10.523" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:10.522" endtime="20201115 22:01:10.524"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:10.524" endtime="20201115 22:01:10.527"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.495" endtime="20201115 22:01:10.528"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.493" endtime="20201115 22:01:10.528"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:10.534" endtime="20201115 22:01:10.820"></status>
</kw>
<msg timestamp="20201115 22:01:10.823" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019902722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019911319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:10.533" endtime="20201115 22:01:10.823"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:10.831" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019902722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019911319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:10.824" endtime="20201115 22:01:10.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:10.833" endtime="20201115 22:01:10.834"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.530" endtime="20201115 22:01:10.835"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.529" endtime="20201115 22:01:10.835"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:10.839" level="INFO">${RESULT} = [{'time': 0.019911319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.596999999999078e-06, 'source_diff': 8.596999999999078e-06}, {'time': 0.020177931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:10.836" endtime="20201115 22:01:10.839"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:10.853" level="INFO">${OVERHEAD} = {'time': [0.019911319, 0.020177931, 0.020442333, 0.020708944, 0.020977389, 0.021241167, 0.021509194, 0.021776208, 0.022042569, 0.022311264, 0.022579236, 0.022846278, 0.023114542, 0.023379417, 0.023644...</msg>
<status status="PASS" starttime="20201115 22:01:10.840" endtime="20201115 22:01:10.857"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:10.862" level="INFO">NAME: 00-overhead-24-set</msg>
<status status="PASS" starttime="20201115 22:01:10.861" endtime="20201115 22:01:10.862"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:10.864" level="INFO">VALUE: [8.596999999999078e-06, 8.611999999998121e-06, 8.610999999998648e-06, 8.582999999999508e-06, 8.596999999999078e-06, 8.624999999998217e-06, 8.596999999999078e-06, 8.610999999998648e-06, 8.638000000001783e-06, 8.582999999999508e-06, 8.596999999999078e-06, 8.611000000002117e-06, 8.583999999998981e-06, 8.542000000000272e-06, 8.582999999999508e-06, 8.541000000000798e-06, 8.624999999998217e-06, 8.59800000000202e-06, 8.610999999998648e-06, 8.58400000000245e-06, 8.610999999998648e-06, 8.610999999998648e-06, 8.639000000001257e-06, 8.610999999998648e-06, 8.610999999998648e-06, 8.570000000002881e-06, 8.597999999998551e-06, 8.597000000002547e-06, 8.611000000002117e-06, 8.596999999999078e-06, 8.583999999998981e-06, 8.542000000000272e-06, 8.610999999998648e-06, 8.610999999998648e-06, 8.597999999998551e-06, 8.610999999998648e-06, 8.568999999999938e-06, 8.610999999998648e-06, 8.610999999998648e-06, 8.624999999998217e-06, 8.625000000001687e-06, 8.611000000002117e-06, 8.597000000002547e-06, 8.610999999998648e-06, 8.582999999999508e-06, 8.652999999997357e-06, 8.610999999998648e-06, 8.610999999998648e-06, 8.568999999999938e-06, 8.624999999998217e-06]</msg>
<status status="PASS" starttime="20201115 22:01:10.863" endtime="20201115 22:01:10.865"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.858" endtime="20201115 22:01:10.865"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:10.867" endtime="20201115 22:01:10.869"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:10.871" endtime="20201115 22:01:10.890"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.869" endtime="20201115 22:01:10.891"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.866" endtime="20201115 22:01:10.891"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.491" endtime="20201115 22:01:10.891"></status>
</kw>
<msg timestamp="20201115 22:01:10.892" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:10.901" endtime="20201115 22:01:10.922"></status>
</kw>
<msg timestamp="20201115 22:01:10.923" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:10.899" endtime="20201115 22:01:10.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:10.925" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:10.924" endtime="20201115 22:01:10.926"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:10.926" endtime="20201115 22:01:10.929"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.897" endtime="20201115 22:01:10.929"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.894" endtime="20201115 22:01:10.930"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:10.936" endtime="20201115 22:01:11.222"></status>
</kw>
<msg timestamp="20201115 22:01:11.225" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020160667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020169236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:10.935" endtime="20201115 22:01:11.225"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:11.233" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020160667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020169236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:11.226" endtime="20201115 22:01:11.234"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:11.234" endtime="20201115 22:01:11.236"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.932" endtime="20201115 22:01:11.237"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.931" endtime="20201115 22:01:11.237"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:11.241" level="INFO">${RESULT} = [{'time': 0.020169236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.568999999999938e-06, 'source_diff': 8.568999999999938e-06}, {'time': 0.020435069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:11.238" endtime="20201115 22:01:11.242"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:11.255" level="INFO">${OVERHEAD} = {'time': [0.020169236, 0.020435069, 0.020700972, 0.020966861, 0.0212315, 0.021499708, 0.021767681, 0.022035264, 0.022304014, 0.022565667, 0.022831097, 0.023095278, 0.023358319, 0.023621833, 0.02388536...</msg>
<status status="PASS" starttime="20201115 22:01:11.243" endtime="20201115 22:01:11.255"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:11.259" level="INFO">NAME: 00-overhead-24-set</msg>
<status status="PASS" starttime="20201115 22:01:11.258" endtime="20201115 22:01:11.260"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:11.262" level="INFO">VALUE: [8.568999999999938e-06, 8.610999999998648e-06, 8.597000000002547e-06, 8.653000000000827e-06, 8.596999999999078e-06, 8.596999999999078e-06, 8.61200000000159e-06, 8.624999999998217e-06, 8.611000000002117e-06, 8.639000000001257e-06, 8.666000000000923e-06, 8.596999999999078e-06, 8.610999999998648e-06, 8.610999999998648e-06, 8.611000000002117e-06, 8.610999999998648e-06, 8.596999999999078e-06, 8.583999999998981e-06, 8.666000000000923e-06, 8.611000000002117e-06, 8.596999999999078e-06, 8.597000000002547e-06, 8.596999999999078e-06, 8.59800000000202e-06, 8.639000000001257e-06, 8.583999999998981e-06, 8.611000000002117e-06, 8.624999999998217e-06, 8.59800000000202e-06, 8.610999999998648e-06, 8.610999999998648e-06, 8.611000000002117e-06, 8.528000000000702e-06, 8.555999999999842e-06, 8.569999999999411e-06, 8.638000000001783e-06, 8.61200000000159e-06, 8.639000000001257e-06, 8.638999999997787e-06, 8.624999999998217e-06, 8.528000000000702e-06, 8.582999999999508e-06, 8.597999999998551e-06, 8.624999999998217e-06, 8.61200000000506e-06, 8.596999999999078e-06, 8.625000000005156e-06, 8.610999999998648e-06, 8.596999999999078e-06, 8.569999999999411e-06]</msg>
<status status="PASS" starttime="20201115 22:01:11.261" endtime="20201115 22:01:11.262"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.256" endtime="20201115 22:01:11.263"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:11.265" endtime="20201115 22:01:11.266"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:11.268" endtime="20201115 22:01:11.288"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.267" endtime="20201115 22:01:11.288"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.263" endtime="20201115 22:01:11.289"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.892" endtime="20201115 22:01:11.289"></status>
</kw>
<msg timestamp="20201115 22:01:11.289" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:11.298" endtime="20201115 22:01:11.319"></status>
</kw>
<msg timestamp="20201115 22:01:11.320" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:11.297" endtime="20201115 22:01:11.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:11.322" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:11.321" endtime="20201115 22:01:11.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:11.323" endtime="20201115 22:01:11.326"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.294" endtime="20201115 22:01:11.326"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.292" endtime="20201115 22:01:11.327"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:11.333" endtime="20201115 22:01:11.619"></status>
</kw>
<msg timestamp="20201115 22:01:11.622" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019974569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019983167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:11.332" endtime="20201115 22:01:11.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:11.630" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019974569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019983167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:11.623" endtime="20201115 22:01:11.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:11.632" endtime="20201115 22:01:11.633"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.329" endtime="20201115 22:01:11.634"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.327" endtime="20201115 22:01:11.634"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:11.639" level="INFO">${RESULT} = [{'time': 0.019983167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.597999999998551e-06, 'source_diff': 8.597999999998551e-06}, {'time': 0.020245972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:11.635" endtime="20201115 22:01:11.639"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:11.653" level="INFO">${OVERHEAD} = {'time': [0.019983167, 0.020245972, 0.020509056, 0.020773028, 0.021041222, 0.021308083, 0.021570556, 0.021834792, 0.022098236, 0.022364611, 0.022632361, 0.022901028, 0.023162889, 0.023430861, 0.023696...</msg>
<status status="PASS" starttime="20201115 22:01:11.639" endtime="20201115 22:01:11.653"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:11.657" level="INFO">NAME: 00-overhead-24-set</msg>
<status status="PASS" starttime="20201115 22:01:11.656" endtime="20201115 22:01:11.658"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:11.660" level="INFO">VALUE: [8.597999999998551e-06, 8.611000000002117e-06, 8.653000000000827e-06, 8.624999999998217e-06, 8.610999999998648e-06, 8.624999999998217e-06, 8.59800000000202e-06, 8.610999999998648e-06, 8.542000000000272e-06, 8.596999999999078e-06, 8.625000000001687e-06, 8.583999999998981e-06, 8.610999999998648e-06, 8.611000000002117e-06, 8.58400000000245e-06, 8.624999999998217e-06, 8.596999999999078e-06, 8.597000000002547e-06, 8.610999999998648e-06, 8.610999999998648e-06, 8.596999999999078e-06, 8.59800000000202e-06, 8.610999999998648e-06, 8.568999999999938e-06, 8.611000000002117e-06, 8.610999999998648e-06, 8.597999999998551e-06, 8.596999999999078e-06, 8.625000000001687e-06, 8.596999999999078e-06, 8.596999999999078e-06, 8.596999999999078e-06, 8.610999999998648e-06, 8.625000000001687e-06, 8.610999999998648e-06, 8.610999999998648e-06, 8.610999999998648e-06, 8.597000000002547e-06, 8.597000000002547e-06, 8.610999999998648e-06, 8.596999999999078e-06, 8.610999999998648e-06, 8.59800000000202e-06, 8.611000000005586e-06, 8.542000000000272e-06, 8.610999999998648e-06, 8.680999999996497e-06, 8.652999999997357e-06, 8.624999999998217e-06, 8.541000000000798e-06]</msg>
<status status="PASS" starttime="20201115 22:01:11.658" endtime="20201115 22:01:11.660"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.654" endtime="20201115 22:01:11.661"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:11.663" endtime="20201115 22:01:11.664"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:11.666" endtime="20201115 22:01:11.686"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.665" endtime="20201115 22:01:11.686"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.661" endtime="20201115 22:01:11.687"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.290" endtime="20201115 22:01:11.687"></status>
</kw>
<msg timestamp="20201115 22:01:11.687" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:11.696" endtime="20201115 22:01:11.720"></status>
</kw>
<msg timestamp="20201115 22:01:11.720" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:11.694" endtime="20201115 22:01:11.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:11.723" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:11.721" endtime="20201115 22:01:11.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:11.724" endtime="20201115 22:01:11.726"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.692" endtime="20201115 22:01:11.727"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.690" endtime="20201115 22:01:11.727"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:11.734" endtime="20201115 22:01:12.020"></status>
</kw>
<msg timestamp="20201115 22:01:12.023" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019948167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019956819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:11.732" endtime="20201115 22:01:12.024"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:12.032" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019948167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019956819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:12.025" endtime="20201115 22:01:12.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:12.033" endtime="20201115 22:01:12.035"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.730" endtime="20201115 22:01:12.035"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.728" endtime="20201115 22:01:12.036"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:12.040" level="INFO">${RESULT} = [{'time': 0.019956819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.652000000001353e-06, 'source_diff': 8.652000000001353e-06}, {'time': 0.020223667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:12.037" endtime="20201115 22:01:12.040"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:12.053" level="INFO">${OVERHEAD} = {'time': [0.019956819, 0.020223667, 0.020488347, 0.020755361, 0.021023556, 0.021288194, 0.021556944, 0.021818597, 0.022083194, 0.022349833, 0.0226135, 0.022880347, 0.023142208, 0.023410722, 0.02367773...</msg>
<status status="PASS" starttime="20201115 22:01:12.041" endtime="20201115 22:01:12.053"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:12.058" level="INFO">NAME: 00-overhead-24-set</msg>
<status status="PASS" starttime="20201115 22:01:12.057" endtime="20201115 22:01:12.058"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:12.060" level="INFO">VALUE: [8.652000000001353e-06, 8.653000000000827e-06, 8.625000000001687e-06, 8.596999999999078e-06, 8.611999999998121e-06, 8.596999999999078e-06, 8.597000000002547e-06, 8.582999999999508e-06, 8.596999999999078e-06, 8.624999999998217e-06, 8.568999999999938e-06, 8.596999999999078e-06, 8.555000000000368e-06, 8.610999999998648e-06, 8.597000000002547e-06, 8.610999999998648e-06, 8.638999999997787e-06, 8.610999999998648e-06, 8.611000000002117e-06, 8.555000000000368e-06, 8.582999999999508e-06, 8.597000000002547e-06, 8.582999999999508e-06, 8.597999999998551e-06, 8.58400000000245e-06, 8.583000000002977e-06, 8.667000000000397e-06, 8.596999999999078e-06, 8.611000000002117e-06, 8.610999999998648e-06, 8.625000000001687e-06, 8.596999999999078e-06, 8.610999999998648e-06, 8.611000000002117e-06, 8.597000000002547e-06, 8.596999999999078e-06, 8.639000000001257e-06, 8.610999999998648e-06, 8.597999999998551e-06, 8.513000000001658e-06, 8.610999999998648e-06, 8.611000000002117e-06, 8.597999999998551e-06, 8.597000000006016e-06, 8.596999999999078e-06, 8.596999999999078e-06, 8.596999999999078e-06, 8.596999999999078e-06, 8.583999999998981e-06, 8.596999999999078e-06]</msg>
<status status="PASS" starttime="20201115 22:01:12.059" endtime="20201115 22:01:12.061"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.054" endtime="20201115 22:01:12.061"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:12.063" endtime="20201115 22:01:12.065"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:12.067" endtime="20201115 22:01:12.086"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.065" endtime="20201115 22:01:12.087"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.062" endtime="20201115 22:01:12.087"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.688" endtime="20201115 22:01:12.088"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.091" endtime="20201115 22:01:12.088"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.090" endtime="20201115 22:01:12.088"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:12.090" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:12.099" endtime="20201115 22:01:12.122"></status>
</kw>
<msg timestamp="20201115 22:01:12.123" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:12.097" endtime="20201115 22:01:12.123"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:12.125" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:12.124" endtime="20201115 22:01:12.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:12.127" endtime="20201115 22:01:12.128"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.095" endtime="20201115 22:01:12.129"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.093" endtime="20201115 22:01:12.129"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:12.136" endtime="20201115 22:01:12.422"></status>
</kw>
<msg timestamp="20201115 22:01:12.425" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022406014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022414889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:12.134" endtime="20201115 22:01:12.425"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:12.433" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022406014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022414889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:12.426" endtime="20201115 22:01:12.433"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:12.434" endtime="20201115 22:01:12.436"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.132" endtime="20201115 22:01:12.436"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.130" endtime="20201115 22:01:12.437"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:12.441" level="INFO">${RESULT} = [{'time': 0.022414889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.875000000001937e-06, 'source_diff': 8.875000000001937e-06}, {'time': 0.022694042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:12.437" endtime="20201115 22:01:12.441"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:12.454" level="INFO">${OVERHEAD} = {'time': [0.022414889, 0.022694042, 0.022971056, 0.023247875, 0.023523028, 0.023800069, 0.024078028, 0.024358125, 0.024633486, 0.024913875, 0.025191417, 0.025467486, 0.025744042, 0.026018736, 0.026294...</msg>
<status status="PASS" starttime="20201115 22:01:12.442" endtime="20201115 22:01:12.454"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:12.459" level="INFO">NAME: 00-overhead-25-set</msg>
<status status="PASS" starttime="20201115 22:01:12.458" endtime="20201115 22:01:12.459"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:12.461" level="INFO">VALUE: [8.875000000001937e-06, 8.889000000001507e-06, 8.889000000001507e-06, 8.832999999999758e-06, 8.917000000000647e-06, 8.874999999998467e-06, 8.875000000001937e-06, 8.832999999999758e-06, 8.874999999998467e-06, 8.860999999998898e-06, 8.875000000001937e-06, 8.861000000002367e-06, 8.875000000001937e-06, 8.889000000001507e-06, 8.875000000001937e-06, 8.860999999998898e-06, 8.875000000001937e-06, 8.833999999999231e-06, 8.875000000001937e-06, 8.888999999998037e-06, 8.889000000001507e-06, 8.846999999999328e-06, 8.861000000002367e-06, 8.874999999998467e-06, 8.874999999998467e-06, 8.805000000000618e-06, 8.875000000001937e-06, 8.903000000001077e-06, 8.874999999998467e-06, 8.888999999998037e-06, 8.778000000000952e-06, 8.846999999999328e-06, 8.888999999998037e-06, 8.930999999996747e-06, 8.860999999998898e-06, 8.875000000005406e-06, 8.902999999997607e-06, 8.860999999998898e-06, 8.846999999999328e-06, 8.832999999999758e-06, 8.860999999998898e-06, 8.832999999999758e-06, 8.888999999998037e-06, 8.874999999998467e-06, 8.888999999998037e-06, 8.889000000004976e-06, 8.874999999998467e-06, 8.860999999998898e-06, 8.833999999999231e-06, 8.874999999998467e-06]</msg>
<status status="PASS" starttime="20201115 22:01:12.460" endtime="20201115 22:01:12.461"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.455" endtime="20201115 22:01:12.462"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:12.464" endtime="20201115 22:01:12.466"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:12.468" endtime="20201115 22:01:12.487"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.466" endtime="20201115 22:01:12.488"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.463" endtime="20201115 22:01:12.488"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.091" endtime="20201115 22:01:12.488"></status>
</kw>
<msg timestamp="20201115 22:01:12.489" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:12.497" endtime="20201115 22:01:12.519"></status>
</kw>
<msg timestamp="20201115 22:01:12.520" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:12.496" endtime="20201115 22:01:12.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:12.523" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:12.521" endtime="20201115 22:01:12.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:12.524" endtime="20201115 22:01:12.526"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.493" endtime="20201115 22:01:12.527"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.491" endtime="20201115 22:01:12.527"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:12.534" endtime="20201115 22:01:12.820"></status>
</kw>
<msg timestamp="20201115 22:01:12.823" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01993475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019943625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:01:12.532" endtime="20201115 22:01:12.823"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:12.831" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01993475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019943625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:01:12.824" endtime="20201115 22:01:12.831"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:12.832" endtime="20201115 22:01:12.834"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.530" endtime="20201115 22:01:12.834"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.528" endtime="20201115 22:01:12.835"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:12.839" level="INFO">${RESULT} = [{'time': 0.019943625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.874999999998467e-06, 'source_diff': 8.874999999998467e-06}, {'time': 0.020220222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:12.835" endtime="20201115 22:01:12.839"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:12.852" level="INFO">${OVERHEAD} = {'time': [0.019943625, 0.020220222, 0.020500875, 0.020777403, 0.021051889, 0.021327681, 0.021606431, 0.021886792, 0.022164264, 0.022445861, 0.022723347, 0.023003694, 0.023282667, 0.023561889, 0.023838...</msg>
<status status="PASS" starttime="20201115 22:01:12.840" endtime="20201115 22:01:12.852"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:12.857" level="INFO">NAME: 00-overhead-25-set</msg>
<status status="PASS" starttime="20201115 22:01:12.855" endtime="20201115 22:01:12.857"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:12.859" level="INFO">VALUE: [8.874999999998467e-06, 8.791000000001048e-06, 8.874999999998467e-06, 8.860999999998898e-06, 8.889000000001507e-06, 8.8340000000027e-06, 8.874999999998467e-06, 8.888999999998037e-06, 8.860999999998898e-06, 8.875000000001937e-06, 8.875000000001937e-06, 8.875000000001937e-06, 8.860999999998898e-06, 8.874999999998467e-06, 8.819999999999661e-06, 8.860999999998898e-06, 8.874999999998467e-06, 8.846999999999328e-06, 8.874999999998467e-06, 8.860999999998898e-06, 8.806000000000092e-06, 8.889000000001507e-06, 8.861000000002367e-06, 8.874999999998467e-06, 8.875000000001937e-06, 8.861999999998371e-06, 8.888999999998037e-06, 8.888999999998037e-06, 8.819999999999661e-06, 8.860999999998898e-06, 8.875000000001937e-06, 8.903000000001077e-06, 8.874999999998467e-06, 8.861000000002367e-06, 8.875000000001937e-06, 8.846999999999328e-06, 8.874999999998467e-06, 8.874999999998467e-06, 8.944000000000313e-06, 8.874999999998467e-06, 8.860999999998898e-06, 8.874999999998467e-06, 8.874999999998467e-06, 8.860999999998898e-06, 8.860999999998898e-06, 8.860999999998898e-06, 8.792000000000522e-06, 8.846999999999328e-06, 8.874999999998467e-06, 8.860999999998898e-06]</msg>
<status status="PASS" starttime="20201115 22:01:12.858" endtime="20201115 22:01:12.859"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.853" endtime="20201115 22:01:12.860"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:12.862" endtime="20201115 22:01:12.863"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:12.865" endtime="20201115 22:01:12.885"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.864" endtime="20201115 22:01:12.886"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.860" endtime="20201115 22:01:12.886"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.489" endtime="20201115 22:01:12.887"></status>
</kw>
<msg timestamp="20201115 22:01:12.887" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:12.896" endtime="20201115 22:01:12.921"></status>
</kw>
<msg timestamp="20201115 22:01:12.922" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:12.894" endtime="20201115 22:01:12.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:12.924" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:12.923" endtime="20201115 22:01:12.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:12.925" endtime="20201115 22:01:12.928"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.892" endtime="20201115 22:01:12.928"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.890" endtime="20201115 22:01:12.929"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:12.935" endtime="20201115 22:01:13.221"></status>
</kw>
<msg timestamp="20201115 22:01:13.224" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021851264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021860125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:12.934" endtime="20201115 22:01:13.225"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:13.233" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021851264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021860125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:13.226" endtime="20201115 22:01:13.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:13.234" endtime="20201115 22:01:13.235"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.931" endtime="20201115 22:01:13.236"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.929" endtime="20201115 22:01:13.236"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:13.240" level="INFO">${RESULT} = [{'time': 0.021860125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.861000000002367e-06, 'source_diff': 8.861000000002367e-06}, {'time': 0.022134347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:13.237" endtime="20201115 22:01:13.241"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:13.255" level="INFO">${OVERHEAD} = {'time': [0.021860125, 0.022134347, 0.022409944, 0.022685986, 0.022963069, 0.023237764, 0.023516931, 0.023792972, 0.024067486, 0.024345222, 0.024623722, 0.024904861, 0.025184958, 0.025460611, 0.025740...</msg>
<status status="PASS" starttime="20201115 22:01:13.241" endtime="20201115 22:01:13.255"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:13.259" level="INFO">NAME: 00-overhead-25-set</msg>
<status status="PASS" starttime="20201115 22:01:13.258" endtime="20201115 22:01:13.260"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:13.262" level="INFO">VALUE: [8.861000000002367e-06, 8.860999999998898e-06, 8.888000000002033e-06, 8.875000000001937e-06, 8.874999999998467e-06, 8.875000000001937e-06, 8.889000000001507e-06, 8.860999999998898e-06, 8.917000000000647e-06, 8.874999999998467e-06, 8.861000000002367e-06, 8.846999999999328e-06, 8.860999999998898e-06, 8.861000000002367e-06, 8.889000000001507e-06, 8.860999999998898e-06, 8.861000000002367e-06, 8.888999999998037e-06, 8.861999999998371e-06, 8.874999999998467e-06, 8.889000000001507e-06, 8.860999999998898e-06, 8.874999999998467e-06, 8.861000000002367e-06, 8.86200000000184e-06, 8.915999999997704e-06, 8.86200000000184e-06, 8.846999999999328e-06, 8.874999999998467e-06, 8.874999999998467e-06, 8.860999999998898e-06, 8.875000000001937e-06, 8.860999999998898e-06, 8.874999999998467e-06, 8.860999999998898e-06, 8.902999999997607e-06, 8.874999999998467e-06, 8.860999999998898e-06, 8.874999999998467e-06, 8.874999999998467e-06, 8.860999999998898e-06, 8.875000000005406e-06, 8.860999999998898e-06, 8.860999999998898e-06, 8.846999999999328e-06, 8.860999999998898e-06, 8.860999999998898e-06, 8.819000000000188e-06, 8.860999999998898e-06, 8.875000000005406e-06]</msg>
<status status="PASS" starttime="20201115 22:01:13.260" endtime="20201115 22:01:13.262"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.256" endtime="20201115 22:01:13.263"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:13.265" endtime="20201115 22:01:13.266"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:13.268" endtime="20201115 22:01:13.288"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.267" endtime="20201115 22:01:13.288"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.263" endtime="20201115 22:01:13.289"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.887" endtime="20201115 22:01:13.289"></status>
</kw>
<msg timestamp="20201115 22:01:13.289" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:13.299" endtime="20201115 22:01:13.322"></status>
</kw>
<msg timestamp="20201115 22:01:13.322" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:13.297" endtime="20201115 22:01:13.322"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:13.325" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:13.323" endtime="20201115 22:01:13.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:13.326" endtime="20201115 22:01:13.328"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.294" endtime="20201115 22:01:13.329"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.292" endtime="20201115 22:01:13.329"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:13.336" endtime="20201115 22:01:13.621"></status>
</kw>
<msg timestamp="20201115 22:01:13.624" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020394611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020403444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:13.334" endtime="20201115 22:01:13.625"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:13.632" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020394611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020403444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:13.626" endtime="20201115 22:01:13.633"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:13.634" endtime="20201115 22:01:13.635"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.332" endtime="20201115 22:01:13.636"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.330" endtime="20201115 22:01:13.636"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:13.640" level="INFO">${RESULT} = [{'time': 0.020403444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.832999999999758e-06, 'source_diff': 8.832999999999758e-06}, {'time': 0.020679347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:13.637" endtime="20201115 22:01:13.641"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:13.654" level="INFO">${OVERHEAD} = {'time': [0.020403444, 0.020679347, 0.020953486, 0.021230986, 0.021506556, 0.021781722, 0.022056181, 0.022336306, 0.022614986, 0.02289325, 0.023170792, 0.023445181, 0.023726722, 0.024000875, 0.0242785...</msg>
<status status="PASS" starttime="20201115 22:01:13.641" endtime="20201115 22:01:13.654"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:13.658" level="INFO">NAME: 00-overhead-25-set</msg>
<status status="PASS" starttime="20201115 22:01:13.657" endtime="20201115 22:01:13.659"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:13.661" level="INFO">VALUE: [8.832999999999758e-06, 8.875000000001937e-06, 8.846999999999328e-06, 8.875000000001937e-06, 8.861999999998371e-06, 8.846999999999328e-06, 8.792000000000522e-06, 8.889000000001507e-06, 8.889000000001507e-06, 8.889000000001507e-06, 8.860999999998898e-06, 8.874999999998467e-06, 8.874999999998467e-06, 8.875000000001937e-06, 8.832999999999758e-06, 8.874999999998467e-06, 8.874999999998467e-06, 8.860999999998898e-06, 8.874999999998467e-06, 8.874999999998467e-06, 8.875000000001937e-06, 8.875000000001937e-06, 8.805000000000618e-06, 8.860999999998898e-06, 8.903000000001077e-06, 8.874999999998467e-06, 8.860999999998898e-06, 8.944000000000313e-06, 8.792000000000522e-06, 8.889000000001507e-06, 8.833999999999231e-06, 8.875000000001937e-06, 8.874999999998467e-06, 8.833999999999231e-06, 8.832999999999758e-06, 8.903000000001077e-06, 8.888999999998037e-06, 8.861000000002367e-06, 8.861000000002367e-06, 8.846999999999328e-06, 8.874999999998467e-06, 8.875000000005406e-06, 8.861000000005836e-06, 8.875000000005406e-06, 8.874999999998467e-06, 8.917000000004116e-06, 8.86200000000531e-06, 8.861000000005836e-06, 8.875000000005406e-06, 8.888999999998037e-06]</msg>
<status status="PASS" starttime="20201115 22:01:13.659" endtime="20201115 22:01:13.661"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.655" endtime="20201115 22:01:13.662"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:13.664" endtime="20201115 22:01:13.666"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:13.668" endtime="20201115 22:01:13.687"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.666" endtime="20201115 22:01:13.688"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.662" endtime="20201115 22:01:13.688"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.290" endtime="20201115 22:01:13.689"></status>
</kw>
<msg timestamp="20201115 22:01:13.689" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:13.698" endtime="20201115 22:01:13.720"></status>
</kw>
<msg timestamp="20201115 22:01:13.721" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:13.696" endtime="20201115 22:01:13.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:13.723" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:13.722" endtime="20201115 22:01:13.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:13.724" endtime="20201115 22:01:13.727"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.693" endtime="20201115 22:01:13.727"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.691" endtime="20201115 22:01:13.728"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:13.734" endtime="20201115 22:01:14.020"></status>
</kw>
<msg timestamp="20201115 22:01:14.023" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019962361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019971222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:13.732" endtime="20201115 22:01:14.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:14.031" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019962361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019971222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:14.024" endtime="20201115 22:01:14.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:14.032" endtime="20201115 22:01:14.034"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.730" endtime="20201115 22:01:14.034"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.728" endtime="20201115 22:01:14.035"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:14.039" level="INFO">${RESULT} = [{'time': 0.019971222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.860999999998898e-06, 'source_diff': 8.860999999998898e-06}, {'time': 0.020246556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:14.036" endtime="20201115 22:01:14.039"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:14.052" level="INFO">${OVERHEAD} = {'time': [0.019971222, 0.020246556, 0.020526681, 0.020805583, 0.021083375, 0.02136425, 0.021640319, 0.021919944, 0.022198917, 0.022478667, 0.022755222, 0.023035167, 0.023311542, 0.023589958, 0.0238672...</msg>
<status status="PASS" starttime="20201115 22:01:14.040" endtime="20201115 22:01:14.052"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:14.057" level="INFO">NAME: 00-overhead-25-set</msg>
<status status="PASS" starttime="20201115 22:01:14.056" endtime="20201115 22:01:14.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:14.059" level="INFO">VALUE: [8.860999999998898e-06, 8.874999999998467e-06, 8.889000000001507e-06, 8.860999999998898e-06, 8.861000000002367e-06, 8.792000000000522e-06, 8.875000000001937e-06, 8.860999999998898e-06, 8.860999999998898e-06, 8.903000000001077e-06, 8.860999999998898e-06, 8.874999999998467e-06, 8.875000000001937e-06, 8.861000000002367e-06, 8.888999999998037e-06, 8.874999999998467e-06, 8.875000000001937e-06, 8.888999999998037e-06, 8.846999999999328e-06, 8.832999999999758e-06, 8.875000000001937e-06, 8.846999999999328e-06, 8.874999999998467e-06, 8.875000000001937e-06, 8.861000000002367e-06, 8.86200000000184e-06, 8.861000000002367e-06, 8.874999999998467e-06, 8.819999999999661e-06, 8.86200000000184e-06, 8.860999999998898e-06, 8.861999999998371e-06, 8.861000000002367e-06, 8.874999999998467e-06, 8.861000000002367e-06, 8.860999999998898e-06, 8.888999999998037e-06, 8.860999999998898e-06, 8.875000000001937e-06, 8.875000000001937e-06, 8.792000000000522e-06, 8.903000000004546e-06, 8.875000000005406e-06, 8.875000000005406e-06, 8.860999999998898e-06, 8.874999999998467e-06, 8.861000000005836e-06, 8.875000000005406e-06, 8.874999999998467e-06, 8.860999999998898e-06]</msg>
<status status="PASS" starttime="20201115 22:01:14.058" endtime="20201115 22:01:14.060"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.053" endtime="20201115 22:01:14.061"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:14.063" endtime="20201115 22:01:14.064"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:14.066" endtime="20201115 22:01:14.086"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.065" endtime="20201115 22:01:14.086"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.061" endtime="20201115 22:01:14.087"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.689" endtime="20201115 22:01:14.087"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.089" endtime="20201115 22:01:14.087"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.088" endtime="20201115 22:01:14.087"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.373" endtime="20201115 22:01:14.088"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="teardown">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:14.092" endtime="20201115 22:01:14.111"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.090" endtime="20201115 22:01:14.112"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.089" endtime="20201115 22:01:14.112"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:00:21.275" endtime="20201115 22:01:14.113" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Remove List">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:14.120" endtime="20201115 22:01:14.140"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.119" endtime="20201115 22:01:14.140"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:14.154" endtime="20201115 22:01:17.176"></status>
</kw>
<msg timestamp="20201115 22:01:17.177" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:14.152" endtime="20201115 22:01:17.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:17.182" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:17.179" endtime="20201115 22:01:17.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:01:17.188" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:01:17.184" endtime="20201115 22:01:17.188"></status>
</kw>
<status status="FAIL" starttime="20201115 22:01:14.150" endtime="20201115 22:01:17.190"></status>
</kw>
<status status="FAIL" starttime="20201115 22:01:14.147" endtime="20201115 22:01:17.191"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.145" endtime="20201115 22:01:17.192"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:01:17.199" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:01:17.198" endtime="20201115 22:01:17.200"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.193" endtime="20201115 22:01:17.200"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.144" endtime="20201115 22:01:17.201"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.144" endtime="20201115 22:01:17.201"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:17.203" endtime="20201115 22:01:17.206"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.142" endtime="20201115 22:01:17.207"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.141" endtime="20201115 22:01:17.208"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.117" endtime="20201115 22:01:17.208"></status>
</kw>
<kw name="${n} IN RANGE [ 25 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:17.215" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:17.234" endtime="20201115 22:01:17.248"></status>
</kw>
<msg timestamp="20201115 22:01:17.249" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:17.231" endtime="20201115 22:01:17.249"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:17.254" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:17.251" endtime="20201115 22:01:17.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:17.256" endtime="20201115 22:01:17.259"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.225" endtime="20201115 22:01:17.260"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.220" endtime="20201115 22:01:17.261"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:17.276" endtime="20201115 22:01:17.571"></status>
</kw>
<msg timestamp="20201115 22:01:17.574" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.105834986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.105838833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:17.274" endtime="20201115 22:01:17.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:17.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.105834986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.105838833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:17.575" endtime="20201115 22:01:17.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:17.583" endtime="20201115 22:01:17.585"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.266" endtime="20201115 22:01:17.585"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.263" endtime="20201115 22:01:17.586"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:17.590" level="INFO">${RESULT} = [{'time': 3.105838833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.846999999890244e-06, 'source_diff': 3.846999999890244e-06}, {'time': 3.105889958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:17.587" endtime="20201115 22:01:17.590"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:17.603" level="INFO">${OVERHEAD} = {'time': [3.105838833, 3.105889958, 3.105934847, 3.105985, 3.106034847, 3.106081653, 3.106133403, 3.106180625, 3.106230306, 3.106281611, 3.106327431, 3.106378278, 3.106425208, 3.106469861, 3.106521681...</msg>
<status status="PASS" starttime="20201115 22:01:17.591" endtime="20201115 22:01:17.603"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:17.608" level="INFO">NAME: 00-overhead-1-remove</msg>
<status status="PASS" starttime="20201115 22:01:17.607" endtime="20201115 22:01:17.608"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:17.610" level="INFO">VALUE: [3.846999999890244e-06, 3.889000000256715e-06, 3.860999999716341e-06, 3.874999999986528e-06, 3.874999999986528e-06, 3.874999999986528e-06, 3.846999999890244e-06, 3.860999999716341e-06, 3.862000000243171e-06, 3.874999999986528e-06, 3.861999999799082e-06, 3.917000000352999e-06, 3.874999999986528e-06, 3.860999999716341e-06, 3.874999999986528e-06, 3.874999999986528e-06, 3.860999999716341e-06, 3.8610000001604305e-06, 3.846999999890244e-06, 3.833000000064146e-06, 3.847999999972984e-06, 3.874999999986528e-06, 3.874999999986528e-06, 3.860999999716341e-06, 3.860999999716341e-06, 3.8610000001604305e-06, 3.8610000001604305e-06, 3.874999999986528e-06, 3.874999999986528e-06, 3.9030000000828124e-06, 3.8610000001604305e-06, 3.8610000001604305e-06, 3.860999999716341e-06, 3.860999999716341e-06, 3.889000000256715e-06, 3.8610000001604305e-06, 3.8610000001604305e-06, 3.860999999716341e-06, 3.862000000243171e-06, 3.8880000001739745e-06, 3.874999999986528e-06, 3.846999999890244e-06, 3.874999999986528e-06, 3.9030000000828124e-06, 3.8199999998767e-06, 3.819000000238049e-06, 3.860999999716341e-06, 3.860999999716341e-06, 3.874999999986528e-06, 3.8610000001604305e-06]</msg>
<status status="PASS" starttime="20201115 22:01:17.609" endtime="20201115 22:01:17.611"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.604" endtime="20201115 22:01:17.611"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:17.613" endtime="20201115 22:01:17.614"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:17.617" endtime="20201115 22:01:17.637"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.615" endtime="20201115 22:01:17.637"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.612" endtime="20201115 22:01:17.638"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.216" endtime="20201115 22:01:17.638"></status>
</kw>
<msg timestamp="20201115 22:01:17.638" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:17.647" endtime="20201115 22:01:17.659"></status>
</kw>
<msg timestamp="20201115 22:01:17.660" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:17.645" endtime="20201115 22:01:17.660"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:17.662" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:17.661" endtime="20201115 22:01:17.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:17.663" endtime="20201115 22:01:17.665"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.643" endtime="20201115 22:01:17.665"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.641" endtime="20201115 22:01:17.666"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:17.674" endtime="20201115 22:01:17.960"></status>
</kw>
<msg timestamp="20201115 22:01:17.963" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019973028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019976903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:17.671" endtime="20201115 22:01:17.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:17.971" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019973028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019976903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:17.964" endtime="20201115 22:01:17.972"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:17.973" endtime="20201115 22:01:17.974"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.668" endtime="20201115 22:01:17.975"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.666" endtime="20201115 22:01:17.975"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:17.979" level="INFO">${RESULT} = [{'time': 0.019976903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.875000000000406e-06, 'source_diff': 3.875000000000406e-06}, {'time': 0.020023222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:17.976" endtime="20201115 22:01:17.980"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:17.993" level="INFO">${OVERHEAD} = {'time': [0.019976903, 0.020023222, 0.020069486, 0.020115528, 0.020161625, 0.020207417, 0.020257083, 0.020302708, 0.020349708, 0.020394833, 0.020444764, 0.020495306, 0.020546333, 0.020595042, 0.020640...</msg>
<status status="PASS" starttime="20201115 22:01:17.980" endtime="20201115 22:01:17.993"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:17.997" level="INFO">NAME: 00-overhead-1-remove</msg>
<status status="PASS" starttime="20201115 22:01:17.996" endtime="20201115 22:01:17.998"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:18.000" level="INFO">VALUE: [3.875000000000406e-06, 3.847000000001266e-06, 3.8050000000025563e-06, 3.861000000000836e-06, 3.8609999999973665e-06, 3.8609999999973665e-06, 3.8749999999969365e-06, 3.875000000000406e-06, 3.888999999999976e-06, 3.847000000001266e-06, 3.888999999999976e-06, 3.86200000000031e-06, 3.875000000000406e-06, 3.931000000002155e-06, 3.902999999999546e-06, 3.875000000000406e-06, 3.84800000000074e-06, 3.846999999997797e-06, 3.875000000000406e-06, 3.875000000000406e-06, 3.875000000000406e-06, 3.875000000000406e-06, 3.790999999999517e-06, 3.916999999999116e-06, 3.847000000001266e-06, 3.8749999999969365e-06, 3.888999999999976e-06, 3.861000000000836e-06, 3.861000000000836e-06, 3.861000000000836e-06, 3.861000000000836e-06, 3.861000000000836e-06, 3.8749999999969365e-06, 3.86200000000031e-06, 3.875000000000406e-06, 3.861000000000836e-06, 3.902999999999546e-06, 3.861000000000836e-06, 3.861000000000836e-06, 3.8749999999969365e-06, 3.861000000000836e-06, 3.846999999997797e-06, 3.875000000000406e-06, 3.804999999999087e-06, 3.861000000000836e-06, 3.902999999999546e-06, 3.875000000000406e-06, 3.875000000000406e-06, 3.902999999999546e-06, 3.915999999999642e-06]</msg>
<status status="PASS" starttime="20201115 22:01:17.998" endtime="20201115 22:01:18.000"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.994" endtime="20201115 22:01:18.001"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:18.003" endtime="20201115 22:01:18.005"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:18.007" endtime="20201115 22:01:18.027"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.005" endtime="20201115 22:01:18.027"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.002" endtime="20201115 22:01:18.028"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.639" endtime="20201115 22:01:18.028"></status>
</kw>
<msg timestamp="20201115 22:01:18.028" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:18.037" endtime="20201115 22:01:18.049"></status>
</kw>
<msg timestamp="20201115 22:01:18.050" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:18.035" endtime="20201115 22:01:18.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:18.052" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:18.051" endtime="20201115 22:01:18.052"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:18.053" endtime="20201115 22:01:18.055"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.033" endtime="20201115 22:01:18.055"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.031" endtime="20201115 22:01:18.056"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:18.062" endtime="20201115 22:01:18.349"></status>
</kw>
<msg timestamp="20201115 22:01:18.352" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020487569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020491444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:18.060" endtime="20201115 22:01:18.352"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:18.360" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020487569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020491444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:18.353" endtime="20201115 22:01:18.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:18.361" endtime="20201115 22:01:18.363"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.058" endtime="20201115 22:01:18.364"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.056" endtime="20201115 22:01:18.364"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:18.368" level="INFO">${RESULT} = [{'time': 0.020491444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.875000000000406e-06, 'source_diff': 3.875000000000406e-06}, {'time': 0.020535931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:18.365" endtime="20201115 22:01:18.368"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:18.381" level="INFO">${OVERHEAD} = {'time': [0.020491444, 0.020535931, 0.020584347, 0.020632931, 0.020679514, 0.020728944, 0.020779514, 0.020825361, 0.020875458, 0.020921708, 0.020967333, 0.021012639, 0.021061375, 0.02111025, 0.0211562...</msg>
<status status="PASS" starttime="20201115 22:01:18.369" endtime="20201115 22:01:18.382"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:18.386" level="INFO">NAME: 00-overhead-1-remove</msg>
<status status="PASS" starttime="20201115 22:01:18.385" endtime="20201115 22:01:18.386"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:18.388" level="INFO">VALUE: [3.875000000000406e-06, 3.902999999999546e-06, 3.929999999999212e-06, 3.86200000000031e-06, 3.861000000000836e-06, 3.861000000000836e-06, 3.888999999999976e-06, 3.875000000000406e-06, 3.888999999999976e-06, 3.875000000000406e-06, 3.861000000000836e-06, 3.861000000000836e-06, 3.861000000000836e-06, 3.847000000001266e-06, 3.847000000001266e-06, 3.915999999999642e-06, 3.888999999999976e-06, 3.9309999999986855e-06, 3.861000000000836e-06, 3.847000000001266e-06, 3.7919999999989906e-06, 3.818999999998657e-06, 3.888999999999976e-06, 3.86200000000031e-06, 3.861000000000836e-06, 3.861000000000836e-06, 3.875000000000406e-06, 3.847000000001266e-06, 3.847000000001266e-06, 3.875000000000406e-06, 3.8749999999969365e-06, 3.902999999999546e-06, 3.861000000000836e-06, 3.929999999999212e-06, 3.875000000000406e-06, 3.944000000002251e-06, 3.804999999999087e-06, 3.847000000001266e-06, 3.861000000000836e-06, 3.875000000000406e-06, 3.861000000000836e-06, 3.875000000000406e-06, 3.861000000000836e-06, 3.902000000000072e-06, 3.875000000000406e-06, 3.861000000000836e-06, 3.861000000000836e-06, 3.861000000000836e-06, 3.846999999997797e-06, 3.846999999997797e-06]</msg>
<status status="PASS" starttime="20201115 22:01:18.387" endtime="20201115 22:01:18.389"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.382" endtime="20201115 22:01:18.390"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:18.392" endtime="20201115 22:01:18.393"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:18.395" endtime="20201115 22:01:18.415"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.394" endtime="20201115 22:01:18.416"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.390" endtime="20201115 22:01:18.416"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.029" endtime="20201115 22:01:18.416"></status>
</kw>
<msg timestamp="20201115 22:01:18.417" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:18.426" endtime="20201115 22:01:18.439"></status>
</kw>
<msg timestamp="20201115 22:01:18.439" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:18.424" endtime="20201115 22:01:18.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:18.441" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:18.440" endtime="20201115 22:01:18.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:18.442" endtime="20201115 22:01:18.444"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.421" endtime="20201115 22:01:18.445"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.419" endtime="20201115 22:01:18.445"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:18.451" endtime="20201115 22:01:18.737"></status>
</kw>
<msg timestamp="20201115 22:01:18.741" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020970917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020974778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:18.450" endtime="20201115 22:01:18.741"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:18.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020970917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020974778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:18.742" endtime="20201115 22:01:18.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:18.750" endtime="20201115 22:01:18.752"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.447" endtime="20201115 22:01:18.752"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.446" endtime="20201115 22:01:18.753"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:18.757" level="INFO">${RESULT} = [{'time': 0.020974778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.861000000000836e-06, 'source_diff': 3.861000000000836e-06}, {'time': 0.021025653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:18.753" endtime="20201115 22:01:18.757"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:18.770" level="INFO">${OVERHEAD} = {'time': [0.020974778, 0.021025653, 0.021074125, 0.021122764, 0.021171903, 0.0212165, 0.021264, 0.021314097, 0.021362819, 0.021409875, 0.021460472, 0.021505639, 0.021556833, 0.02160175, 0.021648014, 0...</msg>
<status status="PASS" starttime="20201115 22:01:18.758" endtime="20201115 22:01:18.770"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:18.774" level="INFO">NAME: 00-overhead-1-remove</msg>
<status status="PASS" starttime="20201115 22:01:18.773" endtime="20201115 22:01:18.775"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:18.777" level="INFO">VALUE: [3.861000000000836e-06, 3.8199999999981304e-06, 3.875000000000406e-06, 3.8609999999973665e-06, 3.888999999999976e-06, 3.846999999997797e-06, 3.903000000003015e-06, 3.875000000000406e-06, 3.875000000000406e-06, 3.8749999999969365e-06, 3.902999999999546e-06, 3.9309999999986855e-06, 3.847000000001266e-06, 3.875000000000406e-06, 3.861000000000836e-06, 3.875000000000406e-06, 3.861000000000836e-06, 3.846999999997797e-06, 3.875000000000406e-06, 3.847000000001266e-06, 3.903000000003015e-06, 3.902999999999546e-06, 3.929999999999212e-06, 3.8749999999969365e-06, 3.832999999998227e-06, 3.875000000000406e-06, 3.902999999999546e-06, 3.916999999999116e-06, 3.8609999999973665e-06, 3.861000000000836e-06, 3.875000000000406e-06, 3.847000000001266e-06, 3.847000000001266e-06, 3.888999999999976e-06, 3.916999999999116e-06, 3.931000000002155e-06, 3.875000000000406e-06, 3.86200000000031e-06, 3.875000000000406e-06, 3.875000000000406e-06, 3.875000000000406e-06, 3.8749999999969365e-06, 3.888999999999976e-06, 3.847000000001266e-06, 3.861000000000836e-06, 3.80600000000203e-06, 3.8609999999973665e-06, 3.861000000000836e-06, 3.8339999999977e-06, 3.8609999999973665e-06]</msg>
<status status="PASS" starttime="20201115 22:01:18.775" endtime="20201115 22:01:18.778"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.771" endtime="20201115 22:01:18.778"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:18.781" endtime="20201115 22:01:18.782"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:18.784" endtime="20201115 22:01:18.803"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.782" endtime="20201115 22:01:18.804"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.779" endtime="20201115 22:01:18.804"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.417" endtime="20201115 22:01:18.805"></status>
</kw>
<msg timestamp="20201115 22:01:18.805" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:18.814" endtime="20201115 22:01:18.827"></status>
</kw>
<msg timestamp="20201115 22:01:18.828" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:18.812" endtime="20201115 22:01:18.828"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:18.830" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:18.829" endtime="20201115 22:01:18.831"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:18.831" endtime="20201115 22:01:18.833"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.810" endtime="20201115 22:01:18.833"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.807" endtime="20201115 22:01:18.834"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:18.840" endtime="20201115 22:01:19.126"></status>
</kw>
<msg timestamp="20201115 22:01:19.129" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01995275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019956611, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:01:18.839" endtime="20201115 22:01:19.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:19.138" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01995275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019956611, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:01:19.130" endtime="20201115 22:01:19.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:19.139" endtime="20201115 22:01:19.141"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.836" endtime="20201115 22:01:19.141"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.834" endtime="20201115 22:01:19.142"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:19.146" level="INFO">${RESULT} = [{'time': 0.019956611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.8609999999973665e-06, 'source_diff': 3.8609999999973665e-06}, {'time': 0.020007875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:19.143" endtime="20201115 22:01:19.146"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:19.159" level="INFO">${OVERHEAD} = {'time': [0.019956611, 0.020007875, 0.020053292, 0.020099319, 0.020145319, 0.020193569, 0.020238403, 0.020286097, 0.020334819, 0.020379417, 0.020424514, 0.020470764, 0.020516389, 0.020561472, 0.020607...</msg>
<status status="PASS" starttime="20201115 22:01:19.147" endtime="20201115 22:01:19.160"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:19.164" level="INFO">NAME: 00-overhead-1-remove</msg>
<status status="PASS" starttime="20201115 22:01:19.163" endtime="20201115 22:01:19.164"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:19.167" level="INFO">VALUE: [3.8609999999973665e-06, 3.80600000000203e-06, 3.888999999999976e-06, 3.888000000000502e-06, 3.804999999999087e-06, 3.861000000000836e-06, 3.846999999997797e-06, 3.861000000000836e-06, 3.847000000001266e-06, 3.861000000000836e-06, 3.875000000000406e-06, 3.8609999999973665e-06, 3.861000000000836e-06, 3.861000000000836e-06, 3.818999999998657e-06, 3.8609999999973665e-06, 3.83400000000117e-06, 3.847000000001266e-06, 3.875000000000406e-06, 3.861000000000836e-06, 3.8609999999973665e-06, 3.902999999999546e-06, 3.902999999999546e-06, 3.861000000000836e-06, 3.875000000000406e-06, 3.875000000000406e-06, 3.8749999999969365e-06, 3.86200000000031e-06, 3.861000000000836e-06, 3.83400000000117e-06, 3.847000000001266e-06, 3.846999999997797e-06, 3.8200000000016e-06, 3.875000000000406e-06, 3.8199999999981304e-06, 3.888999999999976e-06, 3.861000000000836e-06, 3.8200000000016e-06, 3.875000000000406e-06, 3.875000000000406e-06, 3.861000000000836e-06, 3.84800000000074e-06, 3.8609999999973665e-06, 3.847000000001266e-06, 3.875000000000406e-06, 3.861000000000836e-06, 3.861000000000836e-06, 3.861000000000836e-06, 3.888999999999976e-06, 3.875000000000406e-06]</msg>
<status status="PASS" starttime="20201115 22:01:19.165" endtime="20201115 22:01:19.167"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.160" endtime="20201115 22:01:19.168"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:19.170" endtime="20201115 22:01:19.171"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:19.173" endtime="20201115 22:01:19.193"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.172" endtime="20201115 22:01:19.193"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.168" endtime="20201115 22:01:19.194"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.805" endtime="20201115 22:01:19.194"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.213" endtime="20201115 22:01:19.194"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.211" endtime="20201115 22:01:19.195"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:19.197" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:19.206" endtime="20201115 22:01:19.217"></status>
</kw>
<msg timestamp="20201115 22:01:19.218" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:19.204" endtime="20201115 22:01:19.218"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:19.220" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:19.219" endtime="20201115 22:01:19.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:19.221" endtime="20201115 22:01:19.223"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.201" endtime="20201115 22:01:19.223"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.199" endtime="20201115 22:01:19.224"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:19.230" endtime="20201115 22:01:19.517"></status>
</kw>
<msg timestamp="20201115 22:01:19.520" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02237925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022384319, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:01:19.229" endtime="20201115 22:01:19.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:19.529" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02237925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022384319, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:01:19.521" endtime="20201115 22:01:19.529"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:19.530" endtime="20201115 22:01:19.531"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.226" endtime="20201115 22:01:19.532"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.224" endtime="20201115 22:01:19.532"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:19.537" level="INFO">${RESULT} = [{'time': 0.022384319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.068999999999907e-06, 'source_diff': 5.068999999999907e-06}, {'time': 0.022442458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:19.533" endtime="20201115 22:01:19.537"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:19.550" level="INFO">${OVERHEAD} = {'time': [0.022384319, 0.022442458, 0.022498625, 0.022553597, 0.022609111, 0.022662417, 0.022721194, 0.022773333, 0.022828347, 0.022882611, 0.022936931, 0.022992208, 0.023050278, 0.023102486, 0.023154...</msg>
<status status="PASS" starttime="20201115 22:01:19.538" endtime="20201115 22:01:19.550"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:19.554" level="INFO">NAME: 00-overhead-2-remove</msg>
<status status="PASS" starttime="20201115 22:01:19.553" endtime="20201115 22:01:19.555"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:19.557" level="INFO">VALUE: [5.068999999999907e-06, 5.068999999999907e-06, 5.068999999999907e-06, 5.068999999999907e-06, 5.068999999999907e-06, 5.0699999999993806e-06, 5.068999999999907e-06, 5.082999999999477e-06, 5.068999999999907e-06, 5.055000000000337e-06, 5.000000000001531e-06, 5.055000000000337e-06, 5.055999999999811e-06, 5.096999999999047e-06, 5.0839999999989505e-06, 5.0699999999993806e-06, 5.014000000001101e-06, 5.0699999999993806e-06, 5.055000000000337e-06, 5.068999999999907e-06, 5.068999999999907e-06, 5.055999999999811e-06, 5.055999999999811e-06, 5.0699999999993806e-06, 5.096999999999047e-06, 5.05600000000328e-06, 5.07000000000285e-06, 5.068999999999907e-06, 5.07000000000285e-06, 5.082999999999477e-06, 5.068999999999907e-06, 5.042000000000241e-06, 5.0839999999989505e-06, 5.055000000000337e-06, 5.08400000000242e-06, 5.014000000001101e-06, 5.028000000000671e-06, 5.082999999999477e-06, 5.0699999999993806e-06, 5.028000000000671e-06, 5.139000000001226e-06, 5.0839999999989505e-06, 5.055999999999811e-06, 5.055999999999811e-06, 5.068999999999907e-06, 5.07000000000285e-06, 5.082999999999477e-06, 5.096999999999047e-06, 5.042000000000241e-06, 5.0549999999968676e-06]</msg>
<status status="PASS" starttime="20201115 22:01:19.555" endtime="20201115 22:01:19.558"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.551" endtime="20201115 22:01:19.558"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:19.560" endtime="20201115 22:01:19.562"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:19.564" endtime="20201115 22:01:19.583"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.562" endtime="20201115 22:01:19.584"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.559" endtime="20201115 22:01:19.584"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.197" endtime="20201115 22:01:19.585"></status>
</kw>
<msg timestamp="20201115 22:01:19.585" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:19.594" endtime="20201115 22:01:19.606"></status>
</kw>
<msg timestamp="20201115 22:01:19.606" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:19.592" endtime="20201115 22:01:19.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:19.608" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:19.607" endtime="20201115 22:01:19.609"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:19.609" endtime="20201115 22:01:19.611"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.589" endtime="20201115 22:01:19.612"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.587" endtime="20201115 22:01:19.612"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:19.618" endtime="20201115 22:01:19.906"></status>
</kw>
<msg timestamp="20201115 22:01:19.909" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020301736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020306806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:19.617" endtime="20201115 22:01:19.909"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:19.917" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020301736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020306806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:19.910" endtime="20201115 22:01:19.917"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:19.918" endtime="20201115 22:01:19.920"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.614" endtime="20201115 22:01:19.920"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.613" endtime="20201115 22:01:19.921"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:19.925" level="INFO">${RESULT} = [{'time': 0.020306806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.0699999999993806e-06, 'source_diff': 5.0699999999993806e-06}, {'time': 0.020360194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:19.921" endtime="20201115 22:01:19.925"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:19.938" level="INFO">${OVERHEAD} = {'time': [0.020306806, 0.020360194, 0.02041325, 0.020471389, 0.020525944, 0.020583472, 0.020636139, 0.020688319, 0.020742403, 0.020799542, 0.020855681, 0.020908528, 0.020959972, 0.021018361, 0.0210721...</msg>
<status status="PASS" starttime="20201115 22:01:19.926" endtime="20201115 22:01:19.939"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:19.943" level="INFO">NAME: 00-overhead-2-remove</msg>
<status status="PASS" starttime="20201115 22:01:19.942" endtime="20201115 22:01:19.943"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:19.945" level="INFO">VALUE: [5.0699999999993806e-06, 5.083000000002946e-06, 5.042000000000241e-06, 5.055999999999811e-06, 5.125000000001656e-06, 5.068999999999907e-06, 5.083000000002946e-06, 5.068999999999907e-06, 5.055999999999811e-06, 5.09800000000199e-06, 4.987000000001435e-06, 5.0139999999976315e-06, 5.055000000000337e-06, 5.082999999999477e-06, 5.055999999999811e-06, 5.0839999999989505e-06, 5.068999999999907e-06, 5.028000000000671e-06, 5.0699999999993806e-06, 5.068999999999907e-06, 5.139000000001226e-06, 5.068999999999907e-06, 5.068999999999907e-06, 5.0699999999993806e-06, 5.1249999999981866e-06, 5.068999999999907e-06, 5.0699999999993806e-06, 5.055999999999811e-06, 5.1249999999981866e-06, 5.0699999999993806e-06, 5.068999999999907e-06, 5.068999999999907e-06, 5.069000000003376e-06, 5.055999999999811e-06, 5.082999999999477e-06, 5.040999999997298e-06, 5.082999999999477e-06, 5.055000000000337e-06, 5.055999999999811e-06, 5.0699999999993806e-06, 5.083000000002946e-06, 5.08400000000242e-06, 5.082999999999477e-06, 5.0699999999993806e-06, 5.0699999999993806e-06, 5.041999999996771e-06, 5.0839999999989505e-06, 5.0839999999989505e-06, 5.082999999999477e-06, 5.08400000000242e-06]</msg>
<status status="PASS" starttime="20201115 22:01:19.944" endtime="20201115 22:01:19.946"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.939" endtime="20201115 22:01:19.946"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:19.948" endtime="20201115 22:01:19.950"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:19.952" endtime="20201115 22:01:19.971"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.950" endtime="20201115 22:01:19.972"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.947" endtime="20201115 22:01:19.972"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.585" endtime="20201115 22:01:19.973"></status>
</kw>
<msg timestamp="20201115 22:01:19.973" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:19.982" endtime="20201115 22:01:19.995"></status>
</kw>
<msg timestamp="20201115 22:01:19.996" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:19.980" endtime="20201115 22:01:19.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:19.998" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:19.997" endtime="20201115 22:01:19.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:19.999" endtime="20201115 22:01:20.001"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.977" endtime="20201115 22:01:20.001"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.975" endtime="20201115 22:01:20.002"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:20.008" endtime="20201115 22:01:20.295"></status>
</kw>
<msg timestamp="20201115 22:01:20.298" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020674542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020679611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:20.007" endtime="20201115 22:01:20.298"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:20.306" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020674542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020679611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:20.299" endtime="20201115 22:01:20.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:20.307" endtime="20201115 22:01:20.309"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.004" endtime="20201115 22:01:20.310"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.002" endtime="20201115 22:01:20.310"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:20.314" level="INFO">${RESULT} = [{'time': 0.020679611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.068999999999907e-06, 'source_diff': 5.068999999999907e-06}, {'time': 0.020731083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:20.311" endtime="20201115 22:01:20.315"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:20.328" level="INFO">${OVERHEAD} = {'time': [0.020679611, 0.020731083, 0.020787069, 0.020838778, 0.02089375, 0.020949514, 0.021004958, 0.021060014, 0.021114806, 0.021169292, 0.02122475, 0.021278528, 0.021333972, 0.021392042, 0.02145065...</msg>
<status status="PASS" starttime="20201115 22:01:20.316" endtime="20201115 22:01:20.328"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:20.332" level="INFO">NAME: 00-overhead-2-remove</msg>
<status status="PASS" starttime="20201115 22:01:20.331" endtime="20201115 22:01:20.333"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:20.335" level="INFO">VALUE: [5.068999999999907e-06, 5.068999999999907e-06, 4.9999999999980616e-06, 5.0699999999993806e-06, 5.068999999999907e-06, 5.028000000000671e-06, 5.014000000001101e-06, 5.0699999999993806e-06, 5.055999999999811e-06, 5.0699999999993806e-06, 5.068999999999907e-06, 5.07000000000285e-06, 5.068999999999907e-06, 5.0839999999989505e-06, 5.055999999999811e-06, 5.055999999999811e-06, 5.055000000000337e-06, 5.082999999999477e-06, 5.068999999999907e-06, 5.083000000002946e-06, 4.986000000001961e-06, 5.055999999999811e-06, 5.082999999999477e-06, 5.082999999999477e-06, 5.07000000000285e-06, 5.055000000000337e-06, 5.082999999999477e-06, 5.082999999999477e-06, 5.096999999999047e-06, 5.055000000000337e-06, 5.082999999999477e-06, 5.042000000000241e-06, 5.0699999999993806e-06, 5.082999999999477e-06, 5.068999999999907e-06, 5.068999999999907e-06, 5.125000000001656e-06, 5.082999999999477e-06, 5.068999999999907e-06, 5.055000000000337e-06, 5.055999999999811e-06, 5.055000000000337e-06, 5.083000000002946e-06, 5.068999999999907e-06, 5.068999999999907e-06, 5.082999999999477e-06, 5.069000000003376e-06, 5.09799999999852e-06, 5.0699999999993806e-06, 5.0699999999993806e-06]</msg>
<status status="PASS" starttime="20201115 22:01:20.333" endtime="20201115 22:01:20.335"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.329" endtime="20201115 22:01:20.336"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:20.338" endtime="20201115 22:01:20.339"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:20.341" endtime="20201115 22:01:20.361"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.340" endtime="20201115 22:01:20.361"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.336" endtime="20201115 22:01:20.362"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.973" endtime="20201115 22:01:20.362"></status>
</kw>
<msg timestamp="20201115 22:01:20.362" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:20.371" endtime="20201115 22:01:20.385"></status>
</kw>
<msg timestamp="20201115 22:01:20.385" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:20.369" endtime="20201115 22:01:20.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:20.387" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:20.386" endtime="20201115 22:01:20.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:20.389" endtime="20201115 22:01:20.390"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.367" endtime="20201115 22:01:20.391"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.365" endtime="20201115 22:01:20.391"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:20.398" endtime="20201115 22:01:20.684"></status>
</kw>
<msg timestamp="20201115 22:01:20.688" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020028847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020033903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:20.396" endtime="20201115 22:01:20.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:20.696" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020028847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020033903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:20.689" endtime="20201115 22:01:20.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:20.697" endtime="20201115 22:01:20.699"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.393" endtime="20201115 22:01:20.700"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.392" endtime="20201115 22:01:20.700"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:20.704" level="INFO">${RESULT} = [{'time': 0.020033903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.055999999999811e-06, 'source_diff': 5.055999999999811e-06}, {'time': 0.020087681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:20.701" endtime="20201115 22:01:20.704"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:20.717" level="INFO">${OVERHEAD} = {'time': [0.020033903, 0.020087681, 0.020142736, 0.020198958, 0.020257014, 0.020311764, 0.020365528, 0.020419083, 0.020476444, 0.020531944, 0.020589542, 0.020646653, 0.020704069, 0.020761181, 0.020818...</msg>
<status status="PASS" starttime="20201115 22:01:20.705" endtime="20201115 22:01:20.718"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:20.722" level="INFO">NAME: 00-overhead-2-remove</msg>
<status status="PASS" starttime="20201115 22:01:20.721" endtime="20201115 22:01:20.722"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:20.724" level="INFO">VALUE: [5.055999999999811e-06, 5.014000000001101e-06, 5.083000000002946e-06, 5.082999999999477e-06, 5.0699999999993806e-06, 5.082999999999477e-06, 5.055999999999811e-06, 5.068999999999907e-06, 5.096999999999047e-06, 5.068999999999907e-06, 5.0839999999989505e-06, 5.08400000000242e-06, 5.068999999999907e-06, 5.0699999999993806e-06, 5.0699999999993806e-06, 5.055000000000337e-06, 5.110999999998617e-06, 5.07000000000285e-06, 5.068999999999907e-06, 5.0839999999989505e-06, 5.082999999999477e-06, 5.0839999999989505e-06, 5.068999999999907e-06, 5.055000000000337e-06, 5.014000000001101e-06, 4.987000000001435e-06, 5.082999999999477e-06, 5.068999999999907e-06, 5.0839999999989505e-06, 5.07000000000285e-06, 5.041000000000767e-06, 5.055999999999811e-06, 5.0699999999993806e-06, 5.012999999998158e-06, 5.042000000000241e-06, 5.082999999999477e-06, 5.082999999999477e-06, 5.055000000000337e-06, 5.125000000001656e-06, 5.014000000001101e-06, 5.0699999999993806e-06, 5.055000000000337e-06, 5.068999999999907e-06, 5.0699999999993806e-06, 5.042000000000241e-06, 5.055000000000337e-06, 5.0699999999993806e-06, 5.068999999999907e-06, 5.097000000002516e-06, 5.07000000000285e-06]</msg>
<status status="PASS" starttime="20201115 22:01:20.723" endtime="20201115 22:01:20.725"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.718" endtime="20201115 22:01:20.725"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:20.727" endtime="20201115 22:01:20.729"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:20.731" endtime="20201115 22:01:20.750"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.729" endtime="20201115 22:01:20.751"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.726" endtime="20201115 22:01:20.751"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.363" endtime="20201115 22:01:20.752"></status>
</kw>
<msg timestamp="20201115 22:01:20.752" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:20.761" endtime="20201115 22:01:20.773"></status>
</kw>
<msg timestamp="20201115 22:01:20.773" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:20.759" endtime="20201115 22:01:20.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:20.776" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:20.774" endtime="20201115 22:01:20.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:20.777" endtime="20201115 22:01:20.778"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.756" endtime="20201115 22:01:20.779"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.754" endtime="20201115 22:01:20.779"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:20.786" endtime="20201115 22:01:21.074"></status>
</kw>
<msg timestamp="20201115 22:01:21.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020117264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020122333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:20.784" endtime="20201115 22:01:21.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:21.090" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020117264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020122333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:21.083" endtime="20201115 22:01:21.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:21.091" endtime="20201115 22:01:21.093"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.782" endtime="20201115 22:01:21.093"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.780" endtime="20201115 22:01:21.094"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:21.098" level="INFO">${RESULT} = [{'time': 0.020122333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.068999999999907e-06, 'source_diff': 5.068999999999907e-06}, {'time': 0.02017975, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:01:21.095" endtime="20201115 22:01:21.098"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:21.111" level="INFO">${OVERHEAD} = {'time': [0.020122333, 0.02017975, 0.020233597, 0.020288889, 0.020342444, 0.020396917, 0.020455694, 0.020510903, 0.020567306, 0.020623486, 0.020681611, 0.020738792, 0.020792347, 0.020847611, 0.0209040...</msg>
<status status="PASS" starttime="20201115 22:01:21.099" endtime="20201115 22:01:21.111"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:21.116" level="INFO">NAME: 00-overhead-2-remove</msg>
<status status="PASS" starttime="20201115 22:01:21.115" endtime="20201115 22:01:21.116"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:21.118" level="INFO">VALUE: [5.068999999999907e-06, 5.068999999999907e-06, 5.068999999999907e-06, 5.0699999999993806e-06, 5.082999999999477e-06, 5.055999999999811e-06, 5.068999999999907e-06, 5.0699999999993806e-06, 5.0699999999993806e-06, 5.068999999999907e-06, 5.055000000000337e-06, 5.0699999999993806e-06, 5.082999999999477e-06, 5.042000000000241e-06, 5.0699999999993806e-06, 5.028000000000671e-06, 5.07000000000285e-06, 5.055999999999811e-06, 5.068999999999907e-06, 5.055999999999811e-06, 5.09799999999852e-06, 5.0699999999993806e-06, 5.0699999999993806e-06, 5.055000000000337e-06, 5.055999999999811e-06, 5.068999999999907e-06, 5.068999999999907e-06, 5.082999999999477e-06, 5.110999999998617e-06, 5.042000000000241e-06, 5.07000000000285e-06, 5.042000000000241e-06, 5.08400000000242e-06, 5.068999999999907e-06, 5.082999999999477e-06, 5.068999999999907e-06, 5.0699999999993806e-06, 5.068999999999907e-06, 5.028000000000671e-06, 5.028000000000671e-06, 5.069000000003376e-06, 5.042000000000241e-06, 5.055000000000337e-06, 5.028000000000671e-06, 5.0139999999976315e-06, 4.9999999999980616e-06, 5.07000000000285e-06, 5.0699999999993806e-06, 5.082999999999477e-06, 5.139000000001226e-06]</msg>
<status status="PASS" starttime="20201115 22:01:21.117" endtime="20201115 22:01:21.119"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.112" endtime="20201115 22:01:21.119"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:21.121" endtime="20201115 22:01:21.122"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:21.125" endtime="20201115 22:01:21.144"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.123" endtime="20201115 22:01:21.145"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.120" endtime="20201115 22:01:21.145"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.752" endtime="20201115 22:01:21.145"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.196" endtime="20201115 22:01:21.146"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.195" endtime="20201115 22:01:21.146"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:21.148" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:21.157" endtime="20201115 22:01:21.171"></status>
</kw>
<msg timestamp="20201115 22:01:21.171" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:21.155" endtime="20201115 22:01:21.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:21.174" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:21.172" endtime="20201115 22:01:21.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:21.175" endtime="20201115 22:01:21.176"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.153" endtime="20201115 22:01:21.177"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.151" endtime="20201115 22:01:21.178"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:21.184" endtime="20201115 22:01:21.471"></status>
</kw>
<msg timestamp="20201115 22:01:21.474" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022357458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022362778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:21.183" endtime="20201115 22:01:21.474"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:21.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022357458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022362778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:21.475" endtime="20201115 22:01:21.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:21.483" endtime="20201115 22:01:21.485"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.180" endtime="20201115 22:01:21.486"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.178" endtime="20201115 22:01:21.486"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:21.490" level="INFO">${RESULT} = [{'time': 0.022362778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.319999999999631e-06, 'source_diff': 5.319999999999631e-06}, {'time': 0.022426333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:21.487" endtime="20201115 22:01:21.490"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:21.503" level="INFO">${OVERHEAD} = {'time': [0.022362778, 0.022426333, 0.022487292, 0.022546139, 0.022604778, 0.022664292, 0.022725764, 0.022790069, 0.022853361, 0.022916889, 0.022979556, 0.023040208, 0.023101194, 0.023166639, 0.023229...</msg>
<status status="PASS" starttime="20201115 22:01:21.491" endtime="20201115 22:01:21.504"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:21.508" level="INFO">NAME: 00-overhead-3-remove</msg>
<status status="PASS" starttime="20201115 22:01:21.507" endtime="20201115 22:01:21.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:21.510" level="INFO">VALUE: [5.319999999999631e-06, 5.346999999999297e-06, 5.319999999999631e-06, 5.306000000000061e-06, 5.360999999998867e-06, 5.277999999997451e-06, 5.2639999999978815e-06, 5.319000000000157e-06, 5.305000000000587e-06, 5.319999999999631e-06, 5.250000000001781e-06, 5.319000000000157e-06, 5.319000000000157e-06, 5.278000000000921e-06, 5.3200000000031e-06, 5.319000000000157e-06, 5.319000000000157e-06, 5.332999999999727e-06, 5.319000000000157e-06, 5.332999999999727e-06, 5.306000000000061e-06, 5.360999999998867e-06, 5.3339999999992005e-06, 5.306000000000061e-06, 5.319000000000157e-06, 5.319000000000157e-06, 5.332999999999727e-06, 5.319999999999631e-06, 5.332999999999727e-06, 5.319000000000157e-06, 5.332999999999727e-06, 5.319000000000157e-06, 5.361000000002336e-06, 5.305000000000587e-06, 5.360999999998867e-06, 5.34800000000224e-06, 5.3339999999992005e-06, 5.374999999998437e-06, 5.306000000000061e-06, 5.3339999999992005e-06, 5.306000000000061e-06, 5.276999999997978e-06, 5.332999999999727e-06, 5.305000000000587e-06, 5.319999999999631e-06, 5.306000000000061e-06, 5.375000000001906e-06, 5.332999999999727e-06, 5.3339999999992005e-06, 5.319000000000157e-06]</msg>
<status status="PASS" starttime="20201115 22:01:21.509" endtime="20201115 22:01:21.511"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.504" endtime="20201115 22:01:21.511"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:21.513" endtime="20201115 22:01:21.515"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:21.517" endtime="20201115 22:01:21.536"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.515" endtime="20201115 22:01:21.537"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.512" endtime="20201115 22:01:21.537"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.149" endtime="20201115 22:01:21.537"></status>
</kw>
<msg timestamp="20201115 22:01:21.538" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:21.547" endtime="20201115 22:01:21.559"></status>
</kw>
<msg timestamp="20201115 22:01:21.560" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:21.545" endtime="20201115 22:01:21.560"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:21.563" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:21.561" endtime="20201115 22:01:21.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:21.564" endtime="20201115 22:01:21.565"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.542" endtime="20201115 22:01:21.566"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.540" endtime="20201115 22:01:21.566"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:21.573" endtime="20201115 22:01:21.860"></status>
</kw>
<msg timestamp="20201115 22:01:21.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020140847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020146167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:21.571" endtime="20201115 22:01:21.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:21.871" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020140847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020146167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:21.864" endtime="20201115 22:01:21.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:21.872" endtime="20201115 22:01:21.874"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.569" endtime="20201115 22:01:21.874"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.567" endtime="20201115 22:01:21.875"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:21.879" level="INFO">${RESULT} = [{'time': 0.020146167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.319999999999631e-06, 'source_diff': 5.319999999999631e-06}, {'time': 0.020212083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:21.876" endtime="20201115 22:01:21.879"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:21.892" level="INFO">${OVERHEAD} = {'time': [0.020146167, 0.020212083, 0.020274903, 0.020334694, 0.020398694, 0.020458667, 0.020522736, 0.020583194, 0.020646778, 0.020705569, 0.020765514, 0.020825056, 0.020886694, 0.020947847, 0.021009...</msg>
<status status="PASS" starttime="20201115 22:01:21.880" endtime="20201115 22:01:21.892"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:21.897" level="INFO">NAME: 00-overhead-3-remove</msg>
<status status="PASS" starttime="20201115 22:01:21.896" endtime="20201115 22:01:21.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:21.899" level="INFO">VALUE: [5.319999999999631e-06, 5.319000000000157e-06, 5.319999999999631e-06, 5.305000000000587e-06, 5.319000000000157e-06, 5.319999999999631e-06, 5.319000000000157e-06, 5.346999999999297e-06, 5.306000000000061e-06, 5.319000000000157e-06, 5.332999999999727e-06, 5.306000000000061e-06, 5.332999999999727e-06, 5.332999999999727e-06, 5.332999999999727e-06, 5.276999999997978e-06, 5.319000000000157e-06, 5.306000000000061e-06, 5.235999999998742e-06, 5.3339999999992005e-06, 5.333000000003196e-06, 5.319000000000157e-06, 5.319999999999631e-06, 5.306000000000061e-06, 5.305000000000587e-06, 5.319999999999631e-06, 5.319000000000157e-06, 5.319999999999631e-06, 5.319000000000157e-06, 5.305000000000587e-06, 5.33400000000267e-06, 5.332999999999727e-06, 5.319999999999631e-06, 5.319000000000157e-06, 5.319000000000157e-06, 5.374999999998437e-06, 5.278000000000921e-06, 5.333000000003196e-06, 5.319999999999631e-06, 5.319999999999631e-06, 5.264000000001351e-06, 5.319999999999631e-06, 5.319999999999631e-06, 5.306000000000061e-06, 5.292000000000491e-06, 5.346999999999297e-06, 5.375000000001906e-06, 5.36199999999834e-06, 5.403000000001046e-06, 5.306000000000061e-06]</msg>
<status status="PASS" starttime="20201115 22:01:21.898" endtime="20201115 22:01:21.899"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.893" endtime="20201115 22:01:21.900"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:21.902" endtime="20201115 22:01:21.903"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:21.906" endtime="20201115 22:01:21.925"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.904" endtime="20201115 22:01:21.926"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.901" endtime="20201115 22:01:21.926"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.538" endtime="20201115 22:01:21.926"></status>
</kw>
<msg timestamp="20201115 22:01:21.927" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:21.936" endtime="20201115 22:01:21.949"></status>
</kw>
<msg timestamp="20201115 22:01:21.949" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:21.934" endtime="20201115 22:01:21.949"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:21.952" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:21.950" endtime="20201115 22:01:21.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:21.953" endtime="20201115 22:01:21.954"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.931" endtime="20201115 22:01:21.955"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.929" endtime="20201115 22:01:21.955"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:21.962" endtime="20201115 22:01:22.257"></status>
</kw>
<msg timestamp="20201115 22:01:22.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021165611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021170931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:21.960" endtime="20201115 22:01:22.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:22.284" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021165611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021170931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:22.267" endtime="20201115 22:01:22.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:22.286" endtime="20201115 22:01:22.289"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.958" endtime="20201115 22:01:22.291"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.956" endtime="20201115 22:01:22.292"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:22.301" level="INFO">${RESULT} = [{'time': 0.021170931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.319999999999631e-06, 'source_diff': 5.319999999999631e-06}, {'time': 0.021236681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:22.293" endtime="20201115 22:01:22.301"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:22.328" level="INFO">${OVERHEAD} = {'time': [0.021170931, 0.021236681, 0.021300306, 0.021361903, 0.021420681, 0.021485472, 0.021549306, 0.021613153, 0.021678653, 0.021742972, 0.021806583, 0.021870347, 0.021932306, 0.021991111, 0.022053...</msg>
<status status="PASS" starttime="20201115 22:01:22.303" endtime="20201115 22:01:22.329"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:22.333" level="INFO">NAME: 00-overhead-3-remove</msg>
<status status="PASS" starttime="20201115 22:01:22.332" endtime="20201115 22:01:22.334"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:22.336" level="INFO">VALUE: [5.319999999999631e-06, 5.3339999999992005e-06, 5.33400000000267e-06, 5.306000000000061e-06, 5.3339999999992005e-06, 5.319000000000157e-06, 5.319999999999631e-06, 5.319999999999631e-06, 5.292000000000491e-06, 5.278000000000921e-06, 5.332999999999727e-06, 5.2499999999983116e-06, 5.277999999997451e-06, 5.319000000000157e-06, 5.319999999999631e-06, 5.415999999997673e-06, 5.319000000000157e-06, 5.264000000001351e-06, 5.319000000000157e-06, 5.319999999999631e-06, 5.319999999999631e-06, 5.305000000000587e-06, 5.319000000000157e-06, 5.292000000000491e-06, 5.304999999997118e-06, 5.319999999999631e-06, 5.3339999999992005e-06, 5.3339999999992005e-06, 5.291000000001017e-06, 5.319000000000157e-06, 5.292000000000491e-06, 5.347000000002766e-06, 5.319999999999631e-06, 5.3189999999966875e-06, 5.319999999999631e-06, 5.332999999999727e-06, 5.277999999997451e-06, 5.235999999998742e-06, 5.319999999999631e-06, 5.3200000000031e-06, 5.278000000000921e-06, 5.389000000001476e-06, 5.292000000000491e-06, 5.292000000000491e-06, 5.332999999999727e-06, 5.332999999999727e-06, 5.305000000000587e-06, 5.332999999999727e-06, 5.235999999998742e-06, 5.319999999999631e-06]</msg>
<status status="PASS" starttime="20201115 22:01:22.334" endtime="20201115 22:01:22.336"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.329" endtime="20201115 22:01:22.337"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:22.339" endtime="20201115 22:01:22.340"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:22.342" endtime="20201115 22:01:22.362"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.341" endtime="20201115 22:01:22.362"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.337" endtime="20201115 22:01:22.363"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.927" endtime="20201115 22:01:22.363"></status>
</kw>
<msg timestamp="20201115 22:01:22.364" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:22.373" endtime="20201115 22:01:22.387"></status>
</kw>
<msg timestamp="20201115 22:01:22.387" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:22.371" endtime="20201115 22:01:22.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:22.389" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:22.388" endtime="20201115 22:01:22.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:22.391" endtime="20201115 22:01:22.392"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.369" endtime="20201115 22:01:22.393"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.366" endtime="20201115 22:01:22.393"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:22.400" endtime="20201115 22:01:22.689"></status>
</kw>
<msg timestamp="20201115 22:01:22.692" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020610347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020615667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:22.398" endtime="20201115 22:01:22.692"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:22.700" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020610347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020615667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:22.693" endtime="20201115 22:01:22.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:22.701" endtime="20201115 22:01:22.703"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.396" endtime="20201115 22:01:22.704"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.394" endtime="20201115 22:01:22.704"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:22.708" level="INFO">${RESULT} = [{'time': 0.020615667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.319999999999631e-06, 'source_diff': 5.319999999999631e-06}, {'time': 0.020679264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:22.705" endtime="20201115 22:01:22.709"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:22.721" level="INFO">${OVERHEAD} = {'time': [0.020615667, 0.020679264, 0.020738347, 0.020799569, 0.020859139, 0.020919625, 0.020978944, 0.021041208, 0.021101958, 0.021164611, 0.021226069, 0.021284903, 0.021345597, 0.021408972, 0.021470...</msg>
<status status="PASS" starttime="20201115 22:01:22.709" endtime="20201115 22:01:22.722"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:22.726" level="INFO">NAME: 00-overhead-3-remove</msg>
<status status="PASS" starttime="20201115 22:01:22.725" endtime="20201115 22:01:22.726"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:22.728" level="INFO">VALUE: [5.319999999999631e-06, 5.306000000000061e-06, 5.319000000000157e-06, 5.319000000000157e-06, 5.332999999999727e-06, 5.292000000000491e-06, 5.374999999998437e-06, 5.319000000000157e-06, 5.305000000000587e-06, 5.319000000000157e-06, 5.319000000000157e-06, 5.306000000000061e-06, 5.319000000000157e-06, 5.346999999999297e-06, 5.319000000000157e-06, 5.319000000000157e-06, 5.306000000000061e-06, 5.332999999999727e-06, 5.305000000000587e-06, 5.3200000000031e-06, 5.305000000000587e-06, 5.374999999998437e-06, 5.305000000000587e-06, 5.346999999999297e-06, 5.319000000000157e-06, 5.319000000000157e-06, 5.2499999999983116e-06, 5.319000000000157e-06, 5.319000000000157e-06, 5.319000000000157e-06, 5.306000000000061e-06, 5.3339999999992005e-06, 5.319000000000157e-06, 5.332999999999727e-06, 5.319000000000157e-06, 5.346999999999297e-06, 5.264000000001351e-06, 5.3339999999992005e-06, 5.346999999999297e-06, 5.290999999997548e-06, 5.332999999999727e-06, 5.332999999999727e-06, 5.333000000003196e-06, 5.319999999999631e-06, 5.319999999999631e-06, 5.319000000000157e-06, 5.319000000000157e-06, 5.319999999999631e-06, 5.319999999999631e-06, 5.319000000000157e-06]</msg>
<status status="PASS" starttime="20201115 22:01:22.727" endtime="20201115 22:01:22.729"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.722" endtime="20201115 22:01:22.729"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:22.732" endtime="20201115 22:01:22.733"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:22.736" endtime="20201115 22:01:22.755"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.734" endtime="20201115 22:01:22.756"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.730" endtime="20201115 22:01:22.756"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.364" endtime="20201115 22:01:22.757"></status>
</kw>
<msg timestamp="20201115 22:01:22.757" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:22.766" endtime="20201115 22:01:22.780"></status>
</kw>
<msg timestamp="20201115 22:01:22.780" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:22.764" endtime="20201115 22:01:22.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:22.783" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:22.781" endtime="20201115 22:01:22.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:22.784" endtime="20201115 22:01:22.786"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.762" endtime="20201115 22:01:22.786"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.759" endtime="20201115 22:01:22.787"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:22.793" endtime="20201115 22:01:23.079"></status>
</kw>
<msg timestamp="20201115 22:01:23.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020125542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020130861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:22.792" endtime="20201115 22:01:23.083"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:23.091" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020125542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020130861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:23.084" endtime="20201115 22:01:23.092"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:23.093" endtime="20201115 22:01:23.094"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.789" endtime="20201115 22:01:23.095"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.787" endtime="20201115 22:01:23.095"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:23.100" level="INFO">${RESULT} = [{'time': 0.020130861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.319000000000157e-06, 'source_diff': 5.319000000000157e-06}, {'time': 0.020195194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:23.096" endtime="20201115 22:01:23.100"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:23.113" level="INFO">${OVERHEAD} = {'time': [0.020130861, 0.020195194, 0.020256639, 0.020315736, 0.020376944, 0.020442917, 0.020501444, 0.020560694, 0.020623097, 0.020687042, 0.020745819, 0.020811028, 0.020876528, 0.020935597, 0.021000...</msg>
<status status="PASS" starttime="20201115 22:01:23.101" endtime="20201115 22:01:23.113"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:23.118" level="INFO">NAME: 00-overhead-3-remove</msg>
<status status="PASS" starttime="20201115 22:01:23.117" endtime="20201115 22:01:23.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:23.120" level="INFO">VALUE: [5.319000000000157e-06, 5.332999999999727e-06, 5.278000000000921e-06, 5.346999999999297e-06, 5.305000000000587e-06, 5.264000000001351e-06, 5.305000000000587e-06, 5.305000000000587e-06, 5.374999999998437e-06, 5.319999999999631e-06, 5.290999999997548e-06, 5.306000000000061e-06, 5.3339999999992005e-06, 5.319000000000157e-06, 5.319000000000157e-06, 5.332999999999727e-06, 5.319999999999631e-06, 5.319999999999631e-06, 5.332999999999727e-06, 5.319000000000157e-06, 5.319999999999631e-06, 5.278000000000921e-06, 5.250000000001781e-06, 5.306000000000061e-06, 5.306000000000061e-06, 5.236000000002211e-06, 5.305000000000587e-06, 5.346999999999297e-06, 5.332999999999727e-06, 5.319999999999631e-06, 5.319999999999631e-06, 5.278000000000921e-06, 5.332999999999727e-06, 5.319000000000157e-06, 5.347000000002766e-06, 5.319000000000157e-06, 5.305000000000587e-06, 5.305000000000587e-06, 5.375000000001906e-06, 5.305000000000587e-06, 5.319999999999631e-06, 5.319999999999631e-06, 5.319999999999631e-06, 5.319999999999631e-06, 5.319000000000157e-06, 5.332999999999727e-06, 5.319000000000157e-06, 5.319000000000157e-06, 5.319000000000157e-06, 5.3339999999992005e-06]</msg>
<status status="PASS" starttime="20201115 22:01:23.119" endtime="20201115 22:01:23.121"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.114" endtime="20201115 22:01:23.121"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:23.124" endtime="20201115 22:01:23.125"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:23.127" endtime="20201115 22:01:23.147"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.126" endtime="20201115 22:01:23.147"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.122" endtime="20201115 22:01:23.148"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.757" endtime="20201115 22:01:23.148"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.147" endtime="20201115 22:01:23.148"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.146" endtime="20201115 22:01:23.148"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:23.151" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:23.160" endtime="20201115 22:01:23.173"></status>
</kw>
<msg timestamp="20201115 22:01:23.174" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:23.158" endtime="20201115 22:01:23.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:23.176" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:23.175" endtime="20201115 22:01:23.177"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:23.177" endtime="20201115 22:01:23.179"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.155" endtime="20201115 22:01:23.180"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.153" endtime="20201115 22:01:23.180"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:23.187" endtime="20201115 22:01:23.473"></status>
</kw>
<msg timestamp="20201115 22:01:23.476" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022516681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022522236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:23.185" endtime="20201115 22:01:23.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:23.485" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022516681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022522236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:23.477" endtime="20201115 22:01:23.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:23.486" endtime="20201115 22:01:23.488"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.182" endtime="20201115 22:01:23.488"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.181" endtime="20201115 22:01:23.488"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:23.493" level="INFO">${RESULT} = [{'time': 0.022522236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.555000000000837e-06, 'source_diff': 5.555000000000837e-06}, {'time': 0.0225915, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:01:23.489" endtime="20201115 22:01:23.493"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:23.506" level="INFO">${OVERHEAD} = {'time': [0.022522236, 0.0225915, 0.022662958, 0.022730389, 0.022800361, 0.022868208, 0.022938944, 0.023006875, 0.023079278, 0.023150194, 0.0232185, 0.023288042, 0.023354944, 0.023428083, 0.023496153,...</msg>
<status status="PASS" starttime="20201115 22:01:23.494" endtime="20201115 22:01:23.506"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:23.510" level="INFO">NAME: 00-overhead-4-remove</msg>
<status status="PASS" starttime="20201115 22:01:23.509" endtime="20201115 22:01:23.511"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:23.513" level="INFO">VALUE: [5.555000000000837e-06, 5.569000000000407e-06, 5.555000000000837e-06, 5.569999999999881e-06, 5.542000000000741e-06, 5.582999999999977e-06, 5.499999999998562e-06, 5.582999999999977e-06, 5.58400000000292e-06, 5.554999999997368e-06, 5.569000000000407e-06, 5.569999999999881e-06, 5.499999999998562e-06, 5.569000000000407e-06, 5.556000000000311e-06, 5.569999999999881e-06, 5.499999999998562e-06, 5.6529999999978264e-06, 5.582999999999977e-06, 5.610999999999117e-06, 5.582999999999977e-06, 5.5839999999994505e-06, 5.541000000001267e-06, 5.5689999999969375e-06, 5.637999999998783e-06, 5.569000000000407e-06, 5.569000000000407e-06, 5.569999999999881e-06, 5.555000000000837e-06, 5.569999999999881e-06, 5.569999999999881e-06, 5.597000000003016e-06, 5.5689999999969375e-06, 5.5839999999994505e-06, 5.555000000000837e-06, 5.582999999999977e-06, 5.582999999999977e-06, 5.582999999999977e-06, 5.582999999999977e-06, 5.582999999999977e-06, 5.569000000000407e-06, 5.569000000000407e-06, 5.569999999999881e-06, 5.528000000001171e-06, 5.569000000000407e-06, 5.569999999999881e-06, 5.596999999999547e-06, 5.569999999999881e-06, 5.542000000000741e-06, 5.569000000000407e-06]</msg>
<status status="PASS" starttime="20201115 22:01:23.512" endtime="20201115 22:01:23.514"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.507" endtime="20201115 22:01:23.514"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:23.517" endtime="20201115 22:01:23.518"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:23.520" endtime="20201115 22:01:23.540"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.519" endtime="20201115 22:01:23.540"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.515" endtime="20201115 22:01:23.541"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.151" endtime="20201115 22:01:23.541"></status>
</kw>
<msg timestamp="20201115 22:01:23.541" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:23.550" endtime="20201115 22:01:23.566"></status>
</kw>
<msg timestamp="20201115 22:01:23.567" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:23.549" endtime="20201115 22:01:23.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:23.569" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:23.568" endtime="20201115 22:01:23.569"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:23.570" endtime="20201115 22:01:23.572"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.546" endtime="20201115 22:01:23.572"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.544" endtime="20201115 22:01:23.573"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:23.579" endtime="20201115 22:01:23.866"></status>
</kw>
<msg timestamp="20201115 22:01:23.870" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021329819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021335403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:23.578" endtime="20201115 22:01:23.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:23.878" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021329819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021335403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:23.871" endtime="20201115 22:01:23.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:23.879" endtime="20201115 22:01:23.881"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.575" endtime="20201115 22:01:23.881"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.573" endtime="20201115 22:01:23.882"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:23.886" level="INFO">${RESULT} = [{'time': 0.021335403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.5839999999994505e-06, 'source_diff': 5.5839999999994505e-06}, {'time': 0.021405917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:23.883" endtime="20201115 22:01:23.886"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:23.899" level="INFO">${OVERHEAD} = {'time': [0.021335403, 0.021405917, 0.021475167, 0.021546569, 0.021614167, 0.02168325, 0.021754264, 0.021820958, 0.02189125, 0.021960264, 0.022032944, 0.022102667, 0.022173653, 0.022239819, 0.02230836...</msg>
<status status="PASS" starttime="20201115 22:01:23.887" endtime="20201115 22:01:23.900"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:23.904" level="INFO">NAME: 00-overhead-4-remove</msg>
<status status="PASS" starttime="20201115 22:01:23.903" endtime="20201115 22:01:23.905"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:23.907" level="INFO">VALUE: [5.5839999999994505e-06, 5.569999999999881e-06, 5.556000000000311e-06, 5.569000000000407e-06, 5.542000000000741e-06, 5.569000000000407e-06, 5.582999999999977e-06, 5.555000000000837e-06, 5.582999999999977e-06, 5.569999999999881e-06, 5.582999999999977e-06, 5.5839999999994505e-06, 5.514000000001601e-06, 5.555000000000837e-06, 5.554999999997368e-06, 5.554999999997368e-06, 5.5839999999994505e-06, 5.582999999999977e-06, 5.556000000000311e-06, 5.6389999999982565e-06, 5.582999999999977e-06, 5.569000000000407e-06, 5.556000000000311e-06, 5.569000000000407e-06, 5.569000000000407e-06, 5.569000000000407e-06, 5.582999999999977e-06, 5.555000000000837e-06, 5.554999999997368e-06, 5.569000000000407e-06, 5.610999999999117e-06, 5.542000000000741e-06, 5.569000000000407e-06, 5.555000000000837e-06, 5.5839999999994505e-06, 5.556000000000311e-06, 5.5839999999994505e-06, 5.582999999999977e-06, 5.596999999999547e-06, 5.554999999997368e-06, 5.569000000000407e-06, 5.639000000001726e-06, 5.569999999999881e-06, 5.569999999999881e-06, 5.556000000000311e-06, 5.569000000000407e-06, 5.582999999999977e-06, 5.582999999999977e-06, 5.582999999999977e-06, 5.569999999999881e-06]</msg>
<status status="PASS" starttime="20201115 22:01:23.906" endtime="20201115 22:01:23.907"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.901" endtime="20201115 22:01:23.908"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:23.910" endtime="20201115 22:01:23.911"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:23.913" endtime="20201115 22:01:23.933"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.912" endtime="20201115 22:01:23.934"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.908" endtime="20201115 22:01:23.934"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.542" endtime="20201115 22:01:23.934"></status>
</kw>
<msg timestamp="20201115 22:01:23.934" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:23.943" endtime="20201115 22:01:23.957"></status>
</kw>
<msg timestamp="20201115 22:01:23.957" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:23.942" endtime="20201115 22:01:23.957"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:23.959" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:23.958" endtime="20201115 22:01:23.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:23.961" endtime="20201115 22:01:23.962"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.939" endtime="20201115 22:01:23.963"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.937" endtime="20201115 22:01:23.963"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:23.970" endtime="20201115 22:01:24.259"></status>
</kw>
<msg timestamp="20201115 22:01:24.262" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020268819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020274458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:23.968" endtime="20201115 22:01:24.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:24.270" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020268819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020274458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:24.263" endtime="20201115 22:01:24.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:24.271" endtime="20201115 22:01:24.273"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.966" endtime="20201115 22:01:24.274"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.964" endtime="20201115 22:01:24.274"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:24.278" level="INFO">${RESULT} = [{'time': 0.020274458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.6389999999982565e-06, 'source_diff': 5.6389999999982565e-06}, {'time': 0.020342694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:24.275" endtime="20201115 22:01:24.279"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:24.292" level="INFO">${OVERHEAD} = {'time': [0.020274458, 0.020342694, 0.020411556, 0.020480014, 0.020547361, 0.020614069, 0.020681264, 0.020754083, 0.0208215, 0.020889875, 0.020959375, 0.021027514, 0.021094625, 0.021167833, 0.02123756...</msg>
<status status="PASS" starttime="20201115 22:01:24.280" endtime="20201115 22:01:24.292"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:24.297" level="INFO">NAME: 00-overhead-4-remove</msg>
<status status="PASS" starttime="20201115 22:01:24.295" endtime="20201115 22:01:24.297"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:24.299" level="INFO">VALUE: [5.6389999999982565e-06, 5.569000000000407e-06, 5.569999999999881e-06, 5.639000000001726e-06, 5.569000000000407e-06, 5.569000000000407e-06, 5.582999999999977e-06, 5.555000000000837e-06, 5.556000000000311e-06, 5.556000000000311e-06, 5.569000000000407e-06, 5.569999999999881e-06, 5.569000000000407e-06, 5.625000000002156e-06, 5.555000000000837e-06, 5.582999999999977e-06, 5.582999999999977e-06, 5.569000000000407e-06, 5.569999999999881e-06, 5.569000000000407e-06, 5.569999999999881e-06, 5.499999999998562e-06, 5.569999999999881e-06, 5.555000000000837e-06, 5.639000000001726e-06, 5.556000000000311e-06, 5.556000000000311e-06, 5.582999999999977e-06, 5.569000000000407e-06, 5.596999999999547e-06, 5.582999999999977e-06, 5.582999999999977e-06, 5.556000000000311e-06, 5.569000000000407e-06, 5.569000000000407e-06, 5.528000000001171e-06, 5.569000000000407e-06, 5.528000000001171e-06, 5.555000000000837e-06, 5.582999999999977e-06, 5.569999999999881e-06, 5.582999999999977e-06, 5.582999999999977e-06, 5.653000000001296e-06, 5.569000000000407e-06, 5.596999999999547e-06, 5.639000000001726e-06, 5.569000000000407e-06, 5.569000000000407e-06, 5.569000000000407e-06]</msg>
<status status="PASS" starttime="20201115 22:01:24.298" endtime="20201115 22:01:24.299"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.293" endtime="20201115 22:01:24.300"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:24.302" endtime="20201115 22:01:24.303"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:24.306" endtime="20201115 22:01:24.325"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.304" endtime="20201115 22:01:24.326"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.300" endtime="20201115 22:01:24.326"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.935" endtime="20201115 22:01:24.327"></status>
</kw>
<msg timestamp="20201115 22:01:24.327" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:24.336" endtime="20201115 22:01:24.349"></status>
</kw>
<msg timestamp="20201115 22:01:24.349" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:24.334" endtime="20201115 22:01:24.349"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:24.351" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:24.350" endtime="20201115 22:01:24.352"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:24.353" endtime="20201115 22:01:24.354"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.332" endtime="20201115 22:01:24.355"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.329" endtime="20201115 22:01:24.355"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:24.362" endtime="20201115 22:01:24.649"></status>
</kw>
<msg timestamp="20201115 22:01:24.652" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020263264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020268792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:24.360" endtime="20201115 22:01:24.652"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:24.660" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020263264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020268792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:24.653" endtime="20201115 22:01:24.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:24.662" endtime="20201115 22:01:24.663"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.358" endtime="20201115 22:01:24.664"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.356" endtime="20201115 22:01:24.664"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:24.668" level="INFO">${RESULT} = [{'time': 0.020268792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.528000000001171e-06, 'source_diff': 5.528000000001171e-06}, {'time': 0.020340042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:24.665" endtime="20201115 22:01:24.669"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:24.683" level="INFO">${OVERHEAD} = {'time': [0.020268792, 0.020340042, 0.020411903, 0.020482833, 0.020554708, 0.020625403, 0.020691806, 0.020759222, 0.020829903, 0.020902736, 0.02097175, 0.021042278, 0.021109222, 0.021178958, 0.0212511...</msg>
<status status="PASS" starttime="20201115 22:01:24.669" endtime="20201115 22:01:24.683"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:24.688" level="INFO">NAME: 00-overhead-4-remove</msg>
<status status="PASS" starttime="20201115 22:01:24.687" endtime="20201115 22:01:24.688"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:24.690" level="INFO">VALUE: [5.528000000001171e-06, 5.527999999997701e-06, 5.569999999999881e-06, 5.569000000000407e-06, 5.569000000000407e-06, 5.556000000000311e-06, 5.542000000000741e-06, 5.569000000000407e-06, 5.556000000000311e-06, 5.569000000000407e-06, 5.556000000000311e-06, 5.569999999999881e-06, 5.514000000001601e-06, 5.569000000000407e-06, 5.5839999999994505e-06, 5.527999999997701e-06, 5.569000000000407e-06, 5.5839999999994505e-06, 5.569999999999881e-06, 5.569000000000407e-06, 5.582999999999977e-06, 5.569999999999881e-06, 5.569000000000407e-06, 5.569999999999881e-06, 5.582999999999977e-06, 5.569000000000407e-06, 5.569000000000407e-06, 5.582999999999977e-06, 5.569999999999881e-06, 5.555000000000837e-06, 5.556000000000311e-06, 5.569000000000407e-06, 5.569000000000407e-06, 5.569999999999881e-06, 5.582999999999977e-06, 5.569000000000407e-06, 5.554999999997368e-06, 5.569000000000407e-06, 5.555000000000837e-06, 5.569000000000407e-06, 5.556000000000311e-06, 5.542000000000741e-06, 5.569000000000407e-06, 5.569000000000407e-06, 5.5689999999969375e-06, 5.58400000000292e-06, 5.569000000000407e-06, 5.569000000000407e-06, 5.569999999999881e-06, 5.569000000000407e-06]</msg>
<status status="PASS" starttime="20201115 22:01:24.689" endtime="20201115 22:01:24.691"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.684" endtime="20201115 22:01:24.691"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:24.693" endtime="20201115 22:01:24.695"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:24.697" endtime="20201115 22:01:24.716"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.695" endtime="20201115 22:01:24.717"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.692" endtime="20201115 22:01:24.717"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.327" endtime="20201115 22:01:24.718"></status>
</kw>
<msg timestamp="20201115 22:01:24.718" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:24.727" endtime="20201115 22:01:24.741"></status>
</kw>
<msg timestamp="20201115 22:01:24.742" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:24.725" endtime="20201115 22:01:24.742"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:24.744" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:24.743" endtime="20201115 22:01:24.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:24.745" endtime="20201115 22:01:24.747"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.723" endtime="20201115 22:01:24.747"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.721" endtime="20201115 22:01:24.748"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:24.754" endtime="20201115 22:01:25.041"></status>
</kw>
<msg timestamp="20201115 22:01:25.044" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020261389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020266958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:24.753" endtime="20201115 22:01:25.045"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:25.053" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020261389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020266958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:25.046" endtime="20201115 22:01:25.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:25.054" endtime="20201115 22:01:25.056"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.750" endtime="20201115 22:01:25.057"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.748" endtime="20201115 22:01:25.057"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:25.061" level="INFO">${RESULT} = [{'time': 0.020266958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.569000000000407e-06, 'source_diff': 5.569000000000407e-06}, {'time': 0.020339861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:25.058" endtime="20201115 22:01:25.062"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:25.075" level="INFO">${OVERHEAD} = {'time': [0.020266958, 0.020339861, 0.020411806, 0.020480597, 0.020549847, 0.020615806, 0.02068725, 0.020758875, 0.020829375, 0.020897708, 0.020968222, 0.021037083, 0.021109514, 0.021182097, 0.0212545...</msg>
<status status="PASS" starttime="20201115 22:01:25.062" endtime="20201115 22:01:25.075"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:25.079" level="INFO">NAME: 00-overhead-4-remove</msg>
<status status="PASS" starttime="20201115 22:01:25.078" endtime="20201115 22:01:25.080"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:25.082" level="INFO">VALUE: [5.569000000000407e-06, 5.569000000000407e-06, 5.569999999999881e-06, 5.582999999999977e-06, 5.528000000001171e-06, 5.61200000000206e-06, 5.569000000000407e-06, 5.5139999999981315e-06, 5.610999999999117e-06, 5.569000000000407e-06, 5.555000000000837e-06, 5.527000000001697e-06, 5.527999999997701e-06, 5.569000000000407e-06, 5.57000000000335e-06, 5.555000000000837e-06, 5.582999999999977e-06, 5.569000000000407e-06, 5.569999999999881e-06, 5.569999999999881e-06, 5.610999999999117e-06, 5.583000000003446e-06, 5.5839999999994505e-06, 5.569000000000407e-06, 5.653000000001296e-06, 5.5979999999990204e-06, 5.582999999999977e-06, 5.625000000002156e-06, 5.569999999999881e-06, 5.5839999999994505e-06, 5.582999999999977e-06, 5.500000000002031e-06, 5.540999999997798e-06, 5.5839999999994505e-06, 5.569000000000407e-06, 5.582999999999977e-06, 5.569999999999881e-06, 5.569999999999881e-06, 5.556000000000311e-06, 5.556000000000311e-06, 5.5979999999990204e-06, 5.582999999999977e-06, 5.555000000000837e-06, 5.582999999999977e-06, 5.554999999997368e-06, 5.582999999999977e-06, 5.555000000000837e-06, 5.556000000000311e-06, 5.569999999999881e-06, 5.569000000000407e-06]</msg>
<status status="PASS" starttime="20201115 22:01:25.080" endtime="20201115 22:01:25.082"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.076" endtime="20201115 22:01:25.083"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:25.085" endtime="20201115 22:01:25.086"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:25.089" endtime="20201115 22:01:25.108"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.087" endtime="20201115 22:01:25.109"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.083" endtime="20201115 22:01:25.109"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.719" endtime="20201115 22:01:25.109"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.150" endtime="20201115 22:01:25.110"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.149" endtime="20201115 22:01:25.110"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:25.112" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:25.122" endtime="20201115 22:01:25.135"></status>
</kw>
<msg timestamp="20201115 22:01:25.136" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:25.120" endtime="20201115 22:01:25.136"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:25.138" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:25.137" endtime="20201115 22:01:25.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:25.139" endtime="20201115 22:01:25.141"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.118" endtime="20201115 22:01:25.141"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.115" endtime="20201115 22:01:25.142"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:25.149" endtime="20201115 22:01:25.435"></status>
</kw>
<msg timestamp="20201115 22:01:25.439" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024043597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024049431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:25.147" endtime="20201115 22:01:25.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:25.447" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024043597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024049431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:25.440" endtime="20201115 22:01:25.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:25.448" endtime="20201115 22:01:25.450"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.145" endtime="20201115 22:01:25.450"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.143" endtime="20201115 22:01:25.451"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:25.455" level="INFO">${RESULT} = [{'time': 0.024049431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.8339999999997005e-06, 'source_diff': 5.8339999999997005e-06}, {'time': 0.024130486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:25.451" endtime="20201115 22:01:25.455"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:25.468" level="INFO">${OVERHEAD} = {'time': [0.024049431, 0.024130486, 0.02420975, 0.024288889, 0.024367056, 0.024444917, 0.024523819, 0.024603181, 0.024677528, 0.024755819, 0.024835194, 0.024910903, 0.024991861, 0.025071472, 0.0251486...</msg>
<status status="PASS" starttime="20201115 22:01:25.456" endtime="20201115 22:01:25.469"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:25.473" level="INFO">NAME: 00-overhead-5-remove</msg>
<status status="PASS" starttime="20201115 22:01:25.472" endtime="20201115 22:01:25.473"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:25.475" level="INFO">VALUE: [5.8339999999997005e-06, 5.805000000001087e-06, 5.805999999997091e-06, 5.833000000000227e-06, 5.806000000000561e-06, 5.820000000000131e-06, 5.8189999999971875e-06, 5.791999999997521e-06, 5.874999999998937e-06, 5.8189999999971875e-06, 5.833000000000227e-06, 5.820000000000131e-06, 5.819000000000657e-06, 5.819000000000657e-06, 5.833000000000227e-06, 5.819000000000657e-06, 5.833000000000227e-06, 5.819000000000657e-06, 5.819000000000657e-06, 5.819000000000657e-06, 5.819000000000657e-06, 5.833000000000227e-06, 5.806000000000561e-06, 5.8329999999967574e-06, 5.819000000000657e-06, 5.833000000000227e-06, 5.805000000001087e-06, 5.791999999997521e-06, 5.833000000000227e-06, 5.860999999999367e-06, 5.792000000000991e-06, 5.833000000000227e-06, 5.750000000002281e-06, 5.819000000000657e-06, 5.819000000000657e-06, 5.820000000000131e-06, 5.7639999999983815e-06, 5.819000000000657e-06, 5.889000000001976e-06, 5.846999999999797e-06, 5.819000000000657e-06, 5.8339999999997005e-06, 5.806000000000561e-06, 5.804999999997618e-06, 5.750000000002281e-06, 5.7779999999979514e-06, 5.804999999997618e-06, 5.749999999998812e-06, 5.8189999999971875e-06, 5.846999999999797e-06]</msg>
<status status="PASS" starttime="20201115 22:01:25.474" endtime="20201115 22:01:25.476"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.469" endtime="20201115 22:01:25.476"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:25.478" endtime="20201115 22:01:25.480"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:25.482" endtime="20201115 22:01:25.501"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.480" endtime="20201115 22:01:25.502"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.477" endtime="20201115 22:01:25.502"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.113" endtime="20201115 22:01:25.503"></status>
</kw>
<msg timestamp="20201115 22:01:25.503" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:25.512" endtime="20201115 22:01:25.525"></status>
</kw>
<msg timestamp="20201115 22:01:25.525" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:25.510" endtime="20201115 22:01:25.525"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:25.528" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:25.526" endtime="20201115 22:01:25.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:25.529" endtime="20201115 22:01:25.531"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.508" endtime="20201115 22:01:25.531"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.506" endtime="20201115 22:01:25.532"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:25.538" endtime="20201115 22:01:25.826"></status>
</kw>
<msg timestamp="20201115 22:01:25.829" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020723875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020729681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:25.537" endtime="20201115 22:01:25.830"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:25.838" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020723875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020729681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:25.831" endtime="20201115 22:01:25.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:25.839" endtime="20201115 22:01:25.841"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.534" endtime="20201115 22:01:25.841"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.532" endtime="20201115 22:01:25.842"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:25.846" level="INFO">${RESULT} = [{'time': 0.020729681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.806000000000561e-06, 'source_diff': 5.806000000000561e-06}, {'time': 0.020808597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:25.842" endtime="20201115 22:01:25.846"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:25.859" level="INFO">${OVERHEAD} = {'time': [0.020729681, 0.020808597, 0.020888819, 0.020963347, 0.021037167, 0.021117722, 0.021195403, 0.021273222, 0.021351556, 0.021427083, 0.021502125, 0.02158125, 0.021657292, 0.021732528, 0.0218094...</msg>
<status status="PASS" starttime="20201115 22:01:25.847" endtime="20201115 22:01:25.859"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:25.864" level="INFO">NAME: 00-overhead-5-remove</msg>
<status status="PASS" starttime="20201115 22:01:25.863" endtime="20201115 22:01:25.864"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:25.866" level="INFO">VALUE: [5.806000000000561e-06, 5.805000000001087e-06, 5.833000000000227e-06, 5.791000000001517e-06, 5.820000000000131e-06, 5.8189999999971875e-06, 5.861000000002836e-06, 5.833000000000227e-06, 5.820000000000131e-06, 5.860999999999367e-06, 5.819000000000657e-06, 5.819000000000657e-06, 5.83400000000317e-06, 5.820000000000131e-06, 5.805000000001087e-06, 5.819000000000657e-06, 5.833000000000227e-06, 5.820000000000131e-06, 5.819000000000657e-06, 5.805000000001087e-06, 5.833000000000227e-06, 5.8339999999997005e-06, 5.819000000000657e-06, 5.804999999997618e-06, 5.833000000000227e-06, 5.7779999999979514e-06, 5.833000000000227e-06, 5.806000000000561e-06, 5.833000000000227e-06, 5.819000000000657e-06, 5.833000000000227e-06, 5.805000000001087e-06, 5.736000000002711e-06, 5.846999999999797e-06, 5.806000000000561e-06, 5.8329999999967574e-06, 5.8339999999997005e-06, 5.806000000000561e-06, 5.833000000000227e-06, 5.778000000001421e-06, 5.820000000000131e-06, 5.820000000000131e-06, 5.804999999997618e-06, 5.8189999999971875e-06, 5.778000000001421e-06, 5.860999999999367e-06, 5.819000000000657e-06, 5.833000000000227e-06, 5.820000000000131e-06, 5.833000000000227e-06]</msg>
<status status="PASS" starttime="20201115 22:01:25.865" endtime="20201115 22:01:25.867"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.860" endtime="20201115 22:01:25.867"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:25.869" endtime="20201115 22:01:25.871"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:25.873" endtime="20201115 22:01:25.892"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.871" endtime="20201115 22:01:25.893"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.868" endtime="20201115 22:01:25.893"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.503" endtime="20201115 22:01:25.894"></status>
</kw>
<msg timestamp="20201115 22:01:25.894" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:25.903" endtime="20201115 22:01:25.917"></status>
</kw>
<msg timestamp="20201115 22:01:25.918" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:25.901" endtime="20201115 22:01:25.918"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:25.920" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:25.919" endtime="20201115 22:01:25.921"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:25.921" endtime="20201115 22:01:25.923"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.899" endtime="20201115 22:01:25.924"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.897" endtime="20201115 22:01:25.924"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:25.931" endtime="20201115 22:01:26.217"></status>
</kw>
<msg timestamp="20201115 22:01:26.220" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020620014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020625833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:25.929" endtime="20201115 22:01:26.220"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:26.229" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020620014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020625833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:26.221" endtime="20201115 22:01:26.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:26.230" endtime="20201115 22:01:26.231"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.927" endtime="20201115 22:01:26.232"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.925" endtime="20201115 22:01:26.232"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:26.237" level="INFO">${RESULT} = [{'time': 0.020625833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.819000000000657e-06, 'source_diff': 5.819000000000657e-06}, {'time': 0.020699889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:26.233" endtime="20201115 22:01:26.237"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:26.250" level="INFO">${OVERHEAD} = {'time': [0.020625833, 0.020699889, 0.020777653, 0.020856208, 0.020935458, 0.021010083, 0.0210865, 0.021160625, 0.021236847, 0.021317625, 0.021394389, 0.021475333, 0.021556292, 0.021630417, 0.02170573...</msg>
<status status="PASS" starttime="20201115 22:01:26.238" endtime="20201115 22:01:26.250"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:26.254" level="INFO">NAME: 00-overhead-5-remove</msg>
<status status="PASS" starttime="20201115 22:01:26.253" endtime="20201115 22:01:26.255"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:26.257" level="INFO">VALUE: [5.819000000000657e-06, 5.806000000000561e-06, 5.8889999999985065e-06, 5.860999999999367e-06, 5.819000000000657e-06, 5.833000000000227e-06, 5.806000000000561e-06, 5.8189999999971875e-06, 5.846999999999797e-06, 5.819000000000657e-06, 5.833000000000227e-06, 5.819000000000657e-06, 5.820000000000131e-06, 5.820000000000131e-06, 5.819000000000657e-06, 5.806000000000561e-06, 5.8189999999971875e-06, 5.819000000000657e-06, 5.833000000000227e-06, 5.820000000000131e-06, 5.820000000000131e-06, 5.833000000000227e-06, 5.833000000000227e-06, 5.860999999999367e-06, 5.749999999998812e-06, 5.819000000000657e-06, 5.819000000000657e-06, 5.819000000000657e-06, 5.833000000000227e-06, 5.792000000000991e-06, 5.806000000000561e-06, 5.820000000000131e-06, 5.820000000000131e-06, 5.8189999999971875e-06, 5.806000000000561e-06, 5.833000000000227e-06, 5.805000000001087e-06, 5.806000000000561e-06, 5.833000000000227e-06, 5.819000000000657e-06, 5.860999999999367e-06, 5.819000000000657e-06, 5.846999999999797e-06, 5.833000000000227e-06, 5.833000000000227e-06, 5.820000000000131e-06, 5.819000000000657e-06, 5.820000000000131e-06, 5.806000000000561e-06, 5.8189999999971875e-06]</msg>
<status status="PASS" starttime="20201115 22:01:26.256" endtime="20201115 22:01:26.257"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.251" endtime="20201115 22:01:26.258"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:26.260" endtime="20201115 22:01:26.261"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:26.263" endtime="20201115 22:01:26.283"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.262" endtime="20201115 22:01:26.283"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.258" endtime="20201115 22:01:26.284"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.894" endtime="20201115 22:01:26.284"></status>
</kw>
<msg timestamp="20201115 22:01:26.289" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:26.298" endtime="20201115 22:01:26.311"></status>
</kw>
<msg timestamp="20201115 22:01:26.312" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:26.296" endtime="20201115 22:01:26.312"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:26.314" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:26.313" endtime="20201115 22:01:26.314"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:26.315" endtime="20201115 22:01:26.317"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.294" endtime="20201115 22:01:26.317"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.292" endtime="20201115 22:01:26.318"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:26.324" endtime="20201115 22:01:26.612"></status>
</kw>
<msg timestamp="20201115 22:01:26.615" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025277194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025283014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:26.323" endtime="20201115 22:01:26.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:26.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025277194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025283014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:26.616" endtime="20201115 22:01:26.624"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:26.624" endtime="20201115 22:01:26.626"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.320" endtime="20201115 22:01:26.627"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.318" endtime="20201115 22:01:26.627"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:26.631" level="INFO">${RESULT} = [{'time': 0.025283014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.820000000000131e-06, 'source_diff': 5.820000000000131e-06}, {'time': 0.025358736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:26.628" endtime="20201115 22:01:26.631"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:26.645" level="INFO">${OVERHEAD} = {'time': [0.025283014, 0.025358736, 0.025432625, 0.025509375, 0.025583681, 0.0256635, 0.025739472, 0.025820208, 0.025899556, 0.025974806, 0.026050069, 0.026125528, 0.026204111, 0.026283181, 0.02635937...</msg>
<status status="PASS" starttime="20201115 22:01:26.632" endtime="20201115 22:01:26.645"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:26.649" level="INFO">NAME: 00-overhead-5-remove</msg>
<status status="PASS" starttime="20201115 22:01:26.648" endtime="20201115 22:01:26.649"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:26.652" level="INFO">VALUE: [5.820000000000131e-06, 5.792000000000991e-06, 5.806000000000561e-06, 5.833000000000227e-06, 5.778000000001421e-06, 5.8189999999971875e-06, 5.833000000000227e-06, 5.833000000000227e-06, 5.778000000001421e-06, 5.806000000000561e-06, 5.846999999999797e-06, 5.805999999997091e-06, 5.791999999997521e-06, 5.8339999999997005e-06, 5.806000000000561e-06, 5.805000000001087e-06, 5.806000000000561e-06, 5.819000000000657e-06, 5.820000000000131e-06, 5.833000000000227e-06, 5.820000000000131e-06, 5.804999999997618e-06, 5.820000000000131e-06, 5.8189999999971875e-06, 5.8339999999997005e-06, 5.806000000000561e-06, 5.833000000000227e-06, 5.820000000000131e-06, 5.8479999999992704e-06, 5.819000000000657e-06, 5.791999999997521e-06, 5.846999999999797e-06, 5.820000000000131e-06, 5.833000000000227e-06, 5.846999999999797e-06, 5.820000000000131e-06, 5.820000000000131e-06, 5.833000000000227e-06, 5.833000000000227e-06, 5.8189999999971875e-06, 5.805000000001087e-06, 5.846999999999797e-06, 5.763000000002377e-06, 5.819000000000657e-06, 5.805000000001087e-06, 5.820000000000131e-06, 5.819000000000657e-06, 5.820000000000131e-06, 5.820000000000131e-06, 5.8339999999997005e-06]</msg>
<status status="PASS" starttime="20201115 22:01:26.650" endtime="20201115 22:01:26.652"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.646" endtime="20201115 22:01:26.652"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:26.655" endtime="20201115 22:01:26.657"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:26.659" endtime="20201115 22:01:26.678"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.657" endtime="20201115 22:01:26.679"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.653" endtime="20201115 22:01:26.679"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.289" endtime="20201115 22:01:26.680"></status>
</kw>
<msg timestamp="20201115 22:01:26.680" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:26.689" endtime="20201115 22:01:26.704"></status>
</kw>
<msg timestamp="20201115 22:01:26.704" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:26.687" endtime="20201115 22:01:26.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:26.707" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:26.705" endtime="20201115 22:01:26.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:26.708" endtime="20201115 22:01:26.709"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.684" endtime="20201115 22:01:26.710"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.682" endtime="20201115 22:01:26.710"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:26.717" endtime="20201115 22:01:27.004"></status>
</kw>
<msg timestamp="20201115 22:01:27.007" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020137028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020142806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:26.715" endtime="20201115 22:01:27.007"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:27.015" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020137028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020142806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:27.008" endtime="20201115 22:01:27.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:27.016" endtime="20201115 22:01:27.018"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.712" endtime="20201115 22:01:27.019"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.711" endtime="20201115 22:01:27.019"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:27.023" level="INFO">${RESULT} = [{'time': 0.020142806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7779999999979514e-06, 'source_diff': 5.7779999999979514e-06}, {'time': 0.020221708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:27.020" endtime="20201115 22:01:27.023"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:27.036" level="INFO">${OVERHEAD} = {'time': [0.020142806, 0.020221708, 0.020296278, 0.020371319, 0.020446556, 0.020527583, 0.020601403, 0.020676486, 0.0207515, 0.020831972, 0.020906819, 0.020983972, 0.021060167, 0.021138597, 0.02121580...</msg>
<status status="PASS" starttime="20201115 22:01:27.024" endtime="20201115 22:01:27.037"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:27.041" level="INFO">NAME: 00-overhead-5-remove</msg>
<status status="PASS" starttime="20201115 22:01:27.040" endtime="20201115 22:01:27.041"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:27.043" level="INFO">VALUE: [5.7779999999979514e-06, 5.833000000000227e-06, 5.875000000002406e-06, 5.8189999999971875e-06, 5.820000000000131e-06, 5.8189999999971875e-06, 5.764000000001851e-06, 5.805000000001087e-06, 5.833000000000227e-06, 5.819000000000657e-06, 5.791000000001517e-06, 5.819000000000657e-06, 5.820000000000131e-06, 5.8189999999971875e-06, 5.806000000000561e-06, 5.8339999999997005e-06, 5.819000000000657e-06, 5.805999999997091e-06, 5.791999999997521e-06, 5.805000000001087e-06, 5.819000000000657e-06, 5.820000000000131e-06, 5.833000000000227e-06, 5.860999999999367e-06, 5.819000000000657e-06, 5.8479999999992704e-06, 5.805999999997091e-06, 5.819000000000657e-06, 5.792000000000991e-06, 5.833000000000227e-06, 5.833000000000227e-06, 5.805000000001087e-06, 5.790999999998048e-06, 5.806000000000561e-06, 5.778000000001421e-06, 5.8329999999967574e-06, 5.833000000000227e-06, 5.804999999997618e-06, 5.791999999997521e-06, 5.8189999999971875e-06, 5.860999999999367e-06, 5.819000000000657e-06, 5.8339999999997005e-06, 5.820000000000131e-06, 5.874999999998937e-06, 5.778000000001421e-06, 5.833000000000227e-06, 5.833000000000227e-06, 5.820000000000131e-06, 5.776999999998478e-06]</msg>
<status status="PASS" starttime="20201115 22:01:27.042" endtime="20201115 22:01:27.044"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.037" endtime="20201115 22:01:27.045"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:27.047" endtime="20201115 22:01:27.048"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:27.051" endtime="20201115 22:01:27.070"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.049" endtime="20201115 22:01:27.071"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.046" endtime="20201115 22:01:27.071"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.680" endtime="20201115 22:01:27.071"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.111" endtime="20201115 22:01:27.072"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.110" endtime="20201115 22:01:27.072"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:27.074" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:27.083" endtime="20201115 22:01:27.097"></status>
</kw>
<msg timestamp="20201115 22:01:27.098" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:27.081" endtime="20201115 22:01:27.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:27.100" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:27.099" endtime="20201115 22:01:27.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:27.101" endtime="20201115 22:01:27.103"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.079" endtime="20201115 22:01:27.103"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.077" endtime="20201115 22:01:27.104"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:27.110" endtime="20201115 22:01:27.397"></status>
</kw>
<msg timestamp="20201115 22:01:27.400" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022766597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022772667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:27.109" endtime="20201115 22:01:27.401"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:27.409" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022766597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022772667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:27.402" endtime="20201115 22:01:27.409"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:27.410" endtime="20201115 22:01:27.412"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.106" endtime="20201115 22:01:27.412"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.104" endtime="20201115 22:01:27.413"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:27.417" level="INFO">${RESULT} = [{'time': 0.022772667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.070000000000381e-06, 'source_diff': 6.070000000000381e-06}, {'time': 0.022855833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:27.413" endtime="20201115 22:01:27.417"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:27.430" level="INFO">${OVERHEAD} = {'time': [0.022772667, 0.022855833, 0.022941375, 0.023027, 0.023115014, 0.023203944, 0.023288375, 0.023372486, 0.023458583, 0.023540389, 0.023625542, 0.023714236, 0.023801694, 0.023883667, 0.023972375...</msg>
<status status="PASS" starttime="20201115 22:01:27.418" endtime="20201115 22:01:27.430"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:27.435" level="INFO">NAME: 00-overhead-6-remove</msg>
<status status="PASS" starttime="20201115 22:01:27.434" endtime="20201115 22:01:27.435"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:27.438" level="INFO">VALUE: [6.070000000000381e-06, 6.0689999999974376e-06, 6.069000000000907e-06, 6.083000000000477e-06, 6.083000000000477e-06, 6.069000000000907e-06, 6.069000000000907e-06, 6.069000000000907e-06, 6.069000000000907e-06, 6.055999999997341e-06, 6.041999999997771e-06, 6.124999999999187e-06, 6.055000000001337e-06, 6.056000000000811e-06, 6.056000000000811e-06, 6.070000000000381e-06, 6.012999999999158e-06, 6.069000000000907e-06, 6.070000000000381e-06, 6.069000000000907e-06, 6.0839999999999506e-06, 6.0139999999986316e-06, 6.0689999999974376e-06, 6.069000000000907e-06, 6.083000000000477e-06, 6.069000000000907e-06, 6.083000000000477e-06, 6.055999999997341e-06, 6.041999999997771e-06, 6.056000000000811e-06, 6.069000000000907e-06, 6.027000000002197e-06, 6.056000000000811e-06, 6.083000000000477e-06, 6.055000000001337e-06, 6.083000000000477e-06, 6.069000000000907e-06, 6.069000000000907e-06, 6.1389999999987566e-06, 6.070000000000381e-06, 6.056000000000811e-06, 6.083000000000477e-06, 6.124999999999187e-06, 6.097000000000047e-06, 6.069999999996911e-06, 6.0839999999999506e-06, 6.0839999999999506e-06, 6.0139999999986316e-06, 6.0829999999970075e-06, 6.083000000000477e-06]</msg>
<status status="PASS" starttime="20201115 22:01:27.436" endtime="20201115 22:01:27.438"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.431" endtime="20201115 22:01:27.439"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:27.441" endtime="20201115 22:01:27.442"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:27.444" endtime="20201115 22:01:27.464"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.443" endtime="20201115 22:01:27.464"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.439" endtime="20201115 22:01:27.465"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.074" endtime="20201115 22:01:27.465"></status>
</kw>
<msg timestamp="20201115 22:01:27.466" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:27.474" endtime="20201115 22:01:27.490"></status>
</kw>
<msg timestamp="20201115 22:01:27.491" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:27.473" endtime="20201115 22:01:27.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:27.493" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:27.492" endtime="20201115 22:01:27.493"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:27.494" endtime="20201115 22:01:27.496"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.470" endtime="20201115 22:01:27.496"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.468" endtime="20201115 22:01:27.497"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:27.503" endtime="20201115 22:01:27.789"></status>
</kw>
<msg timestamp="20201115 22:01:27.793" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020837167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020843236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:27.502" endtime="20201115 22:01:27.793"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:27.801" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020837167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020843236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:27.794" endtime="20201115 22:01:27.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:27.802" endtime="20201115 22:01:27.804"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.499" endtime="20201115 22:01:27.804"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.497" endtime="20201115 22:01:27.805"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:27.809" level="INFO">${RESULT} = [{'time': 0.020843236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.069000000000907e-06, 'source_diff': 6.069000000000907e-06}, {'time': 0.020925042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:27.806" endtime="20201115 22:01:27.809"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:27.822" level="INFO">${OVERHEAD} = {'time': [0.020843236, 0.020925042, 0.02101225, 0.021098278, 0.021184778, 0.021272764, 0.021359778, 0.021442736, 0.021524778, 0.021613417, 0.021700597, 0.0217885, 0.021877444, 0.021960931, 0.022046069...</msg>
<status status="PASS" starttime="20201115 22:01:27.810" endtime="20201115 22:01:27.823"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:27.827" level="INFO">NAME: 00-overhead-6-remove</msg>
<status status="PASS" starttime="20201115 22:01:27.826" endtime="20201115 22:01:27.828"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:27.830" level="INFO">VALUE: [6.069000000000907e-06, 6.070000000000381e-06, 6.069000000000907e-06, 6.042000000001241e-06, 6.0839999999999506e-06, 6.070000000000381e-06, 6.110999999999617e-06, 6.055000000001337e-06, 6.139000000002226e-06, 6.124999999999187e-06, 6.097000000000047e-06, 6.0689999999974376e-06, 6.054999999997868e-06, 6.056000000000811e-06, 6.069000000000907e-06, 6.056000000000811e-06, 6.070000000000381e-06, 6.069000000000907e-06, 6.070000000000381e-06, 6.083000000000477e-06, 5.999999999999062e-06, 6.069000000000907e-06, 6.056000000000811e-06, 6.110999999999617e-06, 6.069000000000907e-06, 6.069000000000907e-06, 6.110999999999617e-06, 6.0689999999974376e-06, 6.070000000000381e-06, 6.055999999997341e-06, 6.083000000000477e-06, 6.056000000000811e-06, 6.055000000001337e-06, 6.070000000000381e-06, 6.041000000001767e-06, 6.069999999996911e-06, 6.0839999999999506e-06, 6.055000000001337e-06, 6.070000000000381e-06, 6.055000000001337e-06, 6.070000000000381e-06, 6.069999999996911e-06, 6.0829999999970075e-06, 6.069000000000907e-06, 6.0829999999970075e-06, 6.054999999997868e-06, 6.0689999999974376e-06, 6.056000000000811e-06, 6.069000000000907e-06, 6.0279999999982015e-06]</msg>
<status status="PASS" starttime="20201115 22:01:27.828" endtime="20201115 22:01:27.830"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.824" endtime="20201115 22:01:27.831"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:27.833" endtime="20201115 22:01:27.834"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:27.836" endtime="20201115 22:01:27.856"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.835" endtime="20201115 22:01:27.857"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.831" endtime="20201115 22:01:27.857"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.466" endtime="20201115 22:01:27.857"></status>
</kw>
<msg timestamp="20201115 22:01:27.857" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:27.866" endtime="20201115 22:01:27.880"></status>
</kw>
<msg timestamp="20201115 22:01:27.881" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:27.865" endtime="20201115 22:01:27.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:27.883" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:27.882" endtime="20201115 22:01:27.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:27.884" endtime="20201115 22:01:27.886"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.862" endtime="20201115 22:01:27.886"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.860" endtime="20201115 22:01:27.887"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:27.893" endtime="20201115 22:01:28.180"></status>
</kw>
<msg timestamp="20201115 22:01:28.183" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021011028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021017097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:27.892" endtime="20201115 22:01:28.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:28.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021011028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021017097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:28.184" endtime="20201115 22:01:28.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:28.192" endtime="20201115 22:01:28.194"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.889" endtime="20201115 22:01:28.194"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.888" endtime="20201115 22:01:28.195"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:28.199" level="INFO">${RESULT} = [{'time': 0.021017097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0689999999974376e-06, 'source_diff': 6.0689999999974376e-06}, {'time': 0.021099861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:28.196" endtime="20201115 22:01:28.200"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:28.213" level="INFO">${OVERHEAD} = {'time': [0.021017097, 0.021099861, 0.021182472, 0.021265889, 0.021351458, 0.021439347, 0.021520847, 0.021604264, 0.021688917, 0.021773528, 0.021856917, 0.021940639, 0.022025542, 0.0221075, 0.02219120...</msg>
<status status="PASS" starttime="20201115 22:01:28.200" endtime="20201115 22:01:28.213"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:28.217" level="INFO">NAME: 00-overhead-6-remove</msg>
<status status="PASS" starttime="20201115 22:01:28.216" endtime="20201115 22:01:28.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:28.220" level="INFO">VALUE: [6.0689999999974376e-06, 6.139000000002226e-06, 6.028000000001671e-06, 6.070000000000381e-06, 6.110999999999617e-06, 6.069000000000907e-06, 6.054999999997868e-06, 6.083000000000477e-06, 6.069999999996911e-06, 6.070000000000381e-06, 6.0839999999999506e-06, 6.083000000000477e-06, 6.0839999999999506e-06, 6.041999999997771e-06, 6.069000000000907e-06, 6.083000000000477e-06, 6.070000000000381e-06, 6.070000000000381e-06, 6.0839999999999506e-06, 6.083000000000477e-06, 6.097000000000047e-06, 6.055000000001337e-06, 6.069999999996911e-06, 6.055000000001337e-06, 6.0689999999974376e-06, 6.069000000000907e-06, 6.069000000000907e-06, 6.11200000000256e-06, 6.1389999999987566e-06, 6.069999999996911e-06, 6.070000000000381e-06, 6.0689999999974376e-06, 6.083000000000477e-06, 6.070000000000381e-06, 6.083000000000477e-06, 6.056000000000811e-06, 6.0839999999999506e-06, 6.070000000000381e-06, 6.069000000000907e-06, 6.070000000000381e-06, 6.028000000001671e-06, 6.070000000000381e-06, 6.124999999999187e-06, 6.083000000000477e-06, 6.083000000000477e-06, 6.069000000000907e-06, 6.027000000002197e-06, 6.069000000000907e-06, 5.985999999999492e-06, 6.069000000000907e-06]</msg>
<status status="PASS" starttime="20201115 22:01:28.219" endtime="20201115 22:01:28.220"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.214" endtime="20201115 22:01:28.221"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:28.223" endtime="20201115 22:01:28.224"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:28.227" endtime="20201115 22:01:28.246"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.225" endtime="20201115 22:01:28.247"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.221" endtime="20201115 22:01:28.247"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.858" endtime="20201115 22:01:28.247"></status>
</kw>
<msg timestamp="20201115 22:01:28.248" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:28.257" endtime="20201115 22:01:28.269"></status>
</kw>
<msg timestamp="20201115 22:01:28.269" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:28.255" endtime="20201115 22:01:28.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:28.271" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:28.270" endtime="20201115 22:01:28.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:28.273" endtime="20201115 22:01:28.274"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.252" endtime="20201115 22:01:28.275"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.250" endtime="20201115 22:01:28.275"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:28.282" endtime="20201115 22:01:28.569"></status>
</kw>
<msg timestamp="20201115 22:01:28.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020345625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020351639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:28.280" endtime="20201115 22:01:28.573"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:28.581" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020345625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020351639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:28.574" endtime="20201115 22:01:28.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:28.582" endtime="20201115 22:01:28.584"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.278" endtime="20201115 22:01:28.585"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.276" endtime="20201115 22:01:28.585"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:28.589" level="INFO">${RESULT} = [{'time': 0.020351639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.014000000002101e-06, 'source_diff': 6.014000000002101e-06}, {'time': 0.020435986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:28.586" endtime="20201115 22:01:28.590"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:28.603" level="INFO">${OVERHEAD} = {'time': [0.020351639, 0.020435986, 0.020519875, 0.020608028, 0.020691986, 0.020774028, 0.020859167, 0.020947333, 0.021029083, 0.021117722, 0.021199486, 0.021284111, 0.021371639, 0.021455986, 0.021538...</msg>
<status status="PASS" starttime="20201115 22:01:28.590" endtime="20201115 22:01:28.603"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:28.607" level="INFO">NAME: 00-overhead-6-remove</msg>
<status status="PASS" starttime="20201115 22:01:28.606" endtime="20201115 22:01:28.608"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:28.610" level="INFO">VALUE: [6.014000000002101e-06, 6.0139999999986316e-06, 6.069000000000907e-06, 6.056000000000811e-06, 6.0689999999974376e-06, 6.028000000001671e-06, 6.042000000001241e-06, 6.040999999998298e-06, 6.069000000000907e-06, 6.0689999999974376e-06, 6.055000000001337e-06, 6.069000000000907e-06, 6.070000000000381e-06, 6.069000000000907e-06, 6.070000000000381e-06, 6.0689999999974376e-06, 6.0839999999999506e-06, 6.0839999999999506e-06, 6.026999999998728e-06, 6.0689999999974376e-06, 6.070000000000381e-06, 6.054999999997868e-06, 6.1389999999987566e-06, 6.0829999999970075e-06, 6.069000000000907e-06, 6.0279999999982015e-06, 6.110999999999617e-06, 6.083000000000477e-06, 6.055000000001337e-06, 6.056000000000811e-06, 6.070000000000381e-06, 6.069000000000907e-06, 6.070000000000381e-06, 6.069000000000907e-06, 6.070000000000381e-06, 6.083000000000477e-06, 6.070000000000381e-06, 6.083000000000477e-06, 6.069000000000907e-06, 6.056000000000811e-06, 6.070000000000381e-06, 6.042000000001241e-06, 6.056000000000811e-06, 6.0689999999974376e-06, 6.070000000000381e-06, 6.0689999999974376e-06, 6.070000000000381e-06, 6.070000000000381e-06, 6.111000000003086e-06, 6.083000000000477e-06]</msg>
<status status="PASS" starttime="20201115 22:01:28.608" endtime="20201115 22:01:28.610"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.604" endtime="20201115 22:01:28.611"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:28.613" endtime="20201115 22:01:28.614"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:28.617" endtime="20201115 22:01:28.636"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.615" endtime="20201115 22:01:28.637"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.611" endtime="20201115 22:01:28.637"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.248" endtime="20201115 22:01:28.637"></status>
</kw>
<msg timestamp="20201115 22:01:28.638" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:28.647" endtime="20201115 22:01:28.661"></status>
</kw>
<msg timestamp="20201115 22:01:28.662" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:28.645" endtime="20201115 22:01:28.662"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:28.664" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:28.663" endtime="20201115 22:01:28.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:28.665" endtime="20201115 22:01:28.667"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.642" endtime="20201115 22:01:28.667"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.640" endtime="20201115 22:01:28.668"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:28.674" endtime="20201115 22:01:28.961"></status>
</kw>
<msg timestamp="20201115 22:01:28.965" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020192292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020198319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:28.673" endtime="20201115 22:01:28.965"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:28.973" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020192292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020198319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:28.966" endtime="20201115 22:01:28.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:28.974" endtime="20201115 22:01:28.976"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.670" endtime="20201115 22:01:28.977"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.668" endtime="20201115 22:01:28.977"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:28.981" level="INFO">${RESULT} = [{'time': 0.020198319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.026999999998728e-06, 'source_diff': 6.026999999998728e-06}, {'time': 0.020283153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:28.978" endtime="20201115 22:01:28.981"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:28.995" level="INFO">${OVERHEAD} = {'time': [0.020198319, 0.020283153, 0.020364708, 0.020447472, 0.02053, 0.02061875, 0.020700681, 0.020789389, 0.020871847, 0.020957236, 0.021039736, 0.021128097, 0.021217042, 0.021302097, 0.021387653, ...</msg>
<status status="PASS" starttime="20201115 22:01:28.982" endtime="20201115 22:01:28.995"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:28.999" level="INFO">NAME: 00-overhead-6-remove</msg>
<status status="PASS" starttime="20201115 22:01:28.998" endtime="20201115 22:01:28.999"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:29.002" level="INFO">VALUE: [6.026999999998728e-06, 6.070000000000381e-06, 6.054999999997868e-06, 6.069000000000907e-06, 6.069000000000907e-06, 6.111000000003086e-06, 6.069999999996911e-06, 6.055999999997341e-06, 6.0689999999974376e-06, 6.083000000000477e-06, 6.1389999999987566e-06, 6.097000000000047e-06, 6.0839999999999506e-06, 6.054999999997868e-06, 6.070000000000381e-06, 6.070000000000381e-06, 6.056000000000811e-06, 6.041999999997771e-06, 6.069000000000907e-06, 6.028000000001671e-06, 6.083000000000477e-06, 6.056000000000811e-06, 6.124999999999187e-06, 6.040999999998298e-06, 6.055000000001337e-06, 6.054999999997868e-06, 6.070000000000381e-06, 6.069000000000907e-06, 6.097000000000047e-06, 6.070000000000381e-06, 6.070000000000381e-06, 6.111000000003086e-06, 6.0829999999970075e-06, 6.070000000000381e-06, 6.070000000000381e-06, 6.069000000000907e-06, 6.0979999999995205e-06, 6.069999999996911e-06, 6.083000000000477e-06, 6.070000000000381e-06, 6.069000000000907e-06, 6.069000000000907e-06, 6.069000000000907e-06, 6.069000000000907e-06, 6.056000000000811e-06, 6.083000000000477e-06, 6.070000000000381e-06, 6.055000000001337e-06, 6.069000000000907e-06, 6.056000000000811e-06]</msg>
<status status="PASS" starttime="20201115 22:01:29.000" endtime="20201115 22:01:29.002"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.996" endtime="20201115 22:01:29.003"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:29.005" endtime="20201115 22:01:29.006"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:29.008" endtime="20201115 22:01:29.028"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.007" endtime="20201115 22:01:29.028"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.003" endtime="20201115 22:01:29.029"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.638" endtime="20201115 22:01:29.029"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.073" endtime="20201115 22:01:29.029"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.072" endtime="20201115 22:01:29.029"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:29.032" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:29.041" endtime="20201115 22:01:29.056"></status>
</kw>
<msg timestamp="20201115 22:01:29.057" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:29.039" endtime="20201115 22:01:29.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:29.059" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:29.058" endtime="20201115 22:01:29.059"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:29.060" endtime="20201115 22:01:29.062"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.036" endtime="20201115 22:01:29.062"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.034" endtime="20201115 22:01:29.063"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:29.070" endtime="20201115 22:01:29.357"></status>
</kw>
<msg timestamp="20201115 22:01:29.360" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022570361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022576681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:29.068" endtime="20201115 22:01:29.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:29.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022570361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022576681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:29.361" endtime="20201115 22:01:29.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:29.369" endtime="20201115 22:01:29.371"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.066" endtime="20201115 22:01:29.372"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.064" endtime="20201115 22:01:29.372"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:29.376" level="INFO">${RESULT} = [{'time': 0.022576681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.320000000000631e-06, 'source_diff': 6.320000000000631e-06}, {'time': 0.022673528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:29.373" endtime="20201115 22:01:29.376"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:29.389" level="INFO">${OVERHEAD} = {'time': [0.022576681, 0.022673528, 0.022770097, 0.022860319, 0.022954583, 0.023049569, 0.023142889, 0.023235667, 0.023329153, 0.023421236, 0.023516194, 0.023609917, 0.023704833, 0.023795542, 0.023885...</msg>
<status status="PASS" starttime="20201115 22:01:29.377" endtime="20201115 22:01:29.390"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:29.394" level="INFO">NAME: 00-overhead-7-remove</msg>
<status status="PASS" starttime="20201115 22:01:29.393" endtime="20201115 22:01:29.394"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:29.397" level="INFO">VALUE: [6.320000000000631e-06, 6.346999999996827e-06, 6.333000000000727e-06, 6.319000000001157e-06, 6.319000000001157e-06, 6.304999999998118e-06, 6.320000000000631e-06, 6.306000000001061e-06, 6.319999999997161e-06, 6.333000000000727e-06, 6.305000000001587e-06, 6.306000000001061e-06, 6.319000000001157e-06, 6.320000000000631e-06, 6.320000000000631e-06, 6.333000000000727e-06, 6.291999999998021e-06, 6.360999999999867e-06, 6.292000000001491e-06, 6.306000000001061e-06, 6.334000000000201e-06, 6.388999999999007e-06, 6.333999999996731e-06, 6.318999999997688e-06, 6.374999999999437e-06, 6.334000000000201e-06, 6.3329999999972575e-06, 6.334000000000201e-06, 6.347000000000297e-06, 6.318999999997688e-06, 6.333000000000727e-06, 6.320000000000631e-06, 6.2779999999984515e-06, 6.319000000001157e-06, 6.319999999997161e-06, 6.320000000000631e-06, 6.292000000001491e-06, 6.333000000000727e-06, 6.305000000001587e-06, 6.304999999998118e-06, 6.347000000000297e-06, 6.360999999999867e-06, 6.304999999998118e-06, 6.320000000000631e-06, 6.292000000001491e-06, 6.292000000001491e-06, 6.360999999999867e-06, 6.305999999997591e-06, 6.347000000000297e-06, 6.334000000000201e-06]</msg>
<status status="PASS" starttime="20201115 22:01:29.395" endtime="20201115 22:01:29.397"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.390" endtime="20201115 22:01:29.398"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:29.400" endtime="20201115 22:01:29.401"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:29.403" endtime="20201115 22:01:29.423"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.402" endtime="20201115 22:01:29.423"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.398" endtime="20201115 22:01:29.424"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.032" endtime="20201115 22:01:29.424"></status>
</kw>
<msg timestamp="20201115 22:01:29.424" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:29.433" endtime="20201115 22:01:29.449"></status>
</kw>
<msg timestamp="20201115 22:01:29.449" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:29.432" endtime="20201115 22:01:29.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:29.452" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:29.450" endtime="20201115 22:01:29.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:29.453" endtime="20201115 22:01:29.455"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.429" endtime="20201115 22:01:29.456"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.427" endtime="20201115 22:01:29.456"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:29.463" endtime="20201115 22:01:29.749"></status>
</kw>
<msg timestamp="20201115 22:01:29.752" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020105917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020112292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:29.461" endtime="20201115 22:01:29.752"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:29.760" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020105917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020112292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:29.753" endtime="20201115 22:01:29.760"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:29.761" endtime="20201115 22:01:29.763"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.458" endtime="20201115 22:01:29.763"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.457" endtime="20201115 22:01:29.764"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:29.768" level="INFO">${RESULT} = [{'time': 0.020112292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.374999999999437e-06, 'source_diff': 6.374999999999437e-06}, {'time': 0.020206903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:29.765" endtime="20201115 22:01:29.768"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:29.781" level="INFO">${OVERHEAD} = {'time': [0.020112292, 0.020206903, 0.020303972, 0.020393681, 0.020487917, 0.020579875, 0.020672181, 0.020767806, 0.020860889, 0.020956597, 0.021046583, 0.021142514, 0.021237361, 0.021330611, 0.021425...</msg>
<status status="PASS" starttime="20201115 22:01:29.769" endtime="20201115 22:01:29.782"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:29.786" level="INFO">NAME: 00-overhead-7-remove</msg>
<status status="PASS" starttime="20201115 22:01:29.785" endtime="20201115 22:01:29.786"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:29.788" level="INFO">VALUE: [6.374999999999437e-06, 6.319999999997161e-06, 6.319000000001157e-06, 6.3479999999997705e-06, 6.320000000000631e-06, 6.374999999999437e-06, 6.320000000000631e-06, 6.306000000001061e-06, 6.320000000000631e-06, 6.333000000000727e-06, 6.319000000001157e-06, 6.389000000002476e-06, 6.319000000001157e-06, 6.318999999997688e-06, 6.320000000000631e-06, 6.292000000001491e-06, 6.306000000001061e-06, 6.375000000002906e-06, 6.318999999997688e-06, 6.305000000001587e-06, 6.320000000000631e-06, 6.319000000001157e-06, 6.306000000001061e-06, 6.320000000000631e-06, 6.291999999998021e-06, 6.276999999998978e-06, 6.320000000000631e-06, 6.306000000001061e-06, 6.333000000000727e-06, 6.319000000001157e-06, 6.320000000000631e-06, 6.334000000000201e-06, 6.320000000000631e-06, 6.360999999999867e-06, 6.320000000000631e-06, 6.306000000001061e-06, 6.347000000000297e-06, 6.320000000000631e-06, 6.360999999999867e-06, 6.320000000000631e-06, 6.320000000000631e-06, 6.320000000000631e-06, 6.292000000001491e-06, 6.320000000000631e-06, 6.291999999998021e-06, 6.305999999997591e-06, 6.320000000000631e-06, 6.374999999999437e-06, 6.319000000001157e-06, 6.305000000001587e-06]</msg>
<status status="PASS" starttime="20201115 22:01:29.787" endtime="20201115 22:01:29.789"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.782" endtime="20201115 22:01:29.789"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:29.792" endtime="20201115 22:01:29.793"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:29.795" endtime="20201115 22:01:29.815"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.793" endtime="20201115 22:01:29.815"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.790" endtime="20201115 22:01:29.816"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.425" endtime="20201115 22:01:29.816"></status>
</kw>
<msg timestamp="20201115 22:01:29.816" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:29.826" endtime="20201115 22:01:29.841"></status>
</kw>
<msg timestamp="20201115 22:01:29.841" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:29.823" endtime="20201115 22:01:29.842"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:29.844" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:29.842" endtime="20201115 22:01:29.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:29.845" endtime="20201115 22:01:29.847"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.821" endtime="20201115 22:01:29.847"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.819" endtime="20201115 22:01:29.848"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:29.854" endtime="20201115 22:01:30.140"></status>
</kw>
<msg timestamp="20201115 22:01:30.144" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020916069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020922389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:29.853" endtime="20201115 22:01:30.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:30.152" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020916069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020922389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:30.145" endtime="20201115 22:01:30.152"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:30.153" endtime="20201115 22:01:30.155"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.850" endtime="20201115 22:01:30.155"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.848" endtime="20201115 22:01:30.156"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:30.160" level="INFO">${RESULT} = [{'time': 0.020922389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.320000000000631e-06, 'source_diff': 6.320000000000631e-06}, {'time': 0.021017625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:30.157" endtime="20201115 22:01:30.160"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:30.173" level="INFO">${OVERHEAD} = {'time': [0.020922389, 0.021017625, 0.021113486, 0.02120625, 0.021299972, 0.021391403, 0.021487347, 0.021581597, 0.021673125, 0.021770264, 0.021861153, 0.021954847, 0.022051903, 0.022144514, 0.0222375...</msg>
<status status="PASS" starttime="20201115 22:01:30.161" endtime="20201115 22:01:30.174"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:30.178" level="INFO">NAME: 00-overhead-7-remove</msg>
<status status="PASS" starttime="20201115 22:01:30.177" endtime="20201115 22:01:30.178"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:30.180" level="INFO">VALUE: [6.320000000000631e-06, 6.319000000001157e-06, 6.319000000001157e-06, 6.318999999997688e-06, 6.319000000001157e-06, 6.334000000000201e-06, 6.333000000000727e-06, 6.389000000002476e-06, 6.333000000000727e-06, 6.320000000000631e-06, 6.360999999999867e-06, 6.333000000000727e-06, 6.292000000001491e-06, 6.333000000000727e-06, 6.306000000001061e-06, 6.319999999997161e-06, 6.249999999999312e-06, 6.347000000000297e-06, 6.319000000001157e-06, 6.292000000001491e-06, 6.333000000000727e-06, 6.360999999999867e-06, 6.305000000001587e-06, 6.333000000000727e-06, 6.360999999999867e-06, 6.318999999997688e-06, 6.347000000000297e-06, 6.333000000000727e-06, 6.304999999998118e-06, 6.320000000000631e-06, 6.333000000000727e-06, 6.319000000001157e-06, 6.318999999997688e-06, 6.318999999997688e-06, 6.389000000002476e-06, 6.292000000001491e-06, 6.334000000000201e-06, 6.320000000000631e-06, 6.334000000000201e-06, 6.334000000000201e-06, 6.333000000000727e-06, 6.320000000000631e-06, 6.290999999998548e-06, 6.292000000001491e-06, 6.333000000000727e-06, 6.290999999998548e-06, 6.319000000001157e-06, 6.305999999997591e-06, 6.3329999999972575e-06, 6.291000000002017e-06]</msg>
<status status="PASS" starttime="20201115 22:01:30.179" endtime="20201115 22:01:30.181"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.174" endtime="20201115 22:01:30.181"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:30.183" endtime="20201115 22:01:30.185"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:30.188" endtime="20201115 22:01:30.207"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.186" endtime="20201115 22:01:30.208"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.182" endtime="20201115 22:01:30.208"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.817" endtime="20201115 22:01:30.209"></status>
</kw>
<msg timestamp="20201115 22:01:30.209" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:30.218" endtime="20201115 22:01:30.234"></status>
</kw>
<msg timestamp="20201115 22:01:30.235" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:30.217" endtime="20201115 22:01:30.235"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:30.237" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:30.236" endtime="20201115 22:01:30.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:30.238" endtime="20201115 22:01:30.240"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.214" endtime="20201115 22:01:30.240"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.212" endtime="20201115 22:01:30.241"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:30.247" endtime="20201115 22:01:30.535"></status>
</kw>
<msg timestamp="20201115 22:01:30.538" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021302361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02130875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:01:30.246" endtime="20201115 22:01:30.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:30.546" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021302361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02130875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:01:30.539" endtime="20201115 22:01:30.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:30.548" endtime="20201115 22:01:30.549"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.243" endtime="20201115 22:01:30.550"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.242" endtime="20201115 22:01:30.550"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:30.554" level="INFO">${RESULT} = [{'time': 0.02130875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.389000000002476e-06, 'source_diff': 6.389000000002476e-06}, {'time': 0.021405083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:01:30.551" endtime="20201115 22:01:30.555"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:30.568" level="INFO">${OVERHEAD} = {'time': [0.02130875, 0.021405083, 0.021499764, 0.021593583, 0.02168325, 0.021776958, 0.021868556, 0.021959181, 0.022055542, 0.022147819, 0.022239431, 0.022333847, 0.022423986, 0.022515806, 0.02260818...</msg>
<status status="PASS" starttime="20201115 22:01:30.555" endtime="20201115 22:01:30.568"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:30.572" level="INFO">NAME: 00-overhead-7-remove</msg>
<status status="PASS" starttime="20201115 22:01:30.571" endtime="20201115 22:01:30.573"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:30.575" level="INFO">VALUE: [6.389000000002476e-06, 6.304999999998118e-06, 6.306000000001061e-06, 6.347000000000297e-06, 6.333000000000727e-06, 6.304999999998118e-06, 6.320000000000631e-06, 6.320000000000631e-06, 6.334000000000201e-06, 6.318999999997688e-06, 6.3479999999997705e-06, 6.333000000000727e-06, 6.305000000001587e-06, 6.320000000000631e-06, 6.278000000001921e-06, 6.318999999997688e-06, 6.319000000001157e-06, 6.319000000001157e-06, 6.305999999997591e-06, 6.374999999999437e-06, 6.320000000000631e-06, 6.305000000001587e-06, 6.389000000002476e-06, 6.333000000000727e-06, 6.319000000001157e-06, 6.319000000001157e-06, 6.333000000000727e-06, 6.334000000000201e-06, 6.333000000000727e-06, 6.320000000000631e-06, 6.306000000001061e-06, 6.320000000000631e-06, 6.264000000002351e-06, 6.278000000001921e-06, 6.320000000000631e-06, 6.320000000000631e-06, 6.319000000001157e-06, 6.304999999998118e-06, 6.318999999997688e-06, 6.264000000002351e-06, 6.318999999997688e-06, 6.318999999997688e-06, 6.320000000000631e-06, 6.333000000000727e-06, 6.304999999998118e-06, 6.333000000000727e-06, 6.306000000001061e-06, 6.306000000001061e-06, 6.304999999998118e-06, 6.319000000001157e-06]</msg>
<status status="PASS" starttime="20201115 22:01:30.573" endtime="20201115 22:01:30.575"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.569" endtime="20201115 22:01:30.576"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:30.578" endtime="20201115 22:01:30.580"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:30.582" endtime="20201115 22:01:30.601"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.580" endtime="20201115 22:01:30.602"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.576" endtime="20201115 22:01:30.602"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.210" endtime="20201115 22:01:30.603"></status>
</kw>
<msg timestamp="20201115 22:01:30.603" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:30.612" endtime="20201115 22:01:30.628"></status>
</kw>
<msg timestamp="20201115 22:01:30.629" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:30.611" endtime="20201115 22:01:30.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:30.631" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:30.630" endtime="20201115 22:01:30.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:30.632" endtime="20201115 22:01:30.634"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.608" endtime="20201115 22:01:30.634"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.606" endtime="20201115 22:01:30.635"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:30.641" endtime="20201115 22:01:30.928"></status>
</kw>
<msg timestamp="20201115 22:01:30.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021412, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021418361, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:01:30.640" endtime="20201115 22:01:30.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:30.940" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021412, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021418361, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:01:30.933" endtime="20201115 22:01:30.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:30.941" endtime="20201115 22:01:30.943"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.637" endtime="20201115 22:01:30.943"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.635" endtime="20201115 22:01:30.944"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:30.948" level="INFO">${RESULT} = [{'time': 0.021418361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.360999999999867e-06, 'source_diff': 6.360999999999867e-06}, {'time': 0.021515431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:30.944" endtime="20201115 22:01:30.948"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:30.961" level="INFO">${OVERHEAD} = {'time': [0.021418361, 0.021515431, 0.021607611, 0.021702014, 0.021797694, 0.021894819, 0.021990222, 0.022084542, 0.022175708, 0.022265944, 0.022360569, 0.022452208, 0.022543556, 0.022639667, 0.022736...</msg>
<status status="PASS" starttime="20201115 22:01:30.949" endtime="20201115 22:01:30.961"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:30.966" level="INFO">NAME: 00-overhead-7-remove</msg>
<status status="PASS" starttime="20201115 22:01:30.965" endtime="20201115 22:01:30.966"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:30.968" level="INFO">VALUE: [6.360999999999867e-06, 6.320000000000631e-06, 6.374999999999437e-06, 6.3329999999972575e-06, 6.333000000000727e-06, 6.304999999998118e-06, 6.319000000001157e-06, 6.374999999999437e-06, 6.347000000000297e-06, 6.374999999999437e-06, 6.333000000000727e-06, 6.319000000001157e-06, 6.320000000000631e-06, 6.305999999997591e-06, 6.333000000000727e-06, 6.387999999999533e-06, 6.319999999997161e-06, 6.319000000001157e-06, 6.319000000001157e-06, 6.304999999998118e-06, 6.304999999998118e-06, 6.305000000001587e-06, 6.318999999997688e-06, 6.333000000000727e-06, 6.319000000001157e-06, 6.320000000000631e-06, 6.333000000000727e-06, 6.333000000000727e-06, 6.3479999999997705e-06, 6.318999999997688e-06, 6.319000000001157e-06, 6.333000000000727e-06, 6.304999999998118e-06, 6.235999999999742e-06, 6.319000000001157e-06, 6.304999999998118e-06, 6.334000000000201e-06, 6.319000000001157e-06, 6.333000000000727e-06, 6.347000000000297e-06, 6.388999999999007e-06, 6.306000000001061e-06, 6.334000000000201e-06, 6.320000000000631e-06, 6.333000000000727e-06, 6.305000000001587e-06, 6.320000000000631e-06, 6.319000000001157e-06, 6.320000000000631e-06, 6.320000000000631e-06]</msg>
<status status="PASS" starttime="20201115 22:01:30.967" endtime="20201115 22:01:30.969"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.962" endtime="20201115 22:01:30.970"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:30.972" endtime="20201115 22:01:30.973"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:30.975" endtime="20201115 22:01:30.995"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.974" endtime="20201115 22:01:30.996"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.970" endtime="20201115 22:01:30.996"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.603" endtime="20201115 22:01:30.996"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.031" endtime="20201115 22:01:30.997"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.030" endtime="20201115 22:01:30.997"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:30.999" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:31.008" endtime="20201115 22:01:31.022"></status>
</kw>
<msg timestamp="20201115 22:01:31.022" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:31.006" endtime="20201115 22:01:31.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:31.025" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:31.023" endtime="20201115 22:01:31.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:31.026" endtime="20201115 22:01:31.028"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.004" endtime="20201115 22:01:31.028"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.002" endtime="20201115 22:01:31.028"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:31.035" endtime="20201115 22:01:31.322"></status>
</kw>
<msg timestamp="20201115 22:01:31.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022689417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022696056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:31.033" endtime="20201115 22:01:31.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:31.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022689417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022696056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:31.326" endtime="20201115 22:01:31.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:31.334" endtime="20201115 22:01:31.336"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.031" endtime="20201115 22:01:31.337"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.029" endtime="20201115 22:01:31.337"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:31.341" level="INFO">${RESULT} = [{'time': 0.022696056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.638999999999257e-06, 'source_diff': 6.638999999999257e-06}, {'time': 0.022797042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:31.338" endtime="20201115 22:01:31.341"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:31.354" level="INFO">${OVERHEAD} = {'time': [0.022696056, 0.022797042, 0.022898014, 0.023001681, 0.023105764, 0.023211333, 0.023312375, 0.023416056, 0.023519167, 0.023623319, 0.023725708, 0.023825569, 0.023926556, 0.024032042, 0.024134...</msg>
<status status="PASS" starttime="20201115 22:01:31.342" endtime="20201115 22:01:31.355"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:31.359" level="INFO">NAME: 00-overhead-8-remove</msg>
<status status="PASS" starttime="20201115 22:01:31.358" endtime="20201115 22:01:31.359"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:31.365" level="INFO">VALUE: [6.638999999999257e-06, 6.5980000000000205e-06, 6.570000000000881e-06, 6.570000000000881e-06, 6.583000000000977e-06, 6.569000000001407e-06, 6.556000000001311e-06, 6.570000000000881e-06, 6.570000000000881e-06, 6.583000000000977e-06, 6.500000000003031e-06, 6.569000000001407e-06, 6.584000000000451e-06, 6.570000000000881e-06, 6.569000000001407e-06, 6.583000000000977e-06, 6.584000000000451e-06, 6.569000000001407e-06, 6.569000000001407e-06, 6.584000000000451e-06, 6.542000000001741e-06, 6.556000000001311e-06, 6.583000000000977e-06, 6.556000000001311e-06, 6.624999999999687e-06, 6.499999999999562e-06, 6.513999999999132e-06, 6.5829999999975075e-06, 6.611000000000117e-06, 6.597000000000547e-06, 6.583000000000977e-06, 6.569999999997411e-06, 6.624999999999687e-06, 6.597000000000547e-06, 6.583000000000977e-06, 6.570000000000881e-06, 6.584000000000451e-06, 6.5829999999975075e-06, 6.583000000000977e-06, 6.569000000001407e-06, 6.570000000000881e-06, 6.570000000000881e-06, 6.541999999998271e-06, 6.569000000001407e-06, 6.526999999999228e-06, 6.583000000000977e-06, 6.597000000000547e-06, 6.570000000000881e-06, 6.568999999997938e-06, 6.555000000001837e-06]</msg>
<status status="PASS" starttime="20201115 22:01:31.360" endtime="20201115 22:01:31.366"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.355" endtime="20201115 22:01:31.366"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:31.369" endtime="20201115 22:01:31.370"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:31.372" endtime="20201115 22:01:31.392"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.371" endtime="20201115 22:01:31.392"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.367" endtime="20201115 22:01:31.393"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.000" endtime="20201115 22:01:31.393"></status>
</kw>
<msg timestamp="20201115 22:01:31.393" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:31.402" endtime="20201115 22:01:31.419"></status>
</kw>
<msg timestamp="20201115 22:01:31.419" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:31.401" endtime="20201115 22:01:31.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:31.422" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:31.420" endtime="20201115 22:01:31.422"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:31.423" endtime="20201115 22:01:31.424"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.398" endtime="20201115 22:01:31.425"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.396" endtime="20201115 22:01:31.425"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:31.432" endtime="20201115 22:01:31.718"></status>
</kw>
<msg timestamp="20201115 22:01:31.721" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021013417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021019972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:31.430" endtime="20201115 22:01:31.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:31.729" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021013417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021019972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:31.722" endtime="20201115 22:01:31.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:31.730" endtime="20201115 22:01:31.732"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.428" endtime="20201115 22:01:31.733"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.426" endtime="20201115 22:01:31.733"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:31.737" level="INFO">${RESULT} = [{'time': 0.021019972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.555000000001837e-06, 'source_diff': 6.555000000001837e-06}, {'time': 0.021125556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:31.734" endtime="20201115 22:01:31.738"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:31.751" level="INFO">${OVERHEAD} = {'time': [0.021019972, 0.021125556, 0.021230111, 0.021333222, 0.021435903, 0.021535722, 0.021640569, 0.021743528, 0.021844972, 0.021945583, 0.022048694, 0.022148931, 0.022249208, 0.022351903, 0.022454...</msg>
<status status="PASS" starttime="20201115 22:01:31.738" endtime="20201115 22:01:31.751"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:31.756" level="INFO">NAME: 00-overhead-8-remove</msg>
<status status="PASS" starttime="20201115 22:01:31.754" endtime="20201115 22:01:31.756"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:31.758" level="INFO">VALUE: [6.555000000001837e-06, 6.584000000000451e-06, 6.568999999997938e-06, 6.5829999999975075e-06, 6.597000000000547e-06, 6.569000000001407e-06, 6.568999999997938e-06, 6.570000000000881e-06, 6.528000000002171e-06, 6.611000000000117e-06, 6.583000000000977e-06, 6.570000000000881e-06, 6.583000000000977e-06, 6.570000000000881e-06, 6.583000000000977e-06, 6.569000000001407e-06, 6.568999999997938e-06, 6.568999999997938e-06, 6.569000000001407e-06, 6.638999999999257e-06, 6.556000000001311e-06, 6.555000000001837e-06, 6.569000000001407e-06, 6.569000000001407e-06, 6.569999999997411e-06, 6.568999999997938e-06, 6.556000000001311e-06, 6.583000000000977e-06, 6.583000000000977e-06, 6.570000000000881e-06, 6.541000000002267e-06, 6.5829999999975075e-06, 6.568999999997938e-06, 6.541999999998271e-06, 6.638999999999257e-06, 6.513999999999132e-06, 6.568999999997938e-06, 6.583999999996981e-06, 6.5980000000000205e-06, 6.555000000001837e-06, 6.624999999999687e-06, 6.568999999997938e-06, 6.584000000000451e-06, 6.555999999997841e-06, 6.570000000000881e-06, 6.569000000001407e-06, 6.568999999997938e-06, 6.568999999997938e-06, 6.638999999999257e-06, 6.555000000001837e-06]</msg>
<status status="PASS" starttime="20201115 22:01:31.757" endtime="20201115 22:01:31.758"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.752" endtime="20201115 22:01:31.759"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:31.761" endtime="20201115 22:01:31.762"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:31.765" endtime="20201115 22:01:31.784"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.763" endtime="20201115 22:01:31.785"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.760" endtime="20201115 22:01:31.785"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.394" endtime="20201115 22:01:31.786"></status>
</kw>
<msg timestamp="20201115 22:01:31.786" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:31.795" endtime="20201115 22:01:31.812"></status>
</kw>
<msg timestamp="20201115 22:01:31.812" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:31.793" endtime="20201115 22:01:31.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:31.815" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:31.813" endtime="20201115 22:01:31.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:31.816" endtime="20201115 22:01:31.818"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.790" endtime="20201115 22:01:31.818"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.788" endtime="20201115 22:01:31.819"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:31.825" endtime="20201115 22:01:32.113"></status>
</kw>
<msg timestamp="20201115 22:01:32.117" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021258583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021265153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:31.823" endtime="20201115 22:01:32.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:32.125" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021258583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021265153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:32.118" endtime="20201115 22:01:32.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:32.126" endtime="20201115 22:01:32.128"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.821" endtime="20201115 22:01:32.128"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.819" endtime="20201115 22:01:32.129"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:32.133" level="INFO">${RESULT} = [{'time': 0.021265153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.569999999997411e-06, 'source_diff': 6.569999999997411e-06}, {'time': 0.021367167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:32.130" endtime="20201115 22:01:32.133"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:32.147" level="INFO">${OVERHEAD} = {'time': [0.021265153, 0.021367167, 0.021465764, 0.021569833, 0.021673722, 0.021778097, 0.021883208, 0.021986861, 0.022092403, 0.022191278, 0.022296833, 0.022396458, 0.022498403, 0.022601778, 0.022701...</msg>
<status status="PASS" starttime="20201115 22:01:32.134" endtime="20201115 22:01:32.147"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:32.151" level="INFO">NAME: 00-overhead-8-remove</msg>
<status status="PASS" starttime="20201115 22:01:32.150" endtime="20201115 22:01:32.151"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:32.154" level="INFO">VALUE: [6.569999999997411e-06, 6.570000000000881e-06, 6.5969999999970774e-06, 6.583000000000977e-06, 6.568999999997938e-06, 6.554999999998368e-06, 6.583000000000977e-06, 6.499999999999562e-06, 6.611000000000117e-06, 6.583999999996981e-06, 6.499999999999562e-06, 6.639000000002726e-06, 6.584000000000451e-06, 6.584000000000451e-06, 6.597000000000547e-06, 6.584000000000451e-06, 6.584000000000451e-06, 6.540999999998798e-06, 6.611000000000117e-06, 6.556000000001311e-06, 6.624999999999687e-06, 6.569000000001407e-06, 6.570000000000881e-06, 6.5829999999975075e-06, 6.5829999999975075e-06, 6.5969999999970774e-06, 6.514000000002601e-06, 6.569000000001407e-06, 6.568999999997938e-06, 6.570000000000881e-06, 6.583000000000977e-06, 6.568999999997938e-06, 6.568999999997938e-06, 6.569999999997411e-06, 6.569000000001407e-06, 6.570000000000881e-06, 6.569000000001407e-06, 6.568999999997938e-06, 6.570000000000881e-06, 6.570000000000881e-06, 6.569000000001407e-06, 6.570000000000881e-06, 6.568999999997938e-06, 6.570000000000881e-06, 6.514000000002601e-06, 6.584000000000451e-06, 6.583000000000977e-06, 6.568999999997938e-06, 6.570000000000881e-06, 6.570000000000881e-06]</msg>
<status status="PASS" starttime="20201115 22:01:32.152" endtime="20201115 22:01:32.154"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.147" endtime="20201115 22:01:32.154"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:32.157" endtime="20201115 22:01:32.158"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:32.160" endtime="20201115 22:01:32.180"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.159" endtime="20201115 22:01:32.180"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.155" endtime="20201115 22:01:32.181"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.786" endtime="20201115 22:01:32.181"></status>
</kw>
<msg timestamp="20201115 22:01:32.181" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:32.190" endtime="20201115 22:01:32.206"></status>
</kw>
<msg timestamp="20201115 22:01:32.206" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:32.189" endtime="20201115 22:01:32.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:32.209" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:32.207" endtime="20201115 22:01:32.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:32.210" endtime="20201115 22:01:32.211"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.186" endtime="20201115 22:01:32.212"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.184" endtime="20201115 22:01:32.212"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:32.219" endtime="20201115 22:01:32.507"></status>
</kw>
<msg timestamp="20201115 22:01:32.510" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020280194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020286764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:32.218" endtime="20201115 22:01:32.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:32.519" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020280194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020286764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:32.511" endtime="20201115 22:01:32.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:32.520" endtime="20201115 22:01:32.522"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.215" endtime="20201115 22:01:32.522"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.213" endtime="20201115 22:01:32.523"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:32.527" level="INFO">${RESULT} = [{'time': 0.020286764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.569999999997411e-06, 'source_diff': 6.569999999997411e-06}, {'time': 0.020388708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:32.524" endtime="20201115 22:01:32.527"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:32.540" level="INFO">${OVERHEAD} = {'time': [0.020286764, 0.020388708, 0.020486889, 0.0205865, 0.020684625, 0.020784264, 0.0208845, 0.020988097, 0.021089806, 0.021189653, 0.021291569, 0.021392347, 0.021497819, 0.021601958, 0.021705556,...</msg>
<status status="PASS" starttime="20201115 22:01:32.528" endtime="20201115 22:01:32.541"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:32.545" level="INFO">NAME: 00-overhead-8-remove</msg>
<status status="PASS" starttime="20201115 22:01:32.544" endtime="20201115 22:01:32.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:32.547" level="INFO">VALUE: [6.569999999997411e-06, 6.568999999997938e-06, 6.542000000001741e-06, 6.513999999999132e-06, 6.569000000001407e-06, 6.583000000000977e-06, 6.569000000001407e-06, 6.555000000001837e-06, 6.584000000000451e-06, 6.570000000000881e-06, 6.526999999999228e-06, 6.611000000000117e-06, 6.583000000000977e-06, 6.569000000001407e-06, 6.556000000001311e-06, 6.570000000000881e-06, 6.611000000000117e-06, 6.624999999999687e-06, 6.555000000001837e-06, 6.5829999999975075e-06, 6.570000000000881e-06, 6.583000000000977e-06, 6.597000000000547e-06, 6.583000000000977e-06, 6.584000000000451e-06, 6.5829999999975075e-06, 6.555000000001837e-06, 6.611000000000117e-06, 6.651999999999353e-06, 6.555000000001837e-06, 6.570000000000881e-06, 6.554999999998368e-06, 6.569999999997411e-06, 6.555999999997841e-06, 6.556000000001311e-06, 6.583000000000977e-06, 6.569000000001407e-06, 6.584000000000451e-06, 6.570000000000881e-06, 6.6529999999988265e-06, 6.583000000000977e-06, 6.570000000000881e-06, 6.570000000000881e-06, 6.568999999997938e-06, 6.569000000001407e-06, 6.569000000001407e-06, 6.583000000000977e-06, 6.569000000001407e-06, 6.568999999997938e-06, 6.569000000001407e-06]</msg>
<status status="PASS" starttime="20201115 22:01:32.546" endtime="20201115 22:01:32.548"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.541" endtime="20201115 22:01:32.548"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:32.551" endtime="20201115 22:01:32.552"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:32.554" endtime="20201115 22:01:32.573"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.552" endtime="20201115 22:01:32.574"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.549" endtime="20201115 22:01:32.575"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.182" endtime="20201115 22:01:32.575"></status>
</kw>
<msg timestamp="20201115 22:01:32.575" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:32.584" endtime="20201115 22:01:32.599"></status>
</kw>
<msg timestamp="20201115 22:01:32.599" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:32.582" endtime="20201115 22:01:32.599"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:32.601" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:32.600" endtime="20201115 22:01:32.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:32.603" endtime="20201115 22:01:32.604"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.580" endtime="20201115 22:01:32.605"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.578" endtime="20201115 22:01:32.605"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:32.612" endtime="20201115 22:01:32.899"></status>
</kw>
<msg timestamp="20201115 22:01:32.902" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020268847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020275403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:32.610" endtime="20201115 22:01:32.902"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:32.910" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020268847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020275403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:32.903" endtime="20201115 22:01:32.911"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:32.912" endtime="20201115 22:01:32.913"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.608" endtime="20201115 22:01:32.914"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.606" endtime="20201115 22:01:32.914"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:32.918" level="INFO">${RESULT} = [{'time': 0.020275403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.556000000001311e-06, 'source_diff': 6.556000000001311e-06}, {'time': 0.020374542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:32.915" endtime="20201115 22:01:32.919"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:32.932" level="INFO">${OVERHEAD} = {'time': [0.020275403, 0.020374542, 0.020472958, 0.020575431, 0.020675069, 0.0207735, 0.020875, 0.020974639, 0.021080139, 0.021180389, 0.021282069, 0.021380278, 0.021481181, 0.021582722, 0.021687986, ...</msg>
<status status="PASS" starttime="20201115 22:01:32.919" endtime="20201115 22:01:32.932"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:32.936" level="INFO">NAME: 00-overhead-8-remove</msg>
<status status="PASS" starttime="20201115 22:01:32.935" endtime="20201115 22:01:32.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:32.939" level="INFO">VALUE: [6.556000000001311e-06, 6.584000000000451e-06, 6.568999999997938e-06, 6.570000000000881e-06, 6.583000000000977e-06, 6.597000000000547e-06, 6.569000000001407e-06, 6.583000000000977e-06, 6.583000000000977e-06, 6.570000000000881e-06, 6.569000000001407e-06, 6.6529999999988265e-06, 6.583999999996981e-06, 6.5969999999970774e-06, 6.611000000000117e-06, 6.554999999998368e-06, 6.597000000000547e-06, 6.584000000000451e-06, 6.528000000002171e-06, 6.569999999997411e-06, 6.513999999999132e-06, 6.568999999997938e-06, 6.556000000001311e-06, 6.584000000000451e-06, 6.570000000000881e-06, 6.597000000000547e-06, 6.5969999999970774e-06, 6.554999999998368e-06, 6.570000000000881e-06, 6.569000000001407e-06, 6.5279999999987015e-06, 6.584000000000451e-06, 6.583000000000977e-06, 6.5969999999970774e-06, 6.513999999999132e-06, 6.568999999997938e-06, 6.584000000000451e-06, 6.570000000000881e-06, 6.555999999997841e-06, 6.556000000001311e-06, 6.570000000000881e-06, 6.5829999999975075e-06, 6.597000000000547e-06, 6.569000000001407e-06, 6.583000000000977e-06, 6.570000000000881e-06, 6.597000000000547e-06, 6.583000000000977e-06, 6.513999999999132e-06, 6.555999999997841e-06]</msg>
<status status="PASS" starttime="20201115 22:01:32.938" endtime="20201115 22:01:32.939"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.933" endtime="20201115 22:01:32.940"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:32.942" endtime="20201115 22:01:32.943"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:32.946" endtime="20201115 22:01:32.965"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.944" endtime="20201115 22:01:32.966"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.940" endtime="20201115 22:01:32.966"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.576" endtime="20201115 22:01:32.966"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.998" endtime="20201115 22:01:32.967"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.997" endtime="20201115 22:01:32.967"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:32.969" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:32.978" endtime="20201115 22:01:32.992"></status>
</kw>
<msg timestamp="20201115 22:01:32.992" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:32.976" endtime="20201115 22:01:32.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:32.995" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:32.993" endtime="20201115 22:01:32.995"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:32.996" endtime="20201115 22:01:32.998"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.974" endtime="20201115 22:01:32.998"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.971" endtime="20201115 22:01:32.999"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:33.006" endtime="20201115 22:01:33.292"></status>
</kw>
<msg timestamp="20201115 22:01:33.296" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022543986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022550792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:33.004" endtime="20201115 22:01:33.296"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:33.304" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022543986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022550792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:33.297" endtime="20201115 22:01:33.304"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:33.305" endtime="20201115 22:01:33.307"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.001" endtime="20201115 22:01:33.307"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.000" endtime="20201115 22:01:33.308"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:33.312" level="INFO">${RESULT} = [{'time': 0.022550792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.806000000001561e-06, 'source_diff': 6.806000000001561e-06}, {'time': 0.022659514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:33.308" endtime="20201115 22:01:33.312"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:33.325" level="INFO">${OVERHEAD} = {'time': [0.022550792, 0.022659514, 0.022772597, 0.022882764, 0.022989889, 0.023102667, 0.023213597, 0.023323583, 0.023435125, 0.023548597, 0.023662319, 0.023775167, 0.023887306, 0.023997306, 0.024107...</msg>
<status status="PASS" starttime="20201115 22:01:33.313" endtime="20201115 22:01:33.325"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:33.330" level="INFO">NAME: 00-overhead-9-remove</msg>
<status status="PASS" starttime="20201115 22:01:33.329" endtime="20201115 22:01:33.330"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:33.332" level="INFO">VALUE: [6.806000000001561e-06, 6.819999999997661e-06, 6.790999999999048e-06, 6.833000000001227e-06, 6.820000000001131e-06, 6.820000000001131e-06, 6.790999999999048e-06, 6.888999999999507e-06, 6.847000000000797e-06, 6.805000000002087e-06, 6.819000000001657e-06, 6.806000000001561e-06, 6.834000000000701e-06, 6.820000000001131e-06, 6.847000000000797e-06, 6.819999999997661e-06, 6.805999999998091e-06, 6.819000000001657e-06, 6.819000000001657e-06, 6.861000000000367e-06, 6.833999999997231e-06, 6.847000000000797e-06, 6.818999999998188e-06, 6.819000000001657e-06, 6.820000000001131e-06, 6.776999999999478e-06, 6.820000000001131e-06, 6.819000000001657e-06, 6.833000000001227e-06, 6.818999999998188e-06, 6.833000000001227e-06, 6.736000000000242e-06, 6.778000000002421e-06, 6.8329999999977575e-06, 6.820000000001131e-06, 6.833000000001227e-06, 6.819999999997661e-06, 6.749999999999812e-06, 6.819999999997661e-06, 6.8329999999977575e-06, 6.847000000000797e-06, 6.820000000001131e-06, 6.834000000000701e-06, 6.820000000001131e-06, 6.818999999998188e-06, 6.806000000001561e-06, 6.763999999999382e-06, 6.874999999999937e-06, 6.804999999998618e-06, 6.819999999997661e-06]</msg>
<status status="PASS" starttime="20201115 22:01:33.331" endtime="20201115 22:01:33.332"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.326" endtime="20201115 22:01:33.333"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:33.335" endtime="20201115 22:01:33.337"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:33.339" endtime="20201115 22:01:33.358"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.337" endtime="20201115 22:01:33.359"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.334" endtime="20201115 22:01:33.359"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.969" endtime="20201115 22:01:33.359"></status>
</kw>
<msg timestamp="20201115 22:01:33.360" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:33.369" endtime="20201115 22:01:33.385"></status>
</kw>
<msg timestamp="20201115 22:01:33.386" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:33.367" endtime="20201115 22:01:33.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:33.388" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:33.387" endtime="20201115 22:01:33.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:33.390" endtime="20201115 22:01:33.391"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.364" endtime="20201115 22:01:33.392"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.362" endtime="20201115 22:01:33.392"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:33.399" endtime="20201115 22:01:33.686"></status>
</kw>
<msg timestamp="20201115 22:01:33.689" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021017847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021024667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:33.397" endtime="20201115 22:01:33.689"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:33.697" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021017847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021024667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:33.690" endtime="20201115 22:01:33.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:33.698" endtime="20201115 22:01:33.700"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.395" endtime="20201115 22:01:33.701"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.393" endtime="20201115 22:01:33.701"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:33.705" level="INFO">${RESULT} = [{'time': 0.021024667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.820000000001131e-06, 'source_diff': 6.820000000001131e-06}, {'time': 0.021135528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:33.702" endtime="20201115 22:01:33.705"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:33.718" level="INFO">${OVERHEAD} = {'time': [0.021024667, 0.021135528, 0.021244264, 0.021353514, 0.021465833, 0.021573903, 0.021682514, 0.021790097, 0.021899306, 0.022006639, 0.022115375, 0.022228153, 0.022339486, 0.022452583, 0.022563...</msg>
<status status="PASS" starttime="20201115 22:01:33.706" endtime="20201115 22:01:33.719"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:33.723" level="INFO">NAME: 00-overhead-9-remove</msg>
<status status="PASS" starttime="20201115 22:01:33.722" endtime="20201115 22:01:33.723"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:33.726" level="INFO">VALUE: [6.820000000001131e-06, 6.806000000001561e-06, 6.8329999999977575e-06, 6.888999999999507e-06, 6.819000000001657e-06, 6.819999999997661e-06, 6.847000000000797e-06, 6.833000000001227e-06, 6.834000000000701e-06, 6.806000000001561e-06, 6.818999999998188e-06, 6.820000000001131e-06, 6.818999999998188e-06, 6.833000000001227e-06, 6.7919999999985214e-06, 6.833999999997231e-06, 6.875000000003406e-06, 6.805999999998091e-06, 6.833000000001227e-06, 6.819999999997661e-06, 6.736000000000242e-06, 6.820000000001131e-06, 6.805999999998091e-06, 6.834000000000701e-06, 6.820000000001131e-06, 6.749999999999812e-06, 6.818999999998188e-06, 6.874999999999937e-06, 6.833000000001227e-06, 6.833999999997231e-06, 6.847999999996801e-06, 6.818999999998188e-06, 6.804999999998618e-06, 6.818999999998188e-06, 6.818999999998188e-06, 6.819999999997661e-06, 6.818999999998188e-06, 6.763999999999382e-06, 6.806000000001561e-06, 6.8469999999973274e-06, 6.763999999999382e-06, 6.819000000001657e-06, 6.861000000000367e-06, 6.820000000001131e-06, 6.889000000002976e-06, 6.820000000001131e-06, 6.764000000002851e-06, 6.861000000000367e-06, 6.834000000000701e-06, 6.820000000001131e-06]</msg>
<status status="PASS" starttime="20201115 22:01:33.724" endtime="20201115 22:01:33.726"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.719" endtime="20201115 22:01:33.726"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:33.729" endtime="20201115 22:01:33.730"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:33.732" endtime="20201115 22:01:33.751"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.731" endtime="20201115 22:01:33.752"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.727" endtime="20201115 22:01:33.753"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.360" endtime="20201115 22:01:33.753"></status>
</kw>
<msg timestamp="20201115 22:01:33.753" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:33.762" endtime="20201115 22:01:33.778"></status>
</kw>
<msg timestamp="20201115 22:01:33.779" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:33.760" endtime="20201115 22:01:33.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:33.781" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:33.780" endtime="20201115 22:01:33.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:33.782" endtime="20201115 22:01:33.784"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.758" endtime="20201115 22:01:33.784"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.756" endtime="20201115 22:01:33.785"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:33.791" endtime="20201115 22:01:34.078"></status>
</kw>
<msg timestamp="20201115 22:01:34.081" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020701708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0207085, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:01:33.790" endtime="20201115 22:01:34.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:34.089" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020701708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0207085, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:01:34.082" endtime="20201115 22:01:34.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:34.091" endtime="20201115 22:01:34.092"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.787" endtime="20201115 22:01:34.093"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.785" endtime="20201115 22:01:34.093"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:34.097" level="INFO">${RESULT} = [{'time': 0.0207085, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.792000000001991e-06, 'source_diff': 6.792000000001991e-06}, {'time': 0.020816806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:01:34.094" endtime="20201115 22:01:34.098"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:34.111" level="INFO">${OVERHEAD} = {'time': [0.0207085, 0.020816806, 0.020928944, 0.021039167, 0.021152903, 0.021264569, 0.021375028, 0.021488764, 0.021601042, 0.021710556, 0.021822611, 0.021935625, 0.022046514, 0.022157625, 0.02226513...</msg>
<status status="PASS" starttime="20201115 22:01:34.098" endtime="20201115 22:01:34.111"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:34.115" level="INFO">NAME: 00-overhead-9-remove</msg>
<status status="PASS" starttime="20201115 22:01:34.114" endtime="20201115 22:01:34.116"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:34.118" level="INFO">VALUE: [6.792000000001991e-06, 6.806000000001561e-06, 6.805000000002087e-06, 6.806000000001561e-06, 6.834000000000701e-06, 6.833000000001227e-06, 6.834000000000701e-06, 6.833000000001227e-06, 6.820000000001131e-06, 6.819999999997661e-06, 6.763999999999382e-06, 6.749999999999812e-06, 6.833000000001227e-06, 6.819000000001657e-06, 6.820000000001131e-06, 6.861000000000367e-06, 6.8329999999977575e-06, 6.8469999999973274e-06, 6.833000000001227e-06, 6.818999999998188e-06, 6.806000000001561e-06, 6.833000000001227e-06, 6.820000000001131e-06, 6.820000000001131e-06, 6.819000000001657e-06, 6.874999999999937e-06, 6.804999999998618e-06, 6.818999999998188e-06, 6.834000000000701e-06, 6.820000000001131e-06, 6.7779999999989515e-06, 6.8469999999973274e-06, 6.874999999999937e-06, 6.847000000000797e-06, 6.847000000000797e-06, 6.833000000001227e-06, 6.820000000001131e-06, 6.820000000001131e-06, 6.818999999998188e-06, 6.818999999998188e-06, 6.819000000001657e-06, 6.833000000001227e-06, 6.833000000001227e-06, 6.763999999999382e-06, 6.818999999998188e-06, 6.833000000001227e-06, 6.820000000001131e-06, 6.819000000001657e-06, 6.861000000000367e-06, 6.805999999998091e-06]</msg>
<status status="PASS" starttime="20201115 22:01:34.116" endtime="20201115 22:01:34.118"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.112" endtime="20201115 22:01:34.119"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:34.121" endtime="20201115 22:01:34.122"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:34.124" endtime="20201115 22:01:34.144"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.123" endtime="20201115 22:01:34.144"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.119" endtime="20201115 22:01:34.145"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.754" endtime="20201115 22:01:34.146"></status>
</kw>
<msg timestamp="20201115 22:01:34.146" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:34.155" endtime="20201115 22:01:34.171"></status>
</kw>
<msg timestamp="20201115 22:01:34.172" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:34.153" endtime="20201115 22:01:34.172"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:34.174" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:34.173" endtime="20201115 22:01:34.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:34.175" endtime="20201115 22:01:34.177"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.151" endtime="20201115 22:01:34.178"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.148" endtime="20201115 22:01:34.178"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:34.184" endtime="20201115 22:01:34.471"></status>
</kw>
<msg timestamp="20201115 22:01:34.474" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021262167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021268986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:34.183" endtime="20201115 22:01:34.474"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:34.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021262167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021268986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:34.475" endtime="20201115 22:01:34.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:34.483" endtime="20201115 22:01:34.485"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.180" endtime="20201115 22:01:34.486"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.179" endtime="20201115 22:01:34.486"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:34.490" level="INFO">${RESULT} = [{'time': 0.021268986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.819000000001657e-06, 'source_diff': 6.819000000001657e-06}, {'time': 0.021383014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:34.487" endtime="20201115 22:01:34.490"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:34.503" level="INFO">${OVERHEAD} = {'time': [0.021268986, 0.021383014, 0.021490542, 0.021599986, 0.021710208, 0.021822042, 0.021931722, 0.022045681, 0.0221595, 0.022273222, 0.022383611, 0.022493042, 0.022603486, 0.022713847, 0.02282594...</msg>
<status status="PASS" starttime="20201115 22:01:34.491" endtime="20201115 22:01:34.504"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:34.508" level="INFO">NAME: 00-overhead-9-remove</msg>
<status status="PASS" starttime="20201115 22:01:34.507" endtime="20201115 22:01:34.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:34.510" level="INFO">VALUE: [6.819000000001657e-06, 6.819999999997661e-06, 6.820000000001131e-06, 6.819000000001657e-06, 6.805000000002087e-06, 6.806000000001561e-06, 6.833000000001227e-06, 6.820000000001131e-06, 6.8469999999973274e-06, 6.8329999999977575e-06, 6.833000000001227e-06, 6.820000000001131e-06, 6.861000000000367e-06, 6.8329999999977575e-06, 6.847000000000797e-06, 6.8329999999977575e-06, 6.834000000000701e-06, 6.804999999998618e-06, 6.764000000002851e-06, 6.888999999999507e-06, 6.820000000001131e-06, 6.847000000000797e-06, 6.806000000001561e-06, 6.818999999998188e-06, 6.792000000001991e-06, 6.806000000001561e-06, 6.819000000001657e-06, 6.833999999997231e-06, 6.834000000000701e-06, 6.819000000001657e-06, 6.819999999997661e-06, 6.847000000000797e-06, 6.818999999998188e-06, 6.819999999997661e-06, 6.805999999998091e-06, 6.806000000001561e-06, 6.847000000000797e-06, 6.819000000001657e-06, 6.888999999999507e-06, 6.820000000001131e-06, 6.819000000001657e-06, 6.820000000001131e-06, 6.833000000001227e-06, 6.834000000000701e-06, 6.819000000001657e-06, 6.749999999999812e-06, 6.833000000001227e-06, 6.818999999998188e-06, 6.8329999999977575e-06, 6.819000000001657e-06]</msg>
<status status="PASS" starttime="20201115 22:01:34.509" endtime="20201115 22:01:34.511"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.504" endtime="20201115 22:01:34.511"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:34.514" endtime="20201115 22:01:34.515"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:34.518" endtime="20201115 22:01:34.537"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.516" endtime="20201115 22:01:34.538"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.512" endtime="20201115 22:01:34.538"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.146" endtime="20201115 22:01:34.538"></status>
</kw>
<msg timestamp="20201115 22:01:34.539" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:34.547" endtime="20201115 22:01:34.565"></status>
</kw>
<msg timestamp="20201115 22:01:34.565" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:34.546" endtime="20201115 22:01:34.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:34.568" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:34.566" endtime="20201115 22:01:34.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:34.569" endtime="20201115 22:01:34.570"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.543" endtime="20201115 22:01:34.571"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.541" endtime="20201115 22:01:34.571"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:34.578" endtime="20201115 22:01:34.865"></status>
</kw>
<msg timestamp="20201115 22:01:34.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021006194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021013014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:34.576" endtime="20201115 22:01:34.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:34.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021006194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021013014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:34.869" endtime="20201115 22:01:34.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:34.877" endtime="20201115 22:01:34.879"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.574" endtime="20201115 22:01:34.879"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.572" endtime="20201115 22:01:34.880"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:34.884" level="INFO">${RESULT} = [{'time': 0.021013014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.820000000001131e-06, 'source_diff': 6.820000000001131e-06}, {'time': 0.021127222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:34.881" endtime="20201115 22:01:34.884"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:34.897" level="INFO">${OVERHEAD} = {'time': [0.021013014, 0.021127222, 0.021236028, 0.021348153, 0.021456403, 0.021563944, 0.021671806, 0.021782014, 0.021890333, 0.02200075, 0.022112139, 0.022220639, 0.022330319, 0.022439986, 0.0225516...</msg>
<status status="PASS" starttime="20201115 22:01:34.885" endtime="20201115 22:01:34.898"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:34.902" level="INFO">NAME: 00-overhead-9-remove</msg>
<status status="PASS" starttime="20201115 22:01:34.901" endtime="20201115 22:01:34.902"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:34.904" level="INFO">VALUE: [6.820000000001131e-06, 6.819000000001657e-06, 6.834000000000701e-06, 6.820000000001131e-06, 6.763999999999382e-06, 6.805000000002087e-06, 6.833999999997231e-06, 6.819999999997661e-06, 6.819000000001657e-06, 6.7919999999985214e-06, 6.805999999998091e-06, 6.820000000001131e-06, 6.819000000001657e-06, 6.818999999998188e-06, 6.834000000000701e-06, 6.818999999998188e-06, 6.834000000000701e-06, 6.818999999998188e-06, 6.834000000000701e-06, 6.806000000001561e-06, 6.806000000001561e-06, 6.834000000000701e-06, 6.749999999999812e-06, 6.804999999998618e-06, 6.819999999997661e-06, 6.819000000001657e-06, 6.8480000000002705e-06, 6.819999999997661e-06, 6.805999999998091e-06, 6.833000000001227e-06, 6.806000000001561e-06, 6.764000000002851e-06, 6.8329999999977575e-06, 6.8480000000002705e-06, 6.806000000001561e-06, 6.8329999999977575e-06, 6.888999999999507e-06, 6.804999999998618e-06, 6.804999999998618e-06, 6.874999999999937e-06, 6.820000000001131e-06, 6.847000000000797e-06, 6.818999999998188e-06, 6.805000000002087e-06, 6.819999999997661e-06, 6.834000000000701e-06, 6.806000000001561e-06, 6.834000000000701e-06, 6.874999999999937e-06, 6.776999999999478e-06]</msg>
<status status="PASS" starttime="20201115 22:01:34.903" endtime="20201115 22:01:34.905"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.898" endtime="20201115 22:01:34.906"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:34.908" endtime="20201115 22:01:34.909"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:34.912" endtime="20201115 22:01:34.931"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.910" endtime="20201115 22:01:34.932"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.906" endtime="20201115 22:01:34.932"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.539" endtime="20201115 22:01:34.932"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.968" endtime="20201115 22:01:34.933"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.967" endtime="20201115 22:01:34.933"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:34.935" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:34.944" endtime="20201115 22:01:34.958"></status>
</kw>
<msg timestamp="20201115 22:01:34.959" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:34.942" endtime="20201115 22:01:34.959"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:34.961" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:34.960" endtime="20201115 22:01:34.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:34.962" endtime="20201115 22:01:34.964"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.940" endtime="20201115 22:01:34.964"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.938" endtime="20201115 22:01:34.965"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:34.971" endtime="20201115 22:01:35.260"></status>
</kw>
<msg timestamp="20201115 22:01:35.263" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022669542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022676556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:34.970" endtime="20201115 22:01:35.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:35.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022669542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022676556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:35.264" endtime="20201115 22:01:35.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:35.273" endtime="20201115 22:01:35.275"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.967" endtime="20201115 22:01:35.275"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.966" endtime="20201115 22:01:35.276"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:35.280" level="INFO">${RESULT} = [{'time': 0.022676556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.013999999999632e-06, 'source_diff': 7.013999999999632e-06}, {'time': 0.022795431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:35.276" endtime="20201115 22:01:35.280"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:35.293" level="INFO">${OVERHEAD} = {'time': [0.022676556, 0.022795431, 0.022914069, 0.023033194, 0.023155736, 0.023278014, 0.023399833, 0.023518556, 0.023637653, 0.023756389, 0.023877875, 0.024000125, 0.024123333, 0.024239597, 0.024356...</msg>
<status status="PASS" starttime="20201115 22:01:35.281" endtime="20201115 22:01:35.293"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:35.298" level="INFO">NAME: 00-overhead-10-remove</msg>
<status status="PASS" starttime="20201115 22:01:35.297" endtime="20201115 22:01:35.298"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:35.301" level="INFO">VALUE: [7.013999999999632e-06, 7.070000000001381e-06, 7.068999999998438e-06, 7.068999999998438e-06, 7.068999999998438e-06, 7.070000000001381e-06, 7.0829999999980076e-06, 7.069999999997911e-06, 7.070000000001381e-06, 7.0829999999980076e-06, 7.0279999999992016e-06, 7.097000000001047e-06, 7.069000000001907e-06, 7.069000000001907e-06, 7.069999999997911e-06, 7.1120000000000905e-06, 7.068999999998438e-06, 7.084000000000951e-06, 7.068999999998438e-06, 7.083999999997481e-06, 7.055000000002337e-06, 7.097000000001047e-06, 7.083000000001477e-06, 7.070000000001381e-06, 7.0419999999987715e-06, 7.054999999998868e-06, 7.068999999998438e-06, 7.083000000001477e-06, 7.056000000001811e-06, 7.0980000000005206e-06, 7.068999999998438e-06, 7.070000000001381e-06, 7.054999999998868e-06, 7.069000000001907e-06, 7.070000000001381e-06, 7.084000000000951e-06, 7.0829999999980076e-06, 7.054999999998868e-06, 7.055999999998341e-06, 7.070000000001381e-06, 7.138999999999757e-06, 7.0829999999980076e-06, 7.070000000001381e-06, 7.054999999998868e-06, 7.069999999997911e-06, 7.097000000001047e-06, 7.068999999998438e-06, 7.084000000000951e-06, 7.083000000001477e-06, 7.070000000001381e-06]</msg>
<status status="PASS" starttime="20201115 22:01:35.299" endtime="20201115 22:01:35.301"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:35.294" endtime="20201115 22:01:35.302"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:35.304" endtime="20201115 22:01:35.305"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:35.307" endtime="20201115 22:01:35.327"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:35.306" endtime="20201115 22:01:35.327"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:35.302" endtime="20201115 22:01:35.328"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.936" endtime="20201115 22:01:35.328"></status>
</kw>
<msg timestamp="20201115 22:01:35.328" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:35.338" endtime="20201115 22:01:35.355"></status>
</kw>
<msg timestamp="20201115 22:01:35.356" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:35.336" endtime="20201115 22:01:35.356"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:35.358" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:35.357" endtime="20201115 22:01:35.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:35.359" endtime="20201115 22:01:35.361"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:35.333" endtime="20201115 22:01:35.361"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:35.331" endtime="20201115 22:01:35.362"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:35.368" endtime="20201115 22:01:35.655"></status>
</kw>
<msg timestamp="20201115 22:01:35.658" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021301778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021308861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:35.367" endtime="20201115 22:01:35.659"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:35.666" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021301778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021308861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:35.660" endtime="20201115 22:01:35.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:35.668" endtime="20201115 22:01:35.669"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:35.364" endtime="20201115 22:01:35.670"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:35.362" endtime="20201115 22:01:35.670"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:35.674" level="INFO">${RESULT} = [{'time': 0.021308861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.0829999999980076e-06, 'source_diff': 7.0829999999980076e-06}, {'time': 0.021429236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:35.671" endtime="20201115 22:01:35.675"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:35.688" level="INFO">${OVERHEAD} = {'time': [0.021308861, 0.021429236, 0.021548361, 0.021667014, 0.021789472, 0.021910806, 0.022033958, 0.022152694, 0.022270611, 0.022390986, 0.022513306, 0.022629625, 0.022752819, 0.022873347, 0.022991...</msg>
<status status="PASS" starttime="20201115 22:01:35.675" endtime="20201115 22:01:35.688"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:35.693" level="INFO">NAME: 00-overhead-10-remove</msg>
<status status="PASS" starttime="20201115 22:01:35.692" endtime="20201115 22:01:35.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:35.695" level="INFO">VALUE: [7.0829999999980076e-06, 7.055000000002337e-06, 7.068999999998438e-06, 7.069999999997911e-06, 7.055000000002337e-06, 7.084000000000951e-06, 7.068999999998438e-06, 7.083000000001477e-06, 7.0829999999980076e-06, 7.069000000001907e-06, 7.056000000001811e-06, 7.069000000001907e-06, 7.111000000000617e-06, 7.068999999998438e-06, 7.068999999998438e-06, 7.083000000001477e-06, 7.069000000001907e-06, 7.055999999998341e-06, 7.069000000001907e-06, 7.055000000002337e-06, 7.013000000000158e-06, 7.069999999997911e-06, 7.068999999998438e-06, 7.055000000002337e-06, 7.069999999997911e-06, 7.068999999998438e-06, 7.070000000001381e-06, 7.055999999998341e-06, 7.056000000001811e-06, 7.069999999997911e-06, 7.070000000001381e-06, 7.055999999998341e-06, 7.069999999997911e-06, 7.026999999999728e-06, 7.0969999999975775e-06, 7.083000000001477e-06, 7.083000000001477e-06, 7.0419999999987715e-06, 7.068999999998438e-06, 7.068999999998438e-06, 7.097000000001047e-06, 7.069999999997911e-06, 7.111000000000617e-06, 7.056000000001811e-06, 7.068999999998438e-06, 7.068999999998438e-06, 7.083000000001477e-06, 7.054999999998868e-06, 7.068999999998438e-06, 7.125000000000187e-06]</msg>
<status status="PASS" starttime="20201115 22:01:35.694" endtime="20201115 22:01:35.696"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:35.689" endtime="20201115 22:01:35.696"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:35.699" endtime="20201115 22:01:35.700"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:35.702" endtime="20201115 22:01:35.721"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:35.700" endtime="20201115 22:01:35.722"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:35.697" endtime="20201115 22:01:35.722"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:35.329" endtime="20201115 22:01:35.723"></status>
</kw>
<msg timestamp="20201115 22:01:35.723" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:35.732" endtime="20201115 22:01:35.749"></status>
</kw>
<msg timestamp="20201115 22:01:35.749" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:35.730" endtime="20201115 22:01:35.750"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:35.752" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:35.750" endtime="20201115 22:01:35.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:35.753" endtime="20201115 22:01:35.754"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:35.728" endtime="20201115 22:01:35.755"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:35.726" endtime="20201115 22:01:35.756"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:35.762" endtime="20201115 22:01:36.050"></status>
</kw>
<msg timestamp="20201115 22:01:36.053" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020304694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020311819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:35.760" endtime="20201115 22:01:36.053"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:36.061" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020304694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020311819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:36.054" endtime="20201115 22:01:36.061"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:36.062" endtime="20201115 22:01:36.064"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:35.758" endtime="20201115 22:01:36.064"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:35.756" endtime="20201115 22:01:36.065"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:36.069" level="INFO">${RESULT} = [{'time': 0.020311819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.124999999996717e-06, 'source_diff': 7.124999999996717e-06}, {'time': 0.020429292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:36.066" endtime="20201115 22:01:36.070"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:36.083" level="INFO">${OVERHEAD} = {'time': [0.020311819, 0.020429292, 0.020548486, 0.020665222, 0.020787514, 0.020904875, 0.021023208, 0.021145986, 0.021268917, 0.021386125, 0.021505542, 0.021624681, 0.021744292, 0.021866958, 0.021982...</msg>
<status status="PASS" starttime="20201115 22:01:36.070" endtime="20201115 22:01:36.083"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:36.088" level="INFO">NAME: 00-overhead-10-remove</msg>
<status status="PASS" starttime="20201115 22:01:36.087" endtime="20201115 22:01:36.088"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:36.090" level="INFO">VALUE: [7.124999999996717e-06, 7.070000000001381e-06, 7.069000000001907e-06, 7.069000000001907e-06, 7.055999999998341e-06, 7.068999999998438e-06, 7.055000000002337e-06, 7.068999999998438e-06, 7.013999999999632e-06, 7.0829999999980076e-06, 7.069999999997911e-06, 7.0279999999992016e-06, 7.097999999997051e-06, 7.054999999998868e-06, 7.068999999998438e-06, 7.069000000001907e-06, 7.068999999998438e-06, 7.069000000001907e-06, 7.056000000001811e-06, 7.068999999998438e-06, 7.070000000001381e-06, 7.054999999998868e-06, 7.068999999998438e-06, 7.068999999998438e-06, 7.0829999999980076e-06, 7.069000000001907e-06, 7.097999999997051e-06, 7.070000000001381e-06, 7.055999999998341e-06, 7.068999999998438e-06, 7.069000000001907e-06, 7.0279999999992016e-06, 7.068999999998438e-06, 7.084000000000951e-06, 7.000000000000062e-06, 7.083000000001477e-06, 7.069999999997911e-06, 7.068999999998438e-06, 7.042000000002241e-06, 7.069999999997911e-06, 7.097000000001047e-06, 7.069000000001907e-06, 7.055999999998341e-06, 7.054999999998868e-06, 7.054999999998868e-06, 7.055999999998341e-06, 7.083000000001477e-06, 7.0419999999987715e-06, 7.083000000001477e-06, 7.068999999998438e-06]</msg>
<status status="PASS" starttime="20201115 22:01:36.089" endtime="20201115 22:01:36.090"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:36.084" endtime="20201115 22:01:36.091"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:36.093" endtime="20201115 22:01:36.094"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:36.097" endtime="20201115 22:01:36.116"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:36.095" endtime="20201115 22:01:36.117"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:36.092" endtime="20201115 22:01:36.117"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:35.723" endtime="20201115 22:01:36.117"></status>
</kw>
<msg timestamp="20201115 22:01:36.118" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:36.127" endtime="20201115 22:01:36.142"></status>
</kw>
<msg timestamp="20201115 22:01:36.143" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:36.125" endtime="20201115 22:01:36.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:36.145" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:36.144" endtime="20201115 22:01:36.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:36.146" endtime="20201115 22:01:36.148"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:36.122" endtime="20201115 22:01:36.148"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:36.120" endtime="20201115 22:01:36.149"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:36.155" endtime="20201115 22:01:36.443"></status>
</kw>
<msg timestamp="20201115 22:01:36.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020296681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02030375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:01:36.154" endtime="20201115 22:01:36.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:36.454" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020296681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02030375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:01:36.447" endtime="20201115 22:01:36.454"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:36.456" endtime="20201115 22:01:36.457"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:36.151" endtime="20201115 22:01:36.458"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:36.149" endtime="20201115 22:01:36.458"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:36.462" level="INFO">${RESULT} = [{'time': 0.02030375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.068999999998438e-06, 'source_diff': 7.068999999998438e-06}, {'time': 0.020423111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:01:36.459" endtime="20201115 22:01:36.463"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:36.476" level="INFO">${OVERHEAD} = {'time': [0.02030375, 0.020423111, 0.020539208, 0.020662389, 0.020778417, 0.020899264, 0.021018958, 0.021139958, 0.021262486, 0.021384458, 0.021504778, 0.021624625, 0.021744681, 0.021867139, 0.0219868...</msg>
<status status="PASS" starttime="20201115 22:01:36.463" endtime="20201115 22:01:36.476"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:36.480" level="INFO">NAME: 00-overhead-10-remove</msg>
<status status="PASS" starttime="20201115 22:01:36.479" endtime="20201115 22:01:36.481"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:36.483" level="INFO">VALUE: [7.068999999998438e-06, 7.055000000002337e-06, 7.040999999999298e-06, 7.083000000001477e-06, 7.070000000001381e-06, 7.070000000001381e-06, 7.083000000001477e-06, 7.054999999998868e-06, 7.069000000001907e-06, 7.040999999999298e-06, 7.069999999997911e-06, 7.083000000001477e-06, 7.055999999998341e-06, 7.056000000001811e-06, 7.056000000001811e-06, 7.041000000002767e-06, 7.040999999999298e-06, 7.0279999999992016e-06, 7.013999999999632e-06, 7.070000000001381e-06, 7.069000000001907e-06, 7.138999999999757e-06, 7.097000000001047e-06, 7.125000000000187e-06, 7.0829999999980076e-06, 7.054999999998868e-06, 7.055999999998341e-06, 7.069000000001907e-06, 7.026999999999728e-06, 7.083000000001477e-06, 7.069999999997911e-06, 7.069000000001907e-06, 7.0829999999980076e-06, 7.0419999999987715e-06, 7.056000000001811e-06, 7.068999999998438e-06, 7.0829999999980076e-06, 7.054999999998868e-06, 7.068999999998438e-06, 7.083000000001477e-06, 7.056000000001811e-06, 7.070000000001381e-06, 7.0829999999980076e-06, 7.068999999998438e-06, 7.069999999997911e-06, 7.069999999997911e-06, 7.055000000002337e-06, 7.069000000001907e-06, 7.056000000001811e-06, 7.055999999998341e-06]</msg>
<status status="PASS" starttime="20201115 22:01:36.481" endtime="20201115 22:01:36.483"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:36.477" endtime="20201115 22:01:36.484"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:36.486" endtime="20201115 22:01:36.487"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:36.489" endtime="20201115 22:01:36.509"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:36.488" endtime="20201115 22:01:36.509"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:36.484" endtime="20201115 22:01:36.510"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:36.118" endtime="20201115 22:01:36.510"></status>
</kw>
<msg timestamp="20201115 22:01:36.510" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:36.519" endtime="20201115 22:01:36.535"></status>
</kw>
<msg timestamp="20201115 22:01:36.536" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:36.518" endtime="20201115 22:01:36.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:36.538" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:36.537" endtime="20201115 22:01:36.538"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:36.539" endtime="20201115 22:01:36.541"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:36.515" endtime="20201115 22:01:36.541"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:36.513" endtime="20201115 22:01:36.542"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:36.548" endtime="20201115 22:01:36.836"></status>
</kw>
<msg timestamp="20201115 22:01:36.839" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02024475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020251819, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:01:36.547" endtime="20201115 22:01:36.840"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:36.848" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02024475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020251819, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:01:36.841" endtime="20201115 22:01:36.848"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:36.849" endtime="20201115 22:01:36.850"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:36.544" endtime="20201115 22:01:36.851"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:36.542" endtime="20201115 22:01:36.851"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:36.856" level="INFO">${RESULT} = [{'time': 0.020251819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.069000000001907e-06, 'source_diff': 7.069000000001907e-06}, {'time': 0.020370542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:36.852" endtime="20201115 22:01:36.856"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:36.869" level="INFO">${OVERHEAD} = {'time': [0.020251819, 0.020370542, 0.020489889, 0.02061125, 0.020729875, 0.020853042, 0.020969569, 0.021087125, 0.021203333, 0.021320306, 0.021440153, 0.021559806, 0.021681139, 0.021803361, 0.0219261...</msg>
<status status="PASS" starttime="20201115 22:01:36.857" endtime="20201115 22:01:36.869"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:36.873" level="INFO">NAME: 00-overhead-10-remove</msg>
<status status="PASS" starttime="20201115 22:01:36.872" endtime="20201115 22:01:36.874"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:36.876" level="INFO">VALUE: [7.069000000001907e-06, 7.083999999997481e-06, 7.056000000001811e-06, 7.097000000001047e-06, 7.055999999998341e-06, 7.055999999998341e-06, 7.097000000001047e-06, 7.125000000000187e-06, 7.069000000001907e-06, 7.070000000001381e-06, 7.084000000000951e-06, 7.070000000001381e-06, 7.055999999998341e-06, 7.069000000001907e-06, 7.042000000002241e-06, 7.068999999998438e-06, 7.125000000000187e-06, 7.070000000001381e-06, 7.055000000002337e-06, 7.111000000000617e-06, 7.068999999998438e-06, 7.083000000001477e-06, 7.054999999998868e-06, 7.084000000000951e-06, 7.083999999997481e-06, 7.0829999999980076e-06, 7.069000000001907e-06, 7.042000000002241e-06, 7.0829999999980076e-06, 7.069999999997911e-06, 7.070000000001381e-06, 7.0829999999980076e-06, 7.125000000000187e-06, 7.070000000001381e-06, 7.068999999998438e-06, 7.068999999998438e-06, 7.069999999997911e-06, 7.069000000001907e-06, 7.083000000001477e-06, 7.055999999998341e-06, 7.068999999998438e-06, 7.070000000001381e-06, 7.069999999997911e-06, 7.070000000001381e-06, 7.084000000000951e-06, 7.068999999998438e-06, 7.083000000001477e-06, 7.111000000000617e-06, 7.069000000001907e-06, 7.0829999999980076e-06]</msg>
<status status="PASS" starttime="20201115 22:01:36.874" endtime="20201115 22:01:36.876"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:36.870" endtime="20201115 22:01:36.877"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:36.879" endtime="20201115 22:01:36.880"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:36.882" endtime="20201115 22:01:36.902"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:36.881" endtime="20201115 22:01:36.902"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:36.877" endtime="20201115 22:01:36.903"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:36.511" endtime="20201115 22:01:36.903"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.934" endtime="20201115 22:01:36.903"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.933" endtime="20201115 22:01:36.903"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:36.906" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:36.915" endtime="20201115 22:01:36.932"></status>
</kw>
<msg timestamp="20201115 22:01:36.933" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:36.913" endtime="20201115 22:01:36.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:36.935" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:36.934" endtime="20201115 22:01:36.935"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:36.936" endtime="20201115 22:01:36.938"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:36.911" endtime="20201115 22:01:36.938"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:36.908" endtime="20201115 22:01:36.939"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:36.946" endtime="20201115 22:01:37.231"></status>
</kw>
<msg timestamp="20201115 22:01:37.234" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023323722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023331056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:36.944" endtime="20201115 22:01:37.234"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:37.242" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023323722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023331056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:37.235" endtime="20201115 22:01:37.243"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:37.244" endtime="20201115 22:01:37.245"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:36.942" endtime="20201115 22:01:37.246"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:36.940" endtime="20201115 22:01:37.246"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:37.250" level="INFO">${RESULT} = [{'time': 0.023331056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.333999999997731e-06, 'source_diff': 7.333999999997731e-06}, {'time': 0.023462083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:37.247" endtime="20201115 22:01:37.251"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:37.264" level="INFO">${OVERHEAD} = {'time': [0.023331056, 0.023462083, 0.023594319, 0.023723153, 0.023848236, 0.023977569, 0.024106125, 0.024233972, 0.024365264, 0.024492958, 0.024618528, 0.024748431, 0.024879097, 0.025008958, 0.025138...</msg>
<status status="PASS" starttime="20201115 22:01:37.251" endtime="20201115 22:01:37.264"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:37.268" level="INFO">NAME: 00-overhead-11-remove</msg>
<status status="PASS" starttime="20201115 22:01:37.267" endtime="20201115 22:01:37.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:37.271" level="INFO">VALUE: [7.333999999997731e-06, 7.319000000002157e-06, 7.332999999998258e-06, 7.347000000001297e-06, 7.332999999998258e-06, 7.361000000000867e-06, 7.332999999998258e-06, 7.318999999998688e-06, 7.333000000001727e-06, 7.290999999999548e-06, 7.320000000001631e-06, 7.389000000000007e-06, 7.318999999998688e-06, 7.333000000001727e-06, 7.319000000002157e-06, 7.306000000002061e-06, 7.334000000001201e-06, 7.318999999998688e-06, 7.305999999998591e-06, 7.306000000002061e-06, 7.334000000001201e-06, 7.318999999998688e-06, 7.332999999998258e-06, 7.333000000001727e-06, 7.319999999998161e-06, 7.333000000001727e-06, 7.347000000001297e-06, 7.375000000000437e-06, 7.319999999998161e-06, 7.319999999998161e-06, 7.319000000002157e-06, 7.332999999998258e-06, 7.332999999998258e-06, 7.2779999999994516e-06, 7.318999999998688e-06, 7.334000000001201e-06, 7.320000000001631e-06, 7.319999999998161e-06, 7.320000000001631e-06, 7.320000000001631e-06, 7.319999999998161e-06, 7.332999999998258e-06, 7.319999999998161e-06, 7.318999999998688e-06, 7.348000000000771e-06, 7.334000000001201e-06, 7.334000000001201e-06, 7.319999999998161e-06, 7.319999999998161e-06, 7.318999999998688e-06]</msg>
<status status="PASS" starttime="20201115 22:01:37.269" endtime="20201115 22:01:37.271"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:37.264" endtime="20201115 22:01:37.272"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:37.274" endtime="20201115 22:01:37.275"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:37.277" endtime="20201115 22:01:37.297"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:37.276" endtime="20201115 22:01:37.297"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:37.272" endtime="20201115 22:01:37.298"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:36.906" endtime="20201115 22:01:37.298"></status>
</kw>
<msg timestamp="20201115 22:01:37.299" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:37.308" endtime="20201115 22:01:37.326"></status>
</kw>
<msg timestamp="20201115 22:01:37.326" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:37.307" endtime="20201115 22:01:37.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:37.329" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:37.327" endtime="20201115 22:01:37.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:37.330" endtime="20201115 22:01:37.332"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:37.304" endtime="20201115 22:01:37.332"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:37.301" endtime="20201115 22:01:37.333"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:37.339" endtime="20201115 22:01:37.626"></status>
</kw>
<msg timestamp="20201115 22:01:37.630" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021987708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021995028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:37.338" endtime="20201115 22:01:37.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:37.638" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021987708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021995028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:37.631" endtime="20201115 22:01:37.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:37.639" endtime="20201115 22:01:37.640"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:37.335" endtime="20201115 22:01:37.641"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:37.333" endtime="20201115 22:01:37.641"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:37.645" level="INFO">${RESULT} = [{'time': 0.021995028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.319999999998161e-06, 'source_diff': 7.319999999998161e-06}, {'time': 0.022123375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:37.642" endtime="20201115 22:01:37.646"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:37.659" level="INFO">${OVERHEAD} = {'time': [0.021995028, 0.022123375, 0.022248458, 0.022376403, 0.022503153, 0.022633639, 0.022764125, 0.022889694, 0.023018847, 0.023146014, 0.023276083, 0.023404042, 0.023531, 0.023658944, 0.023787292...</msg>
<status status="PASS" starttime="20201115 22:01:37.646" endtime="20201115 22:01:37.659"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:37.663" level="INFO">NAME: 00-overhead-11-remove</msg>
<status status="PASS" starttime="20201115 22:01:37.662" endtime="20201115 22:01:37.664"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:37.666" level="INFO">VALUE: [7.319999999998161e-06, 7.333000000001727e-06, 7.332999999998258e-06, 7.334000000001201e-06, 7.320000000001631e-06, 7.320000000001631e-06, 7.305999999998591e-06, 7.318999999998688e-06, 7.332999999998258e-06, 7.3469999999978275e-06, 7.318999999998688e-06, 7.348000000000771e-06, 7.318999999998688e-06, 7.319000000002157e-06, 7.306000000002061e-06, 7.2779999999994516e-06, 7.304999999999118e-06, 7.334000000001201e-06, 7.333999999997731e-06, 7.3469999999978275e-06, 7.318999999998688e-06, 7.304999999999118e-06, 7.304999999999118e-06, 7.290999999999548e-06, 7.361000000000867e-06, 7.332999999998258e-06, 7.403000000003046e-06, 7.319000000002157e-06, 7.347000000001297e-06, 7.361000000000867e-06, 7.320000000001631e-06, 7.3469999999978275e-06, 7.348000000000771e-06, 7.332999999998258e-06, 7.375000000000437e-06, 7.305999999998591e-06, 7.306000000002061e-06, 7.318999999998688e-06, 7.318999999998688e-06, 7.304999999999118e-06, 7.361000000000867e-06, 7.3469999999978275e-06, 7.319000000002157e-06, 7.334000000001201e-06, 7.3620000000003405e-06, 7.333999999997731e-06, 7.250000000000312e-06, 7.348000000000771e-06, 7.319999999998161e-06, 7.333000000001727e-06]</msg>
<status status="PASS" starttime="20201115 22:01:37.664" endtime="20201115 22:01:37.666"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:37.660" endtime="20201115 22:01:37.667"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:37.669" endtime="20201115 22:01:37.670"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:37.672" endtime="20201115 22:01:37.692"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:37.671" endtime="20201115 22:01:37.693"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:37.667" endtime="20201115 22:01:37.693"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:37.299" endtime="20201115 22:01:37.693"></status>
</kw>
<msg timestamp="20201115 22:01:37.693" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:37.703" endtime="20201115 22:01:37.719"></status>
</kw>
<msg timestamp="20201115 22:01:37.719" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:37.701" endtime="20201115 22:01:37.719"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:37.721" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:37.720" endtime="20201115 22:01:37.722"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:37.723" endtime="20201115 22:01:37.724"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:37.698" endtime="20201115 22:01:37.725"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:37.696" endtime="20201115 22:01:37.725"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:37.732" endtime="20201115 22:01:38.020"></status>
</kw>
<msg timestamp="20201115 22:01:38.023" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020813, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020820389, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:01:37.730" endtime="20201115 22:01:38.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:38.031" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020813, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020820389, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:01:38.024" endtime="20201115 22:01:38.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:38.032" endtime="20201115 22:01:38.034"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:37.728" endtime="20201115 22:01:38.034"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:37.726" endtime="20201115 22:01:38.035"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:38.039" level="INFO">${RESULT} = [{'time': 0.020820389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.389000000000007e-06, 'source_diff': 7.389000000000007e-06}, {'time': 0.020946139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:38.036" endtime="20201115 22:01:38.039"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:38.052" level="INFO">${OVERHEAD} = {'time': [0.020820389, 0.020946139, 0.021073278, 0.021202597, 0.021332903, 0.02146325, 0.02158825, 0.02171925, 0.021845236, 0.021977417, 0.02210625, 0.022236792, 0.02236475, 0.022492931, 0.022624361, ...</msg>
<status status="PASS" starttime="20201115 22:01:38.040" endtime="20201115 22:01:38.052"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:38.057" level="INFO">NAME: 00-overhead-11-remove</msg>
<status status="PASS" starttime="20201115 22:01:38.056" endtime="20201115 22:01:38.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:38.059" level="INFO">VALUE: [7.389000000000007e-06, 7.332999999998258e-06, 7.306000000002061e-06, 7.333000000001727e-06, 7.2919999999990215e-06, 7.332999999998258e-06, 7.2919999999990215e-06, 7.3469999999978275e-06, 7.361000000000867e-06, 7.333999999997731e-06, 7.2779999999994516e-06, 7.305999999998591e-06, 7.318999999998688e-06, 7.334000000001201e-06, 7.318999999998688e-06, 7.333000000001727e-06, 7.347000000001297e-06, 7.304999999999118e-06, 7.361000000000867e-06, 7.263999999999882e-06, 7.318999999998688e-06, 7.318999999998688e-06, 7.306000000002061e-06, 7.318999999998688e-06, 7.305999999998591e-06, 7.320000000001631e-06, 7.305000000002587e-06, 7.334000000001201e-06, 7.319000000002157e-06, 7.320000000001631e-06, 7.319999999998161e-06, 7.319000000002157e-06, 7.292000000002491e-06, 7.2919999999990215e-06, 7.318999999998688e-06, 7.333999999997731e-06, 7.332999999998258e-06, 7.3469999999978275e-06, 7.318999999998688e-06, 7.319999999998161e-06, 7.333000000001727e-06, 7.306000000002061e-06, 7.318999999998688e-06, 7.333000000001727e-06, 7.320000000001631e-06, 7.320000000001631e-06, 7.2919999999990215e-06, 7.334000000001201e-06, 7.4169999999991465e-06, 7.318999999998688e-06]</msg>
<status status="PASS" starttime="20201115 22:01:38.058" endtime="20201115 22:01:38.060"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:38.053" endtime="20201115 22:01:38.060"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:38.063" endtime="20201115 22:01:38.064"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:38.066" endtime="20201115 22:01:38.085"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:38.064" endtime="20201115 22:01:38.086"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:38.061" endtime="20201115 22:01:38.087"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:37.694" endtime="20201115 22:01:38.087"></status>
</kw>
<msg timestamp="20201115 22:01:38.087" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:38.097" endtime="20201115 22:01:38.112"></status>
</kw>
<msg timestamp="20201115 22:01:38.112" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:38.095" endtime="20201115 22:01:38.112"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:38.114" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:38.113" endtime="20201115 22:01:38.115"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:38.116" endtime="20201115 22:01:38.117"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:38.093" endtime="20201115 22:01:38.118"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:38.090" endtime="20201115 22:01:38.118"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:38.125" endtime="20201115 22:01:38.413"></status>
</kw>
<msg timestamp="20201115 22:01:38.416" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021424583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021431889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:38.123" endtime="20201115 22:01:38.417"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:38.425" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021424583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021431889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:38.418" endtime="20201115 22:01:38.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:38.426" endtime="20201115 22:01:38.427"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:38.121" endtime="20201115 22:01:38.428"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:38.119" endtime="20201115 22:01:38.428"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:38.432" level="INFO">${RESULT} = [{'time': 0.021431889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.305999999998591e-06, 'source_diff': 7.305999999998591e-06}, {'time': 0.021561028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:38.429" endtime="20201115 22:01:38.433"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:38.446" level="INFO">${OVERHEAD} = {'time': [0.021431889, 0.021561028, 0.021687333, 0.021819222, 0.021947653, 0.022073917, 0.022206361, 0.022333958, 0.022464528, 0.022592625, 0.022722403, 0.022847667, 0.022977194, 0.023108625, 0.023238...</msg>
<status status="PASS" starttime="20201115 22:01:38.433" endtime="20201115 22:01:38.446"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:38.450" level="INFO">NAME: 00-overhead-11-remove</msg>
<status status="PASS" starttime="20201115 22:01:38.449" endtime="20201115 22:01:38.451"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:38.453" level="INFO">VALUE: [7.305999999998591e-06, 7.305999999998591e-06, 7.347000000001297e-06, 7.2779999999994516e-06, 7.334000000001201e-06, 7.319999999998161e-06, 7.361000000000867e-06, 7.333000000001727e-06, 7.334000000001201e-06, 7.292000000002491e-06, 7.319999999998161e-06, 7.319999999998161e-06, 7.290999999999548e-06, 7.306000000002061e-06, 7.320000000001631e-06, 7.318999999998688e-06, 7.318999999998688e-06, 7.319999999998161e-06, 7.305000000002587e-06, 7.320000000001631e-06, 7.334000000001201e-06, 7.318999999998688e-06, 7.333000000001727e-06, 7.332999999998258e-06, 7.2919999999990215e-06, 7.319999999998161e-06, 7.320000000001631e-06, 7.332999999998258e-06, 7.306000000002061e-06, 7.402000000000103e-06, 7.361000000000867e-06, 7.320000000001631e-06, 7.360999999997397e-06, 7.334000000001201e-06, 7.304999999999118e-06, 7.319000000002157e-06, 7.333000000001727e-06, 7.305999999998591e-06, 7.334000000001201e-06, 7.306000000002061e-06, 7.361000000000867e-06, 7.333000000001727e-06, 7.263999999999882e-06, 7.347000000001297e-06, 7.319999999998161e-06, 7.320000000001631e-06, 7.319000000002157e-06, 7.318999999998688e-06, 7.263999999999882e-06, 7.333000000001727e-06]</msg>
<status status="PASS" starttime="20201115 22:01:38.451" endtime="20201115 22:01:38.453"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:38.447" endtime="20201115 22:01:38.454"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:38.457" endtime="20201115 22:01:38.458"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:38.460" endtime="20201115 22:01:38.479"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:38.459" endtime="20201115 22:01:38.480"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:38.455" endtime="20201115 22:01:38.481"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:38.088" endtime="20201115 22:01:38.481"></status>
</kw>
<msg timestamp="20201115 22:01:38.481" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:38.490" endtime="20201115 22:01:38.506"></status>
</kw>
<msg timestamp="20201115 22:01:38.506" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:38.488" endtime="20201115 22:01:38.507"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:38.509" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:38.507" endtime="20201115 22:01:38.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:38.510" endtime="20201115 22:01:38.511"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:38.486" endtime="20201115 22:01:38.512"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:38.484" endtime="20201115 22:01:38.512"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:38.519" endtime="20201115 22:01:38.807"></status>
</kw>
<msg timestamp="20201115 22:01:38.810" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020319778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020327069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:38.517" endtime="20201115 22:01:38.810"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:38.818" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020319778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020327069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:38.811" endtime="20201115 22:01:38.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:38.819" endtime="20201115 22:01:38.821"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:38.515" endtime="20201115 22:01:38.821"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:38.513" endtime="20201115 22:01:38.822"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:38.826" level="INFO">${RESULT} = [{'time': 0.020327069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.290999999999548e-06, 'source_diff': 7.290999999999548e-06}, {'time': 0.020454708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:38.822" endtime="20201115 22:01:38.826"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:38.839" level="INFO">${OVERHEAD} = {'time': [0.020327069, 0.020454708, 0.020581431, 0.020711472, 0.020838472, 0.020963722, 0.021092111, 0.021219292, 0.021351292, 0.021477014, 0.021603778, 0.021731403, 0.021862847, 0.02199175, 0.0221170...</msg>
<status status="PASS" starttime="20201115 22:01:38.827" endtime="20201115 22:01:38.839"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:38.844" level="INFO">NAME: 00-overhead-11-remove</msg>
<status status="PASS" starttime="20201115 22:01:38.843" endtime="20201115 22:01:38.844"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:38.846" level="INFO">VALUE: [7.290999999999548e-06, 7.249999999996842e-06, 7.3620000000003405e-06, 7.319000000002157e-06, 7.304999999999118e-06, 7.319000000002157e-06, 7.361000000000867e-06, 7.263999999999882e-06, 7.334000000001201e-06, 7.305999999998591e-06, 7.334000000001201e-06, 7.319999999998161e-06, 7.319000000002157e-06, 7.319000000002157e-06, 7.304999999999118e-06, 7.320000000001631e-06, 7.319999999998161e-06, 7.304999999999118e-06, 7.334000000001201e-06, 7.290999999999548e-06, 7.333999999997731e-06, 7.333000000001727e-06, 7.305999999998591e-06, 7.348000000000771e-06, 7.319999999998161e-06, 7.304999999999118e-06, 7.334000000001201e-06, 7.320000000001631e-06, 7.305999999998591e-06, 7.333000000001727e-06, 7.304999999999118e-06, 7.305000000002587e-06, 7.276999999999978e-06, 7.347000000001297e-06, 7.333000000001727e-06, 7.318999999998688e-06, 7.318999999998688e-06, 7.2779999999994516e-06, 7.319000000002157e-06, 7.347000000001297e-06, 7.319000000002157e-06, 7.304999999999118e-06, 7.320000000001631e-06, 7.332999999998258e-06, 7.318999999998688e-06, 7.347000000001297e-06, 7.333999999997731e-06, 7.318999999998688e-06, 7.333999999997731e-06, 7.333000000001727e-06]</msg>
<status status="PASS" starttime="20201115 22:01:38.845" endtime="20201115 22:01:38.847"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:38.840" endtime="20201115 22:01:38.847"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:38.850" endtime="20201115 22:01:38.851"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:38.853" endtime="20201115 22:01:38.873"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:38.852" endtime="20201115 22:01:38.873"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:38.848" endtime="20201115 22:01:38.874"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:38.482" endtime="20201115 22:01:38.874"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:36.905" endtime="20201115 22:01:38.874"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:36.904" endtime="20201115 22:01:38.874"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:38.877" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:38.886" endtime="20201115 22:01:38.903"></status>
</kw>
<msg timestamp="20201115 22:01:38.903" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:38.884" endtime="20201115 22:01:38.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:38.906" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:38.904" endtime="20201115 22:01:38.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:38.907" endtime="20201115 22:01:38.909"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:38.881" endtime="20201115 22:01:38.909"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:38.879" endtime="20201115 22:01:38.910"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:38.916" endtime="20201115 22:01:39.203"></status>
</kw>
<msg timestamp="20201115 22:01:39.207" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022740569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022748194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:38.914" endtime="20201115 22:01:39.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:39.215" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022740569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022748194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:39.208" endtime="20201115 22:01:39.215"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:39.216" endtime="20201115 22:01:39.218"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:38.912" endtime="20201115 22:01:39.218"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:38.910" endtime="20201115 22:01:39.219"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:39.223" level="INFO">${RESULT} = [{'time': 0.022748194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.625000000000687e-06, 'source_diff': 7.625000000000687e-06}, {'time': 0.022883431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:39.220" endtime="20201115 22:01:39.223"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:39.236" level="INFO">${OVERHEAD} = {'time': [0.022748194, 0.022883431, 0.023019153, 0.023159111, 0.023300833, 0.023441375, 0.023582153, 0.023722653, 0.023863889, 0.024005556, 0.024146319, 0.024287722, 0.024429194, 0.024564486, 0.024705...</msg>
<status status="PASS" starttime="20201115 22:01:39.224" endtime="20201115 22:01:39.236"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:39.241" level="INFO">NAME: 00-overhead-12-remove</msg>
<status status="PASS" starttime="20201115 22:01:39.240" endtime="20201115 22:01:39.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:39.244" level="INFO">VALUE: [7.625000000000687e-06, 7.569999999998411e-06, 7.597000000001547e-06, 7.568999999998938e-06, 7.568999999998938e-06, 7.568999999998938e-06, 7.597000000001547e-06, 7.569999999998411e-06, 7.555999999998841e-06, 7.584000000001451e-06, 7.568999999998938e-06, 7.540999999999798e-06, 7.513000000000658e-06, 7.554999999999368e-06, 7.582999999998508e-06, 7.569000000002407e-06, 7.582999999998508e-06, 7.570000000001881e-06, 7.556000000002311e-06, 7.570000000001881e-06, 7.569000000002407e-06, 7.569999999998411e-06, 7.584000000001451e-06, 7.570000000001881e-06, 7.570000000001881e-06, 7.569999999998411e-06, 7.583999999997981e-06, 7.598000000001021e-06, 7.6109999999976474e-06, 7.597999999997551e-06, 7.570000000001881e-06, 7.569000000002407e-06, 7.583000000001977e-06, 7.582999999998508e-06, 7.542000000002741e-06, 7.597000000001547e-06, 7.568999999998938e-06, 7.514000000000132e-06, 7.556000000002311e-06, 7.5969999999980775e-06, 7.568999999998938e-06, 7.568999999998938e-06, 7.582999999998508e-06, 7.568999999998938e-06, 7.582999999998508e-06, 7.597999999997551e-06, 7.5969999999980775e-06, 7.598000000001021e-06, 7.583000000001977e-06, 7.6120000000005905e-06]</msg>
<status status="PASS" starttime="20201115 22:01:39.242" endtime="20201115 22:01:39.244"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:39.237" endtime="20201115 22:01:39.245"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:39.247" endtime="20201115 22:01:39.248"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:39.250" endtime="20201115 22:01:39.270"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:39.249" endtime="20201115 22:01:39.270"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:39.245" endtime="20201115 22:01:39.271"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:38.877" endtime="20201115 22:01:39.271"></status>
</kw>
<msg timestamp="20201115 22:01:39.271" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:39.280" endtime="20201115 22:01:39.296"></status>
</kw>
<msg timestamp="20201115 22:01:39.296" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:39.279" endtime="20201115 22:01:39.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:39.299" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:39.297" endtime="20201115 22:01:39.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:39.300" endtime="20201115 22:01:39.301"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:39.276" endtime="20201115 22:01:39.302"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:39.274" endtime="20201115 22:01:39.302"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:39.309" endtime="20201115 22:01:39.597"></status>
</kw>
<msg timestamp="20201115 22:01:39.600" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020280111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020287694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:39.307" endtime="20201115 22:01:39.600"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:39.608" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020280111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020287694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:39.601" endtime="20201115 22:01:39.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:39.609" endtime="20201115 22:01:39.610"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:39.305" endtime="20201115 22:01:39.611"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:39.303" endtime="20201115 22:01:39.611"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:39.616" level="INFO">${RESULT} = [{'time': 0.020287694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.582999999998508e-06, 'source_diff': 7.582999999998508e-06}, {'time': 0.020424403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:39.612" endtime="20201115 22:01:39.616"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:39.629" level="INFO">${OVERHEAD} = {'time': [0.020287694, 0.020424403, 0.020561597, 0.020696653, 0.020834722, 0.020976014, 0.021114819, 0.021253931, 0.021395167, 0.021530236, 0.021667708, 0.021803181, 0.021939347, 0.022075111, 0.022212...</msg>
<status status="PASS" starttime="20201115 22:01:39.617" endtime="20201115 22:01:39.630"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:39.634" level="INFO">NAME: 00-overhead-12-remove</msg>
<status status="PASS" starttime="20201115 22:01:39.633" endtime="20201115 22:01:39.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:39.637" level="INFO">VALUE: [7.582999999998508e-06, 7.570000000001881e-06, 7.569000000002407e-06, 7.583999999997981e-06, 7.514000000000132e-06, 7.611000000001117e-06, 7.554999999999368e-06, 7.584000000001451e-06, 7.569999999998411e-06, 7.583000000001977e-06, 7.625000000000687e-06, 7.527999999999702e-06, 7.555000000002837e-06, 7.569000000002407e-06, 7.569000000002407e-06, 7.556000000002311e-06, 7.485999999997522e-06, 7.568999999998938e-06, 7.513000000000658e-06, 7.569000000002407e-06, 7.569000000002407e-06, 7.625000000000687e-06, 7.5969999999980775e-06, 7.568999999998938e-06, 7.583999999997981e-06, 7.569999999998411e-06, 7.568999999998938e-06, 7.583000000001977e-06, 7.584000000001451e-06, 7.568999999998938e-06, 7.569999999998411e-06, 7.582999999998508e-06, 7.527999999999702e-06, 7.597000000001547e-06, 7.583999999997981e-06, 7.583000000001977e-06, 7.568999999998938e-06, 7.611000000001117e-06, 7.583000000001977e-06, 7.570000000001881e-06, 7.582999999998508e-06, 7.584000000001451e-06, 7.513000000000658e-06, 7.568999999998938e-06, 7.555000000002837e-06, 7.568999999998938e-06, 7.568999999998938e-06, 7.500000000000562e-06, 7.569999999998411e-06, 7.583999999997981e-06]</msg>
<status status="PASS" starttime="20201115 22:01:39.635" endtime="20201115 22:01:39.637"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:39.630" endtime="20201115 22:01:39.637"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:39.640" endtime="20201115 22:01:39.641"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:39.643" endtime="20201115 22:01:39.663"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:39.642" endtime="20201115 22:01:39.663"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:39.638" endtime="20201115 22:01:39.664"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:39.272" endtime="20201115 22:01:39.664"></status>
</kw>
<msg timestamp="20201115 22:01:39.664" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:39.673" endtime="20201115 22:01:39.689"></status>
</kw>
<msg timestamp="20201115 22:01:39.689" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:39.672" endtime="20201115 22:01:39.689"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:39.692" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:39.690" endtime="20201115 22:01:39.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:39.693" endtime="20201115 22:01:39.694"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:39.669" endtime="20201115 22:01:39.695"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:39.667" endtime="20201115 22:01:39.695"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:39.702" endtime="20201115 22:01:39.990"></status>
</kw>
<msg timestamp="20201115 22:01:39.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020298028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020305597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:39.700" endtime="20201115 22:01:39.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:40.002" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020298028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020305597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:39.994" endtime="20201115 22:01:40.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:40.003" endtime="20201115 22:01:40.004"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:39.698" endtime="20201115 22:01:40.005"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:39.696" endtime="20201115 22:01:40.006"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:40.010" level="INFO">${RESULT} = [{'time': 0.020305597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.569000000002407e-06, 'source_diff': 7.569000000002407e-06}, {'time': 0.020443667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:40.006" endtime="20201115 22:01:40.010"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:40.023" level="INFO">${OVERHEAD} = {'time': [0.020305597, 0.020443667, 0.020582222, 0.020717986, 0.020854944, 0.020992069, 0.021131111, 0.021265847, 0.021404694, 0.021544194, 0.021686083, 0.021824528, 0.021962306, 0.022098014, 0.022235...</msg>
<status status="PASS" starttime="20201115 22:01:40.011" endtime="20201115 22:01:40.024"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:40.028" level="INFO">NAME: 00-overhead-12-remove</msg>
<status status="PASS" starttime="20201115 22:01:40.027" endtime="20201115 22:01:40.028"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:40.030" level="INFO">VALUE: [7.569000000002407e-06, 7.555999999998841e-06, 7.554999999999368e-06, 7.554999999999368e-06, 7.568999999998938e-06, 7.568999999998938e-06, 7.597000000001547e-06, 7.583000000001977e-06, 7.568999999998938e-06, 7.568999999998938e-06, 7.554999999999368e-06, 7.625000000000687e-06, 7.570000000001881e-06, 7.569999999998411e-06, 7.556000000002311e-06, 7.5969999999980775e-06, 7.625000000000687e-06, 7.499999999997092e-06, 7.568999999998938e-06, 7.583000000001977e-06, 7.555999999998841e-06, 7.556000000002311e-06, 7.582999999998508e-06, 7.527999999999702e-06, 7.568999999998938e-06, 7.514000000000132e-06, 7.583000000001977e-06, 7.568999999998938e-06, 7.597000000001547e-06, 7.584000000001451e-06, 7.584000000001451e-06, 7.569000000002407e-06, 7.569999999998411e-06, 7.583000000001977e-06, 7.582999999998508e-06, 7.569000000002407e-06, 7.611000000001117e-06, 7.570000000001881e-06, 7.611000000001117e-06, 7.582999999998508e-06, 7.584000000001451e-06, 7.582999999998508e-06, 7.584000000001451e-06, 7.568999999998938e-06, 7.569999999998411e-06, 7.570000000001881e-06, 7.582999999998508e-06, 7.556000000002311e-06, 7.570000000001881e-06, 7.570000000001881e-06]</msg>
<status status="PASS" starttime="20201115 22:01:40.029" endtime="20201115 22:01:40.031"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:40.024" endtime="20201115 22:01:40.031"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:40.034" endtime="20201115 22:01:40.035"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:40.037" endtime="20201115 22:01:40.056"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:40.035" endtime="20201115 22:01:40.057"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:40.032" endtime="20201115 22:01:40.057"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:39.665" endtime="20201115 22:01:40.058"></status>
</kw>
<msg timestamp="20201115 22:01:40.058" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:40.067" endtime="20201115 22:01:40.082"></status>
</kw>
<msg timestamp="20201115 22:01:40.083" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:40.065" endtime="20201115 22:01:40.083"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:40.085" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:40.084" endtime="20201115 22:01:40.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:40.086" endtime="20201115 22:01:40.088"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:40.063" endtime="20201115 22:01:40.088"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:40.061" endtime="20201115 22:01:40.089"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:40.095" endtime="20201115 22:01:40.384"></status>
</kw>
<msg timestamp="20201115 22:01:40.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020233486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020241056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:40.094" endtime="20201115 22:01:40.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:40.395" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020233486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020241056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:40.388" endtime="20201115 22:01:40.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:40.397" endtime="20201115 22:01:40.398"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:40.091" endtime="20201115 22:01:40.399"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:40.089" endtime="20201115 22:01:40.399"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:40.404" level="INFO">${RESULT} = [{'time': 0.020241056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.570000000001881e-06, 'source_diff': 7.570000000001881e-06}, {'time': 0.020379597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:40.400" endtime="20201115 22:01:40.404"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:40.417" level="INFO">${OVERHEAD} = {'time': [0.020241056, 0.020379597, 0.020515611, 0.020656861, 0.020792833, 0.020930125, 0.021068458, 0.021209861, 0.021349611, 0.021485569, 0.021625514, 0.021762458, 0.021901083, 0.022040903, 0.022180...</msg>
<status status="PASS" starttime="20201115 22:01:40.405" endtime="20201115 22:01:40.417"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:40.421" level="INFO">NAME: 00-overhead-12-remove</msg>
<status status="PASS" starttime="20201115 22:01:40.420" endtime="20201115 22:01:40.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:40.424" level="INFO">VALUE: [7.570000000001881e-06, 7.554999999999368e-06, 7.582999999998508e-06, 7.5969999999980775e-06, 7.582999999998508e-06, 7.569000000002407e-06, 7.583000000001977e-06, 7.527999999999702e-06, 7.583000000001977e-06, 7.611000000001117e-06, 7.569999999998411e-06, 7.568999999998938e-06, 7.568999999998938e-06, 7.556000000002311e-06, 7.583000000001977e-06, 7.583999999997981e-06, 7.570000000001881e-06, 7.568999999998938e-06, 7.5969999999980775e-06, 7.569999999998411e-06, 7.582999999998508e-06, 7.554999999999368e-06, 7.568999999998938e-06, 7.542000000002741e-06, 7.583000000001977e-06, 7.569000000002407e-06, 7.583000000001977e-06, 7.584000000001451e-06, 7.583000000001977e-06, 7.527000000000228e-06, 7.555999999998841e-06, 7.582999999998508e-06, 7.570000000001881e-06, 7.568999999998938e-06, 7.570000000001881e-06, 7.597000000001547e-06, 7.597000000001547e-06, 7.6109999999976474e-06, 7.583000000001977e-06, 7.568999999998938e-06, 7.568999999998938e-06, 7.568999999998938e-06, 7.584000000001451e-06, 7.568999999998938e-06, 7.583999999997981e-06, 7.598000000001021e-06, 7.584000000001451e-06, 7.583999999997981e-06, 7.569000000002407e-06, 7.584000000001451e-06]</msg>
<status status="PASS" starttime="20201115 22:01:40.423" endtime="20201115 22:01:40.424"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:40.418" endtime="20201115 22:01:40.425"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:40.427" endtime="20201115 22:01:40.429"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:40.431" endtime="20201115 22:01:40.450"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:40.429" endtime="20201115 22:01:40.451"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:40.426" endtime="20201115 22:01:40.451"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:40.059" endtime="20201115 22:01:40.451"></status>
</kw>
<msg timestamp="20201115 22:01:40.452" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:40.461" endtime="20201115 22:01:40.479"></status>
</kw>
<msg timestamp="20201115 22:01:40.480" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:40.459" endtime="20201115 22:01:40.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:40.482" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:40.481" endtime="20201115 22:01:40.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:40.483" endtime="20201115 22:01:40.485"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:40.456" endtime="20201115 22:01:40.485"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:40.454" endtime="20201115 22:01:40.486"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:40.492" endtime="20201115 22:01:40.779"></status>
</kw>
<msg timestamp="20201115 22:01:40.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020231167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020238792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:40.491" endtime="20201115 22:01:40.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:40.791" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020231167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020238792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:40.784" endtime="20201115 22:01:40.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:40.792" endtime="20201115 22:01:40.794"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:40.488" endtime="20201115 22:01:40.794"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:40.486" endtime="20201115 22:01:40.795"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:40.799" level="INFO">${RESULT} = [{'time': 0.020238792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.624999999997217e-06, 'source_diff': 7.624999999997217e-06}, {'time': 0.020374972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:40.796" endtime="20201115 22:01:40.799"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:40.812" level="INFO">${OVERHEAD} = {'time': [0.020238792, 0.020374972, 0.020516083, 0.020651389, 0.0207885, 0.020928708, 0.021069014, 0.021208597, 0.021346028, 0.021485583, 0.021622319, 0.021758069, 0.021894306, 0.022031736, 0.02217101...</msg>
<status status="PASS" starttime="20201115 22:01:40.800" endtime="20201115 22:01:40.812"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:40.817" level="INFO">NAME: 00-overhead-12-remove</msg>
<status status="PASS" starttime="20201115 22:01:40.816" endtime="20201115 22:01:40.817"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:40.819" level="INFO">VALUE: [7.624999999997217e-06, 7.639000000000257e-06, 7.486000000000992e-06, 7.5969999999980775e-06, 7.583000000001977e-06, 7.569000000002407e-06, 7.583000000001977e-06, 7.5969999999980775e-06, 7.5969999999980775e-06, 7.554999999999368e-06, 7.583000000001977e-06, 7.569000000002407e-06, 7.569999999998411e-06, 7.554999999999368e-06, 7.582999999998508e-06, 7.556000000002311e-06, 7.570000000001881e-06, 7.569000000002407e-06, 7.569999999998411e-06, 7.5269999999967585e-06, 7.611000000001117e-06, 7.582999999998508e-06, 7.584000000001451e-06, 7.582999999998508e-06, 7.582999999998508e-06, 7.554999999999368e-06, 7.583999999997981e-06, 7.568999999998938e-06, 7.5419999999992715e-06, 7.597000000001547e-06, 7.569999999998411e-06, 7.569999999998411e-06, 7.514000000000132e-06, 7.568999999998938e-06, 7.569999999998411e-06, 7.5969999999980775e-06, 7.514000000000132e-06, 7.500000000000562e-06, 7.554999999999368e-06, 7.568999999998938e-06, 7.665999999999923e-06, 7.554999999999368e-06, 7.625000000000687e-06, 7.554999999999368e-06, 7.570000000001881e-06, 7.569999999998411e-06, 7.582999999998508e-06, 7.554999999999368e-06, 7.555999999998841e-06, 7.540999999999798e-06]</msg>
<status status="PASS" starttime="20201115 22:01:40.818" endtime="20201115 22:01:40.820"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:40.813" endtime="20201115 22:01:40.820"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:40.822" endtime="20201115 22:01:40.824"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:40.826" endtime="20201115 22:01:40.845"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:40.824" endtime="20201115 22:01:40.846"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:40.821" endtime="20201115 22:01:40.846"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:40.452" endtime="20201115 22:01:40.847"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:38.876" endtime="20201115 22:01:40.847"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:38.875" endtime="20201115 22:01:40.847"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:40.849" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:40.858" endtime="20201115 22:01:40.877"></status>
</kw>
<msg timestamp="20201115 22:01:40.877" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:40.857" endtime="20201115 22:01:40.877"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:40.879" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:40.878" endtime="20201115 22:01:40.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:40.881" endtime="20201115 22:01:40.882"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:40.854" endtime="20201115 22:01:40.883"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:40.852" endtime="20201115 22:01:40.884"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:40.890" endtime="20201115 22:01:41.177"></status>
</kw>
<msg timestamp="20201115 22:01:41.180" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022609, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02261675, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201115 22:01:40.889" endtime="20201115 22:01:41.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:41.188" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022609, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02261675, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201115 22:01:41.181" endtime="20201115 22:01:41.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:41.190" endtime="20201115 22:01:41.191"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:40.886" endtime="20201115 22:01:41.192"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:40.884" endtime="20201115 22:01:41.192"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:41.196" level="INFO">${RESULT} = [{'time': 0.02261675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.750000000000812e-06, 'source_diff': 7.750000000000812e-06}, {'time': 0.022761472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:01:41.193" endtime="20201115 22:01:41.197"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:41.210" level="INFO">${OVERHEAD} = {'time': [0.02261675, 0.022761472, 0.022910264, 0.023060069, 0.023211292, 0.023362514, 0.023510583, 0.023657056, 0.023803708, 0.023951375, 0.024097833, 0.024245875, 0.024394986, 0.024544542, 0.0246921...</msg>
<status status="PASS" starttime="20201115 22:01:41.197" endtime="20201115 22:01:41.210"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:41.214" level="INFO">NAME: 00-overhead-13-remove</msg>
<status status="PASS" starttime="20201115 22:01:41.213" endtime="20201115 22:01:41.215"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:41.217" level="INFO">VALUE: [7.750000000000812e-06, 7.804999999999618e-06, 7.832999999998758e-06, 7.818999999999188e-06, 7.82000000000213e-06, 7.875000000000937e-06, 7.805000000003087e-06, 7.819999999998661e-06, 7.846999999998328e-06, 7.832999999998758e-06, 7.804999999999618e-06, 7.818999999999188e-06, 7.832999999998758e-06, 7.833999999998231e-06, 7.805999999999091e-06, 7.804999999999618e-06, 7.833000000002227e-06, 7.819999999998661e-06, 7.819000000002657e-06, 7.764000000000382e-06, 7.819000000002657e-06, 7.777999999999952e-06, 7.805000000003087e-06, 7.818999999999188e-06, 7.750000000000812e-06, 7.818999999999188e-06, 7.833999999998231e-06, 7.819999999998661e-06, 7.819999999998661e-06, 7.833999999998231e-06, 7.763999999996912e-06, 7.819999999998661e-06, 7.804999999999618e-06, 7.805999999999091e-06, 7.82000000000213e-06, 7.833999999998231e-06, 7.819999999998661e-06, 7.832999999998758e-06, 7.82000000000213e-06, 7.818999999999188e-06, 7.818999999999188e-06, 7.804999999999618e-06, 7.818999999999188e-06, 7.819999999998661e-06, 7.832999999998758e-06, 7.833000000002227e-06, 7.832999999998758e-06, 7.777999999999952e-06, 7.818999999999188e-06, 7.818999999999188e-06]</msg>
<status status="PASS" starttime="20201115 22:01:41.215" endtime="20201115 22:01:41.217"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:41.211" endtime="20201115 22:01:41.218"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:41.220" endtime="20201115 22:01:41.221"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:41.223" endtime="20201115 22:01:41.243"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:41.222" endtime="20201115 22:01:41.243"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:41.218" endtime="20201115 22:01:41.244"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:40.850" endtime="20201115 22:01:41.244"></status>
</kw>
<msg timestamp="20201115 22:01:41.244" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:41.253" endtime="20201115 22:01:41.270"></status>
</kw>
<msg timestamp="20201115 22:01:41.271" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:41.252" endtime="20201115 22:01:41.271"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:41.274" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:41.272" endtime="20201115 22:01:41.274"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:41.275" endtime="20201115 22:01:41.276"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:41.249" endtime="20201115 22:01:41.277"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:41.247" endtime="20201115 22:01:41.277"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:41.284" endtime="20201115 22:01:41.572"></status>
</kw>
<msg timestamp="20201115 22:01:41.575" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020291694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020299486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:41.282" endtime="20201115 22:01:41.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:41.583" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020291694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020299486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:41.576" endtime="20201115 22:01:41.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:41.584" endtime="20201115 22:01:41.586"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:41.280" endtime="20201115 22:01:41.586"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:41.278" endtime="20201115 22:01:41.587"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:41.591" level="INFO">${RESULT} = [{'time': 0.020299486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.791999999999522e-06, 'source_diff': 7.791999999999522e-06}, {'time': 0.020445236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:41.588" endtime="20201115 22:01:41.591"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:41.604" level="INFO">${OVERHEAD} = {'time': [0.020299486, 0.020445236, 0.020590708, 0.020737861, 0.020888083, 0.021034542, 0.021178903, 0.021323125, 0.021469125, 0.021619639, 0.021769625, 0.021915292, 0.022060736, 0.022211056, 0.022358...</msg>
<status status="PASS" starttime="20201115 22:01:41.592" endtime="20201115 22:01:41.605"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:41.609" level="INFO">NAME: 00-overhead-13-remove</msg>
<status status="PASS" starttime="20201115 22:01:41.608" endtime="20201115 22:01:41.609"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:41.611" level="INFO">VALUE: [7.791999999999522e-06, 7.818999999999188e-06, 7.846999999998328e-06, 7.818999999999188e-06, 7.833000000002227e-06, 7.819999999998661e-06, 7.846999999998328e-06, 7.749999999997342e-06, 7.832999999998758e-06, 7.805999999999091e-06, 7.847000000001797e-06, 7.819999999998661e-06, 7.819000000002657e-06, 7.86200000000084e-06, 7.874999999997467e-06, 7.832999999998758e-06, 7.818999999999188e-06, 7.819999999998661e-06, 7.833000000002227e-06, 7.819999999998661e-06, 7.777999999999952e-06, 7.832999999998758e-06, 7.875000000000937e-06, 7.792000000002991e-06, 7.818999999999188e-06, 7.847000000001797e-06, 7.804999999999618e-06, 7.818999999999188e-06, 7.777999999999952e-06, 7.819999999998661e-06, 7.847999999997801e-06, 7.805999999999091e-06, 7.818999999999188e-06, 7.819000000002657e-06, 7.82000000000213e-06, 7.860999999997897e-06, 7.777999999999952e-06, 7.764000000000382e-06, 7.818999999999188e-06, 7.847000000001797e-06, 7.805999999999091e-06, 7.806000000002561e-06, 7.832999999998758e-06, 7.818999999999188e-06, 7.818999999999188e-06, 7.806000000002561e-06, 7.846999999998328e-06, 7.804999999999618e-06, 7.82000000000213e-06, 7.777999999999952e-06]</msg>
<status status="PASS" starttime="20201115 22:01:41.610" endtime="20201115 22:01:41.612"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:41.605" endtime="20201115 22:01:41.612"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:41.614" endtime="20201115 22:01:41.616"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:41.618" endtime="20201115 22:01:41.637"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:41.616" endtime="20201115 22:01:41.638"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:41.613" endtime="20201115 22:01:41.638"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:41.245" endtime="20201115 22:01:41.639"></status>
</kw>
<msg timestamp="20201115 22:01:41.639" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:41.673" endtime="20201115 22:01:41.692"></status>
</kw>
<msg timestamp="20201115 22:01:41.693" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:41.646" endtime="20201115 22:01:41.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:41.695" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:41.694" endtime="20201115 22:01:41.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:41.696" endtime="20201115 22:01:41.698"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:41.644" endtime="20201115 22:01:41.698"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:41.642" endtime="20201115 22:01:41.699"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:41.705" endtime="20201115 22:01:41.993"></status>
</kw>
<msg timestamp="20201115 22:01:41.996" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045902333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045910167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:41.704" endtime="20201115 22:01:41.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:42.004" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045902333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045910167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:41.997" endtime="20201115 22:01:42.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:42.006" endtime="20201115 22:01:42.007"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:41.701" endtime="20201115 22:01:42.008"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:41.699" endtime="20201115 22:01:42.008"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:42.013" level="INFO">${RESULT} = [{'time': 0.045910167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.83400000000517e-06, 'source_diff': 7.83400000000517e-06}, {'time': 0.046056556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:01:42.009" endtime="20201115 22:01:42.013"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:42.026" level="INFO">${OVERHEAD} = {'time': [0.045910167, 0.046056556, 0.046205431, 0.046357042, 0.046506139, 0.046651347, 0.046801569, 0.046952069, 0.047102042, 0.047248917, 0.047400306, 0.047545111, 0.047693653, 0.047843222, 0.047989...</msg>
<status status="PASS" starttime="20201115 22:01:42.013" endtime="20201115 22:01:42.026"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:42.030" level="INFO">NAME: 00-overhead-13-remove</msg>
<status status="PASS" starttime="20201115 22:01:42.029" endtime="20201115 22:01:42.031"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:42.033" level="INFO">VALUE: [7.83400000000517e-06, 7.805999999999091e-06, 7.847999999997801e-06, 7.819999999998661e-06, 7.819999999998661e-06, 7.833000000005697e-06, 7.846999999998328e-06, 7.818999999999188e-06, 7.805999999999091e-06, 7.819999999998661e-06, 7.8200000000056e-06, 7.818999999999188e-06, 7.8200000000056e-06, 7.832999999998758e-06, 7.861000000004836e-06, 7.818999999999188e-06, 7.833999999998231e-06, 7.818999999999188e-06, 7.847000000005266e-06, 7.819999999998661e-06, 7.818999999999188e-06, 7.818999999999188e-06, 7.819999999998661e-06, 7.804999999999618e-06, 7.818999999999188e-06, 7.847000000005266e-06, 7.818999999999188e-06, 7.818999999999188e-06, 7.83400000000517e-06, 7.805999999999091e-06, 7.819999999998661e-06, 7.777999999999952e-06, 7.861000000004836e-06, 7.819000000006127e-06, 7.818999999999188e-06, 7.832999999998758e-06, 7.847999999997801e-06, 7.764000000000382e-06, 7.832999999998758e-06, 7.819999999998661e-06, 7.819999999998661e-06, 7.832999999998758e-06, 7.818999999999188e-06, 7.860999999997897e-06, 7.860999999997897e-06, 7.819999999998661e-06, 7.818999999999188e-06, 7.819999999998661e-06, 7.819999999998661e-06, 7.805999999999091e-06]</msg>
<status status="PASS" starttime="20201115 22:01:42.031" endtime="20201115 22:01:42.033"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:42.027" endtime="20201115 22:01:42.034"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:42.036" endtime="20201115 22:01:42.037"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:42.040" endtime="20201115 22:01:42.059"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:42.038" endtime="20201115 22:01:42.060"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:42.034" endtime="20201115 22:01:42.060"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:41.640" endtime="20201115 22:01:42.061"></status>
</kw>
<msg timestamp="20201115 22:01:42.061" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:42.070" endtime="20201115 22:01:42.089"></status>
</kw>
<msg timestamp="20201115 22:01:42.089" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:42.068" endtime="20201115 22:01:42.089"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:42.091" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:42.090" endtime="20201115 22:01:42.092"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:42.093" endtime="20201115 22:01:42.094"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:42.066" endtime="20201115 22:01:42.095"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:42.063" endtime="20201115 22:01:42.095"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:42.102" endtime="20201115 22:01:42.388"></status>
</kw>
<msg timestamp="20201115 22:01:42.391" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020704556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020712403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:42.100" endtime="20201115 22:01:42.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:42.399" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020704556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020712403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:42.392" endtime="20201115 22:01:42.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:42.401" endtime="20201115 22:01:42.402"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:42.098" endtime="20201115 22:01:42.403"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:42.096" endtime="20201115 22:01:42.403"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:42.407" level="INFO">${RESULT} = [{'time': 0.020712403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.847000000001797e-06, 'source_diff': 7.847000000001797e-06}, {'time': 0.020864097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:42.404" endtime="20201115 22:01:42.408"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:42.421" level="INFO">${OVERHEAD} = {'time': [0.020712403, 0.020864097, 0.021014361, 0.021160597, 0.021311278, 0.021459347, 0.021609139, 0.021757458, 0.021906056, 0.022054681, 0.022202264, 0.022351986, 0.022496319, 0.022647792, 0.022793...</msg>
<status status="PASS" starttime="20201115 22:01:42.408" endtime="20201115 22:01:42.421"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:42.425" level="INFO">NAME: 00-overhead-13-remove</msg>
<status status="PASS" starttime="20201115 22:01:42.424" endtime="20201115 22:01:42.426"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:42.428" level="INFO">VALUE: [7.847000000001797e-06, 7.833000000002227e-06, 7.818999999999188e-06, 7.832999999998758e-06, 7.819999999998661e-06, 7.832999999998758e-06, 7.819999999998661e-06, 7.832999999998758e-06, 7.819999999998661e-06, 7.833999999998231e-06, 7.832999999998758e-06, 7.804999999999618e-06, 7.818999999999188e-06, 7.819999999998661e-06, 7.777999999999952e-06, 7.805999999999091e-06, 7.846999999998328e-06, 7.804999999999618e-06, 7.819000000002657e-06, 7.818999999999188e-06, 7.804999999999618e-06, 7.805999999999091e-06, 7.819999999998661e-06, 7.763999999996912e-06, 7.819999999998661e-06, 7.832999999998758e-06, 7.764000000000382e-06, 7.861000000001367e-06, 7.804999999999618e-06, 7.819999999998661e-06, 7.82000000000213e-06, 7.777999999999952e-06, 7.777999999999952e-06, 7.82000000000213e-06, 7.805999999999091e-06, 7.749999999997342e-06, 7.819999999998661e-06, 7.818999999999188e-06, 7.818999999999188e-06, 7.819000000002657e-06, 7.819999999998661e-06, 7.805999999999091e-06, 7.860999999997897e-06, 7.818999999999188e-06, 7.818999999999188e-06, 7.847000000001797e-06, 7.805000000003087e-06, 7.82000000000213e-06, 7.819999999998661e-06, 7.749999999997342e-06]</msg>
<status status="PASS" starttime="20201115 22:01:42.427" endtime="20201115 22:01:42.428"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:42.422" endtime="20201115 22:01:42.429"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:42.432" endtime="20201115 22:01:42.433"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:42.435" endtime="20201115 22:01:42.455"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:42.433" endtime="20201115 22:01:42.455"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:42.429" endtime="20201115 22:01:42.456"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:42.061" endtime="20201115 22:01:42.456"></status>
</kw>
<msg timestamp="20201115 22:01:42.456" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:42.465" endtime="20201115 22:01:42.483"></status>
</kw>
<msg timestamp="20201115 22:01:42.483" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:42.464" endtime="20201115 22:01:42.483"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:42.486" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:42.484" endtime="20201115 22:01:42.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:42.487" endtime="20201115 22:01:42.488"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:42.461" endtime="20201115 22:01:42.489"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:42.459" endtime="20201115 22:01:42.489"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:42.496" endtime="20201115 22:01:42.782"></status>
</kw>
<msg timestamp="20201115 22:01:42.785" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021398458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021406278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:42.494" endtime="20201115 22:01:42.786"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:42.794" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021398458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021406278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:42.787" endtime="20201115 22:01:42.794"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:42.795" endtime="20201115 22:01:42.796"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:42.492" endtime="20201115 22:01:42.797"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:42.490" endtime="20201115 22:01:42.797"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:42.801" level="INFO">${RESULT} = [{'time': 0.021406278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.82000000000213e-06, 'source_diff': 7.82000000000213e-06}, {'time': 0.021555167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:01:42.798" endtime="20201115 22:01:42.802"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:42.815" level="INFO">${OVERHEAD} = {'time': [0.021406278, 0.021555167, 0.021704861, 0.021855139, 0.022002806, 0.022151194, 0.022296694, 0.022442444, 0.022592208, 0.022741694, 0.022893306, 0.023041375, 0.023192861, 0.023343139, 0.023492...</msg>
<status status="PASS" starttime="20201115 22:01:42.802" endtime="20201115 22:01:42.815"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:42.819" level="INFO">NAME: 00-overhead-13-remove</msg>
<status status="PASS" starttime="20201115 22:01:42.818" endtime="20201115 22:01:42.820"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:42.822" level="INFO">VALUE: [7.82000000000213e-06, 7.84800000000127e-06, 7.818999999999188e-06, 7.791999999999522e-06, 7.819999999998661e-06, 7.818999999999188e-06, 7.818999999999188e-06, 7.777000000000478e-06, 7.846999999998328e-06, 7.846999999998328e-06, 7.819999999998661e-06, 7.777999999999952e-06, 7.832999999998758e-06, 7.832999999998758e-06, 7.889000000000507e-06, 7.846999999998328e-06, 7.8340000000017e-06, 7.819999999998661e-06, 7.777999999999952e-06, 7.819000000002657e-06, 7.833999999998231e-06, 7.819999999998661e-06, 7.819000000002657e-06, 7.819999999998661e-06, 7.818999999999188e-06, 7.777999999999952e-06, 7.791999999999522e-06, 7.805999999999091e-06, 7.805999999999091e-06, 7.82000000000213e-06, 7.819000000002657e-06, 7.791999999999522e-06, 7.818999999999188e-06, 7.777999999999952e-06, 7.819999999998661e-06, 7.847000000001797e-06, 7.833000000002227e-06, 7.818999999999188e-06, 7.819999999998661e-06, 7.805999999999091e-06, 7.819999999998661e-06, 7.818999999999188e-06, 7.819999999998661e-06, 7.777000000000478e-06, 7.832999999998758e-06, 7.819000000002657e-06, 7.791999999999522e-06, 7.846999999998328e-06, 7.805999999999091e-06, 7.777000000000478e-06]</msg>
<status status="PASS" starttime="20201115 22:01:42.821" endtime="20201115 22:01:42.823"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:42.816" endtime="20201115 22:01:42.823"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:42.826" endtime="20201115 22:01:42.827"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:42.829" endtime="20201115 22:01:42.849"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:42.828" endtime="20201115 22:01:42.849"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:42.824" endtime="20201115 22:01:42.850"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:42.457" endtime="20201115 22:01:42.850"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:40.848" endtime="20201115 22:01:42.850"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:40.847" endtime="20201115 22:01:42.850"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:42.853" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:42.861" endtime="20201115 22:01:42.879"></status>
</kw>
<msg timestamp="20201115 22:01:42.880" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:42.860" endtime="20201115 22:01:42.880"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:42.882" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:42.881" endtime="20201115 22:01:42.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:42.883" endtime="20201115 22:01:42.885"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:42.857" endtime="20201115 22:01:42.886"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:42.855" endtime="20201115 22:01:42.886"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:42.893" endtime="20201115 22:01:43.180"></status>
</kw>
<msg timestamp="20201115 22:01:43.183" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022618208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022626278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:42.891" endtime="20201115 22:01:43.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:43.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022618208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022626278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:43.184" endtime="20201115 22:01:43.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:43.192" endtime="20201115 22:01:43.194"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:42.888" endtime="20201115 22:01:43.194"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:42.887" endtime="20201115 22:01:43.195"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:43.199" level="INFO">${RESULT} = [{'time': 0.022626278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.069999999998911e-06, 'source_diff': 8.069999999998911e-06}, {'time': 0.022782972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:43.196" endtime="20201115 22:01:43.199"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:43.212" level="INFO">${OVERHEAD} = {'time': [0.022626278, 0.022782972, 0.022942264, 0.023100333, 0.023257458, 0.023417917, 0.023572986, 0.023731069, 0.023888194, 0.024045778, 0.024203458, 0.024360167, 0.024515222, 0.024673542, 0.024830...</msg>
<status status="PASS" starttime="20201115 22:01:43.200" endtime="20201115 22:01:43.213"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:43.217" level="INFO">NAME: 00-overhead-14-remove</msg>
<status status="PASS" starttime="20201115 22:01:43.216" endtime="20201115 22:01:43.217"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:43.220" level="INFO">VALUE: [8.069999999998911e-06, 8.124999999997717e-06, 8.069999999998911e-06, 8.027000000000728e-06, 8.069000000002907e-06, 8.069999999998911e-06, 8.082999999999008e-06, 8.082999999999008e-06, 8.069000000002907e-06, 8.055999999999341e-06, 8.082999999999008e-06, 8.069999999998911e-06, 8.068999999999438e-06, 8.069999999998911e-06, 8.027999999996732e-06, 8.096999999998578e-06, 8.069999999998911e-06, 8.082999999999008e-06, 8.068999999999438e-06, 8.069999999998911e-06, 8.028000000000202e-06, 8.069999999998911e-06, 8.125000000001187e-06, 8.096999999998578e-06, 8.083999999998481e-06, 8.082999999999008e-06, 8.069999999998911e-06, 8.068999999999438e-06, 8.083999999998481e-06, 8.083999999998481e-06, 8.027000000000728e-06, 8.054999999999868e-06, 8.096999999998578e-06, 8.068999999999438e-06, 8.082999999999008e-06, 8.056000000002811e-06, 8.054999999999868e-06, 8.054999999999868e-06, 8.096999999998578e-06, 8.068999999999438e-06, 8.028000000000202e-06, 8.054999999999868e-06, 8.097000000002047e-06, 8.056000000002811e-06, 8.082999999999008e-06, 8.097000000002047e-06, 8.082999999999008e-06, 8.068999999999438e-06, 8.068999999999438e-06, 8.111000000001617e-06]</msg>
<status status="PASS" starttime="20201115 22:01:43.218" endtime="20201115 22:01:43.220"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:43.213" endtime="20201115 22:01:43.221"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:43.223" endtime="20201115 22:01:43.224"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:43.227" endtime="20201115 22:01:43.246"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:43.225" endtime="20201115 22:01:43.247"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:43.221" endtime="20201115 22:01:43.247"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:42.853" endtime="20201115 22:01:43.247"></status>
</kw>
<msg timestamp="20201115 22:01:43.248" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:43.257" endtime="20201115 22:01:43.273"></status>
</kw>
<msg timestamp="20201115 22:01:43.273" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:43.255" endtime="20201115 22:01:43.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:43.276" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:43.274" endtime="20201115 22:01:43.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:43.277" endtime="20201115 22:01:43.279"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:43.252" endtime="20201115 22:01:43.279"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:43.250" endtime="20201115 22:01:43.280"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:43.286" endtime="20201115 22:01:43.587"></status>
</kw>
<msg timestamp="20201115 22:01:43.594" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020951986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020960125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:43.285" endtime="20201115 22:01:43.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:43.613" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020951986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020960125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:43.596" endtime="20201115 22:01:43.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:43.616" endtime="20201115 22:01:43.619"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:43.282" endtime="20201115 22:01:43.621"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:43.280" endtime="20201115 22:01:43.622"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:43.631" level="INFO">${RESULT} = [{'time': 0.020960125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.139000000000757e-06, 'source_diff': 8.139000000000757e-06}, {'time': 0.021115847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:43.623" endtime="20201115 22:01:43.632"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:43.653" level="INFO">${OVERHEAD} = {'time': [0.020960125, 0.021115847, 0.021276528, 0.021435319, 0.021592917, 0.021748944, 0.021907736, 0.022064125, 0.022222917, 0.022379417, 0.022540653, 0.022701819, 0.022860847, 0.023015667, 0.023170...</msg>
<status status="PASS" starttime="20201115 22:01:43.633" endtime="20201115 22:01:43.654"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:43.659" level="INFO">NAME: 00-overhead-14-remove</msg>
<status status="PASS" starttime="20201115 22:01:43.658" endtime="20201115 22:01:43.659"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:43.661" level="INFO">VALUE: [8.139000000000757e-06, 8.028000000000202e-06, 8.069999999998911e-06, 8.069000000002907e-06, 8.069999999998911e-06, 8.082999999999008e-06, 8.082999999999008e-06, 8.068999999999438e-06, 8.055999999999341e-06, 8.083999999998481e-06, 8.055999999999341e-06, 8.069000000002907e-06, 8.068999999999438e-06, 8.069999999998911e-06, 8.069999999998911e-06, 8.054999999999868e-06, 8.068999999999438e-06, 8.082999999999008e-06, 8.068999999999438e-06, 8.083000000002477e-06, 8.068999999999438e-06, 8.041999999999772e-06, 8.068999999999438e-06, 8.069999999998911e-06, 8.056000000002811e-06, 7.986000000001492e-06, 8.054999999999868e-06, 7.986000000001492e-06, 8.068999999999438e-06, 8.069999999998911e-06, 8.139000000000757e-06, 8.069999999998911e-06, 8.07000000000238e-06, 8.068999999999438e-06, 8.069999999998911e-06, 8.069999999998911e-06, 8.097000000002047e-06, 8.069999999998911e-06, 8.069000000002907e-06, 8.097999999998051e-06, 8.069999999998911e-06, 8.068999999999438e-06, 8.068999999999438e-06, 8.014000000000632e-06, 8.000000000001062e-06, 8.068999999999438e-06, 8.056000000002811e-06, 8.069999999998911e-06, 8.055999999999341e-06, 8.069999999998911e-06]</msg>
<status status="PASS" starttime="20201115 22:01:43.660" endtime="20201115 22:01:43.662"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:43.655" endtime="20201115 22:01:43.662"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:43.665" endtime="20201115 22:01:43.666"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:43.668" endtime="20201115 22:01:43.688"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:43.667" endtime="20201115 22:01:43.688"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:43.663" endtime="20201115 22:01:43.689"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:43.248" endtime="20201115 22:01:43.689"></status>
</kw>
<msg timestamp="20201115 22:01:43.689" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:43.699" endtime="20201115 22:01:43.715"></status>
</kw>
<msg timestamp="20201115 22:01:43.716" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:43.697" endtime="20201115 22:01:43.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:43.718" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:43.717" endtime="20201115 22:01:43.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:43.719" endtime="20201115 22:01:43.721"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:43.694" endtime="20201115 22:01:43.722"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:43.692" endtime="20201115 22:01:43.722"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:43.729" endtime="20201115 22:01:44.016"></status>
</kw>
<msg timestamp="20201115 22:01:44.019" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021267528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021275625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:43.727" endtime="20201115 22:01:44.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:44.028" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021267528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021275625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:44.021" endtime="20201115 22:01:44.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:44.029" endtime="20201115 22:01:44.031"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:43.725" endtime="20201115 22:01:44.031"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:43.723" endtime="20201115 22:01:44.032"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:44.036" level="INFO">${RESULT} = [{'time': 0.021275625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.096999999998578e-06, 'source_diff': 8.096999999998578e-06}, {'time': 0.021435361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:44.033" endtime="20201115 22:01:44.037"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:44.050" level="INFO">${OVERHEAD} = {'time': [0.021275625, 0.021435361, 0.021596292, 0.021755542, 0.021915417, 0.022074889, 0.022229917, 0.022386583, 0.022541792, 0.022700111, 0.022854681, 0.023013806, 0.023168361, 0.023324542, 0.023480...</msg>
<status status="PASS" starttime="20201115 22:01:44.037" endtime="20201115 22:01:44.050"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:44.055" level="INFO">NAME: 00-overhead-14-remove</msg>
<status status="PASS" starttime="20201115 22:01:44.054" endtime="20201115 22:01:44.055"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:44.057" level="INFO">VALUE: [8.096999999998578e-06, 8.082999999999008e-06, 8.083999999998481e-06, 8.069999999998911e-06, 8.110999999998147e-06, 8.097000000002047e-06, 8.069999999998911e-06, 8.083000000002477e-06, 8.07000000000238e-06, 8.054999999999868e-06, 8.07000000000238e-06, 8.08400000000195e-06, 8.068999999999438e-06, 8.083999999998481e-06, 8.055999999999341e-06, 8.083999999998481e-06, 8.153000000000327e-06, 8.125000000001187e-06, 8.041000000000298e-06, 8.054999999999868e-06, 8.083000000002477e-06, 8.068999999999438e-06, 8.07000000000238e-06, 8.027000000000728e-06, 8.083000000002477e-06, 8.124999999997717e-06, 8.07000000000238e-06, 8.069999999998911e-06, 8.083000000002477e-06, 8.069999999998911e-06, 8.068999999999438e-06, 8.054999999999868e-06, 8.068999999999438e-06, 8.041999999999772e-06, 8.028000000000202e-06, 8.014000000000632e-06, 8.054999999999868e-06, 8.082999999999008e-06, 8.07000000000238e-06, 8.054999999999868e-06, 8.082999999999008e-06, 8.055999999999341e-06, 8.082999999999008e-06, 8.056000000002811e-06, 8.069000000002907e-06, 8.068999999999438e-06, 8.055999999999341e-06, 8.069999999998911e-06, 8.083999999998481e-06, 8.055999999999341e-06]</msg>
<status status="PASS" starttime="20201115 22:01:44.056" endtime="20201115 22:01:44.058"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.051" endtime="20201115 22:01:44.058"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:44.061" endtime="20201115 22:01:44.062"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:44.064" endtime="20201115 22:01:44.084"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.063" endtime="20201115 22:01:44.085"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.059" endtime="20201115 22:01:44.085"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:43.690" endtime="20201115 22:01:44.085"></status>
</kw>
<msg timestamp="20201115 22:01:44.086" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:44.095" endtime="20201115 22:01:44.113"></status>
</kw>
<msg timestamp="20201115 22:01:44.114" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:44.093" endtime="20201115 22:01:44.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:44.117" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:44.115" endtime="20201115 22:01:44.117"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:44.118" endtime="20201115 22:01:44.119"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.091" endtime="20201115 22:01:44.120"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.088" endtime="20201115 22:01:44.120"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:44.127" endtime="20201115 22:01:44.413"></status>
</kw>
<msg timestamp="20201115 22:01:44.416" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021194944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021203083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:44.126" endtime="20201115 22:01:44.417"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:44.425" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021194944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021203083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:44.418" endtime="20201115 22:01:44.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:44.426" endtime="20201115 22:01:44.428"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.123" endtime="20201115 22:01:44.429"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.121" endtime="20201115 22:01:44.429"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:44.433" level="INFO">${RESULT} = [{'time': 0.021203083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.139000000000757e-06, 'source_diff': 8.139000000000757e-06}, {'time': 0.021358306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:44.430" endtime="20201115 22:01:44.434"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:44.447" level="INFO">${OVERHEAD} = {'time': [0.021203083, 0.021358306, 0.021515028, 0.021669528, 0.021825972, 0.021982181, 0.022137181, 0.022296278, 0.022457917, 0.022618139, 0.022777903, 0.022934292, 0.023089514, 0.023247597, 0.023404...</msg>
<status status="PASS" starttime="20201115 22:01:44.434" endtime="20201115 22:01:44.448"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:44.452" level="INFO">NAME: 00-overhead-14-remove</msg>
<status status="PASS" starttime="20201115 22:01:44.451" endtime="20201115 22:01:44.452"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:44.455" level="INFO">VALUE: [8.139000000000757e-06, 8.069999999998911e-06, 8.069999999998911e-06, 8.055999999999341e-06, 8.041000000000298e-06, 8.069999999998911e-06, 8.083999999998481e-06, 8.069999999998911e-06, 8.07000000000238e-06, 8.069999999998911e-06, 8.096999999998578e-06, 8.069999999998911e-06, 8.069999999998911e-06, 8.054999999999868e-06, 8.082999999999008e-06, 8.08400000000195e-06, 8.069999999998911e-06, 8.056000000002811e-06, 8.083000000002477e-06, 8.027000000000728e-06, 8.082999999999008e-06, 8.041000000000298e-06, 8.083000000002477e-06, 8.083999999998481e-06, 8.110999999998147e-06, 8.083000000002477e-06, 8.069999999998911e-06, 8.083000000002477e-06, 8.08400000000195e-06, 8.08400000000195e-06, 8.083999999998481e-06, 8.069999999998911e-06, 8.07000000000238e-06, 8.097999999998051e-06, 8.07000000000238e-06, 8.096999999998578e-06, 8.054999999999868e-06, 8.082999999999008e-06, 8.054999999999868e-06, 8.07000000000238e-06, 8.083999999998481e-06, 8.055999999999341e-06, 8.069999999998911e-06, 8.082999999999008e-06, 8.054999999999868e-06, 8.055999999999341e-06, 8.028000000000202e-06, 8.068999999999438e-06, 8.082999999999008e-06, 8.055999999999341e-06]</msg>
<status status="PASS" starttime="20201115 22:01:44.453" endtime="20201115 22:01:44.455"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.448" endtime="20201115 22:01:44.456"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:44.458" endtime="20201115 22:01:44.459"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:44.461" endtime="20201115 22:01:44.481"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.460" endtime="20201115 22:01:44.482"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.456" endtime="20201115 22:01:44.482"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.086" endtime="20201115 22:01:44.482"></status>
</kw>
<msg timestamp="20201115 22:01:44.483" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:44.492" endtime="20201115 22:01:44.511"></status>
</kw>
<msg timestamp="20201115 22:01:44.511" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:44.490" endtime="20201115 22:01:44.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:44.514" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:44.512" endtime="20201115 22:01:44.514"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:44.515" endtime="20201115 22:01:44.516"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.488" endtime="20201115 22:01:44.517"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.485" endtime="20201115 22:01:44.517"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:44.524" endtime="20201115 22:01:44.813"></status>
</kw>
<msg timestamp="20201115 22:01:44.816" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020717764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020725833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:44.523" endtime="20201115 22:01:44.817"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:44.825" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020717764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020725833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:44.818" endtime="20201115 22:01:44.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:44.826" endtime="20201115 22:01:44.828"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.520" endtime="20201115 22:01:44.829"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.518" endtime="20201115 22:01:44.829"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:44.833" level="INFO">${RESULT} = [{'time': 0.020725833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.068999999999438e-06, 'source_diff': 8.068999999999438e-06}, {'time': 0.020886764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:44.830" endtime="20201115 22:01:44.834"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:44.892" level="INFO">${OVERHEAD} = {'time': [0.020725833, 0.020886764, 0.021043958, 0.021200444, 0.021357097, 0.021512069, 0.021673083, 0.021834486, 0.021989486, 0.022144306, 0.022305222, 0.022463069, 0.022619, 0.022775208, 0.022932361...</msg>
<status status="PASS" starttime="20201115 22:01:44.834" endtime="20201115 22:01:44.892"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:44.896" level="INFO">NAME: 00-overhead-14-remove</msg>
<status status="PASS" starttime="20201115 22:01:44.895" endtime="20201115 22:01:44.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:44.899" level="INFO">VALUE: [8.068999999999438e-06, 8.069999999998911e-06, 8.069000000002907e-06, 8.068999999999438e-06, 8.068999999999438e-06, 8.055000000003337e-06, 8.054999999999868e-06, 8.068999999999438e-06, 8.082999999999008e-06, 8.069999999998911e-06, 8.068999999999438e-06, 8.082999999999008e-06, 8.068999999999438e-06, 8.111000000001617e-06, 8.068999999999438e-06, 8.139000000000757e-06, 8.069999999998911e-06, 8.069999999998911e-06, 8.069999999998911e-06, 8.083000000002477e-06, 8.054999999999868e-06, 8.028000000000202e-06, 8.055000000003337e-06, 8.125000000001187e-06, 8.082999999999008e-06, 8.068999999999438e-06, 8.028000000000202e-06, 8.069999999998911e-06, 8.068999999999438e-06, 8.08400000000195e-06, 8.069000000002907e-06, 8.068999999999438e-06, 8.069000000002907e-06, 8.068999999999438e-06, 8.028000000000202e-06, 8.07000000000238e-06, 8.069999999998911e-06, 8.069999999998911e-06, 8.055999999999341e-06, 8.097000000002047e-06, 8.096999999998578e-06, 8.054999999999868e-06, 8.111000000001617e-06, 8.068999999999438e-06, 8.054999999999868e-06, 8.055999999999341e-06, 8.082999999999008e-06, 8.028000000000202e-06, 8.068999999999438e-06, 8.083000000002477e-06]</msg>
<status status="PASS" starttime="20201115 22:01:44.898" endtime="20201115 22:01:44.899"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.893" endtime="20201115 22:01:44.900"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:44.902" endtime="20201115 22:01:44.904"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:44.906" endtime="20201115 22:01:44.925"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.904" endtime="20201115 22:01:44.926"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.901" endtime="20201115 22:01:44.927"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.483" endtime="20201115 22:01:44.927"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:42.851" endtime="20201115 22:01:44.927"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:42.851" endtime="20201115 22:01:44.927"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:44.930" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:44.940" endtime="20201115 22:01:44.960"></status>
</kw>
<msg timestamp="20201115 22:01:44.960" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:44.938" endtime="20201115 22:01:44.960"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:44.963" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:44.961" endtime="20201115 22:01:44.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:44.964" endtime="20201115 22:01:44.966"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.934" endtime="20201115 22:01:44.966"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.932" endtime="20201115 22:01:44.967"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:44.974" endtime="20201115 22:01:45.260"></status>
</kw>
<msg timestamp="20201115 22:01:45.263" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024671611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024679903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:44.972" endtime="20201115 22:01:45.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:45.272" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024671611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024679903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:45.264" endtime="20201115 22:01:45.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:45.273" endtime="20201115 22:01:45.275"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.970" endtime="20201115 22:01:45.275"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.968" endtime="20201115 22:01:45.276"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:45.280" level="INFO">${RESULT} = [{'time': 0.024679903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.292000000000022e-06, 'source_diff': 8.292000000000022e-06}, {'time': 0.024850236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:45.276" endtime="20201115 22:01:45.280"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:45.294" level="INFO">${OVERHEAD} = {'time': [0.024679903, 0.024850236, 0.025021708, 0.025186528, 0.025353778, 0.025521472, 0.025686806, 0.025852139, 0.026022, 0.026187319, 0.026357806, 0.026524097, 0.026689444, 0.026859208, 0.027030889...</msg>
<status status="PASS" starttime="20201115 22:01:45.281" endtime="20201115 22:01:45.294"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:45.298" level="INFO">NAME: 00-overhead-15-remove</msg>
<status status="PASS" starttime="20201115 22:01:45.297" endtime="20201115 22:01:45.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:45.301" level="INFO">VALUE: [8.292000000000022e-06, 8.305000000000118e-06, 8.305000000000118e-06, 8.319999999999161e-06, 8.333999999998731e-06, 8.318999999999688e-06, 8.319999999999161e-06, 8.250000000001312e-06, 8.292000000000022e-06, 8.318999999999688e-06, 8.237000000001216e-06, 8.318999999999688e-06, 8.346999999998828e-06, 8.305000000000118e-06, 8.305999999999591e-06, 8.250000000001312e-06, 8.278000000000452e-06, 8.319999999999161e-06, 8.332999999999258e-06, 8.346999999998828e-06, 8.278000000000452e-06, 8.318999999999688e-06, 8.318999999999688e-06, 8.305999999999591e-06, 8.319999999999161e-06, 8.318999999999688e-06, 8.361000000001867e-06, 8.32000000000263e-06, 8.318999999999688e-06, 8.305000000000118e-06, 8.319999999999161e-06, 8.333000000002727e-06, 8.319999999999161e-06, 8.319999999999161e-06, 8.305000000000118e-06, 8.32000000000263e-06, 8.319999999999161e-06, 8.402000000001103e-06, 8.333999999998731e-06, 8.332999999999258e-06, 8.318999999999688e-06, 8.319999999999161e-06, 8.319999999999161e-06, 8.318999999999688e-06, 8.237000000001216e-06, 8.3200000000061e-06, 8.319999999999161e-06, 8.319000000006627e-06, 8.319999999999161e-06, 8.292000000000022e-06]</msg>
<status status="PASS" starttime="20201115 22:01:45.299" endtime="20201115 22:01:45.301"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:45.295" endtime="20201115 22:01:45.302"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:45.304" endtime="20201115 22:01:45.306"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:45.308" endtime="20201115 22:01:45.327"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:45.306" endtime="20201115 22:01:45.328"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:45.302" endtime="20201115 22:01:45.328"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.930" endtime="20201115 22:01:45.329"></status>
</kw>
<msg timestamp="20201115 22:01:45.329" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:45.339" endtime="20201115 22:01:45.359"></status>
</kw>
<msg timestamp="20201115 22:01:45.359" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:45.337" endtime="20201115 22:01:45.359"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:45.362" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:45.360" endtime="20201115 22:01:45.363"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:45.363" endtime="20201115 22:01:45.365"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:45.334" endtime="20201115 22:01:45.366"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:45.332" endtime="20201115 22:01:45.366"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:45.373" endtime="20201115 22:01:45.660"></status>
</kw>
<msg timestamp="20201115 22:01:45.663" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021662125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021670444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:45.371" endtime="20201115 22:01:45.663"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:45.672" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021662125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021670444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:45.664" endtime="20201115 22:01:45.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:45.673" endtime="20201115 22:01:45.675"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:45.369" endtime="20201115 22:01:45.675"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:45.367" endtime="20201115 22:01:45.676"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:45.680" level="INFO">${RESULT} = [{'time': 0.021670444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.318999999999688e-06, 'source_diff': 8.318999999999688e-06}, {'time': 0.021838556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:45.676" endtime="20201115 22:01:45.680"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:45.694" level="INFO">${OVERHEAD} = {'time': [0.021670444, 0.021838556, 0.022006986, 0.022178667, 0.022343444, 0.022512583, 0.022683625, 0.022851556, 0.023020167, 0.023190014, 0.023359597, 0.023524347, 0.023696333, 0.023862625, 0.024030...</msg>
<status status="PASS" starttime="20201115 22:01:45.681" endtime="20201115 22:01:45.694"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:45.698" level="INFO">NAME: 00-overhead-15-remove</msg>
<status status="PASS" starttime="20201115 22:01:45.697" endtime="20201115 22:01:45.699"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:45.701" level="INFO">VALUE: [8.318999999999688e-06, 8.319999999999161e-06, 8.318999999999688e-06, 8.249999999997842e-06, 8.318999999999688e-06, 8.318999999999688e-06, 8.278000000000452e-06, 8.374999999997967e-06, 8.305999999999591e-06, 8.319999999999161e-06, 8.305000000000118e-06, 8.250000000001312e-06, 8.318999999999688e-06, 8.332999999999258e-06, 8.360999999998397e-06, 8.318999999999688e-06, 8.346999999998828e-06, 8.332999999999258e-06, 8.388999999997537e-06, 8.319999999999161e-06, 8.305000000000118e-06, 8.32000000000263e-06, 8.318999999999688e-06, 8.333000000002727e-06, 8.305000000000118e-06, 8.318999999999688e-06, 8.319999999999161e-06, 8.318999999999688e-06, 8.264000000000882e-06, 8.292000000000022e-06, 8.319999999999161e-06, 8.276999999997509e-06, 8.332999999999258e-06, 8.318999999999688e-06, 8.305999999999591e-06, 8.292000000000022e-06, 8.333999999998731e-06, 8.305000000000118e-06, 8.319000000003157e-06, 8.32000000000263e-06, 8.318999999999688e-06, 8.278000000000452e-06, 8.333000000002727e-06, 8.263999999997412e-06, 8.34800000000177e-06, 8.318999999999688e-06, 8.305000000000118e-06, 8.319999999999161e-06, 8.332999999999258e-06, 8.305999999999591e-06]</msg>
<status status="PASS" starttime="20201115 22:01:45.700" endtime="20201115 22:01:45.701"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:45.695" endtime="20201115 22:01:45.702"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:45.704" endtime="20201115 22:01:45.706"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:45.708" endtime="20201115 22:01:45.727"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:45.706" endtime="20201115 22:01:45.728"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:45.703" endtime="20201115 22:01:45.729"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:45.329" endtime="20201115 22:01:45.729"></status>
</kw>
<msg timestamp="20201115 22:01:45.729" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:45.739" endtime="20201115 22:01:45.759"></status>
</kw>
<msg timestamp="20201115 22:01:45.759" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:45.737" endtime="20201115 22:01:45.760"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:45.762" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:45.761" endtime="20201115 22:01:45.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:45.763" endtime="20201115 22:01:45.765"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:45.734" endtime="20201115 22:01:45.766"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:45.732" endtime="20201115 22:01:45.766"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:45.773" endtime="20201115 22:01:46.059"></status>
</kw>
<msg timestamp="20201115 22:01:46.062" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022103556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022111875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:45.771" endtime="20201115 22:01:46.063"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:46.071" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022103556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022111875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:46.063" endtime="20201115 22:01:46.071"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:46.072" endtime="20201115 22:01:46.074"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:45.768" endtime="20201115 22:01:46.074"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:45.767" endtime="20201115 22:01:46.075"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:46.079" level="INFO">${RESULT} = [{'time': 0.022111875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.318999999999688e-06, 'source_diff': 8.318999999999688e-06}, {'time': 0.022277208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:46.076" endtime="20201115 22:01:46.079"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:46.093" level="INFO">${OVERHEAD} = {'time': [0.022111875, 0.022277208, 0.022447292, 0.02261525, 0.022780319, 0.022945528, 0.023111083, 0.023277833, 0.023443403, 0.023611819, 0.023779542, 0.023945514, 0.024113486, 0.024278542, 0.0244465...</msg>
<status status="PASS" starttime="20201115 22:01:46.080" endtime="20201115 22:01:46.093"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:46.098" level="INFO">NAME: 00-overhead-15-remove</msg>
<status status="PASS" starttime="20201115 22:01:46.097" endtime="20201115 22:01:46.098"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:46.100" level="INFO">VALUE: [8.318999999999688e-06, 8.332999999999258e-06, 8.305999999999591e-06, 8.318999999999688e-06, 8.388000000001533e-06, 8.333999999998731e-06, 8.318999999999688e-06, 8.318999999999688e-06, 8.32000000000263e-06, 8.318999999999688e-06, 8.3340000000022e-06, 8.333000000002727e-06, 8.346999999998828e-06, 8.292000000000022e-06, 8.332999999999258e-06, 8.319999999999161e-06, 8.249999999997842e-06, 8.305000000000118e-06, 8.319000000003157e-06, 8.319999999999161e-06, 8.277999999996982e-06, 8.332999999999258e-06, 8.278000000000452e-06, 8.318999999999688e-06, 8.332999999999258e-06, 8.332999999999258e-06, 8.318999999999688e-06, 8.318999999999688e-06, 8.332999999999258e-06, 8.291000000000548e-06, 8.278000000000452e-06, 8.319000000003157e-06, 8.319999999999161e-06, 8.318999999999688e-06, 8.360999999998397e-06, 8.389000000001007e-06, 8.332999999999258e-06, 8.332999999999258e-06, 8.305999999999591e-06, 8.305000000000118e-06, 8.319999999999161e-06, 8.292000000000022e-06, 8.319999999999161e-06, 8.3340000000022e-06, 8.347999999998301e-06, 8.277999999996982e-06, 8.305000000000118e-06, 8.292000000000022e-06, 8.347999999998301e-06, 8.319999999999161e-06]</msg>
<status status="PASS" starttime="20201115 22:01:46.099" endtime="20201115 22:01:46.101"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.094" endtime="20201115 22:01:46.101"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:46.103" endtime="20201115 22:01:46.105"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:46.107" endtime="20201115 22:01:46.127"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.106" endtime="20201115 22:01:46.127"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.102" endtime="20201115 22:01:46.128"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:45.730" endtime="20201115 22:01:46.128"></status>
</kw>
<msg timestamp="20201115 22:01:46.129" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:46.138" endtime="20201115 22:01:46.156"></status>
</kw>
<msg timestamp="20201115 22:01:46.157" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:46.136" endtime="20201115 22:01:46.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:46.160" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:46.158" endtime="20201115 22:01:46.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:46.161" endtime="20201115 22:01:46.162"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.134" endtime="20201115 22:01:46.163"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.131" endtime="20201115 22:01:46.163"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:46.170" endtime="20201115 22:01:46.456"></status>
</kw>
<msg timestamp="20201115 22:01:46.459" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021911431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02191975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:01:46.169" endtime="20201115 22:01:46.459"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:46.467" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021911431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02191975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:01:46.460" endtime="20201115 22:01:46.468"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:46.469" endtime="20201115 22:01:46.470"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.166" endtime="20201115 22:01:46.471"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.164" endtime="20201115 22:01:46.471"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:46.476" level="INFO">${RESULT} = [{'time': 0.02191975, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.319000000003157e-06, 'source_diff': 8.319000000003157e-06}, {'time': 0.022090264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:01:46.472" endtime="20201115 22:01:46.476"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:46.491" level="INFO">${OVERHEAD} = {'time': [0.02191975, 0.022090264, 0.022260028, 0.022425764, 0.022595069, 0.022765639, 0.022931194, 0.023097889, 0.023266139, 0.023436167, 0.023607208, 0.023778431, 0.023948986, 0.024115431, 0.0242833...</msg>
<status status="PASS" starttime="20201115 22:01:46.477" endtime="20201115 22:01:46.491"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:46.496" level="INFO">NAME: 00-overhead-15-remove</msg>
<status status="PASS" starttime="20201115 22:01:46.494" endtime="20201115 22:01:46.496"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:46.498" level="INFO">VALUE: [8.319000000003157e-06, 8.332999999999258e-06, 8.305999999999591e-06, 8.332999999999258e-06, 8.332999999999258e-06, 8.319999999999161e-06, 8.318999999999688e-06, 8.332999999999258e-06, 8.389000000001007e-06, 8.3340000000022e-06, 8.318999999999688e-06, 8.333999999998731e-06, 8.332999999999258e-06, 8.319999999999161e-06, 8.305999999999591e-06, 8.319999999999161e-06, 8.401999999997634e-06, 8.318999999999688e-06, 8.319999999999161e-06, 8.332999999999258e-06, 8.278000000000452e-06, 8.319999999999161e-06, 8.305999999999591e-06, 8.333999999998731e-06, 8.333999999998731e-06, 8.403000000000577e-06, 8.332999999999258e-06, 8.318999999999688e-06, 8.332999999999258e-06, 8.346999999998828e-06, 8.319999999999161e-06, 8.305999999999591e-06, 8.347000000002297e-06, 8.264000000000882e-06, 8.305999999999591e-06, 8.318999999999688e-06, 8.319999999999161e-06, 8.305000000000118e-06, 8.250000000001312e-06, 8.374999999997967e-06, 8.290999999997078e-06, 8.319000000003157e-06, 8.332999999999258e-06, 8.305999999999591e-06, 8.319999999999161e-06, 8.361000000001867e-06, 8.333999999998731e-06, 8.318999999999688e-06, 8.319999999999161e-06, 8.347000000002297e-06]</msg>
<status status="PASS" starttime="20201115 22:01:46.497" endtime="20201115 22:01:46.498"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.492" endtime="20201115 22:01:46.499"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:46.501" endtime="20201115 22:01:46.503"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:46.505" endtime="20201115 22:01:46.525"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.504" endtime="20201115 22:01:46.526"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.500" endtime="20201115 22:01:46.526"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.129" endtime="20201115 22:01:46.526"></status>
</kw>
<msg timestamp="20201115 22:01:46.527" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:46.536" endtime="20201115 22:01:46.555"></status>
</kw>
<msg timestamp="20201115 22:01:46.555" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:46.534" endtime="20201115 22:01:46.555"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:46.558" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:46.556" endtime="20201115 22:01:46.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:46.559" endtime="20201115 22:01:46.562"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.531" endtime="20201115 22:01:46.562"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.529" endtime="20201115 22:01:46.563"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:46.569" endtime="20201115 22:01:46.855"></status>
</kw>
<msg timestamp="20201115 22:01:46.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020902958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020911292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:46.568" endtime="20201115 22:01:46.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:46.867" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020902958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020911292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:46.860" endtime="20201115 22:01:46.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:46.868" endtime="20201115 22:01:46.870"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.565" endtime="20201115 22:01:46.870"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.563" endtime="20201115 22:01:46.871"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:46.875" level="INFO">${RESULT} = [{'time': 0.020911292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.3340000000022e-06, 'source_diff': 8.3340000000022e-06}, {'time': 0.021079514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8...</msg>
<status status="PASS" starttime="20201115 22:01:46.872" endtime="20201115 22:01:46.876"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:46.889" level="INFO">${OVERHEAD} = {'time': [0.020911292, 0.021079514, 0.021246861, 0.021417903, 0.021589056, 0.021754542, 0.021921236, 0.022091097, 0.022261097, 0.022432625, 0.022602167, 0.022772028, 0.022939014, 0.023109264, 0.023280...</msg>
<status status="PASS" starttime="20201115 22:01:46.876" endtime="20201115 22:01:46.889"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:46.894" level="INFO">NAME: 00-overhead-15-remove</msg>
<status status="PASS" starttime="20201115 22:01:46.893" endtime="20201115 22:01:46.894"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:46.896" level="INFO">VALUE: [8.3340000000022e-06, 8.375000000001437e-06, 8.318999999999688e-06, 8.388999999997537e-06, 8.319999999999161e-06, 8.32000000000263e-06, 8.332999999999258e-06, 8.332999999999258e-06, 8.305000000000118e-06, 8.305999999999591e-06, 8.305999999999591e-06, 8.333999999998731e-06, 8.319999999999161e-06, 8.305999999999591e-06, 8.291000000000548e-06, 8.318999999999688e-06, 8.305999999999591e-06, 8.319000000003157e-06, 8.332999999999258e-06, 8.278000000000452e-06, 8.305999999999591e-06, 8.347000000002297e-06, 8.332999999999258e-06, 8.318999999999688e-06, 8.278000000000452e-06, 8.333999999998731e-06, 8.318999999999688e-06, 8.318999999999688e-06, 8.305000000000118e-06, 8.332999999999258e-06, 8.333999999998731e-06, 8.305999999999591e-06, 8.318999999999688e-06, 8.318999999999688e-06, 8.32000000000263e-06, 8.318999999999688e-06, 8.332999999999258e-06, 8.333000000002727e-06, 8.333999999998731e-06, 8.332999999999258e-06, 8.318999999999688e-06, 8.319999999999161e-06, 8.375000000001437e-06, 8.319999999999161e-06, 8.333000000002727e-06, 8.402000000001103e-06, 8.360999999998397e-06, 8.319999999999161e-06, 8.333000000002727e-06, 8.401999999997634e-06]</msg>
<status status="PASS" starttime="20201115 22:01:46.895" endtime="20201115 22:01:46.901"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.890" endtime="20201115 22:01:46.901"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:46.904" endtime="20201115 22:01:46.905"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:46.908" endtime="20201115 22:01:46.927"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.906" endtime="20201115 22:01:46.928"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.902" endtime="20201115 22:01:46.928"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.527" endtime="20201115 22:01:46.928"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.929" endtime="20201115 22:01:46.929"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.928" endtime="20201115 22:01:46.929"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:46.931" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:46.940" endtime="20201115 22:01:46.960"></status>
</kw>
<msg timestamp="20201115 22:01:46.961" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:46.939" endtime="20201115 22:01:46.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:46.964" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:46.962" endtime="20201115 22:01:46.964"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:46.965" endtime="20201115 22:01:46.966"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.936" endtime="20201115 22:01:46.967"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.934" endtime="20201115 22:01:46.967"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:46.974" endtime="20201115 22:01:47.261"></status>
</kw>
<msg timestamp="20201115 22:01:47.264" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023318639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023327208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:46.972" endtime="20201115 22:01:47.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:47.272" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023318639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023327208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:47.265" endtime="20201115 22:01:47.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:47.273" endtime="20201115 22:01:47.275"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.970" endtime="20201115 22:01:47.276"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.968" endtime="20201115 22:01:47.276"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:47.281" level="INFO">${RESULT} = [{'time': 0.023327208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.568999999999938e-06, 'source_diff': 8.568999999999938e-06}, {'time': 0.023506653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:47.277" endtime="20201115 22:01:47.281"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:47.294" level="INFO">${OVERHEAD} = {'time': [0.023327208, 0.023506653, 0.023685306, 0.023866833, 0.024044833, 0.024219903, 0.024395292, 0.024576097, 0.024756236, 0.024937278, 0.025117833, 0.02529575, 0.025471875, 0.025646944, 0.0258256...</msg>
<status status="PASS" starttime="20201115 22:01:47.282" endtime="20201115 22:01:47.295"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:47.299" level="INFO">NAME: 00-overhead-16-remove</msg>
<status status="PASS" starttime="20201115 22:01:47.298" endtime="20201115 22:01:47.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:47.302" level="INFO">VALUE: [8.568999999999938e-06, 8.583999999998981e-06, 8.583999999998981e-06, 8.596999999999078e-06, 8.583000000002977e-06, 8.58400000000245e-06, 8.569999999999411e-06, 8.583000000002977e-06, 8.582999999999508e-06, 8.583999999998981e-06, 8.555000000000368e-06, 8.568999999999938e-06, 8.583000000002977e-06, 8.583000000002977e-06, 8.569999999999411e-06, 8.568999999999938e-06, 8.527999999997232e-06, 8.569999999999411e-06, 8.485999999998523e-06, 8.569999999999411e-06, 8.569999999999411e-06, 8.583999999998981e-06, 8.555000000000368e-06, 8.528000000000702e-06, 8.542000000000272e-06, 8.568999999999938e-06, 8.569999999999411e-06, 8.569999999999411e-06, 8.568999999999938e-06, 8.527999999997232e-06, 8.582999999999508e-06, 8.555000000000368e-06, 8.568999999999938e-06, 8.569999999999411e-06, 8.555999999999842e-06, 8.555000000000368e-06, 8.582999999999508e-06, 8.583999999998981e-06, 8.624999999998217e-06, 8.513999999997662e-06, 8.569999999999411e-06, 8.596999999999078e-06, 8.582999999999508e-06, 8.569999999999411e-06, 8.58400000000245e-06, 8.541000000000798e-06, 8.611000000005586e-06, 8.568999999999938e-06, 8.555000000000368e-06, 8.569999999999411e-06]</msg>
<status status="PASS" starttime="20201115 22:01:47.300" endtime="20201115 22:01:47.303"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.295" endtime="20201115 22:01:47.303"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:47.306" endtime="20201115 22:01:47.307"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:47.309" endtime="20201115 22:01:47.329"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.307" endtime="20201115 22:01:47.329"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.304" endtime="20201115 22:01:47.330"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.932" endtime="20201115 22:01:47.330"></status>
</kw>
<msg timestamp="20201115 22:01:47.330" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:47.339" endtime="20201115 22:01:47.357"></status>
</kw>
<msg timestamp="20201115 22:01:47.358" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:47.338" endtime="20201115 22:01:47.358"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:47.360" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:47.359" endtime="20201115 22:01:47.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:47.361" endtime="20201115 22:01:47.364"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.335" endtime="20201115 22:01:47.365"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.333" endtime="20201115 22:01:47.365"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:47.372" endtime="20201115 22:01:47.658"></status>
</kw>
<msg timestamp="20201115 22:01:47.661" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020794486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020803056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:47.370" endtime="20201115 22:01:47.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:47.670" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020794486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020803056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:47.662" endtime="20201115 22:01:47.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:47.671" endtime="20201115 22:01:47.673"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.368" endtime="20201115 22:01:47.673"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.366" endtime="20201115 22:01:47.674"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:47.678" level="INFO">${RESULT} = [{'time': 0.020803056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.569999999999411e-06, 'source_diff': 8.569999999999411e-06}, {'time': 0.020982444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:47.674" endtime="20201115 22:01:47.678"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:47.692" level="INFO">${OVERHEAD} = {'time': [0.020803056, 0.020982444, 0.021159903, 0.021339486, 0.021516236, 0.021697361, 0.021873625, 0.022053764, 0.022232889, 0.0224125, 0.022594333, 0.022772083, 0.022953431, 0.023131736, 0.02331397...</msg>
<status status="PASS" starttime="20201115 22:01:47.679" endtime="20201115 22:01:47.692"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:47.697" level="INFO">NAME: 00-overhead-16-remove</msg>
<status status="PASS" starttime="20201115 22:01:47.696" endtime="20201115 22:01:47.697"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:47.700" level="INFO">VALUE: [8.569999999999411e-06, 8.582999999999508e-06, 8.58400000000245e-06, 8.555000000000368e-06, 8.555000000000368e-06, 8.596999999999078e-06, 8.568999999999938e-06, 8.569999999999411e-06, 8.569999999999411e-06, 8.582999999999508e-06, 8.582999999999508e-06, 8.568999999999938e-06, 8.583999999998981e-06, 8.639000000001257e-06, 8.582999999999508e-06, 8.625000000001687e-06, 8.611000000002117e-06, 8.582999999999508e-06, 8.569999999999411e-06, 8.624999999998217e-06, 8.569999999999411e-06, 8.569999999999411e-06, 8.555999999999842e-06, 8.568999999999938e-06, 8.568999999999938e-06, 8.625000000001687e-06, 8.568999999999938e-06, 8.583999999998981e-06, 8.61200000000159e-06, 8.568999999999938e-06, 8.58400000000245e-06, 8.542000000000272e-06, 8.596999999999078e-06, 8.568999999999938e-06, 8.568999999999938e-06, 8.569999999999411e-06, 8.568999999999938e-06, 8.582999999999508e-06, 8.611999999998121e-06, 8.568999999999938e-06, 8.653000000000827e-06, 8.555999999999842e-06, 8.582999999999508e-06, 8.555999999999842e-06, 8.583000000002977e-06, 8.486000000001992e-06, 8.568999999999938e-06, 8.568999999999938e-06, 8.583999999998981e-06, 8.541000000000798e-06]</msg>
<status status="PASS" starttime="20201115 22:01:47.698" endtime="20201115 22:01:47.700"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.693" endtime="20201115 22:01:47.700"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:47.703" endtime="20201115 22:01:47.704"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:47.707" endtime="20201115 22:01:47.726"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.705" endtime="20201115 22:01:47.727"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.701" endtime="20201115 22:01:47.727"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.331" endtime="20201115 22:01:47.727"></status>
</kw>
<msg timestamp="20201115 22:01:47.728" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:47.737" endtime="20201115 22:01:47.758"></status>
</kw>
<msg timestamp="20201115 22:01:47.758" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:47.735" endtime="20201115 22:01:47.758"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:47.761" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:47.759" endtime="20201115 22:01:47.761"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:47.762" endtime="20201115 22:01:47.764"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.733" endtime="20201115 22:01:47.765"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.730" endtime="20201115 22:01:47.765"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:47.772" endtime="20201115 22:01:48.058"></status>
</kw>
<msg timestamp="20201115 22:01:48.062" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021658278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021666861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:47.771" endtime="20201115 22:01:48.062"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:48.070" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021658278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021666861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:48.063" endtime="20201115 22:01:48.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:48.071" endtime="20201115 22:01:48.073"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.768" endtime="20201115 22:01:48.073"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.766" endtime="20201115 22:01:48.074"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:48.078" level="INFO">${RESULT} = [{'time': 0.021666861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.582999999999508e-06, 'source_diff': 8.582999999999508e-06}, {'time': 0.021841958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:48.075" endtime="20201115 22:01:48.079"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:48.093" level="INFO">${OVERHEAD} = {'time': [0.021666861, 0.021841958, 0.022023042, 0.022199292, 0.022375806, 0.022555472, 0.022736444, 0.022915333, 0.023090472, 0.023267944, 0.023443806, 0.023621028, 0.023797417, 0.023977208, 0.024156...</msg>
<status status="PASS" starttime="20201115 22:01:48.080" endtime="20201115 22:01:48.094"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:48.098" level="INFO">NAME: 00-overhead-16-remove</msg>
<status status="PASS" starttime="20201115 22:01:48.097" endtime="20201115 22:01:48.099"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:48.101" level="INFO">VALUE: [8.582999999999508e-06, 8.611000000002117e-06, 8.583999999998981e-06, 8.569999999999411e-06, 8.570000000002881e-06, 8.625000000001687e-06, 8.568999999999938e-06, 8.568999999999938e-06, 8.568999999999938e-06, 8.568999999999938e-06, 8.555999999999842e-06, 8.569999999999411e-06, 8.58400000000245e-06, 8.555000000000368e-06, 8.569999999999411e-06, 8.639000000001257e-06, 8.514000000001132e-06, 8.555000000000368e-06, 8.541000000000798e-06, 8.596999999999078e-06, 8.568999999999938e-06, 8.568999999999938e-06, 8.611999999998121e-06, 8.568999999999938e-06, 8.583999999998981e-06, 8.568999999999938e-06, 8.611000000002117e-06, 8.568999999999938e-06, 8.569999999999411e-06, 8.582999999999508e-06, 8.570000000002881e-06, 8.569999999999411e-06, 8.528000000000702e-06, 8.582999999999508e-06, 8.582999999999508e-06, 8.568999999999938e-06, 8.568999999999938e-06, 8.555000000000368e-06, 8.568999999999938e-06, 8.568999999999938e-06, 8.625000000001687e-06, 8.555999999999842e-06, 8.569999999999411e-06, 8.541000000000798e-06, 8.487000000001466e-06, 8.569999999999411e-06, 8.569999999999411e-06, 8.568999999999938e-06, 8.569999999999411e-06, 8.569999999999411e-06]</msg>
<status status="PASS" starttime="20201115 22:01:48.099" endtime="20201115 22:01:48.101"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.094" endtime="20201115 22:01:48.102"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:48.104" endtime="20201115 22:01:48.105"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:48.108" endtime="20201115 22:01:48.127"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.106" endtime="20201115 22:01:48.128"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.102" endtime="20201115 22:01:48.128"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.728" endtime="20201115 22:01:48.128"></status>
</kw>
<msg timestamp="20201115 22:01:48.129" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:48.138" endtime="20201115 22:01:48.155"></status>
</kw>
<msg timestamp="20201115 22:01:48.156" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:48.136" endtime="20201115 22:01:48.156"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:48.158" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:48.157" endtime="20201115 22:01:48.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:48.160" endtime="20201115 22:01:48.162"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.134" endtime="20201115 22:01:48.163"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.131" endtime="20201115 22:01:48.163"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:48.170" endtime="20201115 22:01:48.456"></status>
</kw>
<msg timestamp="20201115 22:01:48.460" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021290903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0212995, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:01:48.168" endtime="20201115 22:01:48.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:48.468" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021290903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0212995, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:01:48.461" endtime="20201115 22:01:48.469"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:48.470" endtime="20201115 22:01:48.472"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.166" endtime="20201115 22:01:48.472"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.164" endtime="20201115 22:01:48.473"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:48.477" level="INFO">${RESULT} = [{'time': 0.0212995, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.596999999999078e-06, 'source_diff': 8.596999999999078e-06}, {'time': 0.021480986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:01:48.474" endtime="20201115 22:01:48.478"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:48.491" level="INFO">${OVERHEAD} = {'time': [0.0212995, 0.021480986, 0.021660208, 0.021841458, 0.022017722, 0.022197333, 0.022373208, 0.022551125, 0.022733194, 0.022915417, 0.023093417, 0.023274931, 0.023452625, 0.023630083, 0.02381136...</msg>
<status status="PASS" starttime="20201115 22:01:48.478" endtime="20201115 22:01:48.491"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:48.496" level="INFO">NAME: 00-overhead-16-remove</msg>
<status status="PASS" starttime="20201115 22:01:48.495" endtime="20201115 22:01:48.496"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:48.499" level="INFO">VALUE: [8.596999999999078e-06, 8.542000000000272e-06, 8.596999999999078e-06, 8.500000000001562e-06, 8.555000000000368e-06, 8.582999999999508e-06, 8.582999999999508e-06, 8.569000000003407e-06, 8.583000000002977e-06, 8.583999999998981e-06, 8.528000000000702e-06, 8.583999999998981e-06, 8.542000000000272e-06, 8.568999999999938e-06, 8.568999999999938e-06, 8.542000000000272e-06, 8.665999999997454e-06, 8.582999999999508e-06, 8.568999999999938e-06, 8.624999999998217e-06, 8.555000000000368e-06, 8.569999999999411e-06, 8.569999999999411e-06, 8.542000000000272e-06, 8.555000000000368e-06, 8.568999999999938e-06, 8.569999999999411e-06, 8.610999999998648e-06, 8.583999999998981e-06, 8.528000000000702e-06, 8.500000000001562e-06, 8.568999999999938e-06, 8.570000000002881e-06, 8.568999999999938e-06, 8.568999999999938e-06, 8.569999999999411e-06, 8.582999999999508e-06, 8.582999999999508e-06, 8.583000000002977e-06, 8.569999999999411e-06, 8.528000000000702e-06, 8.569999999999411e-06, 8.569999999999411e-06, 8.583999999998981e-06, 8.583000000002977e-06, 8.568999999999938e-06, 8.596999999999078e-06, 8.583000000002977e-06, 8.568999999999938e-06, 8.555999999999842e-06]</msg>
<status status="PASS" starttime="20201115 22:01:48.497" endtime="20201115 22:01:48.499"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.492" endtime="20201115 22:01:48.500"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:48.502" endtime="20201115 22:01:48.503"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:48.505" endtime="20201115 22:01:48.525"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.504" endtime="20201115 22:01:48.526"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.500" endtime="20201115 22:01:48.526"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.129" endtime="20201115 22:01:48.526"></status>
</kw>
<msg timestamp="20201115 22:01:48.527" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:48.536" endtime="20201115 22:01:48.557"></status>
</kw>
<msg timestamp="20201115 22:01:48.557" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:48.534" endtime="20201115 22:01:48.557"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:48.560" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:48.558" endtime="20201115 22:01:48.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:48.561" endtime="20201115 22:01:48.563"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.532" endtime="20201115 22:01:48.564"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.529" endtime="20201115 22:01:48.564"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:48.571" endtime="20201115 22:01:48.857"></status>
</kw>
<msg timestamp="20201115 22:01:48.860" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02102625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021034806, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:01:48.570" endtime="20201115 22:01:48.861"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:48.869" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02102625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021034806, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:01:48.862" endtime="20201115 22:01:48.870"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:48.870" endtime="20201115 22:01:48.872"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.567" endtime="20201115 22:01:48.873"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.565" endtime="20201115 22:01:48.873"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:48.878" level="INFO">${RESULT} = [{'time': 0.021034806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.555999999999842e-06, 'source_diff': 8.555999999999842e-06}, {'time': 0.021217028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:48.874" endtime="20201115 22:01:48.878"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:48.891" level="INFO">${OVERHEAD} = {'time': [0.021034806, 0.021217028, 0.021396056, 0.021572736, 0.021748764, 0.021927486, 0.022106472, 0.022285889, 0.022466792, 0.022645486, 0.022820639, 0.022998167, 0.023174986, 0.023356486, 0.023537...</msg>
<status status="PASS" starttime="20201115 22:01:48.879" endtime="20201115 22:01:48.892"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:48.896" level="INFO">NAME: 00-overhead-16-remove</msg>
<status status="PASS" starttime="20201115 22:01:48.895" endtime="20201115 22:01:48.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:48.899" level="INFO">VALUE: [8.555999999999842e-06, 8.555999999999842e-06, 8.61200000000159e-06, 8.568999999999938e-06, 8.555999999999842e-06, 8.555000000000368e-06, 8.582999999999508e-06, 8.555999999999842e-06, 8.610999999998648e-06, 8.568999999999938e-06, 8.582999999999508e-06, 8.583999999998981e-06, 8.583000000002977e-06, 8.555000000000368e-06, 8.569999999999411e-06, 8.582999999999508e-06, 8.555000000000368e-06, 8.568999999999938e-06, 8.611000000002117e-06, 8.582999999999508e-06, 8.569999999999411e-06, 8.568999999999938e-06, 8.569999999999411e-06, 8.596999999999078e-06, 8.555000000000368e-06, 8.569999999999411e-06, 8.555000000000368e-06, 8.542000000000272e-06, 8.639000000001257e-06, 8.555000000000368e-06, 8.568999999999938e-06, 8.555000000000368e-06, 8.569999999999411e-06, 8.583999999998981e-06, 8.568999999999938e-06, 8.596999999999078e-06, 8.555000000000368e-06, 8.568999999999938e-06, 8.58400000000245e-06, 8.582999999999508e-06, 8.555000000000368e-06, 8.555000000000368e-06, 8.555000000000368e-06, 8.583999999998981e-06, 8.542000000000272e-06, 8.568999999999938e-06, 8.555999999999842e-06, 8.59800000000202e-06, 8.569999999999411e-06, 8.596999999999078e-06]</msg>
<status status="PASS" starttime="20201115 22:01:48.897" endtime="20201115 22:01:48.899"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.892" endtime="20201115 22:01:48.900"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:48.902" endtime="20201115 22:01:48.903"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:48.906" endtime="20201115 22:01:48.925"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.904" endtime="20201115 22:01:48.926"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.900" endtime="20201115 22:01:48.926"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.527" endtime="20201115 22:01:48.927"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.930" endtime="20201115 22:01:48.927"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.929" endtime="20201115 22:01:48.927"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:48.929" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:48.939" endtime="20201115 22:01:48.958"></status>
</kw>
<msg timestamp="20201115 22:01:48.959" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:48.937" endtime="20201115 22:01:48.959"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:48.961" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:48.960" endtime="20201115 22:01:48.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:48.962" endtime="20201115 22:01:48.964"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.934" endtime="20201115 22:01:48.965"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.932" endtime="20201115 22:01:48.965"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:48.972" endtime="20201115 22:01:49.259"></status>
</kw>
<msg timestamp="20201115 22:01:49.262" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023258722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023267556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:48.971" endtime="20201115 22:01:49.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:49.270" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023258722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023267556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:49.263" endtime="20201115 22:01:49.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:49.272" endtime="20201115 22:01:49.273"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.968" endtime="20201115 22:01:49.274"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.966" endtime="20201115 22:01:49.274"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:49.279" level="INFO">${RESULT} = [{'time': 0.023267556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.833999999999231e-06, 'source_diff': 8.833999999999231e-06}, {'time': 0.0234585, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:01:49.275" endtime="20201115 22:01:49.279"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:49.292" level="INFO">${OVERHEAD} = {'time': [0.023267556, 0.0234585, 0.023646056, 0.023833417, 0.024021694, 0.024211847, 0.024403986, 0.024596069, 0.024784403, 0.024973194, 0.025163306, 0.025353764, 0.025543042, 0.02572925, 0.025919306...</msg>
<status status="PASS" starttime="20201115 22:01:49.280" endtime="20201115 22:01:49.293"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:49.297" level="INFO">NAME: 00-overhead-17-remove</msg>
<status status="PASS" starttime="20201115 22:01:49.296" endtime="20201115 22:01:49.298"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:49.300" level="INFO">VALUE: [8.833999999999231e-06, 8.819000000000188e-06, 8.819999999999661e-06, 8.819999999999661e-06, 8.819000000000188e-06, 8.819000000000188e-06, 8.819000000000188e-06, 8.833000000003227e-06, 8.833999999999231e-06, 8.888000000002033e-06, 8.833999999999231e-06, 8.806000000000092e-06, 8.819999999999661e-06, 8.832999999999758e-06, 8.888999999998037e-06, 8.819000000000188e-06, 8.764000000001382e-06, 8.847000000002797e-06, 8.791000000001048e-06, 8.805000000000618e-06, 8.806000000000092e-06, 8.806000000000092e-06, 8.806000000000092e-06, 8.819999999999661e-06, 8.750000000001812e-06, 8.819000000000188e-06, 8.832999999999758e-06, 8.832999999999758e-06, 8.819999999999661e-06, 8.819000000000188e-06, 8.819000000000188e-06, 8.819999999999661e-06, 8.832999999999758e-06, 8.778000000000952e-06, 8.819000000000188e-06, 8.736000000002242e-06, 8.861000000002367e-06, 8.820000000003131e-06, 8.833999999999231e-06, 8.819999999999661e-06, 8.805000000000618e-06, 8.819000000000188e-06, 8.819000000000188e-06, 8.806000000000092e-06, 8.847999999998801e-06, 8.819000000000188e-06, 8.847000000006267e-06, 8.764000000001382e-06, 8.832999999999758e-06, 8.819000000000188e-06]</msg>
<status status="PASS" starttime="20201115 22:01:49.298" endtime="20201115 22:01:49.300"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.293" endtime="20201115 22:01:49.301"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:49.303" endtime="20201115 22:01:49.304"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:49.307" endtime="20201115 22:01:49.326"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.305" endtime="20201115 22:01:49.327"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.301" endtime="20201115 22:01:49.327"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.930" endtime="20201115 22:01:49.328"></status>
</kw>
<msg timestamp="20201115 22:01:49.328" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:49.337" endtime="20201115 22:01:49.356"></status>
</kw>
<msg timestamp="20201115 22:01:49.357" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:49.336" endtime="20201115 22:01:49.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:49.360" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:49.358" endtime="20201115 22:01:49.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:49.361" endtime="20201115 22:01:49.364"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.333" endtime="20201115 22:01:49.364"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.331" endtime="20201115 22:01:49.365"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:49.371" endtime="20201115 22:01:49.658"></status>
</kw>
<msg timestamp="20201115 22:01:49.662" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020923347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020932181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:49.370" endtime="20201115 22:01:49.662"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:49.670" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020923347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020932181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:49.663" endtime="20201115 22:01:49.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:49.671" endtime="20201115 22:01:49.673"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.367" endtime="20201115 22:01:49.673"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.365" endtime="20201115 22:01:49.674"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:49.678" level="INFO">${RESULT} = [{'time': 0.020932181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.8340000000027e-06, 'source_diff': 8.8340000000027e-06}, {'time': 0.021123778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8...</msg>
<status status="PASS" starttime="20201115 22:01:49.675" endtime="20201115 22:01:49.679"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:49.693" level="INFO">${OVERHEAD} = {'time': [0.020932181, 0.021123778, 0.021315194, 0.021506792, 0.021698639, 0.021888861, 0.022081181, 0.022268778, 0.022462069, 0.022655153, 0.022842681, 0.023034833, 0.023221486, 0.023408069, 0.023600...</msg>
<status status="PASS" starttime="20201115 22:01:49.679" endtime="20201115 22:01:49.693"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:49.698" level="INFO">NAME: 00-overhead-17-remove</msg>
<status status="PASS" starttime="20201115 22:01:49.697" endtime="20201115 22:01:49.698"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:49.700" level="INFO">VALUE: [8.8340000000027e-06, 8.833999999999231e-06, 8.805000000000618e-06, 8.819999999999661e-06, 8.832999999999758e-06, 8.832999999999758e-06, 8.819999999999661e-06, 8.749999999998342e-06, 8.832999999999758e-06, 8.846999999999328e-06, 8.792000000000522e-06, 8.832999999999758e-06, 8.819000000000188e-06, 8.805000000000618e-06, 8.832999999999758e-06, 8.778000000000952e-06, 8.792000000000522e-06, 8.832999999999758e-06, 8.889000000001507e-06, 8.806000000000092e-06, 8.764000000001382e-06, 8.819999999999661e-06, 8.819999999999661e-06, 8.819999999999661e-06, 8.819000000000188e-06, 8.805000000000618e-06, 8.819000000000188e-06, 8.833999999999231e-06, 8.778000000000952e-06, 8.819000000000188e-06, 8.861000000002367e-06, 8.805000000000618e-06, 8.763999999997912e-06, 8.832999999999758e-06, 8.819000000000188e-06, 8.889000000001507e-06, 8.819999999999661e-06, 8.819999999999661e-06, 8.832999999999758e-06, 8.875000000001937e-06, 8.819000000000188e-06, 8.819000000000188e-06, 8.819000000000188e-06, 8.832999999999758e-06, 8.832999999999758e-06, 8.847999999998801e-06, 8.819999999999661e-06, 8.832999999999758e-06, 8.889000000001507e-06, 8.819999999999661e-06]</msg>
<status status="PASS" starttime="20201115 22:01:49.699" endtime="20201115 22:01:49.701"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.694" endtime="20201115 22:01:49.701"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:49.704" endtime="20201115 22:01:49.705"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:49.707" endtime="20201115 22:01:49.727"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.706" endtime="20201115 22:01:49.727"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.702" endtime="20201115 22:01:49.728"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.328" endtime="20201115 22:01:49.728"></status>
</kw>
<msg timestamp="20201115 22:01:49.728" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:49.738" endtime="20201115 22:01:49.757"></status>
</kw>
<msg timestamp="20201115 22:01:49.757" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:49.736" endtime="20201115 22:01:49.758"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:49.760" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:49.759" endtime="20201115 22:01:49.760"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:49.761" endtime="20201115 22:01:49.764"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.733" endtime="20201115 22:01:49.764"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.731" endtime="20201115 22:01:49.765"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:49.772" endtime="20201115 22:01:50.058"></status>
</kw>
<msg timestamp="20201115 22:01:50.062" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021461778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021470583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:49.770" endtime="20201115 22:01:50.062"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:50.070" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021461778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021470583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:50.063" endtime="20201115 22:01:50.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:50.071" endtime="20201115 22:01:50.073"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.767" endtime="20201115 22:01:50.073"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.766" endtime="20201115 22:01:50.074"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:50.078" level="INFO">${RESULT} = [{'time': 0.021470583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.805000000000618e-06, 'source_diff': 8.805000000000618e-06}, {'time': 0.021658458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:50.075" endtime="20201115 22:01:50.079"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:50.092" level="INFO">${OVERHEAD} = {'time': [0.021470583, 0.021658458, 0.021848597, 0.022041222, 0.022233528, 0.022419653, 0.022610125, 0.022797264, 0.022987042, 0.023173444, 0.023364319, 0.023552181, 0.023742417, 0.023928528, 0.024116...</msg>
<status status="PASS" starttime="20201115 22:01:50.079" endtime="20201115 22:01:50.092"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:50.097" level="INFO">NAME: 00-overhead-17-remove</msg>
<status status="PASS" starttime="20201115 22:01:50.096" endtime="20201115 22:01:50.097"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:50.099" level="INFO">VALUE: [8.805000000000618e-06, 8.819000000000188e-06, 8.819000000000188e-06, 8.819000000000188e-06, 8.806000000000092e-06, 8.778000000000952e-06, 8.818999999996718e-06, 8.819999999999661e-06, 8.847999999998801e-06, 8.819000000000188e-06, 8.805000000000618e-06, 8.791999999997052e-06, 8.874999999998467e-06, 8.806000000000092e-06, 8.819999999999661e-06, 8.819000000000188e-06, 8.778000000000952e-06, 8.792000000000522e-06, 8.860999999998898e-06, 8.832999999999758e-06, 8.874999999998467e-06, 8.875000000001937e-06, 8.847000000002797e-06, 8.833000000003227e-06, 8.778000000000952e-06, 8.820000000003131e-06, 8.806000000000092e-06, 8.819000000000188e-06, 8.819000000000188e-06, 8.832999999999758e-06, 8.804999999997148e-06, 8.833000000003227e-06, 8.860999999998898e-06, 8.832999999999758e-06, 8.819000000000188e-06, 8.833999999999231e-06, 8.819000000000188e-06, 8.819999999999661e-06, 8.846999999999328e-06, 8.819000000000188e-06, 8.819999999999661e-06, 8.806000000000092e-06, 8.777000000001478e-06, 8.833999999999231e-06, 8.832999999999758e-06, 8.819999999999661e-06, 8.819000000000188e-06, 8.806000000000092e-06, 8.832999999999758e-06, 8.889000000001507e-06]</msg>
<status status="PASS" starttime="20201115 22:01:50.098" endtime="20201115 22:01:50.100"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.093" endtime="20201115 22:01:50.100"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:50.103" endtime="20201115 22:01:50.104"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:50.106" endtime="20201115 22:01:50.126"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.105" endtime="20201115 22:01:50.126"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.101" endtime="20201115 22:01:50.127"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.729" endtime="20201115 22:01:50.127"></status>
</kw>
<msg timestamp="20201115 22:01:50.128" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:50.137" endtime="20201115 22:01:50.158"></status>
</kw>
<msg timestamp="20201115 22:01:50.159" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:50.136" endtime="20201115 22:01:50.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:50.161" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:50.160" endtime="20201115 22:01:50.162"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:50.163" endtime="20201115 22:01:50.165"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.133" endtime="20201115 22:01:50.166"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.130" endtime="20201115 22:01:50.166"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:50.173" endtime="20201115 22:01:50.459"></status>
</kw>
<msg timestamp="20201115 22:01:50.462" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021405931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02141475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:01:50.171" endtime="20201115 22:01:50.462"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:50.470" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021405931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02141475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:01:50.463" endtime="20201115 22:01:50.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:50.471" endtime="20201115 22:01:50.473"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.169" endtime="20201115 22:01:50.474"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.167" endtime="20201115 22:01:50.474"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:50.478" level="INFO">${RESULT} = [{'time': 0.02141475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.819000000000188e-06, 'source_diff': 8.819000000000188e-06}, {'time': 0.021604264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:01:50.475" endtime="20201115 22:01:50.479"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:50.492" level="INFO">${OVERHEAD} = {'time': [0.02141475, 0.021604264, 0.021796333, 0.021982861, 0.022169764, 0.022357389, 0.022546931, 0.022739931, 0.022927708, 0.023116472, 0.023309236, 0.023501069, 0.023690347, 0.02387725, 0.02406575...</msg>
<status status="PASS" starttime="20201115 22:01:50.480" endtime="20201115 22:01:50.493"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:50.498" level="INFO">NAME: 00-overhead-17-remove</msg>
<status status="PASS" starttime="20201115 22:01:50.496" endtime="20201115 22:01:50.498"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:50.501" level="INFO">VALUE: [8.819000000000188e-06, 8.889000000001507e-06, 8.889000000001507e-06, 8.805000000000618e-06, 8.778000000000952e-06, 8.791999999997052e-06, 8.847999999998801e-06, 8.806000000000092e-06, 8.819000000000188e-06, 8.846999999999328e-06, 8.832999999999758e-06, 8.832999999999758e-06, 8.819000000000188e-06, 8.819000000000188e-06, 8.819000000000188e-06, 8.790999999997579e-06, 8.818999999996718e-06, 8.819000000000188e-06, 8.819999999999661e-06, 8.819999999999661e-06, 8.806000000000092e-06, 8.832999999999758e-06, 8.819000000000188e-06, 8.860999999998898e-06, 8.819000000000188e-06, 8.806000000000092e-06, 8.819000000000188e-06, 8.819000000000188e-06, 8.819999999999661e-06, 8.889000000001507e-06, 8.806000000000092e-06, 8.763999999997912e-06, 8.833999999999231e-06, 8.819999999999661e-06, 8.832999999999758e-06, 8.86200000000184e-06, 8.833999999999231e-06, 8.832999999999758e-06, 8.819000000000188e-06, 8.847999999998801e-06, 8.819000000000188e-06, 8.749999999998342e-06, 8.8340000000027e-06, 8.819000000000188e-06, 8.819999999999661e-06, 8.778000000000952e-06, 8.819000000000188e-06, 8.819000000000188e-06, 8.860999999998898e-06, 8.832999999999758e-06]</msg>
<status status="PASS" starttime="20201115 22:01:50.499" endtime="20201115 22:01:50.501"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.494" endtime="20201115 22:01:50.501"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:50.504" endtime="20201115 22:01:50.506"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:50.508" endtime="20201115 22:01:50.528"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.506" endtime="20201115 22:01:50.528"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.502" endtime="20201115 22:01:50.529"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.128" endtime="20201115 22:01:50.529"></status>
</kw>
<msg timestamp="20201115 22:01:50.529" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:50.539" endtime="20201115 22:01:50.556"></status>
</kw>
<msg timestamp="20201115 22:01:50.557" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:50.537" endtime="20201115 22:01:50.557"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:50.559" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:50.558" endtime="20201115 22:01:50.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:50.560" endtime="20201115 22:01:50.563"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.534" endtime="20201115 22:01:50.564"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.532" endtime="20201115 22:01:50.564"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:50.571" endtime="20201115 22:01:50.858"></status>
</kw>
<msg timestamp="20201115 22:01:50.861" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020865014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020873819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:50.569" endtime="20201115 22:01:50.861"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:50.869" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020865014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020873819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:50.862" endtime="20201115 22:01:50.870"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:50.871" endtime="20201115 22:01:50.872"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.567" endtime="20201115 22:01:50.873"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.565" endtime="20201115 22:01:50.873"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:50.878" level="INFO">${RESULT} = [{'time': 0.020873819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.804999999997148e-06, 'source_diff': 8.804999999997148e-06}, {'time': 0.021064194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:50.874" endtime="20201115 22:01:50.878"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:50.891" level="INFO">${OVERHEAD} = {'time': [0.020873819, 0.021064194, 0.021256875, 0.021444111, 0.0216315, 0.021823167, 0.022015708, 0.022202542, 0.022389194, 0.022578722, 0.022768722, 0.022955153, 0.023148167, 0.023335, 0.023527069, ...</msg>
<status status="PASS" starttime="20201115 22:01:50.879" endtime="20201115 22:01:50.892"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:50.896" level="INFO">NAME: 00-overhead-17-remove</msg>
<status status="PASS" starttime="20201115 22:01:50.895" endtime="20201115 22:01:50.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:50.899" level="INFO">VALUE: [8.804999999997148e-06, 8.819000000000188e-06, 8.875000000001937e-06, 8.818999999996718e-06, 8.832999999999758e-06, 8.819999999999661e-06, 8.818999999996718e-06, 8.833999999999231e-06, 8.763000000001908e-06, 8.819000000000188e-06, 8.819000000000188e-06, 8.763999999997912e-06, 8.819999999999661e-06, 8.806000000000092e-06, 8.819000000000188e-06, 8.792000000000522e-06, 8.819000000000188e-06, 8.819000000000188e-06, 8.832999999999758e-06, 8.819999999999661e-06, 8.819999999999661e-06, 8.806000000000092e-06, 8.819999999999661e-06, 8.806000000000092e-06, 8.763999999997912e-06, 8.819999999999661e-06, 8.833999999999231e-06, 8.791000000001048e-06, 8.832999999999758e-06, 8.888999999998037e-06, 8.819999999999661e-06, 8.833999999999231e-06, 8.832999999999758e-06, 8.805000000000618e-06, 8.805000000000618e-06, 8.819999999999661e-06, 8.833999999999231e-06, 8.819000000000188e-06, 8.874999999998467e-06, 8.819000000000188e-06, 8.833999999999231e-06, 8.819999999999661e-06, 8.805000000000618e-06, 8.832999999999758e-06, 8.832999999999758e-06, 8.819000000000188e-06, 8.820000000003131e-06, 8.819000000000188e-06, 8.833999999999231e-06, 8.819000000000188e-06]</msg>
<status status="PASS" starttime="20201115 22:01:50.897" endtime="20201115 22:01:50.900"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.892" endtime="20201115 22:01:50.900"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:50.903" endtime="20201115 22:01:50.904"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:50.906" endtime="20201115 22:01:50.926"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.904" endtime="20201115 22:01:50.926"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.901" endtime="20201115 22:01:50.927"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.530" endtime="20201115 22:01:50.927"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.928" endtime="20201115 22:01:50.927"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.927" endtime="20201115 22:01:50.928"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:50.930" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:50.939" endtime="20201115 22:01:50.957"></status>
</kw>
<msg timestamp="20201115 22:01:50.958" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:50.938" endtime="20201115 22:01:50.958"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:50.960" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:50.959" endtime="20201115 22:01:50.961"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:50.962" endtime="20201115 22:01:50.963"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.935" endtime="20201115 22:01:50.964"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.933" endtime="20201115 22:01:50.964"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:50.971" endtime="20201115 22:01:51.257"></status>
</kw>
<msg timestamp="20201115 22:01:51.260" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023404264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023413333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:50.969" endtime="20201115 22:01:51.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:51.269" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023404264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023413333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:51.261" endtime="20201115 22:01:51.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:51.270" endtime="20201115 22:01:51.272"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.967" endtime="20201115 22:01:51.272"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.965" endtime="20201115 22:01:51.273"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:51.277" level="INFO">${RESULT} = [{'time': 0.023413333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.069000000000438e-06, 'source_diff': 9.069000000000438e-06}, {'time': 0.023617736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:51.273" endtime="20201115 22:01:51.277"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:51.292" level="INFO">${OVERHEAD} = {'time': [0.023413333, 0.023617736, 0.023815222, 0.024016028, 0.024219014, 0.024422139, 0.024621917, 0.0248225, 0.025022778, 0.025225667, 0.02542975, 0.025629542, 0.025832514, 0.02603, 0.026231944, 0....</msg>
<status status="PASS" starttime="20201115 22:01:51.278" endtime="20201115 22:01:51.292"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:51.296" level="INFO">NAME: 00-overhead-18-remove</msg>
<status status="PASS" starttime="20201115 22:01:51.295" endtime="20201115 22:01:51.297"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:51.299" level="INFO">VALUE: [9.069000000000438e-06, 9.042000000000772e-06, 9.083000000000008e-06, 8.999999999998592e-06, 9.069999999999911e-06, 9.083000000000008e-06, 9.069999999999911e-06, 9.069000000000438e-06, 9.069999999999911e-06, 9.069999999999911e-06, 9.069000000000438e-06, 9.070000000003381e-06, 9.069999999999911e-06, 9.056000000000342e-06, 9.083000000000008e-06, 9.069999999999911e-06, 9.069000000000438e-06, 9.069000000000438e-06, 9.083000000000008e-06, 9.069999999999911e-06, 9.083999999999481e-06, 9.083999999999481e-06, 9.069000000000438e-06, 9.083999999999481e-06, 9.069000000000438e-06, 9.069999999999911e-06, 9.096999999999578e-06, 9.069999999999911e-06, 9.042000000000772e-06, 9.069999999999911e-06, 9.069999999999911e-06, 9.083000000000008e-06, 9.097999999999051e-06, 9.055000000000868e-06, 9.027999999997732e-06, 9.069000000000438e-06, 9.083000000000008e-06, 9.069000000000438e-06, 9.083000000000008e-06, 9.054999999997398e-06, 9.069999999999911e-06, 9.069999999999911e-06, 9.069000000000438e-06, 9.083000000000008e-06, 9.069000000000438e-06, 9.083999999999481e-06, 9.096999999999578e-06, 9.083000000000008e-06, 9.056000000000342e-06, 9.069999999999911e-06]</msg>
<status status="PASS" starttime="20201115 22:01:51.298" endtime="20201115 22:01:51.300"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.293" endtime="20201115 22:01:51.300"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:51.303" endtime="20201115 22:01:51.304"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:51.306" endtime="20201115 22:01:51.326"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.305" endtime="20201115 22:01:51.326"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.301" endtime="20201115 22:01:51.327"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.931" endtime="20201115 22:01:51.327"></status>
</kw>
<msg timestamp="20201115 22:01:51.327" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:51.337" endtime="20201115 22:01:51.358"></status>
</kw>
<msg timestamp="20201115 22:01:51.358" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:51.335" endtime="20201115 22:01:51.358"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:51.361" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:51.359" endtime="20201115 22:01:51.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:51.362" endtime="20201115 22:01:51.365"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.332" endtime="20201115 22:01:51.365"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.330" endtime="20201115 22:01:51.366"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:51.372" endtime="20201115 22:01:51.659"></status>
</kw>
<msg timestamp="20201115 22:01:51.662" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021391208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021400264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:51.371" endtime="20201115 22:01:51.662"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:51.670" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021391208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021400264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:51.663" endtime="20201115 22:01:51.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:51.672" endtime="20201115 22:01:51.673"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.368" endtime="20201115 22:01:51.674"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.366" endtime="20201115 22:01:51.674"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:51.679" level="INFO">${RESULT} = [{'time': 0.021400264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.056000000000342e-06, 'source_diff': 9.056000000000342e-06}, {'time': 0.021598694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:51.675" endtime="20201115 22:01:51.679"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:51.692" level="INFO">${OVERHEAD} = {'time': [0.021400264, 0.021598694, 0.021798306, 0.022002653, 0.022199917, 0.0224, 0.022598444, 0.022795639, 0.022998986, 0.023199097, 0.023397472, 0.02359775, 0.02380025, 0.024003431, 0.024203694, 0....</msg>
<status status="PASS" starttime="20201115 22:01:51.680" endtime="20201115 22:01:51.693"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:51.698" level="INFO">NAME: 00-overhead-18-remove</msg>
<status status="PASS" starttime="20201115 22:01:51.697" endtime="20201115 22:01:51.698"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:51.700" level="INFO">VALUE: [9.056000000000342e-06, 9.069000000000438e-06, 9.124999999998717e-06, 9.069999999999911e-06, 9.083999999999481e-06, 9.069000000000438e-06, 9.040999999997829e-06, 9.083000000000008e-06, 9.069000000000438e-06, 9.068999999996968e-06, 9.069000000000438e-06, 9.083000000000008e-06, 9.096999999999578e-06, 9.152999999997857e-06, 9.138000000002283e-06, 9.138000000002283e-06, 9.069000000000438e-06, 9.055000000000868e-06, 9.069999999999911e-06, 9.056000000000342e-06, 9.069999999999911e-06, 9.124999999998717e-06, 9.069000000000438e-06, 9.096999999999578e-06, 9.083000000000008e-06, 9.083999999999481e-06, 9.069999999999911e-06, 9.069000000000438e-06, 9.054999999997398e-06, 9.069000000000438e-06, 9.083000000000008e-06, 9.096999999999578e-06, 9.069999999999911e-06, 9.069999999999911e-06, 9.069000000000438e-06, 9.069999999999911e-06, 9.069999999999911e-06, 9.069999999999911e-06, 9.069999999999911e-06, 9.069999999999911e-06, 9.083999999999481e-06, 9.083999999999481e-06, 9.083000000000008e-06, 9.125000000002187e-06, 9.069000000000438e-06, 9.069999999999911e-06, 9.069000000000438e-06, 9.083000000000008e-06, 9.055000000000868e-06, 9.054999999997398e-06]</msg>
<status status="PASS" starttime="20201115 22:01:51.699" endtime="20201115 22:01:51.701"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.694" endtime="20201115 22:01:51.701"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:51.704" endtime="20201115 22:01:51.705"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:51.707" endtime="20201115 22:01:51.727"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.706" endtime="20201115 22:01:51.727"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.702" endtime="20201115 22:01:51.728"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.328" endtime="20201115 22:01:51.728"></status>
</kw>
<msg timestamp="20201115 22:01:51.728" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:51.738" endtime="20201115 22:01:51.757"></status>
</kw>
<msg timestamp="20201115 22:01:51.757" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:51.736" endtime="20201115 22:01:51.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:51.760" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:51.758" endtime="20201115 22:01:51.760"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:51.761" endtime="20201115 22:01:51.763"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.733" endtime="20201115 22:01:51.764"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.731" endtime="20201115 22:01:51.764"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:51.771" endtime="20201115 22:01:52.058"></status>
</kw>
<msg timestamp="20201115 22:01:52.061" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021052958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021062014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:51.770" endtime="20201115 22:01:52.061"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:52.069" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021052958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021062014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:52.062" endtime="20201115 22:01:52.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:52.070" endtime="20201115 22:01:52.072"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.767" endtime="20201115 22:01:52.072"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.765" endtime="20201115 22:01:52.073"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:52.077" level="INFO">${RESULT} = [{'time': 0.021062014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.056000000000342e-06, 'source_diff': 9.056000000000342e-06}, {'time': 0.0212645, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:01:52.074" endtime="20201115 22:01:52.081"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:52.095" level="INFO">${OVERHEAD} = {'time': [0.021062014, 0.0212645, 0.021463347, 0.021661556, 0.021865153, 0.022064083, 0.022261014, 0.022458028, 0.02265925, 0.022857208, 0.023059875, 0.023259278, 0.023462, 0.023661792, 0.023859042, 0...</msg>
<status status="PASS" starttime="20201115 22:01:52.083" endtime="20201115 22:01:52.096"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:52.100" level="INFO">NAME: 00-overhead-18-remove</msg>
<status status="PASS" starttime="20201115 22:01:52.099" endtime="20201115 22:01:52.101"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:52.103" level="INFO">VALUE: [9.056000000000342e-06, 9.056000000000342e-06, 9.069000000000438e-06, 9.083999999999481e-06, 9.069999999999911e-06, 9.152000000001853e-06, 9.069999999999911e-06, 9.08400000000295e-06, 9.069000000000438e-06, 9.055000000000868e-06, 9.042000000000772e-06, 9.069999999999911e-06, 9.083000000000008e-06, 9.083999999999481e-06, 9.083999999999481e-06, 9.083999999999481e-06, 9.069999999999911e-06, 9.083000000000008e-06, 9.083999999999481e-06, 9.069999999999911e-06, 9.069000000000438e-06, 9.069000000000438e-06, 9.138999999998287e-06, 9.068999999996968e-06, 9.014000000001632e-06, 9.083000000000008e-06, 9.083999999999481e-06, 9.069000000000438e-06, 9.083999999999481e-06, 9.056000000000342e-06, 9.055000000000868e-06, 9.000000000002062e-06, 9.028000000001202e-06, 9.096999999999578e-06, 9.069000000000438e-06, 9.069000000000438e-06, 9.083000000000008e-06, 9.083000000000008e-06, 9.083000000000008e-06, 9.083000000000008e-06, 9.124999999998717e-06, 9.083000000000008e-06, 9.000000000002062e-06, 9.083000000000008e-06, 9.054999999997398e-06, 9.056000000000342e-06, 9.068999999996968e-06, 9.083000000000008e-06, 9.069000000000438e-06, 9.083000000000008e-06]</msg>
<status status="PASS" starttime="20201115 22:01:52.101" endtime="20201115 22:01:52.103"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.096" endtime="20201115 22:01:52.104"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:52.106" endtime="20201115 22:01:52.108"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:52.110" endtime="20201115 22:01:52.129"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.108" endtime="20201115 22:01:52.130"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.104" endtime="20201115 22:01:52.130"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.729" endtime="20201115 22:01:52.131"></status>
</kw>
<msg timestamp="20201115 22:01:52.131" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:52.140" endtime="20201115 22:01:52.161"></status>
</kw>
<msg timestamp="20201115 22:01:52.162" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:52.139" endtime="20201115 22:01:52.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:52.164" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:52.163" endtime="20201115 22:01:52.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:52.165" endtime="20201115 22:01:52.168"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.136" endtime="20201115 22:01:52.169"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.134" endtime="20201115 22:01:52.169"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:52.176" endtime="20201115 22:01:52.463"></status>
</kw>
<msg timestamp="20201115 22:01:52.466" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021448083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021457097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:52.174" endtime="20201115 22:01:52.466"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:52.474" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021448083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021457097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:52.467" endtime="20201115 22:01:52.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:52.476" endtime="20201115 22:01:52.478"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.171" endtime="20201115 22:01:52.478"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.170" endtime="20201115 22:01:52.479"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:52.483" level="INFO">${RESULT} = [{'time': 0.021457097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.014000000001632e-06, 'source_diff': 9.014000000001632e-06}, {'time': 0.021656292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:52.480" endtime="20201115 22:01:52.483"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:52.497" level="INFO">${OVERHEAD} = {'time': [0.021457097, 0.021656292, 0.021855875, 0.022057903, 0.022257042, 0.022457083, 0.022661472, 0.022861764, 0.023064472, 0.023266958, 0.023466986, 0.023664, 0.023866417, 0.024065806, 0.024263056...</msg>
<status status="PASS" starttime="20201115 22:01:52.484" endtime="20201115 22:01:52.497"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:52.502" level="INFO">NAME: 00-overhead-18-remove</msg>
<status status="PASS" starttime="20201115 22:01:52.501" endtime="20201115 22:01:52.502"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:52.504" level="INFO">VALUE: [9.014000000001632e-06, 9.069999999999911e-06, 9.069000000000438e-06, 9.083999999999481e-06, 9.069999999999911e-06, 9.013999999998162e-06, 9.068999999996968e-06, 9.096999999999578e-06, 9.013999999998162e-06, 9.041000000001298e-06, 9.027999999997732e-06, 9.069000000000438e-06, 9.069999999999911e-06, 9.069999999999911e-06, 9.042000000000772e-06, 9.055999999996872e-06, 9.056000000000342e-06, 9.069000000000438e-06, 9.069999999999911e-06, 9.069000000000438e-06, 9.069999999999911e-06, 9.069000000000438e-06, 9.000000000002062e-06, 9.069000000000438e-06, 9.125000000002187e-06, 9.042000000000772e-06, 9.083000000000008e-06, 9.096999999999578e-06, 9.083000000000008e-06, 9.110999999999148e-06, 9.069999999999911e-06, 9.069999999999911e-06, 9.083000000000008e-06, 9.069000000000438e-06, 9.097999999999051e-06, 9.069999999999911e-06, 9.069999999999911e-06, 9.069999999999911e-06, 9.028000000001202e-06, 9.083000000000008e-06, 9.069000000000438e-06, 9.083999999999481e-06, 9.042000000000772e-06, 9.027000000001728e-06, 9.083999999999481e-06, 9.028000000001202e-06, 9.069000000000438e-06, 9.068999999996968e-06, 9.069999999999911e-06, 9.056000000000342e-06]</msg>
<status status="PASS" starttime="20201115 22:01:52.503" endtime="20201115 22:01:52.505"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.498" endtime="20201115 22:01:52.505"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:52.508" endtime="20201115 22:01:52.509"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:52.511" endtime="20201115 22:01:52.531"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.510" endtime="20201115 22:01:52.532"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.506" endtime="20201115 22:01:52.532"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.131" endtime="20201115 22:01:52.532"></status>
</kw>
<msg timestamp="20201115 22:01:52.533" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:52.542" endtime="20201115 22:01:52.563"></status>
</kw>
<msg timestamp="20201115 22:01:52.564" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:52.540" endtime="20201115 22:01:52.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:52.566" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:52.565" endtime="20201115 22:01:52.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:52.568" endtime="20201115 22:01:52.570"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.538" endtime="20201115 22:01:52.571"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.535" endtime="20201115 22:01:52.571"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:52.578" endtime="20201115 22:01:52.864"></status>
</kw>
<msg timestamp="20201115 22:01:52.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021278819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021287875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:52.576" endtime="20201115 22:01:52.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:52.877" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021278819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021287875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:52.869" endtime="20201115 22:01:52.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:52.878" endtime="20201115 22:01:52.880"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.574" endtime="20201115 22:01:52.880"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.572" endtime="20201115 22:01:52.881"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:52.885" level="INFO">${RESULT} = [{'time': 0.021287875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.056000000000342e-06, 'source_diff': 9.056000000000342e-06}, {'time': 0.021485125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:52.881" endtime="20201115 22:01:52.885"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:52.900" level="INFO">${OVERHEAD} = {'time': [0.021287875, 0.021485125, 0.021682625, 0.02188225, 0.022085917, 0.022289778, 0.022487181, 0.022688014, 0.022888125, 0.023086792, 0.023286889, 0.023484083, 0.023682222, 0.023884944, 0.0240866...</msg>
<status status="PASS" starttime="20201115 22:01:52.886" endtime="20201115 22:01:52.900"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:52.904" level="INFO">NAME: 00-overhead-18-remove</msg>
<status status="PASS" starttime="20201115 22:01:52.903" endtime="20201115 22:01:52.905"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:52.907" level="INFO">VALUE: [9.056000000000342e-06, 9.042000000000772e-06, 9.083000000000008e-06, 9.069000000000438e-06, 9.069999999999911e-06, 9.069999999999911e-06, 9.055999999996872e-06, 9.083000000000008e-06, 9.027999999997732e-06, 9.069999999999911e-06, 9.069999999999911e-06, 9.069000000000438e-06, 9.096999999999578e-06, 9.097000000003047e-06, 9.069000000000438e-06, 9.013999999998162e-06, 9.056000000000342e-06, 9.056000000000342e-06, 9.083000000000008e-06, 9.056000000000342e-06, 9.083000000000008e-06, 9.111000000002617e-06, 9.042000000000772e-06, 9.028000000001202e-06, 9.069000000000438e-06, 9.083999999999481e-06, 9.069000000000438e-06, 9.069000000000438e-06, 9.083000000000008e-06, 9.056000000000342e-06, 9.026999999998259e-06, 9.069999999999911e-06, 9.000000000002062e-06, 9.028000000001202e-06, 9.083000000000008e-06, 9.069999999999911e-06, 9.013000000002158e-06, 9.083999999999481e-06, 9.153000000001327e-06, 9.069999999999911e-06, 9.069000000000438e-06, 9.083999999999481e-06, 9.069999999999911e-06, 9.055000000000868e-06, 9.069999999999911e-06, 9.138999999998287e-06, 9.055000000000868e-06, 9.069000000000438e-06, 9.056000000000342e-06, 9.069999999999911e-06]</msg>
<status status="PASS" starttime="20201115 22:01:52.905" endtime="20201115 22:01:52.907"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.901" endtime="20201115 22:01:52.908"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:52.910" endtime="20201115 22:01:52.912"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:52.914" endtime="20201115 22:01:52.933"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.912" endtime="20201115 22:01:52.934"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.908" endtime="20201115 22:01:52.934"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.533" endtime="20201115 22:01:52.935"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.929" endtime="20201115 22:01:52.935"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.928" endtime="20201115 22:01:52.935"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:52.938" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:52.947" endtime="20201115 22:01:52.969"></status>
</kw>
<msg timestamp="20201115 22:01:52.970" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:52.945" endtime="20201115 22:01:52.970"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:52.973" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:52.971" endtime="20201115 22:01:52.973"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:52.974" endtime="20201115 22:01:52.975"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.942" endtime="20201115 22:01:52.976"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.940" endtime="20201115 22:01:52.977"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:52.984" endtime="20201115 22:01:53.270"></status>
</kw>
<msg timestamp="20201115 22:01:53.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024216361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024225681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:52.982" endtime="20201115 22:01:53.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:53.282" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024216361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024225681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:53.274" endtime="20201115 22:01:53.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:53.283" endtime="20201115 22:01:53.285"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.979" endtime="20201115 22:01:53.285"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.977" endtime="20201115 22:01:53.286"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:53.290" level="INFO">${RESULT} = [{'time': 0.024225681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.320000000000161e-06, 'source_diff': 9.320000000000161e-06}, {'time': 0.024437597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:53.286" endtime="20201115 22:01:53.290"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:53.304" level="INFO">${OVERHEAD} = {'time': [0.024225681, 0.024437597, 0.024649653, 0.024859097, 0.025073111, 0.025286361, 0.025498, 0.025707611, 0.025921806, 0.026134833, 0.026349292, 0.026560417, 0.026775806, 0.026990819, 0.027206083...</msg>
<status status="PASS" starttime="20201115 22:01:53.291" endtime="20201115 22:01:53.304"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:53.309" level="INFO">NAME: 00-overhead-19-remove</msg>
<status status="PASS" starttime="20201115 22:01:53.307" endtime="20201115 22:01:53.309"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:53.311" level="INFO">VALUE: [9.320000000000161e-06, 9.332999999996788e-06, 9.333999999999731e-06, 9.333000000000258e-06, 9.360999999999398e-06, 9.333000000000258e-06, 9.319000000000688e-06, 9.374999999998967e-06, 9.291999999997552e-06, 9.319000000000688e-06, 9.333999999999731e-06, 9.333999999999731e-06, 9.320000000000161e-06, 9.333000000000258e-06, 9.360999999999398e-06, 9.319000000000688e-06, 9.305000000001118e-06, 9.333999999999731e-06, 9.333000000000258e-06, 9.304999999997648e-06, 9.319000000000688e-06, 9.305000000001118e-06, 9.319999999996692e-06, 9.320000000000161e-06, 9.333000000000258e-06, 9.305000000001118e-06, 9.374999999998967e-06, 9.333000000000258e-06, 9.346999999999828e-06, 9.320000000000161e-06, 9.333999999999731e-06, 9.319000000000688e-06, 9.264000000001882e-06, 9.319000000000688e-06, 9.320000000000161e-06, 9.346999999999828e-06, 9.320000000000161e-06, 9.333000000000258e-06, 9.319000000000688e-06, 9.333999999999731e-06, 9.306000000000592e-06, 9.304999999994179e-06, 9.333999999999731e-06, 9.333999999999731e-06, 9.333000000000258e-06, 9.319000000000688e-06, 9.305000000001118e-06, 9.346999999999828e-06, 9.320000000000161e-06, 9.333000000000258e-06]</msg>
<status status="PASS" starttime="20201115 22:01:53.310" endtime="20201115 22:01:53.312"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.305" endtime="20201115 22:01:53.312"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:53.314" endtime="20201115 22:01:53.316"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:53.318" endtime="20201115 22:01:53.338"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.316" endtime="20201115 22:01:53.338"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.313" endtime="20201115 22:01:53.339"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.938" endtime="20201115 22:01:53.339"></status>
</kw>
<msg timestamp="20201115 22:01:53.339" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:53.349" endtime="20201115 22:01:53.370"></status>
</kw>
<msg timestamp="20201115 22:01:53.371" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:53.347" endtime="20201115 22:01:53.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:53.374" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:53.372" endtime="20201115 22:01:53.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:53.375" endtime="20201115 22:01:53.377"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.344" endtime="20201115 22:01:53.378"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.342" endtime="20201115 22:01:53.378"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:53.385" endtime="20201115 22:01:53.671"></status>
</kw>
<msg timestamp="20201115 22:01:53.674" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020945833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020955167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:53.383" endtime="20201115 22:01:53.674"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:53.683" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020945833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020955167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:53.675" endtime="20201115 22:01:53.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:53.684" endtime="20201115 22:01:53.686"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.381" endtime="20201115 22:01:53.686"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.379" endtime="20201115 22:01:53.687"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:53.691" level="INFO">${RESULT} = [{'time': 0.020955167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.333999999999731e-06, 'source_diff': 9.333999999999731e-06}, {'time': 0.021170806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:53.687" endtime="20201115 22:01:53.691"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:53.705" level="INFO">${OVERHEAD} = {'time': [0.020955167, 0.021170806, 0.021385972, 0.021596847, 0.021810903, 0.022022014, 0.022231778, 0.022441792, 0.022653458, 0.022868931, 0.023081722, 0.02329475, 0.023507597, 0.023716681, 0.0239311...</msg>
<status status="PASS" starttime="20201115 22:01:53.692" endtime="20201115 22:01:53.705"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:53.709" level="INFO">NAME: 00-overhead-19-remove</msg>
<status status="PASS" starttime="20201115 22:01:53.708" endtime="20201115 22:01:53.710"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:53.712" level="INFO">VALUE: [9.333999999999731e-06, 9.320000000000161e-06, 9.319000000000688e-06, 9.318999999997218e-06, 9.320000000000161e-06, 9.306000000000592e-06, 9.306000000000592e-06, 9.277999999997982e-06, 9.319000000000688e-06, 9.320000000000161e-06, 9.333000000000258e-06, 9.319000000000688e-06, 9.305000000001118e-06, 9.361999999998871e-06, 9.320000000000161e-06, 9.333000000000258e-06, 9.332999999996788e-06, 9.319000000000688e-06, 9.320000000000161e-06, 9.333000000000258e-06, 9.333000000000258e-06, 9.292000000001022e-06, 9.318999999997218e-06, 9.333000000000258e-06, 9.320000000000161e-06, 9.333000000000258e-06, 9.319000000000688e-06, 9.277999999997982e-06, 9.388999999998537e-06, 9.319000000000688e-06, 9.333999999999731e-06, 9.320000000000161e-06, 9.346999999999828e-06, 9.333000000000258e-06, 9.306000000000592e-06, 9.319000000000688e-06, 9.306000000000592e-06, 9.333999999999731e-06, 9.333000000000258e-06, 9.319000000000688e-06, 9.320000000000161e-06, 9.320000000000161e-06, 9.333000000000258e-06, 9.319000000000688e-06, 9.319000000000688e-06, 9.320000000000161e-06, 9.319000000000688e-06, 9.304999999997648e-06, 9.318999999997218e-06, 9.320000000000161e-06]</msg>
<status status="PASS" starttime="20201115 22:01:53.711" endtime="20201115 22:01:53.712"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.706" endtime="20201115 22:01:53.713"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:53.715" endtime="20201115 22:01:53.717"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:53.719" endtime="20201115 22:01:53.738"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.717" endtime="20201115 22:01:53.739"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.714" endtime="20201115 22:01:53.740"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.340" endtime="20201115 22:01:53.740"></status>
</kw>
<msg timestamp="20201115 22:01:53.740" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:53.750" endtime="20201115 22:01:53.771"></status>
</kw>
<msg timestamp="20201115 22:01:53.772" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:53.748" endtime="20201115 22:01:53.772"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:53.774" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:53.773" endtime="20201115 22:01:53.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:53.775" endtime="20201115 22:01:53.778"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.745" endtime="20201115 22:01:53.779"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.743" endtime="20201115 22:01:53.779"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:53.786" endtime="20201115 22:01:54.073"></status>
</kw>
<msg timestamp="20201115 22:01:54.076" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0222935, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022302819, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:01:53.784" endtime="20201115 22:01:54.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:54.085" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0222935, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022302819, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:01:54.078" endtime="20201115 22:01:54.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:54.086" endtime="20201115 22:01:54.088"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.781" endtime="20201115 22:01:54.089"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.780" endtime="20201115 22:01:54.089"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:54.093" level="INFO">${RESULT} = [{'time': 0.022302819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.319000000000688e-06, 'source_diff': 9.319000000000688e-06}, {'time': 0.02251775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:01:54.090" endtime="20201115 22:01:54.094"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:54.107" level="INFO">${OVERHEAD} = {'time': [0.022302819, 0.02251775, 0.022731486, 0.022941014, 0.023154347, 0.023367639, 0.023581931, 0.023797292, 0.024009861, 0.024219375, 0.024434347, 0.024643514, 0.024853042, 0.025064153, 0.0252727...</msg>
<status status="PASS" starttime="20201115 22:01:54.094" endtime="20201115 22:01:54.107"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:54.112" level="INFO">NAME: 00-overhead-19-remove</msg>
<status status="PASS" starttime="20201115 22:01:54.111" endtime="20201115 22:01:54.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:54.114" level="INFO">VALUE: [9.319000000000688e-06, 9.319000000000688e-06, 9.318999999997218e-06, 9.333000000000258e-06, 9.318999999997218e-06, 9.360999999999398e-06, 9.361999999998871e-06, 9.320000000000161e-06, 9.319000000000688e-06, 9.333000000000258e-06, 9.360999999999398e-06, 9.319999999996692e-06, 9.333999999999731e-06, 9.320000000000161e-06, 9.305000000001118e-06, 9.319999999996692e-06, 9.319000000000688e-06, 9.304999999997648e-06, 9.291000000001548e-06, 9.320000000000161e-06, 9.320000000000161e-06, 9.306000000000592e-06, 9.320000000000161e-06, 9.319000000000688e-06, 9.333999999999731e-06, 9.250000000002312e-06, 9.360999999999398e-06, 9.333999999999731e-06, 9.319000000000688e-06, 9.360999999999398e-06, 9.34800000000277e-06, 9.333000000000258e-06, 9.333000000000258e-06, 9.319000000000688e-06, 9.320000000000161e-06, 9.306000000000592e-06, 9.306000000000592e-06, 9.375000000002437e-06, 9.306000000000592e-06, 9.333000000000258e-06, 9.306000000000592e-06, 9.306000000000592e-06, 9.306000000000592e-06, 9.306000000000592e-06, 9.305000000001118e-06, 9.333000000000258e-06, 9.319000000000688e-06, 9.333000000000258e-06, 9.320000000000161e-06, 9.278000000001452e-06]</msg>
<status status="PASS" starttime="20201115 22:01:54.113" endtime="20201115 22:01:54.115"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.108" endtime="20201115 22:01:54.115"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:54.118" endtime="20201115 22:01:54.119"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:54.121" endtime="20201115 22:01:54.141"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.120" endtime="20201115 22:01:54.141"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.116" endtime="20201115 22:01:54.142"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.741" endtime="20201115 22:01:54.143"></status>
</kw>
<msg timestamp="20201115 22:01:54.143" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:54.152" endtime="20201115 22:01:54.173"></status>
</kw>
<msg timestamp="20201115 22:01:54.174" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:54.151" endtime="20201115 22:01:54.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:54.176" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:54.175" endtime="20201115 22:01:54.177"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:54.177" endtime="20201115 22:01:54.180"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.148" endtime="20201115 22:01:54.181"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.146" endtime="20201115 22:01:54.181"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:54.188" endtime="20201115 22:01:54.475"></status>
</kw>
<msg timestamp="20201115 22:01:54.478" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021339264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021348625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:54.186" endtime="20201115 22:01:54.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:54.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021339264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021348625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:54.479" endtime="20201115 22:01:54.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:54.488" endtime="20201115 22:01:54.489"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.183" endtime="20201115 22:01:54.490"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.182" endtime="20201115 22:01:54.491"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:54.495" level="INFO">${RESULT} = [{'time': 0.021348625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.360999999999398e-06, 'source_diff': 9.360999999999398e-06}, {'time': 0.021558986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:54.491" endtime="20201115 22:01:54.495"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:54.510" level="INFO">${OVERHEAD} = {'time': [0.021348625, 0.021558986, 0.021773681, 0.021985111, 0.022194639, 0.022408375, 0.022620208, 0.022834194, 0.023045611, 0.023257042, 0.023470611, 0.023683708, 0.023894417, 0.024108708, 0.024318...</msg>
<status status="PASS" starttime="20201115 22:01:54.496" endtime="20201115 22:01:54.510"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:54.514" level="INFO">NAME: 00-overhead-19-remove</msg>
<status status="PASS" starttime="20201115 22:01:54.513" endtime="20201115 22:01:54.515"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:54.517" level="INFO">VALUE: [9.360999999999398e-06, 9.304999999997648e-06, 9.236999999998746e-06, 9.319000000000688e-06, 9.333000000000258e-06, 9.319000000000688e-06, 9.304999999997648e-06, 9.333000000000258e-06, 9.305000000001118e-06, 9.320000000000161e-06, 9.318999999997218e-06, 9.319000000000688e-06, 9.320000000000161e-06, 9.305000000001118e-06, 9.333000000000258e-06, 9.360999999999398e-06, 9.318999999997218e-06, 9.320000000000161e-06, 9.305000000001118e-06, 9.319000000000688e-06, 9.333000000000258e-06, 9.333999999999731e-06, 9.333000000000258e-06, 9.333999999999731e-06, 9.305000000001118e-06, 9.319000000000688e-06, 9.304999999997648e-06, 9.347000000003297e-06, 9.320000000000161e-06, 9.318999999997218e-06, 9.388999999998537e-06, 9.319000000000688e-06, 9.333000000000258e-06, 9.333000000000258e-06, 9.320000000000161e-06, 9.319000000000688e-06, 9.374999999998967e-06, 9.320000000000161e-06, 9.319000000000688e-06, 9.277999999997982e-06, 9.319000000000688e-06, 9.333999999999731e-06, 9.319000000000688e-06, 9.333000000000258e-06, 9.333000000000258e-06, 9.319000000000688e-06, 9.333000000000258e-06, 9.319000000000688e-06, 9.292000000001022e-06, 9.320000000000161e-06]</msg>
<status status="PASS" starttime="20201115 22:01:54.515" endtime="20201115 22:01:54.517"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.510" endtime="20201115 22:01:54.518"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:54.521" endtime="20201115 22:01:54.522"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:54.524" endtime="20201115 22:01:54.544"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.523" endtime="20201115 22:01:54.545"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.519" endtime="20201115 22:01:54.545"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.143" endtime="20201115 22:01:54.546"></status>
</kw>
<msg timestamp="20201115 22:01:54.546" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:54.556" endtime="20201115 22:01:54.579"></status>
</kw>
<msg timestamp="20201115 22:01:54.579" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:54.554" endtime="20201115 22:01:54.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:54.582" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:54.580" endtime="20201115 22:01:54.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:54.583" endtime="20201115 22:01:54.586"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.551" endtime="20201115 22:01:54.586"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.549" endtime="20201115 22:01:54.587"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:54.594" endtime="20201115 22:01:54.880"></status>
</kw>
<msg timestamp="20201115 22:01:54.883" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022895569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022904889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:54.592" endtime="20201115 22:01:54.883"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:54.891" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022895569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022904889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:54.884" endtime="20201115 22:01:54.892"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:54.892" endtime="20201115 22:01:54.894"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.589" endtime="20201115 22:01:54.895"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.587" endtime="20201115 22:01:54.895"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:54.900" level="INFO">${RESULT} = [{'time': 0.022904889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.320000000000161e-06, 'source_diff': 9.320000000000161e-06}, {'time': 0.023119417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:54.896" endtime="20201115 22:01:54.900"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:54.913" level="INFO">${OVERHEAD} = {'time': [0.022904889, 0.023119417, 0.023330375, 0.0235415, 0.023756653, 0.023965403, 0.024177236, 0.024386042, 0.024599319, 0.024815014, 0.025027167, 0.02523925, 0.025451861, 0.025663222, 0.025877736...</msg>
<status status="PASS" starttime="20201115 22:01:54.901" endtime="20201115 22:01:54.914"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:54.918" level="INFO">NAME: 00-overhead-19-remove</msg>
<status status="PASS" starttime="20201115 22:01:54.917" endtime="20201115 22:01:54.918"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:54.921" level="INFO">VALUE: [9.320000000000161e-06, 9.249999999998842e-06, 9.319000000000688e-06, 9.306000000000592e-06, 9.306000000000592e-06, 9.333999999999731e-06, 9.333000000000258e-06, 9.320000000000161e-06, 9.333000000000258e-06, 9.320000000000161e-06, 9.333999999999731e-06, 9.333000000000258e-06, 9.333000000000258e-06, 9.333000000000258e-06, 9.318999999997218e-06, 9.347000000003297e-06, 9.320000000000161e-06, 9.306000000000592e-06, 9.333999999999731e-06, 9.333000000000258e-06, 9.319000000000688e-06, 9.333999999999731e-06, 9.403000000001577e-06, 9.34800000000277e-06, 9.305000000001118e-06, 9.304999999997648e-06, 9.333000000000258e-06, 9.319000000000688e-06, 9.320000000000161e-06, 9.333000000000258e-06, 9.306000000000592e-06, 9.320000000000161e-06, 9.305000000001118e-06, 9.320000000000161e-06, 9.319000000000688e-06, 9.333000000000258e-06, 9.318999999997218e-06, 9.333000000000258e-06, 9.346999999999828e-06, 9.306000000000592e-06, 9.306000000000592e-06, 9.333000000000258e-06, 9.319000000000688e-06, 9.333999999999731e-06, 9.306000000000592e-06, 9.320000000000161e-06, 9.333000000000258e-06, 9.306000000000592e-06, 9.319000000000688e-06, 9.305000000001118e-06]</msg>
<status status="PASS" starttime="20201115 22:01:54.919" endtime="20201115 22:01:54.921"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.914" endtime="20201115 22:01:54.922"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:54.925" endtime="20201115 22:01:54.926"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:54.928" endtime="20201115 22:01:54.948"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.926" endtime="20201115 22:01:54.948"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.923" endtime="20201115 22:01:54.949"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.547" endtime="20201115 22:01:54.949"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.936" endtime="20201115 22:01:54.949"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.936" endtime="20201115 22:01:54.949"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:54.952" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:54.961" endtime="20201115 22:01:54.983"></status>
</kw>
<msg timestamp="20201115 22:01:54.983" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:54.959" endtime="20201115 22:01:54.984"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:54.986" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:54.985" endtime="20201115 22:01:54.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:54.987" endtime="20201115 22:01:54.989"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.957" endtime="20201115 22:01:54.989"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.954" endtime="20201115 22:01:54.990"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:54.997" endtime="20201115 22:01:55.284"></status>
</kw>
<msg timestamp="20201115 22:01:55.287" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023226347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023235917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:54.995" endtime="20201115 22:01:55.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:55.295" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023226347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023235917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:55.288" endtime="20201115 22:01:55.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:55.296" endtime="20201115 22:01:55.298"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.992" endtime="20201115 22:01:55.299"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.991" endtime="20201115 22:01:55.299"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:55.303" level="INFO">${RESULT} = [{'time': 0.023235917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.569999999996942e-06, 'source_diff': 9.569999999996942e-06}, {'time': 0.023460139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:55.300" endtime="20201115 22:01:55.304"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:55.317" level="INFO">${OVERHEAD} = {'time': [0.023235917, 0.023460139, 0.023685208, 0.023908458, 0.0241295, 0.024352667, 0.024576417, 0.02480275, 0.025029986, 0.025250375, 0.025477597, 0.025701819, 0.025923167, 0.026147111, 0.026367597...</msg>
<status status="PASS" starttime="20201115 22:01:55.304" endtime="20201115 22:01:55.317"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:55.322" level="INFO">NAME: 00-overhead-20-remove</msg>
<status status="PASS" starttime="20201115 22:01:55.321" endtime="20201115 22:01:55.322"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:55.325" level="INFO">VALUE: [9.569999999996942e-06, 9.597000000000078e-06, 9.569000000000938e-06, 9.569000000000938e-06, 9.569000000000938e-06, 9.556000000000842e-06, 9.527999999998232e-06, 9.568999999997468e-06, 9.555000000001368e-06, 9.568999999997468e-06, 9.569000000000938e-06, 9.569000000000938e-06, 9.570000000000412e-06, 9.514000000002132e-06, 9.610999999999648e-06, 9.569000000000938e-06, 9.583999999999981e-06, 9.570000000000412e-06, 9.568999999997468e-06, 9.583000000000508e-06, 9.555000000001368e-06, 9.556000000000842e-06, 9.583000000000508e-06, 9.568999999997468e-06, 9.570000000000412e-06, 9.554999999997899e-06, 9.583000000000508e-06, 9.570000000000412e-06, 9.583000000000508e-06, 9.542000000001272e-06, 9.638999999998787e-06, 9.597999999999551e-06, 9.569000000000938e-06, 9.570000000000412e-06, 9.583000000000508e-06, 9.583000000000508e-06, 9.570000000000412e-06, 9.542000000001272e-06, 9.569999999993473e-06, 9.583000000000508e-06, 9.570000000000412e-06, 9.583000000000508e-06, 9.569000000000938e-06, 9.569000000000938e-06, 9.583000000000508e-06, 9.555000000001368e-06, 9.611000000006586e-06, 9.555000000001368e-06, 9.570000000000412e-06, 9.624999999999218e-06]</msg>
<status status="PASS" starttime="20201115 22:01:55.323" endtime="20201115 22:01:55.325"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.318" endtime="20201115 22:01:55.326"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:55.328" endtime="20201115 22:01:55.330"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:55.332" endtime="20201115 22:01:55.351"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.330" endtime="20201115 22:01:55.352"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.327" endtime="20201115 22:01:55.353"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.952" endtime="20201115 22:01:55.353"></status>
</kw>
<msg timestamp="20201115 22:01:55.353" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:55.362" endtime="20201115 22:01:55.385"></status>
</kw>
<msg timestamp="20201115 22:01:55.385" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:55.361" endtime="20201115 22:01:55.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:55.388" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:55.386" endtime="20201115 22:01:55.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:55.389" endtime="20201115 22:01:55.392"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.358" endtime="20201115 22:01:55.392"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.356" endtime="20201115 22:01:55.393"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:55.400" endtime="20201115 22:01:55.686"></status>
</kw>
<msg timestamp="20201115 22:01:55.689" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020832222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020841792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:55.398" endtime="20201115 22:01:55.689"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:55.697" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020832222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020841792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:55.690" endtime="20201115 22:01:55.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:55.699" endtime="20201115 22:01:55.700"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.395" endtime="20201115 22:01:55.701"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.393" endtime="20201115 22:01:55.701"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:55.706" level="INFO">${RESULT} = [{'time': 0.020841792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.570000000000412e-06, 'source_diff': 9.570000000000412e-06}, {'time': 0.021064014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:55.702" endtime="20201115 22:01:55.706"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:55.719" level="INFO">${OVERHEAD} = {'time': [0.020841792, 0.021064014, 0.021288167, 0.021507986, 0.021735056, 0.021962125, 0.022182694, 0.022407778, 0.022630542, 0.022857764, 0.023080778, 0.023300931, 0.023527528, 0.023748861, 0.023969...</msg>
<status status="PASS" starttime="20201115 22:01:55.707" endtime="20201115 22:01:55.720"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:55.724" level="INFO">NAME: 00-overhead-20-remove</msg>
<status status="PASS" starttime="20201115 22:01:55.723" endtime="20201115 22:01:55.725"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:55.727" level="INFO">VALUE: [9.570000000000412e-06, 9.570000000000412e-06, 9.597999999999551e-06, 9.555000000001368e-06, 9.556000000000842e-06, 9.568999999997468e-06, 9.583000000000508e-06, 9.583999999999981e-06, 9.570000000000412e-06, 9.570000000000412e-06, 9.542000000001272e-06, 9.570000000000412e-06, 9.583999999999981e-06, 9.513999999998662e-06, 9.513999999998662e-06, 9.570000000000412e-06, 9.542000000001272e-06, 9.610999999999648e-06, 9.583999999999981e-06, 9.570000000000412e-06, 9.597000000000078e-06, 9.583000000000508e-06, 9.555999999997372e-06, 9.528000000001702e-06, 9.583000000000508e-06, 9.554999999997899e-06, 9.569000000000938e-06, 9.499999999999093e-06, 9.570000000000412e-06, 9.569000000000938e-06, 9.583000000000508e-06, 9.570000000000412e-06, 9.556000000000842e-06, 9.568999999997468e-06, 9.583999999999981e-06, 9.570000000000412e-06, 9.556000000000842e-06, 9.610999999999648e-06, 9.624999999999218e-06, 9.582999999997038e-06, 9.570000000000412e-06, 9.569000000000938e-06, 9.583000000000508e-06, 9.556000000000842e-06, 9.541999999997802e-06, 9.568999999997468e-06, 9.570000000000412e-06, 9.542000000001272e-06, 9.597000000000078e-06, 9.570000000000412e-06]</msg>
<status status="PASS" starttime="20201115 22:01:55.726" endtime="20201115 22:01:55.727"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.721" endtime="20201115 22:01:55.728"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:55.730" endtime="20201115 22:01:55.731"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:55.734" endtime="20201115 22:01:55.753"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.732" endtime="20201115 22:01:55.754"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.729" endtime="20201115 22:01:55.754"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.354" endtime="20201115 22:01:55.755"></status>
</kw>
<msg timestamp="20201115 22:01:55.755" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:55.764" endtime="20201115 22:01:55.786"></status>
</kw>
<msg timestamp="20201115 22:01:55.787" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:55.762" endtime="20201115 22:01:55.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:55.789" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:55.788" endtime="20201115 22:01:55.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:55.790" endtime="20201115 22:01:55.793"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.760" endtime="20201115 22:01:55.794"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.758" endtime="20201115 22:01:55.794"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:55.801" endtime="20201115 22:01:56.087"></status>
</kw>
<msg timestamp="20201115 22:01:56.090" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020959403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020969028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:55.799" endtime="20201115 22:01:56.091"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:56.099" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020959403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020969028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:56.091" endtime="20201115 22:01:56.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:56.100" endtime="20201115 22:01:56.102"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.797" endtime="20201115 22:01:56.102"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.795" endtime="20201115 22:01:56.103"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:56.107" level="INFO">${RESULT} = [{'time': 0.020969028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.624999999999218e-06, 'source_diff': 9.624999999999218e-06}, {'time': 0.021191917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:56.103" endtime="20201115 22:01:56.108"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:56.122" level="INFO">${OVERHEAD} = {'time': [0.020969028, 0.021191917, 0.021413444, 0.021634306, 0.021856833, 0.022077875, 0.022302972, 0.022523528, 0.022746306, 0.022973361, 0.023200111, 0.023424319, 0.023650903, 0.023876306, 0.024101...</msg>
<status status="PASS" starttime="20201115 22:01:56.108" endtime="20201115 22:01:56.122"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:56.127" level="INFO">NAME: 00-overhead-20-remove</msg>
<status status="PASS" starttime="20201115 22:01:56.126" endtime="20201115 22:01:56.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:56.129" level="INFO">VALUE: [9.624999999999218e-06, 9.570000000000412e-06, 9.583000000000508e-06, 9.583999999999981e-06, 9.568999999997468e-06, 9.556000000000842e-06, 9.569000000000938e-06, 9.570000000000412e-06, 9.583999999999981e-06, 9.555000000001368e-06, 9.499999999999093e-06, 9.583000000000508e-06, 9.556000000000842e-06, 9.570000000000412e-06, 9.556000000000842e-06, 9.556000000000842e-06, 9.583000000000508e-06, 9.513999999998662e-06, 9.570000000000412e-06, 9.570000000000412e-06, 9.555000000001368e-06, 9.513999999998662e-06, 9.514000000002132e-06, 9.569000000000938e-06, 9.555999999997372e-06, 9.528000000001702e-06, 9.569000000000938e-06, 9.597999999999551e-06, 9.569000000000938e-06, 9.556000000000842e-06, 9.583999999999981e-06, 9.624999999999218e-06, 9.570000000000412e-06, 9.514000000002132e-06, 9.514000000002132e-06, 9.570000000000412e-06, 9.569000000000938e-06, 9.569999999996942e-06, 9.583999999999981e-06, 9.583000000000508e-06, 9.569000000000938e-06, 9.583000000000508e-06, 9.569000000000938e-06, 9.570000000000412e-06, 9.556000000000842e-06, 9.556000000000842e-06, 9.555000000001368e-06, 9.513999999995193e-06, 9.569000000000938e-06, 9.597000000000078e-06]</msg>
<status status="PASS" starttime="20201115 22:01:56.128" endtime="20201115 22:01:56.130"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.123" endtime="20201115 22:01:56.130"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:56.133" endtime="20201115 22:01:56.134"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:56.136" endtime="20201115 22:01:56.156"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.135" endtime="20201115 22:01:56.157"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.131" endtime="20201115 22:01:56.157"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.756" endtime="20201115 22:01:56.157"></status>
</kw>
<msg timestamp="20201115 22:01:56.158" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:56.167" endtime="20201115 22:01:56.189"></status>
</kw>
<msg timestamp="20201115 22:01:56.189" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:56.165" endtime="20201115 22:01:56.189"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:56.192" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:56.190" endtime="20201115 22:01:56.192"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:56.193" endtime="20201115 22:01:56.196"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.162" endtime="20201115 22:01:56.196"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.160" endtime="20201115 22:01:56.197"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:56.203" endtime="20201115 22:01:56.489"></status>
</kw>
<msg timestamp="20201115 22:01:56.492" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021122458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021132042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:56.202" endtime="20201115 22:01:56.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:56.501" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021122458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021132042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:56.494" endtime="20201115 22:01:56.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:56.502" endtime="20201115 22:01:56.504"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.199" endtime="20201115 22:01:56.505"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.197" endtime="20201115 22:01:56.505"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:56.510" level="INFO">${RESULT} = [{'time': 0.021132042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.583999999999981e-06, 'source_diff': 9.583999999999981e-06}, {'time': 0.021354278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:56.506" endtime="20201115 22:01:56.510"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:56.523" level="INFO">${OVERHEAD} = {'time': [0.021132042, 0.021354278, 0.021579417, 0.021802597, 0.022028708, 0.022255236, 0.022475542, 0.022698625, 0.022919667, 0.023142139, 0.0233665, 0.023588583, 0.0238085, 0.024029542, 0.024250319,...</msg>
<status status="PASS" starttime="20201115 22:01:56.511" endtime="20201115 22:01:56.524"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:56.528" level="INFO">NAME: 00-overhead-20-remove</msg>
<status status="PASS" starttime="20201115 22:01:56.527" endtime="20201115 22:01:56.528"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:56.531" level="INFO">VALUE: [9.583999999999981e-06, 9.583999999999981e-06, 9.542000000001272e-06, 9.513999999998662e-06, 9.569000000000938e-06, 9.583000000000508e-06, 9.570000000000412e-06, 9.638999999998787e-06, 9.570000000000412e-06, 9.583000000000508e-06, 9.568999999997468e-06, 9.583000000000508e-06, 9.569000000000938e-06, 9.597999999999551e-06, 9.554999999997899e-06, 9.554999999997899e-06, 9.624999999999218e-06, 9.526999999998759e-06, 9.568999999997468e-06, 9.597000000000078e-06, 9.583999999999981e-06, 9.569000000000938e-06, 9.610999999999648e-06, 9.583999999999981e-06, 9.569000000000938e-06, 9.583000000000508e-06, 9.499999999999093e-06, 9.569000000000938e-06, 9.570000000000412e-06, 9.597000000000078e-06, 9.513999999998662e-06, 9.570000000000412e-06, 9.583000000000508e-06, 9.597000000000078e-06, 9.569000000000938e-06, 9.570000000000412e-06, 9.555000000001368e-06, 9.625000000002687e-06, 9.569999999996942e-06, 9.542000000001272e-06, 9.624999999999218e-06, 9.569999999996942e-06, 9.570000000000412e-06, 9.570000000000412e-06, 9.569999999996942e-06, 9.597000000000078e-06, 9.569000000000938e-06, 9.570000000000412e-06, 9.597000000000078e-06, 9.555000000001368e-06]</msg>
<status status="PASS" starttime="20201115 22:01:56.529" endtime="20201115 22:01:56.531"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.524" endtime="20201115 22:01:56.532"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:56.534" endtime="20201115 22:01:56.535"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:56.538" endtime="20201115 22:01:56.557"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.536" endtime="20201115 22:01:56.558"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.532" endtime="20201115 22:01:56.558"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.158" endtime="20201115 22:01:56.558"></status>
</kw>
<msg timestamp="20201115 22:01:56.559" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:56.568" endtime="20201115 22:01:56.590"></status>
</kw>
<msg timestamp="20201115 22:01:56.590" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:56.566" endtime="20201115 22:01:56.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:56.593" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:56.591" endtime="20201115 22:01:56.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:56.594" endtime="20201115 22:01:56.596"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.564" endtime="20201115 22:01:56.597"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.561" endtime="20201115 22:01:56.598"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:56.604" endtime="20201115 22:01:56.891"></status>
</kw>
<msg timestamp="20201115 22:01:56.894" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021686014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021695556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:56.603" endtime="20201115 22:01:56.894"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:56.903" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021686014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021695556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:56.895" endtime="20201115 22:01:56.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:56.904" endtime="20201115 22:01:56.906"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.600" endtime="20201115 22:01:56.906"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.598" endtime="20201115 22:01:56.907"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:56.911" level="INFO">${RESULT} = [{'time': 0.021695556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.542000000001272e-06, 'source_diff': 9.542000000001272e-06}, {'time': 0.021917847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:56.907" endtime="20201115 22:01:56.911"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:56.925" level="INFO">${OVERHEAD} = {'time': [0.021695556, 0.021917847, 0.022141056, 0.022363097, 0.022585097, 0.02281025, 0.023034375, 0.023261375, 0.023487236, 0.023707319, 0.023927431, 0.024152792, 0.024378847, 0.024601625, 0.0248233...</msg>
<status status="PASS" starttime="20201115 22:01:56.912" endtime="20201115 22:01:56.925"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:56.929" level="INFO">NAME: 00-overhead-20-remove</msg>
<status status="PASS" starttime="20201115 22:01:56.928" endtime="20201115 22:01:56.930"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:56.932" level="INFO">VALUE: [9.542000000001272e-06, 9.610999999999648e-06, 9.583999999999981e-06, 9.499999999999093e-06, 9.568999999997468e-06, 9.556000000000842e-06, 9.569000000000938e-06, 9.569000000000938e-06, 9.611000000003117e-06, 9.569000000000938e-06, 9.597999999999551e-06, 9.624999999999218e-06, 9.568999999997468e-06, 9.527999999998232e-06, 9.583000000000508e-06, 9.583999999999981e-06, 9.610999999999648e-06, 9.570000000000412e-06, 9.583999999999981e-06, 9.542000000001272e-06, 9.542000000001272e-06, 9.569000000000938e-06, 9.582999999997038e-06, 9.570000000000412e-06, 9.583000000000508e-06, 9.499999999999093e-06, 9.570000000000412e-06, 9.610999999999648e-06, 9.555999999997372e-06, 9.500000000002562e-06, 9.514000000002132e-06, 9.542000000001272e-06, 9.527000000002228e-06, 9.583000000000508e-06, 9.569000000000938e-06, 9.556000000000842e-06, 9.570000000000412e-06, 9.513999999998662e-06, 9.555000000001368e-06, 9.570000000000412e-06, 9.569000000000938e-06, 9.569000000000938e-06, 9.569000000000938e-06, 9.568999999993999e-06, 9.610999999999648e-06, 9.597000000000078e-06, 9.583999999999981e-06, 9.555000000001368e-06, 9.583000000000508e-06, 9.570000000000412e-06]</msg>
<status status="PASS" starttime="20201115 22:01:56.930" endtime="20201115 22:01:56.932"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.926" endtime="20201115 22:01:56.933"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:56.935" endtime="20201115 22:01:56.937"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:56.939" endtime="20201115 22:01:56.959"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.937" endtime="20201115 22:01:56.959"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.933" endtime="20201115 22:01:56.960"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.559" endtime="20201115 22:01:56.960"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.951" endtime="20201115 22:01:56.960"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.950" endtime="20201115 22:01:56.960"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:56.963" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:56.972" endtime="20201115 22:01:56.995"></status>
</kw>
<msg timestamp="20201115 22:01:56.995" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:56.970" endtime="20201115 22:01:56.995"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:56.998" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:56.996" endtime="20201115 22:01:56.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:56.999" endtime="20201115 22:01:57.001"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.968" endtime="20201115 22:01:57.001"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.965" endtime="20201115 22:01:57.002"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:57.009" endtime="20201115 22:01:57.296"></status>
</kw>
<msg timestamp="20201115 22:01:57.299" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023261028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023270847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:57.007" endtime="20201115 22:01:57.299"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:57.308" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023261028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023270847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:57.300" endtime="20201115 22:01:57.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:57.309" endtime="20201115 22:01:57.310"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.005" endtime="20201115 22:01:57.311"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.003" endtime="20201115 22:01:57.311"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:57.316" level="INFO">${RESULT} = [{'time': 0.023270847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.819000000001188e-06, 'source_diff': 9.819000000001188e-06}, {'time': 0.023508333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:57.312" endtime="20201115 22:01:57.316"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:57.330" level="INFO">${OVERHEAD} = {'time': [0.023270847, 0.023508333, 0.02374725, 0.023979653, 0.024218472, 0.0244535, 0.024691292, 0.024927014, 0.025160556, 0.025394236, 0.025628792, 0.025867778, 0.026102958, 0.026334722, 0.026568861...</msg>
<status status="PASS" starttime="20201115 22:01:57.317" endtime="20201115 22:01:57.330"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:57.334" level="INFO">NAME: 00-overhead-21-remove</msg>
<status status="PASS" starttime="20201115 22:01:57.333" endtime="20201115 22:01:57.335"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:57.337" level="INFO">VALUE: [9.819000000001188e-06, 9.833000000000758e-06, 9.819000000001188e-06, 9.820000000000662e-06, 9.805000000001618e-06, 9.819000000001188e-06, 9.888999999999037e-06, 9.860999999999898e-06, 9.820000000000662e-06, 9.819000000001188e-06, 9.792000000001522e-06, 9.903000000002077e-06, 9.818999999997718e-06, 9.805000000001618e-06, 9.777999999998482e-06, 9.820000000000662e-06, 9.819999999997192e-06, 9.791999999998052e-06, 9.763000000002908e-06, 9.805999999997622e-06, 9.887999999999564e-06, 9.820000000000662e-06, 9.805000000001618e-06, 9.834000000000231e-06, 9.805000000001618e-06, 9.820000000000662e-06, 9.874999999999468e-06, 9.820000000000662e-06, 9.834000000000231e-06, 9.832999999997288e-06, 9.832999999997288e-06, 9.847000000000328e-06, 9.820000000000662e-06, 9.820000000000662e-06, 9.819000000001188e-06, 9.860999999999898e-06, 9.819000000001188e-06, 9.834000000000231e-06, 9.806000000001092e-06, 9.820000000000662e-06, 9.820000000000662e-06, 9.804999999994679e-06, 9.819000000001188e-06, 9.819000000001188e-06, 9.833000000000758e-06, 9.903000000005546e-06, 9.833000000000758e-06, 9.819000000001188e-06, 9.819999999993723e-06, 9.833000000000758e-06]</msg>
<status status="PASS" starttime="20201115 22:01:57.336" endtime="20201115 22:01:57.338"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.331" endtime="20201115 22:01:57.338"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:57.340" endtime="20201115 22:01:57.342"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:57.344" endtime="20201115 22:01:57.364"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.342" endtime="20201115 22:01:57.364"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.339" endtime="20201115 22:01:57.365"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.963" endtime="20201115 22:01:57.365"></status>
</kw>
<msg timestamp="20201115 22:01:57.365" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:57.375" endtime="20201115 22:01:57.397"></status>
</kw>
<msg timestamp="20201115 22:01:57.398" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:57.373" endtime="20201115 22:01:57.398"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:57.404" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:57.399" endtime="20201115 22:01:57.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:57.405" endtime="20201115 22:01:57.408"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.370" endtime="20201115 22:01:57.409"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.368" endtime="20201115 22:01:57.409"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:57.416" endtime="20201115 22:01:57.703"></status>
</kw>
<msg timestamp="20201115 22:01:57.706" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021575764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021585528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:57.414" endtime="20201115 22:01:57.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:57.714" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021575764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021585528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:57.707" endtime="20201115 22:01:57.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:57.716" endtime="20201115 22:01:57.717"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.412" endtime="20201115 22:01:57.718"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.410" endtime="20201115 22:01:57.718"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:57.723" level="INFO">${RESULT} = [{'time': 0.021585528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.763999999998912e-06, 'source_diff': 9.763999999998912e-06}, {'time': 0.021823931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:57.719" endtime="20201115 22:01:57.723"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:57.738" level="INFO">${OVERHEAD} = {'time': [0.021585528, 0.021823931, 0.022057556, 0.022296458, 0.022535125, 0.022769208, 0.023002861, 0.023240778, 0.023474903, 0.023713333, 0.023945833, 0.024184417, 0.024418569, 0.024654556, 0.024892...</msg>
<status status="PASS" starttime="20201115 22:01:57.724" endtime="20201115 22:01:57.738"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:57.742" level="INFO">NAME: 00-overhead-21-remove</msg>
<status status="PASS" starttime="20201115 22:01:57.741" endtime="20201115 22:01:57.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:57.745" level="INFO">VALUE: [9.763999999998912e-06, 9.875000000002937e-06, 9.820000000000662e-06, 9.819000000001188e-06, 9.819000000001188e-06, 9.818999999997718e-06, 9.860999999999898e-06, 9.834000000000231e-06, 9.819999999997192e-06, 9.804999999998149e-06, 9.915999999998704e-06, 9.820000000000662e-06, 9.833000000000758e-06, 9.820000000000662e-06, 9.834000000000231e-06, 9.833000000000758e-06, 9.847000000000328e-06, 9.792000000001522e-06, 9.834000000000231e-06, 9.819000000001188e-06, 9.917000000001647e-06, 9.819000000001188e-06, 9.847000000000328e-06, 9.820000000000662e-06, 9.805000000001618e-06, 9.888999999999037e-06, 9.806000000001092e-06, 9.832999999997288e-06, 9.819000000001188e-06, 9.820000000000662e-06, 9.819000000001188e-06, 9.833000000000758e-06, 9.806000000001092e-06, 9.832999999997288e-06, 9.820000000000662e-06, 9.820000000000662e-06, 9.832999999997288e-06, 9.874999999999468e-06, 9.820000000000662e-06, 9.819000000001188e-06, 9.820000000000662e-06, 9.818999999997718e-06, 9.805000000001618e-06, 9.805000000001618e-06, 9.847000000000328e-06, 9.819000000001188e-06, 9.819000000001188e-06, 9.819000000001188e-06, 9.77699999999554e-06, 9.819000000001188e-06]</msg>
<status status="PASS" starttime="20201115 22:01:57.743" endtime="20201115 22:01:57.745"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.738" endtime="20201115 22:01:57.746"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:57.748" endtime="20201115 22:01:57.750"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:57.752" endtime="20201115 22:01:57.771"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.750" endtime="20201115 22:01:57.772"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.746" endtime="20201115 22:01:57.772"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.366" endtime="20201115 22:01:57.773"></status>
</kw>
<msg timestamp="20201115 22:01:57.773" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:57.783" endtime="20201115 22:01:57.806"></status>
</kw>
<msg timestamp="20201115 22:01:57.807" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:57.781" endtime="20201115 22:01:57.807"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:57.809" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:57.808" endtime="20201115 22:01:57.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:57.810" endtime="20201115 22:01:57.813"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.778" endtime="20201115 22:01:57.813"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.776" endtime="20201115 22:01:57.814"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:57.821" endtime="20201115 22:01:58.107"></status>
</kw>
<msg timestamp="20201115 22:01:58.115" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021453653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021463472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:57.819" endtime="20201115 22:01:58.116"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:58.124" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021453653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021463472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:58.117" endtime="20201115 22:01:58.124"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:58.125" endtime="20201115 22:01:58.127"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.816" endtime="20201115 22:01:58.127"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.814" endtime="20201115 22:01:58.128"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:58.132" level="INFO">${RESULT} = [{'time': 0.021463472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.819000000001188e-06, 'source_diff': 9.819000000001188e-06}, {'time': 0.021698486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:58.129" endtime="20201115 22:01:58.132"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:58.146" level="INFO">${OVERHEAD} = {'time': [0.021463472, 0.021698486, 0.021934069, 0.022171069, 0.022407292, 0.022640417, 0.022874792, 0.023110417, 0.023346347, 0.023580667, 0.023816, 0.024054597, 0.024286292, 0.024518458, 0.024751347...</msg>
<status status="PASS" starttime="20201115 22:01:58.133" endtime="20201115 22:01:58.146"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:58.151" level="INFO">NAME: 00-overhead-21-remove</msg>
<status status="PASS" starttime="20201115 22:01:58.150" endtime="20201115 22:01:58.151"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:58.153" level="INFO">VALUE: [9.819000000001188e-06, 9.791999999998052e-06, 9.819000000001188e-06, 9.819000000001188e-06, 9.819999999997192e-06, 9.820000000000662e-06, 9.820000000000662e-06, 9.874999999999468e-06, 9.819000000001188e-06, 9.820000000000662e-06, 9.792000000001522e-06, 9.763999999998912e-06, 9.820000000000662e-06, 9.819000000001188e-06, 9.833000000000758e-06, 9.833000000000758e-06, 9.819000000001188e-06, 9.820000000000662e-06, 9.819000000001188e-06, 9.818999999997718e-06, 9.834000000000231e-06, 9.820000000000662e-06, 9.820000000000662e-06, 9.819000000001188e-06, 9.804999999998149e-06, 9.820000000000662e-06, 9.833000000000758e-06, 9.820000000000662e-06, 9.806000000001092e-06, 9.792000000001522e-06, 9.819999999997192e-06, 9.847000000000328e-06, 9.860999999999898e-06, 9.805999999997622e-06, 9.874999999999468e-06, 9.778000000001952e-06, 9.805999999997622e-06, 9.820000000000662e-06, 9.749999999999343e-06, 9.819000000001188e-06, 9.820000000000662e-06, 9.777999999998482e-06, 9.806000000001092e-06, 9.791000000002048e-06, 9.792000000001522e-06, 9.820000000000662e-06, 9.819000000001188e-06, 9.833000000000758e-06, 9.805999999994153e-06, 9.833000000000758e-06]</msg>
<status status="PASS" starttime="20201115 22:01:58.152" endtime="20201115 22:01:58.154"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.147" endtime="20201115 22:01:58.154"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:58.157" endtime="20201115 22:01:58.158"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:58.160" endtime="20201115 22:01:58.180"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.159" endtime="20201115 22:01:58.180"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.155" endtime="20201115 22:01:58.181"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.774" endtime="20201115 22:01:58.182"></status>
</kw>
<msg timestamp="20201115 22:01:58.182" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:58.191" endtime="20201115 22:01:58.215"></status>
</kw>
<msg timestamp="20201115 22:01:58.216" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:58.190" endtime="20201115 22:01:58.216"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:58.218" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:58.217" endtime="20201115 22:01:58.219"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:58.220" endtime="20201115 22:01:58.222"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.187" endtime="20201115 22:01:58.223"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.185" endtime="20201115 22:01:58.223"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:58.230" endtime="20201115 22:01:58.516"></status>
</kw>
<msg timestamp="20201115 22:01:58.519" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021966569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021976375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:58.228" endtime="20201115 22:01:58.519"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:58.527" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021966569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021976375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:58.520" endtime="20201115 22:01:58.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:58.529" endtime="20201115 22:01:58.530"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.226" endtime="20201115 22:01:58.531"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.224" endtime="20201115 22:01:58.531"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:58.536" level="INFO">${RESULT} = [{'time': 0.021976375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.806000000001092e-06, 'source_diff': 9.806000000001092e-06}, {'time': 0.022211708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:58.532" endtime="20201115 22:01:58.536"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:58.550" level="INFO">${OVERHEAD} = {'time': [0.021976375, 0.022211708, 0.022449125, 0.022685417, 0.022924014, 0.023160292, 0.023396583, 0.023633292, 0.023864986, 0.024098653, 0.024331528, 0.024563694, 0.02479875, 0.025035778, 0.0252729...</msg>
<status status="PASS" starttime="20201115 22:01:58.537" endtime="20201115 22:01:58.550"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:58.554" level="INFO">NAME: 00-overhead-21-remove</msg>
<status status="PASS" starttime="20201115 22:01:58.553" endtime="20201115 22:01:58.555"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:58.557" level="INFO">VALUE: [9.806000000001092e-06, 9.819000000001188e-06, 9.819000000001188e-06, 9.834000000000231e-06, 9.833000000000758e-06, 9.820000000000662e-06, 9.818999999997718e-06, 9.820000000000662e-06, 9.819000000001188e-06, 9.820000000000662e-06, 9.820000000000662e-06, 9.819000000001188e-06, 9.833000000000758e-06, 9.875000000002937e-06, 9.820000000000662e-06, 9.833000000000758e-06, 9.806000000001092e-06, 9.874999999999468e-06, 9.833000000000758e-06, 9.819000000001188e-06, 9.777999999998482e-06, 9.833000000000758e-06, 9.832999999997288e-06, 9.805000000001618e-06, 9.832999999997288e-06, 9.833000000000758e-06, 9.818999999997718e-06, 9.820000000000662e-06, 9.847999999999801e-06, 9.819000000001188e-06, 9.874999999999468e-06, 9.833000000000758e-06, 9.805999999997622e-06, 9.874999999999468e-06, 9.874999999999468e-06, 9.834000000000231e-06, 9.833000000000758e-06, 9.916999999998177e-06, 9.833999999996762e-06, 9.818999999997718e-06, 9.806000000001092e-06, 9.819000000001188e-06, 9.819000000001188e-06, 9.819000000001188e-06, 9.834000000000231e-06, 9.833000000000758e-06, 9.804999999994679e-06, 9.819000000001188e-06, 9.819000000001188e-06, 9.819000000001188e-06]</msg>
<status status="PASS" starttime="20201115 22:01:58.555" endtime="20201115 22:01:58.557"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.550" endtime="20201115 22:01:58.558"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:58.561" endtime="20201115 22:01:58.562"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:58.564" endtime="20201115 22:01:58.584"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.563" endtime="20201115 22:01:58.585"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.559" endtime="20201115 22:01:58.585"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.182" endtime="20201115 22:01:58.585"></status>
</kw>
<msg timestamp="20201115 22:01:58.586" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:58.595" endtime="20201115 22:01:58.617"></status>
</kw>
<msg timestamp="20201115 22:01:58.618" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:58.593" endtime="20201115 22:01:58.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:58.621" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:58.619" endtime="20201115 22:01:58.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:58.622" endtime="20201115 22:01:58.624"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.591" endtime="20201115 22:01:58.625"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.588" endtime="20201115 22:01:58.625"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:58.632" endtime="20201115 22:01:58.919"></status>
</kw>
<msg timestamp="20201115 22:01:58.922" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020945139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020954972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:58.631" endtime="20201115 22:01:58.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:58.930" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020945139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020954972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:58.923" endtime="20201115 22:01:58.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:58.931" endtime="20201115 22:01:58.933"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.628" endtime="20201115 22:01:58.934"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.626" endtime="20201115 22:01:58.934"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:58.938" level="INFO">${RESULT} = [{'time': 0.020954972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.832999999997288e-06, 'source_diff': 9.832999999997288e-06}, {'time': 0.021191667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:58.935" endtime="20201115 22:01:58.939"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:58.952" level="INFO">${OVERHEAD} = {'time': [0.020954972, 0.021191667, 0.021429319, 0.02166625, 0.021899194, 0.022132111, 0.022367472, 0.022604347, 0.022836583, 0.023069778, 0.023306375, 0.023543361, 0.023778569, 0.024014625, 0.0242523...</msg>
<status status="PASS" starttime="20201115 22:01:58.940" endtime="20201115 22:01:58.952"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:58.957" level="INFO">NAME: 00-overhead-21-remove</msg>
<status status="PASS" starttime="20201115 22:01:58.956" endtime="20201115 22:01:58.957"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:58.960" level="INFO">VALUE: [9.832999999997288e-06, 9.820000000000662e-06, 9.832999999997288e-06, 9.833000000000758e-06, 9.805000000001618e-06, 9.860999999999898e-06, 9.874999999999468e-06, 9.819000000001188e-06, 9.819000000001188e-06, 9.820000000000662e-06, 9.888999999999037e-06, 9.860999999999898e-06, 9.818999999997718e-06, 9.806000000001092e-06, 9.833000000000758e-06, 9.833000000000758e-06, 9.805000000001618e-06, 9.806000000001092e-06, 9.820000000000662e-06, 9.819000000001188e-06, 9.833000000000758e-06, 9.818999999997718e-06, 9.834000000000231e-06, 9.791000000002048e-06, 9.819000000001188e-06, 9.834000000000231e-06, 9.819000000001188e-06, 9.860999999999898e-06, 9.806000000001092e-06, 9.806000000001092e-06, 9.820000000000662e-06, 9.806000000001092e-06, 9.874999999999468e-06, 9.818999999997718e-06, 9.820000000000662e-06, 9.833000000000758e-06, 9.833000000000758e-06, 9.819000000001188e-06, 9.820000000000662e-06, 9.833000000000758e-06, 9.819000000001188e-06, 9.834000000000231e-06, 9.901999999999134e-06, 9.860999999999898e-06, 9.777999999995013e-06, 9.792000000001522e-06, 9.805999999994153e-06, 9.819000000001188e-06, 9.764000000002382e-06, 9.805000000001618e-06]</msg>
<status status="PASS" starttime="20201115 22:01:58.958" endtime="20201115 22:01:58.961"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.953" endtime="20201115 22:01:58.961"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:58.964" endtime="20201115 22:01:58.965"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:58.967" endtime="20201115 22:01:58.987"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.966" endtime="20201115 22:01:58.988"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.962" endtime="20201115 22:01:58.988"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.586" endtime="20201115 22:01:58.988"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.962" endtime="20201115 22:01:58.989"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.961" endtime="20201115 22:01:58.989"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:58.991" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:59.001" endtime="20201115 22:01:59.023"></status>
</kw>
<msg timestamp="20201115 22:01:59.023" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:58.999" endtime="20201115 22:01:59.024"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:59.026" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:59.024" endtime="20201115 22:01:59.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:59.027" endtime="20201115 22:01:59.029"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.996" endtime="20201115 22:01:59.029"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.994" endtime="20201115 22:01:59.030"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:59.037" endtime="20201115 22:01:59.324"></status>
</kw>
<msg timestamp="20201115 22:01:59.327" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023539708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023549778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:59.035" endtime="20201115 22:01:59.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:59.335" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023539708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023549778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:59.328" endtime="20201115 22:01:59.336"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:59.337" endtime="20201115 22:01:59.338"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.032" endtime="20201115 22:01:59.339"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.031" endtime="20201115 22:01:59.339"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:59.344" level="INFO">${RESULT} = [{'time': 0.023549778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0070000000000912e-05, 'source_diff': 1.0070000000000912e-05}, {'time': 0.023796806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:59.340" endtime="20201115 22:01:59.344"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:59.359" level="INFO">${OVERHEAD} = {'time': [0.023549778, 0.023796806, 0.024042764, 0.024287056, 0.024532583, 0.024778597, 0.025028653, 0.025275556, 0.025526569, 0.02577375, 0.026021625, 0.026269486, 0.026519236, 0.026768597, 0.0270126...</msg>
<status status="PASS" starttime="20201115 22:01:59.345" endtime="20201115 22:01:59.359"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:59.363" level="INFO">NAME: 00-overhead-22-remove</msg>
<status status="PASS" starttime="20201115 22:01:59.362" endtime="20201115 22:01:59.364"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:59.366" level="INFO">VALUE: [1.0070000000000912e-05, 1.0138999999999287e-05, 1.0083000000001008e-05, 1.0084000000000481e-05, 1.0083000000001008e-05, 1.0068999999997968e-05, 1.0070000000000912e-05, 1.0070000000000912e-05, 1.0068999999997968e-05, 1.0111000000000148e-05, 1.0068999999997968e-05, 1.0069000000001438e-05, 1.0069000000001438e-05, 1.0069000000001438e-05, 1.0069000000001438e-05, 1.0069000000001438e-05, 9.999999999999593e-06, 1.0069000000001438e-05, 1.0068999999997968e-05, 1.0124999999999718e-05, 1.0111000000000148e-05, 1.0069000000001438e-05, 1.0069000000001438e-05, 1.0054999999998399e-05, 1.0084000000000481e-05, 1.0068999999997968e-05, 1.0083000000001008e-05, 1.0056000000001342e-05, 1.0083000000001008e-05, 1.0056000000001342e-05, 1.0084000000000481e-05, 1.0069999999997442e-05, 1.0056000000001342e-05, 1.0083000000001008e-05, 9.987000000002966e-06, 1.0055000000001868e-05, 1.0097000000000578e-05, 1.0084000000000481e-05, 1.0068999999994499e-05, 1.0055999999994403e-05, 1.0055999999994403e-05, 1.0055000000001868e-05, 1.0069999999993973e-05, 1.0083000000001008e-05, 1.0056000000001342e-05, 1.0070000000000912e-05, 1.0056000000001342e-05, 1.0083000000001008e-05, 1.0069000000001438e-05, 1.0055999999994403e-05]</msg>
<status status="PASS" starttime="20201115 22:01:59.364" endtime="20201115 22:01:59.367"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.360" endtime="20201115 22:01:59.367"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:59.370" endtime="20201115 22:01:59.371"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:59.373" endtime="20201115 22:01:59.393"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.372" endtime="20201115 22:01:59.394"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.368" endtime="20201115 22:01:59.394"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.992" endtime="20201115 22:01:59.394"></status>
</kw>
<msg timestamp="20201115 22:01:59.395" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:59.404" endtime="20201115 22:01:59.428"></status>
</kw>
<msg timestamp="20201115 22:01:59.428" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:59.402" endtime="20201115 22:01:59.429"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:59.431" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:59.429" endtime="20201115 22:01:59.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:59.432" endtime="20201115 22:01:59.435"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.400" endtime="20201115 22:01:59.435"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.397" endtime="20201115 22:01:59.436"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:59.442" endtime="20201115 22:01:59.728"></status>
</kw>
<msg timestamp="20201115 22:01:59.732" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021147236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021157319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:59.441" endtime="20201115 22:01:59.732"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:59.740" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021147236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021157319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:59.733" endtime="20201115 22:01:59.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:59.741" endtime="20201115 22:01:59.743"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.438" endtime="20201115 22:01:59.743"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.436" endtime="20201115 22:01:59.744"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:59.748" level="INFO">${RESULT} = [{'time': 0.021157319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0083000000001008e-05, 'source_diff': 1.0083000000001008e-05}, {'time': 0.021403569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:59.745" endtime="20201115 22:01:59.748"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:59.762" level="INFO">${OVERHEAD} = {'time': [0.021157319, 0.021403569, 0.021649333, 0.021895347, 0.0221435, 0.022389764, 0.022634819, 0.022880056, 0.023123931, 0.023369722, 0.023617403, 0.023867472, 0.024112764, 0.024363458, 0.02461066...</msg>
<status status="PASS" starttime="20201115 22:01:59.749" endtime="20201115 22:01:59.763"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:59.767" level="INFO">NAME: 00-overhead-22-remove</msg>
<status status="PASS" starttime="20201115 22:01:59.766" endtime="20201115 22:01:59.768"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:59.770" level="INFO">VALUE: [1.0083000000001008e-05, 1.0083000000001008e-05, 1.0069000000001438e-05, 1.0054999999998399e-05, 1.0069000000001438e-05, 1.0055999999997872e-05, 1.0055000000001868e-05, 1.0055999999997872e-05, 1.0070000000000912e-05, 1.0082999999997538e-05, 1.0069999999997442e-05, 1.0097000000000578e-05, 1.0082999999997538e-05, 1.0069000000001438e-05, 1.0070000000000912e-05, 1.0056000000001342e-05, 1.0055999999997872e-05, 1.0069000000001438e-05, 1.0068999999997968e-05, 1.0069000000001438e-05, 1.0070000000000912e-05, 1.0097000000000578e-05, 1.0083000000001008e-05, 1.0054999999998399e-05, 1.0055999999997872e-05, 1.0082999999997538e-05, 1.0069999999997442e-05, 1.0056000000001342e-05, 1.0069000000001438e-05, 1.0082999999997538e-05, 1.0056000000001342e-05, 1.0068999999997968e-05, 1.0056000000001342e-05, 1.0068999999997968e-05, 1.0069000000001438e-05, 1.0013999999999162e-05, 1.0069000000001438e-05, 1.0055999999997872e-05, 1.0069000000001438e-05, 1.0069000000001438e-05, 1.0056000000001342e-05, 1.0083000000001008e-05, 1.0069000000001438e-05, 1.0069000000001438e-05, 1.0083000000001008e-05, 1.0069000000001438e-05, 1.0069000000001438e-05, 1.0069000000001438e-05, 1.0084000000000481e-05, 1.0083000000001008e-05]</msg>
<status status="PASS" starttime="20201115 22:01:59.768" endtime="20201115 22:01:59.770"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.763" endtime="20201115 22:01:59.771"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:59.773" endtime="20201115 22:01:59.774"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:59.777" endtime="20201115 22:01:59.796"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.775" endtime="20201115 22:01:59.797"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.771" endtime="20201115 22:01:59.797"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.395" endtime="20201115 22:01:59.798"></status>
</kw>
<msg timestamp="20201115 22:01:59.798" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:59.807" endtime="20201115 22:01:59.829"></status>
</kw>
<msg timestamp="20201115 22:01:59.830" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:59.806" endtime="20201115 22:01:59.830"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:59.832" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:59.831" endtime="20201115 22:01:59.833"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:59.833" endtime="20201115 22:01:59.836"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.803" endtime="20201115 22:01:59.837"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.801" endtime="20201115 22:01:59.837"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:59.844" endtime="20201115 22:02:00.130"></status>
</kw>
<msg timestamp="20201115 22:02:00.134" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020883097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020893222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:59.842" endtime="20201115 22:02:00.134"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:00.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020883097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020893222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:00.135" endtime="20201115 22:02:00.142"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:00.143" endtime="20201115 22:02:00.145"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.840" endtime="20201115 22:02:00.146"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.838" endtime="20201115 22:02:00.146"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:00.151" level="INFO">${RESULT} = [{'time': 0.020893222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0124999999999718e-05, 'source_diff': 1.0124999999999718e-05}, {'time': 0.021142208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:00.147" endtime="20201115 22:02:00.151"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:00.165" level="INFO">${OVERHEAD} = {'time': [0.020893222, 0.021142208, 0.021389889, 0.021639653, 0.021890958, 0.022141722, 0.022388403, 0.022635611, 0.022882056, 0.023127569, 0.023376681, 0.023626681, 0.023874125, 0.024124903, 0.024374...</msg>
<status status="PASS" starttime="20201115 22:02:00.152" endtime="20201115 22:02:00.165"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:00.169" level="INFO">NAME: 00-overhead-22-remove</msg>
<status status="PASS" starttime="20201115 22:02:00.168" endtime="20201115 22:02:00.170"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:00.172" level="INFO">VALUE: [1.0124999999999718e-05, 1.0068999999997968e-05, 1.0069999999997442e-05, 1.0083999999997012e-05, 1.0124999999999718e-05, 1.0068999999997968e-05, 1.0070000000000912e-05, 1.0069000000001438e-05, 1.0070000000000912e-05, 1.0012999999999689e-05, 1.0056000000001342e-05, 1.0056000000001342e-05, 9.999999999999593e-06, 1.0056000000001342e-05, 1.0069000000001438e-05, 1.0083000000001008e-05, 1.0069000000001438e-05, 1.0084000000000481e-05, 1.0083000000001008e-05, 1.0097000000000578e-05, 1.0070000000000912e-05, 1.0083000000001008e-05, 9.999999999999593e-06, 1.0070000000000912e-05, 1.0070000000000912e-05, 1.0068999999997968e-05, 1.0083000000001008e-05, 1.0084000000000481e-05, 1.0056000000001342e-05, 1.0070000000000912e-05, 1.0070000000000912e-05, 1.0055999999997872e-05, 1.0083000000001008e-05, 1.0070000000000912e-05, 1.0042000000001772e-05, 1.0069000000001438e-05, 1.0097000000000578e-05, 9.999999999999593e-06, 1.0070000000000912e-05, 1.0054999999998399e-05, 1.0084000000000481e-05, 1.0056000000001342e-05, 1.0070000000000912e-05, 1.0082999999994069e-05, 1.0068999999994499e-05, 1.0084000000000481e-05, 1.0055000000001868e-05, 1.0111000000000148e-05, 1.0124999999999718e-05, 1.0083000000001008e-05]</msg>
<status status="PASS" starttime="20201115 22:02:00.170" endtime="20201115 22:02:00.172"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.166" endtime="20201115 22:02:00.173"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:00.175" endtime="20201115 22:02:00.177"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:00.179" endtime="20201115 22:02:00.198"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.177" endtime="20201115 22:02:00.199"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.173" endtime="20201115 22:02:00.199"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.798" endtime="20201115 22:02:00.200"></status>
</kw>
<msg timestamp="20201115 22:02:00.200" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:00.209" endtime="20201115 22:02:00.231"></status>
</kw>
<msg timestamp="20201115 22:02:00.232" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:00.208" endtime="20201115 22:02:00.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:00.234" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:00.233" endtime="20201115 22:02:00.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:00.236" endtime="20201115 22:02:00.238"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.205" endtime="20201115 22:02:00.239"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.203" endtime="20201115 22:02:00.239"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:00.246" endtime="20201115 22:02:00.532"></status>
</kw>
<msg timestamp="20201115 22:02:00.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021177111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021187194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:00.244" endtime="20201115 22:02:00.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:00.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021177111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021187194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:00.537" endtime="20201115 22:02:00.545"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:00.546" endtime="20201115 22:02:00.547"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.242" endtime="20201115 22:02:00.548"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.240" endtime="20201115 22:02:00.548"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:00.553" level="INFO">${RESULT} = [{'time': 0.021187194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0083000000001008e-05, 'source_diff': 1.0083000000001008e-05}, {'time': 0.021431764, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:00.549" endtime="20201115 22:02:00.553"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:00.566" level="INFO">${OVERHEAD} = {'time': [0.021187194, 0.021431764, 0.021676528, 0.021926986, 0.022172764, 0.022420931, 0.022668389, 0.022919083, 0.023168667, 0.023412708, 0.023657056, 0.023901639, 0.024145764, 0.024395278, 0.024645...</msg>
<status status="PASS" starttime="20201115 22:02:00.554" endtime="20201115 22:02:00.567"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:00.571" level="INFO">NAME: 00-overhead-22-remove</msg>
<status status="PASS" starttime="20201115 22:02:00.570" endtime="20201115 22:02:00.571"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:00.574" level="INFO">VALUE: [1.0083000000001008e-05, 1.0069999999997442e-05, 1.0084000000000481e-05, 1.0068999999997968e-05, 1.0070000000000912e-05, 1.0070000000000912e-05, 1.0070000000000912e-05, 1.0069000000001438e-05, 1.0056000000001342e-05, 1.0055000000001868e-05, 1.0055999999997872e-05, 1.0069999999997442e-05, 1.0070000000000912e-05, 1.0070000000000912e-05, 1.0082999999997538e-05, 1.0041999999998302e-05, 1.0068999999997968e-05, 1.0111000000000148e-05, 1.0055999999997872e-05, 1.0042000000001772e-05, 9.999999999999593e-06, 1.0014000000002632e-05, 1.0070000000000912e-05, 1.0124999999999718e-05, 1.0084000000000481e-05, 1.0056000000001342e-05, 1.0054999999998399e-05, 1.0069999999997442e-05, 1.0070000000000912e-05, 1.0125000000003187e-05, 1.0083000000001008e-05, 1.0069000000001438e-05, 1.0056000000001342e-05, 1.0040999999998829e-05, 1.0098000000000051e-05, 1.0070000000000912e-05, 1.0054999999998399e-05, 1.0055000000001868e-05, 9.999999999999593e-06, 1.0041000000002298e-05, 1.0068999999997968e-05, 1.0055000000001868e-05, 1.0083000000001008e-05, 1.0069000000001438e-05, 1.0084000000000481e-05, 1.0054999999994929e-05, 1.0083000000001008e-05, 1.0124999999999718e-05, 1.0055999999994403e-05, 1.0068999999994499e-05]</msg>
<status status="PASS" starttime="20201115 22:02:00.572" endtime="20201115 22:02:00.574"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.567" endtime="20201115 22:02:00.575"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:00.577" endtime="20201115 22:02:00.578"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:00.581" endtime="20201115 22:02:00.600"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.579" endtime="20201115 22:02:00.601"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.575" endtime="20201115 22:02:00.601"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.200" endtime="20201115 22:02:00.601"></status>
</kw>
<msg timestamp="20201115 22:02:00.602" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:00.611" endtime="20201115 22:02:00.632"></status>
</kw>
<msg timestamp="20201115 22:02:00.633" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:00.609" endtime="20201115 22:02:00.633"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:00.636" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:00.634" endtime="20201115 22:02:00.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:00.637" endtime="20201115 22:02:00.640"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.607" endtime="20201115 22:02:00.640"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.604" endtime="20201115 22:02:00.641"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:00.649" endtime="20201115 22:02:00.935"></status>
</kw>
<msg timestamp="20201115 22:02:00.939" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021669597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021679667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:00.647" endtime="20201115 22:02:00.939"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:00.947" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021669597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021679667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:00.940" endtime="20201115 22:02:00.948"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:00.949" endtime="20201115 22:02:00.950"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.644" endtime="20201115 22:02:00.951"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.642" endtime="20201115 22:02:00.951"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:00.956" level="INFO">${RESULT} = [{'time': 0.021679667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0070000000000912e-05, 'source_diff': 1.0070000000000912e-05}, {'time': 0.021929028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:00.952" endtime="20201115 22:02:00.956"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:00.970" level="INFO">${OVERHEAD} = {'time': [0.021679667, 0.021929028, 0.022177, 0.0224255, 0.022675569, 0.022925639, 0.023176611, 0.023421458, 0.023668056, 0.023913667, 0.024164153, 0.024408528, 0.024656667, 0.024900542, 0.025151028, ...</msg>
<status status="PASS" starttime="20201115 22:02:00.957" endtime="20201115 22:02:00.971"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:00.975" level="INFO">NAME: 00-overhead-22-remove</msg>
<status status="PASS" starttime="20201115 22:02:00.974" endtime="20201115 22:02:00.976"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:00.978" level="INFO">VALUE: [1.0070000000000912e-05, 1.0070000000000912e-05, 1.0138999999999287e-05, 1.0069000000001438e-05, 1.0040999999998829e-05, 1.0083000000001008e-05, 1.0097000000000578e-05, 1.0124999999999718e-05, 1.0070000000000912e-05, 1.0138999999999287e-05, 1.0084000000000481e-05, 1.0111000000000148e-05, 1.0084000000000481e-05, 1.0084000000000481e-05, 1.0111000000000148e-05, 1.0098000000000051e-05, 1.0097000000000578e-05, 1.0068999999997968e-05, 1.0083999999997012e-05, 1.0124999999999718e-05, 1.0097000000000578e-05, 1.0070000000000912e-05, 1.0083000000001008e-05, 1.0069000000001438e-05, 1.0068999999997968e-05, 1.0070000000000912e-05, 1.0069000000001438e-05, 1.0083999999997012e-05, 1.0097000000000578e-05, 1.0026999999999259e-05, 1.0070000000000912e-05, 1.0055000000001868e-05, 1.0070000000000912e-05, 1.0054999999998399e-05, 1.0083000000001008e-05, 1.0069000000001438e-05, 1.0096999999997108e-05, 1.0083000000001008e-05, 1.0097000000000578e-05, 9.985999999996553e-06, 1.0068999999994499e-05, 1.0083000000001008e-05, 1.0124999999999718e-05, 1.0084000000000481e-05, 1.0097000000000578e-05, 1.0124999999999718e-05, 1.0083000000001008e-05, 1.0083000000001008e-05, 1.004099999999536e-05, 1.0083000000001008e-05]</msg>
<status status="PASS" starttime="20201115 22:02:00.976" endtime="20201115 22:02:00.978"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.971" endtime="20201115 22:02:00.979"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:00.981" endtime="20201115 22:02:00.982"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:00.985" endtime="20201115 22:02:01.004"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.983" endtime="20201115 22:02:01.005"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.979" endtime="20201115 22:02:01.005"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.602" endtime="20201115 22:02:01.006"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.990" endtime="20201115 22:02:01.006"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.989" endtime="20201115 22:02:01.006"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:01.008" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:01.018" endtime="20201115 22:02:01.041"></status>
</kw>
<msg timestamp="20201115 22:02:01.042" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:01.016" endtime="20201115 22:02:01.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:01.045" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:01.043" endtime="20201115 22:02:01.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:01.046" endtime="20201115 22:02:01.048"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.013" endtime="20201115 22:02:01.048"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.011" endtime="20201115 22:02:01.049"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:01.056" endtime="20201115 22:02:01.344"></status>
</kw>
<msg timestamp="20201115 22:02:01.347" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023441681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023452028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:01.054" endtime="20201115 22:02:01.347"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:01.356" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023441681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023452028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:01.348" endtime="20201115 22:02:01.356"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:01.357" endtime="20201115 22:02:01.359"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.051" endtime="20201115 22:02:01.359"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.050" endtime="20201115 22:02:01.360"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:01.364" level="INFO">${RESULT} = [{'time': 0.023452028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0347000000000828e-05, 'source_diff': 1.0347000000000828e-05}, {'time': 0.023715403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:01.360" endtime="20201115 22:02:01.364"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:01.378" level="INFO">${OVERHEAD} = {'time': [0.023452028, 0.023715403, 0.023973306, 0.024229944, 0.024486361, 0.024746583, 0.025008778, 0.025269736, 0.025532389, 0.025793083, 0.026052111, 0.026312931, 0.026570306, 0.026831083, 0.027091...</msg>
<status status="PASS" starttime="20201115 22:02:01.365" endtime="20201115 22:02:01.378"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:01.382" level="INFO">NAME: 00-overhead-23-remove</msg>
<status status="PASS" starttime="20201115 22:02:01.381" endtime="20201115 22:02:01.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:01.385" level="INFO">VALUE: [1.0347000000000828e-05, 1.0320000000001162e-05, 1.0320000000001162e-05, 1.0304999999998649e-05, 1.0319000000001688e-05, 1.0318999999998218e-05, 1.0319999999997692e-05, 1.0347000000000828e-05, 1.0319999999997692e-05, 1.0333000000001258e-05, 1.0263999999999412e-05, 1.0374999999999968e-05, 1.0305999999998122e-05, 1.0332999999997788e-05, 1.0334000000000731e-05, 1.0347000000000828e-05, 1.0249999999999843e-05, 1.0319000000001688e-05, 1.0318999999998218e-05, 1.0318999999998218e-05, 1.0305000000002118e-05, 1.0318999999998218e-05, 1.0318999999998218e-05, 1.0306000000001592e-05, 1.0306000000001592e-05, 1.0318999999998218e-05, 1.0347000000000828e-05, 1.0319000000001688e-05, 1.0305999999998122e-05, 1.0332999999997788e-05, 1.0319000000001688e-05, 1.0318999999994749e-05, 1.0320000000001162e-05, 1.0319000000001688e-05, 1.0292000000002022e-05, 1.0320000000001162e-05, 1.0333000000001258e-05, 1.0320000000001162e-05, 1.0319999999994223e-05, 1.0318999999994749e-05, 1.0305000000002118e-05, 1.0319000000001688e-05, 1.0347000000000828e-05, 1.0305000000002118e-05, 1.0374999999999968e-05, 1.0306000000001592e-05, 1.0318999999994749e-05, 1.0388999999999537e-05, 1.0319000000001688e-05, 1.0333000000001258e-05]</msg>
<status status="PASS" starttime="20201115 22:02:01.383" endtime="20201115 22:02:01.385"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.379" endtime="20201115 22:02:01.386"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:01.388" endtime="20201115 22:02:01.390"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:01.392" endtime="20201115 22:02:01.412"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.390" endtime="20201115 22:02:01.413"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.387" endtime="20201115 22:02:01.413"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.009" endtime="20201115 22:02:01.414"></status>
</kw>
<msg timestamp="20201115 22:02:01.414" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:01.428" endtime="20201115 22:02:01.453"></status>
</kw>
<msg timestamp="20201115 22:02:01.454" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:01.424" endtime="20201115 22:02:01.454"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:01.459" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:01.455" endtime="20201115 22:02:01.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:01.460" endtime="20201115 22:02:01.463"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.420" endtime="20201115 22:02:01.464"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.417" endtime="20201115 22:02:01.465"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:01.474" endtime="20201115 22:02:01.760"></status>
</kw>
<msg timestamp="20201115 22:02:01.763" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026856958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026867292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:01.472" endtime="20201115 22:02:01.764"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:01.772" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026856958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026867292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:01.765" endtime="20201115 22:02:01.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:01.773" endtime="20201115 22:02:01.775"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.468" endtime="20201115 22:02:01.775"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.466" endtime="20201115 22:02:01.776"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:01.780" level="INFO">${RESULT} = [{'time': 0.026867292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0334000000000731e-05, 'source_diff': 1.0334000000000731e-05}, {'time': 0.027130139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:01.777" endtime="20201115 22:02:01.780"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:01.794" level="INFO">${OVERHEAD} = {'time': [0.026867292, 0.027130139, 0.027391125, 0.027650403, 0.027910375, 0.028171153, 0.028429069, 0.028689056, 0.028945458, 0.029203611, 0.029463111, 0.029725958, 0.029988306, 0.030245917, 0.030506...</msg>
<status status="PASS" starttime="20201115 22:02:01.781" endtime="20201115 22:02:01.794"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:01.799" level="INFO">NAME: 00-overhead-23-remove</msg>
<status status="PASS" starttime="20201115 22:02:01.798" endtime="20201115 22:02:01.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:01.801" level="INFO">VALUE: [1.0334000000000731e-05, 1.0320000000001162e-05, 1.0318999999998218e-05, 1.0334000000000731e-05, 1.0306000000001592e-05, 1.0334000000000731e-05, 1.0333000000001258e-05, 1.0306000000001592e-05, 1.0333000000001258e-05, 1.0333000000001258e-05, 1.0333000000001258e-05, 1.0319000000001688e-05, 1.0319999999997692e-05, 1.0334000000000731e-05, 1.0333000000001258e-05, 1.0334000000000731e-05, 1.0332999999997788e-05, 1.0334000000000731e-05, 1.0333000000001258e-05, 1.0319000000001688e-05, 1.0319000000001688e-05, 1.0319000000001688e-05, 1.0320000000001162e-05, 1.0347000000000828e-05, 1.0306000000001592e-05, 1.0333000000001258e-05, 1.0319000000001688e-05, 1.0318999999994749e-05, 1.0319000000001688e-05, 1.0320000000001162e-05, 1.0347000000000828e-05, 1.0334000000000731e-05, 1.0334000000000731e-05, 1.0319000000001688e-05, 1.0334000000000731e-05, 1.0333000000001258e-05, 1.0319000000001688e-05, 1.0320000000001162e-05, 1.0333000000001258e-05, 1.0334000000000731e-05, 1.0236000000003742e-05, 1.0306000000001592e-05, 1.0334000000000731e-05, 1.0318999999994749e-05, 1.0305000000002118e-05, 1.0306000000001592e-05, 1.0264000000002882e-05, 1.0319000000001688e-05, 1.0319000000001688e-05, 1.0319000000001688e-05]</msg>
<status status="PASS" starttime="20201115 22:02:01.800" endtime="20201115 22:02:01.802"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.795" endtime="20201115 22:02:01.802"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:01.805" endtime="20201115 22:02:01.806"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:01.808" endtime="20201115 22:02:01.828"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.807" endtime="20201115 22:02:01.828"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.803" endtime="20201115 22:02:01.829"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.415" endtime="20201115 22:02:01.829"></status>
</kw>
<msg timestamp="20201115 22:02:01.830" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:01.839" endtime="20201115 22:02:01.862"></status>
</kw>
<msg timestamp="20201115 22:02:01.862" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:01.838" endtime="20201115 22:02:01.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:01.865" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:01.863" endtime="20201115 22:02:01.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:01.866" endtime="20201115 22:02:01.869"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.835" endtime="20201115 22:02:01.869"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.832" endtime="20201115 22:02:01.870"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:01.876" endtime="20201115 22:02:02.162"></status>
</kw>
<msg timestamp="20201115 22:02:02.166" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021900111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021910444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:01.875" endtime="20201115 22:02:02.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:02.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021900111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021910444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:02.167" endtime="20201115 22:02:02.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:02.175" endtime="20201115 22:02:02.177"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.872" endtime="20201115 22:02:02.177"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.870" endtime="20201115 22:02:02.178"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:02.182" level="INFO">${RESULT} = [{'time': 0.021910444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0333000000001258e-05, 'source_diff': 1.0333000000001258e-05}, {'time': 0.022169236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:02.179" endtime="20201115 22:02:02.182"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:02.196" level="INFO">${OVERHEAD} = {'time': [0.021910444, 0.022169236, 0.022429514, 0.022692403, 0.022950264, 0.023211208, 0.023472056, 0.023728694, 0.023991778, 0.024251986, 0.024512042, 0.024768681, 0.025027819, 0.025286903, 0.025547...</msg>
<status status="PASS" starttime="20201115 22:02:02.183" endtime="20201115 22:02:02.196"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:02.201" level="INFO">NAME: 00-overhead-23-remove</msg>
<status status="PASS" starttime="20201115 22:02:02.200" endtime="20201115 22:02:02.201"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:02.203" level="INFO">VALUE: [1.0333000000001258e-05, 1.0318999999998218e-05, 1.0320000000001162e-05, 1.0306000000001592e-05, 1.0306000000001592e-05, 1.0305000000002118e-05, 1.0403000000002577e-05, 1.0333000000001258e-05, 1.0333999999997262e-05, 1.0304999999998649e-05, 1.0320000000001162e-05, 1.0306000000001592e-05, 1.0304999999998649e-05, 1.0334000000000731e-05, 1.0318999999998218e-05, 1.0319000000001688e-05, 1.0304999999998649e-05, 1.0332999999997788e-05, 1.0332999999997788e-05, 1.0318999999998218e-05, 1.0361000000000398e-05, 1.0278000000002452e-05, 1.0333000000001258e-05, 1.0333999999997262e-05, 1.0334000000000731e-05, 1.0346999999997358e-05, 1.0333000000001258e-05, 1.0320000000001162e-05, 1.0290999999999079e-05, 1.0278000000002452e-05, 1.0374999999999968e-05, 1.0361999999999871e-05, 1.0306000000001592e-05, 1.0306000000001592e-05, 1.0374999999999968e-05, 1.0305999999998122e-05, 1.0318999999994749e-05, 1.0333000000001258e-05, 1.0319000000001688e-05, 1.0334000000000731e-05, 1.0320000000001162e-05, 1.0333000000001258e-05, 1.0347000000000828e-05, 1.0334000000000731e-05, 1.0319000000001688e-05, 1.0334000000000731e-05, 1.0277999999995513e-05, 1.0333000000001258e-05, 1.0334000000000731e-05, 1.0361000000000398e-05]</msg>
<status status="PASS" starttime="20201115 22:02:02.202" endtime="20201115 22:02:02.204"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.197" endtime="20201115 22:02:02.204"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:02.207" endtime="20201115 22:02:02.208"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:02.211" endtime="20201115 22:02:02.230"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.209" endtime="20201115 22:02:02.231"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.205" endtime="20201115 22:02:02.231"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.830" endtime="20201115 22:02:02.232"></status>
</kw>
<msg timestamp="20201115 22:02:02.232" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:02.241" endtime="20201115 22:02:02.262"></status>
</kw>
<msg timestamp="20201115 22:02:02.263" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:02.240" endtime="20201115 22:02:02.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:02.266" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:02.264" endtime="20201115 22:02:02.266"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:02.267" endtime="20201115 22:02:02.269"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.237" endtime="20201115 22:02:02.270"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.235" endtime="20201115 22:02:02.270"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:02.277" endtime="20201115 22:02:02.564"></status>
</kw>
<msg timestamp="20201115 22:02:02.567" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020889111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020899417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:02.276" endtime="20201115 22:02:02.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:02.575" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020889111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020899417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:02.568" endtime="20201115 22:02:02.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:02.576" endtime="20201115 22:02:02.578"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.273" endtime="20201115 22:02:02.579"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.271" endtime="20201115 22:02:02.579"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:02.583" level="INFO">${RESULT} = [{'time': 0.020899417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0306000000001592e-05, 'source_diff': 1.0306000000001592e-05}, {'time': 0.021157014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:02.580" endtime="20201115 22:02:02.584"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:02.598" level="INFO">${OVERHEAD} = {'time': [0.020899417, 0.021157014, 0.021417792, 0.021678472, 0.021940208, 0.022202139, 0.022464292, 0.022724014, 0.022986208, 0.02324525, 0.023504583, 0.023766472, 0.024028361, 0.024291681, 0.0245511...</msg>
<status status="PASS" starttime="20201115 22:02:02.585" endtime="20201115 22:02:02.599"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:02.603" level="INFO">NAME: 00-overhead-23-remove</msg>
<status status="PASS" starttime="20201115 22:02:02.602" endtime="20201115 22:02:02.603"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:02.606" level="INFO">VALUE: [1.0306000000001592e-05, 1.0305999999998122e-05, 1.0334000000000731e-05, 1.0277999999998982e-05, 1.0332999999997788e-05, 1.0374999999999968e-05, 1.0277999999998982e-05, 1.0320000000001162e-05, 1.0319000000001688e-05, 1.0318999999998218e-05, 1.0318999999998218e-05, 1.0319000000001688e-05, 1.0319000000001688e-05, 1.0319999999997692e-05, 1.0290999999999079e-05, 1.0319000000001688e-05, 1.0291999999998552e-05, 1.0333999999997262e-05, 1.0334000000000731e-05, 1.0332999999997788e-05, 1.0318999999998218e-05, 1.0320000000001162e-05, 1.0318999999998218e-05, 1.0333999999997262e-05, 1.0319000000001688e-05, 1.0318999999998218e-05, 1.0333000000001258e-05, 1.0290999999999079e-05, 1.0333000000001258e-05, 1.0318999999998218e-05, 1.0306000000001592e-05, 1.0334000000000731e-05, 1.0306000000001592e-05, 1.0306000000001592e-05, 1.0320000000001162e-05, 1.0348000000000301e-05, 1.0333000000001258e-05, 1.0333000000001258e-05, 1.0291000000002548e-05, 1.0263999999999412e-05, 1.0334000000000731e-05, 1.0320000000001162e-05, 1.0319000000001688e-05, 1.0347000000000828e-05, 1.0332999999994319e-05, 1.0334000000000731e-05, 1.0320000000001162e-05, 1.0320000000001162e-05, 1.0305000000002118e-05, 1.0319000000001688e-05]</msg>
<status status="PASS" starttime="20201115 22:02:02.604" endtime="20201115 22:02:02.607"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.599" endtime="20201115 22:02:02.607"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:02.610" endtime="20201115 22:02:02.611"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:02.613" endtime="20201115 22:02:02.633"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.612" endtime="20201115 22:02:02.633"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.608" endtime="20201115 22:02:02.634"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.232" endtime="20201115 22:02:02.634"></status>
</kw>
<msg timestamp="20201115 22:02:02.634" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:02.643" endtime="20201115 22:02:02.668"></status>
</kw>
<msg timestamp="20201115 22:02:02.669" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:02.642" endtime="20201115 22:02:02.669"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:02.672" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:02.670" endtime="20201115 22:02:02.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:02.673" endtime="20201115 22:02:02.676"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.639" endtime="20201115 22:02:02.677"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.637" endtime="20201115 22:02:02.677"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:02.684" endtime="20201115 22:02:02.972"></status>
</kw>
<msg timestamp="20201115 22:02:02.975" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021314903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021325208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:02.682" endtime="20201115 22:02:02.975"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:02.983" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021314903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021325208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:02.976" endtime="20201115 22:02:02.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:02.985" endtime="20201115 22:02:02.986"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.680" endtime="20201115 22:02:02.987"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.678" endtime="20201115 22:02:02.987"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:02.992" level="INFO">${RESULT} = [{'time': 0.021325208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0304999999998649e-05, 'source_diff': 1.0304999999998649e-05}, {'time': 0.021581694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:02.988" endtime="20201115 22:02:02.992"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:03.006" level="INFO">${OVERHEAD} = {'time': [0.021325208, 0.021581694, 0.021837944, 0.022099111, 0.022356472, 0.022614083, 0.0228755, 0.023135319, 0.023395111, 0.023654139, 0.02391325, 0.024173778, 0.024430431, 0.024689778, 0.024952944...</msg>
<status status="PASS" starttime="20201115 22:02:02.993" endtime="20201115 22:02:03.006"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:03.010" level="INFO">NAME: 00-overhead-23-remove</msg>
<status status="PASS" starttime="20201115 22:02:03.009" endtime="20201115 22:02:03.011"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:03.013" level="INFO">VALUE: [1.0304999999998649e-05, 1.0318999999998218e-05, 1.0319000000001688e-05, 1.0319000000001688e-05, 1.0290999999999079e-05, 1.0333000000001258e-05, 1.0263999999999412e-05, 1.0347000000000828e-05, 1.0236000000000273e-05, 1.0306000000001592e-05, 1.0319000000001688e-05, 1.0236000000000273e-05, 1.0277999999998982e-05, 1.0319999999997692e-05, 1.0361000000000398e-05, 1.0319999999997692e-05, 1.0347000000000828e-05, 1.0319000000001688e-05, 1.0306000000001592e-05, 1.0374999999999968e-05, 1.0319000000001688e-05, 1.0347000000000828e-05, 1.0361000000000398e-05, 1.0278000000002452e-05, 1.0263999999999412e-05, 1.0319000000001688e-05, 1.0320000000001162e-05, 1.0319000000001688e-05, 1.0346999999997358e-05, 1.0306000000001592e-05, 1.0319999999997692e-05, 1.0290999999999079e-05, 1.0346999999997358e-05, 1.0264000000002882e-05, 1.0320000000001162e-05, 1.0320000000001162e-05, 1.0264000000002882e-05, 1.0333000000001258e-05, 1.0333000000001258e-05, 1.0334000000000731e-05, 1.0333000000001258e-05, 1.0320000000001162e-05, 1.0306000000001592e-05, 1.0306000000001592e-05, 1.0333000000001258e-05, 1.0304999999995179e-05, 1.0306000000001592e-05, 1.0278000000002452e-05, 1.0291000000002548e-05, 1.0277999999995513e-05]</msg>
<status status="PASS" starttime="20201115 22:02:03.011" endtime="20201115 22:02:03.014"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.007" endtime="20201115 22:02:03.014"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:03.017" endtime="20201115 22:02:03.018"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:03.020" endtime="20201115 22:02:03.040"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.019" endtime="20201115 22:02:03.040"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.015" endtime="20201115 22:02:03.041"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.635" endtime="20201115 22:02:03.041"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.007" endtime="20201115 22:02:03.041"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.006" endtime="20201115 22:02:03.042"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:03.044" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:03.053" endtime="20201115 22:02:03.078"></status>
</kw>
<msg timestamp="20201115 22:02:03.079" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:03.052" endtime="20201115 22:02:03.079"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:03.081" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:03.080" endtime="20201115 22:02:03.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:03.083" endtime="20201115 22:02:03.084"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.049" endtime="20201115 22:02:03.085"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.047" endtime="20201115 22:02:03.085"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:03.092" endtime="20201115 22:02:03.377"></status>
</kw>
<msg timestamp="20201115 22:02:03.381" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023887139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023897708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:03.090" endtime="20201115 22:02:03.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:03.389" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023887139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023897708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:03.382" endtime="20201115 22:02:03.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:03.390" endtime="20201115 22:02:03.392"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.088" endtime="20201115 22:02:03.393"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.086" endtime="20201115 22:02:03.393"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:03.397" level="INFO">${RESULT} = [{'time': 0.023897708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0568999999998469e-05, 'source_diff': 1.0568999999998469e-05}, {'time': 0.024169667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:03.394" endtime="20201115 22:02:03.398"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:03.411" level="INFO">${OVERHEAD} = {'time': [0.023897708, 0.024169667, 0.024440931, 0.024716028, 0.024991319, 0.025263681, 0.025536056, 0.025806597, 0.026077542, 0.026352139, 0.026625292, 0.026898917, 0.027173375, 0.027447222, 0.027719...</msg>
<status status="PASS" starttime="20201115 22:02:03.398" endtime="20201115 22:02:03.411"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:03.416" level="INFO">NAME: 00-overhead-24-remove</msg>
<status status="PASS" starttime="20201115 22:02:03.415" endtime="20201115 22:02:03.416"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:03.419" level="INFO">VALUE: [1.0568999999998469e-05, 1.0555999999998372e-05, 1.0569999999997942e-05, 1.0611000000000648e-05, 1.0597000000001078e-05, 1.0584000000000982e-05, 1.0570000000001412e-05, 1.0569000000001938e-05, 1.0569999999997942e-05, 1.0583000000001508e-05, 1.0569999999997942e-05, 1.0598000000000551e-05, 1.0568999999998469e-05, 1.0611000000000648e-05, 1.0596999999997608e-05, 1.0569000000001938e-05, 1.0597000000001078e-05, 1.0597000000001078e-05, 1.0554999999998899e-05, 1.0555000000002368e-05, 1.0513999999999663e-05, 1.0582999999998038e-05, 1.0665999999999454e-05, 1.0611000000000648e-05, 1.0584000000000982e-05, 1.0569999999997942e-05, 1.0583000000001508e-05, 1.0555999999998372e-05, 1.0500000000003562e-05, 1.0583999999994043e-05, 1.0569999999994473e-05, 1.0570000000001412e-05, 1.0583000000001508e-05, 1.0597000000001078e-05, 1.0555000000002368e-05, 1.0570000000001412e-05, 1.0570000000001412e-05, 1.0611000000000648e-05, 1.0570000000001412e-05, 1.0569000000001938e-05, 1.0611000000000648e-05, 1.0569000000001938e-05, 1.0569999999994473e-05, 1.0555999999994903e-05, 1.0569000000001938e-05, 1.0625000000000218e-05, 1.0611000000000648e-05, 1.0570000000001412e-05, 1.0583000000001508e-05, 1.0569000000001938e-05]</msg>
<status status="PASS" starttime="20201115 22:02:03.417" endtime="20201115 22:02:03.419"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.412" endtime="20201115 22:02:03.420"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:03.422" endtime="20201115 22:02:03.424"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:03.426" endtime="20201115 22:02:03.445"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.424" endtime="20201115 22:02:03.446"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.421" endtime="20201115 22:02:03.447"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.044" endtime="20201115 22:02:03.447"></status>
</kw>
<msg timestamp="20201115 22:02:03.447" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:03.456" endtime="20201115 22:02:03.479"></status>
</kw>
<msg timestamp="20201115 22:02:03.479" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:03.455" endtime="20201115 22:02:03.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:03.482" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:03.480" endtime="20201115 22:02:03.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:03.483" endtime="20201115 22:02:03.486"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.452" endtime="20201115 22:02:03.486"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.450" endtime="20201115 22:02:03.487"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:03.494" endtime="20201115 22:02:03.780"></status>
</kw>
<msg timestamp="20201115 22:02:03.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02097575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020986306, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:02:03.492" endtime="20201115 22:02:03.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:03.792" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02097575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020986306, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:02:03.784" endtime="20201115 22:02:03.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:03.793" endtime="20201115 22:02:03.795"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.489" endtime="20201115 22:02:03.795"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.488" endtime="20201115 22:02:03.796"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:03.800" level="INFO">${RESULT} = [{'time': 0.020986306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0555999999998372e-05, 'source_diff': 1.0555999999998372e-05}, {'time': 0.021256861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:03.796" endtime="20201115 22:02:03.800"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:03.814" level="INFO">${OVERHEAD} = {'time': [0.020986306, 0.021256861, 0.021526375, 0.021797625, 0.022069056, 0.022343333, 0.022614056, 0.0228845, 0.023153806, 0.023428139, 0.023697972, 0.023971125, 0.024246597, 0.024515472, 0.02479175...</msg>
<status status="PASS" starttime="20201115 22:02:03.801" endtime="20201115 22:02:03.814"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:03.819" level="INFO">NAME: 00-overhead-24-remove</msg>
<status status="PASS" starttime="20201115 22:02:03.818" endtime="20201115 22:02:03.819"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:03.822" level="INFO">VALUE: [1.0555999999998372e-05, 1.0582999999998038e-05, 1.0583000000001508e-05, 1.0638999999999788e-05, 1.0570000000001412e-05, 1.0583000000001508e-05, 1.0570000000001412e-05, 1.0568999999998469e-05, 1.0598000000000551e-05, 1.0570000000001412e-05, 1.0569000000001938e-05, 1.0625000000000218e-05, 1.0555000000002368e-05, 1.0568999999998469e-05, 1.0500000000000093e-05, 1.0555999999998372e-05, 1.0528000000002702e-05, 1.0556000000001842e-05, 1.0569000000001938e-05, 1.0583000000001508e-05, 1.0638999999999788e-05, 1.0584000000000982e-05, 1.0568999999998469e-05, 1.0568999999998469e-05, 1.0569999999997942e-05, 1.0528000000002702e-05, 1.0569999999997942e-05, 1.0570000000001412e-05, 1.0598000000000551e-05, 1.0569000000001938e-05, 1.0555999999998372e-05, 1.0569999999997942e-05, 1.0513999999999663e-05, 1.0611000000000648e-05, 1.0584000000000982e-05, 1.0570000000001412e-05, 1.0568999999998469e-05, 1.0569999999997942e-05, 1.0596999999994139e-05, 1.0569999999994473e-05, 1.0625000000000218e-05, 1.0570000000001412e-05, 1.0570000000001412e-05, 1.0514000000003132e-05, 1.0555000000002368e-05, 1.0555999999994903e-05, 1.0570000000001412e-05, 1.0612000000000121e-05, 1.0542000000002272e-05, 1.0569000000001938e-05]</msg>
<status status="PASS" starttime="20201115 22:02:03.820" endtime="20201115 22:02:03.822"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.815" endtime="20201115 22:02:03.823"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:03.825" endtime="20201115 22:02:03.826"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:03.828" endtime="20201115 22:02:03.848"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.827" endtime="20201115 22:02:03.849"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.823" endtime="20201115 22:02:03.849"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.448" endtime="20201115 22:02:03.849"></status>
</kw>
<msg timestamp="20201115 22:02:03.850" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:03.859" endtime="20201115 22:02:03.884"></status>
</kw>
<msg timestamp="20201115 22:02:03.884" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:03.857" endtime="20201115 22:02:03.885"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:03.887" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:03.886" endtime="20201115 22:02:03.887"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:03.888" endtime="20201115 22:02:03.891"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.854" endtime="20201115 22:02:03.891"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.852" endtime="20201115 22:02:03.892"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:03.899" endtime="20201115 22:02:04.184"></status>
</kw>
<msg timestamp="20201115 22:02:04.187" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020957056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020967611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:03.897" endtime="20201115 22:02:04.187"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:04.195" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020957056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020967611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:04.188" endtime="20201115 22:02:04.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:04.197" endtime="20201115 22:02:04.199"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.894" endtime="20201115 22:02:04.199"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.893" endtime="20201115 22:02:04.200"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:04.204" level="INFO">${RESULT} = [{'time': 0.020967611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0554999999998899e-05, 'source_diff': 1.0554999999998899e-05}, {'time': 0.021242694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:04.200" endtime="20201115 22:02:04.204"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:04.219" level="INFO">${OVERHEAD} = {'time': [0.020967611, 0.021242694, 0.021513167, 0.021787736, 0.022060667, 0.022336861, 0.02261025, 0.022881278, 0.023152931, 0.023425792, 0.0236965, 0.023968875, 0.024243875, 0.024515597, 0.024789417...</msg>
<status status="PASS" starttime="20201115 22:02:04.205" endtime="20201115 22:02:04.219"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:04.224" level="INFO">NAME: 00-overhead-24-remove</msg>
<status status="PASS" starttime="20201115 22:02:04.223" endtime="20201115 22:02:04.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:04.226" level="INFO">VALUE: [1.0554999999998899e-05, 1.0582999999998038e-05, 1.0584000000000982e-05, 1.0568999999998469e-05, 1.0569999999997942e-05, 1.0582999999998038e-05, 1.0555999999998372e-05, 1.0514000000003132e-05, 1.0570000000001412e-05, 1.0584000000000982e-05, 1.0582999999998038e-05, 1.0583000000001508e-05, 1.0583000000001508e-05, 1.0568999999998469e-05, 1.0556000000001842e-05, 1.0555000000002368e-05, 1.0569000000001938e-05, 1.0569000000001938e-05, 1.0597000000001078e-05, 1.0569000000001938e-05, 1.0555000000002368e-05, 1.0597000000001078e-05, 1.0569999999997942e-05, 1.0582999999998038e-05, 1.0569000000001938e-05, 1.0569999999997942e-05, 1.0568999999998469e-05, 1.0583999999997512e-05, 1.0569000000001938e-05, 1.0556000000001842e-05, 1.0500000000000093e-05, 1.0568999999998469e-05, 1.0597000000001078e-05, 1.0555000000002368e-05, 1.0568999999998469e-05, 1.0611000000000648e-05, 1.0584000000000982e-05, 1.0583000000001508e-05, 1.0555000000002368e-05, 1.0584000000000982e-05, 1.0556000000001842e-05, 1.0569999999994473e-05, 1.0570000000001412e-05, 1.0568999999994999e-05, 1.0597000000001078e-05, 1.0582999999994569e-05, 1.0569000000001938e-05, 1.0569000000001938e-05, 1.0514000000003132e-05, 1.0569000000001938e-05]</msg>
<status status="PASS" starttime="20201115 22:02:04.225" endtime="20201115 22:02:04.227"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.220" endtime="20201115 22:02:04.227"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:04.230" endtime="20201115 22:02:04.231"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:04.233" endtime="20201115 22:02:04.253"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.232" endtime="20201115 22:02:04.253"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.228" endtime="20201115 22:02:04.254"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.850" endtime="20201115 22:02:04.254"></status>
</kw>
<msg timestamp="20201115 22:02:04.254" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:04.264" endtime="20201115 22:02:04.287"></status>
</kw>
<msg timestamp="20201115 22:02:04.287" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:04.262" endtime="20201115 22:02:04.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:04.290" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:04.288" endtime="20201115 22:02:04.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:04.291" endtime="20201115 22:02:04.294"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.259" endtime="20201115 22:02:04.294"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.257" endtime="20201115 22:02:04.295"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:04.301" endtime="20201115 22:02:04.589"></status>
</kw>
<msg timestamp="20201115 22:02:04.592" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020909736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020920319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:04.300" endtime="20201115 22:02:04.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:04.600" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020909736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020920319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:04.593" endtime="20201115 22:02:04.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:04.602" endtime="20201115 22:02:04.604"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.297" endtime="20201115 22:02:04.604"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.295" endtime="20201115 22:02:04.605"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:04.609" level="INFO">${RESULT} = [{'time': 0.020920319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0582999999998038e-05, 'source_diff': 1.0582999999998038e-05}, {'time': 0.021193, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:02:04.606" endtime="20201115 22:02:04.610"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:04.623" level="INFO">${OVERHEAD} = {'time': [0.020920319, 0.021193, 0.021466792, 0.021742097, 0.022016931, 0.022290806, 0.022561833, 0.022836903, 0.023106653, 0.023379264, 0.023650208, 0.023920986, 0.024195514, 0.024471694, 0.024744375...</msg>
<status status="PASS" starttime="20201115 22:02:04.610" endtime="20201115 22:02:04.623"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:04.628" level="INFO">NAME: 00-overhead-24-remove</msg>
<status status="PASS" starttime="20201115 22:02:04.627" endtime="20201115 22:02:04.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:04.631" level="INFO">VALUE: [1.0582999999998038e-05, 1.0568999999998469e-05, 1.0555999999998372e-05, 1.0568999999998469e-05, 1.0527999999999232e-05, 1.0570000000001412e-05, 1.0583000000001508e-05, 1.0583999999997512e-05, 1.0584000000000982e-05, 1.0583000000001508e-05, 1.0568999999998469e-05, 1.0555000000002368e-05, 1.0583000000001508e-05, 1.0540999999999329e-05, 1.0568999999998469e-05, 1.0569999999997942e-05, 1.0596999999997608e-05, 1.0584000000000982e-05, 1.0584000000000982e-05, 1.0583000000001508e-05, 1.0665999999999454e-05, 1.0569999999997942e-05, 1.0542000000002272e-05, 1.0569000000001938e-05, 1.0568999999998469e-05, 1.0555000000002368e-05, 1.0638999999999788e-05, 1.0625000000000218e-05, 1.0569999999997942e-05, 1.0583000000001508e-05, 1.0583000000001508e-05, 1.0569000000001938e-05, 1.0556000000001842e-05, 1.0596999999997608e-05, 1.0583000000001508e-05, 1.0570000000001412e-05, 1.0568999999998469e-05, 1.0500000000000093e-05, 1.0569000000001938e-05, 1.0584000000000982e-05, 1.0570000000001412e-05, 1.0584000000000982e-05, 1.0527999999995763e-05, 1.0556000000001842e-05, 1.0583000000001508e-05, 1.0625000000000218e-05, 1.0584000000000982e-05, 1.0569000000001938e-05, 1.0584000000000982e-05, 1.0625000000000218e-05]</msg>
<status status="PASS" starttime="20201115 22:02:04.629" endtime="20201115 22:02:04.631"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.624" endtime="20201115 22:02:04.632"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:04.634" endtime="20201115 22:02:04.635"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:04.638" endtime="20201115 22:02:04.657"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.636" endtime="20201115 22:02:04.658"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.632" endtime="20201115 22:02:04.658"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.255" endtime="20201115 22:02:04.658"></status>
</kw>
<msg timestamp="20201115 22:02:04.659" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:04.668" endtime="20201115 22:02:04.692"></status>
</kw>
<msg timestamp="20201115 22:02:04.693" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:04.666" endtime="20201115 22:02:04.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:04.696" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:04.694" endtime="20201115 22:02:04.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:04.697" endtime="20201115 22:02:04.700"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.664" endtime="20201115 22:02:04.701"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.661" endtime="20201115 22:02:04.701"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:04.709" endtime="20201115 22:02:04.996"></status>
</kw>
<msg timestamp="20201115 22:02:04.999" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020822375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020832944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:04.707" endtime="20201115 22:02:05.000"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:05.008" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020822375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020832944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:05.001" endtime="20201115 22:02:05.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:05.009" endtime="20201115 22:02:05.011"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.704" endtime="20201115 22:02:05.012"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.702" endtime="20201115 22:02:05.012"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:05.017" level="INFO">${RESULT} = [{'time': 0.020832944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0568999999998469e-05, 'source_diff': 1.0568999999998469e-05}, {'time': 0.021108486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:05.013" endtime="20201115 22:02:05.017"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:05.030" level="INFO">${OVERHEAD} = {'time': [0.020832944, 0.021108486, 0.021378083, 0.021650306, 0.021922736, 0.022193931, 0.022469222, 0.022740222, 0.023013972, 0.023285486, 0.023555403, 0.02382825, 0.024097833, 0.024371, 0.024643611,...</msg>
<status status="PASS" starttime="20201115 22:02:05.018" endtime="20201115 22:02:05.030"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:05.035" level="INFO">NAME: 00-overhead-24-remove</msg>
<status status="PASS" starttime="20201115 22:02:05.034" endtime="20201115 22:02:05.035"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:05.038" level="INFO">VALUE: [1.0568999999998469e-05, 1.0568999999998469e-05, 1.0582999999998038e-05, 1.0598000000000551e-05, 1.0500000000000093e-05, 1.0584000000000982e-05, 1.0527999999999232e-05, 1.0625000000000218e-05, 1.0569000000001938e-05, 1.0652999999999357e-05, 1.0583999999997512e-05, 1.0568999999998469e-05, 1.0554999999998899e-05, 1.0513999999999663e-05, 1.0513999999999663e-05, 1.0568999999998469e-05, 1.0541999999998802e-05, 1.0569000000001938e-05, 1.0513000000000189e-05, 1.0569999999997942e-05, 1.0569999999997942e-05, 1.0568999999998469e-05, 1.0570000000001412e-05, 1.0500000000000093e-05, 1.0584000000000982e-05, 1.0569000000001938e-05, 1.0568999999998469e-05, 1.0584000000000982e-05, 1.0570000000001412e-05, 1.0598000000000551e-05, 1.0569999999997942e-05, 1.0569000000001938e-05, 1.0568999999998469e-05, 1.0569000000001938e-05, 1.0582999999998038e-05, 1.0583000000001508e-05, 1.0556000000001842e-05, 1.0584000000000982e-05, 1.0584000000000982e-05, 1.0583000000001508e-05, 1.0597000000001078e-05, 1.0541999999995333e-05, 1.0611000000000648e-05, 1.0597000000001078e-05, 1.0597000000001078e-05, 1.0528000000002702e-05, 1.0611000000000648e-05, 1.0570000000001412e-05, 1.0611000000000648e-05, 1.0569000000001938e-05]</msg>
<status status="PASS" starttime="20201115 22:02:05.036" endtime="20201115 22:02:05.038"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.031" endtime="20201115 22:02:05.039"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:05.041" endtime="20201115 22:02:05.042"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:05.044" endtime="20201115 22:02:05.064"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.043" endtime="20201115 22:02:05.065"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.039" endtime="20201115 22:02:05.065"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.659" endtime="20201115 22:02:05.065"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.043" endtime="20201115 22:02:05.066"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.042" endtime="20201115 22:02:05.066"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:05.068" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:05.077" endtime="20201115 22:02:05.102"></status>
</kw>
<msg timestamp="20201115 22:02:05.102" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:05.076" endtime="20201115 22:02:05.102"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:05.105" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:05.103" endtime="20201115 22:02:05.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:05.106" endtime="20201115 22:02:05.108"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.073" endtime="20201115 22:02:05.109"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.071" endtime="20201115 22:02:05.109"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:05.116" endtime="20201115 22:02:05.403"></status>
</kw>
<msg timestamp="20201115 22:02:05.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023437417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023448194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:05.114" endtime="20201115 22:02:05.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:05.414" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023437417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023448194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:05.407" endtime="20201115 22:02:05.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:05.416" endtime="20201115 22:02:05.417"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.112" endtime="20201115 22:02:05.418"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.110" endtime="20201115 22:02:05.418"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:05.423" level="INFO">${RESULT} = [{'time': 0.023448194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0777000000000009e-05, 'source_diff': 1.0777000000000009e-05}, {'time': 0.023730931, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:05.419" endtime="20201115 22:02:05.423"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:05.436" level="INFO">${OVERHEAD} = {'time': [0.023448194, 0.023730931, 0.024013569, 0.024299625, 0.024584181, 0.024868986, 0.025151708, 0.025439458, 0.025721194, 0.026006056, 0.026290861, 0.026579056, 0.026865347, 0.027153, 0.02743525,...</msg>
<status status="PASS" starttime="20201115 22:02:05.424" endtime="20201115 22:02:05.437"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:05.441" level="INFO">NAME: 00-overhead-25-remove</msg>
<status status="PASS" starttime="20201115 22:02:05.440" endtime="20201115 22:02:05.441"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:05.444" level="INFO">VALUE: [1.0777000000000009e-05, 1.0820000000001662e-05, 1.0818999999998719e-05, 1.0818999999998719e-05, 1.0805999999998622e-05, 1.0832999999998288e-05, 1.0804999999999149e-05, 1.0847000000001328e-05, 1.0804999999999149e-05, 1.0819999999998192e-05, 1.0832999999998288e-05, 1.0820000000001662e-05, 1.0819000000002188e-05, 1.0818999999998719e-05, 1.0819000000002188e-05, 1.0792000000002522e-05, 1.0777999999999482e-05, 1.0833000000001758e-05, 1.0805999999998622e-05, 1.0832999999998288e-05, 1.0860999999997428e-05, 1.0818999999998719e-05, 1.0834000000001232e-05, 1.0805000000002618e-05, 1.0819000000002188e-05, 1.0833000000001758e-05, 1.0804999999999149e-05, 1.0818999999998719e-05, 1.0819000000002188e-05, 1.0819000000002188e-05, 1.0847000000001328e-05, 1.0861000000000898e-05, 1.076299999999697e-05, 1.0806000000002092e-05, 1.0861000000000898e-05, 1.0833000000001758e-05, 1.0818999999995249e-05, 1.0847000000001328e-05, 1.0805999999995153e-05, 1.0819000000002188e-05, 1.0819000000002188e-05, 1.0847000000001328e-05, 1.0820000000001662e-05, 1.0820000000001662e-05, 1.0833000000001758e-05, 1.0833000000001758e-05, 1.0819999999994723e-05, 1.0846999999994389e-05, 1.0848000000000801e-05, 1.0833000000001758e-05]</msg>
<status status="PASS" starttime="20201115 22:02:05.442" endtime="20201115 22:02:05.444"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.437" endtime="20201115 22:02:05.445"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:05.447" endtime="20201115 22:02:05.448"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:05.451" endtime="20201115 22:02:05.470"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.449" endtime="20201115 22:02:05.471"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.445" endtime="20201115 22:02:05.471"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.069" endtime="20201115 22:02:05.472"></status>
</kw>
<msg timestamp="20201115 22:02:05.472" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:05.481" endtime="20201115 22:02:05.506"></status>
</kw>
<msg timestamp="20201115 22:02:05.507" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:05.479" endtime="20201115 22:02:05.507"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:05.510" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:05.508" endtime="20201115 22:02:05.510"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:05.511" endtime="20201115 22:02:05.513"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.477" endtime="20201115 22:02:05.514"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.474" endtime="20201115 22:02:05.514"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:05.521" endtime="20201115 22:02:05.810"></status>
</kw>
<msg timestamp="20201115 22:02:05.813" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021708778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021719611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:05.520" endtime="20201115 22:02:05.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:05.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021708778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021719611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:05.814" endtime="20201115 22:02:05.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:05.822" endtime="20201115 22:02:05.824"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.517" endtime="20201115 22:02:05.825"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.515" endtime="20201115 22:02:05.825"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:05.830" level="INFO">${RESULT} = [{'time': 0.021719611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0832999999998288e-05, 'source_diff': 1.0832999999998288e-05}, {'time': 0.022006986, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:05.826" endtime="20201115 22:02:05.830"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:05.844" level="INFO">${OVERHEAD} = {'time': [0.021719611, 0.022006986, 0.022290667, 0.022576486, 0.02286325, 0.0231455, 0.023429569, 0.023714208, 0.023998125, 0.024283458, 0.024572167, 0.024859792, 0.025147917, 0.025435194, 0.025719833...</msg>
<status status="PASS" starttime="20201115 22:02:05.831" endtime="20201115 22:02:05.845"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:05.849" level="INFO">NAME: 00-overhead-25-remove</msg>
<status status="PASS" starttime="20201115 22:02:05.848" endtime="20201115 22:02:05.850"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:05.852" level="INFO">VALUE: [1.0832999999998288e-05, 1.0818999999998719e-05, 1.0834000000001232e-05, 1.0832999999998288e-05, 1.0819000000002188e-05, 1.0805999999998622e-05, 1.0819000000002188e-05, 1.0833000000001758e-05, 1.0832999999998288e-05, 1.0819000000002188e-05, 1.0860999999997428e-05, 1.0833999999997762e-05, 1.0777999999999482e-05, 1.0861000000000898e-05, 1.0861000000000898e-05, 1.0847000000001328e-05, 1.0875000000000468e-05, 1.0819000000002188e-05, 1.0832999999998288e-05, 1.0791999999999052e-05, 1.0848000000000801e-05, 1.0832999999998288e-05, 1.0818999999998719e-05, 1.0832999999998288e-05, 1.0819000000002188e-05, 1.0819999999998192e-05, 1.0819000000002188e-05, 1.0763999999999913e-05, 1.0818999999998719e-05, 1.0819000000002188e-05, 1.0820000000001662e-05, 1.0791999999999052e-05, 1.0819999999998192e-05, 1.0819999999998192e-05, 1.0832999999994819e-05, 1.0833000000001758e-05, 1.0902000000000134e-05, 1.0806000000002092e-05, 1.0819000000002188e-05, 1.0819000000002188e-05, 1.080499999999568e-05, 1.0819000000002188e-05, 1.0833000000001758e-05, 1.0820000000001662e-05, 1.0889000000000038e-05, 1.0832999999994819e-05, 1.0819999999994723e-05, 1.0806000000002092e-05, 1.0820000000001662e-05, 1.080499999999568e-05]</msg>
<status status="PASS" starttime="20201115 22:02:05.850" endtime="20201115 22:02:05.852"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.845" endtime="20201115 22:02:05.853"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:05.855" endtime="20201115 22:02:05.857"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:05.859" endtime="20201115 22:02:05.878"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.857" endtime="20201115 22:02:05.879"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.853" endtime="20201115 22:02:05.879"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.472" endtime="20201115 22:02:05.880"></status>
</kw>
<msg timestamp="20201115 22:02:05.880" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:05.891" endtime="20201115 22:02:05.917"></status>
</kw>
<msg timestamp="20201115 22:02:05.918" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:05.889" endtime="20201115 22:02:05.918"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:05.920" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:05.919" endtime="20201115 22:02:05.920"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:05.921" endtime="20201115 22:02:05.924"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.886" endtime="20201115 22:02:05.925"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.883" endtime="20201115 22:02:05.925"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:05.932" endtime="20201115 22:02:06.218"></status>
</kw>
<msg timestamp="20201115 22:02:06.221" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023438611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023449458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:05.931" endtime="20201115 22:02:06.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:06.230" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023438611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023449458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:06.223" endtime="20201115 22:02:06.230"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:06.231" endtime="20201115 22:02:06.233"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.928" endtime="20201115 22:02:06.233"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.926" endtime="20201115 22:02:06.234"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:06.238" level="INFO">${RESULT} = [{'time': 0.023449458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0846999999997858e-05, 'source_diff': 1.0846999999997858e-05}, {'time': 0.023737097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:06.235" endtime="20201115 22:02:06.238"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:06.252" level="INFO">${OVERHEAD} = {'time': [0.023449458, 0.023737097, 0.024023861, 0.024312236, 0.024597806, 0.024881722, 0.025164375, 0.025446125, 0.025730944, 0.026013361, 0.026295125, 0.026581653, 0.026864153, 0.027152097, 0.027434...</msg>
<status status="PASS" starttime="20201115 22:02:06.239" endtime="20201115 22:02:06.252"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:06.257" level="INFO">NAME: 00-overhead-25-remove</msg>
<status status="PASS" starttime="20201115 22:02:06.256" endtime="20201115 22:02:06.257"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:06.259" level="INFO">VALUE: [1.0846999999997858e-05, 1.0832999999998288e-05, 1.0791999999999052e-05, 1.0819000000002188e-05, 1.0805999999998622e-05, 1.0804999999999149e-05, 1.0818999999998719e-05, 1.0875000000000468e-05, 1.0832999999998288e-05, 1.0777999999999482e-05, 1.0818999999998719e-05, 1.0820000000001662e-05, 1.0764000000003382e-05, 1.0818999999998719e-05, 1.0790999999999579e-05, 1.0875000000000468e-05, 1.0804999999999149e-05, 1.0806000000002092e-05, 1.0791999999999052e-05, 1.0805999999998622e-05, 1.0834000000001232e-05, 1.0832999999998288e-05, 1.0778000000002952e-05, 1.0819000000002188e-05, 1.0818999999998719e-05, 1.0833000000001758e-05, 1.0833999999997762e-05, 1.0819000000002188e-05, 1.0805000000002618e-05, 1.0778000000002952e-05, 1.0833000000001758e-05, 1.0833000000001758e-05, 1.0861000000000898e-05, 1.0818999999995249e-05, 1.0818999999995249e-05, 1.0819000000002188e-05, 1.0833000000001758e-05, 1.0833000000001758e-05, 1.0833000000001758e-05, 1.0820000000001662e-05, 1.080499999999568e-05, 1.0832999999994819e-05, 1.0806000000002092e-05, 1.0861000000000898e-05, 1.0819000000002188e-05, 1.0819999999994723e-05, 1.0820000000001662e-05, 1.0820000000001662e-05, 1.0820000000001662e-05, 1.0902999999999607e-05]</msg>
<status status="PASS" starttime="20201115 22:02:06.258" endtime="20201115 22:02:06.260"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.253" endtime="20201115 22:02:06.260"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:06.263" endtime="20201115 22:02:06.264"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:06.267" endtime="20201115 22:02:06.286"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.265" endtime="20201115 22:02:06.287"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.261" endtime="20201115 22:02:06.288"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.880" endtime="20201115 22:02:06.288"></status>
</kw>
<msg timestamp="20201115 22:02:06.288" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:06.297" endtime="20201115 22:02:06.322"></status>
</kw>
<msg timestamp="20201115 22:02:06.322" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:06.296" endtime="20201115 22:02:06.322"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:06.325" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:06.323" endtime="20201115 22:02:06.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:06.326" endtime="20201115 22:02:06.328"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.293" endtime="20201115 22:02:06.329"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.291" endtime="20201115 22:02:06.330"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:06.336" endtime="20201115 22:02:06.624"></status>
</kw>
<msg timestamp="20201115 22:02:06.627" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020869403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020880222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:06.335" endtime="20201115 22:02:06.627"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:06.635" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020869403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020880222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:06.628" endtime="20201115 22:02:06.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:06.637" endtime="20201115 22:02:06.638"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.332" endtime="20201115 22:02:06.639"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.330" endtime="20201115 22:02:06.639"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:06.643" level="INFO">${RESULT} = [{'time': 0.020880222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0818999999998719e-05, 'source_diff': 1.0818999999998719e-05}, {'time': 0.021162472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:06.640" endtime="20201115 22:02:06.644"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:06.657" level="INFO">${OVERHEAD} = {'time': [0.020880222, 0.021162472, 0.021446319, 0.02173325, 0.022019472, 0.022302833, 0.0225855, 0.022868653, 0.023154931, 0.023437319, 0.023725958, 0.024014764, 0.024297958, 0.024586806, 0.024872167...</msg>
<status status="PASS" starttime="20201115 22:02:06.645" endtime="20201115 22:02:06.658"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:06.662" level="INFO">NAME: 00-overhead-25-remove</msg>
<status status="PASS" starttime="20201115 22:02:06.661" endtime="20201115 22:02:06.663"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:06.665" level="INFO">VALUE: [1.0818999999998719e-05, 1.0819000000002188e-05, 1.0832999999998288e-05, 1.0832999999998288e-05, 1.0832999999998288e-05, 1.0805000000002618e-05, 1.0833000000001758e-05, 1.0861000000000898e-05, 1.0848000000000801e-05, 1.0805000000002618e-05, 1.0860999999997428e-05, 1.0806000000002092e-05, 1.0819000000002188e-05, 1.0819999999998192e-05, 1.0848000000000801e-05, 1.0818999999998719e-05, 1.0834000000001232e-05, 1.0820000000001662e-05, 1.0832999999998288e-05, 1.0834000000001232e-05, 1.0804999999999149e-05, 1.0833999999997762e-05, 1.0805999999998622e-05, 1.0820000000001662e-05, 1.0848000000000801e-05, 1.0804999999999149e-05, 1.0791999999999052e-05, 1.0820000000001662e-05, 1.0861000000000898e-05, 1.0820000000001662e-05, 1.0875000000000468e-05, 1.0832999999998288e-05, 1.0832999999998288e-05, 1.0777999999999482e-05, 1.0818999999998719e-05, 1.0805999999998622e-05, 1.0819999999998192e-05, 1.0848000000000801e-05, 1.0820000000001662e-05, 1.0805000000002618e-05, 1.0889000000000038e-05, 1.0819000000002188e-05, 1.0820000000001662e-05, 1.079099999999611e-05, 1.0820000000001662e-05, 1.0806000000002092e-05, 1.0861000000000898e-05, 1.0818999999995249e-05, 1.0806000000002092e-05, 1.0792000000002522e-05]</msg>
<status status="PASS" starttime="20201115 22:02:06.663" endtime="20201115 22:02:06.666"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.658" endtime="20201115 22:02:06.666"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:06.669" endtime="20201115 22:02:06.670"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:06.672" endtime="20201115 22:02:06.692"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.671" endtime="20201115 22:02:06.692"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.667" endtime="20201115 22:02:06.693"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.289" endtime="20201115 22:02:06.693"></status>
</kw>
<msg timestamp="20201115 22:02:06.693" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:06.703" endtime="20201115 22:02:06.728"></status>
</kw>
<msg timestamp="20201115 22:02:06.728" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:06.701" endtime="20201115 22:02:06.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:06.731" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:06.729" endtime="20201115 22:02:06.731"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:06.732" endtime="20201115 22:02:06.735"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.698" endtime="20201115 22:02:06.736"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.696" endtime="20201115 22:02:06.737"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:06.743" endtime="20201115 22:02:07.029"></status>
</kw>
<msg timestamp="20201115 22:02:07.032" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021049847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021060653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:06.742" endtime="20201115 22:02:07.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:07.041" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021049847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021060653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:07.033" endtime="20201115 22:02:07.041"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:07.042" endtime="20201115 22:02:07.044"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.739" endtime="20201115 22:02:07.044"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.737" endtime="20201115 22:02:07.045"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:07.049" level="INFO">${RESULT} = [{'time': 0.021060653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0805999999998622e-05, 'source_diff': 1.0805999999998622e-05}, {'time': 0.021344125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:07.046" endtime="20201115 22:02:07.049"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:07.063" level="INFO">${OVERHEAD} = {'time': [0.021060653, 0.021344125, 0.021627458, 0.021910431, 0.022195056, 0.022482319, 0.022768528, 0.023051, 0.023336528, 0.023621611, 0.023904111, 0.024187486, 0.024476083, 0.024758639, 0.025044125...</msg>
<status status="PASS" starttime="20201115 22:02:07.050" endtime="20201115 22:02:07.063"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:07.068" level="INFO">NAME: 00-overhead-25-remove</msg>
<status status="PASS" starttime="20201115 22:02:07.067" endtime="20201115 22:02:07.068"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:07.070" level="INFO">VALUE: [1.0805999999998622e-05, 1.0832999999998288e-05, 1.0818999999998719e-05, 1.0820000000001662e-05, 1.0834000000001232e-05, 1.0763000000000439e-05, 1.0819999999998192e-05, 1.0805999999998622e-05, 1.0777999999999482e-05, 1.0791999999999052e-05, 1.0832999999998288e-05, 1.0847000000001328e-05, 1.0846999999997858e-05, 1.0916999999999177e-05, 1.0806000000002092e-05, 1.0819000000002188e-05, 1.0847000000001328e-05, 1.0818999999998719e-05, 1.0777000000000009e-05, 1.0819999999998192e-05, 1.0819000000002188e-05, 1.0833000000001758e-05, 1.0833000000001758e-05, 1.0820000000001662e-05, 1.0804999999999149e-05, 1.0818999999998719e-05, 1.0832999999998288e-05, 1.0791999999999052e-05, 1.0832999999998288e-05, 1.0819000000002188e-05, 1.0889000000000038e-05, 1.0861000000000898e-05, 1.0848000000000801e-05, 1.0777999999999482e-05, 1.0804999999999149e-05, 1.0832999999998288e-05, 1.0819999999994723e-05, 1.0805000000002618e-05, 1.0833000000001758e-05, 1.0832999999994819e-05, 1.0820000000001662e-05, 1.0806000000002092e-05, 1.0819000000002188e-05, 1.0819000000002188e-05, 1.0833000000001758e-05, 1.0791000000003048e-05, 1.0833000000001758e-05, 1.0832999999994819e-05, 1.0792000000002522e-05, 1.0819000000002188e-05]</msg>
<status status="PASS" starttime="20201115 22:02:07.069" endtime="20201115 22:02:07.071"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.064" endtime="20201115 22:02:07.072"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:07.074" endtime="20201115 22:02:07.076"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:07.078" endtime="20201115 22:02:07.097"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.076" endtime="20201115 22:02:07.098"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.072" endtime="20201115 22:02:07.098"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.694" endtime="20201115 22:02:07.099"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.067" endtime="20201115 22:02:07.099"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.066" endtime="20201115 22:02:07.099"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.210" endtime="20201115 22:02:07.099"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="teardown">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:07.108" endtime="20201115 22:02:07.128"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.106" endtime="20201115 22:02:07.128"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.105" endtime="20201115 22:02:07.129"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:01:14.114" endtime="20201115 22:02:07.129" critical="yes"></status>
</test>
<status status="PASS" starttime="20201115 22:00:06.697" endtime="20201115 22:02:07.136"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_ztimer_benchmarks</item>
<item name="RIOT-Board">arduino-due</item>
<item name="RIOT-Version">2020.10</item>
</metadata>
<status status="PASS" starttime="20201115 21:59:55.437" endtime="20201115 22:02:07.156"></status>
</suite>
<statistics>
<total>
<stat pass="5" fail="0">Critical Tests</stat>
<stat pass="5" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="5" fail="0">APP_tests_ztimer_benchmarks</stat>
<stat pass="5" fail="0">BOARD_arduino-due</stat>
<stat pass="5" fail="0">dev</stat>
</tag>
<suite>
<stat pass="5" fail="0" id="s1" name="tests_ztimer_benchmarks">tests_ztimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_ztimer_benchmarks.Timer Version</stat>
<stat pass="4" fail="0" id="s1-s2" name="Timer Overhead">tests_ztimer_benchmarks.Timer Overhead</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
