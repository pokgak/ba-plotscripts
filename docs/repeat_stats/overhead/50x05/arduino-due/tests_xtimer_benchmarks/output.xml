<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201115 22:02:22.967" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201115 22:02:26.569" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201115 22:02:26.578" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201115 22:02:27.674" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201115 22:02:26.568" endtime="20201115 22:02:27.675"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201115 22:02:27.680" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201115 22:02:27.678" endtime="20201115 22:02:27.681"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:26.566" endtime="20201115 22:02:27.682"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:27.687" endtime="20201115 22:02:27.875"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.684" endtime="20201115 22:02:27.876"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:27.889" endtime="20201115 22:02:30.911"></status>
</kw>
<msg timestamp="20201115 22:02:30.912" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:27.887" endtime="20201115 22:02:30.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:30.918" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:30.915" endtime="20201115 22:02:30.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:02:30.924" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:02:30.920" endtime="20201115 22:02:30.925"></status>
</kw>
<status status="FAIL" starttime="20201115 22:02:27.885" endtime="20201115 22:02:30.926"></status>
</kw>
<status status="FAIL" starttime="20201115 22:02:27.882" endtime="20201115 22:02:30.928"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.881" endtime="20201115 22:02:30.928"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:02:30.936" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:02:30.934" endtime="20201115 22:02:30.937"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:30.930" endtime="20201115 22:02:30.937"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.880" endtime="20201115 22:02:30.937"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.880" endtime="20201115 22:02:30.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:30.939" endtime="20201115 22:02:30.942"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.878" endtime="20201115 22:02:30.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:30.945" endtime="20201115 22:02:30.948"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.877" endtime="20201115 22:02:30.949"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:26.564" endtime="20201115 22:02:30.950"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:30.964" endtime="20201115 22:02:30.984"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:30.960" endtime="20201115 22:02:30.984"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:31.000" endtime="20201115 22:02:34.022"></status>
</kw>
<msg timestamp="20201115 22:02:34.023" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:30.998" endtime="20201115 22:02:34.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:34.028" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:34.025" endtime="20201115 22:02:34.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:02:34.034" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:02:34.030" endtime="20201115 22:02:34.034"></status>
</kw>
<status status="FAIL" starttime="20201115 22:02:30.995" endtime="20201115 22:02:34.036"></status>
</kw>
<status status="FAIL" starttime="20201115 22:02:30.992" endtime="20201115 22:02:34.037"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:30.990" endtime="20201115 22:02:34.038"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:02:34.045" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:02:34.044" endtime="20201115 22:02:34.046"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.039" endtime="20201115 22:02:34.046"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:30.989" endtime="20201115 22:02:34.047"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:30.988" endtime="20201115 22:02:34.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:34.049" endtime="20201115 22:02:34.051"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:30.987" endtime="20201115 22:02:34.053"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:30.985" endtime="20201115 22:02:34.053"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:30.957" endtime="20201115 22:02:34.054"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:34.069" endtime="20201115 22:02:34.083"></status>
</kw>
<msg timestamp="20201115 22:02:34.084" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:34.065" endtime="20201115 22:02:34.085"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:34.089" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:34.086" endtime="20201115 22:02:34.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:34.091" endtime="20201115 22:02:34.095"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.060" endtime="20201115 22:02:34.096"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.056" endtime="20201115 22:02:34.097"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:34.106" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201115 22:02:34.104" endtime="20201115 22:02:34.106"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:34.110" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201115 22:02:34.108" endtime="20201115 22:02:34.111"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.099" endtime="20201115 22:02:34.112"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:02:30.951" endtime="20201115 22:02:34.113" critical="yes"></status>
</test>
<status status="PASS" starttime="20201115 22:02:23.079" endtime="20201115 22:02:34.121"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201115 22:02:34.178" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201115 22:02:34.186" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201115 22:02:35.260" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201115 22:02:34.176" endtime="20201115 22:02:35.260"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201115 22:02:35.263" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201115 22:02:35.262" endtime="20201115 22:02:35.263"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.175" endtime="20201115 22:02:35.264"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:35.266" endtime="20201115 22:02:35.487"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.264" endtime="20201115 22:02:35.488"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:35.500" endtime="20201115 22:02:38.522"></status>
</kw>
<msg timestamp="20201115 22:02:38.523" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:35.499" endtime="20201115 22:02:38.523"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:38.528" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:38.525" endtime="20201115 22:02:38.529"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:02:38.534" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:02:38.530" endtime="20201115 22:02:38.535"></status>
</kw>
<status status="FAIL" starttime="20201115 22:02:35.496" endtime="20201115 22:02:38.536"></status>
</kw>
<status status="FAIL" starttime="20201115 22:02:35.494" endtime="20201115 22:02:38.537"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.493" endtime="20201115 22:02:38.538"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:02:38.546" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:02:38.544" endtime="20201115 22:02:38.546"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.540" endtime="20201115 22:02:38.547"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.492" endtime="20201115 22:02:38.547"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.491" endtime="20201115 22:02:38.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:38.549" endtime="20201115 22:02:38.552"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.490" endtime="20201115 22:02:38.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:38.555" endtime="20201115 22:02:38.558"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.489" endtime="20201115 22:02:38.559"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.173" endtime="20201115 22:02:38.560"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO/">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:38.575" endtime="20201115 22:02:38.595"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.570" endtime="20201115 22:02:38.596"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:38.609" endtime="20201115 22:02:41.630"></status>
</kw>
<msg timestamp="20201115 22:02:41.631" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:38.607" endtime="20201115 22:02:41.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:41.637" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:41.634" endtime="20201115 22:02:41.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:02:41.643" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:02:41.639" endtime="20201115 22:02:41.644"></status>
</kw>
<status status="FAIL" starttime="20201115 22:02:38.604" endtime="20201115 22:02:41.645"></status>
</kw>
<status status="FAIL" starttime="20201115 22:02:38.602" endtime="20201115 22:02:41.647"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.601" endtime="20201115 22:02:41.647"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:02:41.655" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:02:41.653" endtime="20201115 22:02:41.656"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.649" endtime="20201115 22:02:41.656"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.600" endtime="20201115 22:02:41.657"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.600" endtime="20201115 22:02:41.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:41.659" endtime="20201115 22:02:41.662"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.598" endtime="20201115 22:02:41.663"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.597" endtime="20201115 22:02:41.664"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.567" endtime="20201115 22:02:41.665"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure GPIO Overhead</arg>
</arguments>
<msg timestamp="20201115 22:02:41.674" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:41.691" endtime="20201115 22:02:41.708"></status>
</kw>
<msg timestamp="20201115 22:02:41.709" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:41.688" endtime="20201115 22:02:41.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:41.714" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:41.711" endtime="20201115 22:02:41.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:41.716" endtime="20201115 22:02:41.719"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.682" endtime="20201115 22:02:41.720"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.678" endtime="20201115 22:02:41.721"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:41.735" endtime="20201115 22:02:42.015"></status>
</kw>
<msg timestamp="20201115 22:02:42.017" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.107905125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.107911014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:41.732" endtime="20201115 22:02:42.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:42.022" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.107905125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.107911014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:42.018" endtime="20201115 22:02:42.023"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:42.023" endtime="20201115 22:02:42.025"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.726" endtime="20201115 22:02:42.025"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.723" endtime="20201115 22:02:42.026"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:42.029" level="INFO">${RESULT} = [{'time': 3.107911014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.889000000092182e-06, 'source_diff': 5.889000000092182e-06}, {'time': 3.107919639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:42.027" endtime="20201115 22:02:42.029"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:42.038" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.889000000092182e-06, 4.346999999960133e-06, 3.347000000264444e-06, 5.7500000001375895e-06, 6.8469999998654885e-06, 5.514000000150787e-06, 3.3480000003471844e-06, 6.6389999999749705e-06, 2....</msg>
<status status="PASS" starttime="20201115 22:02:42.030" endtime="20201115 22:02:42.038"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:42.042" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201115 22:02:42.041" endtime="20201115 22:02:42.042"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:42.044" level="INFO">VALUE: [5.889000000092182e-06, 4.346999999960133e-06, 3.347000000264444e-06, 5.7500000001375895e-06, 6.8469999998654885e-06, 5.514000000150787e-06, 3.3480000003471844e-06, 6.6389999999749705e-06, 2.7079999997958737e-06, 6.555999999768858e-06, 5.208000000145319e-06, 5.4999999998806e-06, 2.9170000002132213e-06, 4.347000000404222e-06, 6.916999999884155e-06, 2.9999999999752447e-06, 2.555000000015184e-06, 5.833000000343702e-06, 3.7919999997804155e-06, 3.2079999998657627e-06, 4.193999999735354e-06, 5.362000000008749e-06, 6.264000000033576e-06, 4.124999999799428e-06, 4.625000000313406e-06]</msg>
<status status="PASS" starttime="20201115 22:02:42.043" endtime="20201115 22:02:42.045"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.039" endtime="20201115 22:02:42.045"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:42.048" endtime="20201115 22:02:42.049"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:42.051" endtime="20201115 22:02:42.070"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.050" endtime="20201115 22:02:42.071"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.046" endtime="20201115 22:02:42.071"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.675" endtime="20201115 22:02:42.072"></status>
</kw>
<msg timestamp="20201115 22:02:42.072" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:42.080" endtime="20201115 22:02:42.089"></status>
</kw>
<msg timestamp="20201115 22:02:42.090" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:42.078" endtime="20201115 22:02:42.090"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:42.092" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:42.091" endtime="20201115 22:02:42.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:42.094" endtime="20201115 22:02:42.095"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.075" endtime="20201115 22:02:42.096"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.074" endtime="20201115 22:02:42.096"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:42.102" endtime="20201115 22:02:42.367"></status>
</kw>
<msg timestamp="20201115 22:02:42.369" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017428472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017434181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:42.101" endtime="20201115 22:02:42.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:42.375" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017428472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017434181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:42.370" endtime="20201115 22:02:42.375"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:42.376" endtime="20201115 22:02:42.377"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.098" endtime="20201115 22:02:42.378"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.097" endtime="20201115 22:02:42.378"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:42.382" level="INFO">${RESULT} = [{'time': 0.017434181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7089999999995755e-06, 'source_diff': 5.7089999999995755e-06}, {'time': 0.017443097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:42.379" endtime="20201115 22:02:42.382"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:42.390" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.7089999999995755e-06, 2.569000000000876e-06, 3.3480000000002397e-06, 4.360999999997867e-06, 3.929999999999212e-06, 3.2639999999993508e-06, 5.777000000001947e-06, 5.944000000000782e-06, 5.7...</msg>
<status status="PASS" starttime="20201115 22:02:42.383" endtime="20201115 22:02:42.391"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:42.396" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201115 22:02:42.394" endtime="20201115 22:02:42.396"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:42.398" level="INFO">VALUE: [5.7089999999995755e-06, 2.569000000000876e-06, 3.3480000000002397e-06, 4.360999999997867e-06, 3.929999999999212e-06, 3.2639999999993508e-06, 5.777000000001947e-06, 5.944000000000782e-06, 5.708000000000102e-06, 3.415999999999142e-06, 5.917000000001116e-06, 6.278000000001921e-06, 6.945000000001256e-06, 2.569000000000876e-06, 6.8480000000002705e-06, 3.818999999998657e-06, 4.917000000000116e-06, 6.040999999998298e-06, 5.555000000000837e-06, 6.637999999999783e-06, 4.181000000002405e-06, 5.485999999998992e-06, 5.778000000001421e-06, 6.6669999999983964e-06, 6.542000000001741e-06]</msg>
<status status="PASS" starttime="20201115 22:02:42.397" endtime="20201115 22:02:42.398"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.392" endtime="20201115 22:02:42.399"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:42.401" endtime="20201115 22:02:42.402"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:42.404" endtime="20201115 22:02:42.424"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.403" endtime="20201115 22:02:42.424"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.399" endtime="20201115 22:02:42.425"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.073" endtime="20201115 22:02:42.425"></status>
</kw>
<msg timestamp="20201115 22:02:42.425" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:42.433" endtime="20201115 22:02:42.443"></status>
</kw>
<msg timestamp="20201115 22:02:42.444" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:42.431" endtime="20201115 22:02:42.444"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:42.446" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:42.445" endtime="20201115 22:02:42.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:42.447" endtime="20201115 22:02:42.449"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.429" endtime="20201115 22:02:42.449"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.427" endtime="20201115 22:02:42.450"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:42.456" endtime="20201115 22:02:42.720"></status>
</kw>
<msg timestamp="20201115 22:02:42.722" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017288306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017293819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:42.455" endtime="20201115 22:02:42.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:42.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017288306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017293819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:42.723" endtime="20201115 22:02:42.728"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:42.728" endtime="20201115 22:02:42.730"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.452" endtime="20201115 22:02:42.730"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.450" endtime="20201115 22:02:42.731"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:42.734" level="INFO">${RESULT} = [{'time': 0.017293819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.512999999998658e-06, 'source_diff': 5.512999999998658e-06}, {'time': 0.017302778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:42.732" endtime="20201115 22:02:42.734"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:42.743" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.512999999998658e-06, 4.639000000000726e-06, 5.985999999999492e-06, 5.917000000001116e-06, 6.861000000000367e-06, 4.361000000001336e-06, 4.486000000001461e-06, 5.8889999999985065e-06, 5.471...</msg>
<status status="PASS" starttime="20201115 22:02:42.735" endtime="20201115 22:02:42.744"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:42.748" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201115 22:02:42.747" endtime="20201115 22:02:42.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:42.750" level="INFO">VALUE: [5.512999999998658e-06, 4.639000000000726e-06, 5.985999999999492e-06, 5.917000000001116e-06, 6.861000000000367e-06, 4.361000000001336e-06, 4.486000000001461e-06, 5.8889999999985065e-06, 5.471999999999422e-06, 5.554999999997368e-06, 5.346999999999297e-06, 5.7089999999995755e-06, 6.638999999999257e-06, 6.570000000000881e-06, 5.125000000001656e-06, 6.485999999999992e-06, 2.6249999999991558e-06, 3.6949999999980054e-06, 6.8480000000002705e-06, 4.429999999999712e-06, 5.221999999999172e-06, 6.416999999998146e-06, 3.333000000001196e-06, 2.7910000000019863e-06, 4.333000000002196e-06]</msg>
<status status="PASS" starttime="20201115 22:02:42.749" endtime="20201115 22:02:42.750"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.744" endtime="20201115 22:02:42.751"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:42.753" endtime="20201115 22:02:42.754"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:42.756" endtime="20201115 22:02:42.776"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.755" endtime="20201115 22:02:42.776"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.751" endtime="20201115 22:02:42.777"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.426" endtime="20201115 22:02:42.777"></status>
</kw>
<msg timestamp="20201115 22:02:42.777" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:42.785" endtime="20201115 22:02:42.795"></status>
</kw>
<msg timestamp="20201115 22:02:42.796" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:42.783" endtime="20201115 22:02:42.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:42.798" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:42.797" endtime="20201115 22:02:42.798"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:42.799" endtime="20201115 22:02:42.801"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.781" endtime="20201115 22:02:42.801"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.779" endtime="20201115 22:02:42.802"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:42.808" endtime="20201115 22:02:43.073"></status>
</kw>
<msg timestamp="20201115 22:02:43.074" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017407111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017411819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:42.806" endtime="20201115 22:02:43.075"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:43.080" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017407111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017411819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:43.075" endtime="20201115 22:02:43.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:43.081" endtime="20201115 22:02:43.083"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.804" endtime="20201115 22:02:43.083"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.802" endtime="20201115 22:02:43.084"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:43.087" level="INFO">${RESULT} = [{'time': 0.017411819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.707999999999102e-06, 'source_diff': 4.707999999999102e-06}, {'time': 0.017422014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:43.085" endtime="20201115 22:02:43.088"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:43.097" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.707999999999102e-06, 6.7779999999989515e-06, 6.0839999999999506e-06, 4.625000000001156e-06, 3.374999999999906e-06, 2.9169999999981155e-06, 5.139000000001226e-06, 5.528000000001171e-06, 5.8...</msg>
<status status="PASS" starttime="20201115 22:02:43.089" endtime="20201115 22:02:43.097"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:43.101" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201115 22:02:43.100" endtime="20201115 22:02:43.102"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:43.104" level="INFO">VALUE: [4.707999999999102e-06, 6.7779999999989515e-06, 6.0839999999999506e-06, 4.625000000001156e-06, 3.374999999999906e-06, 2.9169999999981155e-06, 5.139000000001226e-06, 5.528000000001171e-06, 5.846999999999797e-06, 5.264000000001351e-06, 6.555000000001837e-06, 6.431000000001186e-06, 4.485999999997992e-06, 2.55600000000078e-06, 3.929999999999212e-06, 6.709000000000576e-06, 2.485999999999461e-06, 3.2779999999989207e-06, 6.499999999999562e-06, 2.999999999999531e-06, 5.055999999999811e-06, 3.1389999999992257e-06, 6.1389999999987566e-06, 6.056000000000811e-06, 2.583000000000446e-06]</msg>
<status status="PASS" starttime="20201115 22:02:43.103" endtime="20201115 22:02:43.104"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.097" endtime="20201115 22:02:43.105"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:43.107" endtime="20201115 22:02:43.109"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:43.111" endtime="20201115 22:02:43.130"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.109" endtime="20201115 22:02:43.131"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.106" endtime="20201115 22:02:43.132"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.778" endtime="20201115 22:02:43.132"></status>
</kw>
<msg timestamp="20201115 22:02:43.132" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:43.140" endtime="20201115 22:02:43.151"></status>
</kw>
<msg timestamp="20201115 22:02:43.152" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:43.139" endtime="20201115 22:02:43.152"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:43.154" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:43.153" endtime="20201115 22:02:43.155"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:43.156" endtime="20201115 22:02:43.160"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.136" endtime="20201115 22:02:43.161"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.134" endtime="20201115 22:02:43.162"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:43.176" endtime="20201115 22:02:43.456"></status>
</kw>
<msg timestamp="20201115 22:02:43.458" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017969917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017973472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:43.173" endtime="20201115 22:02:43.458"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:43.463" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017969917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017973472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:43.459" endtime="20201115 22:02:43.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:43.464" endtime="20201115 22:02:43.466"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.167" endtime="20201115 22:02:43.466"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.163" endtime="20201115 22:02:43.467"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:43.470" level="INFO">${RESULT} = [{'time': 0.017973472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5550000000023063e-06, 'source_diff': 3.5550000000023063e-06}, {'time': 0.017983236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:43.468" endtime="20201115 22:02:43.471"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:43.485" level="INFO">${GPIO_OVERHEAD} = {'diff': [3.5550000000023063e-06, 5.417000000000616e-06, 6.555000000001837e-06, 3.208000000001071e-06, 5.986000000002961e-06, 5.917000000001116e-06, 5.847000000003266e-06, 3.973000000000865e-06, 5.138...</msg>
<status status="PASS" starttime="20201115 22:02:43.477" endtime="20201115 22:02:43.486"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:43.490" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201115 22:02:43.489" endtime="20201115 22:02:43.490"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:43.492" level="INFO">VALUE: [3.5550000000023063e-06, 5.417000000000616e-06, 6.555000000001837e-06, 3.208000000001071e-06, 5.986000000002961e-06, 5.917000000001116e-06, 5.847000000003266e-06, 3.973000000000865e-06, 5.1389999999977565e-06, 6.2090000000000756e-06, 5.528000000001171e-06, 4.000000000000531e-06, 2.79200000000146e-06, 4.610999999998117e-06, 5.999999999999062e-06, 6.2639999999988816e-06, 3.5689999999984068e-06, 6.277000000002447e-06, 3.804999999999087e-06, 2.7779999999984206e-06, 3.276999999999447e-06, 6.333000000000727e-06, 6.360999999999867e-06, 2.762999999999377e-06, 5.055999999999811e-06]</msg>
<status status="PASS" starttime="20201115 22:02:43.491" endtime="20201115 22:02:43.492"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.486" endtime="20201115 22:02:43.493"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:43.495" endtime="20201115 22:02:43.497"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:43.499" endtime="20201115 22:02:43.519"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.497" endtime="20201115 22:02:43.519"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.494" endtime="20201115 22:02:43.520"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.133" endtime="20201115 22:02:43.520"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.671" endtime="20201115 22:02:43.520"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:43.525" endtime="20201115 22:02:43.546"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.524" endtime="20201115 22:02:43.546"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.522" endtime="20201115 22:02:43.547"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:02:38.561" endtime="20201115 22:02:43.547" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:43.558" endtime="20201115 22:02:43.577"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.556" endtime="20201115 22:02:43.578"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:43.591" endtime="20201115 22:02:46.614"></status>
</kw>
<msg timestamp="20201115 22:02:46.615" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:43.590" endtime="20201115 22:02:46.616"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:46.621" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:46.618" endtime="20201115 22:02:46.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:02:46.627" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:02:46.623" endtime="20201115 22:02:46.628"></status>
</kw>
<status status="FAIL" starttime="20201115 22:02:43.587" endtime="20201115 22:02:46.629"></status>
</kw>
<status status="FAIL" starttime="20201115 22:02:43.584" endtime="20201115 22:02:46.631"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.583" endtime="20201115 22:02:46.631"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:02:46.639" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:02:46.638" endtime="20201115 22:02:46.640"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.633" endtime="20201115 22:02:46.641"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.582" endtime="20201115 22:02:46.642"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.582" endtime="20201115 22:02:46.642"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:46.644" endtime="20201115 22:02:46.647"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.580" endtime="20201115 22:02:46.648"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.578" endtime="20201115 22:02:46.649"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.555" endtime="20201115 22:02:46.650"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer Now Overhead</arg>
</arguments>
<msg timestamp="20201115 22:02:46.660" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:46.679" endtime="20201115 22:02:46.696"></status>
</kw>
<msg timestamp="20201115 22:02:46.697" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:46.676" endtime="20201115 22:02:46.697"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:46.702" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:46.699" endtime="20201115 22:02:46.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:46.704" endtime="20201115 22:02:46.706"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.668" endtime="20201115 22:02:46.706"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.664" endtime="20201115 22:02:46.707"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:46.713" endtime="20201115 22:02:47.013"></status>
</kw>
<msg timestamp="20201115 22:02:47.016" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.113382069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.113383708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:46.712" endtime="20201115 22:02:47.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:47.025" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.113382069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.113383708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:47.018" endtime="20201115 22:02:47.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:47.026" endtime="20201115 22:02:47.028"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.709" endtime="20201115 22:02:47.028"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.707" endtime="20201115 22:02:47.029"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:47.033" level="INFO">${RESULT} = [{'time': 3.113383708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.639000000164259e-06, 'source_diff': 1.639000000164259e-06}, {'time': 3.113388083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:47.030" endtime="20201115 22:02:47.033"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:47.047" level="INFO">${OVERHEAD} = {'diff': [1.639000000164259e-06, 1.6109999996238855e-06, 1.5420000001320489e-06, 1.6249999998940723e-06, 1.6249999998940723e-06, 1.6249999998940723e-06, 1.6110000000679747e-06, 1.6250000003381615e-06,...</msg>
<status status="PASS" starttime="20201115 22:02:47.034" endtime="20201115 22:02:47.048"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:47.052" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201115 22:02:47.051" endtime="20201115 22:02:47.052"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:47.054" level="INFO">VALUE: [1.639000000164259e-06, 1.6109999996238855e-06, 1.5420000001320489e-06, 1.6249999998940723e-06, 1.6249999998940723e-06, 1.6249999998940723e-06, 1.6110000000679747e-06, 1.6250000003381615e-06, 1.6249999998940723e-06, 1.639000000164259e-06, 1.639000000164259e-06, 1.6249999998940723e-06, 1.5970000002418772e-06, 1.6250000003381615e-06, 1.6110000000679747e-06, 1.6119999997066259e-06, 1.6110000000679747e-06, 1.6249999998940723e-06, 1.639000000164259e-06, 1.6110000000679747e-06, 1.6109999996238855e-06, 1.6110000000679747e-06, 1.6249999998940723e-06, 1.5829999999716904e-06, 1.6110000000679747e-06, 1.6110000000679747e-06, 1.639000000164259e-06, 1.6119999997066259e-06, 1.612000000150715e-06, 1.6249999998940723e-06, 1.5829999999716904e-06, 1.6110000000679747e-06, 1.6110000000679747e-06, 1.6249999998940723e-06, 1.6800000000039006e-06, 1.6110000000679747e-06, 1.6110000000679747e-06, 1.6109999996238855e-06, 1.6249999998940723e-06, 1.5970000002418772e-06, 1.6119999997066259e-06, 1.5970000002418772e-06, 1.6110000000679747e-06, 1.6379999996374295e-06, 1.639000000164259e-06, 1.5840000000544308e-06, 1.6250000003381615e-06, 1.6110000000679747e-06, 1.6110000000679747e-06, 1.639000000164259e-06]</msg>
<status status="PASS" starttime="20201115 22:02:47.053" endtime="20201115 22:02:47.055"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.048" endtime="20201115 22:02:47.056"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:47.058" endtime="20201115 22:02:47.059"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:47.062" endtime="20201115 22:02:47.081"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.060" endtime="20201115 22:02:47.082"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.056" endtime="20201115 22:02:47.082"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.661" endtime="20201115 22:02:47.083"></status>
</kw>
<msg timestamp="20201115 22:02:47.083" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:47.091" endtime="20201115 22:02:47.103"></status>
</kw>
<msg timestamp="20201115 22:02:47.104" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:47.089" endtime="20201115 22:02:47.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:47.106" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:47.105" endtime="20201115 22:02:47.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:47.108" endtime="20201115 22:02:47.109"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.087" endtime="20201115 22:02:47.110"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.085" endtime="20201115 22:02:47.110"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:47.117" endtime="20201115 22:02:47.404"></status>
</kw>
<msg timestamp="20201115 22:02:47.408" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019390194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019391806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:47.116" endtime="20201115 22:02:47.408"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:47.416" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019390194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019391806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:47.409" endtime="20201115 22:02:47.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:47.417" endtime="20201115 22:02:47.419"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.113" endtime="20201115 22:02:47.420"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.111" endtime="20201115 22:02:47.420"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:47.424" level="INFO">${RESULT} = [{'time': 0.019391806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6120000000015289e-06, 'source_diff': 1.6120000000015289e-06}, {'time': 0.019400139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:47.421" endtime="20201115 22:02:47.425"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:47.439" level="INFO">${OVERHEAD} = {'diff': [1.6120000000015289e-06, 1.6250000000016251e-06, 1.5559999999997798e-06, 1.6119999999980594e-06, 1.6249999999981557e-06, 1.6670000000003349e-06, 1.6110000000020552e-06, 1.6109999999985858e-06...</msg>
<status status="PASS" starttime="20201115 22:02:47.425" endtime="20201115 22:02:47.439"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:47.443" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201115 22:02:47.442" endtime="20201115 22:02:47.443"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:47.446" level="INFO">VALUE: [1.6120000000015289e-06, 1.6250000000016251e-06, 1.5559999999997798e-06, 1.6119999999980594e-06, 1.6249999999981557e-06, 1.6670000000003349e-06, 1.6110000000020552e-06, 1.6109999999985858e-06, 1.6249999999981557e-06, 1.6109999999985858e-06, 1.6250000000016251e-06, 1.6669999999968654e-06, 1.6250000000016251e-06, 1.6109999999985858e-06, 1.6249999999981557e-06, 1.6110000000020552e-06, 1.582999999999446e-06, 1.6110000000020552e-06, 1.5970000000024853e-06, 1.6250000000016251e-06, 1.6249999999981557e-06, 1.639000000001195e-06, 1.6110000000020552e-06, 1.6109999999985858e-06, 1.6249999999981557e-06, 1.6250000000016251e-06, 1.6669999999968654e-06, 1.6250000000016251e-06, 1.6250000000016251e-06, 1.6109999999985858e-06, 1.6389999999977256e-06, 1.639000000001195e-06, 1.6250000000016251e-06, 1.6109999999985858e-06, 1.639000000001195e-06, 1.6109999999985858e-06, 1.5979999999984895e-06, 1.6110000000020552e-06, 1.6249999999981557e-06, 1.6250000000016251e-06, 1.6119999999980594e-06, 1.582999999999446e-06, 1.6250000000016251e-06, 1.5970000000024853e-06, 1.5839999999989196e-06, 1.6250000000016251e-06, 1.6250000000016251e-06, 1.6249999999981557e-06, 1.6109999999985858e-06, 1.6250000000016251e-06]</msg>
<status status="PASS" starttime="20201115 22:02:47.444" endtime="20201115 22:02:47.446"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.439" endtime="20201115 22:02:47.447"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:47.449" endtime="20201115 22:02:47.451"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:47.453" endtime="20201115 22:02:47.472"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.451" endtime="20201115 22:02:47.473"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.448" endtime="20201115 22:02:47.473"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.083" endtime="20201115 22:02:47.474"></status>
</kw>
<msg timestamp="20201115 22:02:47.474" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:47.482" endtime="20201115 22:02:47.493"></status>
</kw>
<msg timestamp="20201115 22:02:47.494" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:47.480" endtime="20201115 22:02:47.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:47.496" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:47.495" endtime="20201115 22:02:47.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:47.497" endtime="20201115 22:02:47.499"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.478" endtime="20201115 22:02:47.500"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.476" endtime="20201115 22:02:47.500"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:47.508" endtime="20201115 22:02:47.792"></status>
</kw>
<msg timestamp="20201115 22:02:47.795" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018364208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018365792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:47.506" endtime="20201115 22:02:47.795"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:47.804" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018364208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018365792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:47.796" endtime="20201115 22:02:47.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:47.805" endtime="20201115 22:02:47.807"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.502" endtime="20201115 22:02:47.808"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.501" endtime="20201115 22:02:47.808"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:47.813" level="INFO">${RESULT} = [{'time': 0.018365792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5839999999989196e-06, 'source_diff': 1.5839999999989196e-06}, {'time': 0.018371319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:47.809" endtime="20201115 22:02:47.813"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:47.827" level="INFO">${OVERHEAD} = {'diff': [1.5839999999989196e-06, 1.6110000000020552e-06, 1.6659999999973918e-06, 1.6109999999985858e-06, 1.6249999999981557e-06, 1.5969999999990159e-06, 1.6389999999977256e-06, 1.582999999999446e-06,...</msg>
<status status="PASS" starttime="20201115 22:02:47.814" endtime="20201115 22:02:47.827"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:47.831" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201115 22:02:47.830" endtime="20201115 22:02:47.832"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:47.834" level="INFO">VALUE: [1.5839999999989196e-06, 1.6110000000020552e-06, 1.6659999999973918e-06, 1.6109999999985858e-06, 1.6249999999981557e-06, 1.5969999999990159e-06, 1.6389999999977256e-06, 1.582999999999446e-06, 1.6389999999977256e-06, 1.6250000000016251e-06, 1.6250000000016251e-06, 1.6110000000020552e-06, 1.6109999999985858e-06, 1.6110000000020552e-06, 1.5969999999990159e-06, 1.6110000000020552e-06, 1.6250000000016251e-06, 1.6109999999985858e-06, 1.6250000000016251e-06, 1.6670000000003349e-06, 1.6249999999981557e-06, 1.6109999999985858e-06, 1.6809999999999048e-06, 1.6520000000012913e-06, 1.6250000000016251e-06, 1.6109999999985858e-06, 1.582999999999446e-06, 1.6250000000016251e-06, 1.6249999999981557e-06, 1.6250000000016251e-06, 1.6120000000015289e-06, 1.6250000000016251e-06, 1.598000000001959e-06, 1.5970000000024853e-06, 1.6249999999981557e-06, 1.6250000000016251e-06, 1.6109999999985858e-06, 1.6109999999985858e-06, 1.5410000000007362e-06, 1.6109999999985858e-06, 1.6249999999981557e-06, 1.6109999999985858e-06, 1.582999999999446e-06, 1.6109999999985858e-06, 1.6250000000016251e-06, 1.6529999999972955e-06, 1.6109999999985858e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.6389999999977256e-06]</msg>
<status status="PASS" starttime="20201115 22:02:47.833" endtime="20201115 22:02:47.835"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.828" endtime="20201115 22:02:47.836"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:47.838" endtime="20201115 22:02:47.839"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:47.841" endtime="20201115 22:02:47.861"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.840" endtime="20201115 22:02:47.862"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.836" endtime="20201115 22:02:47.862"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.475" endtime="20201115 22:02:47.862"></status>
</kw>
<msg timestamp="20201115 22:02:47.863" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:47.871" endtime="20201115 22:02:47.882"></status>
</kw>
<msg timestamp="20201115 22:02:47.883" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:47.869" endtime="20201115 22:02:47.883"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:47.885" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:47.884" endtime="20201115 22:02:47.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:47.886" endtime="20201115 22:02:47.888"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.866" endtime="20201115 22:02:47.889"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.864" endtime="20201115 22:02:47.889"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:47.897" endtime="20201115 22:02:48.182"></status>
</kw>
<msg timestamp="20201115 22:02:48.185" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018398306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018399931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:47.894" endtime="20201115 22:02:48.185"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:48.194" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018398306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018399931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:48.186" endtime="20201115 22:02:48.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:48.195" endtime="20201115 22:02:48.197"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.891" endtime="20201115 22:02:48.197"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.890" endtime="20201115 22:02:48.198"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:48.202" level="INFO">${RESULT} = [{'time': 0.018399931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6250000000016251e-06, 'source_diff': 1.6250000000016251e-06}, {'time': 0.018403736, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:48.198" endtime="20201115 22:02:48.202"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:48.217" level="INFO">${OVERHEAD} = {'diff': [1.6250000000016251e-06, 1.639000000001195e-06, 1.6520000000012913e-06, 1.6249999999981557e-06, 1.568999999999876e-06, 1.6120000000015289e-06, 1.5979999999984895e-06, 1.6109999999985858e-06, ...</msg>
<status status="PASS" starttime="20201115 22:02:48.203" endtime="20201115 22:02:48.217"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:48.221" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201115 22:02:48.220" endtime="20201115 22:02:48.222"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:48.224" level="INFO">VALUE: [1.6250000000016251e-06, 1.639000000001195e-06, 1.6520000000012913e-06, 1.6249999999981557e-06, 1.568999999999876e-06, 1.6120000000015289e-06, 1.5979999999984895e-06, 1.6109999999985858e-06, 1.5969999999990159e-06, 1.6250000000016251e-06, 1.6109999999985858e-06, 1.6110000000020552e-06, 1.6250000000016251e-06, 1.6250000000016251e-06, 1.6110000000020552e-06, 1.6109999999985858e-06, 1.5420000000002099e-06, 1.6250000000016251e-06, 1.6250000000016251e-06, 1.5699999999993497e-06, 1.5970000000024853e-06, 1.6109999999985858e-06, 1.6109999999985858e-06, 1.6249999999981557e-06, 1.598000000001959e-06, 1.584000000002389e-06, 1.6109999999985858e-06, 1.6249999999981557e-06, 1.6110000000020552e-06, 1.6250000000016251e-06, 1.582999999999446e-06, 1.6109999999985858e-06, 1.6109999999985858e-06, 1.6110000000020552e-06, 1.6120000000015289e-06, 1.6249999999981557e-06, 1.6809999999999048e-06, 1.5559999999997798e-06, 1.6110000000020552e-06, 1.6249999999981557e-06, 1.6250000000016251e-06, 1.6249999999981557e-06, 1.582999999999446e-06, 1.6110000000020552e-06, 1.6250000000016251e-06, 1.6110000000020552e-06, 1.6249999999981557e-06, 1.6110000000020552e-06, 1.6249999999981557e-06, 1.6249999999981557e-06]</msg>
<status status="PASS" starttime="20201115 22:02:48.223" endtime="20201115 22:02:48.225"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.218" endtime="20201115 22:02:48.225"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:48.228" endtime="20201115 22:02:48.229"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:48.231" endtime="20201115 22:02:48.251"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.230" endtime="20201115 22:02:48.251"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.226" endtime="20201115 22:02:48.252"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.863" endtime="20201115 22:02:48.252"></status>
</kw>
<msg timestamp="20201115 22:02:48.252" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:48.261" endtime="20201115 22:02:48.274"></status>
</kw>
<msg timestamp="20201115 22:02:48.274" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:48.259" endtime="20201115 22:02:48.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:48.277" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:48.275" endtime="20201115 22:02:48.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:48.278" endtime="20201115 22:02:48.279"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.256" endtime="20201115 22:02:48.280"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.254" endtime="20201115 22:02:48.280"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:48.287" endtime="20201115 22:02:48.577"></status>
</kw>
<msg timestamp="20201115 22:02:48.580" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018527167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018528778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:48.286" endtime="20201115 22:02:48.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:48.589" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018527167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018528778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:48.581" endtime="20201115 22:02:48.589"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:48.590" endtime="20201115 22:02:48.592"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.283" endtime="20201115 22:02:48.592"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.281" endtime="20201115 22:02:48.593"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:48.597" level="INFO">${RESULT} = [{'time': 0.018528778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6109999999985858e-06, 'source_diff': 1.6109999999985858e-06}, {'time': 0.018533236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:48.594" endtime="20201115 22:02:48.597"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:48.611" level="INFO">${OVERHEAD} = {'diff': [1.6109999999985858e-06, 1.6110000000020552e-06, 1.5839999999989196e-06, 1.639000000001195e-06, 1.6249999999981557e-06, 1.5269999999976969e-06, 1.6249999999981557e-06, 1.6110000000020552e-06,...</msg>
<status status="PASS" starttime="20201115 22:02:48.598" endtime="20201115 22:02:48.611"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:48.616" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201115 22:02:48.615" endtime="20201115 22:02:48.616"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:48.618" level="INFO">VALUE: [1.6109999999985858e-06, 1.6110000000020552e-06, 1.5839999999989196e-06, 1.639000000001195e-06, 1.6249999999981557e-06, 1.5269999999976969e-06, 1.6249999999981557e-06, 1.6110000000020552e-06, 1.584000000002389e-06, 1.6249999999981557e-06, 1.6250000000016251e-06, 1.6119999999980594e-06, 1.5969999999990159e-06, 1.6110000000020552e-06, 1.5969999999990159e-06, 1.6250000000016251e-06, 1.6120000000015289e-06, 1.6109999999985858e-06, 1.6249999999981557e-06, 1.6250000000016251e-06, 1.6109999999985858e-06, 1.6109999999985858e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.5969999999990159e-06, 1.6109999999985858e-06, 1.6110000000020552e-06, 1.653000000000765e-06, 1.6249999999981557e-06, 1.6809999999999048e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6109999999985858e-06, 1.6110000000020552e-06, 1.6250000000016251e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6250000000016251e-06, 1.6249999999981557e-06, 1.6109999999985858e-06, 1.6250000000016251e-06, 1.6109999999985858e-06, 1.6249999999981557e-06, 1.639000000001195e-06, 1.6670000000003349e-06, 1.6250000000016251e-06, 1.6660000000008612e-06, 1.6109999999985858e-06, 1.6250000000016251e-06]</msg>
<status status="PASS" starttime="20201115 22:02:48.617" endtime="20201115 22:02:48.623"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.612" endtime="20201115 22:02:48.624"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:48.627" endtime="20201115 22:02:48.628"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:48.630" endtime="20201115 22:02:48.650"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.629" endtime="20201115 22:02:48.650"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.625" endtime="20201115 22:02:48.651"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.253" endtime="20201115 22:02:48.651"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.657" endtime="20201115 22:02:48.651"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:48.656" endtime="20201115 22:02:48.676"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.655" endtime="20201115 22:02:48.677"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.653" endtime="20201115 22:02:48.677"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:02:43.551" endtime="20201115 22:02:48.677" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set List">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:48.687" endtime="20201115 22:02:48.706"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.685" endtime="20201115 22:02:48.707"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:48.721" endtime="20201115 22:02:51.744"></status>
</kw>
<msg timestamp="20201115 22:02:51.745" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:48.719" endtime="20201115 22:02:51.745"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:51.750" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:51.747" endtime="20201115 22:02:51.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:02:51.757" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:02:51.753" endtime="20201115 22:02:51.758"></status>
</kw>
<status status="FAIL" starttime="20201115 22:02:48.716" endtime="20201115 22:02:51.759"></status>
</kw>
<status status="FAIL" starttime="20201115 22:02:48.713" endtime="20201115 22:02:51.761"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.712" endtime="20201115 22:02:51.761"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:02:51.769" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:02:51.768" endtime="20201115 22:02:51.770"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.763" endtime="20201115 22:02:51.771"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.711" endtime="20201115 22:02:51.771"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.711" endtime="20201115 22:02:51.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:51.773" endtime="20201115 22:02:51.776"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.709" endtime="20201115 22:02:51.778"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.707" endtime="20201115 22:02:51.779"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.683" endtime="20201115 22:02:51.779"></status>
</kw>
<kw name="${n} IN RANGE [ 25 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:51.789" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:51.809" endtime="20201115 22:02:51.826"></status>
</kw>
<msg timestamp="20201115 22:02:51.827" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:51.806" endtime="20201115 22:02:51.827"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:51.832" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:51.829" endtime="20201115 22:02:51.833"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:51.835" endtime="20201115 22:02:51.838"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.799" endtime="20201115 22:02:51.839"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.794" endtime="20201115 22:02:51.840"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:51.855" endtime="20201115 22:02:52.156"></status>
</kw>
<msg timestamp="20201115 22:02:52.159" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.114534431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.114539403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:51.851" endtime="20201115 22:02:52.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:52.168" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.114534431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.114539403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:52.160" endtime="20201115 22:02:52.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:52.169" endtime="20201115 22:02:52.171"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.846" endtime="20201115 22:02:52.171"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.842" endtime="20201115 22:02:52.172"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:52.176" level="INFO">${RESULT} = [{'time': 3.114539403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.972000000158516e-06, 'source_diff': 4.972000000158516e-06}, {'time': 3.114603528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:52.172" endtime="20201115 22:02:52.176"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:52.190" level="INFO">${OVERHEAD} = {'diff': [4.972000000158516e-06, 5.05600000000328e-06, 5.05600000000328e-06, 5.069999999829378e-06, 5.069999999829378e-06, 5.027999999906996e-06, 5.040999999650353e-06, 5.069999999829378e-06, 4.999999...</msg>
<status status="PASS" starttime="20201115 22:02:52.177" endtime="20201115 22:02:52.190"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:52.195" level="INFO">NAME: 00-overhead-1-set</msg>
<status status="PASS" starttime="20201115 22:02:52.194" endtime="20201115 22:02:52.195"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:52.197" level="INFO">VALUE: [4.972000000158516e-06, 5.05600000000328e-06, 5.05600000000328e-06, 5.069999999829378e-06, 5.069999999829378e-06, 5.027999999906996e-06, 5.040999999650353e-06, 5.069999999829378e-06, 4.999999999810711e-06, 4.985999999984614e-06, 5.111000000113108e-06, 5.068999999746637e-06, 5.05499999992054e-06, 5.068999999746637e-06, 5.028000000351085e-06, 5.05600000000328e-06, 5.0420000001771825e-06, 5.014000000080898e-06, 5.05600000000328e-06, 5.05499999992054e-06, 5.0690000001907265e-06, 5.014000000080898e-06, 5.070000000273467e-06, 5.068999999746637e-06, 5.070000000273467e-06, 5.0420000001771825e-06, 5.0690000001907265e-06, 5.05499999992054e-06, 5.068999999746637e-06, 5.0690000001907265e-06, 5.0690000001907265e-06, 5.05499999992054e-06, 5.069999999829378e-06, 4.999999999810711e-06, 5.05499999992054e-06, 5.055000000364629e-06, 5.05499999992054e-06, 5.0840000000995644e-06, 5.0690000001907265e-06, 5.069999999829378e-06, 5.0420000001771825e-06, 5.055000000364629e-06, 5.083000000016824e-06, 5.041000000094442e-06, 5.068999999746637e-06, 5.040999999650353e-06, 5.05600000000328e-06, 4.985999999984614e-06, 5.083000000016824e-06, 5.05600000000328e-06]</msg>
<status status="PASS" starttime="20201115 22:02:52.196" endtime="20201115 22:02:52.198"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.191" endtime="20201115 22:02:52.198"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:52.200" endtime="20201115 22:02:52.202"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:52.204" endtime="20201115 22:02:52.224"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.202" endtime="20201115 22:02:52.224"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.199" endtime="20201115 22:02:52.225"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.790" endtime="20201115 22:02:52.225"></status>
</kw>
<msg timestamp="20201115 22:02:52.226" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:52.235" endtime="20201115 22:02:52.248"></status>
</kw>
<msg timestamp="20201115 22:02:52.248" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:52.233" endtime="20201115 22:02:52.249"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:52.251" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:52.249" endtime="20201115 22:02:52.251"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:52.252" endtime="20201115 22:02:52.254"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.231" endtime="20201115 22:02:52.254"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.228" endtime="20201115 22:02:52.255"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:52.261" endtime="20201115 22:02:52.548"></status>
</kw>
<msg timestamp="20201115 22:02:52.551" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020793708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020798764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:52.260" endtime="20201115 22:02:52.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:52.560" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020793708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020798764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:52.552" endtime="20201115 22:02:52.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:52.561" endtime="20201115 22:02:52.562"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.257" endtime="20201115 22:02:52.563"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.255" endtime="20201115 22:02:52.563"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:52.568" level="INFO">${RESULT} = [{'time': 0.020798764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.055999999999811e-06, 'source_diff': 5.055999999999811e-06}, {'time': 0.020862042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:52.564" endtime="20201115 22:02:52.568"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:52.582" level="INFO">${OVERHEAD} = {'diff': [5.055999999999811e-06, 5.0699999999993806e-06, 5.055999999999811e-06, 5.042000000000241e-06, 5.042000000000241e-06, 5.055000000000337e-06, 4.971999999998922e-06, 5.07000000000285e-06, 5.0550...</msg>
<status status="PASS" starttime="20201115 22:02:52.569" endtime="20201115 22:02:52.582"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:52.587" level="INFO">NAME: 00-overhead-1-set</msg>
<status status="PASS" starttime="20201115 22:02:52.585" endtime="20201115 22:02:52.587"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:52.589" level="INFO">VALUE: [5.055999999999811e-06, 5.0699999999993806e-06, 5.055999999999811e-06, 5.042000000000241e-06, 5.042000000000241e-06, 5.055000000000337e-06, 4.971999999998922e-06, 5.07000000000285e-06, 5.055000000000337e-06, 5.055999999999811e-06, 5.0699999999993806e-06, 5.0699999999993806e-06, 5.055999999999811e-06, 5.1249999999981866e-06, 5.0699999999993806e-06, 5.027999999997201e-06, 5.042000000000241e-06, 5.055999999999811e-06, 5.082999999999477e-06, 5.042000000000241e-06, 5.0699999999993806e-06, 5.042000000000241e-06, 5.055999999999811e-06, 5.082999999999477e-06, 5.068999999999907e-06, 5.068999999999907e-06, 5.055000000000337e-06, 5.055999999999811e-06, 5.083000000002946e-06, 5.055999999999811e-06, 5.055000000000337e-06, 5.07000000000285e-06, 5.0699999999993806e-06, 5.055999999999811e-06, 5.042000000000241e-06, 5.068999999999907e-06, 5.055999999999811e-06, 5.05600000000328e-06, 5.0549999999968676e-06, 5.068999999999907e-06, 5.014000000001101e-06, 5.068999999999907e-06, 5.082999999999477e-06, 5.042000000000241e-06, 5.055999999999811e-06, 5.042000000000241e-06, 5.0699999999993806e-06, 5.082999999999477e-06, 5.055000000000337e-06, 5.055000000000337e-06]</msg>
<status status="PASS" starttime="20201115 22:02:52.588" endtime="20201115 22:02:52.589"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.583" endtime="20201115 22:02:52.590"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:52.593" endtime="20201115 22:02:52.594"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:52.597" endtime="20201115 22:02:52.616"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.595" endtime="20201115 22:02:52.617"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.591" endtime="20201115 22:02:52.617"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.226" endtime="20201115 22:02:52.618"></status>
</kw>
<msg timestamp="20201115 22:02:52.618" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:52.627" endtime="20201115 22:02:52.641"></status>
</kw>
<msg timestamp="20201115 22:02:52.641" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:52.625" endtime="20201115 22:02:52.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:52.644" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:52.642" endtime="20201115 22:02:52.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:52.645" endtime="20201115 22:02:52.647"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.623" endtime="20201115 22:02:52.647"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.620" endtime="20201115 22:02:52.648"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:52.654" endtime="20201115 22:02:52.944"></status>
</kw>
<msg timestamp="20201115 22:02:52.947" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020238125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020243222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:52.653" endtime="20201115 22:02:52.947"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:52.956" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020238125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020243222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:52.948" endtime="20201115 22:02:52.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:52.957" endtime="20201115 22:02:52.959"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.650" endtime="20201115 22:02:52.959"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.648" endtime="20201115 22:02:52.960"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:52.964" level="INFO">${RESULT} = [{'time': 0.020243222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.097000000002516e-06, 'source_diff': 5.097000000002516e-06}, {'time': 0.020303958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:52.960" endtime="20201115 22:02:52.964"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:52.978" level="INFO">${OVERHEAD} = {'diff': [5.097000000002516e-06, 5.068999999999907e-06, 5.027000000001197e-06, 5.055000000000337e-06, 5.0549999999968676e-06, 5.055000000000337e-06, 5.068999999999907e-06, 5.0839999999989505e-06, 5.04...</msg>
<status status="PASS" starttime="20201115 22:02:52.965" endtime="20201115 22:02:52.978"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:52.983" level="INFO">NAME: 00-overhead-1-set</msg>
<status status="PASS" starttime="20201115 22:02:52.981" endtime="20201115 22:02:52.983"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:52.985" level="INFO">VALUE: [5.097000000002516e-06, 5.068999999999907e-06, 5.027000000001197e-06, 5.055000000000337e-06, 5.0549999999968676e-06, 5.055000000000337e-06, 5.068999999999907e-06, 5.0839999999989505e-06, 5.042000000000241e-06, 5.041000000000767e-06, 5.068999999999907e-06, 5.055999999999811e-06, 5.055000000000337e-06, 5.055999999999811e-06, 5.055999999999811e-06, 5.055999999999811e-06, 5.0839999999989505e-06, 5.068999999999907e-06, 5.042000000000241e-06, 5.068999999999907e-06, 5.028000000000671e-06, 5.0699999999993806e-06, 5.055999999999811e-06, 5.055999999999811e-06, 5.055000000000337e-06, 5.068999999999907e-06, 5.055000000000337e-06, 5.055000000000337e-06, 5.055999999999811e-06, 5.042000000000241e-06, 5.055000000000337e-06, 5.013000000001627e-06, 5.082999999999477e-06, 5.055999999999811e-06, 5.0699999999993806e-06, 5.068999999999907e-06, 5.055999999999811e-06, 5.055999999999811e-06, 5.0139999999976315e-06, 5.0699999999993806e-06, 5.068999999999907e-06, 5.041000000000767e-06, 5.041000000000767e-06, 5.068999999999907e-06, 5.055999999999811e-06, 5.0699999999993806e-06, 5.055999999999811e-06, 5.041999999996771e-06, 5.082999999999477e-06, 5.042000000000241e-06]</msg>
<status status="PASS" starttime="20201115 22:02:52.984" endtime="20201115 22:02:52.986"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.979" endtime="20201115 22:02:52.987"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:52.989" endtime="20201115 22:02:52.990"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:52.993" endtime="20201115 22:02:53.012"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.991" endtime="20201115 22:02:53.013"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.987" endtime="20201115 22:02:53.013"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.618" endtime="20201115 22:02:53.014"></status>
</kw>
<msg timestamp="20201115 22:02:53.014" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:53.023" endtime="20201115 22:02:53.034"></status>
</kw>
<msg timestamp="20201115 22:02:53.035" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:53.022" endtime="20201115 22:02:53.035"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:53.037" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:53.036" endtime="20201115 22:02:53.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:53.039" endtime="20201115 22:02:53.040"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.019" endtime="20201115 22:02:53.041"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.017" endtime="20201115 22:02:53.041"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:53.048" endtime="20201115 22:02:53.335"></status>
</kw>
<msg timestamp="20201115 22:02:53.338" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020417347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020422417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:53.046" endtime="20201115 22:02:53.338"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:53.346" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020417347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020422417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:53.339" endtime="20201115 22:02:53.347"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:53.348" endtime="20201115 22:02:53.349"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.044" endtime="20201115 22:02:53.350"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.042" endtime="20201115 22:02:53.350"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:53.355" level="INFO">${RESULT} = [{'time': 0.020422417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.0699999999993806e-06, 'source_diff': 5.0699999999993806e-06}, {'time': 0.020486097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:53.351" endtime="20201115 22:02:53.355"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:53.369" level="INFO">${OVERHEAD} = {'diff': [5.0699999999993806e-06, 5.055000000000337e-06, 5.0699999999993806e-06, 5.082999999999477e-06, 5.014000000001101e-06, 5.055000000000337e-06, 5.068999999999907e-06, 5.082999999999477e-06, 5.07...</msg>
<status status="PASS" starttime="20201115 22:02:53.356" endtime="20201115 22:02:53.369"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:53.373" level="INFO">NAME: 00-overhead-1-set</msg>
<status status="PASS" starttime="20201115 22:02:53.372" endtime="20201115 22:02:53.374"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:53.376" level="INFO">VALUE: [5.0699999999993806e-06, 5.055000000000337e-06, 5.0699999999993806e-06, 5.082999999999477e-06, 5.014000000001101e-06, 5.055000000000337e-06, 5.068999999999907e-06, 5.082999999999477e-06, 5.07000000000285e-06, 5.0699999999993806e-06, 5.05600000000328e-06, 5.0699999999993806e-06, 5.042000000000241e-06, 5.0699999999993806e-06, 5.012999999998158e-06, 5.055000000000337e-06, 5.068999999999907e-06, 5.055999999999811e-06, 5.055999999999811e-06, 5.05600000000328e-06, 5.055999999999811e-06, 5.041000000000767e-06, 5.055000000000337e-06, 5.068999999999907e-06, 5.0699999999993806e-06, 5.0699999999993806e-06, 5.068999999999907e-06, 5.068999999999907e-06, 5.055999999999811e-06, 5.055999999999811e-06, 5.111000000002086e-06, 5.055000000000337e-06, 5.041000000000767e-06, 5.055999999999811e-06, 5.055000000000337e-06, 5.055999999999811e-06, 5.125000000001656e-06, 5.082999999999477e-06, 5.042000000000241e-06, 5.055999999999811e-06, 4.9999999999980616e-06, 5.055999999999811e-06, 5.096999999999047e-06, 5.042000000000241e-06, 5.0699999999993806e-06, 5.068999999999907e-06, 5.055999999999811e-06, 5.08400000000242e-06, 5.028000000000671e-06, 5.055000000000337e-06]</msg>
<status status="PASS" starttime="20201115 22:02:53.374" endtime="20201115 22:02:53.377"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.370" endtime="20201115 22:02:53.377"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:53.380" endtime="20201115 22:02:53.381"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:53.383" endtime="20201115 22:02:53.403"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.382" endtime="20201115 22:02:53.403"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.378" endtime="20201115 22:02:53.404"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.014" endtime="20201115 22:02:53.404"></status>
</kw>
<msg timestamp="20201115 22:02:53.404" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:53.413" endtime="20201115 22:02:53.427"></status>
</kw>
<msg timestamp="20201115 22:02:53.428" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:53.412" endtime="20201115 22:02:53.428"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:53.430" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:53.429" endtime="20201115 22:02:53.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:53.431" endtime="20201115 22:02:53.433"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.409" endtime="20201115 22:02:53.434"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.407" endtime="20201115 22:02:53.434"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:53.441" endtime="20201115 22:02:53.727"></status>
</kw>
<msg timestamp="20201115 22:02:53.730" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020283681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020288736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:53.439" endtime="20201115 22:02:53.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:53.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020283681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020288736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:53.732" endtime="20201115 22:02:53.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:53.740" endtime="20201115 22:02:53.742"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.437" endtime="20201115 22:02:53.742"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.435" endtime="20201115 22:02:53.743"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:53.747" level="INFO">${RESULT} = [{'time': 0.020288736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.055000000000337e-06, 'source_diff': 5.055000000000337e-06}, {'time': 0.020350222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:53.744" endtime="20201115 22:02:53.747"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:53.761" level="INFO">${OVERHEAD} = {'diff': [5.055000000000337e-06, 5.068999999999907e-06, 5.014000000001101e-06, 5.068999999999907e-06, 5.082999999999477e-06, 5.083000000002946e-06, 5.0699999999993806e-06, 5.042000000000241e-06, 5.082...</msg>
<status status="PASS" starttime="20201115 22:02:53.748" endtime="20201115 22:02:53.761"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:53.766" level="INFO">NAME: 00-overhead-1-set</msg>
<status status="PASS" starttime="20201115 22:02:53.765" endtime="20201115 22:02:53.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:53.769" level="INFO">VALUE: [5.055000000000337e-06, 5.068999999999907e-06, 5.014000000001101e-06, 5.068999999999907e-06, 5.082999999999477e-06, 5.083000000002946e-06, 5.0699999999993806e-06, 5.042000000000241e-06, 5.082999999999477e-06, 5.096999999999047e-06, 5.042000000000241e-06, 5.082999999999477e-06, 5.0699999999993806e-06, 5.068999999999907e-06, 5.041000000000767e-06, 5.028000000000671e-06, 5.0839999999989505e-06, 5.055000000000337e-06, 5.068999999999907e-06, 5.055999999999811e-06, 5.041000000000767e-06, 5.055000000000337e-06, 5.028000000000671e-06, 5.055000000000337e-06, 5.05600000000328e-06, 5.110999999998617e-06, 5.068999999999907e-06, 5.07000000000285e-06, 5.0699999999993806e-06, 5.07000000000285e-06, 5.055999999999811e-06, 5.055999999999811e-06, 5.0699999999993806e-06, 5.068999999999907e-06, 5.040999999997298e-06, 5.068999999999907e-06, 5.055000000000337e-06, 5.055999999999811e-06, 5.042000000000241e-06, 5.07000000000285e-06, 5.068999999999907e-06, 5.07000000000285e-06, 5.068999999999907e-06, 5.08400000000242e-06, 5.055000000000337e-06, 5.055999999999811e-06, 5.055999999999811e-06, 5.068999999999907e-06, 5.0699999999993806e-06, 5.068999999999907e-06]</msg>
<status status="PASS" starttime="20201115 22:02:53.767" endtime="20201115 22:02:53.773"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.762" endtime="20201115 22:02:53.774"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:53.777" endtime="20201115 22:02:53.778"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:53.780" endtime="20201115 22:02:53.800"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.779" endtime="20201115 22:02:53.800"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.775" endtime="20201115 22:02:53.801"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.405" endtime="20201115 22:02:53.801"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.786" endtime="20201115 22:02:53.801"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.783" endtime="20201115 22:02:53.802"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:53.804" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:53.813" endtime="20201115 22:02:53.824"></status>
</kw>
<msg timestamp="20201115 22:02:53.825" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:53.811" endtime="20201115 22:02:53.825"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:53.827" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:53.826" endtime="20201115 22:02:53.828"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:53.829" endtime="20201115 22:02:53.830"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.809" endtime="20201115 22:02:53.831"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.807" endtime="20201115 22:02:53.831"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:53.838" endtime="20201115 22:02:54.125"></status>
</kw>
<msg timestamp="20201115 22:02:54.128" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022777819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022782431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:53.836" endtime="20201115 22:02:54.129"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:54.137" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022777819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022782431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:54.130" endtime="20201115 22:02:54.137"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:54.138" endtime="20201115 22:02:54.140"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.834" endtime="20201115 22:02:54.140"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.832" endtime="20201115 22:02:54.141"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:54.145" level="INFO">${RESULT} = [{'time': 0.022782431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.61199999999759e-06, 'source_diff': 4.61199999999759e-06}, {'time': 0.022847583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:02:54.141" endtime="20201115 22:02:54.145"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:54.159" level="INFO">${OVERHEAD} = {'diff': [4.61199999999759e-06, 4.652000000000822e-06, 4.666000000000392e-06, 4.653000000000296e-06, 4.5839999999984504e-06, 4.652000000000822e-06, 4.652000000000822e-06, 4.637999999997783e-06, 4.6530...</msg>
<status status="PASS" starttime="20201115 22:02:54.146" endtime="20201115 22:02:54.159"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:54.164" level="INFO">NAME: 00-overhead-2-set</msg>
<status status="PASS" starttime="20201115 22:02:54.163" endtime="20201115 22:02:54.164"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:54.167" level="INFO">VALUE: [4.61199999999759e-06, 4.652000000000822e-06, 4.666000000000392e-06, 4.653000000000296e-06, 4.5839999999984504e-06, 4.652000000000822e-06, 4.652000000000822e-06, 4.637999999997783e-06, 4.653000000000296e-06, 4.666000000000392e-06, 4.610999999998117e-06, 4.652999999996826e-06, 4.639000000000726e-06, 4.666999999999866e-06, 4.653000000000296e-06, 4.653000000000296e-06, 4.709000000002045e-06, 4.693999999999532e-06, 4.652000000000822e-06, 4.653000000000296e-06, 4.666999999999866e-06, 4.653000000000296e-06, 4.652000000000822e-06, 4.653000000000296e-06, 4.639000000000726e-06, 4.6249999999976865e-06, 4.652999999996826e-06, 4.639000000000726e-06, 4.639000000000726e-06, 4.6389999999972564e-06, 4.639000000000726e-06, 4.652000000000822e-06, 4.666999999999866e-06, 4.666999999999866e-06, 4.625000000001156e-06, 4.666999999999866e-06, 4.639000000000726e-06, 4.653000000000296e-06, 4.653000000000296e-06, 4.653000000000296e-06, 4.653000000000296e-06, 4.652000000000822e-06, 4.639000000000726e-06, 4.666999999999866e-06, 4.639000000000726e-06, 4.666000000000392e-06, 4.721999999998672e-06, 4.653000000000296e-06, 4.666999999999866e-06, 4.639000000000726e-06]</msg>
<status status="PASS" starttime="20201115 22:02:54.165" endtime="20201115 22:02:54.167"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.160" endtime="20201115 22:02:54.168"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:54.170" endtime="20201115 22:02:54.171"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:54.174" endtime="20201115 22:02:54.193"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.172" endtime="20201115 22:02:54.194"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.168" endtime="20201115 22:02:54.194"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.804" endtime="20201115 22:02:54.195"></status>
</kw>
<msg timestamp="20201115 22:02:54.195" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:54.204" endtime="20201115 22:02:54.218"></status>
</kw>
<msg timestamp="20201115 22:02:54.218" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:54.203" endtime="20201115 22:02:54.218"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:54.221" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:54.219" endtime="20201115 22:02:54.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:54.222" endtime="20201115 22:02:54.223"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.200" endtime="20201115 22:02:54.224"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.198" endtime="20201115 22:02:54.224"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:54.231" endtime="20201115 22:02:54.520"></status>
</kw>
<msg timestamp="20201115 22:02:54.523" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020481653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020486292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:54.230" endtime="20201115 22:02:54.523"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:54.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020481653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020486292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:54.524" endtime="20201115 22:02:54.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:54.532" endtime="20201115 22:02:54.534"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.227" endtime="20201115 22:02:54.535"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.225" endtime="20201115 22:02:54.535"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:54.539" level="INFO">${RESULT} = [{'time': 0.020486292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.639000000000726e-06, 'source_diff': 4.639000000000726e-06}, {'time': 0.020553181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:54.536" endtime="20201115 22:02:54.540"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:54.553" level="INFO">${OVERHEAD} = {'diff': [4.639000000000726e-06, 4.666999999999866e-06, 4.639000000000726e-06, 4.653000000000296e-06, 4.666000000000392e-06, 4.653000000000296e-06, 4.680999999999436e-06, 4.6389999999972564e-06, 4.653...</msg>
<status status="PASS" starttime="20201115 22:02:54.540" endtime="20201115 22:02:54.554"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:54.559" level="INFO">NAME: 00-overhead-2-set</msg>
<status status="PASS" starttime="20201115 22:02:54.557" endtime="20201115 22:02:54.559"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:54.561" level="INFO">VALUE: [4.639000000000726e-06, 4.666999999999866e-06, 4.639000000000726e-06, 4.653000000000296e-06, 4.666000000000392e-06, 4.653000000000296e-06, 4.680999999999436e-06, 4.6389999999972564e-06, 4.653000000000296e-06, 4.653000000000296e-06, 4.666000000000392e-06, 4.639000000000726e-06, 4.653000000000296e-06, 4.653000000000296e-06, 4.652000000000822e-06, 4.653000000000296e-06, 4.639000000000726e-06, 4.639000000000726e-06, 4.666999999999866e-06, 4.639000000000726e-06, 4.639000000000726e-06, 4.639000000000726e-06, 4.666000000000392e-06, 4.666000000000392e-06, 4.597000000002016e-06, 4.6389999999972564e-06, 4.666999999999866e-06, 4.666999999999866e-06, 4.611000000001586e-06, 4.666000000000392e-06, 4.653000000000296e-06, 4.666000000000392e-06, 4.653000000000296e-06, 4.653000000000296e-06, 4.666000000000392e-06, 4.652999999996826e-06, 4.680999999999436e-06, 4.666999999999866e-06, 4.652000000000822e-06, 4.666999999999866e-06, 4.610999999998117e-06, 4.596999999998547e-06, 4.6389999999972564e-06, 4.653000000000296e-06, 4.653000000000296e-06, 4.582999999998977e-06, 4.639000000000726e-06, 4.653000000000296e-06, 4.695000000002475e-06, 4.652000000000822e-06]</msg>
<status status="PASS" starttime="20201115 22:02:54.560" endtime="20201115 22:02:54.561"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.555" endtime="20201115 22:02:54.562"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:54.564" endtime="20201115 22:02:54.566"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:54.568" endtime="20201115 22:02:54.587"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.566" endtime="20201115 22:02:54.588"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.563" endtime="20201115 22:02:54.588"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.195" endtime="20201115 22:02:54.589"></status>
</kw>
<msg timestamp="20201115 22:02:54.589" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:54.598" endtime="20201115 22:02:54.611"></status>
</kw>
<msg timestamp="20201115 22:02:54.611" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:54.597" endtime="20201115 22:02:54.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:54.614" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:54.612" endtime="20201115 22:02:54.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:54.615" endtime="20201115 22:02:54.617"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.594" endtime="20201115 22:02:54.617"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.592" endtime="20201115 22:02:54.618"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:54.624" endtime="20201115 22:02:54.911"></status>
</kw>
<msg timestamp="20201115 22:02:54.914" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020685944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020690583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:54.623" endtime="20201115 22:02:54.914"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:54.922" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020685944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020690583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:54.915" endtime="20201115 22:02:54.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:54.923" endtime="20201115 22:02:54.925"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.620" endtime="20201115 22:02:54.926"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.618" endtime="20201115 22:02:54.926"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:54.930" level="INFO">${RESULT} = [{'time': 0.020690583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.6389999999972564e-06, 'source_diff': 4.6389999999972564e-06}, {'time': 0.020757111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:54.927" endtime="20201115 22:02:54.931"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:54.945" level="INFO">${OVERHEAD} = {'diff': [4.6389999999972564e-06, 4.667000000003335e-06, 4.639000000000726e-06, 4.666000000000392e-06, 4.652000000000822e-06, 4.6949999999990055e-06, 4.652999999996826e-06, 4.610999999998117e-06, 4.63...</msg>
<status status="PASS" starttime="20201115 22:02:54.932" endtime="20201115 22:02:54.945"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:54.950" level="INFO">NAME: 00-overhead-2-set</msg>
<status status="PASS" starttime="20201115 22:02:54.949" endtime="20201115 22:02:54.951"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:54.953" level="INFO">VALUE: [4.6389999999972564e-06, 4.667000000003335e-06, 4.639000000000726e-06, 4.666000000000392e-06, 4.652000000000822e-06, 4.6949999999990055e-06, 4.652999999996826e-06, 4.610999999998117e-06, 4.639000000000726e-06, 4.652999999996826e-06, 4.653000000000296e-06, 4.639000000000726e-06, 4.652000000000822e-06, 4.597000000002016e-06, 4.639000000000726e-06, 4.611000000001586e-06, 4.639000000000726e-06, 4.653000000000296e-06, 4.653000000000296e-06, 4.653000000000296e-06, 4.653000000000296e-06, 4.695000000002475e-06, 4.653000000000296e-06, 4.653000000000296e-06, 4.653000000000296e-06, 4.666999999999866e-06, 4.653000000000296e-06, 4.653000000000296e-06, 4.653000000000296e-06, 4.666000000000392e-06, 4.707999999999102e-06, 4.653000000000296e-06, 4.6249999999976865e-06, 4.653000000000296e-06, 4.597000000002016e-06, 4.653000000000296e-06, 4.666999999999866e-06, 4.666999999999866e-06, 4.639000000000726e-06, 4.666999999999866e-06, 4.666999999999866e-06, 4.6949999999990055e-06, 4.653000000000296e-06, 4.653000000000296e-06, 4.653000000000296e-06, 4.680999999999436e-06, 4.611000000001586e-06, 4.653000000000296e-06, 4.596999999998547e-06, 4.651999999997353e-06]</msg>
<status status="PASS" starttime="20201115 22:02:54.952" endtime="20201115 22:02:54.954"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.946" endtime="20201115 22:02:54.954"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:54.957" endtime="20201115 22:02:54.958"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:54.961" endtime="20201115 22:02:54.980"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.959" endtime="20201115 22:02:54.981"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.955" endtime="20201115 22:02:54.981"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.590" endtime="20201115 22:02:54.982"></status>
</kw>
<msg timestamp="20201115 22:02:54.982" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:54.991" endtime="20201115 22:02:55.004"></status>
</kw>
<msg timestamp="20201115 22:02:55.005" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:54.989" endtime="20201115 22:02:55.005"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:55.007" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:55.006" endtime="20201115 22:02:55.008"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:55.009" endtime="20201115 22:02:55.010"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.987" endtime="20201115 22:02:55.011"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.984" endtime="20201115 22:02:55.011"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:55.018" endtime="20201115 22:02:55.305"></status>
</kw>
<msg timestamp="20201115 22:02:55.309" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020897722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020902375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:55.016" endtime="20201115 22:02:55.309"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:55.317" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020897722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020902375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:55.310" endtime="20201115 22:02:55.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:55.319" endtime="20201115 22:02:55.320"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.014" endtime="20201115 22:02:55.321"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.012" endtime="20201115 22:02:55.321"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:55.326" level="INFO">${RESULT} = [{'time': 0.020902375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.653000000000296e-06, 'source_diff': 4.653000000000296e-06}, {'time': 0.020971625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:55.322" endtime="20201115 22:02:55.326"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:55.340" level="INFO">${OVERHEAD} = {'diff': [4.653000000000296e-06, 4.639000000000726e-06, 4.666999999999866e-06, 4.6249999999976865e-06, 4.653000000000296e-06, 4.652000000000822e-06, 4.639000000000726e-06, 4.653000000000296e-06, 4.652...</msg>
<status status="PASS" starttime="20201115 22:02:55.327" endtime="20201115 22:02:55.340"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:55.345" level="INFO">NAME: 00-overhead-2-set</msg>
<status status="PASS" starttime="20201115 22:02:55.343" endtime="20201115 22:02:55.345"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:55.347" level="INFO">VALUE: [4.653000000000296e-06, 4.639000000000726e-06, 4.666999999999866e-06, 4.6249999999976865e-06, 4.653000000000296e-06, 4.652000000000822e-06, 4.639000000000726e-06, 4.653000000000296e-06, 4.652000000000822e-06, 4.610999999998117e-06, 4.653000000000296e-06, 4.653000000000296e-06, 4.637999999997783e-06, 4.653000000000296e-06, 4.653000000000296e-06, 4.653000000000296e-06, 4.597000000002016e-06, 4.666999999999866e-06, 4.6949999999990055e-06, 4.653000000000296e-06, 4.653000000000296e-06, 4.639000000000726e-06, 4.652000000000822e-06, 4.666000000000392e-06, 4.679999999999962e-06, 4.6389999999972564e-06, 4.666000000000392e-06, 4.652000000000822e-06, 4.652000000000822e-06, 4.639000000000726e-06, 4.653000000000296e-06, 4.653000000000296e-06, 4.625000000001156e-06, 4.666999999999866e-06, 4.653000000000296e-06, 4.653000000000296e-06, 4.653000000000296e-06, 4.653000000000296e-06, 4.651999999997353e-06, 4.666999999999866e-06, 4.653000000000296e-06, 4.680999999999436e-06, 4.722999999998145e-06, 4.693999999999532e-06, 4.653000000000296e-06, 4.625000000001156e-06, 4.693999999999532e-06, 4.666000000000392e-06, 4.638000000001252e-06, 4.653000000000296e-06]</msg>
<status status="PASS" starttime="20201115 22:02:55.346" endtime="20201115 22:02:55.348"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.341" endtime="20201115 22:02:55.348"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:55.350" endtime="20201115 22:02:55.352"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:55.354" endtime="20201115 22:02:55.374"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.352" endtime="20201115 22:02:55.374"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.349" endtime="20201115 22:02:55.375"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.982" endtime="20201115 22:02:55.375"></status>
</kw>
<msg timestamp="20201115 22:02:55.375" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:55.384" endtime="20201115 22:02:55.397"></status>
</kw>
<msg timestamp="20201115 22:02:55.398" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:55.383" endtime="20201115 22:02:55.398"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:55.400" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:55.399" endtime="20201115 22:02:55.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:55.402" endtime="20201115 22:02:55.403"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.380" endtime="20201115 22:02:55.404"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.378" endtime="20201115 22:02:55.404"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:55.411" endtime="20201115 22:02:55.698"></status>
</kw>
<msg timestamp="20201115 22:02:55.701" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020778736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020783403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:55.409" endtime="20201115 22:02:55.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:55.710" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020778736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020783403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:55.703" endtime="20201115 22:02:55.710"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:55.711" endtime="20201115 22:02:55.713"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.407" endtime="20201115 22:02:55.713"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.405" endtime="20201115 22:02:55.714"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:55.718" level="INFO">${RESULT} = [{'time': 0.020783403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.666999999999866e-06, 'source_diff': 4.666999999999866e-06}, {'time': 0.020851139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:55.715" endtime="20201115 22:02:55.718"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:55.732" level="INFO">${OVERHEAD} = {'diff': [4.666999999999866e-06, 4.666999999999866e-06, 4.653000000000296e-06, 4.610999999998117e-06, 4.653000000000296e-06, 4.639000000000726e-06, 4.639000000000726e-06, 4.653000000000296e-06, 4.6519...</msg>
<status status="PASS" starttime="20201115 22:02:55.719" endtime="20201115 22:02:55.732"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:55.737" level="INFO">NAME: 00-overhead-2-set</msg>
<status status="PASS" starttime="20201115 22:02:55.736" endtime="20201115 22:02:55.737"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:55.739" level="INFO">VALUE: [4.666999999999866e-06, 4.666999999999866e-06, 4.653000000000296e-06, 4.610999999998117e-06, 4.653000000000296e-06, 4.639000000000726e-06, 4.639000000000726e-06, 4.653000000000296e-06, 4.651999999997353e-06, 4.639000000000726e-06, 4.639000000000726e-06, 4.666999999999866e-06, 4.639000000000726e-06, 4.652000000000822e-06, 4.639000000000726e-06, 4.693999999999532e-06, 4.610999999998117e-06, 4.652000000000822e-06, 4.653000000000296e-06, 4.680999999999436e-06, 4.651999999997353e-06, 4.653000000000296e-06, 4.666000000000392e-06, 4.652000000000822e-06, 4.653000000000296e-06, 4.653000000000296e-06, 4.653000000000296e-06, 4.666999999999866e-06, 4.666999999999866e-06, 4.639000000000726e-06, 4.693999999999532e-06, 4.653000000000296e-06, 4.653000000000296e-06, 4.653000000000296e-06, 4.638000000001252e-06, 4.6389999999972564e-06, 4.653000000000296e-06, 4.59800000000149e-06, 4.680999999999436e-06, 4.653000000000296e-06, 4.694000000003001e-06, 4.666999999999866e-06, 4.652000000000822e-06, 4.651999999997353e-06, 4.666999999999866e-06, 4.639000000000726e-06, 4.652000000000822e-06, 4.639000000000726e-06, 4.666999999999866e-06, 4.6249999999976865e-06]</msg>
<status status="PASS" starttime="20201115 22:02:55.738" endtime="20201115 22:02:55.740"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.733" endtime="20201115 22:02:55.740"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:55.743" endtime="20201115 22:02:55.744"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:55.747" endtime="20201115 22:02:55.766"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.745" endtime="20201115 22:02:55.767"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.741" endtime="20201115 22:02:55.767"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.376" endtime="20201115 22:02:55.767"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.803" endtime="20201115 22:02:55.768"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.802" endtime="20201115 22:02:55.768"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:55.770" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:55.779" endtime="20201115 22:02:55.794"></status>
</kw>
<msg timestamp="20201115 22:02:55.794" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:55.778" endtime="20201115 22:02:55.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:55.797" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:55.795" endtime="20201115 22:02:55.797"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:55.798" endtime="20201115 22:02:55.800"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.775" endtime="20201115 22:02:55.800"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.773" endtime="20201115 22:02:55.800"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:55.808" endtime="20201115 22:02:56.096"></status>
</kw>
<msg timestamp="20201115 22:02:56.099" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022805181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022810597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:55.806" endtime="20201115 22:02:56.100"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:56.108" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022805181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022810597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:56.100" endtime="20201115 22:02:56.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:56.109" endtime="20201115 22:02:56.111"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.803" endtime="20201115 22:02:56.111"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.801" endtime="20201115 22:02:56.112"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:56.116" level="INFO">${RESULT} = [{'time': 0.022810597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.415999999997673e-06, 'source_diff': 5.415999999997673e-06}, {'time': 0.022881167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:56.113" endtime="20201115 22:02:56.116"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:56.130" level="INFO">${OVERHEAD} = {'diff': [5.415999999997673e-06, 5.3339999999992005e-06, 5.403000000001046e-06, 5.417000000000616e-06, 5.403000000001046e-06, 5.417000000000616e-06, 5.430000000000712e-06, 5.416000000001142e-06, 5.431...</msg>
<status status="PASS" starttime="20201115 22:02:56.117" endtime="20201115 22:02:56.130"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:56.135" level="INFO">NAME: 00-overhead-3-set</msg>
<status status="PASS" starttime="20201115 22:02:56.134" endtime="20201115 22:02:56.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:56.137" level="INFO">VALUE: [5.415999999997673e-06, 5.3339999999992005e-06, 5.403000000001046e-06, 5.417000000000616e-06, 5.403000000001046e-06, 5.417000000000616e-06, 5.430000000000712e-06, 5.416000000001142e-06, 5.431000000000186e-06, 5.34800000000224e-06, 5.403000000001046e-06, 5.444999999999756e-06, 5.431000000000186e-06, 5.500000000002031e-06, 5.417000000000616e-06, 5.431000000000186e-06, 5.415999999997673e-06, 5.417000000000616e-06, 5.417000000000616e-06, 5.417000000000616e-06, 5.403000000001046e-06, 5.402000000001572e-06, 5.401999999998103e-06, 5.402999999997576e-06, 5.431000000000186e-06, 5.402999999997576e-06, 5.389000000001476e-06, 5.416999999997146e-06, 5.402000000001572e-06, 5.416000000001142e-06, 5.416000000001142e-06, 5.417000000000616e-06, 5.417000000000616e-06, 5.361000000002336e-06, 5.416999999997146e-06, 5.417000000000616e-06, 5.417000000000616e-06, 5.415999999997673e-06, 5.403000000001046e-06, 5.416000000001142e-06, 5.417000000000616e-06, 5.403000000001046e-06, 5.471999999999422e-06, 5.402999999997576e-06, 5.417000000000616e-06, 5.431000000000186e-06, 5.389000000001476e-06, 5.431000000000186e-06, 5.416999999997146e-06, 5.402999999997576e-06]</msg>
<status status="PASS" starttime="20201115 22:02:56.136" endtime="20201115 22:02:56.138"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.131" endtime="20201115 22:02:56.138"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:56.140" endtime="20201115 22:02:56.142"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:56.144" endtime="20201115 22:02:56.164"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.142" endtime="20201115 22:02:56.164"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.139" endtime="20201115 22:02:56.165"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.771" endtime="20201115 22:02:56.165"></status>
</kw>
<msg timestamp="20201115 22:02:56.165" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:56.174" endtime="20201115 22:02:56.188"></status>
</kw>
<msg timestamp="20201115 22:02:56.188" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:56.173" endtime="20201115 22:02:56.188"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:56.191" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:56.189" endtime="20201115 22:02:56.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:56.192" endtime="20201115 22:02:56.194"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.170" endtime="20201115 22:02:56.195"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.168" endtime="20201115 22:02:56.195"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:56.202" endtime="20201115 22:02:56.488"></status>
</kw>
<msg timestamp="20201115 22:02:56.491" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020549333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02055475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:02:56.200" endtime="20201115 22:02:56.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:56.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020549333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02055475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:02:56.492" endtime="20201115 22:02:56.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:56.501" endtime="20201115 22:02:56.503"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.197" endtime="20201115 22:02:56.503"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.196" endtime="20201115 22:02:56.504"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:56.508" level="INFO">${RESULT} = [{'time': 0.02055475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.417000000000616e-06, 'source_diff': 5.417000000000616e-06}, {'time': 0.020628472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:02:56.504" endtime="20201115 22:02:56.508"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:56.522" level="INFO">${OVERHEAD} = {'diff': [5.417000000000616e-06, 5.415999999997673e-06, 5.416000000001142e-06, 5.430000000000712e-06, 5.415999999997673e-06, 5.416000000001142e-06, 5.417000000000616e-06, 5.416999999997146e-06, 5.4300...</msg>
<status status="PASS" starttime="20201115 22:02:56.509" endtime="20201115 22:02:56.522"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:56.527" level="INFO">NAME: 00-overhead-3-set</msg>
<status status="PASS" starttime="20201115 22:02:56.526" endtime="20201115 22:02:56.527"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:56.529" level="INFO">VALUE: [5.417000000000616e-06, 5.415999999997673e-06, 5.416000000001142e-06, 5.430000000000712e-06, 5.415999999997673e-06, 5.416000000001142e-06, 5.417000000000616e-06, 5.416999999997146e-06, 5.430000000000712e-06, 5.417000000000616e-06, 5.374999999998437e-06, 5.416000000001142e-06, 5.417000000000616e-06, 5.416000000001142e-06, 5.430000000000712e-06, 5.416999999997146e-06, 5.417000000000616e-06, 5.403000000001046e-06, 5.417000000000616e-06, 5.374999999998437e-06, 5.401999999998103e-06, 5.402999999997576e-06, 5.417000000000616e-06, 5.430000000000712e-06, 5.415999999997673e-06, 5.402999999997576e-06, 5.417000000000616e-06, 5.417000000000616e-06, 5.417000000000616e-06, 5.403000000001046e-06, 5.402999999997576e-06, 5.416999999997146e-06, 5.416000000001142e-06, 5.402000000001572e-06, 5.431000000000186e-06, 5.403000000001046e-06, 5.417000000000616e-06, 5.430000000000712e-06, 5.416000000001142e-06, 5.417000000000616e-06, 5.471999999999422e-06, 5.403000000001046e-06, 5.485999999998992e-06, 5.417000000000616e-06, 5.401999999998103e-06, 5.487000000001935e-06, 5.416000000001142e-06, 5.403000000001046e-06, 5.416999999997146e-06, 5.417000000000616e-06]</msg>
<status status="PASS" starttime="20201115 22:02:56.528" endtime="20201115 22:02:56.530"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.523" endtime="20201115 22:02:56.530"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:56.532" endtime="20201115 22:02:56.534"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:56.536" endtime="20201115 22:02:56.556"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.534" endtime="20201115 22:02:56.556"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.531" endtime="20201115 22:02:56.557"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.166" endtime="20201115 22:02:56.557"></status>
</kw>
<msg timestamp="20201115 22:02:56.557" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:56.567" endtime="20201115 22:02:56.581"></status>
</kw>
<msg timestamp="20201115 22:02:56.581" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:56.565" endtime="20201115 22:02:56.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:56.584" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:56.582" endtime="20201115 22:02:56.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:56.585" endtime="20201115 22:02:56.587"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.562" endtime="20201115 22:02:56.587"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.560" endtime="20201115 22:02:56.588"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:56.594" endtime="20201115 22:02:56.882"></status>
</kw>
<msg timestamp="20201115 22:02:56.885" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020894792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020900208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:56.593" endtime="20201115 22:02:56.886"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:56.894" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020894792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020900208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:56.887" endtime="20201115 22:02:56.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:56.895" endtime="20201115 22:02:56.897"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.590" endtime="20201115 22:02:56.897"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.588" endtime="20201115 22:02:56.898"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:56.902" level="INFO">${RESULT} = [{'time': 0.020900208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.416000000001142e-06, 'source_diff': 5.416000000001142e-06}, {'time': 0.020974917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:56.899" endtime="20201115 22:02:56.902"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:56.916" level="INFO">${OVERHEAD} = {'diff': [5.416000000001142e-06, 5.417000000000616e-06, 5.430000000000712e-06, 5.471999999999422e-06, 5.417000000000616e-06, 5.401999999998103e-06, 5.389000000001476e-06, 5.431000000000186e-06, 5.4160...</msg>
<status status="PASS" starttime="20201115 22:02:56.903" endtime="20201115 22:02:56.916"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:56.921" level="INFO">NAME: 00-overhead-3-set</msg>
<status status="PASS" starttime="20201115 22:02:56.920" endtime="20201115 22:02:56.921"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:56.923" level="INFO">VALUE: [5.416000000001142e-06, 5.417000000000616e-06, 5.430000000000712e-06, 5.471999999999422e-06, 5.417000000000616e-06, 5.401999999998103e-06, 5.389000000001476e-06, 5.431000000000186e-06, 5.416000000001142e-06, 5.415999999997673e-06, 5.417000000000616e-06, 5.416000000001142e-06, 5.417000000000616e-06, 5.417000000000616e-06, 5.360999999998867e-06, 5.417000000000616e-06, 5.415999999997673e-06, 5.429999999997243e-06, 5.403000000001046e-06, 5.417000000000616e-06, 5.430000000000712e-06, 5.360999999998867e-06, 5.430000000000712e-06, 5.431000000000186e-06, 5.417000000000616e-06, 5.417000000000616e-06, 5.34800000000224e-06, 5.430000000000712e-06, 5.417000000000616e-06, 5.402999999997576e-06, 5.417000000000616e-06, 5.417000000000616e-06, 5.430000000000712e-06, 5.416000000001142e-06, 5.402999999997576e-06, 5.415999999997673e-06, 5.401999999998103e-06, 5.403000000001046e-06, 5.417000000000616e-06, 5.417000000000616e-06, 5.417000000000616e-06, 5.417000000000616e-06, 5.403000000001046e-06, 5.429999999997243e-06, 5.430000000000712e-06, 5.417000000000616e-06, 5.402999999997576e-06, 5.417000000000616e-06, 5.401999999998103e-06, 5.430000000000712e-06]</msg>
<status status="PASS" starttime="20201115 22:02:56.922" endtime="20201115 22:02:56.924"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.917" endtime="20201115 22:02:56.924"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:56.927" endtime="20201115 22:02:56.928"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:56.930" endtime="20201115 22:02:56.950"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.929" endtime="20201115 22:02:56.950"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.925" endtime="20201115 22:02:56.951"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.558" endtime="20201115 22:02:56.951"></status>
</kw>
<msg timestamp="20201115 22:02:56.951" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:56.961" endtime="20201115 22:02:56.974"></status>
</kw>
<msg timestamp="20201115 22:02:56.975" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:56.959" endtime="20201115 22:02:56.975"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:56.978" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:56.976" endtime="20201115 22:02:56.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:56.979" endtime="20201115 22:02:56.981"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.957" endtime="20201115 22:02:56.981"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.954" endtime="20201115 22:02:56.982"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:56.989" endtime="20201115 22:02:57.277"></status>
</kw>
<msg timestamp="20201115 22:02:57.280" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020691167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020696583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:56.988" endtime="20201115 22:02:57.280"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:57.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020691167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020696583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:57.281" endtime="20201115 22:02:57.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:57.289" endtime="20201115 22:02:57.291"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.985" endtime="20201115 22:02:57.292"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.983" endtime="20201115 22:02:57.292"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:57.296" level="INFO">${RESULT} = [{'time': 0.020696583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.416000000001142e-06, 'source_diff': 5.416000000001142e-06}, {'time': 0.020766944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:57.293" endtime="20201115 22:02:57.297"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:57.310" level="INFO">${OVERHEAD} = {'diff': [5.416000000001142e-06, 5.415999999997673e-06, 5.416000000001142e-06, 5.417000000000616e-06, 5.401999999998103e-06, 5.416999999997146e-06, 5.417000000000616e-06, 5.416000000001142e-06, 5.4030...</msg>
<status status="PASS" starttime="20201115 22:02:57.297" endtime="20201115 22:02:57.311"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:57.315" level="INFO">NAME: 00-overhead-3-set</msg>
<status status="PASS" starttime="20201115 22:02:57.314" endtime="20201115 22:02:57.315"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:57.318" level="INFO">VALUE: [5.416000000001142e-06, 5.415999999997673e-06, 5.416000000001142e-06, 5.417000000000616e-06, 5.401999999998103e-06, 5.416999999997146e-06, 5.417000000000616e-06, 5.416000000001142e-06, 5.403000000001046e-06, 5.417000000000616e-06, 5.417000000000616e-06, 5.417000000000616e-06, 5.346999999999297e-06, 5.444000000000282e-06, 5.430999999996716e-06, 5.416000000001142e-06, 5.444000000000282e-06, 5.403000000001046e-06, 5.402999999997576e-06, 5.416000000001142e-06, 5.389000000001476e-06, 5.417000000000616e-06, 5.33400000000267e-06, 5.431000000000186e-06, 5.403000000001046e-06, 5.417000000000616e-06, 5.499999999998562e-06, 5.403000000001046e-06, 5.346999999999297e-06, 5.403000000001046e-06, 5.417000000000616e-06, 5.415999999997673e-06, 5.417000000000616e-06, 5.417000000000616e-06, 5.403000000001046e-06, 5.431000000000186e-06, 5.416000000001142e-06, 5.401999999998103e-06, 5.389000000001476e-06, 5.429999999997243e-06, 5.415999999997673e-06, 5.431000000000186e-06, 5.431000000000186e-06, 5.417000000000616e-06, 5.444999999999756e-06, 5.417000000000616e-06, 5.431000000000186e-06, 5.403000000001046e-06, 5.3889999999980065e-06, 5.417000000000616e-06]</msg>
<status status="PASS" starttime="20201115 22:02:57.316" endtime="20201115 22:02:57.318"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.311" endtime="20201115 22:02:57.319"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:57.321" endtime="20201115 22:02:57.323"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:57.325" endtime="20201115 22:02:57.345"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.323" endtime="20201115 22:02:57.345"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.319" endtime="20201115 22:02:57.346"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.952" endtime="20201115 22:02:57.346"></status>
</kw>
<msg timestamp="20201115 22:02:57.346" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:57.356" endtime="20201115 22:02:57.367"></status>
</kw>
<msg timestamp="20201115 22:02:57.368" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:57.354" endtime="20201115 22:02:57.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:57.370" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:57.369" endtime="20201115 22:02:57.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:57.372" endtime="20201115 22:02:57.373"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.351" endtime="20201115 22:02:57.374"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.349" endtime="20201115 22:02:57.374"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:57.381" endtime="20201115 22:02:57.668"></status>
</kw>
<msg timestamp="20201115 22:02:57.671" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020676125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020681542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:57.379" endtime="20201115 22:02:57.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:57.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020676125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020681542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:57.673" endtime="20201115 22:02:57.680"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:57.681" endtime="20201115 22:02:57.683"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.377" endtime="20201115 22:02:57.683"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.375" endtime="20201115 22:02:57.684"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:57.688" level="INFO">${RESULT} = [{'time': 0.020681542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.417000000000616e-06, 'source_diff': 5.417000000000616e-06}, {'time': 0.020753403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:57.685" endtime="20201115 22:02:57.688"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:57.702" level="INFO">${OVERHEAD} = {'diff': [5.417000000000616e-06, 5.417000000000616e-06, 5.431000000000186e-06, 5.416000000001142e-06, 5.403000000001046e-06, 5.415999999997673e-06, 5.3889999999980065e-06, 5.416000000001142e-06, 5.417...</msg>
<status status="PASS" starttime="20201115 22:02:57.689" endtime="20201115 22:02:57.702"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:57.707" level="INFO">NAME: 00-overhead-3-set</msg>
<status status="PASS" starttime="20201115 22:02:57.706" endtime="20201115 22:02:57.707"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:57.709" level="INFO">VALUE: [5.417000000000616e-06, 5.417000000000616e-06, 5.431000000000186e-06, 5.416000000001142e-06, 5.403000000001046e-06, 5.415999999997673e-06, 5.3889999999980065e-06, 5.416000000001142e-06, 5.417000000000616e-06, 5.402999999997576e-06, 5.417000000000616e-06, 5.402999999997576e-06, 5.431000000000186e-06, 5.403000000001046e-06, 5.403000000001046e-06, 5.416000000001142e-06, 5.417000000000616e-06, 5.403000000001046e-06, 5.401999999998103e-06, 5.416000000001142e-06, 5.402999999997576e-06, 5.416000000001142e-06, 5.3889999999980065e-06, 5.417000000000616e-06, 5.416999999997146e-06, 5.403000000001046e-06, 5.417000000000616e-06, 5.416000000001142e-06, 5.402000000001572e-06, 5.375000000001906e-06, 5.431000000000186e-06, 5.403000000001046e-06, 5.403000000001046e-06, 5.416999999997146e-06, 5.485999999998992e-06, 5.417000000000616e-06, 5.402000000001572e-06, 5.417000000000616e-06, 5.415999999997673e-06, 5.416000000001142e-06, 5.402999999997576e-06, 5.417000000000616e-06, 5.4589999999993255e-06, 5.431000000000186e-06, 5.361000000002336e-06, 5.417000000000616e-06, 5.403000000001046e-06, 5.387999999998533e-06, 5.416000000001142e-06, 5.416000000001142e-06]</msg>
<status status="PASS" starttime="20201115 22:02:57.708" endtime="20201115 22:02:57.710"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.703" endtime="20201115 22:02:57.711"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:57.713" endtime="20201115 22:02:57.714"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:57.717" endtime="20201115 22:02:57.736"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.715" endtime="20201115 22:02:57.737"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.711" endtime="20201115 22:02:57.737"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.347" endtime="20201115 22:02:57.737"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.769" endtime="20201115 22:02:57.738"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.768" endtime="20201115 22:02:57.738"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:57.740" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:57.749" endtime="20201115 22:02:57.763"></status>
</kw>
<msg timestamp="20201115 22:02:57.764" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:57.748" endtime="20201115 22:02:57.764"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:57.767" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:57.765" endtime="20201115 22:02:57.767"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:57.768" endtime="20201115 22:02:57.769"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.745" endtime="20201115 22:02:57.770"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.743" endtime="20201115 22:02:57.770"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:57.777" endtime="20201115 22:02:58.065"></status>
</kw>
<msg timestamp="20201115 22:02:58.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022669222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022675403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:57.775" endtime="20201115 22:02:58.068"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:58.076" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022669222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022675403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:58.069" endtime="20201115 22:02:58.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:58.078" endtime="20201115 22:02:58.080"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.773" endtime="20201115 22:02:58.080"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.771" endtime="20201115 22:02:58.081"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:58.085" level="INFO">${RESULT} = [{'time': 0.022675403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.181000000000936e-06, 'source_diff': 6.181000000000936e-06}, {'time': 0.022755528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:58.081" endtime="20201115 22:02:58.085"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:58.099" level="INFO">${OVERHEAD} = {'diff': [6.181000000000936e-06, 6.181000000000936e-06, 6.194000000001032e-06, 6.2090000000000756e-06, 6.180000000001462e-06, 6.195000000000506e-06, 6.165999999998423e-06, 6.167000000001366e-06, 6.151...</msg>
<status status="PASS" starttime="20201115 22:02:58.086" endtime="20201115 22:02:58.099"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:58.104" level="INFO">NAME: 00-overhead-4-set</msg>
<status status="PASS" starttime="20201115 22:02:58.102" endtime="20201115 22:02:58.104"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:58.107" level="INFO">VALUE: [6.181000000000936e-06, 6.181000000000936e-06, 6.194000000001032e-06, 6.2090000000000756e-06, 6.180000000001462e-06, 6.195000000000506e-06, 6.165999999998423e-06, 6.167000000001366e-06, 6.151999999998853e-06, 6.222000000000172e-06, 6.194000000001032e-06, 6.194000000001032e-06, 6.180000000001462e-06, 6.1529999999983265e-06, 6.139000000002226e-06, 6.194000000001032e-06, 6.180999999997466e-06, 6.180000000001462e-06, 6.180999999997466e-06, 6.194000000001032e-06, 6.180000000001462e-06, 6.167000000001366e-06, 6.1529999999983265e-06, 6.180000000001462e-06, 6.167000000001366e-06, 6.194000000001032e-06, 6.166999999997896e-06, 6.180000000001462e-06, 6.179999999997993e-06, 6.181000000000936e-06, 6.194000000001032e-06, 6.194000000001032e-06, 6.166999999997896e-06, 6.1529999999983265e-06, 6.1529999999983265e-06, 6.1529999999983265e-06, 6.167000000001366e-06, 6.222000000000172e-06, 6.208000000000602e-06, 6.167000000001366e-06, 6.194000000001032e-06, 6.167000000001366e-06, 6.1939999999975626e-06, 6.180000000001462e-06, 6.1389999999987566e-06, 6.124999999999187e-06, 6.195000000000506e-06, 6.1529999999983265e-06, 6.167000000001366e-06, 6.181000000000936e-06]</msg>
<status status="PASS" starttime="20201115 22:02:58.105" endtime="20201115 22:02:58.107"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.100" endtime="20201115 22:02:58.108"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:58.110" endtime="20201115 22:02:58.112"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:58.114" endtime="20201115 22:02:58.133"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.112" endtime="20201115 22:02:58.134"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.108" endtime="20201115 22:02:58.134"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.741" endtime="20201115 22:02:58.135"></status>
</kw>
<msg timestamp="20201115 22:02:58.135" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:58.144" endtime="20201115 22:02:58.159"></status>
</kw>
<msg timestamp="20201115 22:02:58.160" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:58.143" endtime="20201115 22:02:58.160"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:58.162" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:58.161" endtime="20201115 22:02:58.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:58.163" endtime="20201115 22:02:58.165"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.140" endtime="20201115 22:02:58.166"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.138" endtime="20201115 22:02:58.166"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:58.173" endtime="20201115 22:02:58.459"></status>
</kw>
<msg timestamp="20201115 22:02:58.462" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020261292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020267472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:58.171" endtime="20201115 22:02:58.462"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:58.470" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020261292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020267472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:58.463" endtime="20201115 22:02:58.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:58.472" endtime="20201115 22:02:58.474"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.168" endtime="20201115 22:02:58.474"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.167" endtime="20201115 22:02:58.475"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:58.479" level="INFO">${RESULT} = [{'time': 0.020267472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.180000000001462e-06, 'source_diff': 6.180000000001462e-06}, {'time': 0.020344097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:58.475" endtime="20201115 22:02:58.479"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:58.492" level="INFO">${OVERHEAD} = {'diff': [6.180000000001462e-06, 6.165999999998423e-06, 6.2229999999996455e-06, 6.181000000000936e-06, 6.181000000000936e-06, 6.195000000000506e-06, 6.179999999997993e-06, 6.166999999997896e-06, 6.264...</msg>
<status status="PASS" starttime="20201115 22:02:58.480" endtime="20201115 22:02:58.493"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:58.497" level="INFO">NAME: 00-overhead-4-set</msg>
<status status="PASS" starttime="20201115 22:02:58.496" endtime="20201115 22:02:58.498"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:58.500" level="INFO">VALUE: [6.180000000001462e-06, 6.165999999998423e-06, 6.2229999999996455e-06, 6.181000000000936e-06, 6.181000000000936e-06, 6.195000000000506e-06, 6.179999999997993e-06, 6.166999999997896e-06, 6.264000000002351e-06, 6.166000000001892e-06, 6.181000000000936e-06, 6.139000000002226e-06, 6.180999999997466e-06, 6.181000000000936e-06, 6.166999999997896e-06, 6.195000000000506e-06, 6.195000000000506e-06, 6.179999999997993e-06, 6.110999999999617e-06, 6.222000000000172e-06, 6.180999999997466e-06, 6.222000000000172e-06, 6.139000000002226e-06, 6.167000000001366e-06, 6.180000000001462e-06, 6.195000000000506e-06, 6.180000000001462e-06, 6.180000000001462e-06, 6.166999999997896e-06, 6.181000000000936e-06, 6.1529999999983265e-06, 6.166999999997896e-06, 6.195000000000506e-06, 6.167000000001366e-06, 6.195000000000506e-06, 6.235999999999742e-06, 6.1529999999983265e-06, 6.235999999999742e-06, 6.1529999999983265e-06, 6.194000000001032e-06, 6.181000000000936e-06, 6.222000000000172e-06, 6.137999999999283e-06, 6.166000000001892e-06, 6.165999999998423e-06, 6.181000000000936e-06, 6.222000000000172e-06, 6.166999999997896e-06, 6.194000000001032e-06, 6.181000000000936e-06]</msg>
<status status="PASS" starttime="20201115 22:02:58.499" endtime="20201115 22:02:58.500"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.494" endtime="20201115 22:02:58.501"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:58.503" endtime="20201115 22:02:58.504"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:58.507" endtime="20201115 22:02:58.526"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.505" endtime="20201115 22:02:58.527"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.501" endtime="20201115 22:02:58.527"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.136" endtime="20201115 22:02:58.527"></status>
</kw>
<msg timestamp="20201115 22:02:58.528" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:58.536" endtime="20201115 22:02:58.550"></status>
</kw>
<msg timestamp="20201115 22:02:58.551" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:58.535" endtime="20201115 22:02:58.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:58.553" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:58.552" endtime="20201115 22:02:58.554"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:58.554" endtime="20201115 22:02:58.556"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.532" endtime="20201115 22:02:58.556"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.530" endtime="20201115 22:02:58.557"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:58.563" endtime="20201115 22:02:58.850"></status>
</kw>
<msg timestamp="20201115 22:02:58.853" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019874611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019880722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:58.562" endtime="20201115 22:02:58.853"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:58.861" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019874611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019880722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:58.854" endtime="20201115 22:02:58.862"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:58.862" endtime="20201115 22:02:58.864"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.559" endtime="20201115 22:02:58.865"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.558" endtime="20201115 22:02:58.865"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:58.869" level="INFO">${RESULT} = [{'time': 0.019880722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.110999999999617e-06, 'source_diff': 6.110999999999617e-06}, {'time': 0.019957569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:58.866" endtime="20201115 22:02:58.874"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:58.888" level="INFO">${OVERHEAD} = {'diff': [6.110999999999617e-06, 6.180000000001462e-06, 6.235999999999742e-06, 6.167000000001366e-06, 6.166999999997896e-06, 6.110999999999617e-06, 6.165999999998423e-06, 6.208000000000602e-06, 6.1799...</msg>
<status status="PASS" starttime="20201115 22:02:58.875" endtime="20201115 22:02:58.888"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:58.892" level="INFO">NAME: 00-overhead-4-set</msg>
<status status="PASS" starttime="20201115 22:02:58.891" endtime="20201115 22:02:58.893"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:58.895" level="INFO">VALUE: [6.110999999999617e-06, 6.180000000001462e-06, 6.235999999999742e-06, 6.167000000001366e-06, 6.166999999997896e-06, 6.110999999999617e-06, 6.165999999998423e-06, 6.208000000000602e-06, 6.179999999997993e-06, 6.181000000000936e-06, 6.194000000001032e-06, 6.208000000000602e-06, 6.125000000002656e-06, 6.152000000002322e-06, 6.180999999997466e-06, 6.124999999999187e-06, 6.181000000000936e-06, 6.167000000001366e-06, 6.165999999998423e-06, 6.180999999997466e-06, 6.167000000001366e-06, 6.180999999997466e-06, 6.180000000001462e-06, 6.181000000000936e-06, 6.1389999999987566e-06, 6.1939999999975626e-06, 6.166000000001892e-06, 6.180999999997466e-06, 6.137999999999283e-06, 6.180000000001462e-06, 6.179999999997993e-06, 6.181000000000936e-06, 6.166000000001892e-06, 6.097000000000047e-06, 6.167000000001366e-06, 6.180000000001462e-06, 6.165999999998423e-06, 6.180000000001462e-06, 6.124999999999187e-06, 6.166000000001892e-06, 6.180000000001462e-06, 6.180000000001462e-06, 6.151999999998853e-06, 6.152000000002322e-06, 6.180999999997466e-06, 6.180999999997466e-06, 6.166999999997896e-06, 6.167000000001366e-06, 6.179999999997993e-06, 6.194000000001032e-06]</msg>
<status status="PASS" starttime="20201115 22:02:58.893" endtime="20201115 22:02:58.895"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.889" endtime="20201115 22:02:58.896"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:58.898" endtime="20201115 22:02:58.899"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:58.901" endtime="20201115 22:02:58.921"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.900" endtime="20201115 22:02:58.921"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.896" endtime="20201115 22:02:58.922"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.528" endtime="20201115 22:02:58.922"></status>
</kw>
<msg timestamp="20201115 22:02:58.922" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:58.931" endtime="20201115 22:02:58.944"></status>
</kw>
<msg timestamp="20201115 22:02:58.945" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:58.930" endtime="20201115 22:02:58.945"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:58.947" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:58.946" endtime="20201115 22:02:58.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:58.948" endtime="20201115 22:02:58.950"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.927" endtime="20201115 22:02:58.950"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.925" endtime="20201115 22:02:58.951"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:58.957" endtime="20201115 22:02:59.245"></status>
</kw>
<msg timestamp="20201115 22:02:59.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01996175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019967944, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:02:58.956" endtime="20201115 22:02:59.248"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:59.256" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01996175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019967944, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:02:59.249" endtime="20201115 22:02:59.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:59.257" endtime="20201115 22:02:59.259"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.953" endtime="20201115 22:02:59.260"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.951" endtime="20201115 22:02:59.260"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:59.264" level="INFO">${RESULT} = [{'time': 0.019967944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.194000000001032e-06, 'source_diff': 6.194000000001032e-06}, {'time': 0.020045681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:59.261" endtime="20201115 22:02:59.264"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:59.278" level="INFO">${OVERHEAD} = {'diff': [6.194000000001032e-06, 6.181000000000936e-06, 6.124999999999187e-06, 6.179999999997993e-06, 6.181000000000936e-06, 6.166000000001892e-06, 6.180000000001462e-06, 6.181000000000936e-06, 6.1939...</msg>
<status status="PASS" starttime="20201115 22:02:59.265" endtime="20201115 22:02:59.278"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:59.282" level="INFO">NAME: 00-overhead-4-set</msg>
<status status="PASS" starttime="20201115 22:02:59.281" endtime="20201115 22:02:59.282"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:59.285" level="INFO">VALUE: [6.194000000001032e-06, 6.181000000000936e-06, 6.124999999999187e-06, 6.179999999997993e-06, 6.181000000000936e-06, 6.166000000001892e-06, 6.180000000001462e-06, 6.181000000000936e-06, 6.1939999999975626e-06, 6.181000000000936e-06, 6.180000000001462e-06, 6.181000000000936e-06, 6.195000000000506e-06, 6.180000000001462e-06, 6.1389999999987566e-06, 6.181000000000936e-06, 6.194000000001032e-06, 6.194000000001032e-06, 6.166000000001892e-06, 6.179999999997993e-06, 6.2639999999988816e-06, 6.208000000000602e-06, 6.194000000001032e-06, 6.195000000000506e-06, 6.181000000000936e-06, 6.194000000001032e-06, 6.194000000001032e-06, 6.181000000000936e-06, 6.208000000000602e-06, 6.194000000001032e-06, 6.181000000000936e-06, 6.167000000001366e-06, 6.167000000001366e-06, 6.1529999999983265e-06, 6.110999999999617e-06, 6.124999999999187e-06, 6.137999999999283e-06, 6.180000000001462e-06, 6.195000000000506e-06, 6.167000000001366e-06, 6.2090000000000756e-06, 6.166999999997896e-06, 6.194000000001032e-06, 6.166999999997896e-06, 6.166999999997896e-06, 6.181000000000936e-06, 6.179999999997993e-06, 6.181000000000936e-06, 6.139000000002226e-06, 6.180000000001462e-06]</msg>
<status status="PASS" starttime="20201115 22:02:59.283" endtime="20201115 22:02:59.285"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.279" endtime="20201115 22:02:59.285"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:59.288" endtime="20201115 22:02:59.289"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:59.291" endtime="20201115 22:02:59.310"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.290" endtime="20201115 22:02:59.311"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.286" endtime="20201115 22:02:59.311"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.923" endtime="20201115 22:02:59.312"></status>
</kw>
<msg timestamp="20201115 22:02:59.312" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:59.321" endtime="20201115 22:02:59.334"></status>
</kw>
<msg timestamp="20201115 22:02:59.334" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:59.319" endtime="20201115 22:02:59.334"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:59.337" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:59.335" endtime="20201115 22:02:59.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:59.338" endtime="20201115 22:02:59.339"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.317" endtime="20201115 22:02:59.340"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.315" endtime="20201115 22:02:59.340"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:59.346" endtime="20201115 22:02:59.633"></status>
</kw>
<msg timestamp="20201115 22:02:59.636" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020131694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020137903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:59.345" endtime="20201115 22:02:59.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:59.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020131694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020137903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:59.637" endtime="20201115 22:02:59.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:59.645" endtime="20201115 22:02:59.647"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.342" endtime="20201115 22:02:59.648"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.341" endtime="20201115 22:02:59.648"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:59.652" level="INFO">${RESULT} = [{'time': 0.020137903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.2090000000000756e-06, 'source_diff': 6.2090000000000756e-06}, {'time': 0.020214944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:59.649" endtime="20201115 22:02:59.652"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:59.666" level="INFO">${OVERHEAD} = {'diff': [6.2090000000000756e-06, 6.2079999999971325e-06, 6.180000000001462e-06, 6.167000000001366e-06, 6.153000000001796e-06, 6.180000000001462e-06, 6.180000000001462e-06, 6.167000000001366e-06, 6.13...</msg>
<status status="PASS" starttime="20201115 22:02:59.653" endtime="20201115 22:02:59.666"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:59.670" level="INFO">NAME: 00-overhead-4-set</msg>
<status status="PASS" starttime="20201115 22:02:59.669" endtime="20201115 22:02:59.670"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:59.673" level="INFO">VALUE: [6.2090000000000756e-06, 6.2079999999971325e-06, 6.180000000001462e-06, 6.167000000001366e-06, 6.153000000001796e-06, 6.180000000001462e-06, 6.180000000001462e-06, 6.167000000001366e-06, 6.139000000002226e-06, 6.181000000000936e-06, 6.1389999999987566e-06, 6.194000000001032e-06, 6.151999999998853e-06, 6.208000000000602e-06, 6.165999999998423e-06, 6.194000000001032e-06, 6.180999999997466e-06, 6.179999999997993e-06, 6.1389999999987566e-06, 6.179999999997993e-06, 6.166999999997896e-06, 6.166999999997896e-06, 6.167000000001366e-06, 6.249999999999312e-06, 6.195000000000506e-06, 6.195000000000506e-06, 6.179999999997993e-06, 6.180999999997466e-06, 6.195000000000506e-06, 6.165999999998423e-06, 6.222000000000172e-06, 6.181000000000936e-06, 6.180999999997466e-06, 6.1529999999983265e-06, 6.153000000001796e-06, 6.152000000002322e-06, 6.194000000001032e-06, 6.1529999999983265e-06, 6.195000000000506e-06, 6.181000000000936e-06, 6.181000000000936e-06, 6.195000000000506e-06, 6.180999999997466e-06, 6.165999999998423e-06, 6.180000000001462e-06, 6.166000000001892e-06, 6.153000000001796e-06, 6.110999999999617e-06, 6.180000000001462e-06, 6.1939999999975626e-06]</msg>
<status status="PASS" starttime="20201115 22:02:59.671" endtime="20201115 22:02:59.673"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.667" endtime="20201115 22:02:59.673"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:59.676" endtime="20201115 22:02:59.677"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:59.679" endtime="20201115 22:02:59.699"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.678" endtime="20201115 22:02:59.699"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.674" endtime="20201115 22:02:59.700"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.313" endtime="20201115 22:02:59.700"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.739" endtime="20201115 22:02:59.700"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.738" endtime="20201115 22:02:59.700"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:59.703" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:59.711" endtime="20201115 22:02:59.726"></status>
</kw>
<msg timestamp="20201115 22:02:59.727" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:59.710" endtime="20201115 22:02:59.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:59.729" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:59.728" endtime="20201115 22:02:59.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:59.730" endtime="20201115 22:02:59.732"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.707" endtime="20201115 22:02:59.732"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.705" endtime="20201115 22:02:59.733"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:59.740" endtime="20201115 22:03:00.027"></status>
</kw>
<msg timestamp="20201115 22:03:00.030" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022212528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022219472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:59.738" endtime="20201115 22:03:00.030"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:00.038" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022212528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022219472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:00.031" endtime="20201115 22:03:00.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:00.040" endtime="20201115 22:03:00.041"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.735" endtime="20201115 22:03:00.042"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.734" endtime="20201115 22:03:00.042"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:00.046" level="INFO">${RESULT} = [{'time': 0.022219472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.944000000001782e-06, 'source_diff': 6.944000000001782e-06}, {'time': 0.022304444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:00.043" endtime="20201115 22:03:00.047"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:00.060" level="INFO">${OVERHEAD} = {'diff': [6.944000000001782e-06, 6.915999999999173e-06, 6.9169999999986465e-06, 6.944000000001782e-06, 6.929999999998743e-06, 7.013999999999632e-06, 6.931000000001686e-06, 6.930999999998216e-06, 6.930...</msg>
<status status="PASS" starttime="20201115 22:03:00.047" endtime="20201115 22:03:00.060"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:00.064" level="INFO">NAME: 00-overhead-5-set</msg>
<status status="PASS" starttime="20201115 22:03:00.063" endtime="20201115 22:03:00.065"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:00.067" level="INFO">VALUE: [6.944000000001782e-06, 6.915999999999173e-06, 6.9169999999986465e-06, 6.944000000001782e-06, 6.929999999998743e-06, 7.013999999999632e-06, 6.931000000001686e-06, 6.930999999998216e-06, 6.930000000002212e-06, 6.944999999997786e-06, 6.929999999998743e-06, 6.929999999998743e-06, 6.944999999997786e-06, 6.972000000000922e-06, 6.931000000001686e-06, 6.944000000001782e-06, 6.945000000001256e-06, 6.959000000000826e-06, 6.888999999999507e-06, 6.958999999997356e-06, 6.943999999998313e-06, 6.943999999998313e-06, 6.915999999999173e-06, 6.929999999998743e-06, 6.972000000000922e-06, 6.929999999998743e-06, 7.000000000000062e-06, 6.9579999999978825e-06, 6.986000000000492e-06, 6.944000000001782e-06, 6.943999999998313e-06, 6.9719999999974525e-06, 6.972000000000922e-06, 6.943999999998313e-06, 6.930000000002212e-06, 6.929999999998743e-06, 6.943999999998313e-06, 6.930999999998216e-06, 6.931000000001686e-06, 6.931000000001686e-06, 6.9719999999974525e-06, 6.944000000001782e-06, 6.943999999998313e-06, 6.958000000001352e-06, 6.945000000001256e-06, 6.972000000000922e-06, 6.944000000001782e-06, 6.945000000001256e-06, 6.917000000002116e-06, 6.930999999998216e-06]</msg>
<status status="PASS" starttime="20201115 22:03:00.066" endtime="20201115 22:03:00.067"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.061" endtime="20201115 22:03:00.068"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:00.070" endtime="20201115 22:03:00.071"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:00.073" endtime="20201115 22:03:00.093"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.072" endtime="20201115 22:03:00.093"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.068" endtime="20201115 22:03:00.094"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.703" endtime="20201115 22:03:00.094"></status>
</kw>
<msg timestamp="20201115 22:03:00.094" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:00.103" endtime="20201115 22:03:00.116"></status>
</kw>
<msg timestamp="20201115 22:03:00.117" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:00.102" endtime="20201115 22:03:00.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:00.120" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:00.118" endtime="20201115 22:03:00.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:00.121" endtime="20201115 22:03:00.122"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.099" endtime="20201115 22:03:00.123"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.097" endtime="20201115 22:03:00.123"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:00.130" endtime="20201115 22:03:00.416"></status>
</kw>
<msg timestamp="20201115 22:03:00.419" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020494333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020501292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:00.128" endtime="20201115 22:03:00.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:00.427" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020494333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020501292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:00.420" endtime="20201115 22:03:00.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:00.428" endtime="20201115 22:03:00.430"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.126" endtime="20201115 22:03:00.430"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.124" endtime="20201115 22:03:00.431"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:00.435" level="INFO">${RESULT} = [{'time': 0.020501292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.959000000000826e-06, 'source_diff': 6.959000000000826e-06}, {'time': 0.020587972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:00.431" endtime="20201115 22:03:00.435"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:00.448" level="INFO">${OVERHEAD} = {'diff': [6.959000000000826e-06, 6.929999999998743e-06, 6.945000000001256e-06, 6.972000000000922e-06, 6.945000000001256e-06, 6.9579999999978825e-06, 6.945000000001256e-06, 6.930000000002212e-06, 6.917...</msg>
<status status="PASS" starttime="20201115 22:03:00.436" endtime="20201115 22:03:00.448"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:00.453" level="INFO">NAME: 00-overhead-5-set</msg>
<status status="PASS" starttime="20201115 22:03:00.452" endtime="20201115 22:03:00.453"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:00.455" level="INFO">VALUE: [6.959000000000826e-06, 6.929999999998743e-06, 6.945000000001256e-06, 6.972000000000922e-06, 6.945000000001256e-06, 6.9579999999978825e-06, 6.945000000001256e-06, 6.930000000002212e-06, 6.917000000002116e-06, 6.9579999999978825e-06, 6.944000000001782e-06, 6.916000000002642e-06, 6.931000000001686e-06, 6.944000000001782e-06, 6.9579999999978825e-06, 6.888999999999507e-06, 6.930999999998216e-06, 6.888999999999507e-06, 6.931000000001686e-06, 6.931000000001686e-06, 6.943999999998313e-06, 6.945000000001256e-06, 6.931000000001686e-06, 6.929999999998743e-06, 6.944000000001782e-06, 6.944000000001782e-06, 6.943999999998313e-06, 6.945000000001256e-06, 6.9730000000003955e-06, 6.929999999998743e-06, 6.929999999998743e-06, 6.944999999997786e-06, 6.945000000001256e-06, 6.931000000001686e-06, 6.945000000001256e-06, 6.959000000000826e-06, 6.944999999997786e-06, 6.945000000001256e-06, 6.944000000001782e-06, 6.958000000001352e-06, 6.9579999999978825e-06, 6.930000000002212e-06, 6.930999999998216e-06, 6.943999999998313e-06, 6.945000000001256e-06, 6.930999999998216e-06, 7.000000000000062e-06, 6.945000000001256e-06, 6.901999999999603e-06, 6.930000000002212e-06]</msg>
<status status="PASS" starttime="20201115 22:03:00.454" endtime="20201115 22:03:00.455"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.449" endtime="20201115 22:03:00.456"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:00.458" endtime="20201115 22:03:00.459"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:00.462" endtime="20201115 22:03:00.481"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.460" endtime="20201115 22:03:00.482"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.457" endtime="20201115 22:03:00.482"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.095" endtime="20201115 22:03:00.483"></status>
</kw>
<msg timestamp="20201115 22:03:00.483" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:00.492" endtime="20201115 22:03:00.506"></status>
</kw>
<msg timestamp="20201115 22:03:00.506" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:00.490" endtime="20201115 22:03:00.507"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:00.509" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:00.507" endtime="20201115 22:03:00.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:00.510" endtime="20201115 22:03:00.511"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.487" endtime="20201115 22:03:00.512"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.485" endtime="20201115 22:03:00.512"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:00.519" endtime="20201115 22:03:00.807"></status>
</kw>
<msg timestamp="20201115 22:03:00.810" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020245764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020252708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:00.517" endtime="20201115 22:03:00.810"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:00.818" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020245764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020252708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:00.811" endtime="20201115 22:03:00.819"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:00.820" endtime="20201115 22:03:00.821"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.515" endtime="20201115 22:03:00.822"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.513" endtime="20201115 22:03:00.822"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:00.826" level="INFO">${RESULT} = [{'time': 0.020252708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.944000000001782e-06, 'source_diff': 6.944000000001782e-06}, {'time': 0.020336847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:00.823" endtime="20201115 22:03:00.826"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:00.840" level="INFO">${OVERHEAD} = {'diff': [6.944000000001782e-06, 6.958000000001352e-06, 6.929999999998743e-06, 6.930999999998216e-06, 6.929999999998743e-06, 6.861000000000367e-06, 6.945000000001256e-06, 7.013999999999632e-06, 6.9439...</msg>
<status status="PASS" starttime="20201115 22:03:00.827" endtime="20201115 22:03:00.840"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:00.844" level="INFO">NAME: 00-overhead-5-set</msg>
<status status="PASS" starttime="20201115 22:03:00.843" endtime="20201115 22:03:00.844"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:00.847" level="INFO">VALUE: [6.944000000001782e-06, 6.958000000001352e-06, 6.929999999998743e-06, 6.930999999998216e-06, 6.929999999998743e-06, 6.861000000000367e-06, 6.945000000001256e-06, 7.013999999999632e-06, 6.943999999998313e-06, 6.929999999998743e-06, 6.945000000001256e-06, 6.9169999999986465e-06, 7.000000000000062e-06, 6.930999999998216e-06, 6.915999999999173e-06, 6.944000000001782e-06, 6.972000000000922e-06, 6.915999999999173e-06, 6.929999999998743e-06, 6.929999999998743e-06, 6.930999999998216e-06, 6.944999999997786e-06, 6.929999999998743e-06, 6.943999999998313e-06, 6.9169999999986465e-06, 7.000000000000062e-06, 6.943999999998313e-06, 6.931000000001686e-06, 6.943999999998313e-06, 6.943999999998313e-06, 6.929999999998743e-06, 6.958000000001352e-06, 6.931000000001686e-06, 6.930999999998216e-06, 6.930000000002212e-06, 6.945000000001256e-06, 6.944000000001782e-06, 7.000000000000062e-06, 6.930999999998216e-06, 6.917000000002116e-06, 6.903000000002546e-06, 6.931000000001686e-06, 6.958000000001352e-06, 6.9579999999978825e-06, 6.958000000001352e-06, 6.930000000002212e-06, 7.0279999999992016e-06, 6.958000000001352e-06, 6.985999999997022e-06, 6.944000000001782e-06]</msg>
<status status="PASS" starttime="20201115 22:03:00.845" endtime="20201115 22:03:00.847"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.840" endtime="20201115 22:03:00.847"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:00.850" endtime="20201115 22:03:00.851"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:00.853" endtime="20201115 22:03:00.872"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.851" endtime="20201115 22:03:00.873"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.848" endtime="20201115 22:03:00.873"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.483" endtime="20201115 22:03:00.874"></status>
</kw>
<msg timestamp="20201115 22:03:00.874" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:00.883" endtime="20201115 22:03:00.897"></status>
</kw>
<msg timestamp="20201115 22:03:00.898" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:00.881" endtime="20201115 22:03:00.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:00.900" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:00.899" endtime="20201115 22:03:00.900"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:00.901" endtime="20201115 22:03:00.903"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.879" endtime="20201115 22:03:00.903"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.877" endtime="20201115 22:03:00.904"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:00.910" endtime="20201115 22:03:01.196"></status>
</kw>
<msg timestamp="20201115 22:03:01.200" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020002431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020009375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:00.909" endtime="20201115 22:03:01.200"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:01.208" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020002431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020009375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:01.201" endtime="20201115 22:03:01.208"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:01.209" endtime="20201115 22:03:01.210"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.906" endtime="20201115 22:03:01.211"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.904" endtime="20201115 22:03:01.211"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:01.216" level="INFO">${RESULT} = [{'time': 0.020009375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.943999999998313e-06, 'source_diff': 6.943999999998313e-06}, {'time': 0.020092861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:01.212" endtime="20201115 22:03:01.216"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:01.229" level="INFO">${OVERHEAD} = {'diff': [6.943999999998313e-06, 6.944000000001782e-06, 6.944000000001782e-06, 6.944000000001782e-06, 6.931000000001686e-06, 6.929999999998743e-06, 6.930000000002212e-06, 6.958000000001352e-06, 6.9450...</msg>
<status status="PASS" starttime="20201115 22:03:01.217" endtime="20201115 22:03:01.229"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:01.233" level="INFO">NAME: 00-overhead-5-set</msg>
<status status="PASS" starttime="20201115 22:03:01.232" endtime="20201115 22:03:01.234"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:01.236" level="INFO">VALUE: [6.943999999998313e-06, 6.944000000001782e-06, 6.944000000001782e-06, 6.944000000001782e-06, 6.931000000001686e-06, 6.929999999998743e-06, 6.930000000002212e-06, 6.958000000001352e-06, 6.945000000001256e-06, 6.929999999998743e-06, 6.958000000001352e-06, 6.958000000001352e-06, 6.930000000002212e-06, 6.888000000000033e-06, 6.943999999998313e-06, 6.958000000001352e-06, 6.847000000000797e-06, 6.916000000002642e-06, 6.9579999999978825e-06, 6.945000000001256e-06, 6.972000000000922e-06, 6.972000000000922e-06, 6.930999999998216e-06, 6.944999999997786e-06, 6.944000000001782e-06, 6.944999999997786e-06, 6.944000000001782e-06, 6.959000000000826e-06, 6.929999999998743e-06, 6.917000000002116e-06, 6.958000000001352e-06, 6.944000000001782e-06, 6.945000000001256e-06, 6.945000000001256e-06, 6.943999999998313e-06, 6.944000000001782e-06, 6.945000000001256e-06, 6.945000000001256e-06, 6.944999999997786e-06, 6.931000000001686e-06, 6.9869999999999655e-06, 6.944000000001782e-06, 6.930999999998216e-06, 6.929999999998743e-06, 6.917000000002116e-06, 6.958000000001352e-06, 6.945000000001256e-06, 6.9579999999978825e-06, 6.929999999998743e-06, 6.958000000001352e-06]</msg>
<status status="PASS" starttime="20201115 22:03:01.235" endtime="20201115 22:03:01.237"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.230" endtime="20201115 22:03:01.237"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:01.239" endtime="20201115 22:03:01.241"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:01.243" endtime="20201115 22:03:01.263"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.242" endtime="20201115 22:03:01.263"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.238" endtime="20201115 22:03:01.264"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.875" endtime="20201115 22:03:01.264"></status>
</kw>
<msg timestamp="20201115 22:03:01.264" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:01.273" endtime="20201115 22:03:01.287"></status>
</kw>
<msg timestamp="20201115 22:03:01.288" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:01.271" endtime="20201115 22:03:01.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:01.290" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:01.289" endtime="20201115 22:03:01.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:01.291" endtime="20201115 22:03:01.293"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.269" endtime="20201115 22:03:01.293"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.267" endtime="20201115 22:03:01.294"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:01.300" endtime="20201115 22:03:01.587"></status>
</kw>
<msg timestamp="20201115 22:03:01.591" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019748444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019755361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:01.298" endtime="20201115 22:03:01.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:01.600" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019748444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019755361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:01.592" endtime="20201115 22:03:01.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:01.601" endtime="20201115 22:03:01.602"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.296" endtime="20201115 22:03:01.603"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.294" endtime="20201115 22:03:01.603"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:01.608" level="INFO">${RESULT} = [{'time': 0.019755361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.9169999999986465e-06, 'source_diff': 6.9169999999986465e-06}, {'time': 0.019842139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:01.604" endtime="20201115 22:03:01.608"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:01.621" level="INFO">${OVERHEAD} = {'diff': [6.9169999999986465e-06, 6.889000000002976e-06, 6.972000000000922e-06, 6.9869999999999655e-06, 6.944000000001782e-06, 6.888999999999507e-06, 6.986000000000492e-06, 6.930000000002212e-06, 6.95...</msg>
<status status="PASS" starttime="20201115 22:03:01.608" endtime="20201115 22:03:01.621"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:01.626" level="INFO">NAME: 00-overhead-5-set</msg>
<status status="PASS" starttime="20201115 22:03:01.624" endtime="20201115 22:03:01.626"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:01.628" level="INFO">VALUE: [6.9169999999986465e-06, 6.889000000002976e-06, 6.972000000000922e-06, 6.9869999999999655e-06, 6.944000000001782e-06, 6.888999999999507e-06, 6.986000000000492e-06, 6.930000000002212e-06, 6.958000000001352e-06, 6.9719999999974525e-06, 7.000000000000062e-06, 6.943999999998313e-06, 6.959000000000826e-06, 6.917000000002116e-06, 6.931000000001686e-06, 6.929999999998743e-06, 6.930999999998216e-06, 6.944999999997786e-06, 6.929999999998743e-06, 6.944000000001782e-06, 6.903000000002546e-06, 6.9029999999990765e-06, 6.959000000000826e-06, 6.944000000001782e-06, 6.9029999999990765e-06, 6.945000000001256e-06, 6.986000000000492e-06, 6.930999999998216e-06, 6.930000000002212e-06, 6.916000000002642e-06, 6.9169999999986465e-06, 6.9169999999986465e-06, 6.929999999998743e-06, 6.944999999997786e-06, 6.945000000001256e-06, 6.944999999997786e-06, 6.943999999998313e-06, 6.929999999998743e-06, 6.847000000000797e-06, 6.945000000001256e-06, 6.985999999997022e-06, 6.9719999999974525e-06, 6.944000000001782e-06, 6.9579999999978825e-06, 6.916000000002642e-06, 6.9579999999978825e-06, 6.945000000001256e-06, 6.945000000001256e-06, 6.959000000000826e-06, 6.972000000000922e-06]</msg>
<status status="PASS" starttime="20201115 22:03:01.627" endtime="20201115 22:03:01.629"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.622" endtime="20201115 22:03:01.629"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:01.632" endtime="20201115 22:03:01.633"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:01.635" endtime="20201115 22:03:01.654"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.633" endtime="20201115 22:03:01.655"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.630" endtime="20201115 22:03:01.656"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.265" endtime="20201115 22:03:01.656"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.701" endtime="20201115 22:03:01.656"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.701" endtime="20201115 22:03:01.656"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:01.658" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:01.667" endtime="20201115 22:03:01.681"></status>
</kw>
<msg timestamp="20201115 22:03:01.681" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:01.666" endtime="20201115 22:03:01.681"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:01.683" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:01.682" endtime="20201115 22:03:01.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:01.685" endtime="20201115 22:03:01.686"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.663" endtime="20201115 22:03:01.687"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.661" endtime="20201115 22:03:01.687"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:01.694" endtime="20201115 22:03:01.979"></status>
</kw>
<msg timestamp="20201115 22:03:01.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022010361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022018097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:01.692" endtime="20201115 22:03:01.982"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:01.990" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022010361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022018097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:01.983" endtime="20201115 22:03:01.991"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:01.992" endtime="20201115 22:03:01.994"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.690" endtime="20201115 22:03:01.994"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.688" endtime="20201115 22:03:01.995"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:01.999" level="INFO">${RESULT} = [{'time': 0.022018097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.736000000001242e-06, 'source_diff': 7.736000000001242e-06}, {'time': 0.022111028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:01.996" endtime="20201115 22:03:01.999"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:02.013" level="INFO">${OVERHEAD} = {'diff': [7.736000000001242e-06, 7.709000000001576e-06, 7.709000000001576e-06, 7.679999999999493e-06, 7.750000000000812e-06, 7.749999999997342e-06, 7.679999999999493e-06, 7.625000000000687e-06, 7.6939...</msg>
<status status="PASS" starttime="20201115 22:03:02.000" endtime="20201115 22:03:02.013"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:02.017" level="INFO">NAME: 00-overhead-6-set</msg>
<status status="PASS" starttime="20201115 22:03:02.016" endtime="20201115 22:03:02.017"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:02.020" level="INFO">VALUE: [7.736000000001242e-06, 7.709000000001576e-06, 7.709000000001576e-06, 7.679999999999493e-06, 7.750000000000812e-06, 7.749999999997342e-06, 7.679999999999493e-06, 7.625000000000687e-06, 7.693999999999063e-06, 7.681000000002436e-06, 7.708000000002102e-06, 7.680999999998966e-06, 7.707999999998633e-06, 7.625000000000687e-06, 7.709000000001576e-06, 7.721999999998203e-06, 7.666999999999397e-06, 7.680999999998966e-06, 7.694999999998536e-06, 7.709000000001576e-06, 7.695000000002006e-06, 7.721999999998203e-06, 7.707999999998633e-06, 7.707999999998633e-06, 7.639000000000257e-06, 7.764000000000382e-06, 7.735999999997772e-06, 7.666999999999397e-06, 7.708999999998106e-06, 7.722000000001672e-06, 7.707999999998633e-06, 7.708999999998106e-06, 7.681000000002436e-06, 7.693999999999063e-06, 7.707999999998633e-06, 7.708999999998106e-06, 7.694999999998536e-06, 7.707999999998633e-06, 7.709000000001576e-06, 7.694000000002532e-06, 7.707999999998633e-06, 7.709000000001576e-06, 7.722000000001672e-06, 7.693999999999063e-06, 7.707999999998633e-06, 7.707999999998633e-06, 7.679999999999493e-06, 7.764000000000382e-06, 7.708999999998106e-06, 7.707999999998633e-06]</msg>
<status status="PASS" starttime="20201115 22:03:02.018" endtime="20201115 22:03:02.020"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.013" endtime="20201115 22:03:02.021"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:02.023" endtime="20201115 22:03:02.024"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:02.026" endtime="20201115 22:03:02.046"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.025" endtime="20201115 22:03:02.047"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.021" endtime="20201115 22:03:02.047"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.659" endtime="20201115 22:03:02.047"></status>
</kw>
<msg timestamp="20201115 22:03:02.048" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:02.057" endtime="20201115 22:03:02.074"></status>
</kw>
<msg timestamp="20201115 22:03:02.074" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:02.056" endtime="20201115 22:03:02.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:02.077" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:02.075" endtime="20201115 22:03:02.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:02.078" endtime="20201115 22:03:02.079"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.053" endtime="20201115 22:03:02.080"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.050" endtime="20201115 22:03:02.080"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:02.087" endtime="20201115 22:03:02.374"></status>
</kw>
<msg timestamp="20201115 22:03:02.377" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021741806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021749514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:02.085" endtime="20201115 22:03:02.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:02.385" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021741806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021749514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:02.378" endtime="20201115 22:03:02.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:02.386" endtime="20201115 22:03:02.388"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.082" endtime="20201115 22:03:02.388"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.081" endtime="20201115 22:03:02.389"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:02.394" level="INFO">${RESULT} = [{'time': 0.021749514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.708000000002102e-06, 'source_diff': 7.708000000002102e-06}, {'time': 0.021841375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:02.390" endtime="20201115 22:03:02.394"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:02.408" level="INFO">${OVERHEAD} = {'diff': [7.708000000002102e-06, 7.721999999998203e-06, 7.707999999998633e-06, 7.721999999998203e-06, 7.694999999998536e-06, 7.681000000002436e-06, 7.665999999999923e-06, 7.707999999998633e-06, 7.6800...</msg>
<status status="PASS" starttime="20201115 22:03:02.395" endtime="20201115 22:03:02.408"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:02.412" level="INFO">NAME: 00-overhead-6-set</msg>
<status status="PASS" starttime="20201115 22:03:02.411" endtime="20201115 22:03:02.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:02.415" level="INFO">VALUE: [7.708000000002102e-06, 7.721999999998203e-06, 7.707999999998633e-06, 7.721999999998203e-06, 7.694999999998536e-06, 7.681000000002436e-06, 7.665999999999923e-06, 7.707999999998633e-06, 7.680000000002962e-06, 7.694000000002532e-06, 7.707999999998633e-06, 7.694999999998536e-06, 7.707999999998633e-06, 7.707999999998633e-06, 7.680999999998966e-06, 7.708000000002102e-06, 7.694999999998536e-06, 7.666999999999397e-06, 7.680999999998966e-06, 7.709000000001576e-06, 7.708000000002102e-06, 7.693999999999063e-06, 7.708000000002102e-06, 7.749999999997342e-06, 7.709000000001576e-06, 7.708000000002102e-06, 7.708999999998106e-06, 7.777000000000478e-06, 7.695000000002006e-06, 7.679999999999493e-06, 7.708000000002102e-06, 7.708000000002102e-06, 7.707999999998633e-06, 7.777999999999952e-06, 7.666999999999397e-06, 7.680000000002962e-06, 7.737000000000716e-06, 7.709000000001576e-06, 7.707999999998633e-06, 7.709000000001576e-06, 7.693999999999063e-06, 7.709000000001576e-06, 7.694999999998536e-06, 7.679999999999493e-06, 7.625000000000687e-06, 7.708000000002102e-06, 7.777999999999952e-06, 7.708000000002102e-06, 7.736000000001242e-06, 7.707999999998633e-06]</msg>
<status status="PASS" starttime="20201115 22:03:02.413" endtime="20201115 22:03:02.415"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.409" endtime="20201115 22:03:02.416"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:02.418" endtime="20201115 22:03:02.419"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:02.421" endtime="20201115 22:03:02.441"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.420" endtime="20201115 22:03:02.441"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.416" endtime="20201115 22:03:02.442"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.048" endtime="20201115 22:03:02.442"></status>
</kw>
<msg timestamp="20201115 22:03:02.442" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:02.451" endtime="20201115 22:03:02.467"></status>
</kw>
<msg timestamp="20201115 22:03:02.468" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:02.450" endtime="20201115 22:03:02.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:02.470" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:02.469" endtime="20201115 22:03:02.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:02.471" endtime="20201115 22:03:02.473"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.447" endtime="20201115 22:03:02.473"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.445" endtime="20201115 22:03:02.474"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:02.480" endtime="20201115 22:03:02.768"></status>
</kw>
<msg timestamp="20201115 22:03:02.771" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020569944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020577625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:02.479" endtime="20201115 22:03:02.771"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:02.779" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020569944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020577625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:02.772" endtime="20201115 22:03:02.779"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:02.780" endtime="20201115 22:03:02.781"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.476" endtime="20201115 22:03:02.782"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.474" endtime="20201115 22:03:02.782"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:02.787" level="INFO">${RESULT} = [{'time': 0.020577625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.680999999998966e-06, 'source_diff': 7.680999999998966e-06}, {'time': 0.020670597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:02.783" endtime="20201115 22:03:02.787"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:02.801" level="INFO">${OVERHEAD} = {'diff': [7.680999999998966e-06, 7.764000000000382e-06, 7.666999999999397e-06, 7.695000000002006e-06, 7.708000000002102e-06, 7.708000000002102e-06, 7.651999999996884e-06, 7.736000000001242e-06, 7.7230...</msg>
<status status="PASS" starttime="20201115 22:03:02.788" endtime="20201115 22:03:02.802"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:02.806" level="INFO">NAME: 00-overhead-6-set</msg>
<status status="PASS" starttime="20201115 22:03:02.805" endtime="20201115 22:03:02.806"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:02.808" level="INFO">VALUE: [7.680999999998966e-06, 7.764000000000382e-06, 7.666999999999397e-06, 7.695000000002006e-06, 7.708000000002102e-06, 7.708000000002102e-06, 7.651999999996884e-06, 7.736000000001242e-06, 7.723000000001146e-06, 7.695000000002006e-06, 7.709000000001576e-06, 7.708000000002102e-06, 7.722000000001672e-06, 7.639000000000257e-06, 7.693999999999063e-06, 7.639000000000257e-06, 7.750000000000812e-06, 7.707999999998633e-06, 7.707999999998633e-06, 7.709000000001576e-06, 7.722000000001672e-06, 7.666999999999397e-06, 7.694999999998536e-06, 7.665999999999923e-06, 7.721999999998203e-06, 7.763000000000908e-06, 7.679999999999493e-06, 7.625000000000687e-06, 7.709000000001576e-06, 7.693999999999063e-06, 7.680999999998966e-06, 7.777000000000478e-06, 7.693999999999063e-06, 7.708999999998106e-06, 7.695000000002006e-06, 7.681000000002436e-06, 7.694000000002532e-06, 7.708000000002102e-06, 7.707999999998633e-06, 7.750000000000812e-06, 7.709000000001576e-06, 7.694999999998536e-06, 7.679999999999493e-06, 7.693999999999063e-06, 7.708000000002102e-06, 7.750000000000812e-06, 7.694000000002532e-06, 7.679999999999493e-06, 7.708999999998106e-06, 7.764000000000382e-06]</msg>
<status status="PASS" starttime="20201115 22:03:02.807" endtime="20201115 22:03:02.809"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.802" endtime="20201115 22:03:02.809"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:02.811" endtime="20201115 22:03:02.813"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:02.815" endtime="20201115 22:03:02.834"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.813" endtime="20201115 22:03:02.835"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.810" endtime="20201115 22:03:02.835"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.443" endtime="20201115 22:03:02.836"></status>
</kw>
<msg timestamp="20201115 22:03:02.836" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:02.845" endtime="20201115 22:03:02.860"></status>
</kw>
<msg timestamp="20201115 22:03:02.861" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:02.843" endtime="20201115 22:03:02.861"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:02.863" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:02.862" endtime="20201115 22:03:02.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:02.864" endtime="20201115 22:03:02.866"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.841" endtime="20201115 22:03:02.866"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.838" endtime="20201115 22:03:02.867"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:02.873" endtime="20201115 22:03:03.161"></status>
</kw>
<msg timestamp="20201115 22:03:03.164" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019948736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019956444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:02.872" endtime="20201115 22:03:03.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:03.172" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019948736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019956444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:03.165" endtime="20201115 22:03:03.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:03.173" endtime="20201115 22:03:03.175"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.869" endtime="20201115 22:03:03.176"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.867" endtime="20201115 22:03:03.176"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:03.180" level="INFO">${RESULT} = [{'time': 0.019956444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.707999999998633e-06, 'source_diff': 7.707999999998633e-06}, {'time': 0.020049625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:03.177" endtime="20201115 22:03:03.180"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:03.197" level="INFO">${OVERHEAD} = {'diff': [7.707999999998633e-06, 7.708000000002102e-06, 7.736000000001242e-06, 7.708000000002102e-06, 7.707999999998633e-06, 7.721999999998203e-06, 7.707999999998633e-06, 7.707999999998633e-06, 7.7079...</msg>
<status status="PASS" starttime="20201115 22:03:03.181" endtime="20201115 22:03:03.197"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:03.206" level="INFO">NAME: 00-overhead-6-set</msg>
<status status="PASS" starttime="20201115 22:03:03.204" endtime="20201115 22:03:03.207"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:03.211" level="INFO">VALUE: [7.707999999998633e-06, 7.708000000002102e-06, 7.736000000001242e-06, 7.708000000002102e-06, 7.707999999998633e-06, 7.721999999998203e-06, 7.707999999998633e-06, 7.707999999998633e-06, 7.707999999998633e-06, 7.707999999998633e-06, 7.708000000002102e-06, 7.693999999999063e-06, 7.679999999999493e-06, 7.777999999999952e-06, 7.721999999998203e-06, 7.695000000002006e-06, 7.708000000002102e-06, 7.707999999998633e-06, 7.680000000002962e-06, 7.679999999999493e-06, 7.722999999997676e-06, 7.693999999999063e-06, 7.723000000001146e-06, 7.707999999998633e-06, 7.708000000002102e-06, 7.777999999999952e-06, 7.736000000001242e-06, 7.695000000002006e-06, 7.693999999999063e-06, 7.681000000002436e-06, 7.693999999999063e-06, 7.764000000000382e-06, 7.679999999999493e-06, 7.680000000002962e-06, 7.709000000001576e-06, 7.695000000002006e-06, 7.708000000002102e-06, 7.693999999999063e-06, 7.693999999999063e-06, 7.708000000002102e-06, 7.666999999999397e-06, 7.693999999999063e-06, 7.694999999998536e-06, 7.666999999999397e-06, 7.723000000001146e-06, 7.679999999999493e-06, 7.694000000002532e-06, 7.737000000000716e-06, 7.679999999999493e-06, 7.707999999998633e-06]</msg>
<status status="PASS" starttime="20201115 22:03:03.208" endtime="20201115 22:03:03.212"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.199" endtime="20201115 22:03:03.213"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:03.218" endtime="20201115 22:03:03.220"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:03.225" endtime="20201115 22:03:03.247"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.221" endtime="20201115 22:03:03.248"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.214" endtime="20201115 22:03:03.249"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.836" endtime="20201115 22:03:03.249"></status>
</kw>
<msg timestamp="20201115 22:03:03.250" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:03.268" endtime="20201115 22:03:03.287"></status>
</kw>
<msg timestamp="20201115 22:03:03.287" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:03.265" endtime="20201115 22:03:03.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:03.292" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:03.290" endtime="20201115 22:03:03.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:03.294" endtime="20201115 22:03:03.295"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.259" endtime="20201115 22:03:03.296"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.255" endtime="20201115 22:03:03.296"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:03.302" endtime="20201115 22:03:03.589"></status>
</kw>
<msg timestamp="20201115 22:03:03.592" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034885042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034892736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:03.301" endtime="20201115 22:03:03.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:03.600" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034885042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034892736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:03.593" endtime="20201115 22:03:03.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:03.601" endtime="20201115 22:03:03.603"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.299" endtime="20201115 22:03:03.603"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.297" endtime="20201115 22:03:03.604"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:03.608" level="INFO">${RESULT} = [{'time': 0.034892736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.694000000002532e-06, 'source_diff': 7.694000000002532e-06}, {'time': 0.0349865, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:03:03.605" endtime="20201115 22:03:03.608"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:03.621" level="INFO">${OVERHEAD} = {'diff': [7.694000000002532e-06, 7.693999999995593e-06, 7.651999999996884e-06, 7.695000000002006e-06, 7.708000000002102e-06, 7.708000000002102e-06, 7.695000000002006e-06, 7.722000000001672e-06, 7.7500...</msg>
<status status="PASS" starttime="20201115 22:03:03.609" endtime="20201115 22:03:03.622"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:03.626" level="INFO">NAME: 00-overhead-6-set</msg>
<status status="PASS" starttime="20201115 22:03:03.625" endtime="20201115 22:03:03.626"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:03.628" level="INFO">VALUE: [7.694000000002532e-06, 7.693999999995593e-06, 7.651999999996884e-06, 7.695000000002006e-06, 7.708000000002102e-06, 7.708000000002102e-06, 7.695000000002006e-06, 7.722000000001672e-06, 7.750000000000812e-06, 7.652999999996357e-06, 7.764000000000382e-06, 7.707999999995163e-06, 7.736000000001242e-06, 7.707999999995163e-06, 7.695000000002006e-06, 7.667000000002866e-06, 7.750000000000812e-06, 7.708000000002102e-06, 7.694999999995067e-06, 7.735999999994303e-06, 7.708000000002102e-06, 7.679999999996023e-06, 7.681000000002436e-06, 7.709000000001576e-06, 7.638999999996787e-06, 7.694000000002532e-06, 7.680000000002962e-06, 7.694000000002532e-06, 7.681000000002436e-06, 7.708000000002102e-06, 7.679999999996023e-06, 7.694999999995067e-06, 7.694000000002532e-06, 7.708000000002102e-06, 7.707999999995163e-06, 7.707999999995163e-06, 7.708000000002102e-06, 7.681000000002436e-06, 7.708000000002102e-06, 7.694999999995067e-06, 7.736000000001242e-06, 7.695000000002006e-06, 7.695000000002006e-06, 7.694999999995067e-06, 7.709000000001576e-06, 7.695000000002006e-06, 7.708000000002102e-06, 7.722000000001672e-06, 7.694000000002532e-06, 7.693999999995593e-06]</msg>
<status status="PASS" starttime="20201115 22:03:03.627" endtime="20201115 22:03:03.629"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.622" endtime="20201115 22:03:03.629"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:03.631" endtime="20201115 22:03:03.633"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:03.635" endtime="20201115 22:03:03.654"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.633" endtime="20201115 22:03:03.655"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.630" endtime="20201115 22:03:03.655"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.251" endtime="20201115 22:03:03.656"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.657" endtime="20201115 22:03:03.656"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.657" endtime="20201115 22:03:03.656"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:03.658" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:03.667" endtime="20201115 22:03:03.684"></status>
</kw>
<msg timestamp="20201115 22:03:03.684" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:03.666" endtime="20201115 22:03:03.684"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:03.687" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:03.685" endtime="20201115 22:03:03.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:03.688" endtime="20201115 22:03:03.689"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.663" endtime="20201115 22:03:03.690"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.661" endtime="20201115 22:03:03.690"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:03.697" endtime="20201115 22:03:03.986"></status>
</kw>
<msg timestamp="20201115 22:03:03.989" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023021319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023029806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:03.696" endtime="20201115 22:03:03.989"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:03.997" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023021319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023029806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:03.990" endtime="20201115 22:03:03.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:03.998" endtime="20201115 22:03:04.000"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.693" endtime="20201115 22:03:04.000"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.691" endtime="20201115 22:03:04.001"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:04.005" level="INFO">${RESULT} = [{'time': 0.023029806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.487000000001466e-06, 'source_diff': 8.487000000001466e-06}, {'time': 0.023133222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:04.001" endtime="20201115 22:03:04.005"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:04.018" level="INFO">${OVERHEAD} = {'diff': [8.487000000001466e-06, 8.457999999999383e-06, 8.471999999998953e-06, 8.444999999999286e-06, 8.458000000002852e-06, 8.457999999999383e-06, 8.430000000000243e-06, 8.458999999998856e-06, 8.4589...</msg>
<status status="PASS" starttime="20201115 22:03:04.006" endtime="20201115 22:03:04.018"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:04.023" level="INFO">NAME: 00-overhead-7-set</msg>
<status status="PASS" starttime="20201115 22:03:04.022" endtime="20201115 22:03:04.023"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:04.025" level="INFO">VALUE: [8.487000000001466e-06, 8.457999999999383e-06, 8.471999999998953e-06, 8.444999999999286e-06, 8.458000000002852e-06, 8.457999999999383e-06, 8.430000000000243e-06, 8.458999999998856e-06, 8.458999999998856e-06, 8.458999999998856e-06, 8.471999999998953e-06, 8.472000000002422e-06, 8.486000000001992e-06, 8.472000000002422e-06, 8.457999999999383e-06, 8.457999999999383e-06, 8.471999999998953e-06, 8.443999999999813e-06, 8.472000000002422e-06, 8.459000000002326e-06, 8.430999999999716e-06, 8.458999999998856e-06, 8.513999999997662e-06, 8.430000000000243e-06, 8.526999999997759e-06, 8.403000000000577e-06, 8.471999999998953e-06, 8.472000000002422e-06, 8.472999999998426e-06, 8.458999999998856e-06, 8.443999999999813e-06, 8.473000000001896e-06, 8.486000000001992e-06, 8.457999999999383e-06, 8.457999999999383e-06, 8.457999999999383e-06, 8.388000000001533e-06, 8.486000000001992e-06, 8.403000000000577e-06, 8.459000000002326e-06, 8.458999999998856e-06, 8.457999999999383e-06, 8.499999999998092e-06, 8.443999999999813e-06, 8.471999999998953e-06, 8.459000000002326e-06, 8.457999999999383e-06, 8.402999999997107e-06, 8.471999999998953e-06, 8.528000000000702e-06]</msg>
<status status="PASS" starttime="20201115 22:03:04.024" endtime="20201115 22:03:04.026"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.019" endtime="20201115 22:03:04.026"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:04.028" endtime="20201115 22:03:04.029"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:04.032" endtime="20201115 22:03:04.051"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.030" endtime="20201115 22:03:04.052"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.027" endtime="20201115 22:03:04.052"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.659" endtime="20201115 22:03:04.052"></status>
</kw>
<msg timestamp="20201115 22:03:04.053" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:04.061" endtime="20201115 22:03:04.077"></status>
</kw>
<msg timestamp="20201115 22:03:04.078" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:04.060" endtime="20201115 22:03:04.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:04.087" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:04.079" endtime="20201115 22:03:04.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:04.089" endtime="20201115 22:03:04.091"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.057" endtime="20201115 22:03:04.091"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.055" endtime="20201115 22:03:04.092"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:04.098" endtime="20201115 22:03:04.385"></status>
</kw>
<msg timestamp="20201115 22:03:04.388" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01964, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019648486, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201115 22:03:04.097" endtime="20201115 22:03:04.388"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:04.396" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01964, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019648486, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201115 22:03:04.389" endtime="20201115 22:03:04.397"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:04.397" endtime="20201115 22:03:04.399"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.094" endtime="20201115 22:03:04.399"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.092" endtime="20201115 22:03:04.400"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:04.404" level="INFO">${RESULT} = [{'time': 0.019648486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.485999999998523e-06, 'source_diff': 8.485999999998523e-06}, {'time': 0.019751833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:04.401" endtime="20201115 22:03:04.404"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:04.417" level="INFO">${OVERHEAD} = {'diff': [8.485999999998523e-06, 8.443999999999813e-06, 8.402000000001103e-06, 8.471999999998953e-06, 8.514000000001132e-06, 8.459000000002326e-06, 8.528000000000702e-06, 8.471999999998953e-06, 8.4579...</msg>
<status status="PASS" starttime="20201115 22:03:04.405" endtime="20201115 22:03:04.418"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:04.422" level="INFO">NAME: 00-overhead-7-set</msg>
<status status="PASS" starttime="20201115 22:03:04.421" endtime="20201115 22:03:04.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:04.424" level="INFO">VALUE: [8.485999999998523e-06, 8.443999999999813e-06, 8.402000000001103e-06, 8.471999999998953e-06, 8.514000000001132e-06, 8.459000000002326e-06, 8.528000000000702e-06, 8.471999999998953e-06, 8.457999999999383e-06, 8.457999999999383e-06, 8.485999999998523e-06, 8.471999999998953e-06, 8.445000000002756e-06, 8.472000000002422e-06, 8.485999999998523e-06, 8.457999999999383e-06, 8.443999999999813e-06, 8.485999999998523e-06, 8.472999999998426e-06, 8.485999999998523e-06, 8.458999999998856e-06, 8.457999999999383e-06, 8.486000000001992e-06, 8.472000000002422e-06, 8.457999999999383e-06, 8.471999999998953e-06, 8.389000000001007e-06, 8.444999999999286e-06, 8.403000000000577e-06, 8.415999999997203e-06, 8.471999999998953e-06, 8.443999999999813e-06, 8.472000000002422e-06, 8.486000000001992e-06, 8.485999999998523e-06, 8.444999999999286e-06, 8.457999999999383e-06, 8.472999999998426e-06, 8.402999999997107e-06, 8.457999999999383e-06, 8.500000000001562e-06, 8.416000000000673e-06, 8.471999999998953e-06, 8.513999999997662e-06, 8.514000000001132e-06, 8.457999999999383e-06, 8.472000000002422e-06, 8.471999999998953e-06, 8.430999999999716e-06, 8.443999999999813e-06]</msg>
<status status="PASS" starttime="20201115 22:03:04.423" endtime="20201115 22:03:04.425"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.418" endtime="20201115 22:03:04.425"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:04.427" endtime="20201115 22:03:04.429"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:04.431" endtime="20201115 22:03:04.450"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.429" endtime="20201115 22:03:04.451"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.426" endtime="20201115 22:03:04.451"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.053" endtime="20201115 22:03:04.452"></status>
</kw>
<msg timestamp="20201115 22:03:04.452" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:04.461" endtime="20201115 22:03:04.474"></status>
</kw>
<msg timestamp="20201115 22:03:04.475" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:04.459" endtime="20201115 22:03:04.475"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:04.477" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:04.476" endtime="20201115 22:03:04.478"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:04.478" endtime="20201115 22:03:04.480"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.456" endtime="20201115 22:03:04.480"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.454" endtime="20201115 22:03:04.481"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:04.487" endtime="20201115 22:03:04.772"></status>
</kw>
<msg timestamp="20201115 22:03:04.775" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020649403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020657847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:04.486" endtime="20201115 22:03:04.776"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:04.784" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020649403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020657847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:04.777" endtime="20201115 22:03:04.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:04.785" endtime="20201115 22:03:04.786"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.483" endtime="20201115 22:03:04.787"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.481" endtime="20201115 22:03:04.787"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:04.791" level="INFO">${RESULT} = [{'time': 0.020657847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.443999999999813e-06, 'source_diff': 8.443999999999813e-06}, {'time': 0.020757861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:04.788" endtime="20201115 22:03:04.792"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:04.805" level="INFO">${OVERHEAD} = {'diff': [8.443999999999813e-06, 8.457999999999383e-06, 8.485999999998523e-06, 8.430999999999716e-06, 8.471999999998953e-06, 8.458999999998856e-06, 8.457999999999383e-06, 8.527999999997232e-06, 8.4170...</msg>
<status status="PASS" starttime="20201115 22:03:04.792" endtime="20201115 22:03:04.805"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:04.809" level="INFO">NAME: 00-overhead-7-set</msg>
<status status="PASS" starttime="20201115 22:03:04.808" endtime="20201115 22:03:04.810"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:04.812" level="INFO">VALUE: [8.443999999999813e-06, 8.457999999999383e-06, 8.485999999998523e-06, 8.430999999999716e-06, 8.471999999998953e-06, 8.458999999998856e-06, 8.457999999999383e-06, 8.527999999997232e-06, 8.417000000000147e-06, 8.457999999999383e-06, 8.443999999999813e-06, 8.445000000002756e-06, 8.471999999998953e-06, 8.458000000002852e-06, 8.458000000002852e-06, 8.417000000000147e-06, 8.457999999999383e-06, 8.459000000002326e-06, 8.457999999999383e-06, 8.485999999998523e-06, 8.486000000001992e-06, 8.471999999998953e-06, 8.459000000002326e-06, 8.513999999997662e-06, 8.403000000000577e-06, 8.473000000001896e-06, 8.457999999999383e-06, 8.472000000002422e-06, 8.458999999998856e-06, 8.443999999999813e-06, 8.472999999998426e-06, 8.472000000002422e-06, 8.443999999999813e-06, 8.457999999999383e-06, 8.472999999998426e-06, 8.471999999998953e-06, 8.512999999998189e-06, 8.471999999998953e-06, 8.457999999999383e-06, 8.457999999999383e-06, 8.457999999999383e-06, 8.430999999999716e-06, 8.472999999998426e-06, 8.471999999998953e-06, 8.500000000001562e-06, 8.472000000002422e-06, 8.458999999998856e-06, 8.457999999999383e-06, 8.389000000001007e-06, 8.445000000002756e-06]</msg>
<status status="PASS" starttime="20201115 22:03:04.811" endtime="20201115 22:03:04.812"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.806" endtime="20201115 22:03:04.813"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:04.815" endtime="20201115 22:03:04.816"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:04.818" endtime="20201115 22:03:04.838"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.817" endtime="20201115 22:03:04.838"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.813" endtime="20201115 22:03:04.839"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.452" endtime="20201115 22:03:04.839"></status>
</kw>
<msg timestamp="20201115 22:03:04.839" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:04.849" endtime="20201115 22:03:04.864"></status>
</kw>
<msg timestamp="20201115 22:03:04.864" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:04.847" endtime="20201115 22:03:04.864"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:04.867" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:04.865" endtime="20201115 22:03:04.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:04.868" endtime="20201115 22:03:04.869"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.844" endtime="20201115 22:03:04.870"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.842" endtime="20201115 22:03:04.870"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:04.877" endtime="20201115 22:03:05.162"></status>
</kw>
<msg timestamp="20201115 22:03:05.166" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020111264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020119708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:04.875" endtime="20201115 22:03:05.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:05.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020111264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020119708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:05.167" endtime="20201115 22:03:05.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:05.175" endtime="20201115 22:03:05.176"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.872" endtime="20201115 22:03:05.177"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.871" endtime="20201115 22:03:05.177"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:05.181" level="INFO">${RESULT} = [{'time': 0.020119708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.443999999999813e-06, 'source_diff': 8.443999999999813e-06}, {'time': 0.020220458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:05.178" endtime="20201115 22:03:05.182"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:05.195" level="INFO">${OVERHEAD} = {'diff': [8.443999999999813e-06, 8.485999999998523e-06, 8.499999999998092e-06, 8.457999999999383e-06, 8.403000000000577e-06, 8.457999999999383e-06, 8.430000000000243e-06, 8.443999999999813e-06, 8.4580...</msg>
<status status="PASS" starttime="20201115 22:03:05.182" endtime="20201115 22:03:05.195"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:05.199" level="INFO">NAME: 00-overhead-7-set</msg>
<status status="PASS" starttime="20201115 22:03:05.198" endtime="20201115 22:03:05.200"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:05.202" level="INFO">VALUE: [8.443999999999813e-06, 8.485999999998523e-06, 8.499999999998092e-06, 8.457999999999383e-06, 8.403000000000577e-06, 8.457999999999383e-06, 8.430000000000243e-06, 8.443999999999813e-06, 8.458000000002852e-06, 8.459000000002326e-06, 8.471999999998953e-06, 8.471999999998953e-06, 8.443999999999813e-06, 8.444999999999286e-06, 8.471999999998953e-06, 8.443999999999813e-06, 8.458999999998856e-06, 8.457999999999383e-06, 8.486000000001992e-06, 8.500000000001562e-06, 8.457999999999383e-06, 8.471999999998953e-06, 8.499999999998092e-06, 8.459000000002326e-06, 8.445000000002756e-06, 8.417000000000147e-06, 8.471999999998953e-06, 8.528000000000702e-06, 8.457999999999383e-06, 8.459000000002326e-06, 8.472000000002422e-06, 8.443999999999813e-06, 8.458000000002852e-06, 8.444999999999286e-06, 8.445000000002756e-06, 8.458999999998856e-06, 8.472999999998426e-06, 8.458999999998856e-06, 8.471999999998953e-06, 8.430999999999716e-06, 8.471999999998953e-06, 8.485999999998523e-06, 8.473000000001896e-06, 8.471999999998953e-06, 8.458000000002852e-06, 8.472000000002422e-06, 8.499999999998092e-06, 8.458999999998856e-06, 8.417000000000147e-06, 8.457999999999383e-06]</msg>
<status status="PASS" starttime="20201115 22:03:05.200" endtime="20201115 22:03:05.202"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.196" endtime="20201115 22:03:05.203"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:05.205" endtime="20201115 22:03:05.207"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:05.209" endtime="20201115 22:03:05.228"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.207" endtime="20201115 22:03:05.229"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.203" endtime="20201115 22:03:05.229"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.840" endtime="20201115 22:03:05.230"></status>
</kw>
<msg timestamp="20201115 22:03:05.230" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:05.239" endtime="20201115 22:03:05.253"></status>
</kw>
<msg timestamp="20201115 22:03:05.253" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:05.237" endtime="20201115 22:03:05.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:05.256" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:05.254" endtime="20201115 22:03:05.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:05.257" endtime="20201115 22:03:05.258"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.234" endtime="20201115 22:03:05.259"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.232" endtime="20201115 22:03:05.259"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:05.266" endtime="20201115 22:03:05.552"></status>
</kw>
<msg timestamp="20201115 22:03:05.556" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019707292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01971575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:03:05.264" endtime="20201115 22:03:05.556"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:05.564" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019707292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01971575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:03:05.557" endtime="20201115 22:03:05.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:05.565" endtime="20201115 22:03:05.567"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.262" endtime="20201115 22:03:05.567"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.260" endtime="20201115 22:03:05.567"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:05.572" level="INFO">${RESULT} = [{'time': 0.01971575, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.457999999999383e-06, 'source_diff': 8.457999999999383e-06}, {'time': 0.019816056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:03:05.568" endtime="20201115 22:03:05.572"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:05.585" level="INFO">${OVERHEAD} = {'diff': [8.457999999999383e-06, 8.458999999998856e-06, 8.471999999998953e-06, 8.471999999998953e-06, 8.458000000002852e-06, 8.472000000002422e-06, 8.457999999999383e-06, 8.472000000002422e-06, 8.5000...</msg>
<status status="PASS" starttime="20201115 22:03:05.573" endtime="20201115 22:03:05.585"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:05.589" level="INFO">NAME: 00-overhead-7-set</msg>
<status status="PASS" starttime="20201115 22:03:05.588" endtime="20201115 22:03:05.590"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:05.592" level="INFO">VALUE: [8.457999999999383e-06, 8.458999999998856e-06, 8.471999999998953e-06, 8.471999999998953e-06, 8.458000000002852e-06, 8.472000000002422e-06, 8.457999999999383e-06, 8.472000000002422e-06, 8.500000000001562e-06, 8.473000000001896e-06, 8.443999999999813e-06, 8.458999999998856e-06, 8.486000000001992e-06, 8.471999999998953e-06, 8.457999999999383e-06, 8.500000000001562e-06, 8.500000000001562e-06, 8.500000000001562e-06, 8.457999999999383e-06, 8.485999999998523e-06, 8.486000000001992e-06, 8.457999999999383e-06, 8.458999999998856e-06, 8.457999999999383e-06, 8.416000000000673e-06, 8.458999999998856e-06, 8.458999999998856e-06, 8.486000000001992e-06, 8.457999999999383e-06, 8.457999999999383e-06, 8.499999999998092e-06, 8.444999999999286e-06, 8.471999999998953e-06, 8.458999999998856e-06, 8.458000000002852e-06, 8.457999999999383e-06, 8.486000000001992e-06, 8.485999999998523e-06, 8.500000000001562e-06, 8.471999999998953e-06, 8.443999999999813e-06, 8.486000000001992e-06, 8.458000000002852e-06, 8.457999999999383e-06, 8.457999999999383e-06, 8.471999999998953e-06, 8.473000000001896e-06, 8.457999999999383e-06, 8.471999999998953e-06, 8.500000000001562e-06]</msg>
<status status="PASS" starttime="20201115 22:03:05.591" endtime="20201115 22:03:05.593"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.586" endtime="20201115 22:03:05.593"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:05.596" endtime="20201115 22:03:05.597"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:05.599" endtime="20201115 22:03:05.618"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.597" endtime="20201115 22:03:05.619"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.594" endtime="20201115 22:03:05.619"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.230" endtime="20201115 22:03:05.620"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.657" endtime="20201115 22:03:05.620"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.657" endtime="20201115 22:03:05.620"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:05.622" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:05.631" endtime="20201115 22:03:05.646"></status>
</kw>
<msg timestamp="20201115 22:03:05.646" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:05.630" endtime="20201115 22:03:05.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:05.649" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:05.647" endtime="20201115 22:03:05.649"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:05.650" endtime="20201115 22:03:05.651"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.627" endtime="20201115 22:03:05.652"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.625" endtime="20201115 22:03:05.652"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:05.659" endtime="20201115 22:03:05.945"></status>
</kw>
<msg timestamp="20201115 22:03:05.948" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022015, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022024222, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:03:05.657" endtime="20201115 22:03:05.948"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:05.956" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022015, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022024222, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:03:05.949" endtime="20201115 22:03:05.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:05.957" endtime="20201115 22:03:05.959"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.655" endtime="20201115 22:03:05.959"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.653" endtime="20201115 22:03:05.960"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:05.964" level="INFO">${RESULT} = [{'time': 0.022024222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.221999999999703e-06, 'source_diff': 9.221999999999703e-06}, {'time': 0.022134403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:05.960" endtime="20201115 22:03:05.964"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:05.977" level="INFO">${OVERHEAD} = {'diff': [9.221999999999703e-06, 9.235999999999273e-06, 9.222999999999176e-06, 9.222000000003172e-06, 9.208000000000133e-06, 9.249999999998842e-06, 9.235999999999273e-06, 9.235999999999273e-06, 9.2080...</msg>
<status status="PASS" starttime="20201115 22:03:05.965" endtime="20201115 22:03:05.978"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:05.982" level="INFO">NAME: 00-overhead-8-set</msg>
<status status="PASS" starttime="20201115 22:03:05.981" endtime="20201115 22:03:05.982"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:05.985" level="INFO">VALUE: [9.221999999999703e-06, 9.235999999999273e-06, 9.222999999999176e-06, 9.222000000003172e-06, 9.208000000000133e-06, 9.249999999998842e-06, 9.235999999999273e-06, 9.235999999999273e-06, 9.208000000000133e-06, 9.250000000002312e-06, 9.221999999999703e-06, 9.235999999999273e-06, 9.306000000000592e-06, 9.235999999999273e-06, 9.235999999999273e-06, 9.195000000000036e-06, 9.235999999999273e-06, 9.221999999999703e-06, 9.221999999999703e-06, 9.235999999999273e-06, 9.236000000002742e-06, 9.235999999999273e-06, 9.222999999999176e-06, 9.221999999999703e-06, 9.277999999997982e-06, 9.235999999999273e-06, 9.250000000002312e-06, 9.235999999999273e-06, 9.235999999999273e-06, 9.221999999999703e-06, 9.194000000000563e-06, 9.235999999999273e-06, 9.221999999999703e-06, 9.221999999999703e-06, 9.235999999999273e-06, 9.319000000000688e-06, 9.221999999999703e-06, 9.221999999999703e-06, 9.292000000001022e-06, 9.223000000002646e-06, 9.221999999999703e-06, 9.235999999999273e-06, 9.221999999999703e-06, 9.235999999999273e-06, 9.235999999999273e-06, 9.221999999999703e-06, 9.221999999999703e-06, 9.277999999997982e-06, 9.151999999998384e-06, 9.208999999999606e-06]</msg>
<status status="PASS" starttime="20201115 22:03:05.983" endtime="20201115 22:03:05.985"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.978" endtime="20201115 22:03:05.986"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:05.988" endtime="20201115 22:03:05.989"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:05.991" endtime="20201115 22:03:06.011"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.990" endtime="20201115 22:03:06.011"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.986" endtime="20201115 22:03:06.012"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.623" endtime="20201115 22:03:06.012"></status>
</kw>
<msg timestamp="20201115 22:03:06.012" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:06.021" endtime="20201115 22:03:06.035"></status>
</kw>
<msg timestamp="20201115 22:03:06.036" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:06.020" endtime="20201115 22:03:06.036"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:06.038" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:06.037" endtime="20201115 22:03:06.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:06.039" endtime="20201115 22:03:06.041"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.017" endtime="20201115 22:03:06.041"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.015" endtime="20201115 22:03:06.042"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:06.048" endtime="20201115 22:03:06.335"></status>
</kw>
<msg timestamp="20201115 22:03:06.338" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019759667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019768875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:06.047" endtime="20201115 22:03:06.338"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:06.346" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019759667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019768875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:06.339" endtime="20201115 22:03:06.346"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:06.347" endtime="20201115 22:03:06.349"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.044" endtime="20201115 22:03:06.349"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.042" endtime="20201115 22:03:06.350"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:06.354" level="INFO">${RESULT} = [{'time': 0.019768875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.208000000000133e-06, 'source_diff': 9.208000000000133e-06}, {'time': 0.019879972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:06.350" endtime="20201115 22:03:06.354"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:06.367" level="INFO">${OVERHEAD} = {'diff': [9.208000000000133e-06, 9.208000000000133e-06, 9.235999999999273e-06, 9.221999999999703e-06, 9.208999999999606e-06, 9.235999999999273e-06, 9.236000000002742e-06, 9.235999999999273e-06, 9.2499...</msg>
<status status="PASS" starttime="20201115 22:03:06.355" endtime="20201115 22:03:06.368"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:06.372" level="INFO">NAME: 00-overhead-8-set</msg>
<status status="PASS" starttime="20201115 22:03:06.371" endtime="20201115 22:03:06.372"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:06.374" level="INFO">VALUE: [9.208000000000133e-06, 9.208000000000133e-06, 9.235999999999273e-06, 9.221999999999703e-06, 9.208999999999606e-06, 9.235999999999273e-06, 9.236000000002742e-06, 9.235999999999273e-06, 9.249999999998842e-06, 9.221999999999703e-06, 9.223000000002646e-06, 9.166999999997427e-06, 9.221999999999703e-06, 9.180000000000993e-06, 9.195000000000036e-06, 9.222999999999176e-06, 9.180000000000993e-06, 9.221999999999703e-06, 9.153000000001327e-06, 9.235999999999273e-06, 9.208999999999606e-06, 9.236000000002742e-06, 9.221999999999703e-06, 9.221999999999703e-06, 9.222999999999176e-06, 9.208000000000133e-06, 9.221999999999703e-06, 9.195000000000036e-06, 9.235999999999273e-06, 9.208999999999606e-06, 9.236000000002742e-06, 9.221999999999703e-06, 9.235999999999273e-06, 9.264000000001882e-06, 9.235999999999273e-06, 9.179999999997523e-06, 9.221999999999703e-06, 9.221999999999703e-06, 9.208999999999606e-06, 9.236000000002742e-06, 9.208000000000133e-06, 9.235999999999273e-06, 9.235999999999273e-06, 9.221999999999703e-06, 9.235999999999273e-06, 9.250000000002312e-06, 9.208000000000133e-06, 9.221999999999703e-06, 9.222999999999176e-06, 9.222999999999176e-06]</msg>
<status status="PASS" starttime="20201115 22:03:06.373" endtime="20201115 22:03:06.375"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.368" endtime="20201115 22:03:06.375"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:06.378" endtime="20201115 22:03:06.379"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:06.381" endtime="20201115 22:03:06.400"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.380" endtime="20201115 22:03:06.401"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.376" endtime="20201115 22:03:06.401"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.013" endtime="20201115 22:03:06.402"></status>
</kw>
<msg timestamp="20201115 22:03:06.402" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:06.411" endtime="20201115 22:03:06.424"></status>
</kw>
<msg timestamp="20201115 22:03:06.424" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:06.409" endtime="20201115 22:03:06.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:06.427" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:06.425" endtime="20201115 22:03:06.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:06.428" endtime="20201115 22:03:06.429"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.407" endtime="20201115 22:03:06.430"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.405" endtime="20201115 22:03:06.430"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:06.437" endtime="20201115 22:03:06.723"></status>
</kw>
<msg timestamp="20201115 22:03:06.726" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019835736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019844972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:06.435" endtime="20201115 22:03:06.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:06.734" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019835736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019844972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:06.727" endtime="20201115 22:03:06.735"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:06.735" endtime="20201115 22:03:06.737"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.433" endtime="20201115 22:03:06.738"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.431" endtime="20201115 22:03:06.738"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:06.742" level="INFO">${RESULT} = [{'time': 0.019844972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.235999999999273e-06, 'source_diff': 9.235999999999273e-06}, {'time': 0.019957458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:06.739" endtime="20201115 22:03:06.743"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:06.756" level="INFO">${OVERHEAD} = {'diff': [9.235999999999273e-06, 9.264000000001882e-06, 9.235999999999273e-06, 9.222999999999176e-06, 9.277999999997982e-06, 9.235999999999273e-06, 9.208999999999606e-06, 9.181000000000467e-06, 9.1940...</msg>
<status status="PASS" starttime="20201115 22:03:06.744" endtime="20201115 22:03:06.756"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:06.760" level="INFO">NAME: 00-overhead-8-set</msg>
<status status="PASS" starttime="20201115 22:03:06.759" endtime="20201115 22:03:06.761"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:06.763" level="INFO">VALUE: [9.235999999999273e-06, 9.264000000001882e-06, 9.235999999999273e-06, 9.222999999999176e-06, 9.277999999997982e-06, 9.235999999999273e-06, 9.208999999999606e-06, 9.181000000000467e-06, 9.194000000000563e-06, 9.235999999999273e-06, 9.235999999999273e-06, 9.153000000001327e-06, 9.221999999999703e-06, 9.208999999999606e-06, 9.237000000002216e-06, 9.193999999997093e-06, 9.221999999999703e-06, 9.249999999998842e-06, 9.236000000002742e-06, 9.249999999998842e-06, 9.222999999999176e-06, 9.221999999999703e-06, 9.208000000000133e-06, 9.221999999999703e-06, 9.222999999999176e-06, 9.235999999999273e-06, 9.250000000002312e-06, 9.208999999999606e-06, 9.221999999999703e-06, 9.235999999999273e-06, 9.222999999999176e-06, 9.221999999999703e-06, 9.195000000000036e-06, 9.222000000003172e-06, 9.208000000000133e-06, 9.235999999999273e-06, 9.221999999999703e-06, 9.277999999997982e-06, 9.208000000000133e-06, 9.249999999998842e-06, 9.235999999999273e-06, 9.235999999999273e-06, 9.221999999999703e-06, 9.208999999999606e-06, 9.221999999999703e-06, 9.221999999999703e-06, 9.221999999999703e-06, 9.235999999999273e-06, 9.235999999999273e-06, 9.235999999999273e-06]</msg>
<status status="PASS" starttime="20201115 22:03:06.762" endtime="20201115 22:03:06.763"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.757" endtime="20201115 22:03:06.764"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:06.766" endtime="20201115 22:03:06.767"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:06.769" endtime="20201115 22:03:06.789"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.768" endtime="20201115 22:03:06.790"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.764" endtime="20201115 22:03:06.790"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.403" endtime="20201115 22:03:06.790"></status>
</kw>
<msg timestamp="20201115 22:03:06.790" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:06.799" endtime="20201115 22:03:06.813"></status>
</kw>
<msg timestamp="20201115 22:03:06.814" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:06.798" endtime="20201115 22:03:06.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:06.816" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:06.815" endtime="20201115 22:03:06.817"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:06.817" endtime="20201115 22:03:06.819"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.795" endtime="20201115 22:03:06.819"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.793" endtime="20201115 22:03:06.820"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:06.826" endtime="20201115 22:03:07.114"></status>
</kw>
<msg timestamp="20201115 22:03:07.117" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019833028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019842278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:06.825" endtime="20201115 22:03:07.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:07.125" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019833028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019842278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:07.118" endtime="20201115 22:03:07.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:07.127" endtime="20201115 22:03:07.128"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.822" endtime="20201115 22:03:07.129"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.820" endtime="20201115 22:03:07.129"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:07.134" level="INFO">${RESULT} = [{'time': 0.019842278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.250000000002312e-06, 'source_diff': 9.250000000002312e-06}, {'time': 0.019953889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:07.130" endtime="20201115 22:03:07.134"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:07.148" level="INFO">${OVERHEAD} = {'diff': [9.250000000002312e-06, 9.235999999999273e-06, 9.235999999999273e-06, 9.236000000002742e-06, 9.222999999999176e-06, 9.221999999999703e-06, 9.249999999998842e-06, 9.222999999999176e-06, 9.2219...</msg>
<status status="PASS" starttime="20201115 22:03:07.135" endtime="20201115 22:03:07.148"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:07.152" level="INFO">NAME: 00-overhead-8-set</msg>
<status status="PASS" starttime="20201115 22:03:07.151" endtime="20201115 22:03:07.152"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:07.154" level="INFO">VALUE: [9.250000000002312e-06, 9.235999999999273e-06, 9.235999999999273e-06, 9.236000000002742e-06, 9.222999999999176e-06, 9.221999999999703e-06, 9.249999999998842e-06, 9.222999999999176e-06, 9.221999999999703e-06, 9.236999999998746e-06, 9.221999999999703e-06, 9.235999999999273e-06, 9.249999999998842e-06, 9.152999999997857e-06, 9.181000000000467e-06, 9.221999999999703e-06, 9.222000000003172e-06, 9.221999999999703e-06, 9.223000000002646e-06, 9.235999999999273e-06, 9.235999999999273e-06, 9.236999999998746e-06, 9.153000000001327e-06, 9.221999999999703e-06, 9.180999999996997e-06, 9.222999999999176e-06, 9.221999999999703e-06, 9.221999999999703e-06, 9.221999999999703e-06, 9.236999999998746e-06, 9.222999999999176e-06, 9.249999999998842e-06, 9.208000000000133e-06, 9.235999999999273e-06, 9.236000000002742e-06, 9.221999999999703e-06, 9.249999999998842e-06, 9.221999999999703e-06, 9.222000000003172e-06, 9.236000000002742e-06, 9.236000000002742e-06, 9.235999999999273e-06, 9.249999999998842e-06, 9.221999999999703e-06, 9.250000000002312e-06, 9.235999999999273e-06, 9.221999999999703e-06, 9.249999999998842e-06, 9.221999999999703e-06, 9.209000000003076e-06]</msg>
<status status="PASS" starttime="20201115 22:03:07.153" endtime="20201115 22:03:07.155"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.148" endtime="20201115 22:03:07.155"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:07.158" endtime="20201115 22:03:07.159"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:07.161" endtime="20201115 22:03:07.180"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.159" endtime="20201115 22:03:07.181"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.156" endtime="20201115 22:03:07.181"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.791" endtime="20201115 22:03:07.182"></status>
</kw>
<msg timestamp="20201115 22:03:07.182" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:07.191" endtime="20201115 22:03:07.206"></status>
</kw>
<msg timestamp="20201115 22:03:07.207" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:07.189" endtime="20201115 22:03:07.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:07.209" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:07.208" endtime="20201115 22:03:07.210"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:07.210" endtime="20201115 22:03:07.212"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.187" endtime="20201115 22:03:07.212"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.184" endtime="20201115 22:03:07.213"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:07.219" endtime="20201115 22:03:07.505"></status>
</kw>
<msg timestamp="20201115 22:03:07.508" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019732917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019742153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:07.218" endtime="20201115 22:03:07.509"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:07.516" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019732917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019742153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:07.510" endtime="20201115 22:03:07.517"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:07.518" endtime="20201115 22:03:07.519"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.215" endtime="20201115 22:03:07.520"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.213" endtime="20201115 22:03:07.520"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:07.524" level="INFO">${RESULT} = [{'time': 0.019742153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.235999999999273e-06, 'source_diff': 9.235999999999273e-06}, {'time': 0.019855028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:07.521" endtime="20201115 22:03:07.524"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:07.538" level="INFO">${OVERHEAD} = {'diff': [9.235999999999273e-06, 9.235999999999273e-06, 9.221999999999703e-06, 9.249999999998842e-06, 9.221999999999703e-06, 9.221999999999703e-06, 9.306000000000592e-06, 9.236999999998746e-06, 9.2219...</msg>
<status status="PASS" starttime="20201115 22:03:07.525" endtime="20201115 22:03:07.538"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:07.542" level="INFO">NAME: 00-overhead-8-set</msg>
<status status="PASS" starttime="20201115 22:03:07.541" endtime="20201115 22:03:07.543"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:07.545" level="INFO">VALUE: [9.235999999999273e-06, 9.235999999999273e-06, 9.221999999999703e-06, 9.249999999998842e-06, 9.221999999999703e-06, 9.221999999999703e-06, 9.306000000000592e-06, 9.236999999998746e-06, 9.221999999999703e-06, 9.235999999999273e-06, 9.235999999999273e-06, 9.305000000001118e-06, 9.221999999999703e-06, 9.221999999999703e-06, 9.223000000002646e-06, 9.222000000003172e-06, 9.278000000001452e-06, 9.223000000002646e-06, 9.250000000002312e-06, 9.208000000000133e-06, 9.180000000000993e-06, 9.235999999999273e-06, 9.222999999999176e-06, 9.235999999999273e-06, 9.221999999999703e-06, 9.221999999999703e-06, 9.208999999999606e-06, 9.235999999999273e-06, 9.222999999999176e-06, 9.235999999999273e-06, 9.235999999999273e-06, 9.236000000002742e-06, 9.208000000000133e-06, 9.208000000000133e-06, 9.221999999999703e-06, 9.222999999999176e-06, 9.235999999999273e-06, 9.209000000003076e-06, 9.208000000000133e-06, 9.235999999999273e-06, 9.236000000002742e-06, 9.221999999999703e-06, 9.222000000003172e-06, 9.166000000001423e-06, 9.235999999999273e-06, 9.249999999998842e-06, 9.180000000000993e-06, 9.195000000000036e-06, 9.221999999999703e-06, 9.208000000000133e-06]</msg>
<status status="PASS" starttime="20201115 22:03:07.543" endtime="20201115 22:03:07.545"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.539" endtime="20201115 22:03:07.546"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:07.548" endtime="20201115 22:03:07.549"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:07.551" endtime="20201115 22:03:07.571"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.550" endtime="20201115 22:03:07.571"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.546" endtime="20201115 22:03:07.572"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.182" endtime="20201115 22:03:07.572"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.621" endtime="20201115 22:03:07.572"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.621" endtime="20201115 22:03:07.572"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:07.575" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:07.583" endtime="20201115 22:03:07.600"></status>
</kw>
<msg timestamp="20201115 22:03:07.600" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:07.582" endtime="20201115 22:03:07.601"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:07.603" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:07.601" endtime="20201115 22:03:07.603"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:07.604" endtime="20201115 22:03:07.606"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.579" endtime="20201115 22:03:07.606"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.577" endtime="20201115 22:03:07.607"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:07.613" endtime="20201115 22:03:07.900"></status>
</kw>
<msg timestamp="20201115 22:03:07.903" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022119903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022129875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:07.612" endtime="20201115 22:03:07.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:07.911" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022119903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022129875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:07.904" endtime="20201115 22:03:07.911"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:07.912" endtime="20201115 22:03:07.913"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.609" endtime="20201115 22:03:07.914"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.607" endtime="20201115 22:03:07.914"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:07.919" level="INFO">${RESULT} = [{'time': 0.022129875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.972000000000453e-06, 'source_diff': 9.972000000000453e-06}, {'time': 0.022252889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:07.915" endtime="20201115 22:03:07.919"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:07.932" level="INFO">${OVERHEAD} = {'diff': [9.972000000000453e-06, 9.931000000001217e-06, 9.986000000000023e-06, 9.986000000000023e-06, 9.972000000000453e-06, 1.0000000000003062e-05, 9.986000000000023e-06, 9.972000000000453e-06, 9.986...</msg>
<status status="PASS" starttime="20201115 22:03:07.920" endtime="20201115 22:03:07.932"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:07.937" level="INFO">NAME: 00-overhead-9-set</msg>
<status status="PASS" starttime="20201115 22:03:07.936" endtime="20201115 22:03:07.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:07.939" level="INFO">VALUE: [9.972000000000453e-06, 9.931000000001217e-06, 9.986000000000023e-06, 9.986000000000023e-06, 9.972000000000453e-06, 1.0000000000003062e-05, 9.986000000000023e-06, 9.972000000000453e-06, 9.986000000000023e-06, 9.972999999999926e-06, 9.972000000000453e-06, 9.986000000000023e-06, 9.986000000000023e-06, 9.986000000000023e-06, 9.986000000000023e-06, 1.0013999999999162e-05, 9.986000000000023e-06, 9.986000000000023e-06, 9.972000000000453e-06, 9.986000000000023e-06, 1.0013999999999162e-05, 9.999999999999593e-06, 9.986999999999496e-06, 9.999999999999593e-06, 9.971999999996983e-06, 9.972000000000453e-06, 9.986000000000023e-06, 9.986000000000023e-06, 9.986000000000023e-06, 9.999999999999593e-06, 9.999999999999593e-06, 9.972999999999926e-06, 1.0055000000001868e-05, 9.986999999999496e-06, 9.986000000000023e-06, 9.959000000000356e-06, 1.0027999999998732e-05, 9.986000000000023e-06, 9.972000000000453e-06, 9.972000000000453e-06, 9.959000000000356e-06, 9.986999999999496e-06, 9.999999999999593e-06, 9.999999999999593e-06, 9.999999999999593e-06, 9.986000000000023e-06, 9.958000000000883e-06, 1.0013999999999162e-05, 9.986000000000023e-06, 9.999999999999593e-06]</msg>
<status status="PASS" starttime="20201115 22:03:07.938" endtime="20201115 22:03:07.939"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.933" endtime="20201115 22:03:07.940"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:07.942" endtime="20201115 22:03:07.943"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:07.946" endtime="20201115 22:03:07.965"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.944" endtime="20201115 22:03:07.966"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.941" endtime="20201115 22:03:07.966"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.575" endtime="20201115 22:03:07.966"></status>
</kw>
<msg timestamp="20201115 22:03:07.967" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:07.975" endtime="20201115 22:03:07.993"></status>
</kw>
<msg timestamp="20201115 22:03:07.993" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:07.974" endtime="20201115 22:03:07.993"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:07.996" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:07.994" endtime="20201115 22:03:07.996"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:07.997" endtime="20201115 22:03:07.999"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.971" endtime="20201115 22:03:07.999"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.969" endtime="20201115 22:03:08.000"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:08.006" endtime="20201115 22:03:08.294"></status>
</kw>
<msg timestamp="20201115 22:03:08.297" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019653722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019663708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:08.005" endtime="20201115 22:03:08.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:08.305" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019653722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019663708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:08.298" endtime="20201115 22:03:08.305"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:08.306" endtime="20201115 22:03:08.308"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.002" endtime="20201115 22:03:08.308"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.000" endtime="20201115 22:03:08.309"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:08.313" level="INFO">${RESULT} = [{'time': 0.019663708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.986000000000023e-06, 'source_diff': 9.986000000000023e-06}, {'time': 0.019786847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:08.309" endtime="20201115 22:03:08.313"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:08.326" level="INFO">${OVERHEAD} = {'diff': [9.986000000000023e-06, 9.986000000000023e-06, 9.986000000000023e-06, 9.986000000000023e-06, 9.999999999999593e-06, 9.915999999998704e-06, 9.972000000000453e-06, 1.0013000000003158e-05, 9.986...</msg>
<status status="PASS" starttime="20201115 22:03:08.314" endtime="20201115 22:03:08.326"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:08.331" level="INFO">NAME: 00-overhead-9-set</msg>
<status status="PASS" starttime="20201115 22:03:08.330" endtime="20201115 22:03:08.331"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:08.333" level="INFO">VALUE: [9.986000000000023e-06, 9.986000000000023e-06, 9.986000000000023e-06, 9.986000000000023e-06, 9.999999999999593e-06, 9.915999999998704e-06, 9.972000000000453e-06, 1.0013000000003158e-05, 9.986000000000023e-06, 9.986999999999496e-06, 9.986000000000023e-06, 9.944000000001313e-06, 9.999999999999593e-06, 9.999999999999593e-06, 9.972000000000453e-06, 9.986000000000023e-06, 9.986000000000023e-06, 9.986000000000023e-06, 1.0013999999999162e-05, 9.999999999999593e-06, 9.986000000000023e-06, 9.902999999998607e-06, 9.986000000000023e-06, 9.986000000000023e-06, 9.986000000000023e-06, 9.986999999999496e-06, 1.0068999999997968e-05, 9.986999999999496e-06, 9.986000000000023e-06, 9.986000000000023e-06, 9.986000000000023e-06, 1.0054999999998399e-05, 9.999999999999593e-06, 9.986000000000023e-06, 1.0042000000001772e-05, 9.986000000000023e-06, 9.972000000000453e-06, 9.958000000000883e-06, 9.986000000000023e-06, 9.931000000001217e-06, 9.916000000002173e-06, 9.999999999999593e-06, 9.972000000000453e-06, 9.972999999999926e-06, 1.0014000000002632e-05, 9.999999999999593e-06, 9.986000000000023e-06, 9.986000000000023e-06, 1.0070000000000912e-05, 9.999999999999593e-06]</msg>
<status status="PASS" starttime="20201115 22:03:08.332" endtime="20201115 22:03:08.333"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.327" endtime="20201115 22:03:08.334"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:08.336" endtime="20201115 22:03:08.338"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:08.340" endtime="20201115 22:03:08.359"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.338" endtime="20201115 22:03:08.360"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.335" endtime="20201115 22:03:08.360"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.967" endtime="20201115 22:03:08.360"></status>
</kw>
<msg timestamp="20201115 22:03:08.361" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:08.370" endtime="20201115 22:03:08.387"></status>
</kw>
<msg timestamp="20201115 22:03:08.387" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:08.368" endtime="20201115 22:03:08.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:08.390" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:08.388" endtime="20201115 22:03:08.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:08.391" endtime="20201115 22:03:08.392"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.365" endtime="20201115 22:03:08.393"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.363" endtime="20201115 22:03:08.393"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:08.400" endtime="20201115 22:03:08.688"></status>
</kw>
<msg timestamp="20201115 22:03:08.691" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02063425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020644292, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:03:08.398" endtime="20201115 22:03:08.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:08.699" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02063425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020644292, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:03:08.692" endtime="20201115 22:03:08.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:08.701" endtime="20201115 22:03:08.702"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.396" endtime="20201115 22:03:08.703"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.394" endtime="20201115 22:03:08.703"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:08.707" level="INFO">${RESULT} = [{'time': 0.020644292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0042000000001772e-05, 'source_diff': 1.0042000000001772e-05}, {'time': 0.020763625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:08.704" endtime="20201115 22:03:08.707"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:08.721" level="INFO">${OVERHEAD} = {'diff': [1.0042000000001772e-05, 9.999999999999593e-06, 1.0000000000003062e-05, 9.986000000000023e-06, 1.0041999999998302e-05, 9.972000000000453e-06, 9.972000000000453e-06, 1.0055999999997872e-05, 9....</msg>
<status status="PASS" starttime="20201115 22:03:08.708" endtime="20201115 22:03:08.721"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:08.725" level="INFO">NAME: 00-overhead-9-set</msg>
<status status="PASS" starttime="20201115 22:03:08.724" endtime="20201115 22:03:08.726"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:08.728" level="INFO">VALUE: [1.0042000000001772e-05, 9.999999999999593e-06, 1.0000000000003062e-05, 9.986000000000023e-06, 1.0041999999998302e-05, 9.972000000000453e-06, 9.972000000000453e-06, 1.0055999999997872e-05, 9.999999999999593e-06, 1.0000000000003062e-05, 9.972000000000453e-06, 9.930999999997747e-06, 9.986999999999496e-06, 9.999999999999593e-06, 9.986000000000023e-06, 9.930000000001743e-06, 9.972000000000453e-06, 1.0028000000002202e-05, 9.986000000000023e-06, 9.999999999999593e-06, 9.986000000000023e-06, 9.944000000001313e-06, 9.986000000000023e-06, 9.972000000000453e-06, 9.986000000000023e-06, 9.972000000000453e-06, 9.972000000000453e-06, 9.986000000000023e-06, 9.986999999999496e-06, 9.986000000000023e-06, 1.0054999999998399e-05, 9.986000000000023e-06, 9.986000000000023e-06, 9.999999999999593e-06, 1.0041999999998302e-05, 9.999999999999593e-06, 9.930999999997747e-06, 9.986000000000023e-06, 9.902999999998607e-06, 9.999999999999593e-06, 9.972000000000453e-06, 9.986000000000023e-06, 9.972000000000453e-06, 1.0040999999998829e-05, 9.958000000000883e-06, 9.999999999999593e-06, 9.986999999999496e-06, 9.972000000000453e-06, 9.986000000000023e-06, 9.999999999999593e-06]</msg>
<status status="PASS" starttime="20201115 22:03:08.726" endtime="20201115 22:03:08.728"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.722" endtime="20201115 22:03:08.729"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:08.731" endtime="20201115 22:03:08.732"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:08.734" endtime="20201115 22:03:08.753"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.733" endtime="20201115 22:03:08.754"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.729" endtime="20201115 22:03:08.755"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.361" endtime="20201115 22:03:08.755"></status>
</kw>
<msg timestamp="20201115 22:03:08.755" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:08.764" endtime="20201115 22:03:08.780"></status>
</kw>
<msg timestamp="20201115 22:03:08.780" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:08.763" endtime="20201115 22:03:08.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:08.783" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:08.781" endtime="20201115 22:03:08.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:08.784" endtime="20201115 22:03:08.785"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.760" endtime="20201115 22:03:08.786"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.758" endtime="20201115 22:03:08.786"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:08.793" endtime="20201115 22:03:09.079"></status>
</kw>
<msg timestamp="20201115 22:03:09.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020112972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020122944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:08.791" endtime="20201115 22:03:09.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:09.090" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020112972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020122944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:09.083" endtime="20201115 22:03:09.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:09.091" endtime="20201115 22:03:09.093"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.789" endtime="20201115 22:03:09.093"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.787" endtime="20201115 22:03:09.094"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:09.098" level="INFO">${RESULT} = [{'time': 0.020122944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.972000000000453e-06, 'source_diff': 9.972000000000453e-06}, {'time': 0.020244597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:09.094" endtime="20201115 22:03:09.098"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:09.111" level="INFO">${OVERHEAD} = {'diff': [9.972000000000453e-06, 9.986000000000023e-06, 9.986000000000023e-06, 9.999999999999593e-06, 1.0055999999997872e-05, 9.986000000000023e-06, 9.986000000000023e-06, 9.986000000000023e-06, 9.959...</msg>
<status status="PASS" starttime="20201115 22:03:09.099" endtime="20201115 22:03:09.112"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:09.116" level="INFO">NAME: 00-overhead-9-set</msg>
<status status="PASS" starttime="20201115 22:03:09.115" endtime="20201115 22:03:09.116"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:09.118" level="INFO">VALUE: [9.972000000000453e-06, 9.986000000000023e-06, 9.986000000000023e-06, 9.999999999999593e-06, 1.0055999999997872e-05, 9.986000000000023e-06, 9.986000000000023e-06, 9.986000000000023e-06, 9.959000000000356e-06, 9.999999999999593e-06, 9.972000000000453e-06, 9.971999999996983e-06, 9.986000000000023e-06, 9.999999999999593e-06, 9.986000000000023e-06, 9.999999999999593e-06, 9.986000000000023e-06, 9.986000000000023e-06, 9.986999999999496e-06, 9.986000000000023e-06, 9.986000000000023e-06, 9.999999999999593e-06, 9.986000000000023e-06, 1.0000000000003062e-05, 9.999999999999593e-06, 9.986000000000023e-06, 9.972000000000453e-06, 9.986000000000023e-06, 9.986000000000023e-06, 9.986999999999496e-06, 9.986000000000023e-06, 1.0028000000002202e-05, 9.999999999999593e-06, 9.930999999997747e-06, 9.986000000000023e-06, 1.0000000000003062e-05, 9.986000000000023e-06, 9.986000000000023e-06, 9.986000000000023e-06, 9.986000000000023e-06, 9.999999999999593e-06, 9.999999999999593e-06, 9.972000000000453e-06, 9.986000000000023e-06, 9.986000000000023e-06, 9.986000000000023e-06, 9.972000000000453e-06, 9.972000000000453e-06, 9.986000000000023e-06, 9.999999999999593e-06]</msg>
<status status="PASS" starttime="20201115 22:03:09.117" endtime="20201115 22:03:09.119"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.112" endtime="20201115 22:03:09.119"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:09.121" endtime="20201115 22:03:09.127"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:09.129" endtime="20201115 22:03:09.148"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.127" endtime="20201115 22:03:09.149"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.120" endtime="20201115 22:03:09.149"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.756" endtime="20201115 22:03:09.150"></status>
</kw>
<msg timestamp="20201115 22:03:09.150" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:09.160" endtime="20201115 22:03:09.177"></status>
</kw>
<msg timestamp="20201115 22:03:09.177" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:09.158" endtime="20201115 22:03:09.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:09.180" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:09.178" endtime="20201115 22:03:09.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:09.181" endtime="20201115 22:03:09.182"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.155" endtime="20201115 22:03:09.183"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.153" endtime="20201115 22:03:09.183"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:09.190" endtime="20201115 22:03:09.476"></status>
</kw>
<msg timestamp="20201115 22:03:09.479" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021823444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021833444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:09.188" endtime="20201115 22:03:09.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:09.487" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021823444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021833444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:09.481" endtime="20201115 22:03:09.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:09.489" endtime="20201115 22:03:09.490"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.186" endtime="20201115 22:03:09.491"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.184" endtime="20201115 22:03:09.491"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:09.495" level="INFO">${RESULT} = [{'time': 0.021833444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.999999999999593e-06, 'source_diff': 9.999999999999593e-06}, {'time': 0.021955514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:09.492" endtime="20201115 22:03:09.496"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:09.509" level="INFO">${OVERHEAD} = {'diff': [9.999999999999593e-06, 1.0055999999997872e-05, 9.929999999998274e-06, 9.999999999999593e-06, 1.0012999999999689e-05, 9.986000000000023e-06, 9.931000000001217e-06, 9.972000000000453e-06, 9.98...</msg>
<status status="PASS" starttime="20201115 22:03:09.496" endtime="20201115 22:03:09.509"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:09.513" level="INFO">NAME: 00-overhead-9-set</msg>
<status status="PASS" starttime="20201115 22:03:09.512" endtime="20201115 22:03:09.514"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:09.516" level="INFO">VALUE: [9.999999999999593e-06, 1.0055999999997872e-05, 9.929999999998274e-06, 9.999999999999593e-06, 1.0012999999999689e-05, 9.986000000000023e-06, 9.931000000001217e-06, 9.972000000000453e-06, 9.986000000000023e-06, 9.972999999999926e-06, 9.999999999999593e-06, 9.972000000000453e-06, 9.986000000000023e-06, 9.917000000001647e-06, 9.999999999999593e-06, 9.930999999997747e-06, 9.986000000000023e-06, 9.930999999997747e-06, 9.986000000000023e-06, 9.986000000000023e-06, 9.943999999997843e-06, 9.999999999999593e-06, 9.986999999999496e-06, 9.957999999997413e-06, 9.958000000000883e-06, 9.972000000000453e-06, 9.986000000000023e-06, 9.986000000000023e-06, 9.986000000000023e-06, 9.986000000000023e-06, 9.986000000000023e-06, 9.958000000000883e-06, 9.986000000000023e-06, 9.999999999999593e-06, 9.985999999996553e-06, 9.986000000000023e-06, 1.0028000000002202e-05, 9.986999999999496e-06, 9.958000000000883e-06, 9.916999999998177e-06, 1.0014000000002632e-05, 9.986000000000023e-06, 1.0054999999998399e-05, 9.999999999999593e-06, 1.0000000000003062e-05, 9.945000000000787e-06, 9.957999999997413e-06, 9.986000000000023e-06, 9.986000000000023e-06, 9.986000000000023e-06]</msg>
<status status="PASS" starttime="20201115 22:03:09.514" endtime="20201115 22:03:09.517"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.510" endtime="20201115 22:03:09.517"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:09.519" endtime="20201115 22:03:09.521"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:09.523" endtime="20201115 22:03:09.542"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.521" endtime="20201115 22:03:09.543"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.518" endtime="20201115 22:03:09.543"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.150" endtime="20201115 22:03:09.543"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.574" endtime="20201115 22:03:09.544"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.573" endtime="20201115 22:03:09.544"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:09.546" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:09.555" endtime="20201115 22:03:09.570"></status>
</kw>
<msg timestamp="20201115 22:03:09.570" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:09.553" endtime="20201115 22:03:09.570"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:09.573" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:09.571" endtime="20201115 22:03:09.573"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:09.574" endtime="20201115 22:03:09.575"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.551" endtime="20201115 22:03:09.576"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.549" endtime="20201115 22:03:09.576"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:09.583" endtime="20201115 22:03:09.869"></status>
</kw>
<msg timestamp="20201115 22:03:09.872" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022220764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022231569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:09.581" endtime="20201115 22:03:09.872"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:09.880" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022220764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022231569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:09.873" endtime="20201115 22:03:09.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:09.881" endtime="20201115 22:03:09.883"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.579" endtime="20201115 22:03:09.883"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.577" endtime="20201115 22:03:09.884"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:09.888" level="INFO">${RESULT} = [{'time': 0.022231569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0804999999999149e-05, 'source_diff': 1.0804999999999149e-05}, {'time': 0.022363639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:09.884" endtime="20201115 22:03:09.888"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:09.901" level="INFO">${OVERHEAD} = {'diff': [1.0804999999999149e-05, 1.0736000000000773e-05, 1.0750000000000343e-05, 1.0750000000000343e-05, 1.0763999999999913e-05, 1.0736000000000773e-05, 1.0750000000000343e-05, 1.0750000000000343e-05...</msg>
<status status="PASS" starttime="20201115 22:03:09.889" endtime="20201115 22:03:09.902"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:09.906" level="INFO">NAME: 00-overhead-10-set</msg>
<status status="PASS" starttime="20201115 22:03:09.905" endtime="20201115 22:03:09.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:09.909" level="INFO">VALUE: [1.0804999999999149e-05, 1.0736000000000773e-05, 1.0750000000000343e-05, 1.0750000000000343e-05, 1.0763999999999913e-05, 1.0736000000000773e-05, 1.0750000000000343e-05, 1.0750000000000343e-05, 1.0750000000000343e-05, 1.0679999999999024e-05, 1.0736000000000773e-05, 1.0666999999998927e-05, 1.0750000000000343e-05, 1.0750000000000343e-05, 1.0763999999999913e-05, 1.0750000000000343e-05, 1.0736000000000773e-05, 1.0763999999999913e-05, 1.0709000000001107e-05, 1.0722000000001203e-05, 1.0763999999999913e-05, 1.0763999999999913e-05, 1.0763999999999913e-05, 1.0707999999998163e-05, 1.0791999999999052e-05, 1.0750000000000343e-05, 1.0763999999999913e-05, 1.0750000000000343e-05, 1.0777000000000009e-05, 1.0749999999996873e-05, 1.0709000000001107e-05, 1.0750000000000343e-05, 1.0750000000000343e-05, 1.0750000000000343e-05, 1.0763000000000439e-05, 1.0736000000000773e-05, 1.0736000000000773e-05, 1.0707999999998163e-05, 1.0763999999999913e-05, 1.0750000000000343e-05, 1.0750000000000343e-05, 1.0750000000000343e-05, 1.0736000000000773e-05, 1.0736000000000773e-05, 1.0749999999996873e-05, 1.0750000000000343e-05, 1.0750000000000343e-05, 1.0736000000000773e-05, 1.0750000000000343e-05, 1.0819000000002188e-05]</msg>
<status status="PASS" starttime="20201115 22:03:09.907" endtime="20201115 22:03:09.909"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.902" endtime="20201115 22:03:09.910"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:09.912" endtime="20201115 22:03:09.913"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:09.915" endtime="20201115 22:03:09.935"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.914" endtime="20201115 22:03:09.935"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.910" endtime="20201115 22:03:09.936"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.547" endtime="20201115 22:03:09.936"></status>
</kw>
<msg timestamp="20201115 22:03:09.936" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:09.945" endtime="20201115 22:03:09.963"></status>
</kw>
<msg timestamp="20201115 22:03:09.963" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:09.944" endtime="20201115 22:03:09.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:09.966" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:09.964" endtime="20201115 22:03:09.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:09.967" endtime="20201115 22:03:09.968"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.941" endtime="20201115 22:03:09.969"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.939" endtime="20201115 22:03:09.969"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:09.976" endtime="20201115 22:03:10.264"></status>
</kw>
<msg timestamp="20201115 22:03:10.267" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019987597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019998347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:09.974" endtime="20201115 22:03:10.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:10.275" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019987597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019998347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:10.268" endtime="20201115 22:03:10.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:10.276" endtime="20201115 22:03:10.278"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.972" endtime="20201115 22:03:10.278"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.970" endtime="20201115 22:03:10.279"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:10.283" level="INFO">${RESULT} = [{'time': 0.019998347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0750000000000343e-05, 'source_diff': 1.0750000000000343e-05}, {'time': 0.020132319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:10.280" endtime="20201115 22:03:10.283"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:10.296" level="INFO">${OVERHEAD} = {'diff': [1.0750000000000343e-05, 1.0750000000000343e-05, 1.0750000000000343e-05, 1.0750000000000343e-05, 1.0819000000002188e-05, 1.0694999999998067e-05, 1.0722000000001203e-05, 1.0763999999999913e-05...</msg>
<status status="PASS" starttime="20201115 22:03:10.284" endtime="20201115 22:03:10.297"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:10.301" level="INFO">NAME: 00-overhead-10-set</msg>
<status status="PASS" starttime="20201115 22:03:10.300" endtime="20201115 22:03:10.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:10.304" level="INFO">VALUE: [1.0750000000000343e-05, 1.0750000000000343e-05, 1.0750000000000343e-05, 1.0750000000000343e-05, 1.0819000000002188e-05, 1.0694999999998067e-05, 1.0722000000001203e-05, 1.0763999999999913e-05, 1.0818999999998719e-05, 1.0736000000000773e-05, 1.0778000000002952e-05, 1.0750000000000343e-05, 1.0750000000000343e-05, 1.0749999999996873e-05, 1.0763999999999913e-05, 1.0777999999999482e-05, 1.0763999999999913e-05, 1.0750000000000343e-05, 1.0750000000000343e-05, 1.0763999999999913e-05, 1.0763999999999913e-05, 1.0736000000000773e-05, 1.0736000000000773e-05, 1.0750000000000343e-05, 1.0750000000000343e-05, 1.0721999999997733e-05, 1.0666999999998927e-05, 1.0750000000000343e-05, 1.0750000000000343e-05, 1.0790999999999579e-05, 1.0735999999997303e-05, 1.0708000000001633e-05, 1.0750000000000343e-05, 1.0777000000000009e-05, 1.0737000000000246e-05, 1.0736000000000773e-05, 1.0736000000000773e-05, 1.0735999999997303e-05, 1.0750000000000343e-05, 1.0777999999999482e-05, 1.0736000000000773e-05, 1.0750000000000343e-05, 1.0750000000000343e-05, 1.0695000000001537e-05, 1.0763000000000439e-05, 1.0763999999999913e-05, 1.0750000000000343e-05, 1.0737000000000246e-05, 1.0750000000000343e-05, 1.0723000000000676e-05]</msg>
<status status="PASS" starttime="20201115 22:03:10.302" endtime="20201115 22:03:10.304"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.298" endtime="20201115 22:03:10.304"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:10.307" endtime="20201115 22:03:10.308"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:10.310" endtime="20201115 22:03:10.329"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.309" endtime="20201115 22:03:10.330"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.305" endtime="20201115 22:03:10.331"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.937" endtime="20201115 22:03:10.331"></status>
</kw>
<msg timestamp="20201115 22:03:10.331" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:10.340" endtime="20201115 22:03:10.356"></status>
</kw>
<msg timestamp="20201115 22:03:10.357" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:10.338" endtime="20201115 22:03:10.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:10.359" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:10.358" endtime="20201115 22:03:10.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:10.360" endtime="20201115 22:03:10.362"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.336" endtime="20201115 22:03:10.362"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.334" endtime="20201115 22:03:10.363"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:10.369" endtime="20201115 22:03:10.656"></status>
</kw>
<msg timestamp="20201115 22:03:10.659" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020728389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020739139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:10.368" endtime="20201115 22:03:10.659"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:10.667" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020728389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020739139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:10.660" endtime="20201115 22:03:10.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:10.668" endtime="20201115 22:03:10.670"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.365" endtime="20201115 22:03:10.670"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.364" endtime="20201115 22:03:10.671"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:10.675" level="INFO">${RESULT} = [{'time': 0.020739139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0750000000000343e-05, 'source_diff': 1.0750000000000343e-05}, {'time': 0.020872181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:10.671" endtime="20201115 22:03:10.675"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:10.689" level="INFO">${OVERHEAD} = {'diff': [1.0750000000000343e-05, 1.0820000000001662e-05, 1.0750000000000343e-05, 1.0708999999997637e-05, 1.0694999999998067e-05, 1.0750000000000343e-05, 1.0750000000000343e-05, 1.0736000000000773e-05...</msg>
<status status="PASS" starttime="20201115 22:03:10.676" endtime="20201115 22:03:10.689"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:10.693" level="INFO">NAME: 00-overhead-10-set</msg>
<status status="PASS" starttime="20201115 22:03:10.692" endtime="20201115 22:03:10.694"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:10.696" level="INFO">VALUE: [1.0750000000000343e-05, 1.0820000000001662e-05, 1.0750000000000343e-05, 1.0708999999997637e-05, 1.0694999999998067e-05, 1.0750000000000343e-05, 1.0750000000000343e-05, 1.0736000000000773e-05, 1.0736000000000773e-05, 1.0750000000000343e-05, 1.0777999999999482e-05, 1.0721999999997733e-05, 1.0750000000000343e-05, 1.0749999999996873e-05, 1.0791999999999052e-05, 1.0763999999999913e-05, 1.0750000000000343e-05, 1.0763999999999913e-05, 1.0763999999999913e-05, 1.0749999999996873e-05, 1.0750000000000343e-05, 1.0721999999997733e-05, 1.0750000000000343e-05, 1.0722000000001203e-05, 1.0763999999999913e-05, 1.0665999999999454e-05, 1.0763999999999913e-05, 1.0750000000000343e-05, 1.0791999999999052e-05, 1.0735999999997303e-05, 1.0750000000000343e-05, 1.0750000000000343e-05, 1.0763999999999913e-05, 1.0764000000003382e-05, 1.0736000000000773e-05, 1.0750000000000343e-05, 1.0750000000000343e-05, 1.0750000000000343e-05, 1.0722000000001203e-05, 1.0694000000002063e-05, 1.0777999999999482e-05, 1.0806000000002092e-05, 1.0750000000000343e-05, 1.0763999999999913e-05, 1.0750000000000343e-05, 1.0750000000000343e-05, 1.0736000000000773e-05, 1.0763999999999913e-05, 1.0790999999999579e-05, 1.0763999999999913e-05]</msg>
<status status="PASS" starttime="20201115 22:03:10.694" endtime="20201115 22:03:10.696"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.690" endtime="20201115 22:03:10.697"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:10.699" endtime="20201115 22:03:10.700"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:10.702" endtime="20201115 22:03:10.722"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.701" endtime="20201115 22:03:10.722"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.697" endtime="20201115 22:03:10.723"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.332" endtime="20201115 22:03:10.723"></status>
</kw>
<msg timestamp="20201115 22:03:10.723" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:10.732" endtime="20201115 22:03:10.750"></status>
</kw>
<msg timestamp="20201115 22:03:10.750" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:10.731" endtime="20201115 22:03:10.750"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:10.753" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:10.751" endtime="20201115 22:03:10.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:10.754" endtime="20201115 22:03:10.755"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.728" endtime="20201115 22:03:10.756"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.726" endtime="20201115 22:03:10.756"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:10.763" endtime="20201115 22:03:11.048"></status>
</kw>
<msg timestamp="20201115 22:03:11.051" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020925222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020935958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:10.761" endtime="20201115 22:03:11.051"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:11.059" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020925222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020935958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:11.052" endtime="20201115 22:03:11.059"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:11.060" endtime="20201115 22:03:11.062"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.759" endtime="20201115 22:03:11.062"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.757" endtime="20201115 22:03:11.063"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:11.067" level="INFO">${RESULT} = [{'time': 0.020935958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0736000000000773e-05, 'source_diff': 1.0736000000000773e-05}, {'time': 0.021066944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:11.064" endtime="20201115 22:03:11.067"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:11.081" level="INFO">${OVERHEAD} = {'diff': [1.0736000000000773e-05, 1.0750000000000343e-05, 1.0790999999999579e-05, 1.0763000000000439e-05, 1.0763999999999913e-05, 1.0750000000000343e-05, 1.0750000000000343e-05, 1.0750000000000343e-05...</msg>
<status status="PASS" starttime="20201115 22:03:11.068" endtime="20201115 22:03:11.081"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:11.085" level="INFO">NAME: 00-overhead-10-set</msg>
<status status="PASS" starttime="20201115 22:03:11.084" endtime="20201115 22:03:11.085"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:11.088" level="INFO">VALUE: [1.0736000000000773e-05, 1.0750000000000343e-05, 1.0790999999999579e-05, 1.0763000000000439e-05, 1.0763999999999913e-05, 1.0750000000000343e-05, 1.0750000000000343e-05, 1.0750000000000343e-05, 1.0750000000000343e-05, 1.0750000000000343e-05, 1.0763999999999913e-05, 1.0750000000000343e-05, 1.0694000000002063e-05, 1.0750000000000343e-05, 1.0763999999999913e-05, 1.0750000000000343e-05, 1.0750000000000343e-05, 1.0750000000000343e-05, 1.0665999999999454e-05, 1.0763999999999913e-05, 1.0750000000000343e-05, 1.0694000000002063e-05, 1.0749999999996873e-05, 1.0750000000000343e-05, 1.0693999999998594e-05, 1.0707999999998163e-05, 1.0750000000000343e-05, 1.0750000000000343e-05, 1.0736000000000773e-05, 1.0750000000000343e-05, 1.0750000000000343e-05, 1.0763999999999913e-05, 1.0763999999999913e-05, 1.0832999999998288e-05, 1.0708000000001633e-05, 1.0792000000002522e-05, 1.0750000000000343e-05, 1.0791999999999052e-05, 1.0819000000002188e-05, 1.0763000000000439e-05, 1.0763999999999913e-05, 1.0763999999999913e-05, 1.0749999999996873e-05, 1.0735999999997303e-05, 1.0750000000000343e-05, 1.0763000000000439e-05, 1.0723000000000676e-05, 1.0763999999999913e-05, 1.0777999999999482e-05, 1.0722000000001203e-05]</msg>
<status status="PASS" starttime="20201115 22:03:11.086" endtime="20201115 22:03:11.088"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.081" endtime="20201115 22:03:11.088"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:11.091" endtime="20201115 22:03:11.092"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:11.094" endtime="20201115 22:03:11.114"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.093" endtime="20201115 22:03:11.114"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.089" endtime="20201115 22:03:11.115"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.724" endtime="20201115 22:03:11.115"></status>
</kw>
<msg timestamp="20201115 22:03:11.115" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:11.124" endtime="20201115 22:03:11.139"></status>
</kw>
<msg timestamp="20201115 22:03:11.139" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:11.122" endtime="20201115 22:03:11.140"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:11.142" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:11.140" endtime="20201115 22:03:11.142"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:11.143" endtime="20201115 22:03:11.144"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.120" endtime="20201115 22:03:11.145"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.118" endtime="20201115 22:03:11.145"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:11.152" endtime="20201115 22:03:11.438"></status>
</kw>
<msg timestamp="20201115 22:03:11.442" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019936222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019946972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:11.150" endtime="20201115 22:03:11.442"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:11.450" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019936222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019946972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:11.443" endtime="20201115 22:03:11.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:11.451" endtime="20201115 22:03:11.453"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.148" endtime="20201115 22:03:11.453"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.146" endtime="20201115 22:03:11.454"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:11.458" level="INFO">${RESULT} = [{'time': 0.019946972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0750000000000343e-05, 'source_diff': 1.0750000000000343e-05}, {'time': 0.020077431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:11.454" endtime="20201115 22:03:11.458"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:11.471" level="INFO">${OVERHEAD} = {'diff': [1.0750000000000343e-05, 1.0750000000000343e-05, 1.0750000000000343e-05, 1.0736000000000773e-05, 1.0750000000000343e-05, 1.0707999999998163e-05, 1.0750000000000343e-05, 1.0750000000000343e-05...</msg>
<status status="PASS" starttime="20201115 22:03:11.459" endtime="20201115 22:03:11.472"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:11.476" level="INFO">NAME: 00-overhead-10-set</msg>
<status status="PASS" starttime="20201115 22:03:11.475" endtime="20201115 22:03:11.476"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:11.478" level="INFO">VALUE: [1.0750000000000343e-05, 1.0750000000000343e-05, 1.0750000000000343e-05, 1.0736000000000773e-05, 1.0750000000000343e-05, 1.0707999999998163e-05, 1.0750000000000343e-05, 1.0750000000000343e-05, 1.0750000000000343e-05, 1.0750000000000343e-05, 1.0777999999999482e-05, 1.0750000000000343e-05, 1.0750000000000343e-05, 1.0693999999998594e-05, 1.0735999999997303e-05, 1.0763999999999913e-05, 1.0750000000000343e-05, 1.0763999999999913e-05, 1.0763999999999913e-05, 1.0763999999999913e-05, 1.0749999999996873e-05, 1.0736000000000773e-05, 1.0707999999998163e-05, 1.0749999999996873e-05, 1.0750000000000343e-05, 1.0791999999999052e-05, 1.0750000000000343e-05, 1.0749999999996873e-05, 1.0763999999999913e-05, 1.0750000000000343e-05, 1.0750000000000343e-05, 1.0750000000000343e-05, 1.0736000000000773e-05, 1.0749999999996873e-05, 1.0777999999999482e-05, 1.0763999999999913e-05, 1.0722000000001203e-05, 1.0820000000001662e-05, 1.0694000000002063e-05, 1.0695000000001537e-05, 1.0750000000000343e-05, 1.0763999999999913e-05, 1.0750000000000343e-05, 1.0749999999996873e-05, 1.0763999999999913e-05, 1.0763999999999913e-05, 1.0777999999999482e-05, 1.0750000000000343e-05, 1.0763999999999913e-05, 1.0763999999999913e-05]</msg>
<status status="PASS" starttime="20201115 22:03:11.477" endtime="20201115 22:03:11.479"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.472" endtime="20201115 22:03:11.479"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:11.481" endtime="20201115 22:03:11.483"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:11.485" endtime="20201115 22:03:11.504"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.483" endtime="20201115 22:03:11.505"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.480" endtime="20201115 22:03:11.505"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.116" endtime="20201115 22:03:11.506"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.545" endtime="20201115 22:03:11.506"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.544" endtime="20201115 22:03:11.506"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:11.508" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:11.517" endtime="20201115 22:03:11.532"></status>
</kw>
<msg timestamp="20201115 22:03:11.532" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:11.515" endtime="20201115 22:03:11.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:11.535" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:11.533" endtime="20201115 22:03:11.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:11.536" endtime="20201115 22:03:11.538"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.513" endtime="20201115 22:03:11.539"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.511" endtime="20201115 22:03:11.539"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:11.545" endtime="20201115 22:03:11.833"></status>
</kw>
<msg timestamp="20201115 22:03:11.836" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022329569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022341083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:11.544" endtime="20201115 22:03:11.836"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:11.844" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022329569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022341083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:11.837" endtime="20201115 22:03:11.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:11.845" endtime="20201115 22:03:11.847"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.541" endtime="20201115 22:03:11.847"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.540" endtime="20201115 22:03:11.847"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:11.851" level="INFO">${RESULT} = [{'time': 0.022341083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1514000000000663e-05, 'source_diff': 1.1514000000000663e-05}, {'time': 0.022482639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:11.848" endtime="20201115 22:03:11.852"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:11.865" level="INFO">${OVERHEAD} = {'diff': [1.1514000000000663e-05, 1.1499999999997623e-05, 1.1556000000002842e-05, 1.1458000000002383e-05, 1.1513999999997193e-05, 1.1514000000000663e-05, 1.1528000000000233e-05, 1.1500000000001093e-05...</msg>
<status status="PASS" starttime="20201115 22:03:11.852" endtime="20201115 22:03:11.865"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:11.870" level="INFO">NAME: 00-overhead-11-set</msg>
<status status="PASS" starttime="20201115 22:03:11.869" endtime="20201115 22:03:11.870"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:11.872" level="INFO">VALUE: [1.1514000000000663e-05, 1.1499999999997623e-05, 1.1556000000002842e-05, 1.1458000000002383e-05, 1.1513999999997193e-05, 1.1514000000000663e-05, 1.1528000000000233e-05, 1.1500000000001093e-05, 1.1486000000001523e-05, 1.1499999999997623e-05, 1.1528000000000233e-05, 1.1514000000000663e-05, 1.1528000000000233e-05, 1.1514000000000663e-05, 1.1514000000000663e-05, 1.1499999999997623e-05, 1.1528000000000233e-05, 1.1527000000000759e-05, 1.1528000000000233e-05, 1.1514000000000663e-05, 1.1500000000001093e-05, 1.1499999999997623e-05, 1.1528000000000233e-05, 1.1513999999997193e-05, 1.1514000000000663e-05, 1.1485999999998053e-05, 1.1500000000001093e-05, 1.1513000000001189e-05, 1.1500000000001093e-05, 1.1513999999997193e-05, 1.1499999999997623e-05, 1.1514000000000663e-05, 1.1499999999997623e-05, 1.1555999999999372e-05, 1.1514000000000663e-05, 1.1513999999997193e-05, 1.1444999999998817e-05, 1.1514000000000663e-05, 1.1513999999997193e-05, 1.1527000000000759e-05, 1.1487000000000996e-05, 1.1541000000000329e-05, 1.1486000000001523e-05, 1.1555999999999372e-05, 1.1513999999997193e-05, 1.1444999999998817e-05, 1.1555999999999372e-05, 1.1500000000001093e-05, 1.1500000000001093e-05, 1.1554999999999899e-05]</msg>
<status status="PASS" starttime="20201115 22:03:11.871" endtime="20201115 22:03:11.872"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.866" endtime="20201115 22:03:11.873"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:11.875" endtime="20201115 22:03:11.876"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:11.878" endtime="20201115 22:03:11.898"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.877" endtime="20201115 22:03:11.898"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.873" endtime="20201115 22:03:11.899"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.509" endtime="20201115 22:03:11.899"></status>
</kw>
<msg timestamp="20201115 22:03:11.899" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:11.908" endtime="20201115 22:03:11.925"></status>
</kw>
<msg timestamp="20201115 22:03:11.926" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:11.907" endtime="20201115 22:03:11.927"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:11.929" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:11.927" endtime="20201115 22:03:11.929"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:11.930" endtime="20201115 22:03:11.931"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.904" endtime="20201115 22:03:11.932"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.902" endtime="20201115 22:03:11.932"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:11.939" endtime="20201115 22:03:12.225"></status>
</kw>
<msg timestamp="20201115 22:03:12.228" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019791597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019803083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:11.937" endtime="20201115 22:03:12.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:12.236" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019791597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019803083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:12.229" endtime="20201115 22:03:12.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:12.237" endtime="20201115 22:03:12.239"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.935" endtime="20201115 22:03:12.239"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.933" endtime="20201115 22:03:12.240"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:12.244" level="INFO">${RESULT} = [{'time': 0.019803083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1485999999998053e-05, 'source_diff': 1.1485999999998053e-05}, {'time': 0.019944833, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:12.240" endtime="20201115 22:03:12.244"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:12.257" level="INFO">${OVERHEAD} = {'diff': [1.1485999999998053e-05, 1.1554999999999899e-05, 1.1444999999998817e-05, 1.1499999999997623e-05, 1.152699999999729e-05, 1.1486000000001523e-05, 1.1486000000001523e-05, 1.1500000000001093e-05,...</msg>
<status status="PASS" starttime="20201115 22:03:12.245" endtime="20201115 22:03:12.257"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:12.262" level="INFO">NAME: 00-overhead-11-set</msg>
<status status="PASS" starttime="20201115 22:03:12.261" endtime="20201115 22:03:12.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:12.264" level="INFO">VALUE: [1.1485999999998053e-05, 1.1554999999999899e-05, 1.1444999999998817e-05, 1.1499999999997623e-05, 1.152699999999729e-05, 1.1486000000001523e-05, 1.1486000000001523e-05, 1.1500000000001093e-05, 1.1499999999997623e-05, 1.1514000000000663e-05, 1.1500000000001093e-05, 1.1499999999997623e-05, 1.1513999999997193e-05, 1.1500000000001093e-05, 1.1500000000001093e-05, 1.1514000000000663e-05, 1.1499999999997623e-05, 1.1555999999999372e-05, 1.1514000000000663e-05, 1.1457999999998913e-05, 1.1514000000000663e-05, 1.1514000000000663e-05, 1.1514000000000663e-05, 1.1513000000001189e-05, 1.1514000000000663e-05, 1.1514000000000663e-05, 1.1527000000000759e-05, 1.1528000000000233e-05, 1.1514000000000663e-05, 1.1554999999999899e-05, 1.1500000000001093e-05, 1.1514000000000663e-05, 1.1528000000000233e-05, 1.1514000000000663e-05, 1.1541000000000329e-05, 1.1457999999998913e-05, 1.1499999999997623e-05, 1.1541999999999802e-05, 1.1541999999999802e-05, 1.1486999999997527e-05, 1.1528000000000233e-05, 1.1513000000001189e-05, 1.1528000000000233e-05, 1.1486000000001523e-05, 1.1514000000000663e-05, 1.1527000000000759e-05, 1.1514000000000663e-05, 1.1500000000001093e-05, 1.1500000000001093e-05, 1.1500000000001093e-05]</msg>
<status status="PASS" starttime="20201115 22:03:12.263" endtime="20201115 22:03:12.264"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.258" endtime="20201115 22:03:12.265"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:12.267" endtime="20201115 22:03:12.269"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:12.271" endtime="20201115 22:03:12.290"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.269" endtime="20201115 22:03:12.291"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.266" endtime="20201115 22:03:12.291"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.900" endtime="20201115 22:03:12.291"></status>
</kw>
<msg timestamp="20201115 22:03:12.292" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:12.301" endtime="20201115 22:03:12.319"></status>
</kw>
<msg timestamp="20201115 22:03:12.319" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:12.299" endtime="20201115 22:03:12.319"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:12.322" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:12.320" endtime="20201115 22:03:12.322"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:12.323" endtime="20201115 22:03:12.324"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.297" endtime="20201115 22:03:12.325"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.294" endtime="20201115 22:03:12.325"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:12.332" endtime="20201115 22:03:12.618"></status>
</kw>
<msg timestamp="20201115 22:03:12.621" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020436556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020448097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:12.330" endtime="20201115 22:03:12.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:12.629" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020436556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020448097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:12.623" endtime="20201115 22:03:12.630"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:12.631" endtime="20201115 22:03:12.632"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.328" endtime="20201115 22:03:12.633"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.326" endtime="20201115 22:03:12.633"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:12.637" level="INFO">${RESULT} = [{'time': 0.020448097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.154099999999686e-05, 'source_diff': 1.154099999999686e-05}, {'time': 0.020589417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:12.634" endtime="20201115 22:03:12.638"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:12.651" level="INFO">${OVERHEAD} = {'diff': [1.154099999999686e-05, 1.1513999999997193e-05, 1.1528000000000233e-05, 1.1569999999998942e-05, 1.1514000000000663e-05, 1.1485999999998053e-05, 1.1500000000001093e-05, 1.1486000000001523e-05,...</msg>
<status status="PASS" starttime="20201115 22:03:12.638" endtime="20201115 22:03:12.651"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:12.655" level="INFO">NAME: 00-overhead-11-set</msg>
<status status="PASS" starttime="20201115 22:03:12.654" endtime="20201115 22:03:12.656"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:12.658" level="INFO">VALUE: [1.154099999999686e-05, 1.1513999999997193e-05, 1.1528000000000233e-05, 1.1569999999998942e-05, 1.1514000000000663e-05, 1.1485999999998053e-05, 1.1500000000001093e-05, 1.1486000000001523e-05, 1.1500000000001093e-05, 1.1513000000001189e-05, 1.1514000000000663e-05, 1.1514000000000663e-05, 1.1513999999997193e-05, 1.1514000000000663e-05, 1.1514000000000663e-05, 1.1513000000001189e-05, 1.1499999999997623e-05, 1.1528000000000233e-05, 1.1513000000001189e-05, 1.1528000000000233e-05, 1.1528000000000233e-05, 1.1499999999997623e-05, 1.1541999999999802e-05, 1.1500000000001093e-05, 1.1513999999997193e-05, 1.1528000000000233e-05, 1.1514000000000663e-05, 1.1541999999999802e-05, 1.1445000000002287e-05, 1.1514000000000663e-05, 1.1514000000000663e-05, 1.1514000000000663e-05, 1.1472000000001953e-05, 1.1541999999999802e-05, 1.1514000000000663e-05, 1.1500000000001093e-05, 1.1541999999999802e-05, 1.1514000000000663e-05, 1.1528000000000233e-05, 1.152699999999729e-05, 1.1528000000000233e-05, 1.1514000000000663e-05, 1.1541999999999802e-05, 1.1554999999999899e-05, 1.1500000000001093e-05, 1.1499999999997623e-05, 1.1514000000000663e-05, 1.1514000000000663e-05, 1.1500000000001093e-05, 1.1527999999996763e-05]</msg>
<status status="PASS" starttime="20201115 22:03:12.656" endtime="20201115 22:03:12.658"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.652" endtime="20201115 22:03:12.659"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:12.661" endtime="20201115 22:03:12.662"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:12.665" endtime="20201115 22:03:12.684"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.663" endtime="20201115 22:03:12.685"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.659" endtime="20201115 22:03:12.685"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.292" endtime="20201115 22:03:12.686"></status>
</kw>
<msg timestamp="20201115 22:03:12.686" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:12.695" endtime="20201115 22:03:12.712"></status>
</kw>
<msg timestamp="20201115 22:03:12.713" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:12.693" endtime="20201115 22:03:12.713"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:12.715" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:12.714" endtime="20201115 22:03:12.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:12.716" endtime="20201115 22:03:12.718"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.691" endtime="20201115 22:03:12.718"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.689" endtime="20201115 22:03:12.719"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:12.725" endtime="20201115 22:03:13.011"></status>
</kw>
<msg timestamp="20201115 22:03:13.014" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019970597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019982111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:12.724" endtime="20201115 22:03:13.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:13.022" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019970597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019982111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:13.016" endtime="20201115 22:03:13.023"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:13.024" endtime="20201115 22:03:13.025"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.721" endtime="20201115 22:03:13.026"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.719" endtime="20201115 22:03:13.026"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:13.030" level="INFO">${RESULT} = [{'time': 0.019982111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1514000000000663e-05, 'source_diff': 1.1514000000000663e-05}, {'time': 0.020123972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:13.027" endtime="20201115 22:03:13.030"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:13.044" level="INFO">${OVERHEAD} = {'diff': [1.1514000000000663e-05, 1.1500000000001093e-05, 1.1499999999997623e-05, 1.1528000000000233e-05, 1.1472000000001953e-05, 1.1443999999999344e-05, 1.1514000000000663e-05, 1.1499999999997623e-05...</msg>
<status status="PASS" starttime="20201115 22:03:13.031" endtime="20201115 22:03:13.044"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:13.048" level="INFO">NAME: 00-overhead-11-set</msg>
<status status="PASS" starttime="20201115 22:03:13.047" endtime="20201115 22:03:13.049"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:13.051" level="INFO">VALUE: [1.1514000000000663e-05, 1.1500000000001093e-05, 1.1499999999997623e-05, 1.1528000000000233e-05, 1.1472000000001953e-05, 1.1443999999999344e-05, 1.1514000000000663e-05, 1.1499999999997623e-05, 1.1499999999997623e-05, 1.1513000000001189e-05, 1.1528000000000233e-05, 1.1499999999997623e-05, 1.1443999999999344e-05, 1.1528000000000233e-05, 1.1486000000001523e-05, 1.1513999999997193e-05, 1.1514000000000663e-05, 1.1499999999997623e-05, 1.1514000000000663e-05, 1.1541999999999802e-05, 1.1500000000001093e-05, 1.1500000000001093e-05, 1.1528000000000233e-05, 1.1486000000001523e-05, 1.1514000000000663e-05, 1.1514000000000663e-05, 1.1528000000000233e-05, 1.1486000000001523e-05, 1.1514000000000663e-05, 1.1527000000000759e-05, 1.1528000000000233e-05, 1.1541999999999802e-05, 1.1541000000000329e-05, 1.1528000000000233e-05, 1.1528000000000233e-05, 1.1457999999998913e-05, 1.1500000000001093e-05, 1.1541999999999802e-05, 1.1500000000001093e-05, 1.1514000000000663e-05, 1.1541999999999802e-05, 1.1514000000000663e-05, 1.1514000000000663e-05, 1.1500000000001093e-05, 1.1527000000000759e-05, 1.1513999999997193e-05, 1.1584000000001982e-05, 1.1514000000000663e-05, 1.1513999999997193e-05, 1.1514000000000663e-05]</msg>
<status status="PASS" starttime="20201115 22:03:13.049" endtime="20201115 22:03:13.051"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.045" endtime="20201115 22:03:13.052"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:13.054" endtime="20201115 22:03:13.056"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:13.058" endtime="20201115 22:03:13.077"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.056" endtime="20201115 22:03:13.078"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.053" endtime="20201115 22:03:13.078"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.687" endtime="20201115 22:03:13.079"></status>
</kw>
<msg timestamp="20201115 22:03:13.079" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:13.088" endtime="20201115 22:03:13.105"></status>
</kw>
<msg timestamp="20201115 22:03:13.106" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:13.086" endtime="20201115 22:03:13.106"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:13.108" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:13.107" endtime="20201115 22:03:13.109"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:13.110" endtime="20201115 22:03:13.111"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.083" endtime="20201115 22:03:13.112"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.081" endtime="20201115 22:03:13.112"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:13.119" endtime="20201115 22:03:13.407"></status>
</kw>
<msg timestamp="20201115 22:03:13.410" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020179278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020190792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:13.117" endtime="20201115 22:03:13.411"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:13.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020179278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020190792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:13.411" endtime="20201115 22:03:13.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:13.420" endtime="20201115 22:03:13.421"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.114" endtime="20201115 22:03:13.422"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.113" endtime="20201115 22:03:13.422"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:13.426" level="INFO">${RESULT} = [{'time': 0.020190792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1514000000000663e-05, 'source_diff': 1.1514000000000663e-05}, {'time': 0.020334306, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:13.423" endtime="20201115 22:03:13.427"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:13.440" level="INFO">${OVERHEAD} = {'diff': [1.1514000000000663e-05, 1.1514000000000663e-05, 1.1514000000000663e-05, 1.1528000000000233e-05, 1.1514000000000663e-05, 1.1429999999999774e-05, 1.1500000000001093e-05, 1.1528000000000233e-05...</msg>
<status status="PASS" starttime="20201115 22:03:13.427" endtime="20201115 22:03:13.440"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:13.444" level="INFO">NAME: 00-overhead-11-set</msg>
<status status="PASS" starttime="20201115 22:03:13.443" endtime="20201115 22:03:13.445"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:13.447" level="INFO">VALUE: [1.1514000000000663e-05, 1.1514000000000663e-05, 1.1514000000000663e-05, 1.1528000000000233e-05, 1.1514000000000663e-05, 1.1429999999999774e-05, 1.1500000000001093e-05, 1.1528000000000233e-05, 1.1500000000001093e-05, 1.1541999999999802e-05, 1.1528000000000233e-05, 1.1514000000000663e-05, 1.1528000000000233e-05, 1.1514000000000663e-05, 1.1528000000000233e-05, 1.1513999999997193e-05, 1.1514000000000663e-05, 1.1514000000000663e-05, 1.1554999999999899e-05, 1.1499999999997623e-05, 1.1513000000001189e-05, 1.1528000000000233e-05, 1.1513999999997193e-05, 1.1513999999997193e-05, 1.1500000000001093e-05, 1.1514000000000663e-05, 1.1528000000000233e-05, 1.1500000000001093e-05, 1.1500000000001093e-05, 1.1541999999999802e-05, 1.1528000000000233e-05, 1.1514000000000663e-05, 1.1500000000001093e-05, 1.1471999999998483e-05, 1.1514000000000663e-05, 1.1500000000001093e-05, 1.1500000000001093e-05, 1.1457999999998913e-05, 1.1514000000000663e-05, 1.1514000000000663e-05, 1.1486000000001523e-05, 1.1513999999997193e-05, 1.1513000000001189e-05, 1.1499999999997623e-05, 1.1569999999998942e-05, 1.1556000000002842e-05, 1.1513999999997193e-05, 1.1500000000001093e-05, 1.1514000000000663e-05, 1.1500000000001093e-05]</msg>
<status status="PASS" starttime="20201115 22:03:13.445" endtime="20201115 22:03:13.448"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.441" endtime="20201115 22:03:13.448"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:13.450" endtime="20201115 22:03:13.452"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:13.454" endtime="20201115 22:03:13.473"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.452" endtime="20201115 22:03:13.474"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.449" endtime="20201115 22:03:13.474"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.079" endtime="20201115 22:03:13.474"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.507" endtime="20201115 22:03:13.475"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.506" endtime="20201115 22:03:13.475"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:13.477" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:13.486" endtime="20201115 22:03:13.502"></status>
</kw>
<msg timestamp="20201115 22:03:13.503" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:13.484" endtime="20201115 22:03:13.503"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:13.505" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:13.504" endtime="20201115 22:03:13.506"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:13.506" endtime="20201115 22:03:13.508"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.482" endtime="20201115 22:03:13.509"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.480" endtime="20201115 22:03:13.509"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:13.515" endtime="20201115 22:03:13.803"></status>
</kw>
<msg timestamp="20201115 22:03:13.806" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022179875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022192153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:13.514" endtime="20201115 22:03:13.806"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:13.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022179875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022192153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:13.807" endtime="20201115 22:03:13.814"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:13.815" endtime="20201115 22:03:13.816"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.511" endtime="20201115 22:03:13.817"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.510" endtime="20201115 22:03:13.817"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:13.821" level="INFO">${RESULT} = [{'time': 0.022192153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2277999999997513e-05, 'source_diff': 1.2277999999997513e-05}, {'time': 0.022346361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:13.818" endtime="20201115 22:03:13.822"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:13.835" level="INFO">${OVERHEAD} = {'diff': [1.2277999999997513e-05, 1.2263999999997943e-05, 1.2278000000000983e-05, 1.2292000000000552e-05, 1.2291999999997083e-05, 1.2305000000000649e-05, 1.2306000000000122e-05, 1.2249999999998373e-05...</msg>
<status status="PASS" starttime="20201115 22:03:13.822" endtime="20201115 22:03:13.835"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:13.839" level="INFO">NAME: 00-overhead-12-set</msg>
<status status="PASS" starttime="20201115 22:03:13.838" endtime="20201115 22:03:13.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:13.842" level="INFO">VALUE: [1.2277999999997513e-05, 1.2263999999997943e-05, 1.2278000000000983e-05, 1.2292000000000552e-05, 1.2291999999997083e-05, 1.2305000000000649e-05, 1.2306000000000122e-05, 1.2249999999998373e-05, 1.2221999999999233e-05, 1.2263999999997943e-05, 1.2264000000001413e-05, 1.2278000000000983e-05, 1.2263999999997943e-05, 1.2278000000000983e-05, 1.2277000000001509e-05, 1.2278000000000983e-05, 1.2277999999997513e-05, 1.2292000000000552e-05, 1.2264000000001413e-05, 1.2264000000001413e-05, 1.2277999999997513e-05, 1.2361000000002398e-05, 1.2264000000001413e-05, 1.2278000000000983e-05, 1.2278000000000983e-05, 1.2264000000001413e-05, 1.2263999999997943e-05, 1.2264000000001413e-05, 1.2278000000000983e-05, 1.2278000000000983e-05, 1.2264000000001413e-05, 1.2291000000001079e-05, 1.226299999999847e-05, 1.2263999999997943e-05, 1.2292000000000552e-05, 1.2278000000000983e-05, 1.2277999999997513e-05, 1.2346999999999358e-05, 1.2278000000000983e-05, 1.2292000000000552e-05, 1.2277000000001509e-05, 1.2278000000000983e-05, 1.2249999999998373e-05, 1.229099999999761e-05, 1.2263000000001939e-05, 1.2264000000001413e-05, 1.2277999999997513e-05, 1.2264000000001413e-05, 1.2236000000002273e-05, 1.2277999999997513e-05]</msg>
<status status="PASS" starttime="20201115 22:03:13.840" endtime="20201115 22:03:13.843"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.836" endtime="20201115 22:03:13.843"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:13.846" endtime="20201115 22:03:13.847"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:13.849" endtime="20201115 22:03:13.868"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.847" endtime="20201115 22:03:13.869"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.844" endtime="20201115 22:03:13.870"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.478" endtime="20201115 22:03:13.870"></status>
</kw>
<msg timestamp="20201115 22:03:13.870" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:13.879" endtime="20201115 22:03:13.896"></status>
</kw>
<msg timestamp="20201115 22:03:13.896" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:13.877" endtime="20201115 22:03:13.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:13.899" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:13.897" endtime="20201115 22:03:13.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:13.900" endtime="20201115 22:03:13.901"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.875" endtime="20201115 22:03:13.902"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.873" endtime="20201115 22:03:13.902"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:13.909" endtime="20201115 22:03:14.195"></status>
</kw>
<msg timestamp="20201115 22:03:14.198" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019913528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019925806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:13.907" endtime="20201115 22:03:14.199"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:14.206" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019913528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019925806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:14.199" endtime="20201115 22:03:14.207"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:14.208" endtime="20201115 22:03:14.209"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.905" endtime="20201115 22:03:14.210"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.903" endtime="20201115 22:03:14.210"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:14.214" level="INFO">${RESULT} = [{'time': 0.019925806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2278000000000983e-05, 'source_diff': 1.2278000000000983e-05}, {'time': 0.020083347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:14.211" endtime="20201115 22:03:14.214"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:14.228" level="INFO">${OVERHEAD} = {'diff': [1.2278000000000983e-05, 1.2278000000000983e-05, 1.2320000000003162e-05, 1.2277000000001509e-05, 1.2263999999997943e-05, 1.2278000000000983e-05, 1.2264000000001413e-05, 1.2264000000001413e-05...</msg>
<status status="PASS" starttime="20201115 22:03:14.215" endtime="20201115 22:03:14.254"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:14.258" level="INFO">NAME: 00-overhead-12-set</msg>
<status status="PASS" starttime="20201115 22:03:14.257" endtime="20201115 22:03:14.259"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:14.261" level="INFO">VALUE: [1.2278000000000983e-05, 1.2278000000000983e-05, 1.2320000000003162e-05, 1.2277000000001509e-05, 1.2263999999997943e-05, 1.2278000000000983e-05, 1.2264000000001413e-05, 1.2264000000001413e-05, 1.2264000000001413e-05, 1.2291000000001079e-05, 1.2264000000001413e-05, 1.2277000000001509e-05, 1.2292000000000552e-05, 1.2292000000000552e-05, 1.2277000000001509e-05, 1.2264000000001413e-05, 1.2291999999997083e-05, 1.2306000000000122e-05, 1.2278000000000983e-05, 1.2277999999997513e-05, 1.2263999999997943e-05, 1.2264000000001413e-05, 1.2278000000000983e-05, 1.2292000000000552e-05, 1.2221999999999233e-05, 1.2249999999998373e-05, 1.2332999999999789e-05, 1.2264000000001413e-05, 1.227699999999804e-05, 1.2263999999997943e-05, 1.2292000000000552e-05, 1.2278000000000983e-05, 1.2277999999997513e-05, 1.2278000000000983e-05, 1.2263999999997943e-05, 1.2278000000000983e-05, 1.2263999999997943e-05, 1.230499999999718e-05, 1.2277999999997513e-05, 1.2278000000000983e-05, 1.227699999999804e-05, 1.2278000000000983e-05, 1.2306000000000122e-05, 1.2264000000001413e-05, 1.2264000000001413e-05, 1.2292000000000552e-05, 1.2292000000000552e-05, 1.229099999999761e-05, 1.2264000000001413e-05, 1.2277999999997513e-05]</msg>
<status status="PASS" starttime="20201115 22:03:14.259" endtime="20201115 22:03:14.261"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.255" endtime="20201115 22:03:14.262"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:14.264" endtime="20201115 22:03:14.265"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:14.267" endtime="20201115 22:03:14.287"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.266" endtime="20201115 22:03:14.287"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.262" endtime="20201115 22:03:14.288"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.871" endtime="20201115 22:03:14.288"></status>
</kw>
<msg timestamp="20201115 22:03:14.288" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:14.297" endtime="20201115 22:03:14.313"></status>
</kw>
<msg timestamp="20201115 22:03:14.313" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:14.296" endtime="20201115 22:03:14.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:14.316" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:14.314" endtime="20201115 22:03:14.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:14.317" endtime="20201115 22:03:14.318"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.293" endtime="20201115 22:03:14.319"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.291" endtime="20201115 22:03:14.319"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:14.326" endtime="20201115 22:03:14.615"></status>
</kw>
<msg timestamp="20201115 22:03:14.622" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020210667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020222958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:14.324" endtime="20201115 22:03:14.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:14.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020210667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020222958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:14.624" endtime="20201115 22:03:14.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:14.642" endtime="20201115 22:03:14.645"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.322" endtime="20201115 22:03:14.646"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.320" endtime="20201115 22:03:14.647"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:14.657" level="INFO">${RESULT} = [{'time': 0.020222958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.229099999999761e-05, 'source_diff': 1.229099999999761e-05}, {'time': 0.020380222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:14.649" endtime="20201115 22:03:14.657"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:14.687" level="INFO">${OVERHEAD} = {'diff': [1.229099999999761e-05, 1.2278000000000983e-05, 1.2264000000001413e-05, 1.2291000000001079e-05, 1.2292000000000552e-05, 1.2263000000001939e-05, 1.2332999999999789e-05, 1.2278000000000983e-05,...</msg>
<status status="PASS" starttime="20201115 22:03:14.659" endtime="20201115 22:03:14.688"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:14.696" level="INFO">NAME: 00-overhead-12-set</msg>
<status status="PASS" starttime="20201115 22:03:14.694" endtime="20201115 22:03:14.697"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:14.702" level="INFO">VALUE: [1.229099999999761e-05, 1.2278000000000983e-05, 1.2264000000001413e-05, 1.2291000000001079e-05, 1.2292000000000552e-05, 1.2263000000001939e-05, 1.2332999999999789e-05, 1.2278000000000983e-05, 1.230499999999718e-05, 1.2264000000001413e-05, 1.2277999999997513e-05, 1.2305000000000649e-05, 1.2291999999997083e-05, 1.2277000000001509e-05, 1.2278000000000983e-05, 1.2292000000000552e-05, 1.2277000000001509e-05, 1.2250000000001843e-05, 1.2278000000000983e-05, 1.2305000000000649e-05, 1.227699999999804e-05, 1.2278000000000983e-05, 1.2264000000001413e-05, 1.2292000000000552e-05, 1.2278000000000983e-05, 1.2249999999998373e-05, 1.2278000000000983e-05, 1.2277999999997513e-05, 1.2264000000001413e-05, 1.2221999999999233e-05, 1.2277000000001509e-05, 1.226299999999847e-05, 1.2264000000001413e-05, 1.2235999999998803e-05, 1.2319999999999692e-05, 1.2278000000000983e-05, 1.2278000000000983e-05, 1.2319000000000219e-05, 1.2277000000001509e-05, 1.2207999999999664e-05, 1.2278000000000983e-05, 1.2222999999998707e-05, 1.2277999999997513e-05, 1.2291000000001079e-05, 1.2277000000001509e-05, 1.2264000000001413e-05, 1.2277999999997513e-05, 1.2264000000001413e-05, 1.229099999999761e-05, 1.2264000000001413e-05]</msg>
<status status="PASS" starttime="20201115 22:03:14.699" endtime="20201115 22:03:14.702"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.689" endtime="20201115 22:03:14.703"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:14.708" endtime="20201115 22:03:14.711"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:14.714" endtime="20201115 22:03:14.733"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.712" endtime="20201115 22:03:14.734"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.705" endtime="20201115 22:03:14.734"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.289" endtime="20201115 22:03:14.734"></status>
</kw>
<msg timestamp="20201115 22:03:14.735" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:14.743" endtime="20201115 22:03:14.760"></status>
</kw>
<msg timestamp="20201115 22:03:14.760" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:14.742" endtime="20201115 22:03:14.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:14.763" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:14.762" endtime="20201115 22:03:14.763"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:14.764" endtime="20201115 22:03:14.766"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.739" endtime="20201115 22:03:14.766"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.737" endtime="20201115 22:03:14.767"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:14.773" endtime="20201115 22:03:15.061"></status>
</kw>
<msg timestamp="20201115 22:03:15.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019885611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019897889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:14.771" endtime="20201115 22:03:15.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:15.072" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019885611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019897889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:15.065" endtime="20201115 22:03:15.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:15.073" endtime="20201115 22:03:15.075"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.769" endtime="20201115 22:03:15.076"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.767" endtime="20201115 22:03:15.076"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:15.080" level="INFO">${RESULT} = [{'time': 0.019897889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2277999999997513e-05, 'source_diff': 1.2277999999997513e-05}, {'time': 0.020054306, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:15.077" endtime="20201115 22:03:15.080"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:15.094" level="INFO">${OVERHEAD} = {'diff': [1.2277999999997513e-05, 1.2278000000000983e-05, 1.2263999999997943e-05, 1.2250000000001843e-05, 1.2278000000000983e-05, 1.2292000000000552e-05, 1.2264000000001413e-05, 1.2319999999999692e-05...</msg>
<status status="PASS" starttime="20201115 22:03:15.081" endtime="20201115 22:03:15.094"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:15.098" level="INFO">NAME: 00-overhead-12-set</msg>
<status status="PASS" starttime="20201115 22:03:15.097" endtime="20201115 22:03:15.099"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:15.101" level="INFO">VALUE: [1.2277999999997513e-05, 1.2278000000000983e-05, 1.2263999999997943e-05, 1.2250000000001843e-05, 1.2278000000000983e-05, 1.2292000000000552e-05, 1.2264000000001413e-05, 1.2319999999999692e-05, 1.229099999999761e-05, 1.2291000000001079e-05, 1.2263999999997943e-05, 1.2305000000000649e-05, 1.2249999999998373e-05, 1.2278000000000983e-05, 1.2292000000000552e-05, 1.2264000000001413e-05, 1.229099999999761e-05, 1.2346999999999358e-05, 1.2264000000001413e-05, 1.2235999999998803e-05, 1.2264000000001413e-05, 1.2264000000001413e-05, 1.227699999999804e-05, 1.2263999999997943e-05, 1.2278000000000983e-05, 1.2332999999999789e-05, 1.2278000000000983e-05, 1.2332999999999789e-05, 1.2264000000001413e-05, 1.2263999999997943e-05, 1.2291000000001079e-05, 1.2263999999997943e-05, 1.230499999999718e-05, 1.2277000000001509e-05, 1.2264000000001413e-05, 1.229099999999761e-05, 1.2291000000001079e-05, 1.2278000000000983e-05, 1.2278000000000983e-05, 1.2250000000001843e-05, 1.2292000000000552e-05, 1.2277000000001509e-05, 1.2223000000002177e-05, 1.2249999999998373e-05, 1.2264000000001413e-05, 1.2263999999997943e-05, 1.2263999999997943e-05, 1.2292000000000552e-05, 1.2277999999997513e-05, 1.2306000000000122e-05]</msg>
<status status="PASS" starttime="20201115 22:03:15.099" endtime="20201115 22:03:15.101"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.095" endtime="20201115 22:03:15.102"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:15.104" endtime="20201115 22:03:15.105"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:15.107" endtime="20201115 22:03:15.127"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.106" endtime="20201115 22:03:15.127"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.102" endtime="20201115 22:03:15.128"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.735" endtime="20201115 22:03:15.128"></status>
</kw>
<msg timestamp="20201115 22:03:15.128" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:15.137" endtime="20201115 22:03:15.153"></status>
</kw>
<msg timestamp="20201115 22:03:15.154" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:15.135" endtime="20201115 22:03:15.154"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:15.156" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:15.155" endtime="20201115 22:03:15.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:15.157" endtime="20201115 22:03:15.159"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.133" endtime="20201115 22:03:15.159"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.131" endtime="20201115 22:03:15.160"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:15.166" endtime="20201115 22:03:15.453"></status>
</kw>
<msg timestamp="20201115 22:03:15.456" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019819306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019831569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:15.165" endtime="20201115 22:03:15.457"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:15.464" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019819306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019831569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:15.457" endtime="20201115 22:03:15.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:15.466" endtime="20201115 22:03:15.467"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.162" endtime="20201115 22:03:15.468"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.160" endtime="20201115 22:03:15.468"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:15.472" level="INFO">${RESULT} = [{'time': 0.019831569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2263000000001939e-05, 'source_diff': 1.2263000000001939e-05}, {'time': 0.019987125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:15.469" endtime="20201115 22:03:15.472"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:15.486" level="INFO">${OVERHEAD} = {'diff': [1.2263000000001939e-05, 1.2278000000000983e-05, 1.2277999999997513e-05, 1.226299999999847e-05, 1.2263999999997943e-05, 1.2278000000000983e-05, 1.2291000000001079e-05, 1.2277999999997513e-05,...</msg>
<status status="PASS" starttime="20201115 22:03:15.473" endtime="20201115 22:03:15.486"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:15.490" level="INFO">NAME: 00-overhead-12-set</msg>
<status status="PASS" starttime="20201115 22:03:15.489" endtime="20201115 22:03:15.491"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:15.493" level="INFO">VALUE: [1.2263000000001939e-05, 1.2278000000000983e-05, 1.2277999999997513e-05, 1.226299999999847e-05, 1.2263999999997943e-05, 1.2278000000000983e-05, 1.2291000000001079e-05, 1.2277999999997513e-05, 1.2278000000000983e-05, 1.227699999999804e-05, 1.226299999999847e-05, 1.2263999999997943e-05, 1.2278000000000983e-05, 1.2263999999997943e-05, 1.2278000000000983e-05, 1.2278000000000983e-05, 1.2263999999997943e-05, 1.2236000000002273e-05, 1.2278000000000983e-05, 1.2292000000000552e-05, 1.2277000000001509e-05, 1.2264000000001413e-05, 1.2277999999997513e-05, 1.2291000000001079e-05, 1.2292000000000552e-05, 1.2263999999997943e-05, 1.230499999999718e-05, 1.2319999999999692e-05, 1.229099999999761e-05, 1.2306000000000122e-05, 1.2278000000000983e-05, 1.2249999999998373e-05, 1.2277000000001509e-05, 1.2319999999999692e-05, 1.2319999999999692e-05, 1.2292000000000552e-05, 1.2249999999998373e-05, 1.2264000000001413e-05, 1.2292000000000552e-05, 1.2278000000000983e-05, 1.2264000000001413e-05, 1.2278000000000983e-05, 1.2194999999999567e-05, 1.2263999999997943e-05, 1.2264000000001413e-05, 1.2277999999997513e-05, 1.2221999999999233e-05, 1.2277999999997513e-05, 1.2278000000000983e-05, 1.2263999999997943e-05]</msg>
<status status="PASS" starttime="20201115 22:03:15.491" endtime="20201115 22:03:15.493"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.487" endtime="20201115 22:03:15.494"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:15.496" endtime="20201115 22:03:15.497"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:15.499" endtime="20201115 22:03:15.519"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.498" endtime="20201115 22:03:15.519"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.494" endtime="20201115 22:03:15.520"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.129" endtime="20201115 22:03:15.520"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.476" endtime="20201115 22:03:15.520"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.475" endtime="20201115 22:03:15.520"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:15.523" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:15.531" endtime="20201115 22:03:15.550"></status>
</kw>
<msg timestamp="20201115 22:03:15.550" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:15.530" endtime="20201115 22:03:15.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:15.553" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:15.552" endtime="20201115 22:03:15.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:15.554" endtime="20201115 22:03:15.556"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.527" endtime="20201115 22:03:15.557"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.525" endtime="20201115 22:03:15.557"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:15.563" endtime="20201115 22:03:15.851"></status>
</kw>
<msg timestamp="20201115 22:03:15.854" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022187917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022200958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:15.562" endtime="20201115 22:03:15.854"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:15.862" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022187917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022200958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:15.855" endtime="20201115 22:03:15.862"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:15.863" endtime="20201115 22:03:15.865"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.559" endtime="20201115 22:03:15.865"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.558" endtime="20201115 22:03:15.866"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:15.870" level="INFO">${RESULT} = [{'time': 0.022200958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.304099999999836e-05, 'source_diff': 1.304099999999836e-05}, {'time': 0.022368847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:15.866" endtime="20201115 22:03:15.870"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:15.883" level="INFO">${OVERHEAD} = {'diff': [1.304099999999836e-05, 1.3055000000001399e-05, 1.304099999999836e-05, 1.3042000000001303e-05, 1.3028000000001733e-05, 1.3027999999998263e-05, 1.304099999999836e-05, 1.3042000000001303e-05, 1...</msg>
<status status="PASS" starttime="20201115 22:03:15.871" endtime="20201115 22:03:15.884"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:15.888" level="INFO">NAME: 00-overhead-13-set</msg>
<status status="PASS" starttime="20201115 22:03:15.887" endtime="20201115 22:03:15.888"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:15.890" level="INFO">VALUE: [1.304099999999836e-05, 1.3055000000001399e-05, 1.304099999999836e-05, 1.3042000000001303e-05, 1.3028000000001733e-05, 1.3027999999998263e-05, 1.304099999999836e-05, 1.3042000000001303e-05, 1.304099999999836e-05, 1.304099999999836e-05, 1.3028000000001733e-05, 1.3027999999998263e-05, 1.3041999999997833e-05, 1.3083000000000539e-05, 1.3042000000001303e-05, 1.2971999999999984e-05, 1.3041999999997833e-05, 1.3028000000001733e-05, 1.3028000000001733e-05, 1.3042000000001303e-05, 1.3027999999998263e-05, 1.302699999999879e-05, 1.3042000000001303e-05, 1.3013999999998693e-05, 1.3083000000000539e-05, 1.3000000000002593e-05, 1.304099999999836e-05, 1.3055999999997403e-05, 1.3110999999999678e-05, 1.3041000000001829e-05, 1.2985999999999553e-05, 1.3041000000001829e-05, 1.3041000000001829e-05, 1.3014000000002163e-05, 1.3055000000001399e-05, 1.3041999999997833e-05, 1.3027000000002259e-05, 1.3027999999998263e-05, 1.3056000000000872e-05, 1.3083000000000539e-05, 1.305499999999793e-05, 1.2985999999999553e-05, 1.305499999999793e-05, 1.3069999999996973e-05, 1.3041999999997833e-05, 1.3028000000001733e-05, 1.3055000000001399e-05, 1.3027000000002259e-05, 1.3027999999998263e-05, 1.3042000000001303e-05]</msg>
<status status="PASS" starttime="20201115 22:03:15.889" endtime="20201115 22:03:15.891"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.884" endtime="20201115 22:03:15.891"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:15.893" endtime="20201115 22:03:15.895"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:15.897" endtime="20201115 22:03:15.916"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.895" endtime="20201115 22:03:15.917"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.892" endtime="20201115 22:03:15.917"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.523" endtime="20201115 22:03:15.918"></status>
</kw>
<msg timestamp="20201115 22:03:15.918" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:15.927" endtime="20201115 22:03:15.947"></status>
</kw>
<msg timestamp="20201115 22:03:15.947" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:15.925" endtime="20201115 22:03:15.948"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:15.950" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:15.949" endtime="20201115 22:03:15.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:15.951" endtime="20201115 22:03:15.953"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.923" endtime="20201115 22:03:15.953"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.920" endtime="20201115 22:03:15.954"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:15.960" endtime="20201115 22:03:16.246"></status>
</kw>
<msg timestamp="20201115 22:03:16.249" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020650458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020663486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:15.959" endtime="20201115 22:03:16.250"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:16.257" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020650458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020663486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:16.250" endtime="20201115 22:03:16.258"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:16.259" endtime="20201115 22:03:16.261"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.956" endtime="20201115 22:03:16.261"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.954" endtime="20201115 22:03:16.262"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:16.266" level="INFO">${RESULT} = [{'time': 0.020663486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3027999999998263e-05, 'source_diff': 1.3027999999998263e-05}, {'time': 0.020833528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:16.262" endtime="20201115 22:03:16.266"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:16.280" level="INFO">${OVERHEAD} = {'diff': [1.3027999999998263e-05, 1.3042000000001303e-05, 1.3055000000001399e-05, 1.3041999999997833e-05, 1.3027999999998263e-05, 1.3027999999998263e-05, 1.304099999999836e-05, 1.3028000000001733e-05,...</msg>
<status status="PASS" starttime="20201115 22:03:16.267" endtime="20201115 22:03:16.280"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:16.284" level="INFO">NAME: 00-overhead-13-set</msg>
<status status="PASS" starttime="20201115 22:03:16.283" endtime="20201115 22:03:16.285"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:16.287" level="INFO">VALUE: [1.3027999999998263e-05, 1.3042000000001303e-05, 1.3055000000001399e-05, 1.3041999999997833e-05, 1.3027999999998263e-05, 1.3027999999998263e-05, 1.304099999999836e-05, 1.3028000000001733e-05, 1.3028000000001733e-05, 1.3042000000001303e-05, 1.3083000000000539e-05, 1.3124999999999248e-05, 1.3042000000001303e-05, 1.3041000000001829e-05, 1.3027999999998263e-05, 1.3013999999998693e-05, 1.3042000000001303e-05, 1.2985999999999553e-05, 1.3028000000001733e-05, 1.3110999999999678e-05, 1.2985999999999553e-05, 1.304099999999836e-05, 1.3042000000001303e-05, 1.302699999999879e-05, 1.3042000000001303e-05, 1.3041000000001829e-05, 1.3027999999998263e-05, 1.3028000000001733e-05, 1.3027999999998263e-05, 1.3041999999997833e-05, 1.3028000000001733e-05, 1.302699999999879e-05, 1.3028000000001733e-05, 1.3041999999997833e-05, 1.2971999999999984e-05, 1.3056000000000872e-05, 1.3042000000001303e-05, 1.3027999999998263e-05, 1.3041999999997833e-05, 1.3028000000001733e-05, 1.3042000000001303e-05, 1.3027999999998263e-05, 1.3041999999997833e-05, 1.3013999999998693e-05, 1.3041999999997833e-05, 1.3041000000001829e-05, 1.2985999999999553e-05, 1.302699999999879e-05, 1.3027999999998263e-05, 1.3055999999997403e-05]</msg>
<status status="PASS" starttime="20201115 22:03:16.286" endtime="20201115 22:03:16.287"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.281" endtime="20201115 22:03:16.288"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:16.290" endtime="20201115 22:03:16.291"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:16.293" endtime="20201115 22:03:16.313"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.292" endtime="20201115 22:03:16.313"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.288" endtime="20201115 22:03:16.314"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.918" endtime="20201115 22:03:16.314"></status>
</kw>
<msg timestamp="20201115 22:03:16.314" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:16.324" endtime="20201115 22:03:16.341"></status>
</kw>
<msg timestamp="20201115 22:03:16.341" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:16.322" endtime="20201115 22:03:16.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:16.344" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:16.342" endtime="20201115 22:03:16.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:16.345" endtime="20201115 22:03:16.346"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.320" endtime="20201115 22:03:16.347"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.317" endtime="20201115 22:03:16.347"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:16.354" endtime="20201115 22:03:16.641"></status>
</kw>
<msg timestamp="20201115 22:03:16.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021250847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021263903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:16.352" endtime="20201115 22:03:16.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:16.652" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021250847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021263903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:16.646" endtime="20201115 22:03:16.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:16.653" endtime="20201115 22:03:16.655"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.350" endtime="20201115 22:03:16.656"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.348" endtime="20201115 22:03:16.656"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:16.660" level="INFO">${RESULT} = [{'time': 0.021263903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3056000000000872e-05, 'source_diff': 1.3056000000000872e-05}, {'time': 0.021431694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:16.657" endtime="20201115 22:03:16.660"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:16.674" level="INFO">${OVERHEAD} = {'diff': [1.3056000000000872e-05, 1.3000000000002593e-05, 1.3027999999998263e-05, 1.3027999999998263e-05, 1.3013999999998693e-05, 1.3042000000001303e-05, 1.3041999999997833e-05, 1.3084000000000012e-05...</msg>
<status status="PASS" starttime="20201115 22:03:16.661" endtime="20201115 22:03:16.674"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:16.678" level="INFO">NAME: 00-overhead-13-set</msg>
<status status="PASS" starttime="20201115 22:03:16.677" endtime="20201115 22:03:16.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:16.681" level="INFO">VALUE: [1.3056000000000872e-05, 1.3000000000002593e-05, 1.3027999999998263e-05, 1.3027999999998263e-05, 1.3013999999998693e-05, 1.3042000000001303e-05, 1.3041999999997833e-05, 1.3084000000000012e-05, 1.2999999999999123e-05, 1.302699999999879e-05, 1.3027999999998263e-05, 1.302699999999879e-05, 1.3056000000000872e-05, 1.3027999999998263e-05, 1.3042000000001303e-05, 1.3069000000000969e-05, 1.3041000000001829e-05, 1.2986000000003023e-05, 1.3042000000001303e-05, 1.3014000000002163e-05, 1.304099999999836e-05, 1.3055000000001399e-05, 1.3014000000002163e-05, 1.3042000000001303e-05, 1.3027999999998263e-05, 1.3027999999998263e-05, 1.2972999999999457e-05, 1.3027999999998263e-05, 1.3027999999998263e-05, 1.3042000000001303e-05, 1.3084000000000012e-05, 1.3028000000001733e-05, 1.3014000000002163e-05, 1.3028000000001733e-05, 1.3027999999998263e-05, 1.3000000000002593e-05, 1.3041999999997833e-05, 1.3041999999997833e-05, 1.3028000000001733e-05, 1.304099999999836e-05, 1.3083000000000539e-05, 1.3041000000001829e-05, 1.3027999999998263e-05, 1.3110999999999678e-05, 1.302699999999879e-05, 1.3042000000001303e-05, 1.3041000000001829e-05, 1.3041999999997833e-05, 1.3042000000001303e-05, 1.3042000000001303e-05]</msg>
<status status="PASS" starttime="20201115 22:03:16.679" endtime="20201115 22:03:16.681"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.675" endtime="20201115 22:03:16.681"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:16.684" endtime="20201115 22:03:16.685"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:16.687" endtime="20201115 22:03:16.707"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.686" endtime="20201115 22:03:16.708"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.682" endtime="20201115 22:03:16.708"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.315" endtime="20201115 22:03:16.709"></status>
</kw>
<msg timestamp="20201115 22:03:16.709" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:16.718" endtime="20201115 22:03:16.734"></status>
</kw>
<msg timestamp="20201115 22:03:16.735" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:16.716" endtime="20201115 22:03:16.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:16.737" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:16.736" endtime="20201115 22:03:16.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:16.738" endtime="20201115 22:03:16.740"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.713" endtime="20201115 22:03:16.740"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.711" endtime="20201115 22:03:16.741"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:16.747" endtime="20201115 22:03:17.033"></status>
</kw>
<msg timestamp="20201115 22:03:17.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020083903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020096944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:16.746" endtime="20201115 22:03:17.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:17.044" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020083903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020096944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:17.038" endtime="20201115 22:03:17.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:17.046" endtime="20201115 22:03:17.047"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.743" endtime="20201115 22:03:17.048"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.741" endtime="20201115 22:03:17.048"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:17.052" level="INFO">${RESULT} = [{'time': 0.020096944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.304099999999836e-05, 'source_diff': 1.304099999999836e-05}, {'time': 0.02026775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:03:17.049" endtime="20201115 22:03:17.053"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:17.066" level="INFO">${OVERHEAD} = {'diff': [1.304099999999836e-05, 1.3014000000002163e-05, 1.304099999999836e-05, 1.3028000000001733e-05, 1.3027999999998263e-05, 1.3056000000000872e-05, 1.3027999999998263e-05, 1.3013999999998693e-05, ...</msg>
<status status="PASS" starttime="20201115 22:03:17.053" endtime="20201115 22:03:17.066"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:17.070" level="INFO">NAME: 00-overhead-13-set</msg>
<status status="PASS" starttime="20201115 22:03:17.069" endtime="20201115 22:03:17.071"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:17.073" level="INFO">VALUE: [1.304099999999836e-05, 1.3014000000002163e-05, 1.304099999999836e-05, 1.3028000000001733e-05, 1.3027999999998263e-05, 1.3056000000000872e-05, 1.3027999999998263e-05, 1.3013999999998693e-05, 1.304099999999836e-05, 1.2999999999999123e-05, 1.3027999999998263e-05, 1.3013999999998693e-05, 1.3041999999997833e-05, 1.305499999999793e-05, 1.3083000000000539e-05, 1.2971999999999984e-05, 1.3098000000003052e-05, 1.3027000000002259e-05, 1.302699999999879e-05, 1.301299999999922e-05, 1.304099999999836e-05, 1.3055999999997403e-05, 1.3028000000001733e-05, 1.3041999999997833e-05, 1.305499999999793e-05, 1.2985999999999553e-05, 1.3013999999998693e-05, 1.3027999999998263e-05, 1.3056000000000872e-05, 1.3041999999997833e-05, 1.3055000000001399e-05, 1.3055999999997403e-05, 1.3041999999997833e-05, 1.2999999999999123e-05, 1.304099999999836e-05, 1.3028000000001733e-05, 1.3027000000002259e-05, 1.3055000000001399e-05, 1.2986000000003023e-05, 1.3027000000002259e-05, 1.3042000000001303e-05, 1.3041000000001829e-05, 1.3027999999998263e-05, 1.3084000000000012e-05, 1.3055000000001399e-05, 1.3041000000001829e-05, 1.3056000000000872e-05, 1.3111999999999152e-05, 1.3055000000001399e-05, 1.3027999999998263e-05]</msg>
<status status="PASS" starttime="20201115 22:03:17.071" endtime="20201115 22:03:17.074"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.067" endtime="20201115 22:03:17.074"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:17.077" endtime="20201115 22:03:17.078"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:17.080" endtime="20201115 22:03:17.099"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.078" endtime="20201115 22:03:17.100"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.075" endtime="20201115 22:03:17.100"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.709" endtime="20201115 22:03:17.101"></status>
</kw>
<msg timestamp="20201115 22:03:17.101" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:17.110" endtime="20201115 22:03:17.128"></status>
</kw>
<msg timestamp="20201115 22:03:17.128" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:17.108" endtime="20201115 22:03:17.128"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:17.130" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:17.129" endtime="20201115 22:03:17.131"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:17.132" endtime="20201115 22:03:17.133"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.106" endtime="20201115 22:03:17.134"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.104" endtime="20201115 22:03:17.134"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:17.140" endtime="20201115 22:03:17.427"></status>
</kw>
<msg timestamp="20201115 22:03:17.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019932389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019945417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:17.139" endtime="20201115 22:03:17.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:17.438" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019932389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019945417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:17.431" endtime="20201115 22:03:17.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:17.439" endtime="20201115 22:03:17.441"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.136" endtime="20201115 22:03:17.442"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.135" endtime="20201115 22:03:17.442"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:17.446" level="INFO">${RESULT} = [{'time': 0.019945417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3028000000001733e-05, 'source_diff': 1.3028000000001733e-05}, {'time': 0.020113056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:17.443" endtime="20201115 22:03:17.446"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:17.460" level="INFO">${OVERHEAD} = {'diff': [1.3028000000001733e-05, 1.3084000000000012e-05, 1.305499999999793e-05, 1.3041000000001829e-05, 1.305499999999793e-05, 1.3042000000001303e-05, 1.3124999999999248e-05, 1.2971999999999984e-05, ...</msg>
<status status="PASS" starttime="20201115 22:03:17.447" endtime="20201115 22:03:17.460"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:17.464" level="INFO">NAME: 00-overhead-13-set</msg>
<status status="PASS" starttime="20201115 22:03:17.463" endtime="20201115 22:03:17.464"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:17.467" level="INFO">VALUE: [1.3028000000001733e-05, 1.3084000000000012e-05, 1.305499999999793e-05, 1.3041000000001829e-05, 1.305499999999793e-05, 1.3042000000001303e-05, 1.3124999999999248e-05, 1.2971999999999984e-05, 1.3041999999997833e-05, 1.3055000000001399e-05, 1.3070000000000442e-05, 1.3056000000000872e-05, 1.3027999999998263e-05, 1.3055000000001399e-05, 1.304099999999836e-05, 1.3042000000001303e-05, 1.3042000000001303e-05, 1.3041999999997833e-05, 1.3070000000000442e-05, 1.3000000000002593e-05, 1.304099999999836e-05, 1.3014000000002163e-05, 1.3055000000001399e-05, 1.2986000000003023e-05, 1.3027999999998263e-05, 1.3028000000001733e-05, 1.305499999999793e-05, 1.3027000000002259e-05, 1.3056000000000872e-05, 1.3041000000001829e-05, 1.3042000000001303e-05, 1.302699999999879e-05, 1.3041999999997833e-05, 1.3042000000001303e-05, 1.3027999999998263e-05, 1.3056000000000872e-05, 1.3027999999998263e-05, 1.2971999999999984e-05, 1.3097000000000109e-05, 1.304099999999836e-05, 1.3042000000001303e-05, 1.3027999999998263e-05, 1.3028000000001733e-05, 1.3042000000001303e-05, 1.3027999999998263e-05, 1.3042000000001303e-05, 1.2985999999999553e-05, 1.2999999999999123e-05, 1.302699999999879e-05, 1.3055000000001399e-05]</msg>
<status status="PASS" starttime="20201115 22:03:17.465" endtime="20201115 22:03:17.467"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.461" endtime="20201115 22:03:17.468"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:17.470" endtime="20201115 22:03:17.472"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:17.474" endtime="20201115 22:03:17.493"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.472" endtime="20201115 22:03:17.494"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.469" endtime="20201115 22:03:17.494"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.102" endtime="20201115 22:03:17.494"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.522" endtime="20201115 22:03:17.495"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.521" endtime="20201115 22:03:17.495"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:17.497" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:17.506" endtime="20201115 22:03:17.524"></status>
</kw>
<msg timestamp="20201115 22:03:17.525" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:17.504" endtime="20201115 22:03:17.525"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:17.527" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:17.526" endtime="20201115 22:03:17.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:17.528" endtime="20201115 22:03:17.530"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.502" endtime="20201115 22:03:17.531"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.500" endtime="20201115 22:03:17.531"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:17.537" endtime="20201115 22:03:17.825"></status>
</kw>
<msg timestamp="20201115 22:03:17.828" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022319889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022333681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:17.536" endtime="20201115 22:03:17.828"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:17.836" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022319889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022333681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:17.829" endtime="20201115 22:03:17.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:17.837" endtime="20201115 22:03:17.839"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.533" endtime="20201115 22:03:17.839"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.532" endtime="20201115 22:03:17.840"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:17.844" level="INFO">${RESULT} = [{'time': 0.022333681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3792000000002053e-05, 'source_diff': 1.3792000000002053e-05}, {'time': 0.022515014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:17.841" endtime="20201115 22:03:17.844"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:17.857" level="INFO">${OVERHEAD} = {'diff': [1.3792000000002053e-05, 1.3791999999998583e-05, 1.3791999999998583e-05, 1.3805999999998153e-05, 1.3791000000002579e-05, 1.3806000000001623e-05, 1.3820000000001192e-05, 1.3833000000001289e-05...</msg>
<status status="PASS" starttime="20201115 22:03:17.845" endtime="20201115 22:03:17.858"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:17.862" level="INFO">NAME: 00-overhead-14-set</msg>
<status status="PASS" starttime="20201115 22:03:17.861" endtime="20201115 22:03:17.862"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:17.865" level="INFO">VALUE: [1.3792000000002053e-05, 1.3791999999998583e-05, 1.3791999999998583e-05, 1.3805999999998153e-05, 1.3791000000002579e-05, 1.3806000000001623e-05, 1.3820000000001192e-05, 1.3833000000001289e-05, 1.3805999999998153e-05, 1.384699999999739e-05, 1.3792000000002053e-05, 1.3791999999998583e-05, 1.3792000000002053e-05, 1.3791999999998583e-05, 1.381899999999825e-05, 1.377699999999954e-05, 1.3792000000002053e-05, 1.3805999999998153e-05, 1.380499999999868e-05, 1.3792000000002053e-05, 1.377699999999954e-05, 1.3749999999999873e-05, 1.3805000000002149e-05, 1.380499999999868e-05, 1.377699999999954e-05, 1.3763999999999443e-05, 1.3806000000001623e-05, 1.3861999999999902e-05, 1.3819999999997723e-05, 1.3791000000002579e-05, 1.379099999999911e-05, 1.3805000000002149e-05, 1.3791999999998583e-05, 1.380499999999868e-05, 1.3806000000001623e-05, 1.3834000000000762e-05, 1.3778000000002483e-05, 1.380499999999868e-05, 1.3805000000002149e-05, 1.3777999999999013e-05, 1.3805999999998153e-05, 1.3791999999998583e-05, 1.3805000000002149e-05, 1.380499999999868e-05, 1.3805999999998153e-05, 1.3777999999999013e-05, 1.3791999999998583e-05, 1.3805000000002149e-05, 1.3819999999997723e-05, 1.379099999999911e-05]</msg>
<status status="PASS" starttime="20201115 22:03:17.863" endtime="20201115 22:03:17.865"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.858" endtime="20201115 22:03:17.866"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:17.868" endtime="20201115 22:03:17.869"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:17.871" endtime="20201115 22:03:17.891"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.870" endtime="20201115 22:03:17.891"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.867" endtime="20201115 22:03:17.892"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.498" endtime="20201115 22:03:17.892"></status>
</kw>
<msg timestamp="20201115 22:03:17.892" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:17.901" endtime="20201115 22:03:17.921"></status>
</kw>
<msg timestamp="20201115 22:03:17.922" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:17.900" endtime="20201115 22:03:17.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:17.924" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:17.923" endtime="20201115 22:03:17.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:17.925" endtime="20201115 22:03:17.928"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.897" endtime="20201115 22:03:17.928"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.895" endtime="20201115 22:03:17.929"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:17.936" endtime="20201115 22:03:18.223"></status>
</kw>
<msg timestamp="20201115 22:03:18.226" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020454042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020467764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:17.934" endtime="20201115 22:03:18.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:18.234" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020454042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020467764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:18.227" endtime="20201115 22:03:18.234"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:18.235" endtime="20201115 22:03:18.237"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.931" endtime="20201115 22:03:18.237"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.930" endtime="20201115 22:03:18.238"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:18.242" level="INFO">${RESULT} = [{'time': 0.020467764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3722000000000734e-05, 'source_diff': 1.3722000000000734e-05}, {'time': 0.020650083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:18.239" endtime="20201115 22:03:18.242"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:18.255" level="INFO">${OVERHEAD} = {'diff': [1.3722000000000734e-05, 1.377699999999954e-05, 1.3791999999998583e-05, 1.3778000000002483e-05, 1.3805000000002149e-05, 1.3805999999998153e-05, 1.3791999999998583e-05, 1.3792000000002053e-05,...</msg>
<status status="PASS" starttime="20201115 22:03:18.243" endtime="20201115 22:03:18.256"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:18.260" level="INFO">NAME: 00-overhead-14-set</msg>
<status status="PASS" starttime="20201115 22:03:18.259" endtime="20201115 22:03:18.260"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:18.263" level="INFO">VALUE: [1.3722000000000734e-05, 1.377699999999954e-05, 1.3791999999998583e-05, 1.3778000000002483e-05, 1.3805000000002149e-05, 1.3805999999998153e-05, 1.3791999999998583e-05, 1.3792000000002053e-05, 1.3736999999999777e-05, 1.3792000000002053e-05, 1.3763999999999443e-05, 1.3820000000001192e-05, 1.3834000000000762e-05, 1.3805000000002149e-05, 1.3791000000002579e-05, 1.3820000000001192e-05, 1.3847000000000859e-05, 1.3847000000000859e-05, 1.3819000000001719e-05, 1.380499999999868e-05, 1.3791999999998583e-05, 1.3791999999998583e-05, 1.380499999999868e-05, 1.3820000000001192e-05, 1.3736000000000304e-05, 1.3791999999998583e-05, 1.3805999999998153e-05, 1.3791999999998583e-05, 1.3805999999998153e-05, 1.380499999999868e-05, 1.3805999999998153e-05, 1.3791999999998583e-05, 1.3819000000001719e-05, 1.3819000000001719e-05, 1.3805000000002149e-05, 1.3805999999998153e-05, 1.3792000000002053e-05, 1.3777999999999013e-05, 1.3791999999998583e-05, 1.3819999999997723e-05, 1.3805000000002149e-05, 1.3805000000002149e-05, 1.3805999999998153e-05, 1.3861000000000429e-05, 1.3806000000001623e-05, 1.3764000000002913e-05, 1.380499999999868e-05, 1.3736999999999777e-05, 1.379099999999911e-05, 1.3791000000002579e-05]</msg>
<status status="PASS" starttime="20201115 22:03:18.261" endtime="20201115 22:03:18.263"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.257" endtime="20201115 22:03:18.264"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:18.266" endtime="20201115 22:03:18.267"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:18.269" endtime="20201115 22:03:18.289"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.268" endtime="20201115 22:03:18.289"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.264" endtime="20201115 22:03:18.290"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.893" endtime="20201115 22:03:18.290"></status>
</kw>
<msg timestamp="20201115 22:03:18.291" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:18.300" endtime="20201115 22:03:18.320"></status>
</kw>
<msg timestamp="20201115 22:03:18.320" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:18.298" endtime="20201115 22:03:18.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:18.322" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:18.321" endtime="20201115 22:03:18.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:18.324" endtime="20201115 22:03:18.325"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.296" endtime="20201115 22:03:18.326"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.293" endtime="20201115 22:03:18.326"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:18.332" endtime="20201115 22:03:18.619"></status>
</kw>
<msg timestamp="20201115 22:03:18.622" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021081778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021095583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:18.331" endtime="20201115 22:03:18.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:18.630" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021081778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021095583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:18.623" endtime="20201115 22:03:18.630"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:18.631" endtime="20201115 22:03:18.632"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.328" endtime="20201115 22:03:18.633"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.327" endtime="20201115 22:03:18.633"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:18.638" level="INFO">${RESULT} = [{'time': 0.021095583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3805000000002149e-05, 'source_diff': 1.3805000000002149e-05}, {'time': 0.021278778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:18.634" endtime="20201115 22:03:18.638"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:18.651" level="INFO">${OVERHEAD} = {'diff': [1.3805000000002149e-05, 1.3820000000001192e-05, 1.3791999999998583e-05, 1.3805000000002149e-05, 1.380499999999868e-05, 1.3819999999997723e-05, 1.3777999999999013e-05, 1.3805999999998153e-05,...</msg>
<status status="PASS" starttime="20201115 22:03:18.639" endtime="20201115 22:03:18.652"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:18.656" level="INFO">NAME: 00-overhead-14-set</msg>
<status status="PASS" starttime="20201115 22:03:18.655" endtime="20201115 22:03:18.656"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:18.658" level="INFO">VALUE: [1.3805000000002149e-05, 1.3820000000001192e-05, 1.3791999999998583e-05, 1.3805000000002149e-05, 1.380499999999868e-05, 1.3819999999997723e-05, 1.3777999999999013e-05, 1.3805999999998153e-05, 1.3806000000001623e-05, 1.3819999999997723e-05, 1.3820000000001192e-05, 1.381899999999825e-05, 1.3791000000002579e-05, 1.377699999999954e-05, 1.3805000000002149e-05, 1.3806000000001623e-05, 1.3777999999999013e-05, 1.3791999999998583e-05, 1.3792000000002053e-05, 1.3778000000002483e-05, 1.3806000000001623e-05, 1.3792000000002053e-05, 1.3792000000002053e-05, 1.380499999999868e-05, 1.3777999999999013e-05, 1.3805000000002149e-05, 1.380499999999868e-05, 1.380499999999868e-05, 1.3749999999999873e-05, 1.3819999999997723e-05, 1.380499999999868e-05, 1.3820000000001192e-05, 1.3861000000000429e-05, 1.3861000000000429e-05, 1.3805000000002149e-05, 1.3806000000001623e-05, 1.380499999999868e-05, 1.3806000000001623e-05, 1.379099999999911e-05, 1.3805999999998153e-05, 1.3805999999998153e-05, 1.3791999999998583e-05, 1.3791999999998583e-05, 1.3792000000002053e-05, 1.3777999999999013e-05, 1.3791999999998583e-05, 1.3792000000002053e-05, 1.3791000000002579e-05, 1.3791999999998583e-05, 1.379099999999911e-05]</msg>
<status status="PASS" starttime="20201115 22:03:18.657" endtime="20201115 22:03:18.659"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.652" endtime="20201115 22:03:18.659"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:18.662" endtime="20201115 22:03:18.663"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:18.665" endtime="20201115 22:03:18.684"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.663" endtime="20201115 22:03:18.685"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.660" endtime="20201115 22:03:18.685"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.291" endtime="20201115 22:03:18.686"></status>
</kw>
<msg timestamp="20201115 22:03:18.686" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:18.695" endtime="20201115 22:03:18.713"></status>
</kw>
<msg timestamp="20201115 22:03:18.713" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:18.693" endtime="20201115 22:03:18.713"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:18.716" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:18.714" endtime="20201115 22:03:18.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:18.717" endtime="20201115 22:03:18.719"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.691" endtime="20201115 22:03:18.719"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.689" endtime="20201115 22:03:18.720"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:18.726" endtime="20201115 22:03:19.012"></status>
</kw>
<msg timestamp="20201115 22:03:19.015" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019964708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019978542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:18.724" endtime="20201115 22:03:19.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:19.023" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019964708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019978542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:19.016" endtime="20201115 22:03:19.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:19.024" endtime="20201115 22:03:19.026"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.722" endtime="20201115 22:03:19.026"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.720" endtime="20201115 22:03:19.027"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:19.031" level="INFO">${RESULT} = [{'time': 0.019978542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3833999999997293e-05, 'source_diff': 1.3833999999997293e-05}, {'time': 0.020159958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:19.028" endtime="20201115 22:03:19.031"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:19.045" level="INFO">${OVERHEAD} = {'diff': [1.3833999999997293e-05, 1.379099999999911e-05, 1.3820000000001192e-05, 1.3820000000001192e-05, 1.381899999999825e-05, 1.3792000000002053e-05, 1.379099999999911e-05, 1.3736999999999777e-05, 1...</msg>
<status status="PASS" starttime="20201115 22:03:19.032" endtime="20201115 22:03:19.045"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:19.049" level="INFO">NAME: 00-overhead-14-set</msg>
<status status="PASS" starttime="20201115 22:03:19.048" endtime="20201115 22:03:19.049"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:19.051" level="INFO">VALUE: [1.3833999999997293e-05, 1.379099999999911e-05, 1.3820000000001192e-05, 1.3820000000001192e-05, 1.381899999999825e-05, 1.3792000000002053e-05, 1.379099999999911e-05, 1.3736999999999777e-05, 1.3791999999998583e-05, 1.3805000000002149e-05, 1.380499999999868e-05, 1.3736000000000304e-05, 1.3791999999998583e-05, 1.3763999999999443e-05, 1.3819000000001719e-05, 1.3820000000001192e-05, 1.380499999999868e-05, 1.3723000000000207e-05, 1.3805999999998153e-05, 1.381899999999825e-05, 1.3791999999998583e-05, 1.3833000000001289e-05, 1.3806000000001623e-05, 1.380499999999868e-05, 1.3805999999998153e-05, 1.3749999999999873e-05, 1.3834000000000762e-05, 1.3777999999999013e-05, 1.3861000000000429e-05, 1.3791999999998583e-05, 1.3806000000001623e-05, 1.3749999999999873e-05, 1.3819999999997723e-05, 1.381899999999825e-05, 1.379099999999911e-05, 1.380499999999868e-05, 1.3791000000002579e-05, 1.3791999999998583e-05, 1.3777999999999013e-05, 1.3806000000001623e-05, 1.3777999999999013e-05, 1.379099999999911e-05, 1.3834000000000762e-05, 1.3792000000002053e-05, 1.3805999999998153e-05, 1.3791999999998583e-05, 1.380499999999868e-05, 1.3791999999998583e-05, 1.381899999999825e-05, 1.3791999999998583e-05]</msg>
<status status="PASS" starttime="20201115 22:03:19.050" endtime="20201115 22:03:19.052"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.046" endtime="20201115 22:03:19.052"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:19.055" endtime="20201115 22:03:19.056"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:19.058" endtime="20201115 22:03:19.078"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.057" endtime="20201115 22:03:19.078"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.053" endtime="20201115 22:03:19.079"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.687" endtime="20201115 22:03:19.079"></status>
</kw>
<msg timestamp="20201115 22:03:19.079" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:19.088" endtime="20201115 22:03:19.106"></status>
</kw>
<msg timestamp="20201115 22:03:19.107" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:19.086" endtime="20201115 22:03:19.107"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:19.109" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:19.108" endtime="20201115 22:03:19.109"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:19.110" endtime="20201115 22:03:19.112"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.084" endtime="20201115 22:03:19.112"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.082" endtime="20201115 22:03:19.113"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:19.119" endtime="20201115 22:03:19.404"></status>
</kw>
<msg timestamp="20201115 22:03:19.417" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019928625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019942417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:19.117" endtime="20201115 22:03:19.417"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:19.425" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019928625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019942417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:19.418" endtime="20201115 22:03:19.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:19.426" endtime="20201115 22:03:19.427"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.115" endtime="20201115 22:03:19.428"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.113" endtime="20201115 22:03:19.428"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:19.432" level="INFO">${RESULT} = [{'time': 0.019942417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3792000000002053e-05, 'source_diff': 1.3792000000002053e-05}, {'time': 0.020125778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:19.429" endtime="20201115 22:03:19.433"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:19.446" level="INFO">${OVERHEAD} = {'diff': [1.3792000000002053e-05, 1.3834000000000762e-05, 1.380499999999868e-05, 1.3806000000001623e-05, 1.3792000000002053e-05, 1.3805000000002149e-05, 1.3860999999996959e-05, 1.3721999999997264e-05,...</msg>
<status status="PASS" starttime="20201115 22:03:19.433" endtime="20201115 22:03:19.446"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:19.450" level="INFO">NAME: 00-overhead-14-set</msg>
<status status="PASS" starttime="20201115 22:03:19.449" endtime="20201115 22:03:19.451"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:19.453" level="INFO">VALUE: [1.3792000000002053e-05, 1.3834000000000762e-05, 1.380499999999868e-05, 1.3806000000001623e-05, 1.3792000000002053e-05, 1.3805000000002149e-05, 1.3860999999996959e-05, 1.3721999999997264e-05, 1.383299999999782e-05, 1.3791000000002579e-05, 1.3792000000002053e-05, 1.3791999999998583e-05, 1.381899999999825e-05, 1.3806000000001623e-05, 1.3805000000002149e-05, 1.379099999999911e-05, 1.3778000000002483e-05, 1.380499999999868e-05, 1.380499999999868e-05, 1.3791000000002579e-05, 1.3820000000001192e-05, 1.3791999999998583e-05, 1.3834000000000762e-05, 1.3707999999997694e-05, 1.3791000000002579e-05, 1.3805999999998153e-05, 1.3791000000002579e-05, 1.3805999999998153e-05, 1.3791999999998583e-05, 1.3792000000002053e-05, 1.3805000000002149e-05, 1.3806000000001623e-05, 1.3820000000001192e-05, 1.3791999999998583e-05, 1.3722000000000734e-05, 1.3806000000001623e-05, 1.380499999999868e-05, 1.3749999999999873e-05, 1.3791999999998583e-05, 1.380499999999868e-05, 1.3736000000000304e-05, 1.3806000000001623e-05, 1.3805999999998153e-05, 1.377699999999954e-05, 1.379099999999911e-05, 1.377699999999954e-05, 1.377699999999954e-05, 1.380499999999868e-05, 1.3777999999999013e-05, 1.3791999999998583e-05]</msg>
<status status="PASS" starttime="20201115 22:03:19.451" endtime="20201115 22:03:19.453"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.447" endtime="20201115 22:03:19.454"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:19.456" endtime="20201115 22:03:19.457"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:19.459" endtime="20201115 22:03:19.479"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.458" endtime="20201115 22:03:19.479"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.454" endtime="20201115 22:03:19.480"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.080" endtime="20201115 22:03:19.480"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.496" endtime="20201115 22:03:19.480"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.495" endtime="20201115 22:03:19.481"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:19.483" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:19.492" endtime="20201115 22:03:19.512"></status>
</kw>
<msg timestamp="20201115 22:03:19.512" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:19.490" endtime="20201115 22:03:19.512"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:19.515" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:19.513" endtime="20201115 22:03:19.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:19.516" endtime="20201115 22:03:19.518"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.488" endtime="20201115 22:03:19.518"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.486" endtime="20201115 22:03:19.519"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:19.525" endtime="20201115 22:03:19.812"></status>
</kw>
<msg timestamp="20201115 22:03:19.815" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022423806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022438375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:19.524" endtime="20201115 22:03:19.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:19.823" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022423806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022438375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:19.816" endtime="20201115 22:03:19.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:19.824" endtime="20201115 22:03:19.826"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.521" endtime="20201115 22:03:19.826"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.519" endtime="20201115 22:03:19.827"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:19.831" level="INFO">${RESULT} = [{'time': 0.022438375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4568999999999e-05, 'source_diff': 1.4568999999999e-05}, {'time': 0.022635292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1...</msg>
<status status="PASS" starttime="20201115 22:03:19.828" endtime="20201115 22:03:19.831"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:19.844" level="INFO">${OVERHEAD} = {'diff': [1.4568999999999e-05, 1.4584000000001512e-05, 1.4625000000000749e-05, 1.4569999999998473e-05, 1.4555999999998903e-05, 1.4569999999998473e-05, 1.454099999999986e-05, 1.4568999999999e-05, 1.456...</msg>
<status status="PASS" starttime="20201115 22:03:19.832" endtime="20201115 22:03:19.845"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:19.849" level="INFO">NAME: 00-overhead-15-set</msg>
<status status="PASS" starttime="20201115 22:03:19.848" endtime="20201115 22:03:19.849"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:19.851" level="INFO">VALUE: [1.4568999999999e-05, 1.4584000000001512e-05, 1.4625000000000749e-05, 1.4569999999998473e-05, 1.4555999999998903e-05, 1.4569999999998473e-05, 1.454099999999986e-05, 1.4568999999999e-05, 1.4569000000002469e-05, 1.4555000000002899e-05, 1.4569000000002469e-05, 1.454099999999986e-05, 1.455499999999943e-05, 1.4555999999998903e-05, 1.4542000000002803e-05, 1.4568999999999e-05, 1.4500000000000624e-05, 1.4556000000002373e-05, 1.455499999999943e-05, 1.4569999999998473e-05, 1.4555999999998903e-05, 1.4555000000002899e-05, 1.4568999999999e-05, 1.4625000000000749e-05, 1.4569000000002469e-05, 1.4541999999999333e-05, 1.4485999999997584e-05, 1.4556000000002373e-05, 1.4556000000002373e-05, 1.4569999999998473e-05, 1.455499999999943e-05, 1.459699999999814e-05, 1.4583000000002039e-05, 1.4541999999999333e-05, 1.4555000000002899e-05, 1.4568999999999e-05, 1.4569000000002469e-05, 1.455499999999943e-05, 1.4625000000000749e-05, 1.4568999999999e-05, 1.4555999999998903e-05, 1.4500000000000624e-05, 1.4500000000000624e-05, 1.4569000000002469e-05, 1.4541999999999333e-05, 1.4583999999998043e-05, 1.458299999999857e-05, 1.4555999999998903e-05, 1.458299999999857e-05, 1.4569000000005938e-05]</msg>
<status status="PASS" starttime="20201115 22:03:19.850" endtime="20201115 22:03:19.852"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.845" endtime="20201115 22:03:19.852"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:19.854" endtime="20201115 22:03:19.856"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:19.858" endtime="20201115 22:03:19.877"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.856" endtime="20201115 22:03:19.878"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.853" endtime="20201115 22:03:19.878"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.483" endtime="20201115 22:03:19.879"></status>
</kw>
<msg timestamp="20201115 22:03:19.879" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:19.888" endtime="20201115 22:03:19.908"></status>
</kw>
<msg timestamp="20201115 22:03:19.909" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:19.886" endtime="20201115 22:03:19.909"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:19.912" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:19.910" endtime="20201115 22:03:19.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:19.913" endtime="20201115 22:03:19.914"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.883" endtime="20201115 22:03:19.915"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.881" endtime="20201115 22:03:19.915"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:19.922" endtime="20201115 22:03:20.207"></status>
</kw>
<msg timestamp="20201115 22:03:20.210" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019911681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01992625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:03:19.920" endtime="20201115 22:03:20.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:20.218" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019911681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01992625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:03:20.211" endtime="20201115 22:03:20.218"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:20.219" endtime="20201115 22:03:20.221"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.918" endtime="20201115 22:03:20.221"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.916" endtime="20201115 22:03:20.222"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:20.226" level="INFO">${RESULT} = [{'time': 0.01992625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4568999999999e-05, 'source_diff': 1.4568999999999e-05}, {'time': 0.020124417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1....</msg>
<status status="PASS" starttime="20201115 22:03:20.223" endtime="20201115 22:03:20.226"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:20.239" level="INFO">${OVERHEAD} = {'diff': [1.4568999999999e-05, 1.4555999999998903e-05, 1.4570000000001943e-05, 1.4514000000000193e-05, 1.4514000000000193e-05, 1.4570000000001943e-05, 1.4625000000000749e-05, 1.461099999999771e-05, 1....</msg>
<status status="PASS" starttime="20201115 22:03:20.227" endtime="20201115 22:03:20.240"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:20.244" level="INFO">NAME: 00-overhead-15-set</msg>
<status status="PASS" starttime="20201115 22:03:20.243" endtime="20201115 22:03:20.244"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:20.246" level="INFO">VALUE: [1.4568999999999e-05, 1.4555999999998903e-05, 1.4570000000001943e-05, 1.4514000000000193e-05, 1.4514000000000193e-05, 1.4570000000001943e-05, 1.4625000000000749e-05, 1.461099999999771e-05, 1.4556000000002373e-05, 1.459699999999814e-05, 1.4583999999998043e-05, 1.455499999999943e-05, 1.4541999999999333e-05, 1.4624999999997279e-05, 1.4541999999999333e-05, 1.458299999999857e-05, 1.455499999999943e-05, 1.4568999999999e-05, 1.4556000000002373e-05, 1.4611000000001179e-05, 1.4568999999999e-05, 1.4555999999998903e-05, 1.4555999999998903e-05, 1.455499999999943e-05, 1.4514000000000193e-05, 1.4528000000003233e-05, 1.4569999999998473e-05, 1.455499999999943e-05, 1.455499999999943e-05, 1.4569999999998473e-05, 1.4625000000000749e-05, 1.4541999999999333e-05, 1.4569000000002469e-05, 1.4541999999999333e-05, 1.4556000000002373e-05, 1.4541999999999333e-05, 1.4514000000000193e-05, 1.458299999999857e-05, 1.4555999999998903e-05, 1.455499999999943e-05, 1.4555999999998903e-05, 1.4556000000002373e-05, 1.4555999999998903e-05, 1.455499999999943e-05, 1.4541999999999333e-05, 1.4583999999998043e-05, 1.454099999999986e-05, 1.4527999999999763e-05, 1.4583000000002039e-05, 1.4569999999998473e-05]</msg>
<status status="PASS" starttime="20201115 22:03:20.245" endtime="20201115 22:03:20.247"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.240" endtime="20201115 22:03:20.247"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:20.250" endtime="20201115 22:03:20.251"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:20.253" endtime="20201115 22:03:20.272"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.251" endtime="20201115 22:03:20.273"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.248" endtime="20201115 22:03:20.273"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.879" endtime="20201115 22:03:20.274"></status>
</kw>
<msg timestamp="20201115 22:03:20.274" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:20.283" endtime="20201115 22:03:20.302"></status>
</kw>
<msg timestamp="20201115 22:03:20.302" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:20.282" endtime="20201115 22:03:20.303"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:20.305" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:20.303" endtime="20201115 22:03:20.305"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:20.306" endtime="20201115 22:03:20.307"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.279" endtime="20201115 22:03:20.308"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.277" endtime="20201115 22:03:20.308"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:20.315" endtime="20201115 22:03:20.603"></status>
</kw>
<msg timestamp="20201115 22:03:20.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020443694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020458278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:20.313" endtime="20201115 22:03:20.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:20.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020443694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020458278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:20.607" endtime="20201115 22:03:20.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:20.615" endtime="20201115 22:03:20.617"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.311" endtime="20201115 22:03:20.617"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.309" endtime="20201115 22:03:20.618"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:20.622" level="INFO">${RESULT} = [{'time': 0.020458278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4584000000001512e-05, 'source_diff': 1.4584000000001512e-05}, {'time': 0.020655417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:20.618" endtime="20201115 22:03:20.622"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:20.635" level="INFO">${OVERHEAD} = {'diff': [1.4584000000001512e-05, 1.4555999999998903e-05, 1.455499999999943e-05, 1.454099999999986e-05, 1.4568999999999e-05, 1.4569999999998473e-05, 1.4556000000002373e-05, 1.4597999999997613e-05, 1.4...</msg>
<status status="PASS" starttime="20201115 22:03:20.623" endtime="20201115 22:03:20.636"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:20.640" level="INFO">NAME: 00-overhead-15-set</msg>
<status status="PASS" starttime="20201115 22:03:20.639" endtime="20201115 22:03:20.640"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:20.642" level="INFO">VALUE: [1.4584000000001512e-05, 1.4555999999998903e-05, 1.455499999999943e-05, 1.454099999999986e-05, 1.4568999999999e-05, 1.4569999999998473e-05, 1.4556000000002373e-05, 1.4597999999997613e-05, 1.4569999999998473e-05, 1.455499999999943e-05, 1.4555999999998903e-05, 1.4555999999998903e-05, 1.4569999999998473e-05, 1.4541999999999333e-05, 1.455499999999943e-05, 1.4598000000001082e-05, 1.4625000000000749e-05, 1.4500000000000624e-05, 1.4556000000002373e-05, 1.454099999999986e-05, 1.4556000000002373e-05, 1.4569000000002469e-05, 1.455499999999943e-05, 1.4569000000002469e-05, 1.4542000000002803e-05, 1.4541999999999333e-05, 1.4555000000002899e-05, 1.4556000000002373e-05, 1.455499999999943e-05, 1.4514000000000193e-05, 1.4569000000002469e-05, 1.4570000000001943e-05, 1.4555999999998903e-05, 1.4500000000000624e-05, 1.4555999999998903e-05, 1.455499999999943e-05, 1.4570000000001943e-05, 1.4569000000002469e-05, 1.455499999999943e-05, 1.4569999999998473e-05, 1.4555000000002899e-05, 1.4556000000002373e-05, 1.4555000000002899e-05, 1.4569999999998473e-05, 1.4568999999999e-05, 1.4555999999998903e-05, 1.458299999999857e-05, 1.4583999999998043e-05, 1.4555999999998903e-05, 1.454099999999986e-05]</msg>
<status status="PASS" starttime="20201115 22:03:20.641" endtime="20201115 22:03:20.643"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.636" endtime="20201115 22:03:20.643"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:20.645" endtime="20201115 22:03:20.647"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:20.649" endtime="20201115 22:03:20.669"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.647" endtime="20201115 22:03:20.669"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.644" endtime="20201115 22:03:20.670"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.275" endtime="20201115 22:03:20.670"></status>
</kw>
<msg timestamp="20201115 22:03:20.670" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:20.679" endtime="20201115 22:03:20.699"></status>
</kw>
<msg timestamp="20201115 22:03:20.699" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:20.678" endtime="20201115 22:03:20.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:20.702" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:20.700" endtime="20201115 22:03:20.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:20.703" endtime="20201115 22:03:20.704"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.675" endtime="20201115 22:03:20.705"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.673" endtime="20201115 22:03:20.705"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:20.712" endtime="20201115 22:03:20.998"></status>
</kw>
<msg timestamp="20201115 22:03:21.001" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019933069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019947625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:20.710" endtime="20201115 22:03:21.001"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:21.009" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019933069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019947625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:21.002" endtime="20201115 22:03:21.010"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:21.010" endtime="20201115 22:03:21.012"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.708" endtime="20201115 22:03:21.013"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.706" endtime="20201115 22:03:21.013"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:21.017" level="INFO">${RESULT} = [{'time': 0.019947625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4555999999998903e-05, 'source_diff': 1.4555999999998903e-05}, {'time': 0.020146444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:21.014" endtime="20201115 22:03:21.017"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:21.031" level="INFO">${OVERHEAD} = {'diff': [1.4555999999998903e-05, 1.455499999999943e-05, 1.4611000000001179e-05, 1.4568999999999e-05, 1.4583000000002039e-05, 1.4541999999999333e-05, 1.4541999999999333e-05, 1.4569999999998473e-05, 1....</msg>
<status status="PASS" starttime="20201115 22:03:21.018" endtime="20201115 22:03:21.031"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:21.035" level="INFO">NAME: 00-overhead-15-set</msg>
<status status="PASS" starttime="20201115 22:03:21.034" endtime="20201115 22:03:21.036"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:21.038" level="INFO">VALUE: [1.4555999999998903e-05, 1.455499999999943e-05, 1.4611000000001179e-05, 1.4568999999999e-05, 1.4583000000002039e-05, 1.4541999999999333e-05, 1.4541999999999333e-05, 1.4569999999998473e-05, 1.4555999999998903e-05, 1.4500000000000624e-05, 1.455499999999943e-05, 1.455499999999943e-05, 1.454099999999986e-05, 1.4555999999998903e-05, 1.4583000000002039e-05, 1.4568999999999e-05, 1.455499999999943e-05, 1.4570000000001943e-05, 1.4500000000000624e-05, 1.4611000000001179e-05, 1.4556000000002373e-05, 1.4569000000002469e-05, 1.4569000000002469e-05, 1.4568999999999e-05, 1.4584000000001512e-05, 1.4556000000002373e-05, 1.4569000000002469e-05, 1.454099999999986e-05, 1.4555000000002899e-05, 1.455499999999943e-05, 1.454099999999986e-05, 1.4541999999999333e-05, 1.454099999999986e-05, 1.454099999999986e-05, 1.4555999999998903e-05, 1.4625000000000749e-05, 1.4527999999999763e-05, 1.455499999999943e-05, 1.4555999999998903e-05, 1.4569999999998473e-05, 1.4555999999998903e-05, 1.4500000000000624e-05, 1.4555000000002899e-05, 1.4541999999999333e-05, 1.4569999999998473e-05, 1.4569000000002469e-05, 1.455499999999943e-05, 1.4569999999998473e-05, 1.4568999999999e-05, 1.4569999999998473e-05]</msg>
<status status="PASS" starttime="20201115 22:03:21.036" endtime="20201115 22:03:21.039"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.032" endtime="20201115 22:03:21.039"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:21.041" endtime="20201115 22:03:21.043"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:21.045" endtime="20201115 22:03:21.064"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.043" endtime="20201115 22:03:21.065"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.040" endtime="20201115 22:03:21.065"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.671" endtime="20201115 22:03:21.066"></status>
</kw>
<msg timestamp="20201115 22:03:21.066" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:21.075" endtime="20201115 22:03:21.096"></status>
</kw>
<msg timestamp="20201115 22:03:21.096" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:21.073" endtime="20201115 22:03:21.096"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:21.098" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:21.097" endtime="20201115 22:03:21.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:21.099" endtime="20201115 22:03:21.101"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.071" endtime="20201115 22:03:21.102"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.068" endtime="20201115 22:03:21.102"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:21.109" endtime="20201115 22:03:21.396"></status>
</kw>
<msg timestamp="20201115 22:03:21.399" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020842306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020856861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:21.107" endtime="20201115 22:03:21.400"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:21.407" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020842306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020856861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:21.400" endtime="20201115 22:03:21.408"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:21.408" endtime="20201115 22:03:21.410"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.104" endtime="20201115 22:03:21.411"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.103" endtime="20201115 22:03:21.411"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:21.415" level="INFO">${RESULT} = [{'time': 0.020856861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.455499999999943e-05, 'source_diff': 1.455499999999943e-05}, {'time': 0.021055472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:21.412" endtime="20201115 22:03:21.415"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:21.429" level="INFO">${OVERHEAD} = {'diff': [1.455499999999943e-05, 1.455499999999943e-05, 1.4568999999999e-05, 1.4541999999999333e-05, 1.458299999999857e-05, 1.455499999999943e-05, 1.4555999999998903e-05, 1.455499999999943e-05, 1.4569...</msg>
<status status="PASS" starttime="20201115 22:03:21.416" endtime="20201115 22:03:21.429"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:21.433" level="INFO">NAME: 00-overhead-15-set</msg>
<status status="PASS" starttime="20201115 22:03:21.432" endtime="20201115 22:03:21.433"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:21.436" level="INFO">VALUE: [1.455499999999943e-05, 1.455499999999943e-05, 1.4568999999999e-05, 1.4541999999999333e-05, 1.458299999999857e-05, 1.455499999999943e-05, 1.4555999999998903e-05, 1.455499999999943e-05, 1.4569999999998473e-05, 1.455499999999943e-05, 1.4569999999998473e-05, 1.4611000000001179e-05, 1.4555999999998903e-05, 1.4514000000000193e-05, 1.4568999999999e-05, 1.4624999999997279e-05, 1.454099999999986e-05, 1.4556000000002373e-05, 1.4541999999999333e-05, 1.4569000000002469e-05, 1.4555999999998903e-05, 1.4514000000000193e-05, 1.4584000000001512e-05, 1.4612000000000652e-05, 1.4556000000002373e-05, 1.4555999999998903e-05, 1.4555999999998903e-05, 1.4639000000000318e-05, 1.452700000000029e-05, 1.4556000000002373e-05, 1.4541999999999333e-05, 1.4570000000001943e-05, 1.4555000000002899e-05, 1.4555999999998903e-05, 1.4570000000001943e-05, 1.4569000000002469e-05, 1.4569000000002469e-05, 1.4568999999999e-05, 1.455499999999943e-05, 1.4639000000000318e-05, 1.4527999999999763e-05, 1.454099999999986e-05, 1.4611999999997183e-05, 1.4556000000002373e-05, 1.4555000000002899e-05, 1.4556000000002373e-05, 1.4568999999999e-05, 1.4568999999999e-05, 1.458299999999857e-05, 1.4555999999998903e-05]</msg>
<status status="PASS" starttime="20201115 22:03:21.434" endtime="20201115 22:03:21.436"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.430" endtime="20201115 22:03:21.437"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:21.439" endtime="20201115 22:03:21.440"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:21.443" endtime="20201115 22:03:21.462"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.441" endtime="20201115 22:03:21.463"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.438" endtime="20201115 22:03:21.463"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.066" endtime="20201115 22:03:21.463"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.482" endtime="20201115 22:03:21.464"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.481" endtime="20201115 22:03:21.464"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:21.466" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:21.475" endtime="20201115 22:03:21.494"></status>
</kw>
<msg timestamp="20201115 22:03:21.495" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:21.473" endtime="20201115 22:03:21.495"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:21.497" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:21.496" endtime="20201115 22:03:21.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:21.498" endtime="20201115 22:03:21.500"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.471" endtime="20201115 22:03:21.500"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.468" endtime="20201115 22:03:21.501"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:21.507" endtime="20201115 22:03:21.794"></status>
</kw>
<msg timestamp="20201115 22:03:21.797" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022428042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022443361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:21.505" endtime="20201115 22:03:21.797"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:21.805" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022428042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022443361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:21.798" endtime="20201115 22:03:21.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:21.806" endtime="20201115 22:03:21.808"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.503" endtime="20201115 22:03:21.808"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.501" endtime="20201115 22:03:21.809"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:21.813" level="INFO">${RESULT} = [{'time': 0.022443361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.531899999999975e-05, 'source_diff': 1.531899999999975e-05}, {'time': 0.022656167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:21.809" endtime="20201115 22:03:21.813"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:21.826" level="INFO">${OVERHEAD} = {'diff': [1.531899999999975e-05, 1.5334000000002262e-05, 1.530500000000018e-05, 1.5319999999999223e-05, 1.531899999999975e-05, 1.5348000000001832e-05, 1.530500000000018e-05, 1.530500000000018e-05, 1.5...</msg>
<status status="PASS" starttime="20201115 22:03:21.814" endtime="20201115 22:03:21.826"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:21.831" level="INFO">NAME: 00-overhead-16-set</msg>
<status status="PASS" starttime="20201115 22:03:21.830" endtime="20201115 22:03:21.831"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:21.834" level="INFO">VALUE: [1.531899999999975e-05, 1.5334000000002262e-05, 1.530500000000018e-05, 1.5319999999999223e-05, 1.531899999999975e-05, 1.5348000000001832e-05, 1.530500000000018e-05, 1.530500000000018e-05, 1.533299999999932e-05, 1.5320000000002693e-05, 1.533299999999932e-05, 1.533300000000279e-05, 1.537499999999803e-05, 1.533299999999932e-05, 1.530500000000018e-05, 1.533299999999932e-05, 1.533299999999932e-05, 1.533300000000279e-05, 1.5320000000002693e-05, 1.531899999999975e-05, 1.531899999999975e-05, 1.533300000000279e-05, 1.5333999999998793e-05, 1.5250000000001374e-05, 1.531899999999975e-05, 1.537499999999803e-05, 1.5319999999999223e-05, 1.5320000000002693e-05, 1.5319999999999223e-05, 1.533299999999932e-05, 1.5319999999999223e-05, 1.531900000000322e-05, 1.533299999999932e-05, 1.5305999999999653e-05, 1.5305999999999653e-05, 1.530500000000018e-05, 1.5333999999998793e-05, 1.531899999999975e-05, 1.5305999999999653e-05, 1.533299999999932e-05, 1.5264000000000943e-05, 1.5306000000003123e-05, 1.5305999999999653e-05, 1.530500000000018e-05, 1.5250000000001374e-05, 1.5319999999999223e-05, 1.531899999999975e-05, 1.5334000000005732e-05, 1.531899999999975e-05, 1.5292000000000083e-05]</msg>
<status status="PASS" starttime="20201115 22:03:21.832" endtime="20201115 22:03:21.834"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.827" endtime="20201115 22:03:21.834"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:21.837" endtime="20201115 22:03:21.838"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:21.840" endtime="20201115 22:03:21.860"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.839" endtime="20201115 22:03:21.860"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.835" endtime="20201115 22:03:21.861"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.466" endtime="20201115 22:03:21.861"></status>
</kw>
<msg timestamp="20201115 22:03:21.861" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:21.870" endtime="20201115 22:03:21.891"></status>
</kw>
<msg timestamp="20201115 22:03:21.892" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:21.868" endtime="20201115 22:03:21.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:21.894" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:21.893" endtime="20201115 22:03:21.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:21.895" endtime="20201115 22:03:21.897"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.866" endtime="20201115 22:03:21.897"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.864" endtime="20201115 22:03:21.898"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:21.904" endtime="20201115 22:03:22.190"></status>
</kw>
<msg timestamp="20201115 22:03:22.193" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019866208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019881542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:21.902" endtime="20201115 22:03:22.194"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:22.201" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019866208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019881542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:22.194" endtime="20201115 22:03:22.202"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:22.202" endtime="20201115 22:03:22.204"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.900" endtime="20201115 22:03:22.205"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.898" endtime="20201115 22:03:22.205"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:22.209" level="INFO">${RESULT} = [{'time': 0.019881542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5333999999998793e-05, 'source_diff': 1.5333999999998793e-05}, {'time': 0.020092597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:22.206" endtime="20201115 22:03:22.209"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:22.223" level="INFO">${OVERHEAD} = {'diff': [1.5333999999998793e-05, 1.531899999999975e-05, 1.531899999999975e-05, 1.5305999999999653e-05, 1.5292000000000083e-05, 1.5320000000002693e-05, 1.533299999999932e-05, 1.534699999999889e-05, 1....</msg>
<status status="PASS" starttime="20201115 22:03:22.210" endtime="20201115 22:03:22.223"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:22.228" level="INFO">NAME: 00-overhead-16-set</msg>
<status status="PASS" starttime="20201115 22:03:22.227" endtime="20201115 22:03:22.228"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:22.230" level="INFO">VALUE: [1.5333999999998793e-05, 1.531899999999975e-05, 1.531899999999975e-05, 1.5305999999999653e-05, 1.5292000000000083e-05, 1.5320000000002693e-05, 1.533299999999932e-05, 1.534699999999889e-05, 1.530500000000018e-05, 1.534699999999889e-05, 1.5278000000000513e-05, 1.5319999999999223e-05, 1.5319999999999223e-05, 1.530500000000018e-05, 1.5250000000001374e-05, 1.5319999999999223e-05, 1.531899999999975e-05, 1.531899999999975e-05, 1.5319999999999223e-05, 1.531899999999975e-05, 1.5305999999999653e-05, 1.5333999999998793e-05, 1.531899999999975e-05, 1.531899999999975e-05, 1.534699999999889e-05, 1.5305999999999653e-05, 1.5319999999999223e-05, 1.534699999999889e-05, 1.531899999999975e-05, 1.533300000000279e-05, 1.531899999999975e-05, 1.5333999999998793e-05, 1.533300000000279e-05, 1.531899999999975e-05, 1.5306000000003123e-05, 1.531899999999975e-05, 1.5305999999999653e-05, 1.5319999999999223e-05, 1.533299999999932e-05, 1.531900000000322e-05, 1.533299999999932e-05, 1.536099999999846e-05, 1.531899999999975e-05, 1.538900000000107e-05, 1.5319999999999223e-05, 1.5291999999996614e-05, 1.531899999999975e-05, 1.531899999999975e-05, 1.531899999999975e-05, 1.540300000000064e-05]</msg>
<status status="PASS" starttime="20201115 22:03:22.229" endtime="20201115 22:03:22.231"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.224" endtime="20201115 22:03:22.231"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:22.233" endtime="20201115 22:03:22.235"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:22.237" endtime="20201115 22:03:22.256"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.235" endtime="20201115 22:03:22.257"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.232" endtime="20201115 22:03:22.257"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.862" endtime="20201115 22:03:22.258"></status>
</kw>
<msg timestamp="20201115 22:03:22.258" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:22.267" endtime="20201115 22:03:22.288"></status>
</kw>
<msg timestamp="20201115 22:03:22.288" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:22.265" endtime="20201115 22:03:22.289"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:22.291" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:22.290" endtime="20201115 22:03:22.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:22.292" endtime="20201115 22:03:22.294"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.262" endtime="20201115 22:03:22.294"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.260" endtime="20201115 22:03:22.294"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:22.301" endtime="20201115 22:03:22.587"></status>
</kw>
<msg timestamp="20201115 22:03:22.590" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019942597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019957917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:22.299" endtime="20201115 22:03:22.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:22.598" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019942597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019957917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:22.591" endtime="20201115 22:03:22.598"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:22.599" endtime="20201115 22:03:22.601"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.297" endtime="20201115 22:03:22.601"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.295" endtime="20201115 22:03:22.602"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:22.606" level="INFO">${RESULT} = [{'time': 0.019957917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5319999999999223e-05, 'source_diff': 1.5319999999999223e-05}, {'time': 0.020168389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:22.602" endtime="20201115 22:03:22.606"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:22.620" level="INFO">${OVERHEAD} = {'diff': [1.5319999999999223e-05, 1.53889999999976e-05, 1.5305999999999653e-05, 1.534699999999889e-05, 1.533299999999932e-05, 1.530500000000018e-05, 1.531899999999975e-05, 1.5305999999999653e-05, 1.53...</msg>
<status status="PASS" starttime="20201115 22:03:22.607" endtime="20201115 22:03:22.620"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:22.624" level="INFO">NAME: 00-overhead-16-set</msg>
<status status="PASS" starttime="20201115 22:03:22.623" endtime="20201115 22:03:22.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:22.627" level="INFO">VALUE: [1.5319999999999223e-05, 1.53889999999976e-05, 1.5305999999999653e-05, 1.534699999999889e-05, 1.533299999999932e-05, 1.530500000000018e-05, 1.531899999999975e-05, 1.5305999999999653e-05, 1.531899999999975e-05, 1.5319999999999223e-05, 1.530500000000018e-05, 1.534700000000236e-05, 1.5319999999999223e-05, 1.5306000000003123e-05, 1.533299999999932e-05, 1.536100000000193e-05, 1.5305999999999653e-05, 1.5250000000001374e-05, 1.531899999999975e-05, 1.5320000000002693e-05, 1.5319999999999223e-05, 1.533300000000279e-05, 1.5347999999998363e-05, 1.533300000000279e-05, 1.531899999999975e-05, 1.5319999999999223e-05, 1.5305999999999653e-05, 1.533299999999932e-05, 1.5319999999999223e-05, 1.534700000000236e-05, 1.5305999999999653e-05, 1.5333999999998793e-05, 1.5305999999999653e-05, 1.5319999999999223e-05, 1.531899999999975e-05, 1.531899999999975e-05, 1.533299999999932e-05, 1.5334000000002262e-05, 1.5333999999998793e-05, 1.530500000000018e-05, 1.5333999999998793e-05, 1.527700000000104e-05, 1.5333999999998793e-05, 1.534700000000236e-05, 1.533300000000279e-05, 1.5334000000002262e-05, 1.537499999999803e-05, 1.530500000000018e-05, 1.540299999999717e-05, 1.531899999999975e-05]</msg>
<status status="PASS" starttime="20201115 22:03:22.625" endtime="20201115 22:03:22.627"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.621" endtime="20201115 22:03:22.628"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:22.630" endtime="20201115 22:03:22.631"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:22.633" endtime="20201115 22:03:22.653"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.632" endtime="20201115 22:03:22.653"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.628" endtime="20201115 22:03:22.654"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.258" endtime="20201115 22:03:22.654"></status>
</kw>
<msg timestamp="20201115 22:03:22.654" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:22.663" endtime="20201115 22:03:22.682"></status>
</kw>
<msg timestamp="20201115 22:03:22.682" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:22.661" endtime="20201115 22:03:22.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:22.684" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:22.683" endtime="20201115 22:03:22.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:22.686" endtime="20201115 22:03:22.687"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.659" endtime="20201115 22:03:22.688"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.657" endtime="20201115 22:03:22.688"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:22.695" endtime="20201115 22:03:22.982"></status>
</kw>
<msg timestamp="20201115 22:03:22.985" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019933236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019948528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:22.693" endtime="20201115 22:03:22.985"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:22.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019933236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019948528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:22.986" endtime="20201115 22:03:22.993"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:22.995" endtime="20201115 22:03:22.996"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.691" endtime="20201115 22:03:22.997"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.689" endtime="20201115 22:03:22.997"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:23.001" level="INFO">${RESULT} = [{'time': 0.019948528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5292000000000083e-05, 'source_diff': 1.5292000000000083e-05}, {'time': 0.020160222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:22.998" endtime="20201115 22:03:23.002"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:23.015" level="INFO">${OVERHEAD} = {'diff': [1.5292000000000083e-05, 1.530500000000018e-05, 1.533299999999932e-05, 1.5333999999998793e-05, 1.531899999999975e-05, 1.5333999999998793e-05, 1.531899999999975e-05, 1.529100000000061e-05, 1.5...</msg>
<status status="PASS" starttime="20201115 22:03:23.002" endtime="20201115 22:03:23.015"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:23.019" level="INFO">NAME: 00-overhead-16-set</msg>
<status status="PASS" starttime="20201115 22:03:23.018" endtime="20201115 22:03:23.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:23.022" level="INFO">VALUE: [1.5292000000000083e-05, 1.530500000000018e-05, 1.533299999999932e-05, 1.5333999999998793e-05, 1.531899999999975e-05, 1.5333999999998793e-05, 1.531899999999975e-05, 1.529100000000061e-05, 1.5278000000000513e-05, 1.534700000000236e-05, 1.5305999999999653e-05, 1.534700000000236e-05, 1.5320000000002693e-05, 1.5249999999997904e-05, 1.531899999999975e-05, 1.5319999999999223e-05, 1.536099999999846e-05, 1.5305999999999653e-05, 1.531899999999975e-05, 1.5333999999998793e-05, 1.531899999999975e-05, 1.5305999999999653e-05, 1.5319999999999223e-05, 1.5319999999999223e-05, 1.5320000000002693e-05, 1.53750000000015e-05, 1.5319999999999223e-05, 1.5333999999998793e-05, 1.533299999999932e-05, 1.5250000000001374e-05, 1.534699999999889e-05, 1.5334000000002262e-05, 1.533299999999932e-05, 1.530500000000018e-05, 1.5264000000000943e-05, 1.530499999999671e-05, 1.531900000000322e-05, 1.5305999999999653e-05, 1.530500000000018e-05, 1.533299999999932e-05, 1.5333999999998793e-05, 1.529100000000061e-05, 1.5319999999999223e-05, 1.5333999999998793e-05, 1.531899999999975e-05, 1.5333999999998793e-05, 1.5305999999999653e-05, 1.533299999999932e-05, 1.534699999999889e-05, 1.531899999999975e-05]</msg>
<status status="PASS" starttime="20201115 22:03:23.020" endtime="20201115 22:03:23.022"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.016" endtime="20201115 22:03:23.023"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:23.025" endtime="20201115 22:03:23.026"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:23.028" endtime="20201115 22:03:23.048"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.027" endtime="20201115 22:03:23.048"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.023" endtime="20201115 22:03:23.049"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.655" endtime="20201115 22:03:23.049"></status>
</kw>
<msg timestamp="20201115 22:03:23.049" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:23.058" endtime="20201115 22:03:23.079"></status>
</kw>
<msg timestamp="20201115 22:03:23.079" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:23.057" endtime="20201115 22:03:23.080"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:23.082" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:23.081" endtime="20201115 22:03:23.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:23.083" endtime="20201115 22:03:23.085"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.054" endtime="20201115 22:03:23.086"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.052" endtime="20201115 22:03:23.086"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:23.092" endtime="20201115 22:03:23.378"></status>
</kw>
<msg timestamp="20201115 22:03:23.381" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020790236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020805542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:23.091" endtime="20201115 22:03:23.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:23.390" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020790236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020805542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:23.383" endtime="20201115 22:03:23.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:23.391" endtime="20201115 22:03:23.392"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.088" endtime="20201115 22:03:23.393"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.087" endtime="20201115 22:03:23.393"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:23.398" level="INFO">${RESULT} = [{'time': 0.020805542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5305999999999653e-05, 'source_diff': 1.5305999999999653e-05}, {'time': 0.02101775, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 22:03:23.394" endtime="20201115 22:03:23.398"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:23.411" level="INFO">${OVERHEAD} = {'diff': [1.5305999999999653e-05, 1.533300000000279e-05, 1.533299999999932e-05, 1.536100000000193e-05, 1.533300000000279e-05, 1.533299999999932e-05, 1.5305999999999653e-05, 1.5264000000000943e-05, 1.5...</msg>
<status status="PASS" starttime="20201115 22:03:23.399" endtime="20201115 22:03:23.411"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:23.415" level="INFO">NAME: 00-overhead-16-set</msg>
<status status="PASS" starttime="20201115 22:03:23.414" endtime="20201115 22:03:23.416"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:23.418" level="INFO">VALUE: [1.5305999999999653e-05, 1.533300000000279e-05, 1.533299999999932e-05, 1.536100000000193e-05, 1.533300000000279e-05, 1.533299999999932e-05, 1.5305999999999653e-05, 1.5264000000000943e-05, 1.5320000000002693e-05, 1.531899999999975e-05, 1.534699999999889e-05, 1.533300000000279e-05, 1.5319999999999223e-05, 1.533300000000279e-05, 1.5333999999998793e-05, 1.531899999999975e-05, 1.537499999999803e-05, 1.531899999999975e-05, 1.5319999999999223e-05, 1.530500000000018e-05, 1.531899999999975e-05, 1.533299999999932e-05, 1.530499999999671e-05, 1.5334000000002262e-05, 1.5347999999998363e-05, 1.540300000000064e-05, 1.5319999999999223e-05, 1.5305999999999653e-05, 1.5347999999998363e-05, 1.5333999999998793e-05, 1.533299999999932e-05, 1.5305999999999653e-05, 1.531899999999975e-05, 1.533299999999932e-05, 1.533299999999932e-05, 1.536099999999846e-05, 1.5319999999999223e-05, 1.531899999999975e-05, 1.5319999999999223e-05, 1.5334000000002262e-05, 1.533300000000279e-05, 1.5320000000002693e-05, 1.5305999999999653e-05, 1.533299999999932e-05, 1.5319999999999223e-05, 1.533299999999932e-05, 1.534699999999889e-05, 1.530500000000018e-05, 1.5320000000002693e-05, 1.5333999999998793e-05]</msg>
<status status="PASS" starttime="20201115 22:03:23.417" endtime="20201115 22:03:23.418"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.412" endtime="20201115 22:03:23.419"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:23.421" endtime="20201115 22:03:23.422"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:23.424" endtime="20201115 22:03:23.444"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.423" endtime="20201115 22:03:23.445"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.419" endtime="20201115 22:03:23.445"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.050" endtime="20201115 22:03:23.445"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.465" endtime="20201115 22:03:23.446"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.464" endtime="20201115 22:03:23.446"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:23.448" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:23.457" endtime="20201115 22:03:23.477"></status>
</kw>
<msg timestamp="20201115 22:03:23.477" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:23.455" endtime="20201115 22:03:23.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:23.479" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:23.478" endtime="20201115 22:03:23.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:23.480" endtime="20201115 22:03:23.482"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.452" endtime="20201115 22:03:23.483"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.450" endtime="20201115 22:03:23.483"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:23.490" endtime="20201115 22:03:23.778"></status>
</kw>
<msg timestamp="20201115 22:03:23.781" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022227403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022243486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:23.488" endtime="20201115 22:03:23.781"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:23.789" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022227403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022243486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:23.782" endtime="20201115 22:03:23.789"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:23.790" endtime="20201115 22:03:23.792"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.486" endtime="20201115 22:03:23.792"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.484" endtime="20201115 22:03:23.793"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:23.797" level="INFO">${RESULT} = [{'time': 0.022243486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.608300000000007e-05, 'source_diff': 1.608300000000007e-05}, {'time': 0.022471486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:23.793" endtime="20201115 22:03:23.797"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:23.810" level="INFO">${OVERHEAD} = {'diff': [1.608300000000007e-05, 1.60690000000005e-05, 1.6055999999996934e-05, 1.60690000000005e-05, 1.608300000000007e-05, 1.608300000000007e-05, 1.609699999999964e-05, 1.608300000000007e-05, 1.60969...</msg>
<status status="PASS" starttime="20201115 22:03:23.798" endtime="20201115 22:03:23.811"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:23.815" level="INFO">NAME: 00-overhead-17-set</msg>
<status status="PASS" starttime="20201115 22:03:23.814" endtime="20201115 22:03:23.815"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:23.817" level="INFO">VALUE: [1.608300000000007e-05, 1.60690000000005e-05, 1.6055999999996934e-05, 1.60690000000005e-05, 1.608300000000007e-05, 1.608300000000007e-05, 1.609699999999964e-05, 1.608300000000007e-05, 1.609699999999964e-05, 1.6056000000000403e-05, 1.6165999999998015e-05, 1.60690000000005e-05, 1.608300000000007e-05, 1.608300000000007e-05, 1.609699999999964e-05, 1.608300000000007e-05, 1.6084000000003013e-05, 1.609700000000311e-05, 1.608300000000007e-05, 1.6013999999998224e-05, 1.605499999999746e-05, 1.609699999999964e-05, 1.6069999999999973e-05, 1.608300000000007e-05, 1.608300000000007e-05, 1.608300000000007e-05, 1.608300000000007e-05, 1.6069999999999973e-05, 1.6097999999999113e-05, 1.6083999999999543e-05, 1.60690000000005e-05, 1.611099999999921e-05, 1.611099999999921e-05, 1.608300000000007e-05, 1.6069999999999973e-05, 1.6069999999999973e-05, 1.606899999999703e-05, 1.608300000000007e-05, 1.6083999999999543e-05, 1.6069999999999973e-05, 1.6083999999999543e-05, 1.6000000000002124e-05, 1.608300000000007e-05, 1.608300000000007e-05, 1.608300000000007e-05, 1.608300000000007e-05, 1.6028000000001263e-05, 1.6083999999999543e-05, 1.609699999999964e-05, 1.605500000000093e-05]</msg>
<status status="PASS" starttime="20201115 22:03:23.816" endtime="20201115 22:03:23.818"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.811" endtime="20201115 22:03:23.818"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:23.820" endtime="20201115 22:03:23.822"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:23.824" endtime="20201115 22:03:23.843"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.822" endtime="20201115 22:03:23.844"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.819" endtime="20201115 22:03:23.844"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.448" endtime="20201115 22:03:23.844"></status>
</kw>
<msg timestamp="20201115 22:03:23.845" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:23.853" endtime="20201115 22:03:23.874"></status>
</kw>
<msg timestamp="20201115 22:03:23.874" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:23.852" endtime="20201115 22:03:23.874"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:23.877" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:23.875" endtime="20201115 22:03:23.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:23.878" endtime="20201115 22:03:23.880"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.849" endtime="20201115 22:03:23.880"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.847" endtime="20201115 22:03:23.881"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:23.887" endtime="20201115 22:03:24.171"></status>
</kw>
<msg timestamp="20201115 22:03:24.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020017556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020033653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:23.886" endtime="20201115 22:03:24.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:24.182" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020017556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020033653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:24.175" endtime="20201115 22:03:24.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:24.183" endtime="20201115 22:03:24.185"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.883" endtime="20201115 22:03:24.185"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.881" endtime="20201115 22:03:24.186"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:24.190" level="INFO">${RESULT} = [{'time': 0.020033653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.609699999999964e-05, 'source_diff': 1.609699999999964e-05}, {'time': 0.0202625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:03:24.187" endtime="20201115 22:03:24.190"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:24.203" level="INFO">${OVERHEAD} = {'diff': [1.609699999999964e-05, 1.613899999999835e-05, 1.611100000000268e-05, 1.60690000000005e-05, 1.608300000000007e-05, 1.6069999999999973e-05, 1.60690000000005e-05, 1.608300000000007e-05, 1.60969...</msg>
<status status="PASS" starttime="20201115 22:03:24.191" endtime="20201115 22:03:24.204"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:24.208" level="INFO">NAME: 00-overhead-17-set</msg>
<status status="PASS" starttime="20201115 22:03:24.207" endtime="20201115 22:03:24.208"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:24.210" level="INFO">VALUE: [1.609699999999964e-05, 1.613899999999835e-05, 1.611100000000268e-05, 1.60690000000005e-05, 1.608300000000007e-05, 1.6069999999999973e-05, 1.60690000000005e-05, 1.608300000000007e-05, 1.609699999999964e-05, 1.609699999999964e-05, 1.6097999999999113e-05, 1.608300000000007e-05, 1.6097999999999113e-05, 1.613900000000182e-05, 1.60690000000005e-05, 1.6098000000002582e-05, 1.6069999999999973e-05, 1.608300000000007e-05, 1.605500000000093e-05, 1.606899999999703e-05, 1.6151999999998445e-05, 1.608300000000007e-05, 1.606899999999703e-05, 1.608300000000007e-05, 1.6069999999999973e-05, 1.613899999999835e-05, 1.6137999999998875e-05, 1.609699999999964e-05, 1.6083999999999543e-05, 1.6069999999999973e-05, 1.6069999999999973e-05, 1.608300000000007e-05, 1.608300000000007e-05, 1.6069999999999973e-05, 1.608300000000007e-05, 1.608300000000007e-05, 1.60829999999966e-05, 1.60690000000005e-05, 1.60690000000005e-05, 1.6083999999999543e-05, 1.608300000000007e-05, 1.6069999999999973e-05, 1.608300000000007e-05, 1.6056000000000403e-05, 1.613900000000182e-05, 1.611100000000268e-05, 1.608300000000007e-05, 1.609699999999964e-05, 1.605500000000093e-05, 1.6069999999999973e-05]</msg>
<status status="PASS" starttime="20201115 22:03:24.209" endtime="20201115 22:03:24.211"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.204" endtime="20201115 22:03:24.211"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:24.213" endtime="20201115 22:03:24.215"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:24.217" endtime="20201115 22:03:24.236"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.215" endtime="20201115 22:03:24.237"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.212" endtime="20201115 22:03:24.237"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.845" endtime="20201115 22:03:24.238"></status>
</kw>
<msg timestamp="20201115 22:03:24.238" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:24.247" endtime="20201115 22:03:24.267"></status>
</kw>
<msg timestamp="20201115 22:03:24.267" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:24.245" endtime="20201115 22:03:24.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:24.270" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:24.268" endtime="20201115 22:03:24.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:24.271" endtime="20201115 22:03:24.272"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.243" endtime="20201115 22:03:24.273"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.240" endtime="20201115 22:03:24.273"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:24.280" endtime="20201115 22:03:24.569"></status>
</kw>
<msg timestamp="20201115 22:03:24.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020384847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020400917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:24.278" endtime="20201115 22:03:24.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:24.580" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020384847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020400917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:24.573" endtime="20201115 22:03:24.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:24.581" endtime="20201115 22:03:24.583"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.276" endtime="20201115 22:03:24.583"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.274" endtime="20201115 22:03:24.584"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:24.588" level="INFO">${RESULT} = [{'time': 0.020400917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6069999999999973e-05, 'source_diff': 1.6069999999999973e-05}, {'time': 0.020630917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:24.584" endtime="20201115 22:03:24.588"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:24.601" level="INFO">${OVERHEAD} = {'diff': [1.6069999999999973e-05, 1.6069999999999973e-05, 1.60690000000005e-05, 1.6097999999999113e-05, 1.608300000000007e-05, 1.604100000000136e-05, 1.6069999999999973e-05, 1.6069999999999973e-05, 1....</msg>
<status status="PASS" starttime="20201115 22:03:24.589" endtime="20201115 22:03:24.602"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:24.606" level="INFO">NAME: 00-overhead-17-set</msg>
<status status="PASS" starttime="20201115 22:03:24.605" endtime="20201115 22:03:24.606"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:24.608" level="INFO">VALUE: [1.6069999999999973e-05, 1.6069999999999973e-05, 1.60690000000005e-05, 1.6097999999999113e-05, 1.608300000000007e-05, 1.604100000000136e-05, 1.6069999999999973e-05, 1.6069999999999973e-05, 1.6069999999999973e-05, 1.60690000000005e-05, 1.6069999999999973e-05, 1.6056000000000403e-05, 1.6083999999999543e-05, 1.608300000000007e-05, 1.604100000000136e-05, 1.606899999999703e-05, 1.608300000000007e-05, 1.609699999999964e-05, 1.6069999999999973e-05, 1.609699999999964e-05, 1.608300000000007e-05, 1.609699999999964e-05, 1.609699999999964e-05, 1.6097999999999113e-05, 1.609699999999964e-05, 1.60690000000005e-05, 1.608300000000007e-05, 1.609699999999964e-05, 1.609699999999964e-05, 1.608300000000007e-05, 1.6042000000000833e-05, 1.609699999999964e-05, 1.611099999999921e-05, 1.612500000000225e-05, 1.60690000000005e-05, 1.608300000000007e-05, 1.6083999999999543e-05, 1.609699999999964e-05, 1.608300000000007e-05, 1.609699999999964e-05, 1.6083999999999543e-05, 1.608300000000007e-05, 1.6084000000003013e-05, 1.6056000000000403e-05, 1.608300000000007e-05, 1.6069999999999973e-05, 1.6083999999999543e-05, 1.609699999999964e-05, 1.6056000000000403e-05, 1.608300000000007e-05]</msg>
<status status="PASS" starttime="20201115 22:03:24.607" endtime="20201115 22:03:24.609"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.602" endtime="20201115 22:03:24.609"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:24.611" endtime="20201115 22:03:24.613"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:24.615" endtime="20201115 22:03:24.634"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.613" endtime="20201115 22:03:24.635"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.610" endtime="20201115 22:03:24.635"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.238" endtime="20201115 22:03:24.640"></status>
</kw>
<msg timestamp="20201115 22:03:24.641" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:24.649" endtime="20201115 22:03:24.672"></status>
</kw>
<msg timestamp="20201115 22:03:24.672" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:24.648" endtime="20201115 22:03:24.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:24.674" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:24.673" endtime="20201115 22:03:24.675"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:24.676" endtime="20201115 22:03:24.677"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.645" endtime="20201115 22:03:24.678"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.643" endtime="20201115 22:03:24.678"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:24.684" endtime="20201115 22:03:24.969"></status>
</kw>
<msg timestamp="20201115 22:03:24.972" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024551722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024567792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:24.683" endtime="20201115 22:03:24.972"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:24.980" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024551722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024567792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:24.973" endtime="20201115 22:03:24.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:24.981" endtime="20201115 22:03:24.982"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.680" endtime="20201115 22:03:24.983"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.679" endtime="20201115 22:03:24.983"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:24.987" level="INFO">${RESULT} = [{'time': 0.024567792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6069999999999973e-05, 'source_diff': 1.6069999999999973e-05}, {'time': 0.024795722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:24.984" endtime="20201115 22:03:24.988"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:25.001" level="INFO">${OVERHEAD} = {'diff': [1.6069999999999973e-05, 1.60690000000005e-05, 1.6083999999999543e-05, 1.609699999999964e-05, 1.608300000000007e-05, 1.608300000000007e-05, 1.609699999999964e-05, 1.6042000000000833e-05, 1.60...</msg>
<status status="PASS" starttime="20201115 22:03:24.988" endtime="20201115 22:03:25.001"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:25.006" level="INFO">NAME: 00-overhead-17-set</msg>
<status status="PASS" starttime="20201115 22:03:25.004" endtime="20201115 22:03:25.006"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:25.008" level="INFO">VALUE: [1.6069999999999973e-05, 1.60690000000005e-05, 1.6083999999999543e-05, 1.609699999999964e-05, 1.608300000000007e-05, 1.608300000000007e-05, 1.609699999999964e-05, 1.6042000000000833e-05, 1.609699999999964e-05, 1.609699999999964e-05, 1.60690000000005e-05, 1.611099999999921e-05, 1.608300000000007e-05, 1.6097999999999113e-05, 1.6083999999999543e-05, 1.611099999999921e-05, 1.611099999999921e-05, 1.6083999999999543e-05, 1.6069999999999973e-05, 1.615300000000139e-05, 1.608300000000007e-05, 1.608300000000007e-05, 1.6069999999999973e-05, 1.6069999999999973e-05, 1.611100000000268e-05, 1.6083999999999543e-05, 1.6056000000000403e-05, 1.608300000000007e-05, 1.609700000000311e-05, 1.608300000000007e-05, 1.609699999999964e-05, 1.608300000000007e-05, 1.608300000000007e-05, 1.6069999999999973e-05, 1.608300000000007e-05, 1.608300000000007e-05, 1.6042000000000833e-05, 1.609699999999964e-05, 1.6083999999999543e-05, 1.608300000000007e-05, 1.6097999999999113e-05, 1.609699999999964e-05, 1.6069999999999973e-05, 1.604100000000136e-05, 1.6083999999999543e-05, 1.609699999999964e-05, 1.6097999999999113e-05, 1.615299999999792e-05, 1.6014000000001694e-05, 1.608300000000007e-05]</msg>
<status status="PASS" starttime="20201115 22:03:25.007" endtime="20201115 22:03:25.008"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.002" endtime="20201115 22:03:25.009"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:25.012" endtime="20201115 22:03:25.013"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:25.015" endtime="20201115 22:03:25.034"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.013" endtime="20201115 22:03:25.035"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.010" endtime="20201115 22:03:25.035"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.641" endtime="20201115 22:03:25.036"></status>
</kw>
<msg timestamp="20201115 22:03:25.036" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:25.045" endtime="20201115 22:03:25.066"></status>
</kw>
<msg timestamp="20201115 22:03:25.066" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:25.043" endtime="20201115 22:03:25.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:25.069" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:25.067" endtime="20201115 22:03:25.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:25.070" endtime="20201115 22:03:25.071"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.041" endtime="20201115 22:03:25.072"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.039" endtime="20201115 22:03:25.072"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:25.079" endtime="20201115 22:03:25.366"></status>
</kw>
<msg timestamp="20201115 22:03:25.369" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020145667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020161764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:25.077" endtime="20201115 22:03:25.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:25.377" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020145667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020161764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:25.370" endtime="20201115 22:03:25.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:25.378" endtime="20201115 22:03:25.380"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.074" endtime="20201115 22:03:25.380"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.073" endtime="20201115 22:03:25.381"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:25.385" level="INFO">${RESULT} = [{'time': 0.020161764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.609699999999964e-05, 'source_diff': 1.609699999999964e-05}, {'time': 0.020391153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:25.381" endtime="20201115 22:03:25.385"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:25.399" level="INFO">${OVERHEAD} = {'diff': [1.609699999999964e-05, 1.6055999999996934e-05, 1.611100000000268e-05, 1.6069999999999973e-05, 1.60690000000005e-05, 1.609699999999964e-05, 1.6069999999999973e-05, 1.6013999999998224e-05, 1.6...</msg>
<status status="PASS" starttime="20201115 22:03:25.386" endtime="20201115 22:03:25.399"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:25.404" level="INFO">NAME: 00-overhead-17-set</msg>
<status status="PASS" starttime="20201115 22:03:25.402" endtime="20201115 22:03:25.404"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:25.406" level="INFO">VALUE: [1.609699999999964e-05, 1.6055999999996934e-05, 1.611100000000268e-05, 1.6069999999999973e-05, 1.60690000000005e-05, 1.609699999999964e-05, 1.6069999999999973e-05, 1.6013999999998224e-05, 1.609699999999964e-05, 1.608300000000007e-05, 1.6083999999999543e-05, 1.608300000000007e-05, 1.6083999999999543e-05, 1.6165999999998015e-05, 1.613899999999835e-05, 1.608300000000007e-05, 1.608300000000007e-05, 1.6083999999999543e-05, 1.608300000000007e-05, 1.613900000000182e-05, 1.60690000000005e-05, 1.6069999999999973e-05, 1.609700000000311e-05, 1.60690000000005e-05, 1.611099999999921e-05, 1.60690000000005e-05, 1.6069999999999973e-05, 1.612499999999878e-05, 1.6069999999999973e-05, 1.611099999999921e-05, 1.6069999999999973e-05, 1.609699999999964e-05, 1.608300000000007e-05, 1.608300000000007e-05, 1.608300000000007e-05, 1.608300000000007e-05, 1.608300000000007e-05, 1.611099999999921e-05, 1.6083999999999543e-05, 1.608300000000007e-05, 1.60690000000005e-05, 1.611100000000268e-05, 1.608300000000007e-05, 1.609700000000311e-05, 1.6069999999999973e-05, 1.6083999999999543e-05, 1.608300000000007e-05, 1.608300000000007e-05, 1.609699999999964e-05, 1.608300000000007e-05]</msg>
<status status="PASS" starttime="20201115 22:03:25.405" endtime="20201115 22:03:25.407"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.400" endtime="20201115 22:03:25.408"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:25.410" endtime="20201115 22:03:25.411"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:25.413" endtime="20201115 22:03:25.433"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.412" endtime="20201115 22:03:25.433"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.408" endtime="20201115 22:03:25.434"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.037" endtime="20201115 22:03:25.434"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.447" endtime="20201115 22:03:25.434"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.446" endtime="20201115 22:03:25.434"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:25.437" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:25.445" endtime="20201115 22:03:25.468"></status>
</kw>
<msg timestamp="20201115 22:03:25.468" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:25.444" endtime="20201115 22:03:25.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:25.470" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:25.469" endtime="20201115 22:03:25.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:25.472" endtime="20201115 22:03:25.473"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.441" endtime="20201115 22:03:25.474"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.439" endtime="20201115 22:03:25.474"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:25.481" endtime="20201115 22:03:25.767"></status>
</kw>
<msg timestamp="20201115 22:03:25.770" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022929806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022946653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:25.479" endtime="20201115 22:03:25.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:25.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022929806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022946653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:25.771" endtime="20201115 22:03:25.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:25.779" endtime="20201115 22:03:25.781"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.477" endtime="20201115 22:03:25.781"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.475" endtime="20201115 22:03:25.782"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:25.786" level="INFO">${RESULT} = [{'time': 0.022946653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.684700000000039e-05, 'source_diff': 1.684700000000039e-05}, {'time': 0.023189625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:25.782" endtime="20201115 22:03:25.786"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:25.799" level="INFO">${OVERHEAD} = {'diff': [1.684700000000039e-05, 1.684699999999692e-05, 1.68889999999991e-05, 1.6819999999997254e-05, 1.683299999999735e-05, 1.684700000000039e-05, 1.684700000000039e-05, 1.684699999999692e-05, 1.6805...</msg>
<status status="PASS" starttime="20201115 22:03:25.787" endtime="20201115 22:03:25.800"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:25.804" level="INFO">NAME: 00-overhead-18-set</msg>
<status status="PASS" starttime="20201115 22:03:25.803" endtime="20201115 22:03:25.804"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:25.807" level="INFO">VALUE: [1.684700000000039e-05, 1.684699999999692e-05, 1.68889999999991e-05, 1.6819999999997254e-05, 1.683299999999735e-05, 1.684700000000039e-05, 1.684700000000039e-05, 1.684699999999692e-05, 1.680500000000168e-05, 1.686099999999996e-05, 1.6834000000000293e-05, 1.6833999999996824e-05, 1.684700000000039e-05, 1.690299999999867e-05, 1.687499999999953e-05, 1.687499999999953e-05, 1.6901999999999195e-05, 1.6820000000000723e-05, 1.684700000000039e-05, 1.683299999999735e-05, 1.684700000000039e-05, 1.686099999999996e-05, 1.6792000000001583e-05, 1.684700000000039e-05, 1.684700000000039e-05, 1.684700000000039e-05, 1.683300000000082e-05, 1.68889999999991e-05, 1.686099999999996e-05, 1.6791999999998114e-05, 1.686099999999996e-05, 1.686100000000343e-05, 1.683300000000082e-05, 1.683300000000082e-05, 1.684700000000039e-05, 1.683300000000082e-05, 1.6862000000006372e-05, 1.686099999999996e-05, 1.6806000000001153e-05, 1.683300000000082e-05, 1.686099999999996e-05, 1.684700000000039e-05, 1.683300000000082e-05, 1.686099999999996e-05, 1.6847999999999863e-05, 1.6847999999999863e-05, 1.6847999999999863e-05, 1.6834000000000293e-05, 1.684700000000039e-05, 1.68889999999991e-05]</msg>
<status status="PASS" starttime="20201115 22:03:25.805" endtime="20201115 22:03:25.807"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.800" endtime="20201115 22:03:25.808"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:25.810" endtime="20201115 22:03:25.811"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:25.813" endtime="20201115 22:03:25.833"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.812" endtime="20201115 22:03:25.834"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.808" endtime="20201115 22:03:25.834"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.437" endtime="20201115 22:03:25.834"></status>
</kw>
<msg timestamp="20201115 22:03:25.834" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:25.843" endtime="20201115 22:03:25.865"></status>
</kw>
<msg timestamp="20201115 22:03:25.865" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:25.842" endtime="20201115 22:03:25.865"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:25.867" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:25.866" endtime="20201115 22:03:25.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:25.869" endtime="20201115 22:03:25.870"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.839" endtime="20201115 22:03:25.871"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.837" endtime="20201115 22:03:25.871"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:25.878" endtime="20201115 22:03:26.165"></status>
</kw>
<msg timestamp="20201115 22:03:26.168" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020199625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020216472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:25.876" endtime="20201115 22:03:26.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:26.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020199625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020216472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:26.169" endtime="20201115 22:03:26.177"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:26.177" endtime="20201115 22:03:26.179"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.873" endtime="20201115 22:03:26.179"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.872" endtime="20201115 22:03:26.180"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:26.184" level="INFO">${RESULT} = [{'time': 0.020216472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.684700000000039e-05, 'source_diff': 1.684700000000039e-05}, {'time': 0.020462889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:26.181" endtime="20201115 22:03:26.184"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:26.241" level="INFO">${OVERHEAD} = {'diff': [1.684700000000039e-05, 1.6778000000002014e-05, 1.6847999999999863e-05, 1.681899999999778e-05, 1.6764000000002444e-05, 1.684699999999692e-05, 1.6916000000002235e-05, 1.686099999999996e-05, 1....</msg>
<status status="PASS" starttime="20201115 22:03:26.185" endtime="20201115 22:03:26.241"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:26.246" level="INFO">NAME: 00-overhead-18-set</msg>
<status status="PASS" starttime="20201115 22:03:26.245" endtime="20201115 22:03:26.246"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:26.248" level="INFO">VALUE: [1.684700000000039e-05, 1.6778000000002014e-05, 1.6847999999999863e-05, 1.681899999999778e-05, 1.6764000000002444e-05, 1.684699999999692e-05, 1.6916000000002235e-05, 1.686099999999996e-05, 1.6834000000000293e-05, 1.68889999999991e-05, 1.686099999999996e-05, 1.6834000000000293e-05, 1.684700000000039e-05, 1.6834000000000293e-05, 1.680500000000168e-05, 1.683300000000082e-05, 1.684700000000039e-05, 1.684700000000039e-05, 1.684699999999692e-05, 1.686099999999996e-05, 1.686099999999996e-05, 1.683299999999735e-05, 1.684700000000039e-05, 1.691699999999824e-05, 1.683300000000082e-05, 1.684700000000039e-05, 1.6778000000002014e-05, 1.686100000000343e-05, 1.684700000000039e-05, 1.6861999999999433e-05, 1.684700000000039e-05, 1.690300000000214e-05, 1.6875000000003e-05, 1.684700000000039e-05, 1.684700000000039e-05, 1.684700000000039e-05, 1.686099999999996e-05, 1.686099999999996e-05, 1.684699999999692e-05, 1.6834000000000293e-05, 1.687499999999953e-05, 1.6805999999997684e-05, 1.686099999999996e-05, 1.688900000000257e-05, 1.68889999999991e-05, 1.683300000000082e-05, 1.6834000000000293e-05, 1.683300000000082e-05, 1.6847999999999863e-05, 1.6820000000000723e-05]</msg>
<status status="PASS" starttime="20201115 22:03:26.247" endtime="20201115 22:03:26.249"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.242" endtime="20201115 22:03:26.249"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:26.251" endtime="20201115 22:03:26.253"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:26.255" endtime="20201115 22:03:26.274"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.253" endtime="20201115 22:03:26.275"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.250" endtime="20201115 22:03:26.275"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.835" endtime="20201115 22:03:26.276"></status>
</kw>
<msg timestamp="20201115 22:03:26.276" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:26.285" endtime="20201115 22:03:26.307"></status>
</kw>
<msg timestamp="20201115 22:03:26.307" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:26.284" endtime="20201115 22:03:26.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:26.310" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:26.308" endtime="20201115 22:03:26.310"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:26.311" endtime="20201115 22:03:26.312"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.280" endtime="20201115 22:03:26.313"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.278" endtime="20201115 22:03:26.313"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:26.320" endtime="20201115 22:03:26.605"></status>
</kw>
<msg timestamp="20201115 22:03:26.608" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020695514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020712347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:26.318" endtime="20201115 22:03:26.608"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:26.616" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020695514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020712347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:26.609" endtime="20201115 22:03:26.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:26.617" endtime="20201115 22:03:26.618"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.316" endtime="20201115 22:03:26.619"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.314" endtime="20201115 22:03:26.619"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:26.623" level="INFO">${RESULT} = [{'time': 0.020712347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.683299999999735e-05, 'source_diff': 1.683299999999735e-05}, {'time': 0.020959292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:26.620" endtime="20201115 22:03:26.624"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:26.638" level="INFO">${OVERHEAD} = {'diff': [1.683299999999735e-05, 1.6834000000000293e-05, 1.687499999999953e-05, 1.6847999999999863e-05, 1.684700000000039e-05, 1.6847999999999863e-05, 1.684700000000039e-05, 1.684700000000039e-05, 1.6...</msg>
<status status="PASS" starttime="20201115 22:03:26.625" endtime="20201115 22:03:26.638"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:26.642" level="INFO">NAME: 00-overhead-18-set</msg>
<status status="PASS" starttime="20201115 22:03:26.641" endtime="20201115 22:03:26.642"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:26.644" level="INFO">VALUE: [1.683299999999735e-05, 1.6834000000000293e-05, 1.687499999999953e-05, 1.6847999999999863e-05, 1.684700000000039e-05, 1.6847999999999863e-05, 1.684700000000039e-05, 1.684700000000039e-05, 1.684700000000039e-05, 1.686099999999996e-05, 1.684700000000039e-05, 1.686099999999996e-05, 1.683300000000082e-05, 1.6847999999999863e-05, 1.683300000000082e-05, 1.6847999999999863e-05, 1.6819999999997254e-05, 1.686099999999996e-05, 1.683300000000082e-05, 1.684700000000039e-05, 1.6778000000002014e-05, 1.6820000000000723e-05, 1.686099999999996e-05, 1.687499999999953e-05, 1.6929999999998335e-05, 1.683300000000082e-05, 1.684700000000039e-05, 1.686099999999996e-05, 1.684700000000039e-05, 1.6887999999999626e-05, 1.681900000000125e-05, 1.683299999999735e-05, 1.684700000000039e-05, 1.686099999999996e-05, 1.684700000000039e-05, 1.684700000000039e-05, 1.684700000000039e-05, 1.686099999999996e-05, 1.684700000000039e-05, 1.6847999999999863e-05, 1.6916000000002235e-05, 1.6847999999999863e-05, 1.683300000000082e-05, 1.686099999999996e-05, 1.6834000000000293e-05, 1.683300000000082e-05, 1.684700000000039e-05, 1.68889999999991e-05, 1.684700000000039e-05, 1.680500000000168e-05]</msg>
<status status="PASS" starttime="20201115 22:03:26.643" endtime="20201115 22:03:26.645"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.638" endtime="20201115 22:03:26.645"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:26.648" endtime="20201115 22:03:26.649"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:26.651" endtime="20201115 22:03:26.670"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.650" endtime="20201115 22:03:26.671"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.646" endtime="20201115 22:03:26.672"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.276" endtime="20201115 22:03:26.672"></status>
</kw>
<msg timestamp="20201115 22:03:26.672" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:26.682" endtime="20201115 22:03:26.704"></status>
</kw>
<msg timestamp="20201115 22:03:26.704" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:26.680" endtime="20201115 22:03:26.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:26.707" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:26.705" endtime="20201115 22:03:26.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:26.708" endtime="20201115 22:03:26.709"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.677" endtime="20201115 22:03:26.710"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.675" endtime="20201115 22:03:26.710"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:26.717" endtime="20201115 22:03:27.003"></status>
</kw>
<msg timestamp="20201115 22:03:27.006" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020917611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020934458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:26.715" endtime="20201115 22:03:27.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:27.014" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020917611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020934458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:27.007" endtime="20201115 22:03:27.014"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:27.015" endtime="20201115 22:03:27.017"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.712" endtime="20201115 22:03:27.017"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.711" endtime="20201115 22:03:27.018"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:27.022" level="INFO">${RESULT} = [{'time': 0.020934458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.684700000000039e-05, 'source_diff': 1.684700000000039e-05}, {'time': 0.021180944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:27.018" endtime="20201115 22:03:27.022"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:27.036" level="INFO">${OVERHEAD} = {'diff': [1.684700000000039e-05, 1.684700000000039e-05, 1.6847999999999863e-05, 1.684700000000039e-05, 1.684700000000039e-05, 1.684700000000039e-05, 1.684700000000039e-05, 1.686099999999996e-05, 1.684...</msg>
<status status="PASS" starttime="20201115 22:03:27.023" endtime="20201115 22:03:27.036"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:27.040" level="INFO">NAME: 00-overhead-18-set</msg>
<status status="PASS" starttime="20201115 22:03:27.039" endtime="20201115 22:03:27.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:27.042" level="INFO">VALUE: [1.684700000000039e-05, 1.684700000000039e-05, 1.6847999999999863e-05, 1.684700000000039e-05, 1.684700000000039e-05, 1.684700000000039e-05, 1.684700000000039e-05, 1.686099999999996e-05, 1.6847999999999863e-05, 1.684700000000039e-05, 1.688900000000257e-05, 1.6777999999998544e-05, 1.677699999999907e-05, 1.686099999999996e-05, 1.684700000000039e-05, 1.686099999999996e-05, 1.6847999999999863e-05, 1.684700000000039e-05, 1.6847999999999863e-05, 1.6792000000001583e-05, 1.686099999999996e-05, 1.684700000000039e-05, 1.6834000000000293e-05, 1.684700000000039e-05, 1.686099999999996e-05, 1.683300000000082e-05, 1.68889999999991e-05, 1.6901999999999195e-05, 1.684700000000039e-05, 1.686099999999996e-05, 1.684700000000039e-05, 1.686099999999996e-05, 1.683300000000082e-05, 1.686099999999996e-05, 1.6847999999999863e-05, 1.684700000000039e-05, 1.6875000000003e-05, 1.684700000000039e-05, 1.6791999999998114e-05, 1.683299999999735e-05, 1.6833999999996824e-05, 1.6834000000000293e-05, 1.6833999999996824e-05, 1.686099999999996e-05, 1.686099999999996e-05, 1.6915999999998765e-05, 1.6792000000001583e-05, 1.6805999999994214e-05, 1.6806000000001153e-05, 1.684700000000039e-05]</msg>
<status status="PASS" starttime="20201115 22:03:27.041" endtime="20201115 22:03:27.043"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.036" endtime="20201115 22:03:27.043"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:27.046" endtime="20201115 22:03:27.047"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:27.049" endtime="20201115 22:03:27.068"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.047" endtime="20201115 22:03:27.069"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.044" endtime="20201115 22:03:27.069"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.673" endtime="20201115 22:03:27.070"></status>
</kw>
<msg timestamp="20201115 22:03:27.070" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:27.079" endtime="20201115 22:03:27.102"></status>
</kw>
<msg timestamp="20201115 22:03:27.102" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:27.077" endtime="20201115 22:03:27.102"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:27.105" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:27.103" endtime="20201115 22:03:27.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:27.106" endtime="20201115 22:03:27.108"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.075" endtime="20201115 22:03:27.108"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.072" endtime="20201115 22:03:27.109"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:27.115" endtime="20201115 22:03:27.400"></status>
</kw>
<msg timestamp="20201115 22:03:27.403" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021448431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021465194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:27.113" endtime="20201115 22:03:27.404"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:27.412" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021448431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021465194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:27.405" endtime="20201115 22:03:27.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:27.413" endtime="20201115 22:03:27.415"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.111" endtime="20201115 22:03:27.415"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.109" endtime="20201115 22:03:27.416"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:27.420" level="INFO">${RESULT} = [{'time': 0.021465194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.67629999999995e-05, 'source_diff': 1.67629999999995e-05}, {'time': 0.021712639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:03:27.416" endtime="20201115 22:03:27.420"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:27.434" level="INFO">${OVERHEAD} = {'diff': [1.67629999999995e-05, 1.684700000000039e-05, 1.684700000000039e-05, 1.6819999999997254e-05, 1.683299999999735e-05, 1.683300000000082e-05, 1.684700000000039e-05, 1.684700000000039e-05, 1.6887...</msg>
<status status="PASS" starttime="20201115 22:03:27.421" endtime="20201115 22:03:27.434"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:27.438" level="INFO">NAME: 00-overhead-18-set</msg>
<status status="PASS" starttime="20201115 22:03:27.437" endtime="20201115 22:03:27.439"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:27.441" level="INFO">VALUE: [1.67629999999995e-05, 1.684700000000039e-05, 1.684700000000039e-05, 1.6819999999997254e-05, 1.683299999999735e-05, 1.683300000000082e-05, 1.684700000000039e-05, 1.684700000000039e-05, 1.6887999999999626e-05, 1.6778000000002014e-05, 1.683299999999735e-05, 1.6834000000000293e-05, 1.684700000000039e-05, 1.6806000000001153e-05, 1.684700000000039e-05, 1.681900000000125e-05, 1.686099999999996e-05, 1.684700000000039e-05, 1.6847999999999863e-05, 1.68889999999991e-05, 1.690299999999867e-05, 1.684700000000039e-05, 1.690300000000214e-05, 1.687499999999953e-05, 1.683300000000082e-05, 1.684700000000039e-05, 1.684699999999692e-05, 1.683300000000082e-05, 1.684700000000039e-05, 1.686099999999996e-05, 1.684700000000039e-05, 1.686099999999996e-05, 1.684700000000039e-05, 1.686099999999996e-05, 1.683300000000082e-05, 1.684700000000039e-05, 1.686099999999996e-05, 1.684700000000039e-05, 1.681900000000125e-05, 1.6833999999996824e-05, 1.683299999999735e-05, 1.686099999999996e-05, 1.686099999999996e-05, 1.686099999999996e-05, 1.684700000000039e-05, 1.686099999999996e-05, 1.6848000000006802e-05, 1.684700000000039e-05, 1.681899999999431e-05, 1.686099999999996e-05]</msg>
<status status="PASS" starttime="20201115 22:03:27.440" endtime="20201115 22:03:27.441"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.435" endtime="20201115 22:03:27.442"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:27.444" endtime="20201115 22:03:27.445"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:27.447" endtime="20201115 22:03:27.467"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.446" endtime="20201115 22:03:27.467"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.442" endtime="20201115 22:03:27.468"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.070" endtime="20201115 22:03:27.468"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.436" endtime="20201115 22:03:27.468"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.435" endtime="20201115 22:03:27.469"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:27.471" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:27.480" endtime="20201115 22:03:27.502"></status>
</kw>
<msg timestamp="20201115 22:03:27.503" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:27.478" endtime="20201115 22:03:27.503"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:27.505" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:27.504" endtime="20201115 22:03:27.506"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:27.506" endtime="20201115 22:03:27.508"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.475" endtime="20201115 22:03:27.509"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.473" endtime="20201115 22:03:27.509"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:27.516" endtime="20201115 22:03:27.801"></status>
</kw>
<msg timestamp="20201115 22:03:27.804" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023050431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023068056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:27.514" endtime="20201115 22:03:27.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:27.812" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023050431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023068056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:27.806" endtime="20201115 22:03:27.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:27.814" endtime="20201115 22:03:27.815"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.512" endtime="20201115 22:03:27.816"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.510" endtime="20201115 22:03:27.816"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:27.820" level="INFO">${RESULT} = [{'time': 0.023068056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.762500000000028e-05, 'source_diff': 1.762500000000028e-05}, {'time': 0.023331361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:27.817" endtime="20201115 22:03:27.821"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:27.835" level="INFO">${OVERHEAD} = {'diff': [1.762500000000028e-05, 1.761099999999724e-05, 1.762500000000028e-05, 1.759700000000114e-05, 1.762499999999681e-05, 1.758300000000157e-05, 1.755499999999896e-05, 1.761100000000071e-05, 1.7611...</msg>
<status status="PASS" starttime="20201115 22:03:27.821" endtime="20201115 22:03:27.835"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:27.839" level="INFO">NAME: 00-overhead-19-set</msg>
<status status="PASS" starttime="20201115 22:03:27.838" endtime="20201115 22:03:27.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:27.842" level="INFO">VALUE: [1.762500000000028e-05, 1.761099999999724e-05, 1.762500000000028e-05, 1.759700000000114e-05, 1.762499999999681e-05, 1.758300000000157e-05, 1.755499999999896e-05, 1.761100000000071e-05, 1.761100000000071e-05, 1.761099999999724e-05, 1.762500000000028e-05, 1.7638000000000376e-05, 1.763899999999985e-05, 1.761100000000071e-05, 1.762500000000028e-05, 1.7556000000001903e-05, 1.761100000000071e-05, 1.761100000000071e-05, 1.7693999999998655e-05, 1.761100000000071e-05, 1.761100000000071e-05, 1.761100000000071e-05, 1.759700000000114e-05, 1.763899999999985e-05, 1.75829999999981e-05, 1.755499999999896e-05, 1.7556000000001903e-05, 1.761100000000071e-05, 1.7569000000002e-05, 1.761100000000071e-05, 1.761100000000071e-05, 1.7555999999998434e-05, 1.761100000000071e-05, 1.762500000000028e-05, 1.7569000000002e-05, 1.761100000000071e-05, 1.755500000000243e-05, 1.761100000000071e-05, 1.7653000000006358e-05, 1.7612000000000183e-05, 1.768099999999856e-05, 1.766699999999899e-05, 1.759700000000114e-05, 1.7584000000001043e-05, 1.761100000000071e-05, 1.761099999999377e-05, 1.761100000000071e-05, 1.7598000000000613e-05, 1.761100000000071e-05, 1.7598000000000613e-05]</msg>
<status status="PASS" starttime="20201115 22:03:27.840" endtime="20201115 22:03:27.842"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.836" endtime="20201115 22:03:27.843"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:27.845" endtime="20201115 22:03:27.846"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:27.848" endtime="20201115 22:03:27.868"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.847" endtime="20201115 22:03:27.868"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.843" endtime="20201115 22:03:27.869"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.471" endtime="20201115 22:03:27.869"></status>
</kw>
<msg timestamp="20201115 22:03:27.869" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:27.878" endtime="20201115 22:03:27.901"></status>
</kw>
<msg timestamp="20201115 22:03:27.901" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:27.877" endtime="20201115 22:03:27.901"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:27.904" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:27.902" endtime="20201115 22:03:27.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:27.905" endtime="20201115 22:03:27.907"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.874" endtime="20201115 22:03:27.908"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.872" endtime="20201115 22:03:27.908"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:27.915" endtime="20201115 22:03:28.200"></status>
</kw>
<msg timestamp="20201115 22:03:28.203" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019992653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020010264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:27.913" endtime="20201115 22:03:28.203"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:28.211" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019992653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020010264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:28.204" endtime="20201115 22:03:28.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:28.212" endtime="20201115 22:03:28.214"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.911" endtime="20201115 22:03:28.214"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.909" endtime="20201115 22:03:28.215"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:28.219" level="INFO">${RESULT} = [{'time': 0.020010264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.761100000000071e-05, 'source_diff': 1.761100000000071e-05}, {'time': 0.020273222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:28.215" endtime="20201115 22:03:28.219"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:28.232" level="INFO">${OVERHEAD} = {'diff': [1.761100000000071e-05, 1.761100000000071e-05, 1.759700000000114e-05, 1.761100000000071e-05, 1.75829999999981e-05, 1.75829999999981e-05, 1.7598000000000613e-05, 1.762500000000028e-05, 1.76120...</msg>
<status status="PASS" starttime="20201115 22:03:28.220" endtime="20201115 22:03:28.232"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:28.237" level="INFO">NAME: 00-overhead-19-set</msg>
<status status="PASS" starttime="20201115 22:03:28.236" endtime="20201115 22:03:28.237"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:28.239" level="INFO">VALUE: [1.761100000000071e-05, 1.761100000000071e-05, 1.759700000000114e-05, 1.761100000000071e-05, 1.75829999999981e-05, 1.75829999999981e-05, 1.7598000000000613e-05, 1.762500000000028e-05, 1.7612000000000183e-05, 1.761099999999724e-05, 1.761100000000071e-05, 1.759700000000114e-05, 1.761099999999724e-05, 1.7665999999999515e-05, 1.761100000000071e-05, 1.759699999999767e-05, 1.759699999999767e-05, 1.765300000000289e-05, 1.761100000000071e-05, 1.7598000000000613e-05, 1.761100000000071e-05, 1.761099999999724e-05, 1.759699999999767e-05, 1.763899999999985e-05, 1.766700000000246e-05, 1.756899999999853e-05, 1.758300000000157e-05, 1.761100000000071e-05, 1.761100000000071e-05, 1.7542000000002334e-05, 1.759700000000114e-05, 1.761099999999724e-05, 1.763899999999985e-05, 1.761100000000071e-05, 1.761100000000071e-05, 1.758300000000157e-05, 1.762500000000028e-05, 1.761100000000071e-05, 1.761100000000071e-05, 1.761100000000071e-05, 1.761100000000071e-05, 1.763899999999985e-05, 1.7584000000001043e-05, 1.761100000000071e-05, 1.759700000000114e-05, 1.759700000000114e-05, 1.759700000000114e-05, 1.7569000000002e-05, 1.761100000000071e-05, 1.7542000000002334e-05]</msg>
<status status="PASS" starttime="20201115 22:03:28.238" endtime="20201115 22:03:28.239"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:28.233" endtime="20201115 22:03:28.240"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:28.242" endtime="20201115 22:03:28.243"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:28.246" endtime="20201115 22:03:28.265"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:28.244" endtime="20201115 22:03:28.266"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:28.240" endtime="20201115 22:03:28.266"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.870" endtime="20201115 22:03:28.266"></status>
</kw>
<msg timestamp="20201115 22:03:28.267" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:28.276" endtime="20201115 22:03:28.298"></status>
</kw>
<msg timestamp="20201115 22:03:28.298" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:28.274" endtime="20201115 22:03:28.298"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:28.300" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:28.299" endtime="20201115 22:03:28.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:28.301" endtime="20201115 22:03:28.304"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:28.271" endtime="20201115 22:03:28.304"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:28.269" endtime="20201115 22:03:28.305"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:28.311" endtime="20201115 22:03:28.597"></status>
</kw>
<msg timestamp="20201115 22:03:28.600" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020593319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020610917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:28.310" endtime="20201115 22:03:28.600"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:28.608" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020593319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020610917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:28.601" endtime="20201115 22:03:28.609"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:28.609" endtime="20201115 22:03:28.611"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:28.307" endtime="20201115 22:03:28.612"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:28.306" endtime="20201115 22:03:28.612"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:28.616" level="INFO">${RESULT} = [{'time': 0.020610917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7598000000000613e-05, 'source_diff': 1.7598000000000613e-05}, {'time': 0.020873111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:28.613" endtime="20201115 22:03:28.616"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:28.630" level="INFO">${OVERHEAD} = {'diff': [1.7598000000000613e-05, 1.763899999999985e-05, 1.7556000000001903e-05, 1.761099999999724e-05, 1.761100000000071e-05, 1.761099999999724e-05, 1.7612000000000183e-05, 1.765299999999942e-05, 1.7...</msg>
<status status="PASS" starttime="20201115 22:03:28.617" endtime="20201115 22:03:28.630"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:28.634" level="INFO">NAME: 00-overhead-19-set</msg>
<status status="PASS" starttime="20201115 22:03:28.633" endtime="20201115 22:03:28.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:28.637" level="INFO">VALUE: [1.7598000000000613e-05, 1.763899999999985e-05, 1.7556000000001903e-05, 1.761099999999724e-05, 1.761100000000071e-05, 1.761099999999724e-05, 1.7612000000000183e-05, 1.765299999999942e-05, 1.759699999999767e-05, 1.762500000000028e-05, 1.765299999999942e-05, 1.761100000000071e-05, 1.759700000000114e-05, 1.755499999999896e-05, 1.765299999999942e-05, 1.761100000000071e-05, 1.759700000000114e-05, 1.7555999999998434e-05, 1.761100000000071e-05, 1.7584000000001043e-05, 1.762500000000028e-05, 1.769499999999813e-05, 1.761100000000071e-05, 1.761100000000071e-05, 1.758300000000157e-05, 1.758300000000157e-05, 1.759699999999767e-05, 1.758300000000157e-05, 1.765299999999942e-05, 1.7598000000000613e-05, 1.7612000000000183e-05, 1.7583999999997574e-05, 1.761100000000071e-05, 1.763899999999985e-05, 1.7541999999998864e-05, 1.7584000000001043e-05, 1.762500000000028e-05, 1.7598000000000613e-05, 1.761099999999724e-05, 1.761099999999724e-05, 1.7556000000001903e-05, 1.761099999999377e-05, 1.7612000000000183e-05, 1.761100000000071e-05, 1.762500000000028e-05, 1.7598000000000613e-05, 1.761100000000071e-05, 1.761100000000071e-05, 1.762500000000028e-05, 1.761100000000071e-05]</msg>
<status status="PASS" starttime="20201115 22:03:28.635" endtime="20201115 22:03:28.637"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:28.631" endtime="20201115 22:03:28.637"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:28.640" endtime="20201115 22:03:28.641"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:28.643" endtime="20201115 22:03:28.662"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:28.641" endtime="20201115 22:03:28.663"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:28.638" endtime="20201115 22:03:28.663"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:28.267" endtime="20201115 22:03:28.664"></status>
</kw>
<msg timestamp="20201115 22:03:28.664" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:28.673" endtime="20201115 22:03:28.695"></status>
</kw>
<msg timestamp="20201115 22:03:28.695" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:28.672" endtime="20201115 22:03:28.695"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:28.698" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:28.696" endtime="20201115 22:03:28.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:28.699" endtime="20201115 22:03:28.701"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:28.669" endtime="20201115 22:03:28.702"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:28.667" endtime="20201115 22:03:28.702"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:28.708" endtime="20201115 22:03:28.994"></status>
</kw>
<msg timestamp="20201115 22:03:28.997" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020400792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020418333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:28.707" endtime="20201115 22:03:28.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:29.005" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020400792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020418333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:28.998" endtime="20201115 22:03:29.006"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:29.006" endtime="20201115 22:03:29.008"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:28.704" endtime="20201115 22:03:29.008"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:28.703" endtime="20201115 22:03:29.009"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:29.013" level="INFO">${RESULT} = [{'time': 0.020418333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.754099999999939e-05, 'source_diff': 1.754099999999939e-05}, {'time': 0.020679792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:29.010" endtime="20201115 22:03:29.013"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:29.027" level="INFO">${OVERHEAD} = {'diff': [1.754099999999939e-05, 1.761099999999724e-05, 1.759700000000114e-05, 1.761100000000071e-05, 1.759699999999767e-05, 1.761100000000071e-05, 1.759700000000114e-05, 1.762500000000028e-05, 1.7610...</msg>
<status status="PASS" starttime="20201115 22:03:29.014" endtime="20201115 22:03:29.027"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:29.031" level="INFO">NAME: 00-overhead-19-set</msg>
<status status="PASS" starttime="20201115 22:03:29.030" endtime="20201115 22:03:29.031"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:29.033" level="INFO">VALUE: [1.754099999999939e-05, 1.761099999999724e-05, 1.759700000000114e-05, 1.761100000000071e-05, 1.759699999999767e-05, 1.761100000000071e-05, 1.759700000000114e-05, 1.762500000000028e-05, 1.761099999999724e-05, 1.7570000000001473e-05, 1.7570000000001473e-05, 1.759700000000114e-05, 1.765299999999942e-05, 1.7598000000000613e-05, 1.755499999999896e-05, 1.761100000000071e-05, 1.761100000000071e-05, 1.762500000000028e-05, 1.7612000000000183e-05, 1.761100000000071e-05, 1.7598000000000613e-05, 1.761100000000071e-05, 1.761100000000071e-05, 1.759700000000114e-05, 1.763899999999985e-05, 1.7570000000001473e-05, 1.7651999999999946e-05, 1.761099999999724e-05, 1.761100000000071e-05, 1.7569999999998004e-05, 1.763899999999985e-05, 1.761099999999724e-05, 1.761100000000071e-05, 1.759700000000114e-05, 1.759700000000114e-05, 1.759699999999767e-05, 1.761100000000071e-05, 1.763899999999985e-05, 1.759700000000114e-05, 1.7598000000000613e-05, 1.761100000000071e-05, 1.7598000000000613e-05, 1.7612000000000183e-05, 1.761100000000071e-05, 1.761100000000071e-05, 1.761100000000071e-05, 1.762500000000028e-05, 1.765299999999942e-05, 1.761100000000071e-05, 1.7612000000000183e-05]</msg>
<status status="PASS" starttime="20201115 22:03:29.032" endtime="20201115 22:03:29.034"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.027" endtime="20201115 22:03:29.034"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:29.037" endtime="20201115 22:03:29.038"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:29.040" endtime="20201115 22:03:29.060"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.039" endtime="20201115 22:03:29.060"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.035" endtime="20201115 22:03:29.061"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:28.665" endtime="20201115 22:03:29.061"></status>
</kw>
<msg timestamp="20201115 22:03:29.061" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:29.070" endtime="20201115 22:03:29.092"></status>
</kw>
<msg timestamp="20201115 22:03:29.092" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:29.069" endtime="20201115 22:03:29.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:29.094" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:29.093" endtime="20201115 22:03:29.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:29.096" endtime="20201115 22:03:29.098"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.066" endtime="20201115 22:03:29.099"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.064" endtime="20201115 22:03:29.099"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:29.106" endtime="20201115 22:03:29.390"></status>
</kw>
<msg timestamp="20201115 22:03:29.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019930486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019948111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:29.104" endtime="20201115 22:03:29.394"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:29.402" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019930486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019948111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:29.395" endtime="20201115 22:03:29.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:29.403" endtime="20201115 22:03:29.404"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.102" endtime="20201115 22:03:29.405"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.100" endtime="20201115 22:03:29.405"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:29.410" level="INFO">${RESULT} = [{'time': 0.019948111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.762500000000028e-05, 'source_diff': 1.762500000000028e-05}, {'time': 0.020209639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:29.406" endtime="20201115 22:03:29.410"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:29.424" level="INFO">${OVERHEAD} = {'diff': [1.762500000000028e-05, 1.7570000000001473e-05, 1.761100000000071e-05, 1.762500000000028e-05, 1.765300000000289e-05, 1.759699999999767e-05, 1.761100000000071e-05, 1.761100000000071e-05, 1.761...</msg>
<status status="PASS" starttime="20201115 22:03:29.411" endtime="20201115 22:03:29.424"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:29.429" level="INFO">NAME: 00-overhead-19-set</msg>
<status status="PASS" starttime="20201115 22:03:29.428" endtime="20201115 22:03:29.429"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:29.431" level="INFO">VALUE: [1.762500000000028e-05, 1.7570000000001473e-05, 1.761100000000071e-05, 1.762500000000028e-05, 1.765300000000289e-05, 1.759699999999767e-05, 1.761100000000071e-05, 1.761100000000071e-05, 1.761099999999724e-05, 1.763899999999985e-05, 1.763899999999985e-05, 1.762500000000028e-05, 1.762500000000028e-05, 1.761099999999724e-05, 1.761099999999724e-05, 1.755499999999896e-05, 1.761100000000071e-05, 1.7584000000001043e-05, 1.759700000000114e-05, 1.761100000000071e-05, 1.759700000000114e-05, 1.758300000000157e-05, 1.7612000000000183e-05, 1.759699999999767e-05, 1.761100000000071e-05, 1.766700000000246e-05, 1.759700000000114e-05, 1.755499999999896e-05, 1.759700000000114e-05, 1.761100000000071e-05, 1.762500000000028e-05, 1.761100000000071e-05, 1.761100000000071e-05, 1.759699999999767e-05, 1.759700000000114e-05, 1.762500000000028e-05, 1.762500000000028e-05, 1.7665999999999515e-05, 1.7612000000000183e-05, 1.761100000000071e-05, 1.766700000000246e-05, 1.7598000000000613e-05, 1.761100000000071e-05, 1.759699999999767e-05, 1.7612000000000183e-05, 1.765299999999942e-05, 1.761100000000071e-05, 1.761100000000071e-05, 1.758300000000157e-05, 1.762499999999334e-05]</msg>
<status status="PASS" starttime="20201115 22:03:29.430" endtime="20201115 22:03:29.432"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.425" endtime="20201115 22:03:29.432"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:29.435" endtime="20201115 22:03:29.436"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:29.438" endtime="20201115 22:03:29.458"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.437" endtime="20201115 22:03:29.458"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.433" endtime="20201115 22:03:29.459"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.062" endtime="20201115 22:03:29.459"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.470" endtime="20201115 22:03:29.459"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.469" endtime="20201115 22:03:29.460"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:29.462" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:29.471" endtime="20201115 22:03:29.493"></status>
</kw>
<msg timestamp="20201115 22:03:29.494" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:29.469" endtime="20201115 22:03:29.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:29.496" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:29.495" endtime="20201115 22:03:29.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:29.498" endtime="20201115 22:03:29.499"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.467" endtime="20201115 22:03:29.500"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.465" endtime="20201115 22:03:29.500"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:29.506" endtime="20201115 22:03:29.792"></status>
</kw>
<msg timestamp="20201115 22:03:29.795" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023102972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023121347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:29.505" endtime="20201115 22:03:29.795"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:29.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023102972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023121347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:29.796" endtime="20201115 22:03:29.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:29.804" endtime="20201115 22:03:29.806"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.502" endtime="20201115 22:03:29.806"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.501" endtime="20201115 22:03:29.807"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:29.811" level="INFO">${RESULT} = [{'time': 0.023121347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.837500000000103e-05, 'source_diff': 1.837500000000103e-05}, {'time': 0.023401667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:29.808" endtime="20201115 22:03:29.811"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:29.825" level="INFO">${OVERHEAD} = {'diff': [1.837500000000103e-05, 1.836100000000146e-05, 1.837499999999756e-05, 1.836100000000146e-05, 1.834699999999842e-05, 1.836100000000146e-05, 1.837499999999756e-05, 1.836099999999799e-05, 1.8402...</msg>
<status status="PASS" starttime="20201115 22:03:29.812" endtime="20201115 22:03:29.825"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:29.829" level="INFO">NAME: 00-overhead-20-set</msg>
<status status="PASS" starttime="20201115 22:03:29.828" endtime="20201115 22:03:29.829"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:29.837" level="INFO">VALUE: [1.837500000000103e-05, 1.836100000000146e-05, 1.837499999999756e-05, 1.836100000000146e-05, 1.834699999999842e-05, 1.836100000000146e-05, 1.837499999999756e-05, 1.836099999999799e-05, 1.8402000000000696e-05, 1.840300000000017e-05, 1.836099999999799e-05, 1.837500000000103e-05, 1.836099999999799e-05, 1.837499999999756e-05, 1.836100000000146e-05, 1.836099999999799e-05, 1.844499999999888e-05, 1.83890000000006e-05, 1.833299999999885e-05, 1.837500000000103e-05, 1.837500000000103e-05, 1.834699999999842e-05, 1.836099999999799e-05, 1.837500000000103e-05, 1.8333999999998324e-05, 1.836100000000146e-05, 1.837500000000103e-05, 1.837499999999756e-05, 1.836099999999799e-05, 1.841699999999974e-05, 1.837500000000103e-05, 1.837499999999409e-05, 1.837499999999409e-05, 1.83890000000006e-05, 1.836100000000146e-05, 1.837500000000103e-05, 1.8334000000001793e-05, 1.833299999999538e-05, 1.836100000000146e-05, 1.837500000000103e-05, 1.834700000000189e-05, 1.836100000000146e-05, 1.8348000000001363e-05, 1.836099999999452e-05, 1.83890000000006e-05, 1.83890000000006e-05, 1.837499999999409e-05, 1.833300000000232e-05, 1.836100000000146e-05, 1.83890000000006e-05]</msg>
<status status="PASS" starttime="20201115 22:03:29.830" endtime="20201115 22:03:29.837"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.826" endtime="20201115 22:03:29.838"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:29.840" endtime="20201115 22:03:29.841"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:29.843" endtime="20201115 22:03:29.863"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.842" endtime="20201115 22:03:29.863"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.838" endtime="20201115 22:03:29.864"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.463" endtime="20201115 22:03:29.864"></status>
</kw>
<msg timestamp="20201115 22:03:29.864" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:29.873" endtime="20201115 22:03:29.899"></status>
</kw>
<msg timestamp="20201115 22:03:29.899" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:29.872" endtime="20201115 22:03:29.899"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:29.902" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:29.900" endtime="20201115 22:03:29.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:29.903" endtime="20201115 22:03:29.905"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.869" endtime="20201115 22:03:29.906"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.867" endtime="20201115 22:03:29.906"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:29.912" endtime="20201115 22:03:30.198"></status>
</kw>
<msg timestamp="20201115 22:03:30.201" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020497903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020516278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:29.911" endtime="20201115 22:03:30.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:30.208" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020497903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020516278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:30.202" endtime="20201115 22:03:30.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:30.210" endtime="20201115 22:03:30.211"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.908" endtime="20201115 22:03:30.212"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.907" endtime="20201115 22:03:30.212"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:30.216" level="INFO">${RESULT} = [{'time': 0.020516278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.837499999999756e-05, 'source_diff': 1.837499999999756e-05}, {'time': 0.020798111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:30.213" endtime="20201115 22:03:30.217"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:30.230" level="INFO">${OVERHEAD} = {'diff': [1.837499999999756e-05, 1.836100000000146e-05, 1.837500000000103e-05, 1.83890000000006e-05, 1.837500000000103e-05, 1.840300000000017e-05, 1.8387999999997656e-05, 1.836099999999799e-05, 1.8389...</msg>
<status status="PASS" starttime="20201115 22:03:30.217" endtime="20201115 22:03:30.231"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:30.235" level="INFO">NAME: 00-overhead-20-set</msg>
<status status="PASS" starttime="20201115 22:03:30.234" endtime="20201115 22:03:30.235"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:30.237" level="INFO">VALUE: [1.837499999999756e-05, 1.836100000000146e-05, 1.837500000000103e-05, 1.83890000000006e-05, 1.837500000000103e-05, 1.840300000000017e-05, 1.8387999999997656e-05, 1.836099999999799e-05, 1.83890000000006e-05, 1.836100000000146e-05, 1.836100000000146e-05, 1.8388000000001126e-05, 1.834699999999842e-05, 1.833300000000232e-05, 1.8320000000002223e-05, 1.840300000000017e-05, 1.837499999999756e-05, 1.836099999999799e-05, 1.83890000000006e-05, 1.837500000000103e-05, 1.837500000000103e-05, 1.836100000000146e-05, 1.837500000000103e-05, 1.836099999999799e-05, 1.833299999999885e-05, 1.8388000000001126e-05, 1.83890000000006e-05, 1.836099999999799e-05, 1.837500000000103e-05, 1.836099999999799e-05, 1.837500000000103e-05, 1.834700000000189e-05, 1.837499999999756e-05, 1.8387999999997656e-05, 1.83890000000006e-05, 1.83890000000006e-05, 1.836099999999799e-05, 1.836100000000146e-05, 1.833299999999885e-05, 1.836100000000146e-05, 1.840300000000017e-05, 1.8319999999995285e-05, 1.829100000000361e-05, 1.837500000000103e-05, 1.837500000000103e-05, 1.837500000000103e-05, 1.8416000000000265e-05, 1.836100000000146e-05, 1.837500000000103e-05, 1.836099999999452e-05]</msg>
<status status="PASS" starttime="20201115 22:03:30.236" endtime="20201115 22:03:30.238"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:30.231" endtime="20201115 22:03:30.238"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:30.240" endtime="20201115 22:03:30.242"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:30.244" endtime="20201115 22:03:30.263"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:30.242" endtime="20201115 22:03:30.264"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:30.239" endtime="20201115 22:03:30.264"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.865" endtime="20201115 22:03:30.265"></status>
</kw>
<msg timestamp="20201115 22:03:30.265" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:30.274" endtime="20201115 22:03:30.296"></status>
</kw>
<msg timestamp="20201115 22:03:30.297" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:30.272" endtime="20201115 22:03:30.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:30.299" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:30.298" endtime="20201115 22:03:30.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:30.300" endtime="20201115 22:03:30.303"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:30.270" endtime="20201115 22:03:30.303"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:30.268" endtime="20201115 22:03:30.304"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:30.310" endtime="20201115 22:03:30.596"></status>
</kw>
<msg timestamp="20201115 22:03:30.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020152125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020170528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:30.308" endtime="20201115 22:03:30.599"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:30.607" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020152125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020170528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:30.600" endtime="20201115 22:03:30.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:30.608" endtime="20201115 22:03:30.610"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:30.306" endtime="20201115 22:03:30.610"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:30.304" endtime="20201115 22:03:30.611"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:30.615" level="INFO">${RESULT} = [{'time': 0.020170528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.840300000000017e-05, 'source_diff': 1.840300000000017e-05}, {'time': 0.020452778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:30.611" endtime="20201115 22:03:30.615"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:30.629" level="INFO">${OVERHEAD} = {'diff': [1.840300000000017e-05, 1.834700000000189e-05, 1.840300000000017e-05, 1.837500000000103e-05, 1.837500000000103e-05, 1.837499999999756e-05, 1.83890000000006e-05, 1.836099999999799e-05, 1.83480...</msg>
<status status="PASS" starttime="20201115 22:03:30.616" endtime="20201115 22:03:30.629"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:30.633" level="INFO">NAME: 00-overhead-20-set</msg>
<status status="PASS" starttime="20201115 22:03:30.632" endtime="20201115 22:03:30.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:30.636" level="INFO">VALUE: [1.840300000000017e-05, 1.834700000000189e-05, 1.840300000000017e-05, 1.837500000000103e-05, 1.837500000000103e-05, 1.837499999999756e-05, 1.83890000000006e-05, 1.836099999999799e-05, 1.8348000000001363e-05, 1.834699999999842e-05, 1.836100000000146e-05, 1.837500000000103e-05, 1.834700000000189e-05, 1.837500000000103e-05, 1.837500000000103e-05, 1.837500000000103e-05, 1.837500000000103e-05, 1.83890000000006e-05, 1.8348000000001363e-05, 1.8444000000002875e-05, 1.8319999999998754e-05, 1.83890000000006e-05, 1.83890000000006e-05, 1.8348000000001363e-05, 1.836100000000146e-05, 1.836099999999799e-05, 1.836099999999799e-05, 1.838899999999713e-05, 1.834699999999842e-05, 1.837500000000103e-05, 1.83890000000006e-05, 1.840300000000017e-05, 1.837499999999756e-05, 1.83890000000006e-05, 1.8443999999999405e-05, 1.836099999999799e-05, 1.837500000000103e-05, 1.837500000000103e-05, 1.834700000000189e-05, 1.837500000000103e-05, 1.836100000000146e-05, 1.836099999999452e-05, 1.83890000000006e-05, 1.837500000000103e-05, 1.8458000000005914e-05, 1.837500000000103e-05, 1.8348000000001363e-05, 1.83890000000006e-05, 1.8348000000001363e-05, 1.837499999999409e-05]</msg>
<status status="PASS" starttime="20201115 22:03:30.634" endtime="20201115 22:03:30.636"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:30.630" endtime="20201115 22:03:30.637"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:30.639" endtime="20201115 22:03:30.640"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:30.642" endtime="20201115 22:03:30.662"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:30.641" endtime="20201115 22:03:30.662"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:30.637" endtime="20201115 22:03:30.663"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:30.265" endtime="20201115 22:03:30.663"></status>
</kw>
<msg timestamp="20201115 22:03:30.663" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:30.672" endtime="20201115 22:03:30.697"></status>
</kw>
<msg timestamp="20201115 22:03:30.697" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:30.671" endtime="20201115 22:03:30.697"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:30.700" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:30.698" endtime="20201115 22:03:30.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:30.701" endtime="20201115 22:03:30.703"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:30.668" endtime="20201115 22:03:30.704"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:30.666" endtime="20201115 22:03:30.704"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:30.711" endtime="20201115 22:03:30.997"></status>
</kw>
<msg timestamp="20201115 22:03:31.000" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020720431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020738819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:30.709" endtime="20201115 22:03:31.000"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:31.008" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020720431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020738819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:31.001" endtime="20201115 22:03:31.008"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:31.009" endtime="20201115 22:03:31.011"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:30.707" endtime="20201115 22:03:31.011"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:30.705" endtime="20201115 22:03:31.012"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:31.016" level="INFO">${RESULT} = [{'time': 0.020738819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8387999999997656e-05, 'source_diff': 1.8387999999997656e-05}, {'time': 0.021018194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:31.013" endtime="20201115 22:03:31.016"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:31.031" level="INFO">${OVERHEAD} = {'diff': [1.8387999999997656e-05, 1.836100000000146e-05, 1.837499999999756e-05, 1.836099999999799e-05, 1.836099999999799e-05, 1.834700000000189e-05, 1.841699999999974e-05, 1.837500000000103e-05, 1.844...</msg>
<status status="PASS" starttime="20201115 22:03:31.017" endtime="20201115 22:03:31.031"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:31.035" level="INFO">NAME: 00-overhead-20-set</msg>
<status status="PASS" starttime="20201115 22:03:31.034" endtime="20201115 22:03:31.036"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:31.038" level="INFO">VALUE: [1.8387999999997656e-05, 1.836100000000146e-05, 1.837499999999756e-05, 1.836099999999799e-05, 1.836099999999799e-05, 1.834700000000189e-05, 1.841699999999974e-05, 1.837500000000103e-05, 1.844500000000235e-05, 1.83890000000006e-05, 1.831900000000275e-05, 1.8291999999999614e-05, 1.836100000000146e-05, 1.83890000000006e-05, 1.836100000000146e-05, 1.840300000000017e-05, 1.837499999999756e-05, 1.834699999999842e-05, 1.837500000000103e-05, 1.8305999999999184e-05, 1.837499999999756e-05, 1.8388000000001126e-05, 1.834700000000189e-05, 1.837500000000103e-05, 1.8348000000001363e-05, 1.833300000000232e-05, 1.836100000000146e-05, 1.8416000000000265e-05, 1.837499999999756e-05, 1.83890000000006e-05, 1.837500000000103e-05, 1.836099999999799e-05, 1.834699999999842e-05, 1.834699999999842e-05, 1.837500000000103e-05, 1.841699999999974e-05, 1.833299999999885e-05, 1.837500000000103e-05, 1.837500000000103e-05, 1.840300000000017e-05, 1.834700000000189e-05, 1.83890000000006e-05, 1.837500000000103e-05, 1.8388000000001126e-05, 1.836100000000146e-05, 1.834699999999495e-05, 1.83890000000006e-05, 1.83890000000006e-05, 1.837500000000103e-05, 1.837499999999409e-05]</msg>
<status status="PASS" starttime="20201115 22:03:31.036" endtime="20201115 22:03:31.038"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:31.032" endtime="20201115 22:03:31.039"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:31.041" endtime="20201115 22:03:31.042"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:31.044" endtime="20201115 22:03:31.064"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:31.043" endtime="20201115 22:03:31.064"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:31.039" endtime="20201115 22:03:31.065"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:30.664" endtime="20201115 22:03:31.065"></status>
</kw>
<msg timestamp="20201115 22:03:31.065" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:31.074" endtime="20201115 22:03:31.099"></status>
</kw>
<msg timestamp="20201115 22:03:31.099" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:31.072" endtime="20201115 22:03:31.100"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:31.102" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:31.100" endtime="20201115 22:03:31.102"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:31.103" endtime="20201115 22:03:31.105"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:31.070" endtime="20201115 22:03:31.106"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:31.068" endtime="20201115 22:03:31.106"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:31.113" endtime="20201115 22:03:31.398"></status>
</kw>
<msg timestamp="20201115 22:03:31.401" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020349583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020367944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:31.111" endtime="20201115 22:03:31.402"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:31.410" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020349583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020367944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:31.403" endtime="20201115 22:03:31.410"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:31.411" endtime="20201115 22:03:31.413"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:31.109" endtime="20201115 22:03:31.413"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:31.107" endtime="20201115 22:03:31.414"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:31.418" level="INFO">${RESULT} = [{'time': 0.020367944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.836099999999799e-05, 'source_diff': 1.836099999999799e-05}, {'time': 0.020649431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:31.414" endtime="20201115 22:03:31.418"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:31.431" level="INFO">${OVERHEAD} = {'diff': [1.836099999999799e-05, 1.83890000000006e-05, 1.8388000000001126e-05, 1.837500000000103e-05, 1.837499999999756e-05, 1.834699999999842e-05, 1.837500000000103e-05, 1.836100000000146e-05, 1.8429...</msg>
<status status="PASS" starttime="20201115 22:03:31.419" endtime="20201115 22:03:31.432"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:31.436" level="INFO">NAME: 00-overhead-20-set</msg>
<status status="PASS" starttime="20201115 22:03:31.435" endtime="20201115 22:03:31.436"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:31.438" level="INFO">VALUE: [1.836099999999799e-05, 1.83890000000006e-05, 1.8388000000001126e-05, 1.837500000000103e-05, 1.837499999999756e-05, 1.834699999999842e-05, 1.837500000000103e-05, 1.836100000000146e-05, 1.8429999999999835e-05, 1.837500000000103e-05, 1.843099999999931e-05, 1.836100000000146e-05, 1.841699999999974e-05, 1.834699999999842e-05, 1.836100000000146e-05, 1.836100000000146e-05, 1.836100000000146e-05, 1.8388000000001126e-05, 1.831900000000275e-05, 1.836099999999799e-05, 1.837499999999756e-05, 1.837500000000103e-05, 1.836100000000146e-05, 1.837500000000103e-05, 1.834699999999842e-05, 1.83890000000006e-05, 1.8333999999998324e-05, 1.8429999999999835e-05, 1.836100000000146e-05, 1.837500000000103e-05, 1.837500000000103e-05, 1.837500000000103e-05, 1.83890000000006e-05, 1.83890000000006e-05, 1.8402000000000696e-05, 1.836100000000146e-05, 1.834700000000189e-05, 1.83890000000006e-05, 1.834699999999842e-05, 1.836100000000146e-05, 1.83890000000006e-05, 1.836100000000146e-05, 1.837500000000103e-05, 1.836099999999452e-05, 1.837500000000103e-05, 1.840300000000017e-05, 1.837500000000103e-05, 1.836100000000146e-05, 1.836100000000146e-05, 1.8334000000001793e-05]</msg>
<status status="PASS" starttime="20201115 22:03:31.437" endtime="20201115 22:03:31.439"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:31.432" endtime="20201115 22:03:31.439"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:31.441" endtime="20201115 22:03:31.443"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:31.445" endtime="20201115 22:03:31.464"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:31.443" endtime="20201115 22:03:31.465"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:31.440" endtime="20201115 22:03:31.465"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:31.066" endtime="20201115 22:03:31.466"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.461" endtime="20201115 22:03:31.466"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.460" endtime="20201115 22:03:31.466"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:31.468" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:31.477" endtime="20201115 22:03:31.501"></status>
</kw>
<msg timestamp="20201115 22:03:31.502" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:31.476" endtime="20201115 22:03:31.502"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:31.504" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:31.503" endtime="20201115 22:03:31.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:31.505" endtime="20201115 22:03:31.507"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:31.473" endtime="20201115 22:03:31.508"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:31.471" endtime="20201115 22:03:31.508"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:31.515" endtime="20201115 22:03:31.800"></status>
</kw>
<msg timestamp="20201115 22:03:31.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022598514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022617611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:31.513" endtime="20201115 22:03:31.803"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:31.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022598514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022617611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:31.804" endtime="20201115 22:03:31.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:31.812" endtime="20201115 22:03:31.814"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:31.511" endtime="20201115 22:03:31.814"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:31.509" endtime="20201115 22:03:31.815"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:31.819" level="INFO">${RESULT} = [{'time': 0.022617611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.909699999999917e-05, 'source_diff': 1.909699999999917e-05}, {'time': 0.022916292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:31.816" endtime="20201115 22:03:31.819"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:31.833" level="INFO">${OVERHEAD} = {'diff': [1.909699999999917e-05, 1.912500000000178e-05, 1.912499999999831e-05, 1.912500000000178e-05, 1.915300000000092e-05, 1.912500000000178e-05, 1.912500000000178e-05, 1.912500000000178e-05, 1.9125...</msg>
<status status="PASS" starttime="20201115 22:03:31.820" endtime="20201115 22:03:31.833"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:31.837" level="INFO">NAME: 00-overhead-21-set</msg>
<status status="PASS" starttime="20201115 22:03:31.836" endtime="20201115 22:03:31.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:31.839" level="INFO">VALUE: [1.909699999999917e-05, 1.912500000000178e-05, 1.912499999999831e-05, 1.912500000000178e-05, 1.915300000000092e-05, 1.912500000000178e-05, 1.912500000000178e-05, 1.912500000000178e-05, 1.912500000000178e-05, 1.911100000000221e-05, 1.9166000000001016e-05, 1.912500000000178e-05, 1.912500000000178e-05, 1.9098000000002113e-05, 1.916700000000049e-05, 1.915300000000092e-05, 1.915300000000092e-05, 1.913900000000135e-05, 1.912499999999831e-05, 1.915300000000092e-05, 1.913899999999788e-05, 1.913900000000135e-05, 1.912500000000178e-05, 1.911099999999874e-05, 1.911099999999874e-05, 1.912499999999831e-05, 1.9207999999999725e-05, 1.9152000000001446e-05, 1.913900000000135e-05, 1.9138000000001876e-05, 1.908300000000307e-05, 1.913900000000135e-05, 1.9180000000000585e-05, 1.9207999999999725e-05, 1.912500000000178e-05, 1.913900000000135e-05, 1.916700000000049e-05, 1.913899999999441e-05, 1.912500000000178e-05, 1.913900000000135e-05, 1.915300000000092e-05, 1.912500000000178e-05, 1.912499999999484e-05, 1.913899999999441e-05, 1.912499999999484e-05, 1.912500000000178e-05, 1.916700000000049e-05, 1.912499999999484e-05, 1.912500000000178e-05, 1.912500000000178e-05]</msg>
<status status="PASS" starttime="20201115 22:03:31.838" endtime="20201115 22:03:31.840"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:31.833" endtime="20201115 22:03:31.840"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:31.843" endtime="20201115 22:03:31.844"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:31.846" endtime="20201115 22:03:31.865"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:31.844" endtime="20201115 22:03:31.866"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:31.841" endtime="20201115 22:03:31.866"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:31.469" endtime="20201115 22:03:31.867"></status>
</kw>
<msg timestamp="20201115 22:03:31.867" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:31.876" endtime="20201115 22:03:31.902"></status>
</kw>
<msg timestamp="20201115 22:03:31.902" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:31.874" endtime="20201115 22:03:31.902"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:31.905" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:31.903" endtime="20201115 22:03:31.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:31.906" endtime="20201115 22:03:31.909"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:31.872" endtime="20201115 22:03:31.909"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:31.870" endtime="20201115 22:03:31.910"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:31.916" endtime="20201115 22:03:32.201"></status>
</kw>
<msg timestamp="20201115 22:03:32.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020165792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020184917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:31.915" endtime="20201115 22:03:32.204"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:32.212" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020165792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020184917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:32.205" endtime="20201115 22:03:32.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:32.213" endtime="20201115 22:03:32.215"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:31.912" endtime="20201115 22:03:32.215"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:31.910" endtime="20201115 22:03:32.216"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:32.220" level="INFO">${RESULT} = [{'time': 0.020184917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.912500000000178e-05, 'source_diff': 1.912500000000178e-05}, {'time': 0.020485625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:32.216" endtime="20201115 22:03:32.220"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:32.233" level="INFO">${OVERHEAD} = {'diff': [1.912500000000178e-05, 1.916700000000049e-05, 1.913900000000135e-05, 1.912499999999831e-05, 1.909699999999917e-05, 1.916700000000049e-05, 1.913899999999788e-05, 1.915299999999745e-05, 1.9124...</msg>
<status status="PASS" starttime="20201115 22:03:32.221" endtime="20201115 22:03:32.234"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:32.238" level="INFO">NAME: 00-overhead-21-set</msg>
<status status="PASS" starttime="20201115 22:03:32.237" endtime="20201115 22:03:32.238"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:32.240" level="INFO">VALUE: [1.912500000000178e-05, 1.916700000000049e-05, 1.913900000000135e-05, 1.912499999999831e-05, 1.909699999999917e-05, 1.916700000000049e-05, 1.913899999999788e-05, 1.915299999999745e-05, 1.912499999999831e-05, 1.912500000000178e-05, 1.912499999999831e-05, 1.9180000000000585e-05, 1.912499999999831e-05, 1.912500000000178e-05, 1.913899999999788e-05, 1.912499999999831e-05, 1.911099999999874e-05, 1.912500000000178e-05, 1.913900000000135e-05, 1.913899999999788e-05, 1.909700000000264e-05, 1.9194000000000155e-05, 1.912500000000178e-05, 1.915300000000092e-05, 1.916700000000049e-05, 1.915299999999745e-05, 1.9151999999997976e-05, 1.912500000000178e-05, 1.913899999999788e-05, 1.9152000000001446e-05, 1.912500000000178e-05, 1.916700000000049e-05, 1.913899999999788e-05, 1.915300000000092e-05, 1.913900000000135e-05, 1.912499999999831e-05, 1.913899999999788e-05, 1.912499999999484e-05, 1.912500000000178e-05, 1.913900000000135e-05, 1.9166000000001016e-05, 1.913900000000135e-05, 1.913900000000135e-05, 1.9084000000002543e-05, 1.915299999999398e-05, 1.912500000000178e-05, 1.9112000000001683e-05, 1.911100000000221e-05, 1.912499999999484e-05, 1.911100000000221e-05]</msg>
<status status="PASS" starttime="20201115 22:03:32.239" endtime="20201115 22:03:32.241"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:32.234" endtime="20201115 22:03:32.241"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:32.243" endtime="20201115 22:03:32.245"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:32.247" endtime="20201115 22:03:32.266"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:32.245" endtime="20201115 22:03:32.267"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:32.242" endtime="20201115 22:03:32.267"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:31.868" endtime="20201115 22:03:32.268"></status>
</kw>
<msg timestamp="20201115 22:03:32.268" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:32.277" endtime="20201115 22:03:32.302"></status>
</kw>
<msg timestamp="20201115 22:03:32.303" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:32.275" endtime="20201115 22:03:32.303"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:32.305" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:32.304" endtime="20201115 22:03:32.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:32.307" endtime="20201115 22:03:32.309"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:32.272" endtime="20201115 22:03:32.310"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:32.270" endtime="20201115 22:03:32.310"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:32.316" endtime="20201115 22:03:32.603"></status>
</kw>
<msg timestamp="20201115 22:03:32.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020602347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020621472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:32.315" endtime="20201115 22:03:32.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:32.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020602347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020621472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:32.607" endtime="20201115 22:03:32.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:32.615" endtime="20201115 22:03:32.616"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:32.312" endtime="20201115 22:03:32.617"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:32.311" endtime="20201115 22:03:32.617"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:32.621" level="INFO">${RESULT} = [{'time': 0.020621472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.912499999999831e-05, 'source_diff': 1.912499999999831e-05}, {'time': 0.020924083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:32.618" endtime="20201115 22:03:32.622"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:32.636" level="INFO">${OVERHEAD} = {'diff': [1.912499999999831e-05, 1.912499999999831e-05, 1.912500000000178e-05, 1.911100000000221e-05, 1.9137999999998406e-05, 1.913900000000135e-05, 1.913899999999788e-05, 1.912499999999831e-05, 1.913...</msg>
<status status="PASS" starttime="20201115 22:03:32.622" endtime="20201115 22:03:32.636"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:32.641" level="INFO">NAME: 00-overhead-21-set</msg>
<status status="PASS" starttime="20201115 22:03:32.640" endtime="20201115 22:03:32.641"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:32.643" level="INFO">VALUE: [1.912499999999831e-05, 1.912499999999831e-05, 1.912500000000178e-05, 1.911100000000221e-05, 1.9137999999998406e-05, 1.913900000000135e-05, 1.913899999999788e-05, 1.912499999999831e-05, 1.913900000000135e-05, 1.912499999999831e-05, 1.913900000000135e-05, 1.912499999999831e-05, 1.912499999999831e-05, 1.915300000000092e-05, 1.905499999999699e-05, 1.92089999999992e-05, 1.913899999999788e-05, 1.913900000000135e-05, 1.912499999999831e-05, 1.913900000000135e-05, 1.915300000000092e-05, 1.913899999999788e-05, 1.913900000000135e-05, 1.912500000000178e-05, 1.912499999999831e-05, 1.912500000000178e-05, 1.909699999999917e-05, 1.912500000000178e-05, 1.912499999999831e-05, 1.913899999999788e-05, 1.913900000000135e-05, 1.915300000000092e-05, 1.912499999999831e-05, 1.912499999999831e-05, 1.913900000000135e-05, 1.913899999999788e-05, 1.915300000000092e-05, 1.915300000000092e-05, 1.913900000000135e-05, 1.908300000000307e-05, 1.913899999999441e-05, 1.913900000000135e-05, 1.919499999999963e-05, 1.912500000000178e-05, 1.916700000000049e-05, 1.915300000000092e-05, 1.911100000000221e-05, 1.912500000000178e-05, 1.9207999999999725e-05, 1.912499999999484e-05]</msg>
<status status="PASS" starttime="20201115 22:03:32.642" endtime="20201115 22:03:32.643"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:32.637" endtime="20201115 22:03:32.644"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:32.646" endtime="20201115 22:03:32.647"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:32.649" endtime="20201115 22:03:32.669"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:32.648" endtime="20201115 22:03:32.670"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:32.644" endtime="20201115 22:03:32.670"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:32.268" endtime="20201115 22:03:32.670"></status>
</kw>
<msg timestamp="20201115 22:03:32.671" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:32.680" endtime="20201115 22:03:32.705"></status>
</kw>
<msg timestamp="20201115 22:03:32.706" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:32.678" endtime="20201115 22:03:32.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:32.708" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:32.707" endtime="20201115 22:03:32.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:32.709" endtime="20201115 22:03:32.712"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:32.676" endtime="20201115 22:03:32.712"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:32.673" endtime="20201115 22:03:32.713"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:32.719" endtime="20201115 22:03:33.003"></status>
</kw>
<msg timestamp="20201115 22:03:33.007" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020988319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0210075, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:03:32.718" endtime="20201115 22:03:33.007"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:33.015" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020988319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0210075, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:03:33.008" endtime="20201115 22:03:33.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:33.016" endtime="20201115 22:03:33.017"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:32.715" endtime="20201115 22:03:33.018"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:32.713" endtime="20201115 22:03:33.018"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:33.023" level="INFO">${RESULT} = [{'time': 0.0210075, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.918100000000006e-05, 'source_diff': 1.918100000000006e-05}, {'time': 0.021308014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:03:33.019" endtime="20201115 22:03:33.023"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:33.036" level="INFO">${OVERHEAD} = {'diff': [1.918100000000006e-05, 1.915300000000092e-05, 1.913900000000135e-05, 1.912499999999831e-05, 1.912499999999831e-05, 1.9069999999999504e-05, 1.911100000000221e-05, 1.911100000000221e-05, 1.915...</msg>
<status status="PASS" starttime="20201115 22:03:33.024" endtime="20201115 22:03:33.036"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:33.041" level="INFO">NAME: 00-overhead-21-set</msg>
<status status="PASS" starttime="20201115 22:03:33.040" endtime="20201115 22:03:33.041"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:33.043" level="INFO">VALUE: [1.918100000000006e-05, 1.915300000000092e-05, 1.913900000000135e-05, 1.912499999999831e-05, 1.912499999999831e-05, 1.9069999999999504e-05, 1.911100000000221e-05, 1.911100000000221e-05, 1.915300000000092e-05, 1.9151999999997976e-05, 1.915300000000092e-05, 1.912499999999831e-05, 1.913899999999788e-05, 1.913899999999788e-05, 1.912500000000178e-05, 1.913900000000135e-05, 1.911100000000221e-05, 1.909699999999917e-05, 1.911099999999874e-05, 1.912500000000178e-05, 1.912500000000178e-05, 1.911099999999874e-05, 1.913900000000135e-05, 1.912499999999831e-05, 1.912499999999831e-05, 1.912499999999831e-05, 1.913900000000135e-05, 1.9180000000000585e-05, 1.913899999999788e-05, 1.911099999999874e-05, 1.911099999999874e-05, 1.912500000000178e-05, 1.909699999999917e-05, 1.913899999999788e-05, 1.90829999999996e-05, 1.9180000000000585e-05, 1.919499999999963e-05, 1.916700000000049e-05, 1.913900000000135e-05, 1.913900000000135e-05, 1.915300000000092e-05, 1.912499999999484e-05, 1.913900000000135e-05, 1.913900000000135e-05, 1.915300000000092e-05, 1.916700000000049e-05, 1.9180000000000585e-05, 1.913900000000135e-05, 1.912499999999484e-05, 1.912500000000178e-05]</msg>
<status status="PASS" starttime="20201115 22:03:33.042" endtime="20201115 22:03:33.043"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:33.037" endtime="20201115 22:03:33.044"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:33.046" endtime="20201115 22:03:33.048"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:33.050" endtime="20201115 22:03:33.069"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:33.049" endtime="20201115 22:03:33.070"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:33.045" endtime="20201115 22:03:33.071"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:32.671" endtime="20201115 22:03:33.071"></status>
</kw>
<msg timestamp="20201115 22:03:33.071" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:33.080" endtime="20201115 22:03:33.105"></status>
</kw>
<msg timestamp="20201115 22:03:33.106" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:33.078" endtime="20201115 22:03:33.106"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:33.108" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:33.107" endtime="20201115 22:03:33.109"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:33.109" endtime="20201115 22:03:33.112"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:33.076" endtime="20201115 22:03:33.112"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:33.074" endtime="20201115 22:03:33.113"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:33.119" endtime="20201115 22:03:33.405"></status>
</kw>
<msg timestamp="20201115 22:03:33.408" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020046375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020065528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:33.118" endtime="20201115 22:03:33.408"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:33.416" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020046375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020065528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:33.409" endtime="20201115 22:03:33.416"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:33.417" endtime="20201115 22:03:33.418"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:33.115" endtime="20201115 22:03:33.419"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:33.113" endtime="20201115 22:03:33.419"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:33.424" level="INFO">${RESULT} = [{'time': 0.020065528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.915299999999745e-05, 'source_diff': 1.915299999999745e-05}, {'time': 0.020364056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:33.420" endtime="20201115 22:03:33.424"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:33.437" level="INFO">${OVERHEAD} = {'diff': [1.915299999999745e-05, 1.9083999999999074e-05, 1.911099999999874e-05, 1.90829999999996e-05, 1.913900000000135e-05, 1.912500000000178e-05, 1.909699999999917e-05, 1.913900000000135e-05, 1.9124...</msg>
<status status="PASS" starttime="20201115 22:03:33.425" endtime="20201115 22:03:33.438"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:33.442" level="INFO">NAME: 00-overhead-21-set</msg>
<status status="PASS" starttime="20201115 22:03:33.441" endtime="20201115 22:03:33.442"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:33.444" level="INFO">VALUE: [1.915299999999745e-05, 1.9083999999999074e-05, 1.911099999999874e-05, 1.90829999999996e-05, 1.913900000000135e-05, 1.912500000000178e-05, 1.909699999999917e-05, 1.913900000000135e-05, 1.912499999999831e-05, 1.912499999999831e-05, 1.912500000000178e-05, 1.912499999999831e-05, 1.912499999999831e-05, 1.912500000000178e-05, 1.913900000000135e-05, 1.906900000000003e-05, 1.912500000000178e-05, 1.913900000000135e-05, 1.913899999999788e-05, 1.913900000000135e-05, 1.915300000000092e-05, 1.912499999999831e-05, 1.912499999999831e-05, 1.915300000000092e-05, 1.912500000000178e-05, 1.911099999999874e-05, 1.912499999999831e-05, 1.915299999999745e-05, 1.912500000000178e-05, 1.913899999999788e-05, 1.909699999999917e-05, 1.911100000000221e-05, 1.9151999999997976e-05, 1.90829999999996e-05, 1.912499999999831e-05, 1.912499999999831e-05, 1.912499999999831e-05, 1.913900000000135e-05, 1.915300000000092e-05, 1.912500000000178e-05, 1.913900000000135e-05, 1.913900000000135e-05, 1.912500000000178e-05, 1.9165999999994077e-05, 1.913899999999441e-05, 1.913900000000135e-05, 1.912499999999484e-05, 1.912500000000178e-05, 1.913900000000135e-05, 1.9098000000002113e-05]</msg>
<status status="PASS" starttime="20201115 22:03:33.443" endtime="20201115 22:03:33.445"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:33.438" endtime="20201115 22:03:33.446"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:33.448" endtime="20201115 22:03:33.449"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:33.451" endtime="20201115 22:03:33.471"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:33.450" endtime="20201115 22:03:33.471"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:33.446" endtime="20201115 22:03:33.472"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:33.072" endtime="20201115 22:03:33.472"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:31.467" endtime="20201115 22:03:33.472"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:31.467" endtime="20201115 22:03:33.473"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:33.475" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:33.483" endtime="20201115 22:03:33.511"></status>
</kw>
<msg timestamp="20201115 22:03:33.512" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:33.482" endtime="20201115 22:03:33.512"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:33.515" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:33.513" endtime="20201115 22:03:33.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:33.516" endtime="20201115 22:03:33.518"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:33.479" endtime="20201115 22:03:33.518"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:33.477" endtime="20201115 22:03:33.519"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:33.526" endtime="20201115 22:03:33.817"></status>
</kw>
<msg timestamp="20201115 22:03:33.824" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0231045, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023124389, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:03:33.524" endtime="20201115 22:03:33.825"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:33.842" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0231045, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023124389, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:03:33.827" endtime="20201115 22:03:33.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:33.844" endtime="20201115 22:03:33.848"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:33.521" endtime="20201115 22:03:33.849"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:33.519" endtime="20201115 22:03:33.850"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:33.859" level="INFO">${RESULT} = [{'time': 0.023124389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.988899999999863e-05, 'source_diff': 1.988899999999863e-05}, {'time': 0.023446042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:33.851" endtime="20201115 22:03:33.859"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:33.889" level="INFO">${OVERHEAD} = {'diff': [1.988899999999863e-05, 1.987499999999906e-05, 1.99029999999982e-05, 1.99029999999982e-05, 1.988899999999863e-05, 1.988899999999863e-05, 1.993100000000081e-05, 1.9915999999998296e-05, 1.99729...</msg>
<status status="PASS" starttime="20201115 22:03:33.861" endtime="20201115 22:03:33.890"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:33.898" level="INFO">NAME: 00-overhead-22-set</msg>
<status status="PASS" starttime="20201115 22:03:33.896" endtime="20201115 22:03:33.898"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:33.900" level="INFO">VALUE: [1.988899999999863e-05, 1.987499999999906e-05, 1.99029999999982e-05, 1.99029999999982e-05, 1.988899999999863e-05, 1.988899999999863e-05, 1.993100000000081e-05, 1.9915999999998296e-05, 1.997299999999952e-05, 1.98890000000021e-05, 1.99029999999982e-05, 1.988899999999863e-05, 1.98890000000021e-05, 1.987499999999906e-05, 1.9887999999999156e-05, 1.987499999999906e-05, 1.9901999999998726e-05, 1.988899999999863e-05, 1.987499999999906e-05, 1.991700000000124e-05, 1.99029999999982e-05, 1.98890000000021e-05, 1.98890000000021e-05, 1.9901999999998726e-05, 1.9902000000002196e-05, 1.98890000000021e-05, 1.987499999999559e-05, 1.986099999999602e-05, 1.987500000000253e-05, 1.9901999999995257e-05, 1.990300000000167e-05, 1.9929999999994397e-05, 1.990300000000167e-05, 1.991700000000124e-05, 1.988899999999516e-05, 1.987500000000253e-05, 1.98890000000021e-05, 1.991700000000124e-05, 1.993099999999387e-05, 1.990299999999473e-05, 1.988899999999516e-05, 1.9902000000002196e-05, 1.987500000000253e-05, 1.988899999999516e-05, 1.990300000000167e-05, 1.987499999999559e-05, 1.986099999999602e-05, 1.9916000000001766e-05, 1.98890000000021e-05, 1.991700000000124e-05]</msg>
<status status="PASS" starttime="20201115 22:03:33.899" endtime="20201115 22:03:33.901"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:33.891" endtime="20201115 22:03:33.901"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:33.904" endtime="20201115 22:03:33.905"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:33.907" endtime="20201115 22:03:33.927"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:33.906" endtime="20201115 22:03:33.927"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:33.902" endtime="20201115 22:03:33.928"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:33.475" endtime="20201115 22:03:33.928"></status>
</kw>
<msg timestamp="20201115 22:03:33.928" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:33.937" endtime="20201115 22:03:33.963"></status>
</kw>
<msg timestamp="20201115 22:03:33.963" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:33.936" endtime="20201115 22:03:33.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:33.966" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:33.964" endtime="20201115 22:03:33.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:33.967" endtime="20201115 22:03:33.969"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:33.933" endtime="20201115 22:03:33.970"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:33.931" endtime="20201115 22:03:33.970"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:33.977" endtime="20201115 22:03:34.262"></status>
</kw>
<msg timestamp="20201115 22:03:34.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021081917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021101806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:33.975" endtime="20201115 22:03:34.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:34.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021081917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021101806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:34.266" endtime="20201115 22:03:34.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:34.274" endtime="20201115 22:03:34.276"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:33.973" endtime="20201115 22:03:34.276"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:33.971" endtime="20201115 22:03:34.277"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:34.281" level="INFO">${RESULT} = [{'time': 0.021101806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.98890000000021e-05, 'source_diff': 1.98890000000021e-05}, {'time': 0.021421875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:03:34.277" endtime="20201115 22:03:34.281"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:34.295" level="INFO">${OVERHEAD} = {'diff': [1.98890000000021e-05, 1.988899999999863e-05, 1.98890000000021e-05, 1.988899999999863e-05, 1.98890000000021e-05, 1.98890000000021e-05, 1.987500000000253e-05, 1.99029999999982e-05, 1.988899999...</msg>
<status status="PASS" starttime="20201115 22:03:34.282" endtime="20201115 22:03:34.296"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:34.300" level="INFO">NAME: 00-overhead-22-set</msg>
<status status="PASS" starttime="20201115 22:03:34.299" endtime="20201115 22:03:34.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:34.303" level="INFO">VALUE: [1.98890000000021e-05, 1.988899999999863e-05, 1.98890000000021e-05, 1.988899999999863e-05, 1.98890000000021e-05, 1.98890000000021e-05, 1.987500000000253e-05, 1.99029999999982e-05, 1.988899999999863e-05, 1.99029999999982e-05, 1.9915999999998296e-05, 1.98890000000021e-05, 1.9958000000000475e-05, 1.9944000000000905e-05, 1.988899999999863e-05, 1.98890000000021e-05, 1.990300000000167e-05, 1.990300000000167e-05, 1.9887999999999156e-05, 1.99029999999982e-05, 1.988899999999863e-05, 1.994500000000038e-05, 1.98890000000021e-05, 1.988899999999863e-05, 1.987500000000253e-05, 1.9902000000002196e-05, 1.987499999999906e-05, 1.98890000000021e-05, 1.9929999999997866e-05, 1.9916000000001766e-05, 1.98890000000021e-05, 1.983300000000035e-05, 1.98890000000021e-05, 1.990300000000167e-05, 1.993100000000081e-05, 1.987499999999559e-05, 1.983299999999688e-05, 1.990299999999473e-05, 1.988899999999516e-05, 1.990300000000167e-05, 1.990300000000167e-05, 1.988899999999516e-05, 1.98890000000021e-05, 1.990300000000167e-05, 1.990300000000167e-05, 1.98890000000021e-05, 1.987500000000253e-05, 1.987500000000253e-05, 1.988899999999516e-05, 1.9915999999994827e-05]</msg>
<status status="PASS" starttime="20201115 22:03:34.301" endtime="20201115 22:03:34.303"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:34.297" endtime="20201115 22:03:34.303"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:34.306" endtime="20201115 22:03:34.307"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:34.309" endtime="20201115 22:03:34.329"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:34.308" endtime="20201115 22:03:34.329"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:34.304" endtime="20201115 22:03:34.330"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:33.929" endtime="20201115 22:03:34.330"></status>
</kw>
<msg timestamp="20201115 22:03:34.330" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:34.339" endtime="20201115 22:03:34.364"></status>
</kw>
<msg timestamp="20201115 22:03:34.364" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:34.337" endtime="20201115 22:03:34.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:34.367" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:34.365" endtime="20201115 22:03:34.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:34.368" endtime="20201115 22:03:34.370"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:34.335" endtime="20201115 22:03:34.371"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:34.333" endtime="20201115 22:03:34.371"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:34.378" endtime="20201115 22:03:34.663"></status>
</kw>
<msg timestamp="20201115 22:03:34.667" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020315208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020335111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:34.376" endtime="20201115 22:03:34.667"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:34.675" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020315208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020335111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:34.668" endtime="20201115 22:03:34.675"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:34.676" endtime="20201115 22:03:34.677"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:34.373" endtime="20201115 22:03:34.678"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:34.372" endtime="20201115 22:03:34.678"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:34.682" level="INFO">${RESULT} = [{'time': 0.020335111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.99029999999982e-05, 'source_diff': 1.99029999999982e-05}, {'time': 0.020655111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:03:34.679" endtime="20201115 22:03:34.683"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:34.696" level="INFO">${OVERHEAD} = {'diff': [1.99029999999982e-05, 1.988899999999863e-05, 1.991700000000124e-05, 1.991700000000124e-05, 1.981900000000078e-05, 1.990300000000167e-05, 1.988899999999863e-05, 1.988899999999863e-05, 1.98750...</msg>
<status status="PASS" starttime="20201115 22:03:34.684" endtime="20201115 22:03:34.697"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:34.701" level="INFO">NAME: 00-overhead-22-set</msg>
<status status="PASS" starttime="20201115 22:03:34.700" endtime="20201115 22:03:34.701"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:34.703" level="INFO">VALUE: [1.99029999999982e-05, 1.988899999999863e-05, 1.991700000000124e-05, 1.991700000000124e-05, 1.981900000000078e-05, 1.990300000000167e-05, 1.988899999999863e-05, 1.988899999999863e-05, 1.987500000000253e-05, 1.99029999999982e-05, 1.99029999999982e-05, 1.99029999999982e-05, 1.988899999999863e-05, 1.993100000000081e-05, 1.991700000000124e-05, 1.990300000000167e-05, 1.987499999999906e-05, 1.9944000000000905e-05, 1.9887999999999156e-05, 1.987500000000253e-05, 1.9901999999998726e-05, 1.991700000000124e-05, 1.988899999999863e-05, 1.988899999999863e-05, 1.98890000000021e-05, 1.991699999999777e-05, 1.987500000000253e-05, 1.988899999999863e-05, 1.99029999999982e-05, 1.9916000000001766e-05, 1.9887999999999156e-05, 1.987499999999906e-05, 1.98890000000021e-05, 1.987499999999906e-05, 1.990300000000167e-05, 1.98890000000021e-05, 1.987500000000253e-05, 1.990300000000167e-05, 1.9929999999994397e-05, 1.987500000000253e-05, 1.983300000000382e-05, 1.9902000000002196e-05, 1.987500000000253e-05, 1.991700000000124e-05, 1.988899999999516e-05, 1.98890000000021e-05, 1.991700000000124e-05, 1.987500000000253e-05, 1.987500000000253e-05, 1.990300000000167e-05]</msg>
<status status="PASS" starttime="20201115 22:03:34.702" endtime="20201115 22:03:34.704"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:34.697" endtime="20201115 22:03:34.704"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:34.707" endtime="20201115 22:03:34.708"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:34.710" endtime="20201115 22:03:34.729"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:34.708" endtime="20201115 22:03:34.730"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:34.705" endtime="20201115 22:03:34.730"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:34.331" endtime="20201115 22:03:34.731"></status>
</kw>
<msg timestamp="20201115 22:03:34.731" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:34.740" endtime="20201115 22:03:34.766"></status>
</kw>
<msg timestamp="20201115 22:03:34.766" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:34.738" endtime="20201115 22:03:34.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:34.768" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:34.767" endtime="20201115 22:03:34.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:34.770" endtime="20201115 22:03:34.772"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:34.736" endtime="20201115 22:03:34.773"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:34.733" endtime="20201115 22:03:34.773"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:34.779" endtime="20201115 22:03:35.065"></status>
</kw>
<msg timestamp="20201115 22:03:35.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020770764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020790667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:34.778" endtime="20201115 22:03:35.068"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:35.076" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020770764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020790667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:35.069" endtime="20201115 22:03:35.076"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:35.084" endtime="20201115 22:03:35.086"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:34.775" endtime="20201115 22:03:35.086"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:34.774" endtime="20201115 22:03:35.087"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:35.091" level="INFO">${RESULT} = [{'time': 0.020790667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.99029999999982e-05, 'source_diff': 1.99029999999982e-05}, {'time': 0.021112819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:03:35.088" endtime="20201115 22:03:35.091"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:35.104" level="INFO">${OVERHEAD} = {'diff': [1.99029999999982e-05, 1.9902000000002196e-05, 1.99029999999982e-05, 1.993100000000081e-05, 1.9901999999998726e-05, 1.988899999999863e-05, 1.988899999999863e-05, 1.990300000000167e-05, 1.9958...</msg>
<status status="PASS" starttime="20201115 22:03:35.092" endtime="20201115 22:03:35.105"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:35.109" level="INFO">NAME: 00-overhead-22-set</msg>
<status status="PASS" starttime="20201115 22:03:35.108" endtime="20201115 22:03:35.109"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:35.111" level="INFO">VALUE: [1.99029999999982e-05, 1.9902000000002196e-05, 1.99029999999982e-05, 1.993100000000081e-05, 1.9901999999998726e-05, 1.988899999999863e-05, 1.988899999999863e-05, 1.990300000000167e-05, 1.9958000000000475e-05, 1.9902000000002196e-05, 1.986099999999949e-05, 1.99029999999982e-05, 1.983300000000035e-05, 1.98890000000021e-05, 1.9833999999999824e-05, 1.98890000000021e-05, 1.986100000000296e-05, 1.983300000000035e-05, 1.987499999999906e-05, 1.98890000000021e-05, 1.99029999999982e-05, 1.99029999999982e-05, 1.991700000000124e-05, 1.98890000000021e-05, 1.988899999999863e-05, 1.9930000000001336e-05, 1.9848000000002863e-05, 1.9901999999998726e-05, 1.9916000000001766e-05, 1.98890000000021e-05, 1.986099999999949e-05, 1.987499999999906e-05, 1.9915999999998296e-05, 1.98890000000021e-05, 1.99169999999943e-05, 1.987499999999559e-05, 1.988899999999516e-05, 1.987500000000253e-05, 1.991700000000124e-05, 1.98890000000021e-05, 1.9916000000001766e-05, 1.98890000000021e-05, 1.991700000000124e-05, 1.990300000000167e-05, 1.98890000000021e-05, 1.990299999999473e-05, 1.986099999999602e-05, 1.991700000000124e-05, 1.9916000000001766e-05, 1.99169999999943e-05]</msg>
<status status="PASS" starttime="20201115 22:03:35.110" endtime="20201115 22:03:35.112"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:35.105" endtime="20201115 22:03:35.112"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:35.114" endtime="20201115 22:03:35.116"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:35.118" endtime="20201115 22:03:35.137"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:35.116" endtime="20201115 22:03:35.138"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:35.113" endtime="20201115 22:03:35.138"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:34.731" endtime="20201115 22:03:35.139"></status>
</kw>
<msg timestamp="20201115 22:03:35.139" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:35.148" endtime="20201115 22:03:35.175"></status>
</kw>
<msg timestamp="20201115 22:03:35.175" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:35.146" endtime="20201115 22:03:35.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:35.177" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:35.176" endtime="20201115 22:03:35.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:35.179" endtime="20201115 22:03:35.181"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:35.143" endtime="20201115 22:03:35.182"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:35.141" endtime="20201115 22:03:35.182"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:35.188" endtime="20201115 22:03:35.474"></status>
</kw>
<msg timestamp="20201115 22:03:35.477" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019986792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020006708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:35.187" endtime="20201115 22:03:35.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:35.485" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019986792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020006708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:35.478" endtime="20201115 22:03:35.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:35.487" endtime="20201115 22:03:35.488"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:35.184" endtime="20201115 22:03:35.489"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:35.183" endtime="20201115 22:03:35.489"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:35.493" level="INFO">${RESULT} = [{'time': 0.020006708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9916000000001766e-05, 'source_diff': 1.9916000000001766e-05}, {'time': 0.020324903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:35.490" endtime="20201115 22:03:35.493"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:35.507" level="INFO">${OVERHEAD} = {'diff': [1.9916000000001766e-05, 1.988899999999863e-05, 1.99029999999982e-05, 1.991699999999777e-05, 1.98890000000021e-05, 1.98890000000021e-05, 1.9888000000002626e-05, 1.98890000000021e-05, 1.988899...</msg>
<status status="PASS" starttime="20201115 22:03:35.494" endtime="20201115 22:03:35.507"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:35.511" level="INFO">NAME: 00-overhead-22-set</msg>
<status status="PASS" starttime="20201115 22:03:35.510" endtime="20201115 22:03:35.512"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:35.514" level="INFO">VALUE: [1.9916000000001766e-05, 1.988899999999863e-05, 1.99029999999982e-05, 1.991699999999777e-05, 1.98890000000021e-05, 1.98890000000021e-05, 1.9888000000002626e-05, 1.98890000000021e-05, 1.988899999999863e-05, 1.9861999999998964e-05, 1.9887999999999156e-05, 1.98890000000021e-05, 1.990300000000167e-05, 1.988899999999863e-05, 1.9901999999998726e-05, 1.990300000000167e-05, 1.988899999999863e-05, 1.987499999999906e-05, 1.991700000000124e-05, 1.9902000000002196e-05, 1.988899999999863e-05, 1.988899999999863e-05, 1.988899999999863e-05, 1.9887999999999156e-05, 1.987499999999906e-05, 1.986099999999949e-05, 1.9901999999998726e-05, 1.980499999999774e-05, 1.9902000000002196e-05, 1.987499999999906e-05, 1.98890000000021e-05, 1.9930000000001336e-05, 1.987499999999906e-05, 1.988899999999863e-05, 1.99029999999982e-05, 1.987499999999906e-05, 1.990299999999473e-05, 1.98890000000021e-05, 1.98890000000021e-05, 1.991700000000124e-05, 1.9834000000003293e-05, 1.990299999999473e-05, 1.9819999999996785e-05, 1.994500000000038e-05, 1.986099999999602e-05, 1.9902000000002196e-05, 1.9916000000001766e-05, 1.9888000000002626e-05, 1.98890000000021e-05, 1.9929999999994397e-05]</msg>
<status status="PASS" starttime="20201115 22:03:35.512" endtime="20201115 22:03:35.514"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:35.508" endtime="20201115 22:03:35.515"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:35.517" endtime="20201115 22:03:35.518"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:35.520" endtime="20201115 22:03:35.540"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:35.519" endtime="20201115 22:03:35.541"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:35.515" endtime="20201115 22:03:35.541"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:35.139" endtime="20201115 22:03:35.541"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:33.474" endtime="20201115 22:03:35.542"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:33.473" endtime="20201115 22:03:35.542"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:35.544" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:35.554" endtime="20201115 22:03:35.581"></status>
</kw>
<msg timestamp="20201115 22:03:35.581" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:35.552" endtime="20201115 22:03:35.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:35.584" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:35.582" endtime="20201115 22:03:35.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:35.585" endtime="20201115 22:03:35.587"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:35.549" endtime="20201115 22:03:35.587"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:35.547" endtime="20201115 22:03:35.588"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:35.595" endtime="20201115 22:03:35.881"></status>
</kw>
<msg timestamp="20201115 22:03:35.884" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023772917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023793528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:35.593" endtime="20201115 22:03:35.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:35.892" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023772917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023793528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:35.885" endtime="20201115 22:03:35.892"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:35.893" endtime="20201115 22:03:35.895"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:35.590" endtime="20201115 22:03:35.895"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:35.589" endtime="20201115 22:03:35.896"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:35.900" level="INFO">${RESULT} = [{'time': 0.023793528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.061100000000024e-05, 'source_diff': 2.061100000000024e-05}, {'time': 0.024135486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:35.897" endtime="20201115 22:03:35.900"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:35.914" level="INFO">${OVERHEAD} = {'diff': [2.061100000000024e-05, 2.066700000000199e-05, 2.063899999999938e-05, 2.068099999999809e-05, 2.065299999999895e-05, 2.066700000000199e-05, 2.066700000000199e-05, 2.065299999999895e-05, 2.0665...</msg>
<status status="PASS" starttime="20201115 22:03:35.901" endtime="20201115 22:03:35.915"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:35.919" level="INFO">NAME: 00-overhead-23-set</msg>
<status status="PASS" starttime="20201115 22:03:35.918" endtime="20201115 22:03:35.919"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:35.922" level="INFO">VALUE: [2.061100000000024e-05, 2.066700000000199e-05, 2.063899999999938e-05, 2.068099999999809e-05, 2.065299999999895e-05, 2.066700000000199e-05, 2.066700000000199e-05, 2.065299999999895e-05, 2.0665999999999046e-05, 2.062499999999981e-05, 2.063900000000285e-05, 2.0693999999998186e-05, 2.0651999999999476e-05, 2.065300000000242e-05, 2.065299999999895e-05, 2.066700000000199e-05, 2.061100000000024e-05, 2.066699999999852e-05, 2.065299999999895e-05, 2.065299999999895e-05, 2.068100000000156e-05, 2.063899999999938e-05, 2.0652000000002946e-05, 2.063900000000285e-05, 2.066700000000199e-05, 2.068100000000156e-05, 2.065299999999548e-05, 2.0651999999996007e-05, 2.062499999999634e-05, 2.066700000000199e-05, 2.066700000000199e-05, 2.0666000000002516e-05, 2.065300000000242e-05, 2.065300000000242e-05, 2.066699999999505e-05, 2.066700000000199e-05, 2.063900000000285e-05, 2.065300000000242e-05, 2.0722000000000795e-05, 2.0680000000002086e-05, 2.0665999999995577e-05, 2.066700000000199e-05, 2.0665999999995577e-05, 2.065299999999548e-05, 2.063900000000285e-05, 2.066699999999505e-05, 2.0652000000002946e-05, 2.061099999999677e-05, 2.065299999999548e-05, 2.063899999999591e-05]</msg>
<status status="PASS" starttime="20201115 22:03:35.920" endtime="20201115 22:03:35.922"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:35.915" endtime="20201115 22:03:35.922"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:35.925" endtime="20201115 22:03:35.926"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:35.928" endtime="20201115 22:03:35.947"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:35.927" endtime="20201115 22:03:35.948"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:35.923" endtime="20201115 22:03:35.949"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:35.545" endtime="20201115 22:03:35.949"></status>
</kw>
<msg timestamp="20201115 22:03:35.949" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:35.958" endtime="20201115 22:03:35.985"></status>
</kw>
<msg timestamp="20201115 22:03:35.985" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:35.956" endtime="20201115 22:03:35.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:35.988" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:35.986" endtime="20201115 22:03:35.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:35.989" endtime="20201115 22:03:35.992"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:35.954" endtime="20201115 22:03:35.992"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:35.952" endtime="20201115 22:03:35.993"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:35.999" endtime="20201115 22:03:36.285"></status>
</kw>
<msg timestamp="20201115 22:03:36.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019979139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019999792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:35.998" endtime="20201115 22:03:36.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:36.296" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019979139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019999792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:36.289" endtime="20201115 22:03:36.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:36.297" endtime="20201115 22:03:36.299"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:35.995" endtime="20201115 22:03:36.299"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:35.994" endtime="20201115 22:03:36.300"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:36.304" level="INFO">${RESULT} = [{'time': 0.019999792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.065299999999895e-05, 'source_diff': 2.065299999999895e-05}, {'time': 0.020339819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:36.301" endtime="20201115 22:03:36.304"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:36.318" level="INFO">${OVERHEAD} = {'diff': [2.065299999999895e-05, 2.0665999999999046e-05, 2.065299999999895e-05, 2.063899999999938e-05, 2.0665999999999046e-05, 2.066700000000199e-05, 2.0679999999998616e-05, 2.0665999999999046e-05, 2....</msg>
<status status="PASS" starttime="20201115 22:03:36.305" endtime="20201115 22:03:36.318"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:36.322" level="INFO">NAME: 00-overhead-23-set</msg>
<status status="PASS" starttime="20201115 22:03:36.321" endtime="20201115 22:03:36.322"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:36.325" level="INFO">VALUE: [2.065299999999895e-05, 2.0665999999999046e-05, 2.065299999999895e-05, 2.063899999999938e-05, 2.0665999999999046e-05, 2.066700000000199e-05, 2.0679999999998616e-05, 2.0665999999999046e-05, 2.0665999999999046e-05, 2.065299999999895e-05, 2.066699999999852e-05, 2.065299999999895e-05, 2.063899999999938e-05, 2.063900000000285e-05, 2.07090000000007e-05, 2.0666000000002516e-05, 2.0666000000002516e-05, 2.065299999999895e-05, 2.069500000000113e-05, 2.066699999999852e-05, 2.065300000000242e-05, 2.066699999999852e-05, 2.065300000000242e-05, 2.065300000000242e-05, 2.0651999999999476e-05, 2.061100000000024e-05, 2.069500000000113e-05, 2.063899999999938e-05, 2.065300000000242e-05, 2.061100000000024e-05, 2.0665999999999046e-05, 2.065299999999895e-05, 2.068099999999809e-05, 2.069500000000113e-05, 2.065300000000242e-05, 2.062499999999634e-05, 2.05969999999972e-05, 2.0665999999995577e-05, 2.0666000000002516e-05, 2.066699999999505e-05, 2.0665999999995577e-05, 2.066700000000199e-05, 2.066699999999505e-05, 2.066700000000199e-05, 2.066700000000199e-05, 2.066700000000199e-05, 2.0666000000002516e-05, 2.066700000000199e-05, 2.065299999999548e-05, 2.065299999999548e-05]</msg>
<status status="PASS" starttime="20201115 22:03:36.323" endtime="20201115 22:03:36.325"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:36.318" endtime="20201115 22:03:36.326"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:36.328" endtime="20201115 22:03:36.329"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:36.331" endtime="20201115 22:03:36.351"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:36.330" endtime="20201115 22:03:36.351"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:36.326" endtime="20201115 22:03:36.352"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:35.950" endtime="20201115 22:03:36.352"></status>
</kw>
<msg timestamp="20201115 22:03:36.352" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:36.361" endtime="20201115 22:03:36.387"></status>
</kw>
<msg timestamp="20201115 22:03:36.388" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:36.359" endtime="20201115 22:03:36.388"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:36.390" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:36.389" endtime="20201115 22:03:36.391"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:36.391" endtime="20201115 22:03:36.394"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:36.357" endtime="20201115 22:03:36.394"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:36.355" endtime="20201115 22:03:36.395"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:36.401" endtime="20201115 22:03:36.685"></status>
</kw>
<msg timestamp="20201115 22:03:36.688" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021056083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021076764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:36.400" endtime="20201115 22:03:36.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:36.696" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021056083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021076764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:36.689" endtime="20201115 22:03:36.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:36.697" endtime="20201115 22:03:36.699"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:36.397" endtime="20201115 22:03:36.700"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:36.395" endtime="20201115 22:03:36.700"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:36.704" level="INFO">${RESULT} = [{'time': 0.021076764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.068100000000156e-05, 'source_diff': 2.068100000000156e-05}, {'time': 0.021415972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:36.701" endtime="20201115 22:03:36.704"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:36.718" level="INFO">${OVERHEAD} = {'diff': [2.068100000000156e-05, 2.065299999999895e-05, 2.066700000000199e-05, 2.0666000000002516e-05, 2.063899999999938e-05, 2.061100000000024e-05, 2.065300000000242e-05, 2.066699999999852e-05, 2.065...</msg>
<status status="PASS" starttime="20201115 22:03:36.705" endtime="20201115 22:03:36.718"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:36.722" level="INFO">NAME: 00-overhead-23-set</msg>
<status status="PASS" starttime="20201115 22:03:36.721" endtime="20201115 22:03:36.723"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:36.725" level="INFO">VALUE: [2.068100000000156e-05, 2.065299999999895e-05, 2.066700000000199e-05, 2.0666000000002516e-05, 2.063899999999938e-05, 2.061100000000024e-05, 2.065300000000242e-05, 2.066699999999852e-05, 2.065300000000242e-05, 2.065300000000242e-05, 2.065299999999895e-05, 2.066700000000199e-05, 2.061100000000024e-05, 2.0666000000002516e-05, 2.066700000000199e-05, 2.065299999999895e-05, 2.061100000000024e-05, 2.065300000000242e-05, 2.065300000000242e-05, 2.063899999999938e-05, 2.066700000000199e-05, 2.066699999999852e-05, 2.063900000000285e-05, 2.0665999999999046e-05, 2.065300000000242e-05, 2.065299999999895e-05, 2.063899999999938e-05, 2.065299999999895e-05, 2.065299999999895e-05, 2.0651999999999476e-05, 2.05969999999972e-05, 2.061099999999677e-05, 2.063900000000285e-05, 2.065300000000242e-05, 2.062500000000328e-05, 2.0652000000002946e-05, 2.065299999999548e-05, 2.065300000000242e-05, 2.066700000000199e-05, 2.062499999999634e-05, 2.063899999999591e-05, 2.068100000000156e-05, 2.063899999999591e-05, 2.0651999999996007e-05, 2.065300000000242e-05, 2.0665999999995577e-05, 2.065300000000242e-05, 2.0652000000002946e-05, 2.065300000000242e-05, 2.0666000000002516e-05]</msg>
<status status="PASS" starttime="20201115 22:03:36.723" endtime="20201115 22:03:36.725"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:36.719" endtime="20201115 22:03:36.726"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:36.728" endtime="20201115 22:03:36.729"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:36.731" endtime="20201115 22:03:36.751"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:36.730" endtime="20201115 22:03:36.751"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:36.726" endtime="20201115 22:03:36.752"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:36.353" endtime="20201115 22:03:36.752"></status>
</kw>
<msg timestamp="20201115 22:03:36.753" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:36.762" endtime="20201115 22:03:36.789"></status>
</kw>
<msg timestamp="20201115 22:03:36.790" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:36.760" endtime="20201115 22:03:36.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:36.792" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:36.791" endtime="20201115 22:03:36.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:36.793" endtime="20201115 22:03:36.796"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:36.757" endtime="20201115 22:03:36.796"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:36.755" endtime="20201115 22:03:36.797"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:36.803" endtime="20201115 22:03:37.088"></status>
</kw>
<msg timestamp="20201115 22:03:37.091" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020495181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020515847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:36.801" endtime="20201115 22:03:37.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:37.099" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020495181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020515847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:37.093" endtime="20201115 22:03:37.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:37.101" endtime="20201115 22:03:37.102"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:36.799" endtime="20201115 22:03:37.103"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:36.797" endtime="20201115 22:03:37.103"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:37.107" level="INFO">${RESULT} = [{'time': 0.020515847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0665999999999046e-05, 'source_diff': 2.0665999999999046e-05}, {'time': 0.020855083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:37.104" endtime="20201115 22:03:37.108"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:37.121" level="INFO">${OVERHEAD} = {'diff': [2.0665999999999046e-05, 2.0651999999999476e-05, 2.065299999999895e-05, 2.066699999999852e-05, 2.0679999999998616e-05, 2.065299999999895e-05, 2.0651999999999476e-05, 2.0665999999999046e-05, 2...</msg>
<status status="PASS" starttime="20201115 22:03:37.108" endtime="20201115 22:03:37.121"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:37.125" level="INFO">NAME: 00-overhead-23-set</msg>
<status status="PASS" starttime="20201115 22:03:37.124" endtime="20201115 22:03:37.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:37.128" level="INFO">VALUE: [2.0665999999999046e-05, 2.0651999999999476e-05, 2.065299999999895e-05, 2.066699999999852e-05, 2.0679999999998616e-05, 2.065299999999895e-05, 2.0651999999999476e-05, 2.0665999999999046e-05, 2.066700000000199e-05, 2.059700000000067e-05, 2.063899999999938e-05, 2.0652000000002946e-05, 2.065300000000242e-05, 2.068100000000156e-05, 2.07090000000007e-05, 2.065300000000242e-05, 2.065299999999895e-05, 2.05830000000011e-05, 2.066700000000199e-05, 2.065300000000242e-05, 2.0637999999999906e-05, 2.0652000000002946e-05, 2.065299999999895e-05, 2.065299999999895e-05, 2.0651999999999476e-05, 2.068100000000156e-05, 2.068100000000156e-05, 2.065299999999895e-05, 2.0665999999999046e-05, 2.059700000000067e-05, 2.065300000000242e-05, 2.0736000000000365e-05, 2.066699999999505e-05, 2.0666000000002516e-05, 2.0666000000002516e-05, 2.065299999999548e-05, 2.065300000000242e-05, 2.0651999999996007e-05, 2.065299999999548e-05, 2.0665999999995577e-05, 2.066700000000199e-05, 2.066699999999505e-05, 2.0651999999996007e-05, 2.063899999999591e-05, 2.066699999999505e-05, 2.066700000000199e-05, 2.0652000000002946e-05, 2.066699999999505e-05, 2.066699999999505e-05, 2.068100000000156e-05]</msg>
<status status="PASS" starttime="20201115 22:03:37.127" endtime="20201115 22:03:37.128"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:37.122" endtime="20201115 22:03:37.129"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:37.131" endtime="20201115 22:03:37.133"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:37.135" endtime="20201115 22:03:37.154"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:37.133" endtime="20201115 22:03:37.155"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:37.129" endtime="20201115 22:03:37.155"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:36.753" endtime="20201115 22:03:37.156"></status>
</kw>
<msg timestamp="20201115 22:03:37.156" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:37.165" endtime="20201115 22:03:37.190"></status>
</kw>
<msg timestamp="20201115 22:03:37.190" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:37.163" endtime="20201115 22:03:37.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:37.193" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:37.191" endtime="20201115 22:03:37.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:37.194" endtime="20201115 22:03:37.196"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:37.161" endtime="20201115 22:03:37.197"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:37.159" endtime="20201115 22:03:37.197"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:37.204" endtime="20201115 22:03:37.489"></status>
</kw>
<msg timestamp="20201115 22:03:37.492" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020384625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020405292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:37.202" endtime="20201115 22:03:37.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:37.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020384625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020405292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:37.493" endtime="20201115 22:03:37.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:37.501" endtime="20201115 22:03:37.503"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:37.200" endtime="20201115 22:03:37.503"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:37.198" endtime="20201115 22:03:37.504"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:37.508" level="INFO">${RESULT} = [{'time': 0.020405292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.066699999999852e-05, 'source_diff': 2.066699999999852e-05}, {'time': 0.020748431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:37.504" endtime="20201115 22:03:37.508"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:37.522" level="INFO">${OVERHEAD} = {'diff': [2.066699999999852e-05, 2.0611999999999714e-05, 2.0680000000002086e-05, 2.0694000000001656e-05, 2.063899999999938e-05, 2.066700000000199e-05, 2.0665999999999046e-05, 2.061100000000024e-05, 2....</msg>
<status status="PASS" starttime="20201115 22:03:37.509" endtime="20201115 22:03:37.523"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:37.527" level="INFO">NAME: 00-overhead-23-set</msg>
<status status="PASS" starttime="20201115 22:03:37.526" endtime="20201115 22:03:37.527"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:37.529" level="INFO">VALUE: [2.066699999999852e-05, 2.0611999999999714e-05, 2.0680000000002086e-05, 2.0694000000001656e-05, 2.063899999999938e-05, 2.066700000000199e-05, 2.0665999999999046e-05, 2.061100000000024e-05, 2.065299999999895e-05, 2.066699999999852e-05, 2.066699999999852e-05, 2.0665999999999046e-05, 2.063899999999938e-05, 2.065299999999895e-05, 2.063900000000285e-05, 2.065300000000242e-05, 2.066699999999852e-05, 2.059700000000067e-05, 2.063899999999938e-05, 2.068100000000156e-05, 2.065299999999895e-05, 2.068100000000156e-05, 2.065300000000242e-05, 2.065299999999895e-05, 2.0651999999999476e-05, 2.066700000000199e-05, 2.0665999999999046e-05, 2.0721999999997326e-05, 2.0651999999999476e-05, 2.063899999999938e-05, 2.063899999999938e-05, 2.063899999999938e-05, 2.066700000000199e-05, 2.065300000000242e-05, 2.065300000000242e-05, 2.068100000000156e-05, 2.065300000000242e-05, 2.062500000000328e-05, 2.065299999999548e-05, 2.065299999999548e-05, 2.062500000000328e-05, 2.065300000000242e-05, 2.0638000000003376e-05, 2.0652000000002946e-05, 2.066699999999505e-05, 2.065299999999548e-05, 2.065300000000242e-05, 2.058299999999763e-05, 2.069500000000113e-05, 2.0611999999996244e-05]</msg>
<status status="PASS" starttime="20201115 22:03:37.528" endtime="20201115 22:03:37.530"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:37.523" endtime="20201115 22:03:37.531"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:37.533" endtime="20201115 22:03:37.534"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:37.537" endtime="20201115 22:03:37.556"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:37.535" endtime="20201115 22:03:37.557"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:37.531" endtime="20201115 22:03:37.557"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:37.157" endtime="20201115 22:03:37.557"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:35.543" endtime="20201115 22:03:37.558"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:35.542" endtime="20201115 22:03:37.558"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:37.560" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:37.569" endtime="20201115 22:03:37.596"></status>
</kw>
<msg timestamp="20201115 22:03:37.596" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:37.567" endtime="20201115 22:03:37.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:37.599" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:37.597" endtime="20201115 22:03:37.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:37.600" endtime="20201115 22:03:37.601"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:37.564" endtime="20201115 22:03:37.602"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:37.562" endtime="20201115 22:03:37.602"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:37.609" endtime="20201115 22:03:37.894"></status>
</kw>
<msg timestamp="20201115 22:03:37.897" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022862472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022883875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:37.607" endtime="20201115 22:03:37.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:37.905" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022862472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022883875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:37.898" endtime="20201115 22:03:37.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:37.906" endtime="20201115 22:03:37.908"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:37.605" endtime="20201115 22:03:37.908"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:37.603" endtime="20201115 22:03:37.909"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:37.913" level="INFO">${RESULT} = [{'time': 0.022883875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.140300000000317e-05, 'source_diff': 2.140300000000317e-05}, {'time': 0.023248167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:37.910" endtime="20201115 22:03:37.913"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:37.927" level="INFO">${OVERHEAD} = {'diff': [2.140300000000317e-05, 2.141699999999927e-05, 2.1415999999999796e-05, 2.141699999999927e-05, 2.141699999999927e-05, 2.141699999999927e-05, 2.14029999999997e-05, 2.1472000000001545e-05, 2.145...</msg>
<status status="PASS" starttime="20201115 22:03:37.914" endtime="20201115 22:03:37.927"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:37.931" level="INFO">NAME: 00-overhead-24-set</msg>
<status status="PASS" starttime="20201115 22:03:37.930" endtime="20201115 22:03:37.932"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:37.934" level="INFO">VALUE: [2.140300000000317e-05, 2.141699999999927e-05, 2.1415999999999796e-05, 2.141699999999927e-05, 2.141699999999927e-05, 2.141699999999927e-05, 2.14029999999997e-05, 2.1472000000001545e-05, 2.145899999999798e-05, 2.141699999999927e-05, 2.1429999999999366e-05, 2.1415999999999796e-05, 2.1429999999999366e-05, 2.1429999999999366e-05, 2.141700000000274e-05, 2.14029999999997e-05, 2.138900000000013e-05, 2.1458000000001975e-05, 2.1443999999998936e-05, 2.1443999999998936e-05, 2.138900000000013e-05, 2.1415999999999796e-05, 2.141699999999927e-05, 2.143099999999884e-05, 2.143099999999537e-05, 2.140300000000317e-05, 2.1416000000003266e-05, 2.14169999999958e-05, 2.143099999999537e-05, 2.140300000000317e-05, 2.1429999999995897e-05, 2.144500000000188e-05, 2.144500000000188e-05, 2.1401999999996757e-05, 2.1429999999995897e-05, 2.143099999999537e-05, 2.1401999999996757e-05, 2.1444000000002406e-05, 2.143100000000231e-05, 2.147300000000102e-05, 2.143100000000231e-05, 2.1430000000002836e-05, 2.143100000000231e-05, 2.1416000000003266e-05, 2.144499999999494e-05, 2.143100000000231e-05, 2.141700000000274e-05, 2.14169999999958e-05, 2.1443999999995467e-05, 2.141700000000274e-05]</msg>
<status status="PASS" starttime="20201115 22:03:37.932" endtime="20201115 22:03:37.935"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:37.928" endtime="20201115 22:03:37.935"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:37.937" endtime="20201115 22:03:37.939"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:37.941" endtime="20201115 22:03:37.960"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:37.939" endtime="20201115 22:03:37.961"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:37.936" endtime="20201115 22:03:37.961"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:37.560" endtime="20201115 22:03:37.961"></status>
</kw>
<msg timestamp="20201115 22:03:37.962" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:37.971" endtime="20201115 22:03:37.998"></status>
</kw>
<msg timestamp="20201115 22:03:37.998" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:37.969" endtime="20201115 22:03:37.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:38.001" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:38.000" endtime="20201115 22:03:38.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:38.002" endtime="20201115 22:03:38.005"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:37.966" endtime="20201115 22:03:38.006"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:37.964" endtime="20201115 22:03:38.006"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:38.013" endtime="20201115 22:03:38.317"></status>
</kw>
<msg timestamp="20201115 22:03:38.320" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020153167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020174625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:38.011" endtime="20201115 22:03:38.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:38.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020153167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020174625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:38.321" endtime="20201115 22:03:38.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:38.330" endtime="20201115 22:03:38.331"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:38.009" endtime="20201115 22:03:38.332"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:38.007" endtime="20201115 22:03:38.332"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:38.337" level="INFO">${RESULT} = [{'time': 0.020174625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1458000000001975e-05, 'source_diff': 2.1458000000001975e-05}, {'time': 0.020537708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:38.333" endtime="20201115 22:03:38.337"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:38.351" level="INFO">${OVERHEAD} = {'diff': [2.1458000000001975e-05, 2.138899999999666e-05, 2.138900000000013e-05, 2.143099999999884e-05, 2.143099999999884e-05, 2.1429999999999366e-05, 2.1429999999999366e-05, 2.141699999999927e-05, 2.1...</msg>
<status status="PASS" starttime="20201115 22:03:38.338" endtime="20201115 22:03:38.351"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:38.356" level="INFO">NAME: 00-overhead-24-set</msg>
<status status="PASS" starttime="20201115 22:03:38.355" endtime="20201115 22:03:38.356"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:38.359" level="INFO">VALUE: [2.1458000000001975e-05, 2.138899999999666e-05, 2.138900000000013e-05, 2.143099999999884e-05, 2.143099999999884e-05, 2.1429999999999366e-05, 2.1429999999999366e-05, 2.141699999999927e-05, 2.1429999999999366e-05, 2.1457999999998506e-05, 2.1429999999999366e-05, 2.1458000000001975e-05, 2.141700000000274e-05, 2.1443999999998936e-05, 2.1415999999999796e-05, 2.147300000000102e-05, 2.1500000000000685e-05, 2.14029999999997e-05, 2.14029999999997e-05, 2.1415999999999796e-05, 2.136099999999752e-05, 2.137500000000056e-05, 2.141699999999927e-05, 2.138900000000013e-05, 2.141699999999927e-05, 2.138900000000013e-05, 2.1415999999999796e-05, 2.144500000000188e-05, 2.141699999999927e-05, 2.137500000000056e-05, 2.1402000000000226e-05, 2.1415999999996327e-05, 2.14169999999958e-05, 2.140300000000317e-05, 2.1443999999995467e-05, 2.141700000000274e-05, 2.1430000000002836e-05, 2.1387999999997187e-05, 2.14169999999958e-05, 2.143100000000231e-05, 2.14169999999958e-05, 2.1444000000002406e-05, 2.140299999999623e-05, 2.141700000000274e-05, 2.141700000000274e-05, 2.1430000000002836e-05, 2.14169999999958e-05, 2.141700000000274e-05, 2.1429999999995897e-05, 2.1430000000002836e-05]</msg>
<status status="PASS" starttime="20201115 22:03:38.357" endtime="20201115 22:03:38.359"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:38.352" endtime="20201115 22:03:38.360"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:38.362" endtime="20201115 22:03:38.363"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:38.365" endtime="20201115 22:03:38.385"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:38.364" endtime="20201115 22:03:38.386"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:38.360" endtime="20201115 22:03:38.386"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:37.962" endtime="20201115 22:03:38.386"></status>
</kw>
<msg timestamp="20201115 22:03:38.387" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:38.396" endtime="20201115 22:03:38.423"></status>
</kw>
<msg timestamp="20201115 22:03:38.423" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:38.394" endtime="20201115 22:03:38.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:38.426" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:38.424" endtime="20201115 22:03:38.426"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:38.427" endtime="20201115 22:03:38.430"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:38.392" endtime="20201115 22:03:38.430"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:38.389" endtime="20201115 22:03:38.431"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:38.438" endtime="20201115 22:03:38.725"></status>
</kw>
<msg timestamp="20201115 22:03:38.728" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020724889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020746319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:38.436" endtime="20201115 22:03:38.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:38.736" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020724889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020746319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:38.729" endtime="20201115 22:03:38.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:38.737" endtime="20201115 22:03:38.739"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:38.433" endtime="20201115 22:03:38.739"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:38.432" endtime="20201115 22:03:38.740"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:38.744" level="INFO">${RESULT} = [{'time': 0.020746319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1429999999999366e-05, 'source_diff': 2.1429999999999366e-05}, {'time': 0.021108972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:38.741" endtime="20201115 22:03:38.745"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:38.759" level="INFO">${OVERHEAD} = {'diff': [2.1429999999999366e-05, 2.1429999999999366e-05, 2.14029999999997e-05, 2.1402000000000226e-05, 2.136100000000099e-05, 2.14029999999997e-05, 2.1457999999998506e-05, 2.14029999999997e-05, 2.140...</msg>
<status status="PASS" starttime="20201115 22:03:38.746" endtime="20201115 22:03:38.759"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:38.763" level="INFO">NAME: 00-overhead-24-set</msg>
<status status="PASS" starttime="20201115 22:03:38.762" endtime="20201115 22:03:38.764"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:38.766" level="INFO">VALUE: [2.1429999999999366e-05, 2.1429999999999366e-05, 2.14029999999997e-05, 2.1402000000000226e-05, 2.136100000000099e-05, 2.14029999999997e-05, 2.1457999999998506e-05, 2.14029999999997e-05, 2.14029999999997e-05, 2.143100000000231e-05, 2.1458000000001975e-05, 2.141699999999927e-05, 2.141699999999927e-05, 2.147300000000102e-05, 2.14029999999997e-05, 2.141700000000274e-05, 2.1402000000000226e-05, 2.143099999999884e-05, 2.141699999999927e-05, 2.141699999999927e-05, 2.1429999999999366e-05, 2.138900000000013e-05, 2.141699999999927e-05, 2.1429999999999366e-05, 2.1415999999999796e-05, 2.1430000000002836e-05, 2.1443999999998936e-05, 2.141699999999927e-05, 2.145900000000145e-05, 2.143100000000231e-05, 2.1472000000001545e-05, 2.141700000000274e-05, 2.141700000000274e-05, 2.143100000000231e-05, 2.1430000000002836e-05, 2.140299999999623e-05, 2.140299999999623e-05, 2.1416000000003266e-05, 2.1472000000001545e-05, 2.144500000000188e-05, 2.14169999999958e-05, 2.141700000000274e-05, 2.1430000000002836e-05, 2.1401999999996757e-05, 2.1415999999996327e-05, 2.140299999999623e-05, 2.141700000000274e-05, 2.143100000000231e-05, 2.141700000000274e-05, 2.1415999999996327e-05]</msg>
<status status="PASS" starttime="20201115 22:03:38.765" endtime="20201115 22:03:38.766"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:38.760" endtime="20201115 22:03:38.767"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:38.769" endtime="20201115 22:03:38.771"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:38.773" endtime="20201115 22:03:38.792"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:38.771" endtime="20201115 22:03:38.793"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:38.768" endtime="20201115 22:03:38.793"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:38.387" endtime="20201115 22:03:38.794"></status>
</kw>
<msg timestamp="20201115 22:03:38.794" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:38.803" endtime="20201115 22:03:38.832"></status>
</kw>
<msg timestamp="20201115 22:03:38.833" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:38.802" endtime="20201115 22:03:38.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:38.835" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:38.834" endtime="20201115 22:03:38.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:38.837" endtime="20201115 22:03:38.839"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:38.799" endtime="20201115 22:03:38.840"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:38.797" endtime="20201115 22:03:38.840"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:38.847" endtime="20201115 22:03:39.133"></status>
</kw>
<msg timestamp="20201115 22:03:39.136" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021172111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021193528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:38.845" endtime="20201115 22:03:39.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:39.145" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021172111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021193528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:39.138" endtime="20201115 22:03:39.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:39.146" endtime="20201115 22:03:39.148"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:38.843" endtime="20201115 22:03:39.149"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:38.841" endtime="20201115 22:03:39.149"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:39.153" level="INFO">${RESULT} = [{'time': 0.021193528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.141699999999927e-05, 'source_diff': 2.141699999999927e-05}, {'time': 0.021554389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:39.150" endtime="20201115 22:03:39.154"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:39.168" level="INFO">${OVERHEAD} = {'diff': [2.141699999999927e-05, 2.14029999999997e-05, 2.1443999999998936e-05, 2.1415999999999796e-05, 2.14029999999997e-05, 2.137500000000056e-05, 2.143099999999884e-05, 2.1402000000000226e-05, 2.140...</msg>
<status status="PASS" starttime="20201115 22:03:39.154" endtime="20201115 22:03:39.169"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:39.173" level="INFO">NAME: 00-overhead-24-set</msg>
<status status="PASS" starttime="20201115 22:03:39.172" endtime="20201115 22:03:39.173"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:39.176" level="INFO">VALUE: [2.141699999999927e-05, 2.14029999999997e-05, 2.1443999999998936e-05, 2.1415999999999796e-05, 2.14029999999997e-05, 2.137500000000056e-05, 2.143099999999884e-05, 2.1402000000000226e-05, 2.14029999999997e-05, 2.1444000000002406e-05, 2.1443999999998936e-05, 2.1429999999999366e-05, 2.141699999999927e-05, 2.1402000000000226e-05, 2.136100000000099e-05, 2.141699999999927e-05, 2.1415999999999796e-05, 2.14029999999997e-05, 2.144499999999841e-05, 2.143099999999884e-05, 2.1416000000003266e-05, 2.1415999999999796e-05, 2.141700000000274e-05, 2.141699999999927e-05, 2.141699999999927e-05, 2.1429999999999366e-05, 2.141699999999927e-05, 2.138900000000013e-05, 2.140300000000317e-05, 2.14169999999958e-05, 2.1429999999995897e-05, 2.140299999999623e-05, 2.1429999999995897e-05, 2.1429999999995897e-05, 2.141700000000274e-05, 2.1486000000001115e-05, 2.14169999999958e-05, 2.140300000000317e-05, 2.1430000000002836e-05, 2.140299999999623e-05, 2.1472000000001545e-05, 2.141700000000274e-05, 2.138899999999666e-05, 2.144500000000188e-05, 2.145900000000145e-05, 2.1416000000003266e-05, 2.1429999999995897e-05, 2.1415999999996327e-05, 2.144499999999494e-05, 2.143100000000231e-05]</msg>
<status status="PASS" starttime="20201115 22:03:39.174" endtime="20201115 22:03:39.176"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:39.169" endtime="20201115 22:03:39.177"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:39.179" endtime="20201115 22:03:39.180"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:39.183" endtime="20201115 22:03:39.202"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:39.181" endtime="20201115 22:03:39.203"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:39.177" endtime="20201115 22:03:39.203"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:38.795" endtime="20201115 22:03:39.204"></status>
</kw>
<msg timestamp="20201115 22:03:39.204" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:39.213" endtime="20201115 22:03:39.242"></status>
</kw>
<msg timestamp="20201115 22:03:39.243" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:39.211" endtime="20201115 22:03:39.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:39.245" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:39.244" endtime="20201115 22:03:39.246"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:39.246" endtime="20201115 22:03:39.249"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:39.209" endtime="20201115 22:03:39.250"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:39.207" endtime="20201115 22:03:39.250"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:39.257" endtime="20201115 22:03:39.543"></status>
</kw>
<msg timestamp="20201115 22:03:39.546" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021193528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021214944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:39.255" endtime="20201115 22:03:39.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:39.555" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021193528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021214944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:39.548" endtime="20201115 22:03:39.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:39.556" endtime="20201115 22:03:39.558"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:39.253" endtime="20201115 22:03:39.559"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:39.251" endtime="20201115 22:03:39.559"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:39.563" level="INFO">${RESULT} = [{'time': 0.021214944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1415999999999796e-05, 'source_diff': 2.1415999999999796e-05}, {'time': 0.02157825, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 22:03:39.560" endtime="20201115 22:03:39.564"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:39.578" level="INFO">${OVERHEAD} = {'diff': [2.1415999999999796e-05, 2.143099999999884e-05, 2.143100000000231e-05, 2.1415999999999796e-05, 2.1429999999999366e-05, 2.141699999999927e-05, 2.141699999999927e-05, 2.1458000000001975e-05, 2....</msg>
<status status="PASS" starttime="20201115 22:03:39.564" endtime="20201115 22:03:39.578"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:39.582" level="INFO">NAME: 00-overhead-24-set</msg>
<status status="PASS" starttime="20201115 22:03:39.581" endtime="20201115 22:03:39.583"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:39.585" level="INFO">VALUE: [2.1415999999999796e-05, 2.143099999999884e-05, 2.143100000000231e-05, 2.1415999999999796e-05, 2.1429999999999366e-05, 2.141699999999927e-05, 2.141699999999927e-05, 2.1458000000001975e-05, 2.141700000000274e-05, 2.143099999999884e-05, 2.141700000000274e-05, 2.1415999999999796e-05, 2.1415999999999796e-05, 2.141699999999927e-05, 2.137500000000056e-05, 2.14029999999997e-05, 2.1471999999998076e-05, 2.14029999999997e-05, 2.143100000000231e-05, 2.1458000000001975e-05, 2.141699999999927e-05, 2.141699999999927e-05, 2.1415999999999796e-05, 2.141699999999927e-05, 2.141699999999927e-05, 2.143099999999884e-05, 2.141700000000274e-05, 2.141699999999927e-05, 2.1429999999995897e-05, 2.136099999999752e-05, 2.140300000000317e-05, 2.1429999999995897e-05, 2.1416000000003266e-05, 2.1430000000002836e-05, 2.143100000000231e-05, 2.1458000000001975e-05, 2.141700000000274e-05, 2.141700000000274e-05, 2.141700000000274e-05, 2.1458000000001975e-05, 2.144500000000188e-05, 2.143099999999537e-05, 2.143100000000231e-05, 2.145900000000145e-05, 2.141700000000274e-05, 2.1429999999995897e-05, 2.1443999999995467e-05, 2.1402000000003696e-05, 2.1387999999997187e-05, 2.143099999999537e-05]</msg>
<status status="PASS" starttime="20201115 22:03:39.583" endtime="20201115 22:03:39.585"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:39.578" endtime="20201115 22:03:39.586"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:39.588" endtime="20201115 22:03:39.589"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:39.592" endtime="20201115 22:03:39.611"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:39.590" endtime="20201115 22:03:39.612"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:39.586" endtime="20201115 22:03:39.612"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:39.204" endtime="20201115 22:03:39.613"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:37.559" endtime="20201115 22:03:39.613"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:37.558" endtime="20201115 22:03:39.613"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:39.616" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:39.625" endtime="20201115 22:03:39.652"></status>
</kw>
<msg timestamp="20201115 22:03:39.652" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:39.623" endtime="20201115 22:03:39.652"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:39.655" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:39.653" endtime="20201115 22:03:39.655"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:39.656" endtime="20201115 22:03:39.658"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:39.620" endtime="20201115 22:03:39.658"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:39.618" endtime="20201115 22:03:39.659"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:39.666" endtime="20201115 22:03:39.952"></status>
</kw>
<msg timestamp="20201115 22:03:39.955" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023294403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023316569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:39.664" endtime="20201115 22:03:39.955"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:39.963" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023294403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023316569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:39.956" endtime="20201115 22:03:39.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:39.964" endtime="20201115 22:03:39.966"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:39.662" endtime="20201115 22:03:39.967"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:39.660" endtime="20201115 22:03:39.967"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:39.971" level="INFO">${RESULT} = [{'time': 0.023316569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2165999999997077e-05, 'source_diff': 2.2165999999997077e-05}, {'time': 0.023701833, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:39.968" endtime="20201115 22:03:39.972"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:39.986" level="INFO">${OVERHEAD} = {'diff': [2.2165999999997077e-05, 2.2180000000000116e-05, 2.2166000000000546e-05, 2.2180000000000116e-05, 2.213899999999741e-05, 2.2180000000000116e-05, 2.2194000000003156e-05, 2.2166000000000546e-05,...</msg>
<status status="PASS" starttime="20201115 22:03:39.973" endtime="20201115 22:03:39.986"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:39.990" level="INFO">NAME: 00-overhead-25-set</msg>
<status status="PASS" starttime="20201115 22:03:39.989" endtime="20201115 22:03:39.991"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:39.993" level="INFO">VALUE: [2.2165999999997077e-05, 2.2180000000000116e-05, 2.2166000000000546e-05, 2.2180000000000116e-05, 2.213899999999741e-05, 2.2180000000000116e-05, 2.2194000000003156e-05, 2.2166000000000546e-05, 2.218099999999959e-05, 2.2180000000000116e-05, 2.2193999999999686e-05, 2.2180000000000116e-05, 2.216700000000002e-05, 2.218099999999959e-05, 2.216700000000002e-05, 2.218099999999959e-05, 2.2207999999999256e-05, 2.2236000000001865e-05, 2.218099999999959e-05, 2.2193999999999686e-05, 2.2236000000001865e-05, 2.213900000000435e-05, 2.216700000000349e-05, 2.2180000000003586e-05, 2.215300000000392e-05, 2.219499999999569e-05, 2.2180000000003586e-05, 2.2166000000004016e-05, 2.2138000000004876e-05, 2.211099999999827e-05, 2.219500000000263e-05, 2.2179999999996647e-05, 2.218100000000306e-05, 2.218099999999612e-05, 2.212500000000478e-05, 2.216699999999655e-05, 2.218100000000306e-05, 2.2193999999996217e-05, 2.2194000000003156e-05, 2.218100000000306e-05, 2.218099999999612e-05, 2.2236000000001865e-05, 2.2179999999996647e-05, 2.212499999999784e-05, 2.2152000000004446e-05, 2.215299999999698e-05, 2.218099999999612e-05, 2.218099999999612e-05, 2.218100000000306e-05, 2.2179999999996647e-05]</msg>
<status status="PASS" starttime="20201115 22:03:39.992" endtime="20201115 22:03:39.993"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:39.987" endtime="20201115 22:03:39.994"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:39.996" endtime="20201115 22:03:39.998"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:40.000" endtime="20201115 22:03:40.019"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:39.998" endtime="20201115 22:03:40.020"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:39.995" endtime="20201115 22:03:40.021"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:39.616" endtime="20201115 22:03:40.021"></status>
</kw>
<msg timestamp="20201115 22:03:40.021" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:40.030" endtime="20201115 22:03:40.057"></status>
</kw>
<msg timestamp="20201115 22:03:40.058" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:40.029" endtime="20201115 22:03:40.058"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:40.061" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:40.059" endtime="20201115 22:03:40.061"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:40.062" endtime="20201115 22:03:40.065"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:40.026" endtime="20201115 22:03:40.065"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:40.024" endtime="20201115 22:03:40.066"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:40.072" endtime="20201115 22:03:40.358"></status>
</kw>
<msg timestamp="20201115 22:03:40.361" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020573958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020596111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:40.071" endtime="20201115 22:03:40.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:40.370" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020573958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020596111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:40.362" endtime="20201115 22:03:40.370"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:40.371" endtime="20201115 22:03:40.372"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:40.068" endtime="20201115 22:03:40.373"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:40.066" endtime="20201115 22:03:40.374"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:40.378" level="INFO">${RESULT} = [{'time': 0.020596111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.215300000000045e-05, 'source_diff': 2.215300000000045e-05}, {'time': 0.020979861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:40.374" endtime="20201115 22:03:40.378"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:40.392" level="INFO">${OVERHEAD} = {'diff': [2.215300000000045e-05, 2.2180000000000116e-05, 2.2180000000000116e-05, 2.2194000000003156e-05, 2.2152000000000976e-05, 2.2180000000000116e-05, 2.218099999999959e-05, 2.2180000000000116e-05, ...</msg>
<status status="PASS" starttime="20201115 22:03:40.379" endtime="20201115 22:03:40.392"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:40.397" level="INFO">NAME: 00-overhead-25-set</msg>
<status status="PASS" starttime="20201115 22:03:40.396" endtime="20201115 22:03:40.397"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:40.399" level="INFO">VALUE: [2.215300000000045e-05, 2.2180000000000116e-05, 2.2180000000000116e-05, 2.2194000000003156e-05, 2.2152000000000976e-05, 2.2180000000000116e-05, 2.218099999999959e-05, 2.2180000000000116e-05, 2.219499999999916e-05, 2.218099999999959e-05, 2.216700000000002e-05, 2.2193999999999686e-05, 2.2207999999999256e-05, 2.222300000000177e-05, 2.2193999999999686e-05, 2.216700000000002e-05, 2.2193999999999686e-05, 2.2180000000000116e-05, 2.2166000000000546e-05, 2.2235999999998396e-05, 2.219499999999916e-05, 2.218099999999959e-05, 2.215300000000045e-05, 2.216700000000002e-05, 2.211100000000174e-05, 2.216700000000002e-05, 2.216700000000002e-05, 2.2221999999998826e-05, 2.2221999999995357e-05, 2.216699999999655e-05, 2.2249999999994496e-05, 2.216700000000349e-05, 2.2193999999996217e-05, 2.2166000000004016e-05, 2.2180000000003586e-05, 2.218100000000306e-05, 2.215300000000392e-05, 2.219500000000263e-05, 2.2165999999997077e-05, 2.2193999999996217e-05, 2.218100000000306e-05, 2.2208000000002726e-05, 2.219500000000263e-05, 2.219500000000263e-05, 2.22090000000022e-05, 2.2179999999996647e-05, 2.213899999999741e-05, 2.2166000000004016e-05, 2.216700000000349e-05, 2.2137999999997937e-05]</msg>
<status status="PASS" starttime="20201115 22:03:40.398" endtime="20201115 22:03:40.400"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:40.393" endtime="20201115 22:03:40.400"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:40.402" endtime="20201115 22:03:40.404"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:40.406" endtime="20201115 22:03:40.426"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:40.404" endtime="20201115 22:03:40.426"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:40.401" endtime="20201115 22:03:40.427"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:40.022" endtime="20201115 22:03:40.427"></status>
</kw>
<msg timestamp="20201115 22:03:40.427" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:40.441" endtime="20201115 22:03:40.471"></status>
</kw>
<msg timestamp="20201115 22:03:40.471" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:40.435" endtime="20201115 22:03:40.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:40.474" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:40.472" endtime="20201115 22:03:40.474"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:40.475" endtime="20201115 22:03:40.478"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:40.432" endtime="20201115 22:03:40.478"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:40.430" endtime="20201115 22:03:40.479"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:40.486" endtime="20201115 22:03:40.772"></status>
</kw>
<msg timestamp="20201115 22:03:40.775" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025928431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025950611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:40.484" endtime="20201115 22:03:40.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:40.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025928431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025950611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:40.776" endtime="20201115 22:03:40.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:40.785" endtime="20201115 22:03:40.786"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:40.481" endtime="20201115 22:03:40.787"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:40.479" endtime="20201115 22:03:40.787"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:40.792" level="INFO">${RESULT} = [{'time': 0.025950611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2180000000000116e-05, 'source_diff': 2.2180000000000116e-05}, {'time': 0.026333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:03:40.788" endtime="20201115 22:03:40.792"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:40.807" level="INFO">${OVERHEAD} = {'diff': [2.2180000000000116e-05, 2.2235999999998396e-05, 2.2180000000000116e-05, 2.2166000000000546e-05, 2.218099999999959e-05, 2.211100000000174e-05, 2.218099999999959e-05, 2.216700000000002e-05, 2....</msg>
<status status="PASS" starttime="20201115 22:03:40.793" endtime="20201115 22:03:40.807"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:40.811" level="INFO">NAME: 00-overhead-25-set</msg>
<status status="PASS" starttime="20201115 22:03:40.810" endtime="20201115 22:03:40.812"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:40.814" level="INFO">VALUE: [2.2180000000000116e-05, 2.2235999999998396e-05, 2.2180000000000116e-05, 2.2166000000000546e-05, 2.218099999999959e-05, 2.211100000000174e-05, 2.218099999999959e-05, 2.216700000000002e-05, 2.218100000000306e-05, 2.2221999999998826e-05, 2.218099999999959e-05, 2.2180000000000116e-05, 2.2235999999998396e-05, 2.216700000000002e-05, 2.213899999999741e-05, 2.2179999999996647e-05, 2.2193999999996217e-05, 2.216699999999655e-05, 2.2179999999996647e-05, 2.2207999999995787e-05, 2.2166000000004016e-05, 2.2166000000004016e-05, 2.2221999999995357e-05, 2.2179999999996647e-05, 2.218099999999612e-05, 2.219500000000263e-05, 2.218099999999612e-05, 2.2208000000002726e-05, 2.218100000000306e-05, 2.2179999999996647e-05, 2.2194000000003156e-05, 2.22090000000022e-05, 2.218100000000306e-05, 2.2207999999995787e-05, 2.2193999999996217e-05, 2.218100000000306e-05, 2.212499999999784e-05, 2.2236000000001865e-05, 2.2194000000003156e-05, 2.2165999999997077e-05, 2.216699999999655e-05, 2.216699999999655e-05, 2.216699999999655e-05, 2.216699999999655e-05, 2.2179999999996647e-05, 2.2193999999996217e-05, 2.216700000000349e-05, 2.2179999999996647e-05, 2.2222000000002295e-05, 2.218099999999612e-05]</msg>
<status status="PASS" starttime="20201115 22:03:40.813" endtime="20201115 22:03:40.814"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:40.808" endtime="20201115 22:03:40.815"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:40.817" endtime="20201115 22:03:40.819"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:40.821" endtime="20201115 22:03:40.840"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:40.819" endtime="20201115 22:03:40.841"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:40.816" endtime="20201115 22:03:40.841"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:40.428" endtime="20201115 22:03:40.842"></status>
</kw>
<msg timestamp="20201115 22:03:40.842" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:40.852" endtime="20201115 22:03:40.880"></status>
</kw>
<msg timestamp="20201115 22:03:40.881" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:40.850" endtime="20201115 22:03:40.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:40.883" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:40.882" endtime="20201115 22:03:40.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:40.884" endtime="20201115 22:03:40.887"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:40.847" endtime="20201115 22:03:40.888"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:40.845" endtime="20201115 22:03:40.888"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:40.895" endtime="20201115 22:03:41.181"></status>
</kw>
<msg timestamp="20201115 22:03:41.184" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021528097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021550306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:40.893" endtime="20201115 22:03:41.185"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:41.193" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021528097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021550306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:41.186" endtime="20201115 22:03:41.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:41.194" endtime="20201115 22:03:41.196"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:40.891" endtime="20201115 22:03:41.196"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:40.889" endtime="20201115 22:03:41.197"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:41.201" level="INFO">${RESULT} = [{'time': 0.021550306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.22090000000022e-05, 'source_diff': 2.22090000000022e-05}, {'time': 0.021933611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:03:41.198" endtime="20201115 22:03:41.201"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:41.215" level="INFO">${OVERHEAD} = {'diff': [2.22090000000022e-05, 2.216700000000002e-05, 2.2180000000000116e-05, 2.2180000000000116e-05, 2.2166000000000546e-05, 2.216700000000002e-05, 2.2193999999999686e-05, 2.216700000000002e-05, 2.2...</msg>
<status status="PASS" starttime="20201115 22:03:41.202" endtime="20201115 22:03:41.215"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:41.220" level="INFO">NAME: 00-overhead-25-set</msg>
<status status="PASS" starttime="20201115 22:03:41.219" endtime="20201115 22:03:41.220"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:41.222" level="INFO">VALUE: [2.22090000000022e-05, 2.216700000000002e-05, 2.2180000000000116e-05, 2.2180000000000116e-05, 2.2166000000000546e-05, 2.216700000000002e-05, 2.2193999999999686e-05, 2.216700000000002e-05, 2.218099999999959e-05, 2.218099999999959e-05, 2.216700000000002e-05, 2.216700000000002e-05, 2.2180000000000116e-05, 2.218099999999959e-05, 2.2180000000000116e-05, 2.2180000000000116e-05, 2.2193999999999686e-05, 2.2193999999999686e-05, 2.218100000000306e-05, 2.2235999999998396e-05, 2.2180000000000116e-05, 2.2207999999999256e-05, 2.218099999999959e-05, 2.216700000000002e-05, 2.2180000000000116e-05, 2.2207999999999256e-05, 2.218099999999612e-05, 2.218100000000306e-05, 2.2194000000003156e-05, 2.2193999999996217e-05, 2.2179999999996647e-05, 2.218100000000306e-05, 2.215300000000392e-05, 2.218100000000306e-05, 2.2179999999996647e-05, 2.2236000000001865e-05, 2.216699999999655e-05, 2.2180000000003586e-05, 2.218099999999612e-05, 2.215299999999698e-05, 2.218100000000306e-05, 2.216700000000349e-05, 2.2179999999996647e-05, 2.2194000000003156e-05, 2.216699999999655e-05, 2.219500000000263e-05, 2.2180000000003586e-05, 2.2179999999996647e-05, 2.2166000000004016e-05, 2.2194000000003156e-05]</msg>
<status status="PASS" starttime="20201115 22:03:41.221" endtime="20201115 22:03:41.223"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:41.216" endtime="20201115 22:03:41.223"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:41.226" endtime="20201115 22:03:41.227"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:41.230" endtime="20201115 22:03:41.249"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:41.228" endtime="20201115 22:03:41.250"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:41.224" endtime="20201115 22:03:41.250"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:40.843" endtime="20201115 22:03:41.251"></status>
</kw>
<msg timestamp="20201115 22:03:41.251" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:41.260" endtime="20201115 22:03:41.290"></status>
</kw>
<msg timestamp="20201115 22:03:41.290" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:41.258" endtime="20201115 22:03:41.290"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:41.293" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:41.291" endtime="20201115 22:03:41.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:41.294" endtime="20201115 22:03:41.297"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:41.256" endtime="20201115 22:03:41.297"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:41.253" endtime="20201115 22:03:41.298"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:41.304" endtime="20201115 22:03:41.590"></status>
</kw>
<msg timestamp="20201115 22:03:41.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020714944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020737139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:41.303" endtime="20201115 22:03:41.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:41.602" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020714944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020737139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:41.595" endtime="20201115 22:03:41.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:41.603" endtime="20201115 22:03:41.605"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:41.300" endtime="20201115 22:03:41.605"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:41.298" endtime="20201115 22:03:41.606"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:41.610" level="INFO">${RESULT} = [{'time': 0.020737139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.219500000000263e-05, 'source_diff': 2.219500000000263e-05}, {'time': 0.021120097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:41.606" endtime="20201115 22:03:41.610"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:41.624" level="INFO">${OVERHEAD} = {'diff': [2.219500000000263e-05, 2.2166000000000546e-05, 2.218099999999959e-05, 2.218099999999959e-05, 2.218099999999959e-05, 2.2180000000000116e-05, 2.2193999999999686e-05, 2.218099999999959e-05, 2.2...</msg>
<status status="PASS" starttime="20201115 22:03:41.611" endtime="20201115 22:03:41.624"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:41.629" level="INFO">NAME: 00-overhead-25-set</msg>
<status status="PASS" starttime="20201115 22:03:41.628" endtime="20201115 22:03:41.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:41.632" level="INFO">VALUE: [2.219500000000263e-05, 2.2166000000000546e-05, 2.218099999999959e-05, 2.218099999999959e-05, 2.218099999999959e-05, 2.2180000000000116e-05, 2.2193999999999686e-05, 2.218099999999959e-05, 2.2166000000000546e-05, 2.2165999999997077e-05, 2.215300000000045e-05, 2.2193999999999686e-05, 2.2193999999999686e-05, 2.2235999999998396e-05, 2.218099999999959e-05, 2.2222000000002295e-05, 2.216700000000002e-05, 2.211100000000174e-05, 2.2180000000000116e-05, 2.218099999999959e-05, 2.219500000000263e-05, 2.2194000000003156e-05, 2.2166000000000546e-05, 2.2179999999996647e-05, 2.2180000000000116e-05, 2.22090000000022e-05, 2.2193999999999686e-05, 2.213900000000088e-05, 2.212499999999784e-05, 2.2180000000003586e-05, 2.2112000000004683e-05, 2.216699999999655e-05, 2.215299999999698e-05, 2.2179999999996647e-05, 2.213899999999741e-05, 2.218100000000306e-05, 2.2180000000003586e-05, 2.218100000000306e-05, 2.213900000000435e-05, 2.2180000000003586e-05, 2.218099999999612e-05, 2.212500000000478e-05, 2.2179999999996647e-05, 2.216699999999655e-05, 2.2180000000003586e-05, 2.218099999999612e-05, 2.2193999999996217e-05, 2.219499999999569e-05, 2.219499999999569e-05, 2.2193999999996217e-05]</msg>
<status status="PASS" starttime="20201115 22:03:41.630" endtime="20201115 22:03:41.633"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:41.625" endtime="20201115 22:03:41.634"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:41.636" endtime="20201115 22:03:41.638"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:41.640" endtime="20201115 22:03:41.660"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:41.639" endtime="20201115 22:03:41.661"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:41.634" endtime="20201115 22:03:41.661"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:41.251" endtime="20201115 22:03:41.661"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:39.614" endtime="20201115 22:03:41.662"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:39.614" endtime="20201115 22:03:41.662"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.781" endtime="20201115 22:03:41.662"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="teardown">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:41.668" endtime="20201115 22:03:41.688"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:41.667" endtime="20201115 22:03:41.689"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:41.664" endtime="20201115 22:03:41.689"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:02:48.680" endtime="20201115 22:03:41.689" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Remove List">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:41.698" endtime="20201115 22:03:41.717"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:41.696" endtime="20201115 22:03:41.718"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:41.732" endtime="20201115 22:03:44.754"></status>
</kw>
<msg timestamp="20201115 22:03:44.756" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:41.731" endtime="20201115 22:03:44.756"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:44.761" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:44.758" endtime="20201115 22:03:44.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:03:44.768" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:03:44.764" endtime="20201115 22:03:44.768"></status>
</kw>
<status status="FAIL" starttime="20201115 22:03:41.728" endtime="20201115 22:03:44.770"></status>
</kw>
<status status="FAIL" starttime="20201115 22:03:41.725" endtime="20201115 22:03:44.771"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:41.723" endtime="20201115 22:03:44.772"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:03:44.780" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:03:44.778" endtime="20201115 22:03:44.781"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:44.774" endtime="20201115 22:03:44.781"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:41.722" endtime="20201115 22:03:44.782"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:41.722" endtime="20201115 22:03:44.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:44.784" endtime="20201115 22:03:44.787"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:41.720" endtime="20201115 22:03:44.788"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:41.718" endtime="20201115 22:03:44.789"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:41.695" endtime="20201115 22:03:44.790"></status>
</kw>
<kw name="${n} IN RANGE [ 25 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:44.799" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:44.819" endtime="20201115 22:03:44.835"></status>
</kw>
<msg timestamp="20201115 22:03:44.836" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:44.816" endtime="20201115 22:03:44.836"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:44.841" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:44.838" endtime="20201115 22:03:44.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:44.843" endtime="20201115 22:03:44.845"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:44.810" endtime="20201115 22:03:44.846"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:44.804" endtime="20201115 22:03:44.846"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:44.854" endtime="20201115 22:03:45.148"></status>
</kw>
<msg timestamp="20201115 22:03:45.151" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.113766403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.113767764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:44.852" endtime="20201115 22:03:45.152"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:45.160" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.113766403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.113767764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:45.153" endtime="20201115 22:03:45.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:45.161" endtime="20201115 22:03:45.163"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:44.848" endtime="20201115 22:03:45.163"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:44.847" endtime="20201115 22:03:45.164"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:45.168" level="INFO">${RESULT} = [{'time': 3.113767764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3609999998109856e-06, 'source_diff': 1.3609999998109856e-06}, {'time': 3.113833097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:45.165" endtime="20201115 22:03:45.169"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:45.182" level="INFO">${OVERHEAD} = {'diff': [1.3609999998109856e-06, 1.4030000001774567e-06, 1.4020000000947164e-06, 1.4450000000998386e-06, 1.4029999997333675e-06, 1.4579999998431958e-06, 1.3750000000811724e-06, 1.4030000001774567e-06...</msg>
<status status="PASS" starttime="20201115 22:03:45.169" endtime="20201115 22:03:45.183"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:45.187" level="INFO">NAME: 00-overhead-1-remove</msg>
<status status="PASS" starttime="20201115 22:03:45.186" endtime="20201115 22:03:45.187"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:45.190" level="INFO">VALUE: [1.3609999998109856e-06, 1.4030000001774567e-06, 1.4020000000947164e-06, 1.4450000000998386e-06, 1.4029999997333675e-06, 1.4579999998431958e-06, 1.3750000000811724e-06, 1.4030000001774567e-06, 1.4170000000035543e-06, 1.4720000001133826e-06, 1.4030000001774567e-06, 1.4029999997333675e-06, 1.4170000000035543e-06, 1.4029999997333675e-06, 1.4170000000035543e-06, 1.346999999984888e-06, 1.4030000001774567e-06, 1.4170000000035543e-06, 1.4030000001774567e-06, 1.4170000000035543e-06, 1.4720000001133826e-06, 1.4029999997333675e-06, 1.4019999996506272e-06, 1.4029999997333675e-06, 1.4020000000947164e-06, 1.4160000003649031e-06, 1.4170000000035543e-06, 1.3480000000676284e-06, 1.4170000000035543e-06, 1.4020000000947164e-06, 1.4030000001774567e-06, 1.3610000002550748e-06, 1.415999999920814e-06, 1.4030000001774567e-06, 1.4020000000947164e-06, 1.319000000332693e-06, 1.4029999997333675e-06, 1.4300000001910007e-06, 1.4720000001133826e-06, 1.4170000000035543e-06, 1.4030000001774567e-06, 1.3879999998245296e-06, 1.4170000000035543e-06, 1.4030000001774567e-06, 1.458000000287285e-06, 1.4450000000998386e-06, 1.3890000003513592e-06, 1.4029999997333675e-06, 1.4030000001774567e-06, 1.38899999990727e-06]</msg>
<status status="PASS" starttime="20201115 22:03:45.188" endtime="20201115 22:03:45.190"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:45.183" endtime="20201115 22:03:45.191"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:45.193" endtime="20201115 22:03:45.194"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:45.197" endtime="20201115 22:03:45.216"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:45.195" endtime="20201115 22:03:45.217"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:45.191" endtime="20201115 22:03:45.218"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:44.800" endtime="20201115 22:03:45.218"></status>
</kw>
<msg timestamp="20201115 22:03:45.218" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:45.227" endtime="20201115 22:03:45.238"></status>
</kw>
<msg timestamp="20201115 22:03:45.239" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:45.226" endtime="20201115 22:03:45.239"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:45.241" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:45.240" endtime="20201115 22:03:45.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:45.243" endtime="20201115 22:03:45.244"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:45.223" endtime="20201115 22:03:45.245"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:45.221" endtime="20201115 22:03:45.245"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:45.254" endtime="20201115 22:03:45.540"></status>
</kw>
<msg timestamp="20201115 22:03:45.543" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020563792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020565208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:45.250" endtime="20201115 22:03:45.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:45.552" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020563792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020565208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:45.545" endtime="20201115 22:03:45.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:45.553" endtime="20201115 22:03:45.555"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:45.248" endtime="20201115 22:03:45.556"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:45.246" endtime="20201115 22:03:45.556"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:45.560" level="INFO">${RESULT} = [{'time': 0.020565208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4160000000006112e-06, 'source_diff': 1.4160000000006112e-06}, {'time': 0.020627681, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:45.557" endtime="20201115 22:03:45.560"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:45.574" level="INFO">${OVERHEAD} = {'diff': [1.4160000000006112e-06, 1.3889999999974756e-06, 1.4160000000006112e-06, 1.389000000000945e-06, 1.3609999999983358e-06, 1.3889999999974756e-06, 1.403000000000515e-06, 1.4170000000000849e-06, ...</msg>
<status status="PASS" starttime="20201115 22:03:45.561" endtime="20201115 22:03:45.574"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:45.579" level="INFO">NAME: 00-overhead-1-remove</msg>
<status status="PASS" starttime="20201115 22:03:45.578" endtime="20201115 22:03:45.579"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:45.581" level="INFO">VALUE: [1.4160000000006112e-06, 1.3889999999974756e-06, 1.4160000000006112e-06, 1.389000000000945e-06, 1.3609999999983358e-06, 1.3889999999974756e-06, 1.403000000000515e-06, 1.4170000000000849e-06, 1.4029999999970455e-06, 1.403000000000515e-06, 1.4450000000026941e-06, 1.4309999999996548e-06, 1.389000000000945e-06, 1.334000000002139e-06, 1.389000000000945e-06, 1.4170000000000849e-06, 1.4170000000000849e-06, 1.389000000000945e-06, 1.4309999999996548e-06, 1.403000000000515e-06, 1.403000000000515e-06, 1.403000000000515e-06, 1.3609999999983358e-06, 1.403000000000515e-06, 1.403000000000515e-06, 1.403000000000515e-06, 1.3469999999987659e-06, 1.4019999999975719e-06, 1.389000000000945e-06, 1.4170000000000849e-06, 1.403000000000515e-06, 1.403000000000515e-06, 1.403000000000515e-06, 1.4160000000006112e-06, 1.403000000000515e-06, 1.403000000000515e-06, 1.4729999999983645e-06, 1.4020000000010413e-06, 1.403000000000515e-06, 1.4589999999987946e-06, 1.3749999999979057e-06, 1.4170000000000849e-06, 1.4170000000000849e-06, 1.403000000000515e-06, 1.403000000000515e-06, 1.403000000000515e-06, 1.4160000000006112e-06, 1.4309999999996548e-06, 1.403000000000515e-06, 1.387999999998002e-06]</msg>
<status status="PASS" starttime="20201115 22:03:45.580" endtime="20201115 22:03:45.586"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:45.575" endtime="20201115 22:03:45.587"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:45.589" endtime="20201115 22:03:45.590"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:45.593" endtime="20201115 22:03:45.612"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:45.591" endtime="20201115 22:03:45.613"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:45.587" endtime="20201115 22:03:45.613"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:45.219" endtime="20201115 22:03:45.614"></status>
</kw>
<msg timestamp="20201115 22:03:45.614" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:45.623" endtime="20201115 22:03:45.637"></status>
</kw>
<msg timestamp="20201115 22:03:45.637" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:45.621" endtime="20201115 22:03:45.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:45.640" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:45.638" endtime="20201115 22:03:45.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:45.641" endtime="20201115 22:03:45.642"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:45.619" endtime="20201115 22:03:45.643"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:45.617" endtime="20201115 22:03:45.643"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:45.650" endtime="20201115 22:03:45.938"></status>
</kw>
<msg timestamp="20201115 22:03:45.941" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021410139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0214115, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:03:45.649" endtime="20201115 22:03:45.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:45.950" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021410139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0214115, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:03:45.942" endtime="20201115 22:03:45.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:45.951" endtime="20201115 22:03:45.952"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:45.646" endtime="20201115 22:03:45.953"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:45.644" endtime="20201115 22:03:45.953"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:45.958" level="INFO">${RESULT} = [{'time': 0.0214115, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3609999999983358e-06, 'source_diff': 1.3609999999983358e-06}, {'time': 0.021472833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:45.954" endtime="20201115 22:03:45.958"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:45.972" level="INFO">${OVERHEAD} = {'diff': [1.3609999999983358e-06, 1.4020000000010413e-06, 1.3749999999979057e-06, 1.3889999999974756e-06, 1.4020000000010413e-06, 1.4029999999970455e-06, 1.3749999999979057e-06, 1.4020000000010413e-06...</msg>
<status status="PASS" starttime="20201115 22:03:45.959" endtime="20201115 22:03:45.972"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:45.977" level="INFO">NAME: 00-overhead-1-remove</msg>
<status status="PASS" starttime="20201115 22:03:45.976" endtime="20201115 22:03:45.977"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:45.979" level="INFO">VALUE: [1.3609999999983358e-06, 1.4020000000010413e-06, 1.3749999999979057e-06, 1.3889999999974756e-06, 1.4020000000010413e-06, 1.4029999999970455e-06, 1.3749999999979057e-06, 1.4020000000010413e-06, 1.389000000000945e-06, 1.4170000000000849e-06, 1.4300000000001811e-06, 1.4170000000000849e-06, 1.3479999999982395e-06, 1.4029999999970455e-06, 1.403000000000515e-06, 1.4300000000001811e-06, 1.4029999999970455e-06, 1.3889999999974756e-06, 1.389000000000945e-06, 1.4160000000006112e-06, 1.389000000000945e-06, 1.4020000000010413e-06, 1.4029999999970455e-06, 1.4019999999975719e-06, 1.3889999999974756e-06, 1.403000000000515e-06, 1.4019999999975719e-06, 1.403000000000515e-06, 1.4019999999975719e-06, 1.4160000000006112e-06, 1.4160000000006112e-06, 1.4020000000010413e-06, 1.4029999999970455e-06, 1.403000000000515e-06, 1.4300000000001811e-06, 1.4309999999996548e-06, 1.4860000000019302e-06, 1.403000000000515e-06, 1.457999999999321e-06, 1.4019999999975719e-06, 1.403000000000515e-06, 1.4019999999975719e-06, 1.4170000000000849e-06, 1.4020000000010413e-06, 1.389000000000945e-06, 1.4029999999970455e-06, 1.4170000000000849e-06, 1.387999999998002e-06, 1.403000000000515e-06, 1.4580000000027904e-06]</msg>
<status status="PASS" starttime="20201115 22:03:45.978" endtime="20201115 22:03:45.980"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:45.973" endtime="20201115 22:03:45.981"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:45.983" endtime="20201115 22:03:45.984"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:45.987" endtime="20201115 22:03:46.006"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:45.985" endtime="20201115 22:03:46.007"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:45.981" endtime="20201115 22:03:46.007"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:45.614" endtime="20201115 22:03:46.008"></status>
</kw>
<msg timestamp="20201115 22:03:46.008" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:46.017" endtime="20201115 22:03:46.030"></status>
</kw>
<msg timestamp="20201115 22:03:46.030" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:46.015" endtime="20201115 22:03:46.031"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:46.033" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:46.031" endtime="20201115 22:03:46.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:46.034" endtime="20201115 22:03:46.036"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:46.013" endtime="20201115 22:03:46.036"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:46.011" endtime="20201115 22:03:46.037"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:46.043" endtime="20201115 22:03:46.330"></status>
</kw>
<msg timestamp="20201115 22:03:46.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021662014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021663403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:46.042" endtime="20201115 22:03:46.334"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:46.342" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021662014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021663403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:46.334" endtime="20201115 22:03:46.342"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:46.343" endtime="20201115 22:03:46.345"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:46.039" endtime="20201115 22:03:46.345"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:46.037" endtime="20201115 22:03:46.346"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:46.350" level="INFO">${RESULT} = [{'time': 0.021663403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.389000000000945e-06, 'source_diff': 1.389000000000945e-06}, {'time': 0.021728597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:46.347" endtime="20201115 22:03:46.350"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:46.364" level="INFO">${OVERHEAD} = {'diff': [1.389000000000945e-06, 1.4159999999971418e-06, 1.403000000000515e-06, 1.4170000000000849e-06, 1.4300000000001811e-06, 1.3749999999979057e-06, 1.4160000000006112e-06, 1.403000000000515e-06, 1...</msg>
<status status="PASS" starttime="20201115 22:03:46.351" endtime="20201115 22:03:46.364"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:46.369" level="INFO">NAME: 00-overhead-1-remove</msg>
<status status="PASS" starttime="20201115 22:03:46.368" endtime="20201115 22:03:46.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:46.371" level="INFO">VALUE: [1.389000000000945e-06, 1.4159999999971418e-06, 1.403000000000515e-06, 1.4170000000000849e-06, 1.4300000000001811e-06, 1.3749999999979057e-06, 1.4160000000006112e-06, 1.403000000000515e-06, 1.443999999999751e-06, 1.403000000000515e-06, 1.4020000000010413e-06, 1.4159999999971418e-06, 1.403000000000515e-06, 1.403000000000515e-06, 1.389000000000945e-06, 1.4029999999970455e-06, 1.4170000000000849e-06, 1.403000000000515e-06, 1.3750000000013751e-06, 1.4019999999975719e-06, 1.334000000002139e-06, 1.3339999999986696e-06, 1.403000000000515e-06, 1.403000000000515e-06, 1.3609999999983358e-06, 1.389000000000945e-06, 1.403000000000515e-06, 1.3889999999974756e-06, 1.4170000000000849e-06, 1.403000000000515e-06, 1.403000000000515e-06, 1.4020000000010413e-06, 1.3609999999983358e-06, 1.389000000000945e-06, 1.4029999999970455e-06, 1.4170000000000849e-06, 1.3889999999974756e-06, 1.4170000000000849e-06, 1.403000000000515e-06, 1.4170000000000849e-06, 1.4719999999988909e-06, 1.403000000000515e-06, 1.3750000000013751e-06, 1.4020000000010413e-06, 1.4020000000010413e-06, 1.4020000000010413e-06, 1.403000000000515e-06, 1.4020000000010413e-06, 1.403000000000515e-06, 1.4449999999992247e-06]</msg>
<status status="PASS" starttime="20201115 22:03:46.370" endtime="20201115 22:03:46.372"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:46.365" endtime="20201115 22:03:46.373"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:46.375" endtime="20201115 22:03:46.377"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:46.379" endtime="20201115 22:03:46.398"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:46.377" endtime="20201115 22:03:46.399"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:46.373" endtime="20201115 22:03:46.399"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:46.008" endtime="20201115 22:03:46.400"></status>
</kw>
<msg timestamp="20201115 22:03:46.400" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:46.409" endtime="20201115 22:03:46.423"></status>
</kw>
<msg timestamp="20201115 22:03:46.424" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:46.408" endtime="20201115 22:03:46.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:46.426" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:46.425" endtime="20201115 22:03:46.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:46.427" endtime="20201115 22:03:46.429"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:46.405" endtime="20201115 22:03:46.430"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:46.403" endtime="20201115 22:03:46.430"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:46.437" endtime="20201115 22:03:46.724"></status>
</kw>
<msg timestamp="20201115 22:03:46.728" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021524097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0215255, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:03:46.435" endtime="20201115 22:03:46.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:46.736" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021524097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0215255, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:03:46.729" endtime="20201115 22:03:46.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:46.737" endtime="20201115 22:03:46.739"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:46.432" endtime="20201115 22:03:46.739"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:46.431" endtime="20201115 22:03:46.740"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:46.744" level="INFO">${RESULT} = [{'time': 0.0215255, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.403000000000515e-06, 'source_diff': 1.403000000000515e-06}, {'time': 0.021590917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:03:46.741" endtime="20201115 22:03:46.744"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:46.758" level="INFO">${OVERHEAD} = {'diff': [1.403000000000515e-06, 1.4309999999996548e-06, 1.4170000000000849e-06, 1.4160000000006112e-06, 1.403000000000515e-06, 1.4020000000010413e-06, 1.389000000000945e-06, 1.389000000000945e-06, 1....</msg>
<status status="PASS" starttime="20201115 22:03:46.745" endtime="20201115 22:03:46.759"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:46.764" level="INFO">NAME: 00-overhead-1-remove</msg>
<status status="PASS" starttime="20201115 22:03:46.762" endtime="20201115 22:03:46.764"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:46.767" level="INFO">VALUE: [1.403000000000515e-06, 1.4309999999996548e-06, 1.4170000000000849e-06, 1.4160000000006112e-06, 1.403000000000515e-06, 1.4020000000010413e-06, 1.389000000000945e-06, 1.389000000000945e-06, 1.403000000000515e-06, 1.3749999999979057e-06, 1.389000000000945e-06, 1.3889999999974756e-06, 1.3470000000022353e-06, 1.4019999999975719e-06, 1.3469999999987659e-06, 1.403000000000515e-06, 1.4160000000006112e-06, 1.4309999999996548e-06, 1.403000000000515e-06, 1.4020000000010413e-06, 1.3889999999974756e-06, 1.3750000000013751e-06, 1.4160000000006112e-06, 1.403000000000515e-06, 1.389000000000945e-06, 1.443999999999751e-06, 1.403000000000515e-06, 1.4170000000000849e-06, 1.403000000000515e-06, 1.389000000000945e-06, 1.389000000000945e-06, 1.403000000000515e-06, 1.4170000000000849e-06, 1.3470000000022353e-06, 1.4020000000010413e-06, 1.403000000000515e-06, 1.3469999999987659e-06, 1.3610000000018052e-06, 1.3620000000012789e-06, 1.4160000000006112e-06, 1.389000000000945e-06, 1.3610000000018052e-06, 1.3469999999987659e-06, 1.4020000000010413e-06, 1.4020000000010413e-06, 1.4029999999970455e-06, 1.403000000000515e-06, 1.389000000000945e-06, 1.3880000000014714e-06, 1.3609999999983358e-06]</msg>
<status status="PASS" starttime="20201115 22:03:46.765" endtime="20201115 22:03:46.767"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:46.759" endtime="20201115 22:03:46.768"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:46.771" endtime="20201115 22:03:46.772"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:46.775" endtime="20201115 22:03:46.794"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:46.773" endtime="20201115 22:03:46.795"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:46.769" endtime="20201115 22:03:46.795"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:46.400" endtime="20201115 22:03:46.796"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:44.796" endtime="20201115 22:03:46.796"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:44.794" endtime="20201115 22:03:46.796"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:46.798" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:46.808" endtime="20201115 22:03:46.820"></status>
</kw>
<msg timestamp="20201115 22:03:46.821" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:46.806" endtime="20201115 22:03:46.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:46.823" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:46.822" endtime="20201115 22:03:46.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:46.824" endtime="20201115 22:03:46.826"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:46.803" endtime="20201115 22:03:46.827"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:46.801" endtime="20201115 22:03:46.827"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:46.834" endtime="20201115 22:03:47.122"></status>
</kw>
<msg timestamp="20201115 22:03:47.125" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023719806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023721431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:46.832" endtime="20201115 22:03:47.125"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:47.133" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023719806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023721431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:47.126" endtime="20201115 22:03:47.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:47.135" endtime="20201115 22:03:47.136"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:46.829" endtime="20201115 22:03:47.137"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:46.828" endtime="20201115 22:03:47.137"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:47.142" level="INFO">${RESULT} = [{'time': 0.023721431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6250000000016251e-06, 'source_diff': 1.6250000000016251e-06}, {'time': 0.023791639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:47.138" endtime="20201115 22:03:47.142"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:47.156" level="INFO">${OVERHEAD} = {'diff': [1.6250000000016251e-06, 1.6109999999985858e-06, 1.6109999999985858e-06, 1.6250000000016251e-06, 1.5979999999984895e-06, 1.582999999999446e-06, 1.6109999999985858e-06, 1.653000000000765e-06, ...</msg>
<status status="PASS" starttime="20201115 22:03:47.143" endtime="20201115 22:03:47.156"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:47.160" level="INFO">NAME: 00-overhead-2-remove</msg>
<status status="PASS" starttime="20201115 22:03:47.159" endtime="20201115 22:03:47.161"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:47.163" level="INFO">VALUE: [1.6250000000016251e-06, 1.6109999999985858e-06, 1.6109999999985858e-06, 1.6250000000016251e-06, 1.5979999999984895e-06, 1.582999999999446e-06, 1.6109999999985858e-06, 1.653000000000765e-06, 1.6249999999981557e-06, 1.598000000001959e-06, 1.6110000000020552e-06, 1.6250000000016251e-06, 1.6110000000020552e-06, 1.6250000000016251e-06, 1.6109999999985858e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6109999999985858e-06, 1.6249999999981557e-06, 1.639000000001195e-06, 1.6250000000016251e-06, 1.6110000000020552e-06, 1.5420000000002099e-06, 1.6110000000020552e-06, 1.5970000000024853e-06, 1.6109999999985858e-06, 1.6110000000020552e-06, 1.6110000000020552e-06, 1.6109999999985858e-06, 1.6250000000016251e-06, 1.6110000000020552e-06, 1.6109999999985858e-06, 1.5420000000002099e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6250000000016251e-06, 1.6670000000003349e-06, 1.6250000000016251e-06, 1.6109999999985858e-06, 1.6110000000020552e-06, 1.6109999999985858e-06, 1.6110000000020552e-06, 1.6249999999981557e-06, 1.6110000000020552e-06, 1.5420000000002099e-06, 1.6529999999972955e-06, 1.6250000000016251e-06, 1.6250000000016251e-06, 1.584000000002389e-06, 1.6110000000020552e-06]</msg>
<status status="PASS" starttime="20201115 22:03:47.161" endtime="20201115 22:03:47.164"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:47.157" endtime="20201115 22:03:47.164"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:47.167" endtime="20201115 22:03:47.168"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:47.170" endtime="20201115 22:03:47.190"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:47.169" endtime="20201115 22:03:47.190"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:47.165" endtime="20201115 22:03:47.191"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:46.799" endtime="20201115 22:03:47.191"></status>
</kw>
<msg timestamp="20201115 22:03:47.191" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:47.201" endtime="20201115 22:03:47.213"></status>
</kw>
<msg timestamp="20201115 22:03:47.214" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:47.199" endtime="20201115 22:03:47.214"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:47.216" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:47.215" endtime="20201115 22:03:47.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:47.218" endtime="20201115 22:03:47.219"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:47.197" endtime="20201115 22:03:47.220"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:47.194" endtime="20201115 22:03:47.220"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:47.227" endtime="20201115 22:03:47.514"></status>
</kw>
<msg timestamp="20201115 22:03:47.517" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021323042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021324667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:47.225" endtime="20201115 22:03:47.518"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:47.526" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021323042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021324667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:47.519" endtime="20201115 22:03:47.526"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:47.527" endtime="20201115 22:03:47.529"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:47.223" endtime="20201115 22:03:47.529"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:47.221" endtime="20201115 22:03:47.530"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:47.534" level="INFO">${RESULT} = [{'time': 0.021324667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6249999999981557e-06, 'source_diff': 1.6249999999981557e-06}, {'time': 0.021392014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:47.531" endtime="20201115 22:03:47.534"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:47.548" level="INFO">${OVERHEAD} = {'diff': [1.6249999999981557e-06, 1.5970000000024853e-06, 1.6110000000020552e-06, 1.639000000001195e-06, 1.52800000000064e-06, 1.6249999999981557e-06, 1.6109999999985858e-06, 1.6109999999985858e-06, 1...</msg>
<status status="PASS" starttime="20201115 22:03:47.535" endtime="20201115 22:03:47.549"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:47.553" level="INFO">NAME: 00-overhead-2-remove</msg>
<status status="PASS" starttime="20201115 22:03:47.552" endtime="20201115 22:03:47.554"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:47.556" level="INFO">VALUE: [1.6249999999981557e-06, 1.5970000000024853e-06, 1.6110000000020552e-06, 1.639000000001195e-06, 1.52800000000064e-06, 1.6249999999981557e-06, 1.6109999999985858e-06, 1.6109999999985858e-06, 1.6120000000015289e-06, 1.582999999999446e-06, 1.6249999999981557e-06, 1.6250000000016251e-06, 1.6250000000016251e-06, 1.6669999999968654e-06, 1.653000000000765e-06, 1.6109999999985858e-06, 1.5839999999989196e-06, 1.6109999999985858e-06, 1.639000000001195e-06, 1.6249999999981557e-06, 1.6109999999985858e-06, 1.6809999999999048e-06, 1.6250000000016251e-06, 1.5969999999990159e-06, 1.6109999999985858e-06, 1.5830000000029154e-06, 1.6250000000016251e-06, 1.637999999998252e-06, 1.6110000000020552e-06, 1.653000000000765e-06, 1.653000000000765e-06, 1.582999999999446e-06, 1.6110000000020552e-06, 1.6670000000003349e-06, 1.6249999999981557e-06, 1.582999999999446e-06, 1.6249999999981557e-06, 1.5969999999990159e-06, 1.6110000000020552e-06, 1.6109999999985858e-06, 1.6109999999985858e-06, 1.5550000000003061e-06, 1.653000000000765e-06, 1.6109999999985858e-06, 1.639000000001195e-06, 1.6249999999981557e-06, 1.639000000001195e-06, 1.6249999999981557e-06, 1.6109999999985858e-06, 1.6110000000020552e-06]</msg>
<status status="PASS" starttime="20201115 22:03:47.554" endtime="20201115 22:03:47.556"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:47.549" endtime="20201115 22:03:47.557"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:47.559" endtime="20201115 22:03:47.560"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:47.563" endtime="20201115 22:03:47.582"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:47.561" endtime="20201115 22:03:47.583"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:47.557" endtime="20201115 22:03:47.583"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:47.192" endtime="20201115 22:03:47.584"></status>
</kw>
<msg timestamp="20201115 22:03:47.584" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:47.593" endtime="20201115 22:03:47.607"></status>
</kw>
<msg timestamp="20201115 22:03:47.607" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:47.591" endtime="20201115 22:03:47.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:47.610" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:47.608" endtime="20201115 22:03:47.610"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:47.611" endtime="20201115 22:03:47.612"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:47.589" endtime="20201115 22:03:47.613"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:47.587" endtime="20201115 22:03:47.613"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:47.620" endtime="20201115 22:03:47.908"></status>
</kw>
<msg timestamp="20201115 22:03:47.911" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021308458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021310069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:47.619" endtime="20201115 22:03:47.911"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:47.919" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021308458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021310069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:47.912" endtime="20201115 22:03:47.920"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:47.920" endtime="20201115 22:03:47.922"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:47.616" endtime="20201115 22:03:47.923"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:47.614" endtime="20201115 22:03:47.923"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:47.928" level="INFO">${RESULT} = [{'time': 0.021310069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6110000000020552e-06, 'source_diff': 1.6110000000020552e-06}, {'time': 0.021376278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:47.924" endtime="20201115 22:03:47.928"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:47.942" level="INFO">${OVERHEAD} = {'diff': [1.6110000000020552e-06, 1.6109999999985858e-06, 1.6110000000020552e-06, 1.6110000000020552e-06, 1.6389999999977256e-06, 1.6250000000016251e-06, 1.6949999999994747e-06, 1.6110000000020552e-06...</msg>
<status status="PASS" starttime="20201115 22:03:47.929" endtime="20201115 22:03:47.942"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:47.947" level="INFO">NAME: 00-overhead-2-remove</msg>
<status status="PASS" starttime="20201115 22:03:47.946" endtime="20201115 22:03:47.947"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:47.949" level="INFO">VALUE: [1.6110000000020552e-06, 1.6109999999985858e-06, 1.6110000000020552e-06, 1.6110000000020552e-06, 1.6389999999977256e-06, 1.6250000000016251e-06, 1.6949999999994747e-06, 1.6110000000020552e-06, 1.653000000000765e-06, 1.6249999999981557e-06, 1.639000000001195e-06, 1.5969999999990159e-06, 1.6250000000016251e-06, 1.5549999999968367e-06, 1.6529999999972955e-06, 1.6250000000016251e-06, 1.5969999999990159e-06, 1.5839999999989196e-06, 1.6250000000016251e-06, 1.5969999999990159e-06, 1.639000000001195e-06, 1.6109999999985858e-06, 1.6109999999985858e-06, 1.6380000000017214e-06, 1.5969999999990159e-06, 1.6389999999977256e-06, 1.639000000001195e-06, 1.6110000000020552e-06, 1.637999999998252e-06, 1.582999999999446e-06, 1.6109999999985858e-06, 1.6250000000016251e-06, 1.6110000000020552e-06, 1.6249999999981557e-06, 1.5550000000003061e-06, 1.6389999999977256e-06, 1.6109999999985858e-06, 1.6249999999981557e-06, 1.639000000001195e-06, 1.6109999999985858e-06, 1.6110000000020552e-06, 1.6250000000016251e-06, 1.6249999999981557e-06, 1.6250000000016251e-06, 1.639000000001195e-06, 1.6110000000020552e-06, 1.6250000000016251e-06, 1.6250000000016251e-06, 1.6249999999981557e-06, 1.6249999999981557e-06]</msg>
<status status="PASS" starttime="20201115 22:03:47.948" endtime="20201115 22:03:47.950"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:47.943" endtime="20201115 22:03:47.950"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:47.953" endtime="20201115 22:03:47.954"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:47.956" endtime="20201115 22:03:47.976"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:47.955" endtime="20201115 22:03:47.976"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:47.951" endtime="20201115 22:03:47.977"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:47.584" endtime="20201115 22:03:47.977"></status>
</kw>
<msg timestamp="20201115 22:03:47.977" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:47.987" endtime="20201115 22:03:48.000"></status>
</kw>
<msg timestamp="20201115 22:03:48.001" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:47.985" endtime="20201115 22:03:48.001"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:48.003" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:48.002" endtime="20201115 22:03:48.003"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:48.004" endtime="20201115 22:03:48.006"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:47.982" endtime="20201115 22:03:48.006"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:47.980" endtime="20201115 22:03:48.007"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:48.013" endtime="20201115 22:03:48.301"></status>
</kw>
<msg timestamp="20201115 22:03:48.305" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021347389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021349, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:03:48.012" endtime="20201115 22:03:48.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:48.313" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021347389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021349, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:03:48.306" endtime="20201115 22:03:48.314"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:48.315" endtime="20201115 22:03:48.316"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:48.009" endtime="20201115 22:03:48.317"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:48.007" endtime="20201115 22:03:48.317"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:48.322" level="INFO">${RESULT} = [{'time': 0.021349, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6109999999985858e-06, 'source_diff': 1.6109999999985858e-06}, {'time': 0.021416583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:03:48.318" endtime="20201115 22:03:48.322"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:48.336" level="INFO">${OVERHEAD} = {'diff': [1.6109999999985858e-06, 1.6109999999985858e-06, 1.6249999999981557e-06, 1.6110000000020552e-06, 1.6110000000020552e-06, 1.6109999999985858e-06, 1.6109999999985858e-06, 1.6660000000008612e-06...</msg>
<status status="PASS" starttime="20201115 22:03:48.323" endtime="20201115 22:03:48.336"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:48.340" level="INFO">NAME: 00-overhead-2-remove</msg>
<status status="PASS" starttime="20201115 22:03:48.339" endtime="20201115 22:03:48.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:48.343" level="INFO">VALUE: [1.6109999999985858e-06, 1.6109999999985858e-06, 1.6249999999981557e-06, 1.6110000000020552e-06, 1.6110000000020552e-06, 1.6109999999985858e-06, 1.6109999999985858e-06, 1.6660000000008612e-06, 1.653000000000765e-06, 1.6529999999972955e-06, 1.639000000001195e-06, 1.6109999999985858e-06, 1.5979999999984895e-06, 1.6109999999985858e-06, 1.6250000000016251e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6110000000020552e-06, 1.6110000000020552e-06, 1.582999999999446e-06, 1.5420000000002099e-06, 1.694000000000001e-06, 1.6519999999978219e-06, 1.6110000000020552e-06, 1.6109999999985858e-06, 1.582999999999446e-06, 1.6249999999981557e-06, 1.694000000000001e-06, 1.6110000000020552e-06, 1.6250000000016251e-06, 1.6250000000016251e-06, 1.6250000000016251e-06, 1.6109999999985858e-06, 1.6800000000004311e-06, 1.6800000000004311e-06, 1.6250000000016251e-06, 1.5969999999990159e-06, 1.6250000000016251e-06, 1.6660000000008612e-06, 1.653000000000765e-06, 1.5979999999984895e-06, 1.6249999999981557e-06, 1.568999999999876e-06, 1.6949999999994747e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.6250000000016251e-06, 1.6110000000020552e-06, 1.5970000000024853e-06, 1.6109999999985858e-06]</msg>
<status status="PASS" starttime="20201115 22:03:48.341" endtime="20201115 22:03:48.343"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:48.337" endtime="20201115 22:03:48.344"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:48.346" endtime="20201115 22:03:48.348"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:48.350" endtime="20201115 22:03:48.369"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:48.348" endtime="20201115 22:03:48.370"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:48.344" endtime="20201115 22:03:48.370"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:47.978" endtime="20201115 22:03:48.371"></status>
</kw>
<msg timestamp="20201115 22:03:48.371" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:48.380" endtime="20201115 22:03:48.393"></status>
</kw>
<msg timestamp="20201115 22:03:48.394" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:48.379" endtime="20201115 22:03:48.394"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:48.396" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:48.395" endtime="20201115 22:03:48.397"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:48.397" endtime="20201115 22:03:48.399"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:48.376" endtime="20201115 22:03:48.400"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:48.374" endtime="20201115 22:03:48.400"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:48.407" endtime="20201115 22:03:48.696"></status>
</kw>
<msg timestamp="20201115 22:03:48.700" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021263889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021265556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:48.405" endtime="20201115 22:03:48.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:48.708" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021263889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021265556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:48.701" endtime="20201115 22:03:48.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:48.710" endtime="20201115 22:03:48.711"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:48.402" endtime="20201115 22:03:48.712"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:48.401" endtime="20201115 22:03:48.712"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:48.717" level="INFO">${RESULT} = [{'time': 0.021265556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6670000000003349e-06, 'source_diff': 1.6670000000003349e-06}, {'time': 0.021335292, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:48.713" endtime="20201115 22:03:48.717"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:48.731" level="INFO">${OVERHEAD} = {'diff': [1.6670000000003349e-06, 1.5420000000002099e-06, 1.653000000000765e-06, 1.694000000000001e-06, 1.6109999999985858e-06, 1.6109999999985858e-06, 1.6250000000016251e-06, 1.6389999999977256e-06, ...</msg>
<status status="PASS" starttime="20201115 22:03:48.718" endtime="20201115 22:03:48.731"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:48.735" level="INFO">NAME: 00-overhead-2-remove</msg>
<status status="PASS" starttime="20201115 22:03:48.734" endtime="20201115 22:03:48.736"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:48.738" level="INFO">VALUE: [1.6670000000003349e-06, 1.5420000000002099e-06, 1.653000000000765e-06, 1.694000000000001e-06, 1.6109999999985858e-06, 1.6109999999985858e-06, 1.6250000000016251e-06, 1.6389999999977256e-06, 1.6949999999994747e-06, 1.639000000001195e-06, 1.5839999999989196e-06, 1.6109999999985858e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6250000000016251e-06, 1.6809999999999048e-06, 1.6109999999985858e-06, 1.6110000000020552e-06, 1.6250000000016251e-06, 1.5969999999990159e-06, 1.6110000000020552e-06, 1.5979999999984895e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.5969999999990159e-06, 1.5969999999990159e-06, 1.639000000001195e-06, 1.6109999999985858e-06, 1.5969999999990159e-06, 1.6110000000020552e-06, 1.639000000001195e-06, 1.6109999999985858e-06, 1.6249999999981557e-06, 1.639000000001195e-06, 1.6250000000016251e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.6250000000016251e-06, 1.6389999999977256e-06, 1.5979999999984895e-06, 1.6110000000020552e-06, 1.6109999999985858e-06, 1.653000000000765e-06, 1.6250000000016251e-06, 1.6249999999981557e-06, 1.6109999999985858e-06, 1.639000000001195e-06, 1.6109999999985858e-06, 1.6249999999981557e-06, 1.694000000000001e-06]</msg>
<status status="PASS" starttime="20201115 22:03:48.737" endtime="20201115 22:03:48.738"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:48.732" endtime="20201115 22:03:48.739"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:48.741" endtime="20201115 22:03:48.743"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:48.745" endtime="20201115 22:03:48.764"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:48.743" endtime="20201115 22:03:48.765"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:48.740" endtime="20201115 22:03:48.765"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:48.372" endtime="20201115 22:03:48.766"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:46.797" endtime="20201115 22:03:48.766"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:46.796" endtime="20201115 22:03:48.766"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:48.769" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:48.778" endtime="20201115 22:03:48.790"></status>
</kw>
<msg timestamp="20201115 22:03:48.791" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:48.776" endtime="20201115 22:03:48.791"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:48.794" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:48.792" endtime="20201115 22:03:48.794"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:48.795" endtime="20201115 22:03:48.797"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:48.773" endtime="20201115 22:03:48.798"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:48.771" endtime="20201115 22:03:48.798"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:48.806" endtime="20201115 22:03:49.093"></status>
</kw>
<msg timestamp="20201115 22:03:49.096" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023374014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023375847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:48.804" endtime="20201115 22:03:49.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:49.105" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023374014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023375847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:49.097" endtime="20201115 22:03:49.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:49.106" endtime="20201115 22:03:49.108"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:48.801" endtime="20201115 22:03:49.108"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:48.799" endtime="20201115 22:03:49.109"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:49.113" level="INFO">${RESULT} = [{'time': 0.023375847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8330000000031654e-06, 'source_diff': 1.8330000000031654e-06}, {'time': 0.023450625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:49.109" endtime="20201115 22:03:49.113"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:49.127" level="INFO">${OVERHEAD} = {'diff': [1.8330000000031654e-06, 1.832999999999696e-06, 1.8339999999991696e-06, 1.834000000002639e-06, 1.846999999999266e-06, 1.8339999999991696e-06, 1.8330000000031654e-06, 1.8199999999995997e-06, 1...</msg>
<status status="PASS" starttime="20201115 22:03:49.114" endtime="20201115 22:03:49.127"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:49.132" level="INFO">NAME: 00-overhead-3-remove</msg>
<status status="PASS" starttime="20201115 22:03:49.131" endtime="20201115 22:03:49.132"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:49.134" level="INFO">VALUE: [1.8330000000031654e-06, 1.832999999999696e-06, 1.8339999999991696e-06, 1.834000000002639e-06, 1.846999999999266e-06, 1.8339999999991696e-06, 1.8330000000031654e-06, 1.8199999999995997e-06, 1.77800000000089e-06, 1.832999999999696e-06, 1.832999999999696e-06, 1.8199999999995997e-06, 1.832999999999696e-06, 1.846999999999266e-06, 1.8199999999995997e-06, 1.8199999999995997e-06, 1.7770000000014163e-06, 1.7920000000004599e-06, 1.889000000001445e-06, 1.8610000000023053e-06, 1.832999999999696e-06, 1.8339999999991696e-06, 1.832999999999696e-06, 1.832999999999696e-06, 1.846999999999266e-06, 1.8470000000027353e-06, 1.889000000001445e-06, 1.8479999999987395e-06, 1.846999999999266e-06, 1.8199999999995997e-06, 1.832999999999696e-06, 1.8750000000018752e-06, 1.819000000000126e-06, 1.7769999999979469e-06, 1.8339999999991696e-06, 1.8199999999995997e-06, 1.832999999999696e-06, 1.8050000000005562e-06, 1.819000000000126e-06, 1.846999999999266e-06, 1.8339999999991696e-06, 1.832999999999696e-06, 1.846999999999266e-06, 1.832999999999696e-06, 1.832999999999696e-06, 1.846999999999266e-06, 1.846999999999266e-06, 1.8199999999995997e-06, 1.8479999999987395e-06, 1.8339999999991696e-06]</msg>
<status status="PASS" starttime="20201115 22:03:49.133" endtime="20201115 22:03:49.135"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:49.128" endtime="20201115 22:03:49.135"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:49.137" endtime="20201115 22:03:49.139"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:49.141" endtime="20201115 22:03:49.160"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:49.139" endtime="20201115 22:03:49.161"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:49.136" endtime="20201115 22:03:49.162"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:48.769" endtime="20201115 22:03:49.162"></status>
</kw>
<msg timestamp="20201115 22:03:49.162" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:49.171" endtime="20201115 22:03:49.187"></status>
</kw>
<msg timestamp="20201115 22:03:49.187" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:49.170" endtime="20201115 22:03:49.188"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:49.190" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:49.188" endtime="20201115 22:03:49.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:49.191" endtime="20201115 22:03:49.193"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:49.167" endtime="20201115 22:03:49.193"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:49.165" endtime="20201115 22:03:49.194"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:49.201" endtime="20201115 22:03:49.487"></status>
</kw>
<msg timestamp="20201115 22:03:49.491" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021046194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021048097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:49.199" endtime="20201115 22:03:49.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:49.499" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021046194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021048097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:49.492" endtime="20201115 22:03:49.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:49.500" endtime="20201115 22:03:49.502"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:49.196" endtime="20201115 22:03:49.503"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:49.194" endtime="20201115 22:03:49.503"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:49.508" level="INFO">${RESULT} = [{'time': 0.021048097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.903000000001015e-06, 'source_diff': 1.903000000001015e-06}, {'time': 0.021124236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:49.504" endtime="20201115 22:03:49.508"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:49.522" level="INFO">${OVERHEAD} = {'diff': [1.903000000001015e-06, 1.8050000000005562e-06, 1.846999999999266e-06, 1.8200000000030692e-06, 1.832999999999696e-06, 1.77800000000089e-06, 1.846999999999266e-06, 1.834000000002639e-06, 1.819...</msg>
<status status="PASS" starttime="20201115 22:03:49.509" endtime="20201115 22:03:49.522"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:49.526" level="INFO">NAME: 00-overhead-3-remove</msg>
<status status="PASS" starttime="20201115 22:03:49.525" endtime="20201115 22:03:49.527"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:49.529" level="INFO">VALUE: [1.903000000001015e-06, 1.8050000000005562e-06, 1.846999999999266e-06, 1.8200000000030692e-06, 1.832999999999696e-06, 1.77800000000089e-06, 1.846999999999266e-06, 1.834000000002639e-06, 1.8199999999995997e-06, 1.819000000000126e-06, 1.8749999999984057e-06, 1.832999999999696e-06, 1.8339999999991696e-06, 1.832999999999696e-06, 1.846999999999266e-06, 1.832999999999696e-06, 1.819000000000126e-06, 1.9020000000015413e-06, 1.846999999999266e-06, 1.8339999999991696e-06, 1.8049999999970867e-06, 1.8339999999991696e-06, 1.846999999999266e-06, 1.832999999999696e-06, 1.8199999999995997e-06, 1.846999999999266e-06, 1.846999999999266e-06, 1.832999999999696e-06, 1.819000000000126e-06, 1.8470000000027353e-06, 1.8199999999995997e-06, 1.832999999999696e-06, 1.846999999999266e-06, 1.8339999999991696e-06, 1.7779999999974205e-06, 1.8060000000000298e-06, 1.832999999999696e-06, 1.8470000000027353e-06, 1.76400000000132e-06, 1.8339999999991696e-06, 1.832999999999696e-06, 1.8330000000031654e-06, 1.834000000002639e-06, 1.8060000000000298e-06, 1.8339999999991696e-06, 1.819000000000126e-06, 1.8609999999988358e-06, 1.832999999999696e-06, 1.819000000000126e-06, 1.8199999999995997e-06]</msg>
<status status="PASS" starttime="20201115 22:03:49.527" endtime="20201115 22:03:49.529"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:49.522" endtime="20201115 22:03:49.530"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:49.532" endtime="20201115 22:03:49.533"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:49.536" endtime="20201115 22:03:49.555"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:49.534" endtime="20201115 22:03:49.556"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:49.530" endtime="20201115 22:03:49.556"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:49.163" endtime="20201115 22:03:49.557"></status>
</kw>
<msg timestamp="20201115 22:03:49.557" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:49.567" endtime="20201115 22:03:49.581"></status>
</kw>
<msg timestamp="20201115 22:03:49.581" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:49.565" endtime="20201115 22:03:49.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:49.584" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:49.582" endtime="20201115 22:03:49.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:49.585" endtime="20201115 22:03:49.586"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:49.562" endtime="20201115 22:03:49.587"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:49.560" endtime="20201115 22:03:49.587"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:49.594" endtime="20201115 22:03:49.882"></status>
</kw>
<msg timestamp="20201115 22:03:49.885" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021048236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021050056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:49.593" endtime="20201115 22:03:49.885"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:49.893" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021048236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021050056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:49.886" endtime="20201115 22:03:49.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:49.894" endtime="20201115 22:03:49.896"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:49.590" endtime="20201115 22:03:49.897"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:49.588" endtime="20201115 22:03:49.897"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:49.901" level="INFO">${RESULT} = [{'time': 0.021050056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8199999999995997e-06, 'source_diff': 1.8199999999995997e-06}, {'time': 0.021126194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:49.898" endtime="20201115 22:03:49.902"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:49.916" level="INFO">${OVERHEAD} = {'diff': [1.8199999999995997e-06, 1.7910000000009862e-06, 1.8060000000000298e-06, 1.846999999999266e-06, 1.8050000000005562e-06, 1.8339999999991696e-06, 1.8339999999991696e-06, 1.7769999999979469e-06,...</msg>
<status status="PASS" starttime="20201115 22:03:49.903" endtime="20201115 22:03:49.916"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:49.920" level="INFO">NAME: 00-overhead-3-remove</msg>
<status status="PASS" starttime="20201115 22:03:49.919" endtime="20201115 22:03:49.921"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:49.923" level="INFO">VALUE: [1.8199999999995997e-06, 1.7910000000009862e-06, 1.8060000000000298e-06, 1.846999999999266e-06, 1.8050000000005562e-06, 1.8339999999991696e-06, 1.8339999999991696e-06, 1.7769999999979469e-06, 1.8610000000023053e-06, 1.7910000000009862e-06, 1.846999999999266e-06, 1.7920000000004599e-06, 1.819000000000126e-06, 1.832999999999696e-06, 1.8470000000027353e-06, 1.819000000000126e-06, 1.832999999999696e-06, 1.848000000002209e-06, 1.819000000000126e-06, 1.846999999999266e-06, 1.8339999999991696e-06, 1.7910000000009862e-06, 1.7920000000004599e-06, 1.832999999999696e-06, 1.8470000000027353e-06, 1.8199999999995997e-06, 1.8199999999995997e-06, 1.7639999999978506e-06, 1.848000000002209e-06, 1.846999999999266e-06, 1.832999999999696e-06, 1.8339999999991696e-06, 1.846999999999266e-06, 1.8199999999995997e-06, 1.8199999999995997e-06, 1.8609999999988358e-06, 1.832999999999696e-06, 1.846999999999266e-06, 1.832999999999696e-06, 1.832999999999696e-06, 1.8750000000018752e-06, 1.832999999999696e-06, 1.819000000000126e-06, 1.8470000000027353e-06, 1.832999999999696e-06, 1.8609999999988358e-06, 1.8339999999991696e-06, 1.8060000000000298e-06, 1.832999999999696e-06, 1.7770000000014163e-06]</msg>
<status status="PASS" starttime="20201115 22:03:49.921" endtime="20201115 22:03:49.923"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:49.917" endtime="20201115 22:03:49.924"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:49.926" endtime="20201115 22:03:49.928"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:49.930" endtime="20201115 22:03:49.950"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:49.928" endtime="20201115 22:03:49.950"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:49.924" endtime="20201115 22:03:49.951"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:49.557" endtime="20201115 22:03:49.951"></status>
</kw>
<msg timestamp="20201115 22:03:49.951" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:49.961" endtime="20201115 22:03:49.974"></status>
</kw>
<msg timestamp="20201115 22:03:49.974" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:49.959" endtime="20201115 22:03:49.975"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:49.977" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:49.975" endtime="20201115 22:03:49.977"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:49.978" endtime="20201115 22:03:49.980"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:49.956" endtime="20201115 22:03:49.980"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:49.954" endtime="20201115 22:03:49.981"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:49.987" endtime="20201115 22:03:50.276"></status>
</kw>
<msg timestamp="20201115 22:03:50.279" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020995875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020997708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:49.986" endtime="20201115 22:03:50.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:50.287" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020995875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020997708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:50.280" endtime="20201115 22:03:50.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:50.289" endtime="20201115 22:03:50.290"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:49.983" endtime="20201115 22:03:50.291"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:49.981" endtime="20201115 22:03:50.291"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:50.296" level="INFO">${RESULT} = [{'time': 0.020997708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.832999999999696e-06, 'source_diff': 1.832999999999696e-06}, {'time': 0.021072556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:50.292" endtime="20201115 22:03:50.296"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:50.310" level="INFO">${OVERHEAD} = {'diff': [1.832999999999696e-06, 1.77800000000089e-06, 1.8470000000027353e-06, 1.832999999999696e-06, 1.846999999999266e-06, 1.8479999999987395e-06, 1.819000000000126e-06, 1.8750000000018752e-06, 1.83...</msg>
<status status="PASS" starttime="20201115 22:03:50.297" endtime="20201115 22:03:50.310"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:50.314" level="INFO">NAME: 00-overhead-3-remove</msg>
<status status="PASS" starttime="20201115 22:03:50.313" endtime="20201115 22:03:50.315"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:50.317" level="INFO">VALUE: [1.832999999999696e-06, 1.77800000000089e-06, 1.8470000000027353e-06, 1.832999999999696e-06, 1.846999999999266e-06, 1.8479999999987395e-06, 1.819000000000126e-06, 1.8750000000018752e-06, 1.832999999999696e-06, 1.832999999999696e-06, 1.819000000000126e-06, 1.8199999999995997e-06, 1.832999999999696e-06, 1.8610000000023053e-06, 1.832999999999696e-06, 1.8609999999988358e-06, 1.819000000000126e-06, 1.8339999999991696e-06, 1.832999999999696e-06, 1.846999999999266e-06, 1.832999999999696e-06, 1.832999999999696e-06, 1.8050000000005562e-06, 1.7499999999982807e-06, 1.846999999999266e-06, 1.8060000000000298e-06, 1.846999999999266e-06, 1.8479999999987395e-06, 1.8479999999987395e-06, 1.819000000000126e-06, 1.819000000000126e-06, 1.832999999999696e-06, 1.819000000000126e-06, 1.846999999999266e-06, 1.846999999999266e-06, 1.8199999999995997e-06, 1.846999999999266e-06, 1.8339999999991696e-06, 1.8049999999970867e-06, 1.819000000000126e-06, 1.832999999999696e-06, 1.8330000000031654e-06, 1.819000000000126e-06, 1.819000000000126e-06, 1.8060000000000298e-06, 1.819000000000126e-06, 1.819000000000126e-06, 1.846999999999266e-06, 1.819000000000126e-06, 1.8339999999991696e-06]</msg>
<status status="PASS" starttime="20201115 22:03:50.315" endtime="20201115 22:03:50.318"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:50.311" endtime="20201115 22:03:50.318"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:50.321" endtime="20201115 22:03:50.322"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:50.324" endtime="20201115 22:03:50.344"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:50.323" endtime="20201115 22:03:50.344"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:50.319" endtime="20201115 22:03:50.345"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:49.952" endtime="20201115 22:03:50.345"></status>
</kw>
<msg timestamp="20201115 22:03:50.345" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:50.355" endtime="20201115 22:03:50.367"></status>
</kw>
<msg timestamp="20201115 22:03:50.368" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:50.353" endtime="20201115 22:03:50.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:50.370" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:50.369" endtime="20201115 22:03:50.370"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:50.371" endtime="20201115 22:03:50.373"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:50.350" endtime="20201115 22:03:50.373"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:50.348" endtime="20201115 22:03:50.374"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:50.381" endtime="20201115 22:03:50.668"></status>
</kw>
<msg timestamp="20201115 22:03:50.671" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021127986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021129819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:50.379" endtime="20201115 22:03:50.671"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:50.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021127986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021129819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:50.672" endtime="20201115 22:03:50.680"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:50.681" endtime="20201115 22:03:50.683"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:50.376" endtime="20201115 22:03:50.683"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:50.375" endtime="20201115 22:03:50.684"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:50.688" level="INFO">${RESULT} = [{'time': 0.021129819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.832999999999696e-06, 'source_diff': 1.832999999999696e-06}, {'time': 0.021205097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:50.684" endtime="20201115 22:03:50.688"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:50.702" level="INFO">${OVERHEAD} = {'diff': [1.832999999999696e-06, 1.832999999999696e-06, 1.8339999999991696e-06, 1.8060000000000298e-06, 1.832999999999696e-06, 1.7919999999969904e-06, 1.832999999999696e-06, 1.819000000000126e-06, 1.8...</msg>
<status status="PASS" starttime="20201115 22:03:50.689" endtime="20201115 22:03:50.702"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:50.707" level="INFO">NAME: 00-overhead-3-remove</msg>
<status status="PASS" starttime="20201115 22:03:50.706" endtime="20201115 22:03:50.707"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:50.709" level="INFO">VALUE: [1.832999999999696e-06, 1.832999999999696e-06, 1.8339999999991696e-06, 1.8060000000000298e-06, 1.832999999999696e-06, 1.7919999999969904e-06, 1.832999999999696e-06, 1.819000000000126e-06, 1.8199999999995997e-06, 1.819000000000126e-06, 1.7920000000004599e-06, 1.7630000000018464e-06, 1.8749999999984057e-06, 1.832999999999696e-06, 1.762999999998377e-06, 1.846999999999266e-06, 1.901999999998072e-06, 1.8060000000000298e-06, 1.819000000000126e-06, 1.819000000000126e-06, 1.8199999999995997e-06, 1.846999999999266e-06, 1.7920000000004599e-06, 1.8339999999991696e-06, 1.832999999999696e-06, 1.8199999999995997e-06, 1.8339999999991696e-06, 1.8199999999995997e-06, 1.8610000000023053e-06, 1.819000000000126e-06, 1.8749999999984057e-06, 1.8339999999991696e-06, 1.8339999999991696e-06, 1.8479999999987395e-06, 1.8470000000027353e-06, 1.8339999999991696e-06, 1.834000000002639e-06, 1.8470000000027353e-06, 1.8750000000018752e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.8339999999991696e-06, 1.832999999999696e-06, 1.832999999999696e-06, 1.832999999999696e-06, 1.8470000000027353e-06, 1.8339999999991696e-06, 1.832999999999696e-06, 1.8619999999983095e-06, 1.8060000000000298e-06]</msg>
<status status="PASS" starttime="20201115 22:03:50.708" endtime="20201115 22:03:50.714"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:50.703" endtime="20201115 22:03:50.715"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:50.717" endtime="20201115 22:03:50.718"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:50.721" endtime="20201115 22:03:50.740"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:50.719" endtime="20201115 22:03:50.741"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:50.715" endtime="20201115 22:03:50.741"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:50.346" endtime="20201115 22:03:50.741"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:48.767" endtime="20201115 22:03:50.742"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:48.767" endtime="20201115 22:03:50.742"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:50.744" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:50.753" endtime="20201115 22:03:50.769"></status>
</kw>
<msg timestamp="20201115 22:03:50.769" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:50.752" endtime="20201115 22:03:50.769"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:50.772" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:50.770" endtime="20201115 22:03:50.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:50.773" endtime="20201115 22:03:50.774"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:50.749" endtime="20201115 22:03:50.775"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:50.747" endtime="20201115 22:03:50.776"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:50.782" endtime="20201115 22:03:51.070"></status>
</kw>
<msg timestamp="20201115 22:03:51.073" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023053917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023055972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:50.781" endtime="20201115 22:03:51.073"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:51.083" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023053917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023055972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:51.074" endtime="20201115 22:03:51.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:51.084" endtime="20201115 22:03:51.087"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:50.778" endtime="20201115 22:03:51.088"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:50.776" endtime="20201115 22:03:51.089"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:51.093" level="INFO">${RESULT} = [{'time': 0.023055972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.055000000000806e-06, 'source_diff': 2.055000000000806e-06}, {'time': 0.023136153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:51.089" endtime="20201115 22:03:51.093"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:51.108" level="INFO">${OVERHEAD} = {'diff': [2.055000000000806e-06, 2.02800000000114e-06, 2.069000000000376e-06, 1.9999999999985307e-06, 2.02800000000114e-06, 2.02800000000114e-06, 2.0839999999994197e-06, 2.02800000000114e-06, 2.056000...</msg>
<status status="PASS" starttime="20201115 22:03:51.094" endtime="20201115 22:03:51.108"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:51.114" level="INFO">NAME: 00-overhead-4-remove</msg>
<status status="PASS" starttime="20201115 22:03:51.112" endtime="20201115 22:03:51.114"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:51.117" level="INFO">VALUE: [2.055000000000806e-06, 2.02800000000114e-06, 2.069000000000376e-06, 1.9999999999985307e-06, 2.02800000000114e-06, 2.02800000000114e-06, 2.0839999999994197e-06, 2.02800000000114e-06, 2.05600000000028e-06, 2.0270000000016664e-06, 2.069000000000376e-06, 2.0279999999976706e-06, 2.084000000002889e-06, 2.05600000000028e-06, 2.0699999999998497e-06, 2.069000000000376e-06, 2.055000000000806e-06, 2.0549999999973367e-06, 2.01400000000157e-06, 2.0410000000012363e-06, 2.0410000000012363e-06, 1.9999999999985307e-06, 2.0279999999976706e-06, 2.04200000000071e-06, 2.040999999997767e-06, 2.01400000000157e-06, 2.04200000000071e-06, 2.0279999999976706e-06, 2.0279999999976706e-06, 2.084000000002889e-06, 2.05600000000028e-06, 2.02800000000114e-06, 2.055000000000806e-06, 2.055000000000806e-06, 2.04200000000071e-06, 2.0279999999976706e-06, 2.0279999999976706e-06, 2.05600000000028e-06, 2.040999999997767e-06, 2.04200000000071e-06, 2.0419999999972405e-06, 2.02800000000114e-06, 2.0270000000016664e-06, 2.000000000002e-06, 2.0410000000012363e-06, 2.0419999999972405e-06, 2.0699999999998497e-06, 2.05600000000028e-06, 2.0699999999998497e-06, 2.04200000000071e-06]</msg>
<status status="PASS" starttime="20201115 22:03:51.115" endtime="20201115 22:03:51.117"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:51.109" endtime="20201115 22:03:51.118"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:51.120" endtime="20201115 22:03:51.121"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:51.124" endtime="20201115 22:03:51.143"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:51.122" endtime="20201115 22:03:51.144"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:51.118" endtime="20201115 22:03:51.144"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:50.745" endtime="20201115 22:03:51.144"></status>
</kw>
<msg timestamp="20201115 22:03:51.145" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:51.154" endtime="20201115 22:03:51.170"></status>
</kw>
<msg timestamp="20201115 22:03:51.170" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:51.152" endtime="20201115 22:03:51.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:51.173" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:51.171" endtime="20201115 22:03:51.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:51.174" endtime="20201115 22:03:51.175"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:51.150" endtime="20201115 22:03:51.176"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:51.147" endtime="20201115 22:03:51.176"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:51.183" endtime="20201115 22:03:51.470"></status>
</kw>
<msg timestamp="20201115 22:03:51.473" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021454847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021456917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:51.182" endtime="20201115 22:03:51.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:51.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021454847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021456917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:51.474" endtime="20201115 22:03:51.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:51.482" endtime="20201115 22:03:51.484"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:51.179" endtime="20201115 22:03:51.485"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:51.177" endtime="20201115 22:03:51.485"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:51.490" level="INFO">${RESULT} = [{'time': 0.021456917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0699999999998497e-06, 'source_diff': 2.0699999999998497e-06}, {'time': 0.021537903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:51.486" endtime="20201115 22:03:51.490"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:51.504" level="INFO">${OVERHEAD} = {'diff': [2.0699999999998497e-06, 2.0699999999998497e-06, 2.069000000000376e-06, 1.9869999999984345e-06, 2.0410000000012363e-06, 2.0270000000016664e-06, 2.096999999999516e-06, 2.0699999999998497e-06, ...</msg>
<status status="PASS" starttime="20201115 22:03:51.491" endtime="20201115 22:03:51.504"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:51.509" level="INFO">NAME: 00-overhead-4-remove</msg>
<status status="PASS" starttime="20201115 22:03:51.508" endtime="20201115 22:03:51.509"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:51.511" level="INFO">VALUE: [2.0699999999998497e-06, 2.0699999999998497e-06, 2.069000000000376e-06, 1.9869999999984345e-06, 2.0410000000012363e-06, 2.0270000000016664e-06, 2.096999999999516e-06, 2.0699999999998497e-06, 2.02800000000114e-06, 2.04200000000071e-06, 2.0279999999976706e-06, 2.05600000000028e-06, 2.110999999999086e-06, 2.02800000000114e-06, 2.0699999999998497e-06, 1.9860000000024303e-06, 1.9999999999985307e-06, 2.000000000002e-06, 2.0279999999976706e-06, 2.0410000000012363e-06, 2.0410000000012363e-06, 2.055000000000806e-06, 2.040999999997767e-06, 2.0549999999973367e-06, 2.0410000000012363e-06, 2.05600000000028e-06, 2.055000000000806e-06, 2.04200000000071e-06, 2.0139999999981006e-06, 2.05600000000028e-06, 2.096999999999516e-06, 2.096999999999516e-06, 2.04200000000071e-06, 2.0559999999968104e-06, 2.0699999999998497e-06, 2.069000000000376e-06, 2.0279999999976706e-06, 2.0549999999973367e-06, 2.096999999999516e-06, 2.096999999999516e-06, 2.04200000000071e-06, 2.04200000000071e-06, 2.098000000002459e-06, 2.0410000000012363e-06, 2.1110000000025553e-06, 2.0419999999972405e-06, 2.05600000000028e-06, 2.0279999999976706e-06, 2.04200000000071e-06, 2.055000000000806e-06]</msg>
<status status="PASS" starttime="20201115 22:03:51.510" endtime="20201115 22:03:51.512"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:51.505" endtime="20201115 22:03:51.512"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:51.515" endtime="20201115 22:03:51.516"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:51.518" endtime="20201115 22:03:51.538"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:51.517" endtime="20201115 22:03:51.538"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:51.513" endtime="20201115 22:03:51.539"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:51.145" endtime="20201115 22:03:51.539"></status>
</kw>
<msg timestamp="20201115 22:03:51.539" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:51.549" endtime="20201115 22:03:51.563"></status>
</kw>
<msg timestamp="20201115 22:03:51.564" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:51.547" endtime="20201115 22:03:51.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:51.566" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:51.565" endtime="20201115 22:03:51.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:51.567" endtime="20201115 22:03:51.569"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:51.544" endtime="20201115 22:03:51.570"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:51.542" endtime="20201115 22:03:51.570"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:51.577" endtime="20201115 22:03:51.865"></status>
</kw>
<msg timestamp="20201115 22:03:51.869" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020543069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020545139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:51.575" endtime="20201115 22:03:51.869"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:51.877" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020543069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020545139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:51.870" endtime="20201115 22:03:51.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:51.878" endtime="20201115 22:03:51.880"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:51.572" endtime="20201115 22:03:51.880"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:51.571" endtime="20201115 22:03:51.881"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:51.885" level="INFO">${RESULT} = [{'time': 0.020545139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0699999999998497e-06, 'source_diff': 2.0699999999998497e-06}, {'time': 0.020624722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:51.882" endtime="20201115 22:03:51.886"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:51.900" level="INFO">${OVERHEAD} = {'diff': [2.0699999999998497e-06, 2.0410000000012363e-06, 2.040999999997767e-06, 2.0699999999998497e-06, 2.0839999999994197e-06, 2.0270000000016664e-06, 2.04200000000071e-06, 2.02800000000114e-06, 2.0...</msg>
<status status="PASS" starttime="20201115 22:03:51.887" endtime="20201115 22:03:51.900"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:51.904" level="INFO">NAME: 00-overhead-4-remove</msg>
<status status="PASS" starttime="20201115 22:03:51.903" endtime="20201115 22:03:51.905"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:51.907" level="INFO">VALUE: [2.0699999999998497e-06, 2.0410000000012363e-06, 2.040999999997767e-06, 2.0699999999998497e-06, 2.0839999999994197e-06, 2.0270000000016664e-06, 2.04200000000071e-06, 2.02800000000114e-06, 2.04200000000071e-06, 2.0549999999973367e-06, 2.04200000000071e-06, 2.0419999999972405e-06, 2.055000000000806e-06, 2.0419999999972405e-06, 2.04200000000071e-06, 2.05600000000028e-06, 2.0419999999972405e-06, 2.0419999999972405e-06, 2.0410000000012363e-06, 2.05600000000028e-06, 2.082999999999946e-06, 2.110999999999086e-06, 1.9860000000024303e-06, 2.082999999999946e-06, 2.04200000000071e-06, 2.04200000000071e-06, 2.01400000000157e-06, 2.04200000000071e-06, 2.040999999997767e-06, 2.05600000000028e-06, 2.05600000000028e-06, 2.069000000000376e-06, 2.069000000000376e-06, 2.04200000000071e-06, 2.069000000000376e-06, 2.055000000000806e-06, 2.05600000000028e-06, 2.02800000000114e-06, 2.0410000000012363e-06, 2.04200000000071e-06, 2.05600000000028e-06, 2.1110000000025553e-06, 2.0279999999976706e-06, 2.0699999999998497e-06, 2.0410000000012363e-06, 2.0699999999998497e-06, 1.9860000000024303e-06, 2.05600000000028e-06, 2.0419999999972405e-06, 2.096999999999516e-06]</msg>
<status status="PASS" starttime="20201115 22:03:51.906" endtime="20201115 22:03:51.907"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:51.901" endtime="20201115 22:03:51.908"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:51.910" endtime="20201115 22:03:51.912"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:51.914" endtime="20201115 22:03:51.933"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:51.912" endtime="20201115 22:03:51.934"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:51.909" endtime="20201115 22:03:51.934"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:51.540" endtime="20201115 22:03:51.935"></status>
</kw>
<msg timestamp="20201115 22:03:51.935" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:51.944" endtime="20201115 22:03:51.960"></status>
</kw>
<msg timestamp="20201115 22:03:51.960" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:51.942" endtime="20201115 22:03:51.960"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:51.963" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:51.961" endtime="20201115 22:03:51.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:51.964" endtime="20201115 22:03:51.966"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:51.940" endtime="20201115 22:03:51.966"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:51.938" endtime="20201115 22:03:51.967"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:51.973" endtime="20201115 22:03:52.260"></status>
</kw>
<msg timestamp="20201115 22:03:52.263" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021167667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021169778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:51.972" endtime="20201115 22:03:52.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:52.272" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021167667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021169778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:52.265" endtime="20201115 22:03:52.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:52.274" endtime="20201115 22:03:52.275"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:51.969" endtime="20201115 22:03:52.276"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:51.967" endtime="20201115 22:03:52.276"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:52.281" level="INFO">${RESULT} = [{'time': 0.021169778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.110999999999086e-06, 'source_diff': 2.110999999999086e-06}, {'time': 0.021251139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:52.277" endtime="20201115 22:03:52.281"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:52.295" level="INFO">${OVERHEAD} = {'diff': [2.110999999999086e-06, 2.05600000000028e-06, 2.05600000000028e-06, 2.0410000000012363e-06, 1.9999999999985307e-06, 2.05600000000028e-06, 2.0139999999981006e-06, 2.069000000000376e-06, 2.0560...</msg>
<status status="PASS" starttime="20201115 22:03:52.282" endtime="20201115 22:03:52.295"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:52.299" level="INFO">NAME: 00-overhead-4-remove</msg>
<status status="PASS" starttime="20201115 22:03:52.298" endtime="20201115 22:03:52.300"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:52.302" level="INFO">VALUE: [2.110999999999086e-06, 2.05600000000028e-06, 2.05600000000028e-06, 2.0410000000012363e-06, 1.9999999999985307e-06, 2.05600000000028e-06, 2.0139999999981006e-06, 2.069000000000376e-06, 2.05600000000028e-06, 2.055000000000806e-06, 2.02800000000114e-06, 2.0549999999973367e-06, 2.0970000000029854e-06, 2.082999999999946e-06, 2.02800000000114e-06, 2.04200000000071e-06, 2.069000000000376e-06, 2.05600000000028e-06, 2.04200000000071e-06, 2.02800000000114e-06, 2.055000000000806e-06, 1.9999999999985307e-06, 2.0410000000012363e-06, 2.04200000000071e-06, 1.9860000000024303e-06, 2.0279999999976706e-06, 2.110999999999086e-06, 2.05600000000028e-06, 2.069000000000376e-06, 2.0549999999973367e-06, 2.0410000000012363e-06, 2.026999999998197e-06, 2.04200000000071e-06, 2.0549999999973367e-06, 2.069000000000376e-06, 2.02800000000114e-06, 1.9999999999985307e-06, 2.0699999999998497e-06, 2.0699999999998497e-06, 2.05600000000028e-06, 2.0410000000012363e-06, 2.0279999999976706e-06, 2.0419999999972405e-06, 2.055000000000806e-06, 1.957999999999821e-06, 2.05600000000028e-06, 2.05600000000028e-06, 2.0410000000012363e-06, 2.0839999999994197e-06, 2.04200000000071e-06]</msg>
<status status="PASS" starttime="20201115 22:03:52.300" endtime="20201115 22:03:52.302"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:52.296" endtime="20201115 22:03:52.303"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:52.305" endtime="20201115 22:03:52.307"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:52.309" endtime="20201115 22:03:52.328"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:52.307" endtime="20201115 22:03:52.329"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:52.303" endtime="20201115 22:03:52.329"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:51.935" endtime="20201115 22:03:52.330"></status>
</kw>
<msg timestamp="20201115 22:03:52.330" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:52.339" endtime="20201115 22:03:52.354"></status>
</kw>
<msg timestamp="20201115 22:03:52.354" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:52.338" endtime="20201115 22:03:52.354"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:52.357" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:52.355" endtime="20201115 22:03:52.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:52.358" endtime="20201115 22:03:52.360"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:52.335" endtime="20201115 22:03:52.360"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:52.333" endtime="20201115 22:03:52.361"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:52.367" endtime="20201115 22:03:52.655"></status>
</kw>
<msg timestamp="20201115 22:03:52.658" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020603917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020606, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:03:52.366" endtime="20201115 22:03:52.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:52.667" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020603917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020606, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:03:52.659" endtime="20201115 22:03:52.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:52.668" endtime="20201115 22:03:52.670"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:52.363" endtime="20201115 22:03:52.670"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:52.361" endtime="20201115 22:03:52.671"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:52.675" level="INFO">${RESULT} = [{'time': 0.020606, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.082999999999946e-06, 'source_diff': 2.082999999999946e-06}, {'time': 0.020688375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 22:03:52.672" endtime="20201115 22:03:52.675"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:52.689" level="INFO">${OVERHEAD} = {'diff': [2.082999999999946e-06, 2.0559999999968104e-06, 2.069000000000376e-06, 2.0410000000012363e-06, 2.04200000000071e-06, 2.0410000000012363e-06, 2.04200000000071e-06, 2.02800000000114e-06, 2.0560...</msg>
<status status="PASS" starttime="20201115 22:03:52.676" endtime="20201115 22:03:52.689"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:52.694" level="INFO">NAME: 00-overhead-4-remove</msg>
<status status="PASS" starttime="20201115 22:03:52.693" endtime="20201115 22:03:52.694"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:52.696" level="INFO">VALUE: [2.082999999999946e-06, 2.0559999999968104e-06, 2.069000000000376e-06, 2.0410000000012363e-06, 2.04200000000071e-06, 2.0410000000012363e-06, 2.04200000000071e-06, 2.02800000000114e-06, 2.05600000000028e-06, 2.055000000000806e-06, 1.971999999999391e-06, 2.04200000000071e-06, 2.01400000000157e-06, 2.0410000000012363e-06, 2.055000000000806e-06, 2.04200000000071e-06, 2.0419999999972405e-06, 2.055000000000806e-06, 2.05600000000028e-06, 2.0139999999981006e-06, 2.05600000000028e-06, 2.04200000000071e-06, 2.069000000000376e-06, 2.05600000000028e-06, 2.098000000002459e-06, 2.0139999999981006e-06, 2.04200000000071e-06, 2.0279999999976706e-06, 2.0699999999998497e-06, 2.0419999999972405e-06, 2.055000000000806e-06, 2.04200000000071e-06, 2.01400000000157e-06, 2.04200000000071e-06, 2.05600000000028e-06, 2.05600000000028e-06, 2.0970000000029854e-06, 2.05600000000028e-06, 2.0699999999998497e-06, 2.110999999999086e-06, 2.04200000000071e-06, 2.055000000000806e-06, 2.04200000000071e-06, 2.04200000000071e-06, 2.055000000000806e-06, 1.971999999999391e-06, 2.055000000000806e-06, 2.04200000000071e-06, 2.04200000000071e-06, 2.04200000000071e-06]</msg>
<status status="PASS" starttime="20201115 22:03:52.695" endtime="20201115 22:03:52.697"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:52.690" endtime="20201115 22:03:52.697"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:52.700" endtime="20201115 22:03:52.701"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:52.703" endtime="20201115 22:03:52.723"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:52.702" endtime="20201115 22:03:52.723"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:52.698" endtime="20201115 22:03:52.724"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:52.330" endtime="20201115 22:03:52.724"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:50.743" endtime="20201115 22:03:52.724"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:50.742" endtime="20201115 22:03:52.724"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:52.727" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:52.736" endtime="20201115 22:03:52.751"></status>
</kw>
<msg timestamp="20201115 22:03:52.751" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:52.734" endtime="20201115 22:03:52.751"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:52.754" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:52.752" endtime="20201115 22:03:52.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:52.755" endtime="20201115 22:03:52.756"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:52.732" endtime="20201115 22:03:52.757"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:52.729" endtime="20201115 22:03:52.757"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:52.765" endtime="20201115 22:03:53.055"></status>
</kw>
<msg timestamp="20201115 22:03:53.058" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023032625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023034903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:52.763" endtime="20201115 22:03:53.059"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:53.067" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023032625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023034903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:53.059" endtime="20201115 22:03:53.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:53.068" endtime="20201115 22:03:53.070"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:52.760" endtime="20201115 22:03:53.070"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:52.758" endtime="20201115 22:03:53.071"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:53.075" level="INFO">${RESULT} = [{'time': 0.023034903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2779999999979206e-06, 'source_diff': 2.2779999999979206e-06}, {'time': 0.02312475, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 22:03:53.071" endtime="20201115 22:03:53.075"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:53.089" level="INFO">${OVERHEAD} = {'diff': [2.2779999999979206e-06, 2.2499999999987808e-06, 2.27800000000139e-06, 2.26400000000182e-06, 2.26400000000182e-06, 2.208000000000071e-06, 2.29200000000096e-06, 2.2499999999987808e-06, 2.22199...</msg>
<status status="PASS" starttime="20201115 22:03:53.076" endtime="20201115 22:03:53.089"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:53.094" level="INFO">NAME: 00-overhead-5-remove</msg>
<status status="PASS" starttime="20201115 22:03:53.093" endtime="20201115 22:03:53.094"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:53.096" level="INFO">VALUE: [2.2779999999979206e-06, 2.2499999999987808e-06, 2.27800000000139e-06, 2.26400000000182e-06, 2.26400000000182e-06, 2.208000000000071e-06, 2.29200000000096e-06, 2.2499999999987808e-06, 2.221999999999641e-06, 2.25000000000225e-06, 2.2499999999987808e-06, 2.2779999999979206e-06, 2.29200000000096e-06, 2.2639999999983507e-06, 2.2360000000026803e-06, 2.29200000000096e-06, 2.3339999999996697e-06, 2.27800000000139e-06, 2.2919999999974905e-06, 2.25000000000225e-06, 2.26400000000182e-06, 2.25000000000225e-06, 2.2499999999987808e-06, 2.26400000000182e-06, 2.26400000000182e-06, 2.2770000000019164e-06, 2.235999999999211e-06, 2.27800000000139e-06, 2.262999999998877e-06, 2.2779999999979206e-06, 2.26400000000182e-06, 2.30600000000053e-06, 2.2639999999983507e-06, 2.2639999999983507e-06, 2.2499999999987808e-06, 2.30600000000053e-06, 2.2910000000014863e-06, 2.235999999999211e-06, 2.2630000000023465e-06, 2.26400000000182e-06, 2.305000000001056e-06, 2.25000000000225e-06, 2.2639999999983507e-06, 2.26400000000182e-06, 2.30600000000053e-06, 2.221999999999641e-06, 2.2779999999979206e-06, 2.2770000000019164e-06, 2.25000000000225e-06, 2.2089999999995447e-06]</msg>
<status status="PASS" starttime="20201115 22:03:53.095" endtime="20201115 22:03:53.097"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:53.090" endtime="20201115 22:03:53.097"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:53.100" endtime="20201115 22:03:53.101"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:53.103" endtime="20201115 22:03:53.123"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:53.102" endtime="20201115 22:03:53.123"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:53.098" endtime="20201115 22:03:53.124"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:52.727" endtime="20201115 22:03:53.124"></status>
</kw>
<msg timestamp="20201115 22:03:53.124" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:53.133" endtime="20201115 22:03:53.149"></status>
</kw>
<msg timestamp="20201115 22:03:53.149" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:53.132" endtime="20201115 22:03:53.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:53.152" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:53.151" endtime="20201115 22:03:53.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:53.154" endtime="20201115 22:03:53.155"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:53.129" endtime="20201115 22:03:53.156"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:53.127" endtime="20201115 22:03:53.156"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:53.163" endtime="20201115 22:03:53.451"></status>
</kw>
<msg timestamp="20201115 22:03:53.454" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020580944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020583208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:53.161" endtime="20201115 22:03:53.454"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:53.462" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020580944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020583208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:53.455" endtime="20201115 22:03:53.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:53.464" endtime="20201115 22:03:53.465"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:53.159" endtime="20201115 22:03:53.466"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:53.157" endtime="20201115 22:03:53.466"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:53.471" level="INFO">${RESULT} = [{'time': 0.020583208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2639999999983507e-06, 'source_diff': 2.2639999999983507e-06}, {'time': 0.020671778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:53.467" endtime="20201115 22:03:53.471"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:53.484" level="INFO">${OVERHEAD} = {'diff': [2.2639999999983507e-06, 2.2639999999983507e-06, 2.2360000000026803e-06, 2.262999999998877e-06, 2.2630000000023465e-06, 2.2639999999983507e-06, 2.2229999999991146e-06, 2.2499999999987808e-06,...</msg>
<status status="PASS" starttime="20201115 22:03:53.472" endtime="20201115 22:03:53.485"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:53.489" level="INFO">NAME: 00-overhead-5-remove</msg>
<status status="PASS" starttime="20201115 22:03:53.488" endtime="20201115 22:03:53.490"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:53.492" level="INFO">VALUE: [2.2639999999983507e-06, 2.2639999999983507e-06, 2.2360000000026803e-06, 2.262999999998877e-06, 2.2630000000023465e-06, 2.2639999999983507e-06, 2.2229999999991146e-06, 2.2499999999987808e-06, 2.26400000000182e-06, 2.2770000000019164e-06, 2.2499999999987808e-06, 2.235999999999211e-06, 2.2639999999983507e-06, 2.2089999999995447e-06, 2.26400000000182e-06, 2.208000000000071e-06, 2.2639999999983507e-06, 2.26400000000182e-06, 2.30600000000053e-06, 2.25000000000225e-06, 2.290999999998017e-06, 2.2639999999983507e-06, 2.2499999999987808e-06, 2.26400000000182e-06, 2.2639999999983507e-06, 2.2639999999983507e-06, 2.2499999999987808e-06, 2.2499999999987808e-06, 2.276999999998447e-06, 2.1949999999999747e-06, 2.2779999999979206e-06, 2.2639999999983507e-06, 2.25000000000225e-06, 2.30600000000053e-06, 2.3059999999970604e-06, 2.235999999999211e-06, 2.25000000000225e-06, 2.26400000000182e-06, 2.27800000000139e-06, 2.27800000000139e-06, 2.2360000000026803e-06, 2.2369999999986845e-06, 2.26400000000182e-06, 2.2770000000019164e-06, 2.26400000000182e-06, 2.276999999998447e-06, 2.305000000001056e-06, 2.2089999999995447e-06, 2.319000000000626e-06, 2.276999999998447e-06]</msg>
<status status="PASS" starttime="20201115 22:03:53.490" endtime="20201115 22:03:53.492"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:53.486" endtime="20201115 22:03:53.493"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:53.495" endtime="20201115 22:03:53.497"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:53.499" endtime="20201115 22:03:53.518"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:53.497" endtime="20201115 22:03:53.519"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:53.493" endtime="20201115 22:03:53.519"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:53.125" endtime="20201115 22:03:53.520"></status>
</kw>
<msg timestamp="20201115 22:03:53.520" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:53.530" endtime="20201115 22:03:53.546"></status>
</kw>
<msg timestamp="20201115 22:03:53.546" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:53.528" endtime="20201115 22:03:53.546"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:53.549" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:53.547" endtime="20201115 22:03:53.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:53.550" endtime="20201115 22:03:53.551"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:53.525" endtime="20201115 22:03:53.552"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:53.523" endtime="20201115 22:03:53.552"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:53.559" endtime="20201115 22:03:53.845"></status>
</kw>
<msg timestamp="20201115 22:03:53.849" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021104458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021106736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:53.558" endtime="20201115 22:03:53.849"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:53.857" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021104458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021106736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:53.850" endtime="20201115 22:03:53.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:53.858" endtime="20201115 22:03:53.860"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:53.555" endtime="20201115 22:03:53.861"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:53.553" endtime="20201115 22:03:53.861"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:53.866" level="INFO">${RESULT} = [{'time': 0.021106736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.27800000000139e-06, 'source_diff': 2.27800000000139e-06}, {'time': 0.021192361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:03:53.862" endtime="20201115 22:03:53.866"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:53.880" level="INFO">${OVERHEAD} = {'diff': [2.27800000000139e-06, 2.2639999999983507e-06, 2.25000000000225e-06, 2.194000000000501e-06, 2.194000000000501e-06, 2.221999999999641e-06, 2.2910000000014863e-06, 2.25000000000225e-06, 2.26300...</msg>
<status status="PASS" starttime="20201115 22:03:53.867" endtime="20201115 22:03:53.881"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:53.885" level="INFO">NAME: 00-overhead-5-remove</msg>
<status status="PASS" starttime="20201115 22:03:53.884" endtime="20201115 22:03:53.886"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:53.888" level="INFO">VALUE: [2.27800000000139e-06, 2.2639999999983507e-06, 2.25000000000225e-06, 2.194000000000501e-06, 2.194000000000501e-06, 2.221999999999641e-06, 2.2910000000014863e-06, 2.25000000000225e-06, 2.2630000000023465e-06, 2.26400000000182e-06, 2.25000000000225e-06, 2.3199999999966303e-06, 2.2639999999983507e-06, 2.2499999999987808e-06, 2.2499999999987808e-06, 2.3200000000000998e-06, 2.2499999999987808e-06, 2.27800000000139e-06, 2.26400000000182e-06, 2.2499999999987808e-06, 2.2639999999983507e-06, 2.26400000000182e-06, 2.2499999999987808e-06, 2.276999999998447e-06, 2.26400000000182e-06, 2.235999999999211e-06, 2.2499999999987808e-06, 2.30600000000053e-06, 2.25000000000225e-06, 2.235999999999211e-06, 2.2779999999979206e-06, 2.2779999999979206e-06, 2.2639999999983507e-06, 2.3200000000000998e-06, 2.276999999998447e-06, 2.276999999998447e-06, 2.2499999999987808e-06, 2.2639999999983507e-06, 2.262999999998877e-06, 2.2779999999979206e-06, 2.2499999999987808e-06, 2.30600000000053e-06, 2.208000000000071e-06, 2.2639999999983507e-06, 2.2639999999983507e-06, 2.2779999999979206e-06, 2.2639999999983507e-06, 2.2220000000031104e-06, 2.235999999999211e-06, 2.2639999999983507e-06]</msg>
<status status="PASS" starttime="20201115 22:03:53.886" endtime="20201115 22:03:53.888"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:53.881" endtime="20201115 22:03:53.889"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:53.891" endtime="20201115 22:03:53.892"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:53.895" endtime="20201115 22:03:53.914"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:53.893" endtime="20201115 22:03:53.915"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:53.889" endtime="20201115 22:03:53.915"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:53.520" endtime="20201115 22:03:53.916"></status>
</kw>
<msg timestamp="20201115 22:03:53.916" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:53.926" endtime="20201115 22:03:53.940"></status>
</kw>
<msg timestamp="20201115 22:03:53.940" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:53.924" endtime="20201115 22:03:53.940"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:53.943" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:53.941" endtime="20201115 22:03:53.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:53.944" endtime="20201115 22:03:53.945"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:53.921" endtime="20201115 22:03:53.946"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:53.919" endtime="20201115 22:03:53.946"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:53.953" endtime="20201115 22:03:54.241"></status>
</kw>
<msg timestamp="20201115 22:03:54.245" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021210569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021212833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:53.952" endtime="20201115 22:03:54.245"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:54.253" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021210569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021212833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:54.246" endtime="20201115 22:03:54.253"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:54.254" endtime="20201115 22:03:54.256"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:53.949" endtime="20201115 22:03:54.256"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:53.947" endtime="20201115 22:03:54.257"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:54.261" level="INFO">${RESULT} = [{'time': 0.021212833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.26400000000182e-06, 'source_diff': 2.26400000000182e-06}, {'time': 0.0212995, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2...</msg>
<status status="PASS" starttime="20201115 22:03:54.258" endtime="20201115 22:03:54.261"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:54.275" level="INFO">${OVERHEAD} = {'diff': [2.26400000000182e-06, 2.30600000000053e-06, 2.26400000000182e-06, 2.3049999999975868e-06, 2.2499999999987808e-06, 2.26400000000182e-06, 2.2499999999987808e-06, 2.25000000000225e-06, 2.264000...</msg>
<status status="PASS" starttime="20201115 22:03:54.262" endtime="20201115 22:03:54.275"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:54.280" level="INFO">NAME: 00-overhead-5-remove</msg>
<status status="PASS" starttime="20201115 22:03:54.279" endtime="20201115 22:03:54.280"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:54.282" level="INFO">VALUE: [2.26400000000182e-06, 2.30600000000053e-06, 2.26400000000182e-06, 2.3049999999975868e-06, 2.2499999999987808e-06, 2.26400000000182e-06, 2.2499999999987808e-06, 2.25000000000225e-06, 2.26400000000182e-06, 2.29200000000096e-06, 2.30600000000053e-06, 2.25000000000225e-06, 2.2779999999979206e-06, 2.25000000000225e-06, 2.2779999999979206e-06, 2.2499999999987808e-06, 2.2499999999987808e-06, 2.235999999999211e-06, 2.26400000000182e-06, 2.27800000000139e-06, 2.2779999999979206e-06, 2.26400000000182e-06, 2.27800000000139e-06, 2.25000000000225e-06, 2.305000000001056e-06, 2.2499999999987808e-06, 2.25000000000225e-06, 2.276999999998447e-06, 2.25000000000225e-06, 2.2639999999983507e-06, 2.2779999999979206e-06, 2.2639999999983507e-06, 2.27800000000139e-06, 2.3200000000000998e-06, 2.221999999999641e-06, 2.25000000000225e-06, 2.27800000000139e-06, 2.27800000000139e-06, 2.2639999999983507e-06, 2.2630000000023465e-06, 2.235999999999211e-06, 2.2639999999983507e-06, 2.235999999999211e-06, 2.2499999999987808e-06, 2.25000000000225e-06, 2.25000000000225e-06, 2.2499999999987808e-06, 2.235999999999211e-06, 2.26400000000182e-06, 2.276999999998447e-06]</msg>
<status status="PASS" starttime="20201115 22:03:54.281" endtime="20201115 22:03:54.283"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:54.276" endtime="20201115 22:03:54.283"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:54.286" endtime="20201115 22:03:54.288"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:54.290" endtime="20201115 22:03:54.309"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:54.288" endtime="20201115 22:03:54.310"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:54.284" endtime="20201115 22:03:54.310"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:53.917" endtime="20201115 22:03:54.311"></status>
</kw>
<msg timestamp="20201115 22:03:54.311" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:54.320" endtime="20201115 22:03:54.336"></status>
</kw>
<msg timestamp="20201115 22:03:54.337" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:54.319" endtime="20201115 22:03:54.337"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:54.339" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:54.338" endtime="20201115 22:03:54.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:54.340" endtime="20201115 22:03:54.342"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:54.316" endtime="20201115 22:03:54.342"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:54.314" endtime="20201115 22:03:54.343"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:54.350" endtime="20201115 22:03:54.637"></status>
</kw>
<msg timestamp="20201115 22:03:54.640" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020612194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020614472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:54.348" endtime="20201115 22:03:54.640"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:54.649" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020612194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020614472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:54.641" endtime="20201115 22:03:54.649"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:54.650" endtime="20201115 22:03:54.652"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:54.345" endtime="20201115 22:03:54.652"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:54.344" endtime="20201115 22:03:54.653"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:54.657" level="INFO">${RESULT} = [{'time': 0.020614472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2779999999979206e-06, 'source_diff': 2.2779999999979206e-06}, {'time': 0.020703028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:54.653" endtime="20201115 22:03:54.657"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:54.671" level="INFO">${OVERHEAD} = {'diff': [2.2779999999979206e-06, 2.2499999999987808e-06, 2.2639999999983507e-06, 2.27800000000139e-06, 2.27800000000139e-06, 2.262999999998877e-06, 2.2360000000026803e-06, 2.2499999999987808e-06, 2.2...</msg>
<status status="PASS" starttime="20201115 22:03:54.658" endtime="20201115 22:03:54.671"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:54.676" level="INFO">NAME: 00-overhead-5-remove</msg>
<status status="PASS" starttime="20201115 22:03:54.675" endtime="20201115 22:03:54.676"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:54.678" level="INFO">VALUE: [2.2779999999979206e-06, 2.2499999999987808e-06, 2.2639999999983507e-06, 2.27800000000139e-06, 2.27800000000139e-06, 2.262999999998877e-06, 2.2360000000026803e-06, 2.2499999999987808e-06, 2.262999999998877e-06, 2.2639999999983507e-06, 2.2639999999983507e-06, 2.2779999999979206e-06, 2.26400000000182e-06, 2.2639999999983507e-06, 2.27800000000139e-06, 2.26400000000182e-06, 2.235999999999211e-06, 2.2779999999979206e-06, 2.208000000000071e-06, 2.30600000000053e-06, 2.2630000000023465e-06, 2.2639999999983507e-06, 2.2499999999987808e-06, 2.2779999999979206e-06, 2.194000000000501e-06, 2.2499999999987808e-06, 2.2770000000019164e-06, 2.2639999999983507e-06, 2.2499999999987808e-06, 2.29200000000096e-06, 2.27800000000139e-06, 2.2499999999987808e-06, 2.208000000000071e-06, 2.26400000000182e-06, 2.2499999999987808e-06, 2.2639999999983507e-06, 2.2499999999987808e-06, 2.2779999999979206e-06, 2.2779999999979206e-06, 2.26400000000182e-06, 2.30600000000053e-06, 2.221999999999641e-06, 2.26400000000182e-06, 2.26400000000182e-06, 2.3200000000000998e-06, 2.333000000000196e-06, 2.2499999999987808e-06, 2.3059999999970604e-06, 2.2360000000026803e-06, 2.2770000000019164e-06]</msg>
<status status="PASS" starttime="20201115 22:03:54.677" endtime="20201115 22:03:54.679"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:54.672" endtime="20201115 22:03:54.680"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:54.682" endtime="20201115 22:03:54.683"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:54.686" endtime="20201115 22:03:54.705"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:54.684" endtime="20201115 22:03:54.706"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:54.680" endtime="20201115 22:03:54.706"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:54.311" endtime="20201115 22:03:54.707"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:52.726" endtime="20201115 22:03:54.707"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:52.725" endtime="20201115 22:03:54.707"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:54.709" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:54.718" endtime="20201115 22:03:54.734"></status>
</kw>
<msg timestamp="20201115 22:03:54.734" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:54.717" endtime="20201115 22:03:54.734"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:54.737" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:54.735" endtime="20201115 22:03:54.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:54.738" endtime="20201115 22:03:54.740"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:54.714" endtime="20201115 22:03:54.740"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:54.712" endtime="20201115 22:03:54.741"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:54.747" endtime="20201115 22:03:55.036"></status>
</kw>
<msg timestamp="20201115 22:03:55.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023034597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023037069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:54.746" endtime="20201115 22:03:55.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:55.048" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023034597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023037069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:55.041" endtime="20201115 22:03:55.048"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:55.049" endtime="20201115 22:03:55.051"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:54.743" endtime="20201115 22:03:55.051"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:54.741" endtime="20201115 22:03:55.052"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:55.056" level="INFO">${RESULT} = [{'time': 0.023037069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.471999999999891e-06, 'source_diff': 2.471999999999891e-06}, {'time': 0.023131347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:55.053" endtime="20201115 22:03:55.056"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:55.070" level="INFO">${OVERHEAD} = {'diff': [2.471999999999891e-06, 2.444000000000751e-06, 2.5139999999986007e-06, 2.471999999999891e-06, 2.4720000000033604e-06, 2.471999999999891e-06, 2.431000000000655e-06, 2.485999999999461e-06, 2.43...</msg>
<status status="PASS" starttime="20201115 22:03:55.057" endtime="20201115 22:03:55.070"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:55.075" level="INFO">NAME: 00-overhead-6-remove</msg>
<status status="PASS" starttime="20201115 22:03:55.074" endtime="20201115 22:03:55.075"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:55.078" level="INFO">VALUE: [2.471999999999891e-06, 2.444000000000751e-06, 2.5139999999986007e-06, 2.471999999999891e-06, 2.4720000000033604e-06, 2.471999999999891e-06, 2.431000000000655e-06, 2.485999999999461e-06, 2.4300000000011812e-06, 2.485999999999461e-06, 2.5279999999981706e-06, 2.485999999999461e-06, 2.471999999999891e-06, 2.485999999999461e-06, 2.471999999999891e-06, 2.471999999999891e-06, 2.471999999999891e-06, 2.54200000000121e-06, 2.471999999999891e-06, 2.485999999999461e-06, 2.485999999999461e-06, 2.471999999999891e-06, 2.389000000001945e-06, 2.4999999999990308e-06, 2.485999999999461e-06, 2.4729999999993646e-06, 2.471999999999891e-06, 2.4999999999990308e-06, 2.458000000000321e-06, 2.471999999999891e-06, 2.458000000000321e-06, 2.485999999999461e-06, 2.471999999999891e-06, 2.471999999999891e-06, 2.471999999999891e-06, 2.471999999999891e-06, 2.389000000001945e-06, 2.4729999999993646e-06, 2.4300000000011812e-06, 2.471999999999891e-06, 2.5000000000025002e-06, 2.4999999999990308e-06, 2.4300000000011812e-06, 2.471999999999891e-06, 2.444000000000751e-06, 2.4450000000002248e-06, 2.5139999999986007e-06, 2.4729999999993646e-06, 2.471999999999891e-06, 2.459000000003264e-06]</msg>
<status status="PASS" starttime="20201115 22:03:55.076" endtime="20201115 22:03:55.078"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:55.071" endtime="20201115 22:03:55.079"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:55.081" endtime="20201115 22:03:55.083"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:55.085" endtime="20201115 22:03:55.104"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:55.083" endtime="20201115 22:03:55.105"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:55.080" endtime="20201115 22:03:55.106"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:54.710" endtime="20201115 22:03:55.106"></status>
</kw>
<msg timestamp="20201115 22:03:55.106" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:55.115" endtime="20201115 22:03:55.131"></status>
</kw>
<msg timestamp="20201115 22:03:55.131" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:55.114" endtime="20201115 22:03:55.131"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:55.134" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:55.132" endtime="20201115 22:03:55.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:55.135" endtime="20201115 22:03:55.136"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:55.111" endtime="20201115 22:03:55.137"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:55.109" endtime="20201115 22:03:55.137"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:55.144" endtime="20201115 22:03:55.431"></status>
</kw>
<msg timestamp="20201115 22:03:55.435" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020664167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020666639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:55.143" endtime="20201115 22:03:55.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:55.443" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020664167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020666639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:55.436" endtime="20201115 22:03:55.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:55.444" endtime="20201115 22:03:55.446"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:55.140" endtime="20201115 22:03:55.447"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:55.138" endtime="20201115 22:03:55.447"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:55.451" level="INFO">${RESULT} = [{'time': 0.020666639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.471999999999891e-06, 'source_diff': 2.471999999999891e-06}, {'time': 0.020760139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:55.448" endtime="20201115 22:03:55.452"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:55.465" level="INFO">${OVERHEAD} = {'diff': [2.471999999999891e-06, 2.471999999999891e-06, 2.485999999999461e-06, 2.485999999999461e-06, 2.458000000000321e-06, 2.52800000000164e-06, 2.4729999999993646e-06, 2.471999999999891e-06, 2.4019...</msg>
<status status="PASS" starttime="20201115 22:03:55.452" endtime="20201115 22:03:55.466"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:55.470" level="INFO">NAME: 00-overhead-6-remove</msg>
<status status="PASS" starttime="20201115 22:03:55.469" endtime="20201115 22:03:55.471"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:55.473" level="INFO">VALUE: [2.471999999999891e-06, 2.471999999999891e-06, 2.485999999999461e-06, 2.485999999999461e-06, 2.458000000000321e-06, 2.52800000000164e-06, 2.4729999999993646e-06, 2.471999999999891e-06, 2.401999999998572e-06, 2.431000000000655e-06, 2.458000000000321e-06, 2.5139999999986007e-06, 2.473000000002834e-06, 2.4729999999993646e-06, 2.4869999999989345e-06, 2.431000000000655e-06, 2.4589999999997947e-06, 2.3880000000024715e-06, 2.471999999999891e-06, 2.485999999999461e-06, 2.471999999999891e-06, 2.403000000001515e-06, 2.485999999999461e-06, 2.471999999999891e-06, 2.471999999999891e-06, 2.417000000001085e-06, 2.471999999999891e-06, 2.471999999999891e-06, 2.4720000000033604e-06, 2.485999999999461e-06, 2.431000000000655e-06, 2.485999999999461e-06, 2.5000000000025002e-06, 2.4579999999968516e-06, 2.4999999999990308e-06, 2.485999999999461e-06, 2.471999999999891e-06, 2.485999999999461e-06, 2.4729999999993646e-06, 2.485999999999461e-06, 2.444000000000751e-06, 2.4999999999990308e-06, 2.471999999999891e-06, 2.471999999999891e-06, 2.485999999999461e-06, 2.5000000000025002e-06, 2.471999999999891e-06, 2.4860000000029303e-06, 2.4589999999997947e-06, 2.485999999999461e-06]</msg>
<status status="PASS" starttime="20201115 22:03:55.472" endtime="20201115 22:03:55.473"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:55.467" endtime="20201115 22:03:55.474"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:55.476" endtime="20201115 22:03:55.478"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:55.480" endtime="20201115 22:03:55.499"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:55.478" endtime="20201115 22:03:55.500"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:55.475" endtime="20201115 22:03:55.500"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:55.107" endtime="20201115 22:03:55.501"></status>
</kw>
<msg timestamp="20201115 22:03:55.501" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:55.510" endtime="20201115 22:03:55.524"></status>
</kw>
<msg timestamp="20201115 22:03:55.525" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:55.509" endtime="20201115 22:03:55.525"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:55.527" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:55.526" endtime="20201115 22:03:55.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:55.528" endtime="20201115 22:03:55.530"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:55.506" endtime="20201115 22:03:55.530"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:55.504" endtime="20201115 22:03:55.531"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:55.538" endtime="20201115 22:03:55.824"></status>
</kw>
<msg timestamp="20201115 22:03:55.827" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020717, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020719486, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:03:55.536" endtime="20201115 22:03:55.827"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:55.835" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020717, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020719486, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:03:55.828" endtime="20201115 22:03:55.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:55.837" endtime="20201115 22:03:55.838"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:55.533" endtime="20201115 22:03:55.839"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:55.532" endtime="20201115 22:03:55.839"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:55.844" level="INFO">${RESULT} = [{'time': 0.020719486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.485999999999461e-06, 'source_diff': 2.485999999999461e-06}, {'time': 0.020813514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:55.840" endtime="20201115 22:03:55.849"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:55.863" level="INFO">${OVERHEAD} = {'diff': [2.485999999999461e-06, 2.4720000000033604e-06, 2.485999999999461e-06, 2.471999999999891e-06, 2.471999999999891e-06, 2.4579999999968516e-06, 2.4450000000002248e-06, 2.485999999999461e-06, 2.5...</msg>
<status status="PASS" starttime="20201115 22:03:55.850" endtime="20201115 22:03:55.863"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:55.868" level="INFO">NAME: 00-overhead-6-remove</msg>
<status status="PASS" starttime="20201115 22:03:55.866" endtime="20201115 22:03:55.868"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:55.870" level="INFO">VALUE: [2.485999999999461e-06, 2.4720000000033604e-06, 2.485999999999461e-06, 2.471999999999891e-06, 2.471999999999891e-06, 2.4579999999968516e-06, 2.4450000000002248e-06, 2.485999999999461e-06, 2.52800000000164e-06, 2.4450000000002248e-06, 2.471999999999891e-06, 2.4589999999997947e-06, 2.471999999999891e-06, 2.4729999999993646e-06, 2.4729999999993646e-06, 2.471999999999891e-06, 2.471999999999891e-06, 2.458000000000321e-06, 2.471999999999891e-06, 2.485999999999461e-06, 2.471999999999891e-06, 2.51400000000207e-06, 2.431000000000655e-06, 2.5000000000025002e-06, 2.471999999999891e-06, 2.4589999999997947e-06, 2.471999999999891e-06, 2.471999999999891e-06, 2.403000000001515e-06, 2.485999999999461e-06, 2.4999999999990308e-06, 2.5279999999981706e-06, 2.471999999999891e-06, 2.4579999999968516e-06, 2.471999999999891e-06, 2.485999999999461e-06, 2.471999999999891e-06, 2.471999999999891e-06, 2.485999999999461e-06, 2.485999999999461e-06, 2.4729999999993646e-06, 2.471999999999891e-06, 2.471999999999891e-06, 2.471999999999891e-06, 2.4860000000029303e-06, 2.471999999999891e-06, 2.471999999999891e-06, 2.471999999999891e-06, 2.471999999999891e-06, 2.4860000000029303e-06]</msg>
<status status="PASS" starttime="20201115 22:03:55.869" endtime="20201115 22:03:55.871"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:55.864" endtime="20201115 22:03:55.871"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:55.873" endtime="20201115 22:03:55.875"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:55.877" endtime="20201115 22:03:55.897"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:55.875" endtime="20201115 22:03:55.897"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:55.872" endtime="20201115 22:03:55.898"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:55.502" endtime="20201115 22:03:55.898"></status>
</kw>
<msg timestamp="20201115 22:03:55.898" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:55.909" endtime="20201115 22:03:55.921"></status>
</kw>
<msg timestamp="20201115 22:03:55.922" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:55.907" endtime="20201115 22:03:55.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:55.924" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:55.923" endtime="20201115 22:03:55.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:55.925" endtime="20201115 22:03:55.927"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:55.904" endtime="20201115 22:03:55.928"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:55.901" endtime="20201115 22:03:55.928"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:55.935" endtime="20201115 22:03:56.222"></status>
</kw>
<msg timestamp="20201115 22:03:56.226" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021871722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021874167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:55.933" endtime="20201115 22:03:56.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:56.234" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021871722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021874167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:56.227" endtime="20201115 22:03:56.234"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:56.236" endtime="20201115 22:03:56.237"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:55.931" endtime="20201115 22:03:56.238"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:55.929" endtime="20201115 22:03:56.238"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:56.243" level="INFO">${RESULT} = [{'time': 0.021874167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4450000000002248e-06, 'source_diff': 2.4450000000002248e-06}, {'time': 0.021969167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:56.239" endtime="20201115 22:03:56.243"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:56.257" level="INFO">${OVERHEAD} = {'diff': [2.4450000000002248e-06, 2.4450000000002248e-06, 2.485999999999461e-06, 2.4589999999997947e-06, 2.471999999999891e-06, 2.485999999999461e-06, 2.5279999999981706e-06, 2.5000000000025002e-06, 2...</msg>
<status status="PASS" starttime="20201115 22:03:56.244" endtime="20201115 22:03:56.257"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:56.261" level="INFO">NAME: 00-overhead-6-remove</msg>
<status status="PASS" starttime="20201115 22:03:56.260" endtime="20201115 22:03:56.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:56.264" level="INFO">VALUE: [2.4450000000002248e-06, 2.4450000000002248e-06, 2.485999999999461e-06, 2.4589999999997947e-06, 2.471999999999891e-06, 2.485999999999461e-06, 2.5279999999981706e-06, 2.5000000000025002e-06, 2.389000000001945e-06, 2.471999999999891e-06, 2.473000000002834e-06, 2.471999999999891e-06, 2.458000000000321e-06, 2.458000000000321e-06, 2.52800000000164e-06, 2.471999999999891e-06, 2.485999999999461e-06, 2.4860000000029303e-06, 2.471999999999891e-06, 2.4589999999997947e-06, 2.458000000000321e-06, 2.4729999999993646e-06, 2.471999999999891e-06, 2.471999999999891e-06, 2.473000000002834e-06, 2.471999999999891e-06, 2.473000000002834e-06, 2.4729999999993646e-06, 2.4579999999968516e-06, 2.4720000000033604e-06, 2.471999999999891e-06, 2.4869999999989345e-06, 2.485999999999461e-06, 2.471999999999891e-06, 2.458000000000321e-06, 2.471999999999891e-06, 2.471999999999891e-06, 2.4999999999990308e-06, 2.403000000001515e-06, 2.4729999999993646e-06, 2.458000000000321e-06, 2.471999999999891e-06, 2.444000000000751e-06, 2.54200000000121e-06, 2.471999999999891e-06, 2.4579999999968516e-06, 2.471999999999891e-06, 2.526999999998697e-06, 2.471999999999891e-06, 2.4729999999993646e-06]</msg>
<status status="PASS" starttime="20201115 22:03:56.262" endtime="20201115 22:03:56.264"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:56.258" endtime="20201115 22:03:56.265"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:56.267" endtime="20201115 22:03:56.269"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:56.271" endtime="20201115 22:03:56.290"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:56.269" endtime="20201115 22:03:56.291"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:56.266" endtime="20201115 22:03:56.291"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:55.899" endtime="20201115 22:03:56.292"></status>
</kw>
<msg timestamp="20201115 22:03:56.292" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:56.301" endtime="20201115 22:03:56.315"></status>
</kw>
<msg timestamp="20201115 22:03:56.315" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:56.299" endtime="20201115 22:03:56.315"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:56.318" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:56.316" endtime="20201115 22:03:56.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:56.319" endtime="20201115 22:03:56.320"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:56.297" endtime="20201115 22:03:56.321"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:56.295" endtime="20201115 22:03:56.321"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:56.328" endtime="20201115 22:03:56.615"></status>
</kw>
<msg timestamp="20201115 22:03:56.618" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020851611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020854083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:56.327" endtime="20201115 22:03:56.619"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:56.627" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020851611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020854083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:56.620" endtime="20201115 22:03:56.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:56.628" endtime="20201115 22:03:56.630"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:56.324" endtime="20201115 22:03:56.630"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:56.322" endtime="20201115 22:03:56.631"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:56.635" level="INFO">${RESULT} = [{'time': 0.020854083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.471999999999891e-06, 'source_diff': 2.471999999999891e-06}, {'time': 0.020949361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:56.632" endtime="20201115 22:03:56.635"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:56.649" level="INFO">${OVERHEAD} = {'diff': [2.471999999999891e-06, 2.471999999999891e-06, 2.471999999999891e-06, 2.4589999999997947e-06, 2.471999999999891e-06, 2.471999999999891e-06, 2.4729999999993646e-06, 2.471999999999891e-06, 2.47...</msg>
<status status="PASS" starttime="20201115 22:03:56.636" endtime="20201115 22:03:56.650"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:56.654" level="INFO">NAME: 00-overhead-6-remove</msg>
<status status="PASS" starttime="20201115 22:03:56.653" endtime="20201115 22:03:56.654"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:56.657" level="INFO">VALUE: [2.471999999999891e-06, 2.471999999999891e-06, 2.471999999999891e-06, 2.4589999999997947e-06, 2.471999999999891e-06, 2.471999999999891e-06, 2.4729999999993646e-06, 2.471999999999891e-06, 2.4729999999993646e-06, 2.4729999999993646e-06, 2.473000000002834e-06, 2.471999999999891e-06, 2.471999999999891e-06, 2.4729999999993646e-06, 2.485999999999461e-06, 2.4589999999997947e-06, 2.4729999999993646e-06, 2.485999999999461e-06, 2.471999999999891e-06, 2.458000000000321e-06, 2.458000000000321e-06, 2.458000000000321e-06, 2.471999999999891e-06, 2.485999999999461e-06, 2.485999999999461e-06, 2.473000000002834e-06, 2.5270000000021664e-06, 2.485999999999461e-06, 2.471999999999891e-06, 2.471999999999891e-06, 2.4729999999993646e-06, 2.485999999999461e-06, 2.471999999999891e-06, 2.471999999999891e-06, 2.4729999999993646e-06, 2.485999999999461e-06, 2.471999999999891e-06, 2.4729999999993646e-06, 2.485999999999461e-06, 2.487000000002404e-06, 2.458000000000321e-06, 2.471999999999891e-06, 2.458000000000321e-06, 2.485999999999461e-06, 2.471999999999891e-06, 2.471999999999891e-06, 2.471999999999891e-06, 2.471999999999891e-06, 2.458000000000321e-06, 2.471999999999891e-06]</msg>
<status status="PASS" starttime="20201115 22:03:56.655" endtime="20201115 22:03:56.657"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:56.650" endtime="20201115 22:03:56.658"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:56.660" endtime="20201115 22:03:56.661"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:56.663" endtime="20201115 22:03:56.683"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:56.662" endtime="20201115 22:03:56.684"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:56.658" endtime="20201115 22:03:56.684"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:56.292" endtime="20201115 22:03:56.684"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:54.708" endtime="20201115 22:03:56.685"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:54.707" endtime="20201115 22:03:56.685"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:56.687" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:56.696" endtime="20201115 22:03:56.711"></status>
</kw>
<msg timestamp="20201115 22:03:56.712" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:56.695" endtime="20201115 22:03:56.712"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:56.714" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:56.713" endtime="20201115 22:03:56.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:56.716" endtime="20201115 22:03:56.717"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:56.692" endtime="20201115 22:03:56.718"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:56.690" endtime="20201115 22:03:56.719"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:56.726" endtime="20201115 22:03:57.013"></status>
</kw>
<msg timestamp="20201115 22:03:57.016" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023076542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023079222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:56.724" endtime="20201115 22:03:57.016"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:57.024" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023076542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023079222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:57.017" endtime="20201115 22:03:57.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:57.026" endtime="20201115 22:03:57.027"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:56.721" endtime="20201115 22:03:57.028"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:56.719" endtime="20201115 22:03:57.028"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:57.033" level="INFO">${RESULT} = [{'time': 0.023079222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6800000000014312e-06, 'source_diff': 2.6800000000014312e-06}, {'time': 0.023185472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:57.029" endtime="20201115 22:03:57.033"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:57.047" level="INFO">${OVERHEAD} = {'diff': [2.6800000000014312e-06, 2.679999999997962e-06, 2.6800000000014312e-06, 2.694000000001001e-06, 2.681000000000905e-06, 2.737000000002654e-06, 2.6939999999975317e-06, 2.6669999999978655e-06, 2....</msg>
<status status="PASS" starttime="20201115 22:03:57.034" endtime="20201115 22:03:57.047"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:57.051" level="INFO">NAME: 00-overhead-7-remove</msg>
<status status="PASS" starttime="20201115 22:03:57.050" endtime="20201115 22:03:57.052"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:57.054" level="INFO">VALUE: [2.6800000000014312e-06, 2.679999999997962e-06, 2.6800000000014312e-06, 2.694000000001001e-06, 2.681000000000905e-06, 2.737000000002654e-06, 2.6939999999975317e-06, 2.6669999999978655e-06, 2.6949999999970053e-06, 2.6800000000014312e-06, 2.695000000000475e-06, 2.695000000000475e-06, 2.653000000001765e-06, 2.7090000000000447e-06, 2.7079999999971016e-06, 2.6800000000014312e-06, 2.679999999997962e-06, 2.679999999997962e-06, 2.694000000001001e-06, 2.679999999997962e-06, 2.7219999999966715e-06, 2.679999999997962e-06, 2.667000000001335e-06, 2.695000000000475e-06, 2.665999999998392e-06, 2.6249999999991558e-06, 2.694000000001001e-06, 2.7090000000000447e-06, 2.6939999999975317e-06, 2.695000000000475e-06, 2.681000000000905e-06, 2.6939999999975317e-06, 2.639000000002195e-06, 2.7779999999984206e-06, 2.6389999999987257e-06, 2.694000000001001e-06, 2.681000000000905e-06, 2.6800000000014312e-06, 2.653000000001765e-06, 2.695000000000475e-06, 2.6800000000014312e-06, 2.681000000000905e-06, 2.6939999999975317e-06, 2.6669999999978655e-06, 2.7090000000000447e-06, 2.7090000000000447e-06, 2.651999999998822e-06, 2.681000000000905e-06, 2.637999999999252e-06, 2.695000000000475e-06]</msg>
<status status="PASS" starttime="20201115 22:03:57.052" endtime="20201115 22:03:57.054"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:57.048" endtime="20201115 22:03:57.055"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:57.057" endtime="20201115 22:03:57.058"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:57.061" endtime="20201115 22:03:57.080"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:57.059" endtime="20201115 22:03:57.081"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:57.055" endtime="20201115 22:03:57.081"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:56.688" endtime="20201115 22:03:57.082"></status>
</kw>
<msg timestamp="20201115 22:03:57.082" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:57.091" endtime="20201115 22:03:57.105"></status>
</kw>
<msg timestamp="20201115 22:03:57.105" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:57.090" endtime="20201115 22:03:57.106"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:57.108" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:57.106" endtime="20201115 22:03:57.109"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:57.109" endtime="20201115 22:03:57.111"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:57.087" endtime="20201115 22:03:57.112"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:57.084" endtime="20201115 22:03:57.112"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:57.119" endtime="20201115 22:03:57.407"></status>
</kw>
<msg timestamp="20201115 22:03:57.410" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020651681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020654375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:57.117" endtime="20201115 22:03:57.410"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:57.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020651681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020654375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:57.411" endtime="20201115 22:03:57.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:57.419" endtime="20201115 22:03:57.421"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:57.115" endtime="20201115 22:03:57.422"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:57.113" endtime="20201115 22:03:57.422"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:57.426" level="INFO">${RESULT} = [{'time': 0.020654375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6939999999975317e-06, 'source_diff': 2.6939999999975317e-06}, {'time': 0.020759347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:57.423" endtime="20201115 22:03:57.427"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:57.440" level="INFO">${OVERHEAD} = {'diff': [2.6939999999975317e-06, 2.6800000000014312e-06, 2.6939999999975317e-06, 2.694000000001001e-06, 2.6939999999975317e-06, 2.6949999999970053e-06, 2.6949999999970053e-06, 2.722000000000141e-06, ...</msg>
<status status="PASS" starttime="20201115 22:03:57.427" endtime="20201115 22:03:57.441"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:57.445" level="INFO">NAME: 00-overhead-7-remove</msg>
<status status="PASS" starttime="20201115 22:03:57.444" endtime="20201115 22:03:57.445"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:57.448" level="INFO">VALUE: [2.6939999999975317e-06, 2.6800000000014312e-06, 2.6939999999975317e-06, 2.694000000001001e-06, 2.6939999999975317e-06, 2.6949999999970053e-06, 2.6949999999970053e-06, 2.722000000000141e-06, 2.7090000000000447e-06, 2.681000000000905e-06, 2.6939999999975317e-06, 2.6249999999991558e-06, 2.681000000000905e-06, 2.694000000001001e-06, 2.681000000000905e-06, 2.695000000000475e-06, 2.679999999997962e-06, 2.694000000001001e-06, 2.695000000000475e-06, 2.681000000000905e-06, 2.694000000001001e-06, 2.694000000001001e-06, 2.681000000000905e-06, 2.695000000000475e-06, 2.6800000000014312e-06, 2.695000000000475e-06, 2.749999999999281e-06, 2.695000000000475e-06, 2.681000000000905e-06, 2.694000000001001e-06, 2.681000000000905e-06, 2.749999999999281e-06, 2.6800000000014312e-06, 2.694000000001001e-06, 2.6800000000014312e-06, 2.6800000000014312e-06, 2.6809999999974354e-06, 2.667000000001335e-06, 2.708000000000571e-06, 2.695000000000475e-06, 2.694000000001001e-06, 2.6939999999975317e-06, 2.6949999999970053e-06, 2.6669999999978655e-06, 2.694000000001001e-06, 2.6660000000018613e-06, 2.681000000000905e-06, 2.695000000000475e-06, 2.665999999998392e-06, 2.6800000000014312e-06]</msg>
<status status="PASS" starttime="20201115 22:03:57.446" endtime="20201115 22:03:57.448"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:57.441" endtime="20201115 22:03:57.448"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:57.451" endtime="20201115 22:03:57.452"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:57.454" endtime="20201115 22:03:57.474"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:57.453" endtime="20201115 22:03:57.475"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:57.449" endtime="20201115 22:03:57.475"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:57.082" endtime="20201115 22:03:57.475"></status>
</kw>
<msg timestamp="20201115 22:03:57.476" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:57.485" endtime="20201115 22:03:57.501"></status>
</kw>
<msg timestamp="20201115 22:03:57.502" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:57.483" endtime="20201115 22:03:57.502"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:57.504" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:57.503" endtime="20201115 22:03:57.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:57.506" endtime="20201115 22:03:57.507"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:57.481" endtime="20201115 22:03:57.508"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:57.478" endtime="20201115 22:03:57.508"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:57.515" endtime="20201115 22:03:57.802"></status>
</kw>
<msg timestamp="20201115 22:03:57.805" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021414903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021417597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:57.513" endtime="20201115 22:03:57.806"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:57.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021414903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021417597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:57.807" endtime="20201115 22:03:57.814"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:57.815" endtime="20201115 22:03:57.817"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:57.511" endtime="20201115 22:03:57.817"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:57.509" endtime="20201115 22:03:57.818"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:57.822" level="INFO">${RESULT} = [{'time': 0.021417597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.694000000001001e-06, 'source_diff': 2.694000000001001e-06}, {'time': 0.021522931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:57.818" endtime="20201115 22:03:57.822"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:57.836" level="INFO">${OVERHEAD} = {'diff': [2.694000000001001e-06, 2.6949999999970053e-06, 2.6939999999975317e-06, 2.679999999997962e-06, 2.6939999999975317e-06, 2.681000000000905e-06, 2.598000000002959e-06, 2.694000000001001e-06, 2.6...</msg>
<status status="PASS" starttime="20201115 22:03:57.823" endtime="20201115 22:03:57.836"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:57.840" level="INFO">NAME: 00-overhead-7-remove</msg>
<status status="PASS" starttime="20201115 22:03:57.839" endtime="20201115 22:03:57.841"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:57.843" level="INFO">VALUE: [2.694000000001001e-06, 2.6949999999970053e-06, 2.6939999999975317e-06, 2.679999999997962e-06, 2.6939999999975317e-06, 2.681000000000905e-06, 2.598000000002959e-06, 2.694000000001001e-06, 2.694000000001001e-06, 2.6939999999975317e-06, 2.6949999999970053e-06, 2.6949999999970053e-06, 2.694000000001001e-06, 2.694000000001001e-06, 2.694000000001001e-06, 2.7229999999996146e-06, 2.6389999999987257e-06, 2.6809999999974354e-06, 2.708000000000571e-06, 2.695000000000475e-06, 2.694000000001001e-06, 2.6939999999975317e-06, 2.695000000000475e-06, 2.6939999999975317e-06, 2.7639999999988507e-06, 2.7090000000000447e-06, 2.6939999999975317e-06, 2.681000000000905e-06, 2.6809999999974354e-06, 2.679999999997962e-06, 2.694000000001001e-06, 2.679999999997962e-06, 2.667000000001335e-06, 2.694000000001001e-06, 2.681000000000905e-06, 2.679999999997962e-06, 2.695000000000475e-06, 2.694000000001001e-06, 2.695000000000475e-06, 2.695000000000475e-06, 2.7500000000027502e-06, 2.681000000000905e-06, 2.6529999999982956e-06, 2.7639999999988507e-06, 2.694000000001001e-06, 2.735999999999711e-06, 2.694000000001001e-06, 2.6949999999970053e-06, 2.6939999999975317e-06, 2.6669999999978655e-06]</msg>
<status status="PASS" starttime="20201115 22:03:57.842" endtime="20201115 22:03:57.843"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:57.837" endtime="20201115 22:03:57.844"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:57.846" endtime="20201115 22:03:57.848"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:57.850" endtime="20201115 22:03:57.869"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:57.848" endtime="20201115 22:03:57.870"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:57.845" endtime="20201115 22:03:57.871"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:57.476" endtime="20201115 22:03:57.872"></status>
</kw>
<msg timestamp="20201115 22:03:57.872" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:57.882" endtime="20201115 22:03:57.895"></status>
</kw>
<msg timestamp="20201115 22:03:57.896" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:57.881" endtime="20201115 22:03:57.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:57.898" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:57.897" endtime="20201115 22:03:57.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:57.899" endtime="20201115 22:03:57.901"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:57.878" endtime="20201115 22:03:57.902"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:57.876" endtime="20201115 22:03:57.902"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:57.909" endtime="20201115 22:03:58.197"></status>
</kw>
<msg timestamp="20201115 22:03:58.200" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022520917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022523681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:57.907" endtime="20201115 22:03:58.200"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:58.208" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022520917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022523681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:58.201" endtime="20201115 22:03:58.208"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:58.209" endtime="20201115 22:03:58.211"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:57.905" endtime="20201115 22:03:58.211"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:57.903" endtime="20201115 22:03:58.212"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:58.216" level="INFO">${RESULT} = [{'time': 0.022523681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7639999999988507e-06, 'source_diff': 2.7639999999988507e-06}, {'time': 0.022629667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:58.213" endtime="20201115 22:03:58.216"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:58.230" level="INFO">${OVERHEAD} = {'diff': [2.7639999999988507e-06, 2.7090000000000447e-06, 2.653000000001765e-06, 2.6939999999975317e-06, 2.695000000000475e-06, 2.6800000000014312e-06, 2.6800000000014312e-06, 2.667000000001335e-06, 2...</msg>
<status status="PASS" starttime="20201115 22:03:58.217" endtime="20201115 22:03:58.230"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:58.235" level="INFO">NAME: 00-overhead-7-remove</msg>
<status status="PASS" starttime="20201115 22:03:58.234" endtime="20201115 22:03:58.235"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:58.237" level="INFO">VALUE: [2.7639999999988507e-06, 2.7090000000000447e-06, 2.653000000001765e-06, 2.6939999999975317e-06, 2.695000000000475e-06, 2.6800000000014312e-06, 2.6800000000014312e-06, 2.667000000001335e-06, 2.694000000001001e-06, 2.695000000000475e-06, 2.667000000001335e-06, 2.694000000001001e-06, 2.694000000001001e-06, 2.737000000002654e-06, 2.7079999999971016e-06, 2.7639999999988507e-06, 2.637999999999252e-06, 2.667000000001335e-06, 2.7079999999971016e-06, 2.694000000001001e-06, 2.6809999999974354e-06, 2.6800000000014312e-06, 2.7079999999971016e-06, 2.667000000001335e-06, 2.7079999999971016e-06, 2.6809999999974354e-06, 2.7090000000000447e-06, 2.695000000000475e-06, 2.695000000000475e-06, 2.708000000000571e-06, 2.6800000000014312e-06, 2.7090000000000447e-06, 2.695000000000475e-06, 2.6249999999991558e-06, 2.651999999998822e-06, 2.695000000000475e-06, 2.695000000000475e-06, 2.681000000000905e-06, 2.6660000000018613e-06, 2.708000000000571e-06, 2.695000000000475e-06, 2.6529999999982956e-06, 2.6250000000026252e-06, 2.6389999999987257e-06, 2.694000000001001e-06, 2.6949999999970053e-06, 2.667000000001335e-06, 2.694000000001001e-06, 2.7229999999996146e-06, 2.6939999999975317e-06]</msg>
<status status="PASS" starttime="20201115 22:03:58.236" endtime="20201115 22:03:58.238"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:58.231" endtime="20201115 22:03:58.238"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:58.241" endtime="20201115 22:03:58.243"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:58.245" endtime="20201115 22:03:58.264"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:58.243" endtime="20201115 22:03:58.265"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:58.239" endtime="20201115 22:03:58.265"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:57.873" endtime="20201115 22:03:58.266"></status>
</kw>
<msg timestamp="20201115 22:03:58.266" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:58.275" endtime="20201115 22:03:58.289"></status>
</kw>
<msg timestamp="20201115 22:03:58.289" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:58.273" endtime="20201115 22:03:58.289"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:58.292" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:58.290" endtime="20201115 22:03:58.292"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:58.293" endtime="20201115 22:03:58.294"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:58.271" endtime="20201115 22:03:58.295"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:58.269" endtime="20201115 22:03:58.296"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:58.302" endtime="20201115 22:03:58.589"></status>
</kw>
<msg timestamp="20201115 22:03:58.592" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020597833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0206005, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:03:58.301" endtime="20201115 22:03:58.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:58.600" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020597833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0206005, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:03:58.593" endtime="20201115 22:03:58.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:58.602" endtime="20201115 22:03:58.603"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:58.298" endtime="20201115 22:03:58.604"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:58.296" endtime="20201115 22:03:58.604"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:58.609" level="INFO">${RESULT} = [{'time': 0.0206005, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.667000000001335e-06, 'source_diff': 2.667000000001335e-06}, {'time': 0.020707056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:03:58.605" endtime="20201115 22:03:58.609"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:58.623" level="INFO">${OVERHEAD} = {'diff': [2.667000000001335e-06, 2.7500000000027502e-06, 2.708000000000571e-06, 2.708000000000571e-06, 2.695000000000475e-06, 2.681000000000905e-06, 2.681000000000905e-06, 2.681000000000905e-06, 2.693...</msg>
<status status="PASS" starttime="20201115 22:03:58.610" endtime="20201115 22:03:58.623"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:58.627" level="INFO">NAME: 00-overhead-7-remove</msg>
<status status="PASS" starttime="20201115 22:03:58.626" endtime="20201115 22:03:58.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:58.630" level="INFO">VALUE: [2.667000000001335e-06, 2.7500000000027502e-06, 2.708000000000571e-06, 2.708000000000571e-06, 2.695000000000475e-06, 2.681000000000905e-06, 2.681000000000905e-06, 2.681000000000905e-06, 2.6939999999975317e-06, 2.722000000000141e-06, 2.7090000000000447e-06, 2.694000000001001e-06, 2.695000000000475e-06, 2.749999999999281e-06, 2.695000000000475e-06, 2.6949999999970053e-06, 2.708000000000571e-06, 2.639000000002195e-06, 2.749999999999281e-06, 2.722000000000141e-06, 2.695000000000475e-06, 2.681000000000905e-06, 2.639000000002195e-06, 2.681000000000905e-06, 2.749999999999281e-06, 2.695000000000475e-06, 2.694000000001001e-06, 2.665999999998392e-06, 2.708000000000571e-06, 2.749999999999281e-06, 2.695000000000475e-06, 2.749999999999281e-06, 2.695000000000475e-06, 2.681000000000905e-06, 2.694000000001001e-06, 2.653000000001765e-06, 2.694000000001001e-06, 2.681000000000905e-06, 2.6809999999974354e-06, 2.695000000000475e-06, 2.695000000000475e-06, 2.695000000000475e-06, 2.6939999999975317e-06, 2.695000000000475e-06, 2.695000000000475e-06, 2.695000000000475e-06, 2.653000000001765e-06, 2.679999999997962e-06, 2.681000000000905e-06, 2.708000000000571e-06]</msg>
<status status="PASS" starttime="20201115 22:03:58.628" endtime="20201115 22:03:58.631"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:58.624" endtime="20201115 22:03:58.631"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:58.634" endtime="20201115 22:03:58.635"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:58.637" endtime="20201115 22:03:58.657"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:58.636" endtime="20201115 22:03:58.657"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:58.632" endtime="20201115 22:03:58.658"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:58.267" endtime="20201115 22:03:58.658"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:56.686" endtime="20201115 22:03:58.658"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:56.685" endtime="20201115 22:03:58.659"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:58.661" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:58.670" endtime="20201115 22:03:58.687"></status>
</kw>
<msg timestamp="20201115 22:03:58.687" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:58.669" endtime="20201115 22:03:58.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:58.690" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:58.689" endtime="20201115 22:03:58.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:58.691" endtime="20201115 22:03:58.693"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:58.666" endtime="20201115 22:03:58.693"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:58.664" endtime="20201115 22:03:58.694"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:58.700" endtime="20201115 22:03:58.995"></status>
</kw>
<msg timestamp="20201115 22:03:58.999" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023129653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023132556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:58.699" endtime="20201115 22:03:58.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:59.007" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023129653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023132556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:59.000" endtime="20201115 22:03:59.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:59.008" endtime="20201115 22:03:59.010"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:58.696" endtime="20201115 22:03:59.011"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:58.694" endtime="20201115 22:03:59.011"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:59.015" level="INFO">${RESULT} = [{'time': 0.023132556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9029999999985456e-06, 'source_diff': 2.9029999999985456e-06}, {'time': 0.023245708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:59.012" endtime="20201115 22:03:59.016"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:59.029" level="INFO">${OVERHEAD} = {'diff': [2.9029999999985456e-06, 2.901999999999072e-06, 2.9579999999973516e-06, 2.901999999999072e-06, 2.8889999999989757e-06, 2.8889999999989757e-06, 2.9029999999985456e-06, 2.945000000000725e-06, 2...</msg>
<status status="PASS" starttime="20201115 22:03:59.016" endtime="20201115 22:03:59.030"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:59.034" level="INFO">NAME: 00-overhead-8-remove</msg>
<status status="PASS" starttime="20201115 22:03:59.033" endtime="20201115 22:03:59.034"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:59.037" level="INFO">VALUE: [2.9029999999985456e-06, 2.901999999999072e-06, 2.9579999999973516e-06, 2.901999999999072e-06, 2.8889999999989757e-06, 2.8889999999989757e-06, 2.9029999999985456e-06, 2.945000000000725e-06, 2.901999999999072e-06, 2.9169999999981155e-06, 2.917000000001585e-06, 2.9449999999972554e-06, 2.931000000001155e-06, 2.8889999999989757e-06, 2.9029999999985456e-06, 2.889000000002445e-06, 2.889000000002445e-06, 2.945000000000725e-06, 2.917000000001585e-06, 2.889000000002445e-06, 2.929999999998212e-06, 2.9029999999985456e-06, 2.9029999999985456e-06, 2.8889999999989757e-06, 2.8889999999989757e-06, 2.9169999999981155e-06, 2.903000000002015e-06, 2.9029999999985456e-06, 2.903000000002015e-06, 2.903000000002015e-06, 2.901999999999072e-06, 2.9029999999985456e-06, 2.8619999999993095e-06, 2.917000000001585e-06, 2.945000000000725e-06, 2.8889999999989757e-06, 2.833000000000696e-06, 2.8889999999989757e-06, 2.903000000002015e-06, 2.8889999999989757e-06, 2.9169999999981155e-06, 2.917000000001585e-06, 2.901999999999072e-06, 2.860999999999836e-06, 2.9169999999981155e-06, 2.915999999998642e-06, 2.887999999999502e-06, 2.8889999999989757e-06, 2.903000000002015e-06, 2.972000000000391e-06]</msg>
<status status="PASS" starttime="20201115 22:03:59.035" endtime="20201115 22:03:59.038"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:59.030" endtime="20201115 22:03:59.038"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:59.040" endtime="20201115 22:03:59.042"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:59.044" endtime="20201115 22:03:59.064"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:59.042" endtime="20201115 22:03:59.064"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:59.039" endtime="20201115 22:03:59.065"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:58.661" endtime="20201115 22:03:59.065"></status>
</kw>
<msg timestamp="20201115 22:03:59.065" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:59.074" endtime="20201115 22:03:59.091"></status>
</kw>
<msg timestamp="20201115 22:03:59.092" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:59.073" endtime="20201115 22:03:59.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:59.094" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:59.093" endtime="20201115 22:03:59.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:59.096" endtime="20201115 22:03:59.097"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:59.070" endtime="20201115 22:03:59.098"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:59.068" endtime="20201115 22:03:59.098"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:59.105" endtime="20201115 22:03:59.390"></status>
</kw>
<msg timestamp="20201115 22:03:59.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021167278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021170167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:59.103" endtime="20201115 22:03:59.394"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:59.402" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021167278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021170167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:59.395" endtime="20201115 22:03:59.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:59.403" endtime="20201115 22:03:59.405"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:59.101" endtime="20201115 22:03:59.405"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:59.099" endtime="20201115 22:03:59.406"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:59.410" level="INFO">${RESULT} = [{'time': 0.021170167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8889999999989757e-06, 'source_diff': 2.8889999999989757e-06}, {'time': 0.021286097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:59.407" endtime="20201115 22:03:59.410"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:59.424" level="INFO">${OVERHEAD} = {'diff': [2.8889999999989757e-06, 2.903000000002015e-06, 2.8889999999989757e-06, 2.901999999999072e-06, 2.9020000000025414e-06, 2.929999999998212e-06, 2.874999999999406e-06, 2.901999999999072e-06, 2.9...</msg>
<status status="PASS" starttime="20201115 22:03:59.411" endtime="20201115 22:03:59.425"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:59.429" level="INFO">NAME: 00-overhead-8-remove</msg>
<status status="PASS" starttime="20201115 22:03:59.428" endtime="20201115 22:03:59.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:59.432" level="INFO">VALUE: [2.8889999999989757e-06, 2.903000000002015e-06, 2.8889999999989757e-06, 2.901999999999072e-06, 2.9020000000025414e-06, 2.929999999998212e-06, 2.874999999999406e-06, 2.901999999999072e-06, 2.917000000001585e-06, 2.8880000000029715e-06, 2.8889999999989757e-06, 2.915999999998642e-06, 2.958000000000821e-06, 2.9029999999985456e-06, 2.9029999999985456e-06, 2.889000000002445e-06, 2.931000000001155e-06, 2.9020000000025414e-06, 2.8889999999989757e-06, 2.8889999999989757e-06, 2.887999999999502e-06, 2.903000000002015e-06, 2.9029999999985456e-06, 2.917000000001585e-06, 2.8610000000033053e-06, 2.874999999999406e-06, 2.917000000001585e-06, 2.929999999998212e-06, 2.903000000002015e-06, 2.931000000001155e-06, 2.9160000000021113e-06, 2.917000000001585e-06, 2.9169999999981155e-06, 2.929999999998212e-06, 2.889000000002445e-06, 2.847000000000266e-06, 2.903000000002015e-06, 2.9029999999985456e-06, 2.901999999999072e-06, 2.9029999999985456e-06, 2.917000000001585e-06, 2.9020000000025414e-06, 2.9029999999985456e-06, 2.9029999999985456e-06, 2.8889999999989757e-06, 2.833000000000696e-06, 2.8889999999989757e-06, 2.847000000000266e-06, 2.8889999999989757e-06, 2.915999999998642e-06]</msg>
<status status="PASS" starttime="20201115 22:03:59.430" endtime="20201115 22:03:59.432"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:59.426" endtime="20201115 22:03:59.433"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:59.435" endtime="20201115 22:03:59.436"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:59.439" endtime="20201115 22:03:59.458"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:59.437" endtime="20201115 22:03:59.459"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:59.433" endtime="20201115 22:03:59.459"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:59.066" endtime="20201115 22:03:59.460"></status>
</kw>
<msg timestamp="20201115 22:03:59.460" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:59.469" endtime="20201115 22:03:59.485"></status>
</kw>
<msg timestamp="20201115 22:03:59.486" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:59.467" endtime="20201115 22:03:59.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:59.488" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:59.487" endtime="20201115 22:03:59.489"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:59.489" endtime="20201115 22:03:59.491"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:59.465" endtime="20201115 22:03:59.491"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:59.462" endtime="20201115 22:03:59.492"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:59.499" endtime="20201115 22:03:59.788"></status>
</kw>
<msg timestamp="20201115 22:03:59.791" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021330458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021333375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:59.497" endtime="20201115 22:03:59.791"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:59.799" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021330458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021333375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:59.792" endtime="20201115 22:03:59.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:59.801" endtime="20201115 22:03:59.802"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:59.494" endtime="20201115 22:03:59.803"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:59.493" endtime="20201115 22:03:59.803"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:59.808" level="INFO">${RESULT} = [{'time': 0.021333375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.917000000001585e-06, 'source_diff': 2.917000000001585e-06}, {'time': 0.021447167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:59.804" endtime="20201115 22:03:59.808"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:59.822" level="INFO">${OVERHEAD} = {'diff': [2.917000000001585e-06, 2.874999999999406e-06, 2.917000000001585e-06, 2.874999999999406e-06, 2.917000000001585e-06, 2.8889999999989757e-06, 2.9169999999981155e-06, 2.915999999998642e-06, 2.87...</msg>
<status status="PASS" starttime="20201115 22:03:59.809" endtime="20201115 22:03:59.822"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:59.827" level="INFO">NAME: 00-overhead-8-remove</msg>
<status status="PASS" starttime="20201115 22:03:59.826" endtime="20201115 22:03:59.827"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:59.829" level="INFO">VALUE: [2.917000000001585e-06, 2.874999999999406e-06, 2.917000000001585e-06, 2.874999999999406e-06, 2.917000000001585e-06, 2.8889999999989757e-06, 2.9169999999981155e-06, 2.915999999998642e-06, 2.874999999999406e-06, 2.8889999999989757e-06, 2.8889999999989757e-06, 2.9160000000021113e-06, 2.8889999999989757e-06, 2.8479999999997396e-06, 2.8889999999989757e-06, 2.903000000002015e-06, 2.9169999999981155e-06, 2.903000000002015e-06, 2.887999999999502e-06, 2.9029999999985456e-06, 2.903000000002015e-06, 2.901999999999072e-06, 2.860999999999836e-06, 2.917000000001585e-06, 2.9029999999985456e-06, 2.860999999999836e-06, 2.8889999999989757e-06, 2.915999999998642e-06, 2.903000000002015e-06, 2.972000000000391e-06, 2.889000000002445e-06, 2.9029999999985456e-06, 2.901999999999072e-06, 2.901999999999072e-06, 2.9029999999985456e-06, 2.9160000000021113e-06, 2.8469999999967965e-06, 2.9169999999981155e-06, 2.9169999999981155e-06, 2.901999999999072e-06, 2.9020000000025414e-06, 2.9169999999981155e-06, 2.887999999999502e-06, 2.917000000001585e-06, 2.9160000000021113e-06, 2.9020000000025414e-06, 2.903000000002015e-06, 2.9029999999985456e-06, 2.9029999999985456e-06, 2.862000000002779e-06]</msg>
<status status="PASS" starttime="20201115 22:03:59.828" endtime="20201115 22:03:59.830"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:59.823" endtime="20201115 22:03:59.830"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:59.833" endtime="20201115 22:03:59.834"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:59.836" endtime="20201115 22:03:59.856"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:59.834" endtime="20201115 22:03:59.856"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:59.831" endtime="20201115 22:03:59.857"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:59.460" endtime="20201115 22:03:59.857"></status>
</kw>
<msg timestamp="20201115 22:03:59.857" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:59.867" endtime="20201115 22:03:59.883"></status>
</kw>
<msg timestamp="20201115 22:03:59.884" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:59.865" endtime="20201115 22:03:59.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:59.886" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:59.885" endtime="20201115 22:03:59.887"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:59.887" endtime="20201115 22:03:59.889"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:59.862" endtime="20201115 22:03:59.890"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:59.860" endtime="20201115 22:03:59.890"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:59.897" endtime="20201115 22:04:00.183"></status>
</kw>
<msg timestamp="20201115 22:04:00.186" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020633542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020636514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:59.895" endtime="20201115 22:04:00.187"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:00.195" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020633542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020636514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:00.188" endtime="20201115 22:04:00.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:00.196" endtime="20201115 22:04:00.198"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:59.892" endtime="20201115 22:04:00.199"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:59.891" endtime="20201115 22:04:00.199"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:00.203" level="INFO">${RESULT} = [{'time': 0.020636514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.972000000000391e-06, 'source_diff': 2.972000000000391e-06}, {'time': 0.020750167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:00.200" endtime="20201115 22:04:00.204"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:00.217" level="INFO">${OVERHEAD} = {'diff': [2.972000000000391e-06, 2.8889999999989757e-06, 2.8889999999989757e-06, 2.944000000001251e-06, 2.848000000003209e-06, 2.9029999999985456e-06, 2.9029999999985456e-06, 2.903000000002015e-06, 2....</msg>
<status status="PASS" starttime="20201115 22:04:00.204" endtime="20201115 22:04:00.218"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:00.222" level="INFO">NAME: 00-overhead-8-remove</msg>
<status status="PASS" starttime="20201115 22:04:00.221" endtime="20201115 22:04:00.222"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:00.225" level="INFO">VALUE: [2.972000000000391e-06, 2.8889999999989757e-06, 2.8889999999989757e-06, 2.944000000001251e-06, 2.848000000003209e-06, 2.9029999999985456e-06, 2.9029999999985456e-06, 2.903000000002015e-06, 2.9300000000016813e-06, 2.9169999999981155e-06, 2.9029999999985456e-06, 2.917000000001585e-06, 2.9029999999985456e-06, 2.944000000001251e-06, 2.972000000000391e-06, 2.9029999999985456e-06, 2.9029999999985456e-06, 2.9029999999985456e-06, 2.9029999999985456e-06, 2.917000000001585e-06, 2.9029999999985456e-06, 2.917000000001585e-06, 2.9029999999985456e-06, 2.999999999999531e-06, 2.9160000000021113e-06, 2.917000000001585e-06, 2.901999999999072e-06, 2.847000000000266e-06, 2.903000000002015e-06, 2.9169999999981155e-06, 2.917000000001585e-06, 2.9029999999985456e-06, 2.9029999999985456e-06, 2.860999999999836e-06, 2.901999999999072e-06, 2.887999999999502e-06, 2.9300000000016813e-06, 2.917000000001585e-06, 2.903000000002015e-06, 2.931000000001155e-06, 2.874999999999406e-06, 2.915999999998642e-06, 2.887999999999502e-06, 2.915999999998642e-06, 2.917000000001585e-06, 2.889000000002445e-06, 2.9029999999985456e-06, 2.917000000001585e-06, 2.944000000001251e-06, 2.931000000001155e-06]</msg>
<status status="PASS" starttime="20201115 22:04:00.223" endtime="20201115 22:04:00.225"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:00.218" endtime="20201115 22:04:00.226"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:00.228" endtime="20201115 22:04:00.229"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:00.232" endtime="20201115 22:04:00.251"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:00.230" endtime="20201115 22:04:00.252"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:00.226" endtime="20201115 22:04:00.252"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:59.858" endtime="20201115 22:04:00.252"></status>
</kw>
<msg timestamp="20201115 22:04:00.253" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:00.262" endtime="20201115 22:04:00.276"></status>
</kw>
<msg timestamp="20201115 22:04:00.277" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:00.260" endtime="20201115 22:04:00.277"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:00.280" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:00.278" endtime="20201115 22:04:00.280"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:00.281" endtime="20201115 22:04:00.282"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:00.258" endtime="20201115 22:04:00.283"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:00.255" endtime="20201115 22:04:00.283"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:00.290" endtime="20201115 22:04:00.577"></status>
</kw>
<msg timestamp="20201115 22:04:00.580" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020684222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020687125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:00.289" endtime="20201115 22:04:00.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:00.588" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020684222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020687125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:00.581" endtime="20201115 22:04:00.589"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:00.590" endtime="20201115 22:04:00.591"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:00.286" endtime="20201115 22:04:00.592"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:00.284" endtime="20201115 22:04:00.592"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:00.597" level="INFO">${RESULT} = [{'time': 0.020687125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.903000000002015e-06, 'source_diff': 2.903000000002015e-06}, {'time': 0.020799236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:00.593" endtime="20201115 22:04:00.597"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:00.611" level="INFO">${OVERHEAD} = {'diff': [2.903000000002015e-06, 2.9439999999977817e-06, 2.9029999999985456e-06, 2.903000000002015e-06, 2.9029999999985456e-06, 2.8889999999989757e-06, 2.889000000002445e-06, 2.9029999999985456e-06, 2...</msg>
<status status="PASS" starttime="20201115 22:04:00.598" endtime="20201115 22:04:00.611"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:00.616" level="INFO">NAME: 00-overhead-8-remove</msg>
<status status="PASS" starttime="20201115 22:04:00.614" endtime="20201115 22:04:00.616"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:00.618" level="INFO">VALUE: [2.903000000002015e-06, 2.9439999999977817e-06, 2.9029999999985456e-06, 2.903000000002015e-06, 2.9029999999985456e-06, 2.8889999999989757e-06, 2.889000000002445e-06, 2.9029999999985456e-06, 2.972000000000391e-06, 2.931000000001155e-06, 2.903000000002015e-06, 2.9300000000016813e-06, 2.9309999999976855e-06, 2.917000000001585e-06, 2.944000000001251e-06, 2.9029999999985456e-06, 2.9029999999985456e-06, 2.9169999999981155e-06, 2.9169999999981155e-06, 2.903000000002015e-06, 2.903000000002015e-06, 2.931000000001155e-06, 2.9169999999981155e-06, 2.9029999999985456e-06, 2.874999999999406e-06, 2.972000000000391e-06, 2.903000000002015e-06, 2.889000000002445e-06, 2.917000000001585e-06, 2.9029999999985456e-06, 2.903000000002015e-06, 2.903000000002015e-06, 2.915999999998642e-06, 2.9029999999985456e-06, 2.903000000002015e-06, 2.887999999999502e-06, 2.889000000002445e-06, 2.917000000001585e-06, 2.901999999999072e-06, 2.8889999999989757e-06, 2.887999999999502e-06, 2.8889999999989757e-06, 2.860999999999836e-06, 2.9029999999985456e-06, 2.9029999999985456e-06, 2.9169999999981155e-06, 2.915999999998642e-06, 2.887999999999502e-06, 2.903000000002015e-06, 2.847000000000266e-06]</msg>
<status status="PASS" starttime="20201115 22:04:00.617" endtime="20201115 22:04:00.619"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:00.612" endtime="20201115 22:04:00.619"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:00.621" endtime="20201115 22:04:00.623"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:00.625" endtime="20201115 22:04:00.645"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:00.623" endtime="20201115 22:04:00.645"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:00.620" endtime="20201115 22:04:00.646"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:00.253" endtime="20201115 22:04:00.646"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:58.660" endtime="20201115 22:04:00.646"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:58.659" endtime="20201115 22:04:00.646"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:04:00.649" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:00.658" endtime="20201115 22:04:00.673"></status>
</kw>
<msg timestamp="20201115 22:04:00.674" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:00.656" endtime="20201115 22:04:00.674"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:00.676" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:00.675" endtime="20201115 22:04:00.677"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:00.678" endtime="20201115 22:04:00.679"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:00.654" endtime="20201115 22:04:00.680"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:00.651" endtime="20201115 22:04:00.681"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:00.687" endtime="20201115 22:04:00.976"></status>
</kw>
<msg timestamp="20201115 22:04:00.980" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023075792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023078875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:00.686" endtime="20201115 22:04:00.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:00.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023075792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023078875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:00.981" endtime="20201115 22:04:00.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:00.989" endtime="20201115 22:04:00.991"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:00.683" endtime="20201115 22:04:00.992"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:00.681" endtime="20201115 22:04:00.992"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:00.996" level="INFO">${RESULT} = [{'time': 0.023078875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0829999999974766e-06, 'source_diff': 3.0829999999974766e-06}, {'time': 0.023201653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:04:00.993" endtime="20201115 22:04:00.997"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:01.010" level="INFO">${OVERHEAD} = {'diff': [3.0829999999974766e-06, 3.111000000000086e-06, 3.111000000000086e-06, 3.111000000000086e-06, 3.1389999999992257e-06, 3.1520000000027915e-06, 3.1529999999987957e-06, 3.124999999999656e-06, 3....</msg>
<status status="PASS" starttime="20201115 22:04:00.997" endtime="20201115 22:04:01.011"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:01.015" level="INFO">NAME: 00-overhead-9-remove</msg>
<status status="PASS" starttime="20201115 22:04:01.014" endtime="20201115 22:04:01.016"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:01.018" level="INFO">VALUE: [3.0829999999974766e-06, 3.111000000000086e-06, 3.111000000000086e-06, 3.111000000000086e-06, 3.1389999999992257e-06, 3.1520000000027915e-06, 3.1529999999987957e-06, 3.124999999999656e-06, 3.167000000001835e-06, 3.097000000000516e-06, 3.124999999999656e-06, 3.124999999999656e-06, 3.124999999999656e-06, 3.111000000000086e-06, 3.111000000000086e-06, 3.124999999999656e-06, 3.124999999999656e-06, 3.124999999999656e-06, 3.139000000002695e-06, 3.124999999999656e-06, 3.111000000000086e-06, 3.1389999999992257e-06, 3.1250000000031253e-06, 3.111000000000086e-06, 3.124999999999656e-06, 3.097000000000516e-06, 3.111000000000086e-06, 3.111000000000086e-06, 3.111000000000086e-06, 3.124999999999656e-06, 3.07000000000085e-06, 3.124999999999656e-06, 3.124999999999656e-06, 3.111000000000086e-06, 3.124999999999656e-06, 3.05600000000128e-06, 3.1800000000019313e-06, 3.139000000002695e-06, 3.097000000000516e-06, 3.111000000000086e-06, 3.124999999999656e-06, 3.124999999999656e-06, 3.124999999999656e-06, 3.124999999999656e-06, 3.111000000000086e-06, 3.111000000000086e-06, 3.1389999999992257e-06, 3.139000000002695e-06, 3.1250000000031253e-06, 3.0979999999999897e-06]</msg>
<status status="PASS" starttime="20201115 22:04:01.016" endtime="20201115 22:04:01.018"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:01.011" endtime="20201115 22:04:01.019"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:01.021" endtime="20201115 22:04:01.022"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:01.025" endtime="20201115 22:04:01.044"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:01.023" endtime="20201115 22:04:01.045"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:01.019" endtime="20201115 22:04:01.045"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:00.649" endtime="20201115 22:04:01.046"></status>
</kw>
<msg timestamp="20201115 22:04:01.046" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:01.055" endtime="20201115 22:04:01.070"></status>
</kw>
<msg timestamp="20201115 22:04:01.071" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:01.054" endtime="20201115 22:04:01.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:01.078" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:01.072" endtime="20201115 22:04:01.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:01.079" endtime="20201115 22:04:01.081"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:01.051" endtime="20201115 22:04:01.081"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:01.049" endtime="20201115 22:04:01.082"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:01.089" endtime="20201115 22:04:01.376"></status>
</kw>
<msg timestamp="20201115 22:04:01.379" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020790319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020793444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:01.087" endtime="20201115 22:04:01.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:01.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020790319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020793444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:01.380" endtime="20201115 22:04:01.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:01.389" endtime="20201115 22:04:01.390"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:01.084" endtime="20201115 22:04:01.391"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:01.082" endtime="20201115 22:04:01.391"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:01.396" level="INFO">${RESULT} = [{'time': 0.020793444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.124999999999656e-06, 'source_diff': 3.124999999999656e-06}, {'time': 0.020917528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:01.392" endtime="20201115 22:04:01.396"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:01.410" level="INFO">${OVERHEAD} = {'diff': [3.124999999999656e-06, 3.097000000000516e-06, 3.1250000000031253e-06, 3.1250000000031253e-06, 3.1529999999987957e-06, 3.097000000000516e-06, 3.124999999999656e-06, 3.137999999999752e-06, 3.1...</msg>
<status status="PASS" starttime="20201115 22:04:01.397" endtime="20201115 22:04:01.410"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:01.414" level="INFO">NAME: 00-overhead-9-remove</msg>
<status status="PASS" starttime="20201115 22:04:01.413" endtime="20201115 22:04:01.415"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:01.417" level="INFO">VALUE: [3.124999999999656e-06, 3.097000000000516e-06, 3.1250000000031253e-06, 3.1250000000031253e-06, 3.1529999999987957e-06, 3.097000000000516e-06, 3.124999999999656e-06, 3.137999999999752e-06, 3.111000000000086e-06, 3.124999999999656e-06, 3.097000000000516e-06, 3.124999999999656e-06, 3.139000000002695e-06, 3.179999999998462e-06, 3.165999999998892e-06, 3.111000000000086e-06, 3.1939999999980317e-06, 3.153000000002265e-06, 3.1389999999992257e-06, 3.124999999999656e-06, 3.124999999999656e-06, 3.124999999999656e-06, 3.124999999999656e-06, 3.0979999999999897e-06, 3.111000000000086e-06, 3.1669999999983656e-06, 3.167000000001835e-06, 3.1250000000031253e-06, 3.111000000000086e-06, 3.124999999999656e-06, 3.111000000000086e-06, 3.111000000000086e-06, 3.111000000000086e-06, 3.139000000002695e-06, 3.0979999999999897e-06, 3.124999999999656e-06, 3.1800000000019313e-06, 3.1389999999992257e-06, 3.097000000000516e-06, 3.139000000002695e-06, 3.111000000000086e-06, 3.137999999999752e-06, 3.124999999999656e-06, 3.111000000000086e-06, 3.111000000000086e-06, 3.0829999999974766e-06, 3.1119999999995596e-06, 3.195000000000975e-06, 3.1529999999987957e-06, 3.111000000000086e-06]</msg>
<status status="PASS" starttime="20201115 22:04:01.416" endtime="20201115 22:04:01.417"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:01.411" endtime="20201115 22:04:01.418"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:01.420" endtime="20201115 22:04:01.422"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:01.424" endtime="20201115 22:04:01.443"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:01.422" endtime="20201115 22:04:01.444"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:01.418" endtime="20201115 22:04:01.444"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:01.047" endtime="20201115 22:04:01.445"></status>
</kw>
<msg timestamp="20201115 22:04:01.445" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:01.455" endtime="20201115 22:04:01.472"></status>
</kw>
<msg timestamp="20201115 22:04:01.473" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:01.452" endtime="20201115 22:04:01.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:01.475" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:01.474" endtime="20201115 22:04:01.476"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:01.476" endtime="20201115 22:04:01.478"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:01.450" endtime="20201115 22:04:01.479"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:01.448" endtime="20201115 22:04:01.479"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:01.486" endtime="20201115 22:04:01.775"></status>
</kw>
<msg timestamp="20201115 22:04:01.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021198417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021201514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:01.484" endtime="20201115 22:04:01.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:01.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021198417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021201514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:01.779" endtime="20201115 22:04:01.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:01.787" endtime="20201115 22:04:01.789"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:01.482" endtime="20201115 22:04:01.790"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:01.480" endtime="20201115 22:04:01.790"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:01.794" level="INFO">${RESULT} = [{'time': 0.021201514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.097000000000516e-06, 'source_diff': 3.097000000000516e-06}, {'time': 0.021324083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:01.791" endtime="20201115 22:04:01.794"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:01.808" level="INFO">${OVERHEAD} = {'diff': [3.097000000000516e-06, 3.097000000000516e-06, 3.097000000000516e-06, 3.111000000000086e-06, 3.111000000000086e-06, 3.165999999998892e-06, 3.1389999999992257e-06, 3.124999999999656e-06, 3.124...</msg>
<status status="PASS" starttime="20201115 22:04:01.795" endtime="20201115 22:04:01.808"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:01.813" level="INFO">NAME: 00-overhead-9-remove</msg>
<status status="PASS" starttime="20201115 22:04:01.811" endtime="20201115 22:04:01.813"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:01.818" level="INFO">VALUE: [3.097000000000516e-06, 3.097000000000516e-06, 3.097000000000516e-06, 3.111000000000086e-06, 3.111000000000086e-06, 3.165999999998892e-06, 3.1389999999992257e-06, 3.124999999999656e-06, 3.124999999999656e-06, 3.124999999999656e-06, 3.181000000001405e-06, 3.124999999999656e-06, 3.1389999999992257e-06, 3.1389999999992257e-06, 3.0839999999969503e-06, 3.111000000000086e-06, 3.111000000000086e-06, 3.124999999999656e-06, 3.124999999999656e-06, 3.1389999999992257e-06, 3.124999999999656e-06, 3.111000000000086e-06, 3.07000000000085e-06, 3.083000000000946e-06, 3.1529999999987957e-06, 3.124999999999656e-06, 3.05600000000128e-06, 3.0969999999970466e-06, 3.124999999999656e-06, 3.111000000000086e-06, 3.124999999999656e-06, 3.097000000000516e-06, 3.124999999999656e-06, 3.097000000000516e-06, 3.124999999999656e-06, 3.1389999999992257e-06, 3.111000000000086e-06, 3.111000000000086e-06, 3.111000000000086e-06, 3.124999999999656e-06, 3.069000000001376e-06, 3.124999999999656e-06, 3.111000000000086e-06, 3.124999999999656e-06, 3.1389999999992257e-06, 3.153000000002265e-06, 3.1389999999992257e-06, 3.111000000000086e-06, 3.111000000000086e-06, 3.1660000000023614e-06]</msg>
<status status="PASS" starttime="20201115 22:04:01.815" endtime="20201115 22:04:01.819"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:01.808" endtime="20201115 22:04:01.820"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:01.825" endtime="20201115 22:04:01.827"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:01.832" endtime="20201115 22:04:01.853"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:01.829" endtime="20201115 22:04:01.855"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:01.821" endtime="20201115 22:04:01.856"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:01.446" endtime="20201115 22:04:01.857"></status>
</kw>
<msg timestamp="20201115 22:04:01.857" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:01.876" endtime="20201115 22:04:01.896"></status>
</kw>
<msg timestamp="20201115 22:04:01.897" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:01.873" endtime="20201115 22:04:01.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:01.902" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:01.899" endtime="20201115 22:04:01.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:01.904" endtime="20201115 22:04:01.907"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:01.867" endtime="20201115 22:04:01.908"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:01.863" endtime="20201115 22:04:01.909"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:01.920" endtime="20201115 22:04:02.206"></status>
</kw>
<msg timestamp="20201115 22:04:02.209" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035383639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035386764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:01.918" endtime="20201115 22:04:02.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:02.217" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035383639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035386764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:02.210" endtime="20201115 22:04:02.218"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:02.218" endtime="20201115 22:04:02.220"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:01.914" endtime="20201115 22:04:02.221"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:01.911" endtime="20201115 22:04:02.221"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:02.225" level="INFO">${RESULT} = [{'time': 0.035386764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.124999999999656e-06, 'source_diff': 3.124999999999656e-06}, {'time': 0.03551275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:04:02.222" endtime="20201115 22:04:02.225"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:02.239" level="INFO">${OVERHEAD} = {'diff': [3.124999999999656e-06, 3.111000000000086e-06, 3.124999999999656e-06, 3.041999999994771e-06, 3.1390000000061646e-06, 3.111000000000086e-06, 3.179999999998462e-06, 3.111000000000086e-06, 3.137...</msg>
<status status="PASS" starttime="20201115 22:04:02.226" endtime="20201115 22:04:02.239"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:02.243" level="INFO">NAME: 00-overhead-9-remove</msg>
<status status="PASS" starttime="20201115 22:04:02.242" endtime="20201115 22:04:02.244"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:02.246" level="INFO">VALUE: [3.124999999999656e-06, 3.111000000000086e-06, 3.124999999999656e-06, 3.041999999994771e-06, 3.1390000000061646e-06, 3.111000000000086e-06, 3.179999999998462e-06, 3.111000000000086e-06, 3.137999999999752e-06, 3.124999999999656e-06, 3.1669999999983656e-06, 3.1809999999979355e-06, 3.097000000000516e-06, 3.124999999999656e-06, 3.1529999999987957e-06, 3.1389999999992257e-06, 3.111000000000086e-06, 3.124999999999656e-06, 3.111000000000086e-06, 3.111000000000086e-06, 3.124999999999656e-06, 3.124999999999656e-06, 3.1939999999980317e-06, 3.097000000000516e-06, 3.1389999999992257e-06, 3.1119999999995596e-06, 3.111000000000086e-06, 3.1529999999987957e-06, 3.111000000000086e-06, 3.1389999999992257e-06, 3.137999999999752e-06, 3.124999999999656e-06, 3.1669999999983656e-06, 3.1669999999983656e-06, 3.1389999999992257e-06, 3.111000000000086e-06, 3.111000000000086e-06, 3.124999999999656e-06, 3.083000000000946e-06, 3.124999999999656e-06, 3.097000000000516e-06, 3.124999999999656e-06, 3.0550000000018063e-06, 3.0979999999999897e-06, 3.124999999999656e-06, 3.111000000000086e-06, 3.124999999999656e-06, 3.1389999999992257e-06, 3.111000000000086e-06, 3.1529999999987957e-06]</msg>
<status status="PASS" starttime="20201115 22:04:02.244" endtime="20201115 22:04:02.246"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:02.240" endtime="20201115 22:04:02.247"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:02.249" endtime="20201115 22:04:02.251"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:02.253" endtime="20201115 22:04:02.272"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:02.251" endtime="20201115 22:04:02.273"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:02.248" endtime="20201115 22:04:02.273"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:01.859" endtime="20201115 22:04:02.273"></status>
</kw>
<msg timestamp="20201115 22:04:02.274" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:02.282" endtime="20201115 22:04:02.299"></status>
</kw>
<msg timestamp="20201115 22:04:02.299" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:02.281" endtime="20201115 22:04:02.299"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:02.302" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:02.300" endtime="20201115 22:04:02.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:02.303" endtime="20201115 22:04:02.304"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:02.278" endtime="20201115 22:04:02.305"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:02.276" endtime="20201115 22:04:02.305"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:02.312" endtime="20201115 22:04:02.599"></status>
</kw>
<msg timestamp="20201115 22:04:02.602" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020554944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020558056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:02.310" endtime="20201115 22:04:02.602"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:02.610" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020554944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020558056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:02.603" endtime="20201115 22:04:02.610"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:02.611" endtime="20201115 22:04:02.613"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:02.308" endtime="20201115 22:04:02.613"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:02.306" endtime="20201115 22:04:02.613"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:02.618" level="INFO">${RESULT} = [{'time': 0.020558056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.112000000003029e-06, 'source_diff': 3.112000000003029e-06}, {'time': 0.020684139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:02.614" endtime="20201115 22:04:02.618"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:02.631" level="INFO">${OVERHEAD} = {'diff': [3.112000000003029e-06, 3.111000000000086e-06, 3.111000000000086e-06, 3.1389999999992257e-06, 3.097000000000516e-06, 3.1119999999995596e-06, 3.111000000000086e-06, 3.111000000000086e-06, 3.09...</msg>
<status status="PASS" starttime="20201115 22:04:02.619" endtime="20201115 22:04:02.631"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:02.636" level="INFO">NAME: 00-overhead-9-remove</msg>
<status status="PASS" starttime="20201115 22:04:02.635" endtime="20201115 22:04:02.636"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:02.638" level="INFO">VALUE: [3.112000000003029e-06, 3.111000000000086e-06, 3.111000000000086e-06, 3.1389999999992257e-06, 3.097000000000516e-06, 3.1119999999995596e-06, 3.111000000000086e-06, 3.111000000000086e-06, 3.097000000000516e-06, 3.111000000000086e-06, 3.1809999999979355e-06, 3.111000000000086e-06, 3.1669999999983656e-06, 3.097000000000516e-06, 3.111000000000086e-06, 3.124999999999656e-06, 3.181000000001405e-06, 3.1669999999983656e-06, 3.111000000000086e-06, 3.1389999999992257e-06, 3.124999999999656e-06, 3.124999999999656e-06, 3.124999999999656e-06, 3.124999999999656e-06, 3.111000000000086e-06, 3.1669999999983656e-06, 3.111000000000086e-06, 3.124999999999656e-06, 3.124999999999656e-06, 3.124999999999656e-06, 3.111000000000086e-06, 3.1389999999992257e-06, 3.112000000003029e-06, 3.1669999999983656e-06, 3.124999999999656e-06, 3.124999999999656e-06, 3.124999999999656e-06, 3.124999999999656e-06, 3.111000000000086e-06, 3.111000000000086e-06, 3.124999999999656e-06, 3.167000000001835e-06, 3.1529999999987957e-06, 3.124999999999656e-06, 3.124999999999656e-06, 3.1250000000031253e-06, 3.0559999999978105e-06, 3.124999999999656e-06, 3.111000000000086e-06, 3.139000000002695e-06]</msg>
<status status="PASS" starttime="20201115 22:04:02.637" endtime="20201115 22:04:02.639"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:02.632" endtime="20201115 22:04:02.639"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:02.642" endtime="20201115 22:04:02.643"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:02.645" endtime="20201115 22:04:02.665"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:02.644" endtime="20201115 22:04:02.665"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:02.640" endtime="20201115 22:04:02.666"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:02.274" endtime="20201115 22:04:02.666"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:00.648" endtime="20201115 22:04:02.666"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:00.647" endtime="20201115 22:04:02.666"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:04:02.669" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:02.678" endtime="20201115 22:04:02.693"></status>
</kw>
<msg timestamp="20201115 22:04:02.694" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:02.676" endtime="20201115 22:04:02.694"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:02.696" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:02.695" endtime="20201115 22:04:02.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:02.697" endtime="20201115 22:04:02.699"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:02.673" endtime="20201115 22:04:02.699"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:02.671" endtime="20201115 22:04:02.700"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:02.706" endtime="20201115 22:04:02.993"></status>
</kw>
<msg timestamp="20201115 22:04:02.996" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022545042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022548361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:02.704" endtime="20201115 22:04:02.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:03.005" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022545042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022548361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:02.998" endtime="20201115 22:04:03.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:03.006" endtime="20201115 22:04:03.008"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:02.702" endtime="20201115 22:04:03.008"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:02.700" endtime="20201115 22:04:03.009"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:03.013" level="INFO">${RESULT} = [{'time': 0.022548361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3189999999981568e-06, 'source_diff': 3.3189999999981568e-06}, {'time': 0.022682903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:04:03.010" endtime="20201115 22:04:03.013"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:03.027" level="INFO">${OVERHEAD} = {'diff': [3.3189999999981568e-06, 3.3889999999994758e-06, 3.3339999999972003e-06, 3.30600000000153e-06, 3.333000000001196e-06, 3.3480000000002397e-06, 3.3329999999977267e-06, 3.319000000001626e-06, 3....</msg>
<status status="PASS" starttime="20201115 22:04:03.014" endtime="20201115 22:04:03.027"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:03.031" level="INFO">NAME: 00-overhead-10-remove</msg>
<status status="PASS" starttime="20201115 22:04:03.030" endtime="20201115 22:04:03.032"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:03.034" level="INFO">VALUE: [3.3189999999981568e-06, 3.3889999999994758e-06, 3.3339999999972003e-06, 3.30600000000153e-06, 3.333000000001196e-06, 3.3480000000002397e-06, 3.3329999999977267e-06, 3.319000000001626e-06, 3.403000000002515e-06, 3.347000000000766e-06, 3.347000000000766e-06, 3.3199999999976304e-06, 3.3340000000006698e-06, 3.361000000000336e-06, 3.333000000001196e-06, 3.333000000001196e-06, 3.333000000001196e-06, 3.3340000000006698e-06, 3.333000000001196e-06, 3.333000000001196e-06, 3.3329999999977267e-06, 3.3469999999972966e-06, 3.3889999999994758e-06, 3.3340000000006698e-06, 3.347000000000766e-06, 3.3189999999981568e-06, 3.3340000000006698e-06, 3.3050000000020563e-06, 3.3329999999977267e-06, 3.3329999999977267e-06, 3.347000000000766e-06, 3.347000000000766e-06, 3.347000000000766e-06, 3.333000000001196e-06, 3.333000000001196e-06, 3.3329999999977267e-06, 3.333000000001196e-06, 3.333000000001196e-06, 3.347000000000766e-06, 3.333000000001196e-06, 3.3619999999998096e-06, 3.249999999999781e-06, 3.333000000001196e-06, 3.3340000000006698e-06, 3.333000000001196e-06, 3.3480000000002397e-06, 3.3340000000006698e-06, 3.333000000001196e-06, 3.3339999999972003e-06, 3.3340000000006698e-06]</msg>
<status status="PASS" starttime="20201115 22:04:03.032" endtime="20201115 22:04:03.035"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:03.028" endtime="20201115 22:04:03.035"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:03.037" endtime="20201115 22:04:03.039"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:03.041" endtime="20201115 22:04:03.060"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:03.039" endtime="20201115 22:04:03.061"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:03.036" endtime="20201115 22:04:03.061"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:02.669" endtime="20201115 22:04:03.061"></status>
</kw>
<msg timestamp="20201115 22:04:03.062" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:03.070" endtime="20201115 22:04:03.086"></status>
</kw>
<msg timestamp="20201115 22:04:03.087" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:03.069" endtime="20201115 22:04:03.087"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:03.089" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:03.088" endtime="20201115 22:04:03.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:03.090" endtime="20201115 22:04:03.092"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:03.066" endtime="20201115 22:04:03.092"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:03.064" endtime="20201115 22:04:03.092"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:03.099" endtime="20201115 22:04:03.385"></status>
</kw>
<msg timestamp="20201115 22:04:03.388" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020067292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020070597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:03.097" endtime="20201115 22:04:03.389"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:03.396" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020067292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020070597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:03.389" endtime="20201115 22:04:03.397"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:03.398" endtime="20201115 22:04:03.399"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:03.095" endtime="20201115 22:04:03.400"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:03.093" endtime="20201115 22:04:03.400"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:03.404" level="INFO">${RESULT} = [{'time': 0.020070597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.304999999998587e-06, 'source_diff': 3.304999999998587e-06}, {'time': 0.020206014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:03.401" endtime="20201115 22:04:03.404"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:03.418" level="INFO">${OVERHEAD} = {'diff': [3.304999999998587e-06, 3.333000000001196e-06, 3.319000000001626e-06, 3.333000000001196e-06, 3.3329999999977267e-06, 3.290999999999017e-06, 3.333000000001196e-06, 3.3480000000002397e-06, 3.26...</msg>
<status status="PASS" starttime="20201115 22:04:03.405" endtime="20201115 22:04:03.418"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:03.423" level="INFO">NAME: 00-overhead-10-remove</msg>
<status status="PASS" starttime="20201115 22:04:03.422" endtime="20201115 22:04:03.423"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:03.425" level="INFO">VALUE: [3.304999999998587e-06, 3.333000000001196e-06, 3.319000000001626e-06, 3.333000000001196e-06, 3.3329999999977267e-06, 3.290999999999017e-06, 3.333000000001196e-06, 3.3480000000002397e-06, 3.2639999999993508e-06, 3.361000000000336e-06, 3.3199999999976304e-06, 3.2639999999993508e-06, 3.347000000000766e-06, 3.30600000000153e-06, 3.3329999999977267e-06, 3.2779999999989207e-06, 3.3340000000006698e-06, 3.27800000000239e-06, 3.319000000001626e-06, 3.3059999999980605e-06, 3.3480000000002397e-06, 3.3469999999972966e-06, 3.3480000000002397e-06, 3.3329999999977267e-06, 3.347000000000766e-06, 3.374999999999906e-06, 3.3189999999981568e-06, 3.304999999998587e-06, 3.2639999999993508e-06, 3.3340000000006698e-06, 3.3189999999981568e-06, 3.3339999999972003e-06, 3.361000000000336e-06, 3.3339999999972003e-06, 3.333000000001196e-06, 3.3340000000006698e-06, 3.333000000001196e-06, 3.3340000000006698e-06, 3.3340000000006698e-06, 3.319000000001626e-06, 3.3329999999977267e-06, 3.3050000000020563e-06, 3.3189999999981568e-06, 3.3340000000006698e-06, 3.3340000000006698e-06, 3.333000000001196e-06, 3.347000000000766e-06, 3.333000000001196e-06, 3.333000000001196e-06, 3.374999999999906e-06]</msg>
<status status="PASS" starttime="20201115 22:04:03.424" endtime="20201115 22:04:03.426"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:03.419" endtime="20201115 22:04:03.426"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:03.428" endtime="20201115 22:04:03.430"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:03.432" endtime="20201115 22:04:03.451"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:03.430" endtime="20201115 22:04:03.452"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:03.427" endtime="20201115 22:04:03.452"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:03.062" endtime="20201115 22:04:03.452"></status>
</kw>
<msg timestamp="20201115 22:04:03.453" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:03.462" endtime="20201115 22:04:03.478"></status>
</kw>
<msg timestamp="20201115 22:04:03.479" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:03.460" endtime="20201115 22:04:03.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:03.481" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:03.480" endtime="20201115 22:04:03.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:03.482" endtime="20201115 22:04:03.484"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:03.457" endtime="20201115 22:04:03.484"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:03.455" endtime="20201115 22:04:03.485"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:03.491" endtime="20201115 22:04:03.777"></status>
</kw>
<msg timestamp="20201115 22:04:03.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020340611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020343944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:03.490" endtime="20201115 22:04:03.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:03.788" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020340611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020343944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:03.781" endtime="20201115 22:04:03.789"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:03.790" endtime="20201115 22:04:03.791"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:03.487" endtime="20201115 22:04:03.792"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:03.485" endtime="20201115 22:04:03.792"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:03.797" level="INFO">${RESULT} = [{'time': 0.020343944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3329999999977267e-06, 'source_diff': 3.3329999999977267e-06}, {'time': 0.020477639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:04:03.793" endtime="20201115 22:04:03.797"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:03.810" level="INFO">${OVERHEAD} = {'diff': [3.3329999999977267e-06, 3.3329999999977267e-06, 3.333000000001196e-06, 3.3340000000006698e-06, 3.4169999999986156e-06, 3.333000000001196e-06, 3.347000000000766e-06, 3.3339999999972003e-06, 3...</msg>
<status status="PASS" starttime="20201115 22:04:03.798" endtime="20201115 22:04:03.811"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:03.815" level="INFO">NAME: 00-overhead-10-remove</msg>
<status status="PASS" starttime="20201115 22:04:03.814" endtime="20201115 22:04:03.815"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:03.817" level="INFO">VALUE: [3.3329999999977267e-06, 3.3329999999977267e-06, 3.333000000001196e-06, 3.3340000000006698e-06, 3.4169999999986156e-06, 3.333000000001196e-06, 3.347000000000766e-06, 3.3339999999972003e-06, 3.333000000001196e-06, 3.3200000000011e-06, 3.3199999999976304e-06, 3.27800000000239e-06, 3.2919999999984906e-06, 3.374999999999906e-06, 3.2639999999993508e-06, 3.3480000000002397e-06, 3.3340000000006698e-06, 3.2639999999993508e-06, 3.3200000000011e-06, 3.3329999999977267e-06, 3.3329999999977267e-06, 3.3340000000006698e-06, 3.333000000001196e-06, 3.333000000001196e-06, 3.3199999999976304e-06, 3.249999999999781e-06, 3.3189999999981568e-06, 3.3200000000011e-06, 3.3200000000011e-06, 3.333000000001196e-06, 3.3200000000011e-06, 3.333000000001196e-06, 3.3480000000002397e-06, 3.361000000000336e-06, 3.3200000000011e-06, 3.3329999999977267e-06, 3.3199999999976304e-06, 3.3329999999977267e-06, 3.3329999999977267e-06, 3.3340000000006698e-06, 3.333000000001196e-06, 3.3329999999977267e-06, 3.3340000000006698e-06, 3.347000000000766e-06, 3.3200000000011e-06, 3.3199999999976304e-06, 3.3340000000006698e-06, 3.333000000001196e-06, 3.361000000000336e-06, 3.3339999999972003e-06]</msg>
<status status="PASS" starttime="20201115 22:04:03.816" endtime="20201115 22:04:03.818"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:03.811" endtime="20201115 22:04:03.818"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:03.820" endtime="20201115 22:04:03.822"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:03.824" endtime="20201115 22:04:03.843"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:03.822" endtime="20201115 22:04:03.844"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:03.819" endtime="20201115 22:04:03.844"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:03.453" endtime="20201115 22:04:03.845"></status>
</kw>
<msg timestamp="20201115 22:04:03.845" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:03.854" endtime="20201115 22:04:03.871"></status>
</kw>
<msg timestamp="20201115 22:04:03.872" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:03.852" endtime="20201115 22:04:03.872"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:03.874" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:03.873" endtime="20201115 22:04:03.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:03.875" endtime="20201115 22:04:03.877"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:03.850" endtime="20201115 22:04:03.877"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:03.847" endtime="20201115 22:04:03.878"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:03.884" endtime="20201115 22:04:04.170"></status>
</kw>
<msg timestamp="20201115 22:04:04.173" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020095903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020099181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:03.882" endtime="20201115 22:04:04.173"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:04.180" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020095903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020099181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:04.174" endtime="20201115 22:04:04.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:04.182" endtime="20201115 22:04:04.184"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:03.880" endtime="20201115 22:04:04.184"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:03.878" endtime="20201115 22:04:04.185"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:04.189" level="INFO">${RESULT} = [{'time': 0.020099181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.27800000000239e-06, 'source_diff': 3.27800000000239e-06}, {'time': 0.020233958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:04:04.185" endtime="20201115 22:04:04.189"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:04.202" level="INFO">${OVERHEAD} = {'diff': [3.27800000000239e-06, 3.276999999999447e-06, 3.3339999999972003e-06, 3.3189999999981568e-06, 3.347000000000766e-06, 3.3340000000006698e-06, 3.3340000000006698e-06, 3.27800000000239e-06, 3.30...</msg>
<status status="PASS" starttime="20201115 22:04:04.190" endtime="20201115 22:04:04.203"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:04.207" level="INFO">NAME: 00-overhead-10-remove</msg>
<status status="PASS" starttime="20201115 22:04:04.206" endtime="20201115 22:04:04.207"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:04.209" level="INFO">VALUE: [3.27800000000239e-06, 3.276999999999447e-06, 3.3339999999972003e-06, 3.3189999999981568e-06, 3.347000000000766e-06, 3.3340000000006698e-06, 3.3340000000006698e-06, 3.27800000000239e-06, 3.3050000000020563e-06, 3.304999999998587e-06, 3.3340000000006698e-06, 3.3329999999977267e-06, 3.3480000000002397e-06, 3.3339999999972003e-06, 3.3189999999981568e-06, 3.3339999999972003e-06, 3.319000000001626e-06, 3.3329999999977267e-06, 3.27800000000239e-06, 3.4169999999986156e-06, 3.347000000000766e-06, 3.347000000000766e-06, 3.3199999999976304e-06, 3.3189999999981568e-06, 3.3889999999994758e-06, 3.333000000001196e-06, 3.3480000000002397e-06, 3.333000000001196e-06, 3.347000000000766e-06, 3.3480000000002397e-06, 3.2779999999989207e-06, 3.3480000000002397e-06, 3.3480000000002397e-06, 3.333000000001196e-06, 3.3340000000006698e-06, 3.3329999999977267e-06, 3.3189999999981568e-06, 3.3200000000011e-06, 3.3200000000011e-06, 3.3200000000011e-06, 3.3189999999981568e-06, 3.3469999999972966e-06, 3.3339999999972003e-06, 3.333000000001196e-06, 3.3340000000006698e-06, 3.3469999999972966e-06, 3.4029999999990457e-06, 3.333000000001196e-06, 3.319000000001626e-06, 3.347000000000766e-06]</msg>
<status status="PASS" starttime="20201115 22:04:04.208" endtime="20201115 22:04:04.210"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:04.203" endtime="20201115 22:04:04.210"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:04.213" endtime="20201115 22:04:04.214"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:04.216" endtime="20201115 22:04:04.235"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:04.214" endtime="20201115 22:04:04.236"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:04.211" endtime="20201115 22:04:04.236"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:03.845" endtime="20201115 22:04:04.237"></status>
</kw>
<msg timestamp="20201115 22:04:04.237" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:04.246" endtime="20201115 22:04:04.261"></status>
</kw>
<msg timestamp="20201115 22:04:04.262" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:04.244" endtime="20201115 22:04:04.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:04.264" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:04.263" endtime="20201115 22:04:04.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:04.265" endtime="20201115 22:04:04.267"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:04.242" endtime="20201115 22:04:04.267"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:04.239" endtime="20201115 22:04:04.268"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:04.274" endtime="20201115 22:04:04.561"></status>
</kw>
<msg timestamp="20201115 22:04:04.564" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020140722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020144125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:04.273" endtime="20201115 22:04:04.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:04.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020140722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020144125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:04.566" endtime="20201115 22:04:04.573"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:04.574" endtime="20201115 22:04:04.575"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:04.270" endtime="20201115 22:04:04.576"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:04.268" endtime="20201115 22:04:04.576"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:04.580" level="INFO">${RESULT} = [{'time': 0.020144125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4029999999990457e-06, 'source_diff': 3.4029999999990457e-06}, {'time': 0.020278458, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:04:04.577" endtime="20201115 22:04:04.581"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:04.594" level="INFO">${OVERHEAD} = {'diff': [3.4029999999990457e-06, 3.3329999999977267e-06, 3.333000000001196e-06, 3.304999999998587e-06, 3.3340000000006698e-06, 3.333000000001196e-06, 3.403000000002515e-06, 3.333000000001196e-06, 3.4...</msg>
<status status="PASS" starttime="20201115 22:04:04.581" endtime="20201115 22:04:04.594"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:04.598" level="INFO">NAME: 00-overhead-10-remove</msg>
<status status="PASS" starttime="20201115 22:04:04.597" endtime="20201115 22:04:04.599"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:04.601" level="INFO">VALUE: [3.4029999999990457e-06, 3.3329999999977267e-06, 3.333000000001196e-06, 3.304999999998587e-06, 3.3340000000006698e-06, 3.333000000001196e-06, 3.403000000002515e-06, 3.333000000001196e-06, 3.4160000000026114e-06, 3.374999999999906e-06, 3.333000000001196e-06, 3.319000000001626e-06, 3.3189999999981568e-06, 3.347000000000766e-06, 3.3199999999976304e-06, 3.333000000001196e-06, 3.333000000001196e-06, 3.3200000000011e-06, 3.3200000000011e-06, 3.3480000000002397e-06, 3.3340000000006698e-06, 3.3329999999977267e-06, 3.3340000000006698e-06, 3.3329999999977267e-06, 3.333000000001196e-06, 3.3340000000006698e-06, 3.3199999999976304e-06, 3.3059999999980605e-06, 3.347000000000766e-06, 3.319000000001626e-06, 3.319000000001626e-06, 3.3340000000006698e-06, 3.3340000000006698e-06, 3.3469999999972966e-06, 3.347000000000766e-06, 3.333000000001196e-06, 3.347000000000766e-06, 3.3340000000006698e-06, 3.3480000000002397e-06, 3.3189999999981568e-06, 3.3480000000002397e-06, 3.347000000000766e-06, 3.249999999999781e-06, 3.333000000001196e-06, 3.3340000000006698e-06, 3.2639999999993508e-06, 3.333000000001196e-06, 3.3339999999972003e-06, 3.401999999999572e-06, 3.319000000001626e-06]</msg>
<status status="PASS" starttime="20201115 22:04:04.599" endtime="20201115 22:04:04.601"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:04.595" endtime="20201115 22:04:04.602"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:04.604" endtime="20201115 22:04:04.605"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:04.607" endtime="20201115 22:04:04.627"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:04.606" endtime="20201115 22:04:04.627"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:04.602" endtime="20201115 22:04:04.628"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:04.237" endtime="20201115 22:04:04.628"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:02.668" endtime="20201115 22:04:04.628"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:02.667" endtime="20201115 22:04:04.629"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:04:04.631" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:04.639" endtime="20201115 22:04:04.657"></status>
</kw>
<msg timestamp="20201115 22:04:04.658" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:04.638" endtime="20201115 22:04:04.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:04.660" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:04.659" endtime="20201115 22:04:04.660"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:04.661" endtime="20201115 22:04:04.663"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:04.635" endtime="20201115 22:04:04.664"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:04.633" endtime="20201115 22:04:04.664"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:04.671" endtime="20201115 22:04:04.957"></status>
</kw>
<msg timestamp="20201115 22:04:04.960" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022393806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022397361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:04.669" endtime="20201115 22:04:04.960"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:04.968" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022393806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022397361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:04.961" endtime="20201115 22:04:04.968"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:04.969" endtime="20201115 22:04:04.971"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:04.667" endtime="20201115 22:04:04.971"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:04.665" endtime="20201115 22:04:04.972"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:04.976" level="INFO">${RESULT} = [{'time': 0.022397361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5550000000023063e-06, 'source_diff': 3.5550000000023063e-06}, {'time': 0.022545375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:04:04.972" endtime="20201115 22:04:04.976"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:04.989" level="INFO">${OVERHEAD} = {'diff': [3.5550000000023063e-06, 3.5559999999983105e-06, 3.554999999998837e-06, 3.5419999999987406e-06, 3.611000000000586e-06, 3.540999999999267e-06, 3.5410000000027364e-06, 3.5419999999987406e-06, 3...</msg>
<status status="PASS" starttime="20201115 22:04:04.977" endtime="20201115 22:04:04.989"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:04.994" level="INFO">NAME: 00-overhead-11-remove</msg>
<status status="PASS" starttime="20201115 22:04:04.993" endtime="20201115 22:04:04.994"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:04.996" level="INFO">VALUE: [3.5550000000023063e-06, 3.5559999999983105e-06, 3.554999999998837e-06, 3.5419999999987406e-06, 3.611000000000586e-06, 3.540999999999267e-06, 3.5410000000027364e-06, 3.5419999999987406e-06, 3.540999999999267e-06, 3.5550000000023063e-06, 3.55600000000178e-06, 3.540999999999267e-06, 3.5279999999991707e-06, 3.611000000000586e-06, 3.611000000000586e-06, 3.57000000000135e-06, 3.554999999998837e-06, 3.5419999999987406e-06, 3.5559999999983105e-06, 3.54200000000221e-06, 3.52800000000264e-06, 3.54200000000221e-06, 3.5139999999996008e-06, 3.57000000000135e-06, 3.5419999999987406e-06, 3.54200000000221e-06, 3.5139999999996008e-06, 3.52800000000264e-06, 3.5559999999983105e-06, 3.54200000000221e-06, 3.625000000000156e-06, 3.500000000000031e-06, 3.5559999999983105e-06, 3.54200000000221e-06, 3.5419999999987406e-06, 3.5690000000018762e-06, 3.5419999999987406e-06, 3.5419999999987406e-06, 3.554999999998837e-06, 3.5139999999996008e-06, 3.5839999999974503e-06, 3.500000000000031e-06, 3.5699999999978804e-06, 3.55600000000178e-06, 3.554999999998837e-06, 3.5550000000023063e-06, 3.625000000000156e-06, 3.5550000000023063e-06, 3.500000000000031e-06, 3.5419999999987406e-06]</msg>
<status status="PASS" starttime="20201115 22:04:04.995" endtime="20201115 22:04:04.997"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:04.990" endtime="20201115 22:04:04.997"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:04.999" endtime="20201115 22:04:05.001"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:05.003" endtime="20201115 22:04:05.022"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:05.001" endtime="20201115 22:04:05.023"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:04.998" endtime="20201115 22:04:05.023"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:04.631" endtime="20201115 22:04:05.024"></status>
</kw>
<msg timestamp="20201115 22:04:05.024" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:05.034" endtime="20201115 22:04:05.051"></status>
</kw>
<msg timestamp="20201115 22:04:05.052" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:05.032" endtime="20201115 22:04:05.052"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:05.055" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:05.053" endtime="20201115 22:04:05.055"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:05.056" endtime="20201115 22:04:05.058"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:05.029" endtime="20201115 22:04:05.058"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:05.027" endtime="20201115 22:04:05.059"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:05.065" endtime="20201115 22:04:05.352"></status>
</kw>
<msg timestamp="20201115 22:04:05.355" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021354194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021357736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:05.063" endtime="20201115 22:04:05.355"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:05.363" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021354194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021357736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:05.356" endtime="20201115 22:04:05.363"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:05.364" endtime="20201115 22:04:05.366"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:05.061" endtime="20201115 22:04:05.366"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:05.059" endtime="20201115 22:04:05.367"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:05.371" level="INFO">${RESULT} = [{'time': 0.021357736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5419999999987406e-06, 'source_diff': 3.5419999999987406e-06}, {'time': 0.021504097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:04:05.368" endtime="20201115 22:04:05.371"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:05.384" level="INFO">${OVERHEAD} = {'diff': [3.5419999999987406e-06, 3.472000000000891e-06, 3.5559999999983105e-06, 3.554999999998837e-06, 3.52800000000264e-06, 3.5419999999987406e-06, 3.55600000000178e-06, 3.54200000000221e-06, 3.5419...</msg>
<status status="PASS" starttime="20201115 22:04:05.372" endtime="20201115 22:04:05.385"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:05.389" level="INFO">NAME: 00-overhead-11-remove</msg>
<status status="PASS" starttime="20201115 22:04:05.388" endtime="20201115 22:04:05.389"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:05.391" level="INFO">VALUE: [3.5419999999987406e-06, 3.472000000000891e-06, 3.5559999999983105e-06, 3.554999999998837e-06, 3.52800000000264e-06, 3.5419999999987406e-06, 3.55600000000178e-06, 3.54200000000221e-06, 3.5419999999987406e-06, 3.55600000000178e-06, 3.5550000000023063e-06, 3.625000000000156e-06, 3.5559999999983105e-06, 3.540999999999267e-06, 3.554999999998837e-06, 3.540999999999267e-06, 3.5279999999991707e-06, 3.597000000001016e-06, 3.5419999999987406e-06, 3.5559999999983105e-06, 3.540999999999267e-06, 3.55600000000178e-06, 3.5139999999996008e-06, 3.5270000000031665e-06, 3.5279999999991707e-06, 3.55600000000178e-06, 3.5419999999987406e-06, 3.554999999998837e-06, 3.625000000000156e-06, 3.5419999999987406e-06, 3.5419999999987406e-06, 3.5279999999991707e-06, 3.54200000000221e-06, 3.52800000000264e-06, 3.5410000000027364e-06, 3.54200000000221e-06, 3.5840000000009198e-06, 3.5419999999987406e-06, 3.5559999999983105e-06, 3.5419999999987406e-06, 3.5559999999983105e-06, 3.52800000000264e-06, 3.5550000000023063e-06, 3.540999999999267e-06, 3.554999999998837e-06, 3.54200000000221e-06, 3.5419999999987406e-06, 3.540999999999267e-06, 3.5829999999979767e-06, 3.54200000000221e-06]</msg>
<status status="PASS" starttime="20201115 22:04:05.390" endtime="20201115 22:04:05.392"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:05.385" endtime="20201115 22:04:05.392"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:05.395" endtime="20201115 22:04:05.396"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:05.398" endtime="20201115 22:04:05.418"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:05.397" endtime="20201115 22:04:05.418"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:05.393" endtime="20201115 22:04:05.419"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:05.024" endtime="20201115 22:04:05.419"></status>
</kw>
<msg timestamp="20201115 22:04:05.419" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:05.428" endtime="20201115 22:04:05.445"></status>
</kw>
<msg timestamp="20201115 22:04:05.445" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:05.427" endtime="20201115 22:04:05.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:05.448" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:05.446" endtime="20201115 22:04:05.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:05.449" endtime="20201115 22:04:05.450"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:05.424" endtime="20201115 22:04:05.451"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:05.422" endtime="20201115 22:04:05.451"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:05.458" endtime="20201115 22:04:05.744"></status>
</kw>
<msg timestamp="20201115 22:04:05.747" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021395028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021398569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:05.456" endtime="20201115 22:04:05.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:05.755" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021395028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021398569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:05.748" endtime="20201115 22:04:05.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:05.757" endtime="20201115 22:04:05.758"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:05.454" endtime="20201115 22:04:05.759"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:05.452" endtime="20201115 22:04:05.759"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:05.763" level="INFO">${RESULT} = [{'time': 0.021398569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.540999999999267e-06, 'source_diff': 3.540999999999267e-06}, {'time': 0.021543431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:05.760" endtime="20201115 22:04:05.763"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:05.777" level="INFO">${OVERHEAD} = {'diff': [3.540999999999267e-06, 3.5559999999983105e-06, 3.540999999999267e-06, 3.54200000000221e-06, 3.5139999999996008e-06, 3.5139999999996008e-06, 3.55600000000178e-06, 3.540999999999267e-06, 3.556...</msg>
<status status="PASS" starttime="20201115 22:04:05.764" endtime="20201115 22:04:05.777"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:05.781" level="INFO">NAME: 00-overhead-11-remove</msg>
<status status="PASS" starttime="20201115 22:04:05.780" endtime="20201115 22:04:05.782"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:05.784" level="INFO">VALUE: [3.540999999999267e-06, 3.5559999999983105e-06, 3.540999999999267e-06, 3.54200000000221e-06, 3.5139999999996008e-06, 3.5139999999996008e-06, 3.55600000000178e-06, 3.540999999999267e-06, 3.55600000000178e-06, 3.526999999999697e-06, 3.611000000000586e-06, 3.500000000000031e-06, 3.5279999999991707e-06, 3.55600000000178e-06, 3.5550000000023063e-06, 3.55600000000178e-06, 3.5279999999991707e-06, 3.5139999999996008e-06, 3.500000000000031e-06, 3.500000000000031e-06, 3.5559999999983105e-06, 3.55600000000178e-06, 3.5840000000009198e-06, 3.554999999998837e-06, 3.611000000000586e-06, 3.540999999999267e-06, 3.54200000000221e-06, 3.5410000000027364e-06, 3.5689999999984068e-06, 3.5550000000023063e-06, 3.5419999999987406e-06, 3.540999999999267e-06, 3.526999999999697e-06, 3.554999999998837e-06, 3.5419999999987406e-06, 3.5410000000027364e-06, 3.55600000000178e-06, 3.500000000000031e-06, 3.5139999999996008e-06, 3.5279999999991707e-06, 3.554999999998837e-06, 3.5279999999991707e-06, 3.4730000000003647e-06, 3.554999999998837e-06, 3.55600000000178e-06, 3.5419999999987406e-06, 3.5419999999987406e-06, 3.5279999999991707e-06, 3.5699999999978804e-06, 3.5559999999983105e-06]</msg>
<status status="PASS" starttime="20201115 22:04:05.782" endtime="20201115 22:04:05.784"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:05.778" endtime="20201115 22:04:05.785"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:05.787" endtime="20201115 22:04:05.788"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:05.790" endtime="20201115 22:04:05.810"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:05.789" endtime="20201115 22:04:05.811"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:05.785" endtime="20201115 22:04:05.811"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:05.420" endtime="20201115 22:04:05.811"></status>
</kw>
<msg timestamp="20201115 22:04:05.812" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:05.820" endtime="20201115 22:04:05.838"></status>
</kw>
<msg timestamp="20201115 22:04:05.839" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:05.819" endtime="20201115 22:04:05.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:05.841" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:05.840" endtime="20201115 22:04:05.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:05.842" endtime="20201115 22:04:05.844"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:05.816" endtime="20201115 22:04:05.844"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:05.814" endtime="20201115 22:04:05.844"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:05.851" endtime="20201115 22:04:06.138"></status>
</kw>
<msg timestamp="20201115 22:04:06.141" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020971847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020975389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:05.850" endtime="20201115 22:04:06.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:06.149" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020971847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020975389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:06.142" endtime="20201115 22:04:06.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:06.151" endtime="20201115 22:04:06.152"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:05.847" endtime="20201115 22:04:06.153"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:05.845" endtime="20201115 22:04:06.153"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:06.157" level="INFO">${RESULT} = [{'time': 0.020975389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.54200000000221e-06, 'source_diff': 3.54200000000221e-06}, {'time': 0.021122264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:04:06.154" endtime="20201115 22:04:06.158"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:06.171" level="INFO">${OVERHEAD} = {'diff': [3.54200000000221e-06, 3.55600000000178e-06, 3.55600000000178e-06, 3.5419999999987406e-06, 3.540999999999267e-06, 3.52800000000264e-06, 3.5559999999983105e-06, 3.540999999999267e-06, 3.569000...</msg>
<status status="PASS" starttime="20201115 22:04:06.158" endtime="20201115 22:04:06.171"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:06.175" level="INFO">NAME: 00-overhead-11-remove</msg>
<status status="PASS" starttime="20201115 22:04:06.174" endtime="20201115 22:04:06.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:06.178" level="INFO">VALUE: [3.54200000000221e-06, 3.55600000000178e-06, 3.55600000000178e-06, 3.5419999999987406e-06, 3.540999999999267e-06, 3.52800000000264e-06, 3.5559999999983105e-06, 3.540999999999267e-06, 3.5690000000018762e-06, 3.5559999999983105e-06, 3.54200000000221e-06, 3.55600000000178e-06, 3.540999999999267e-06, 3.5419999999987406e-06, 3.5419999999987406e-06, 3.500000000000031e-06, 3.540999999999267e-06, 3.5559999999983105e-06, 3.540999999999267e-06, 3.5689999999984068e-06, 3.5419999999987406e-06, 3.5699999999978804e-06, 3.5550000000023063e-06, 3.540999999999267e-06, 3.5419999999987406e-06, 3.54200000000221e-06, 3.5559999999983105e-06, 3.5139999999996008e-06, 3.5419999999987406e-06, 3.5419999999987406e-06, 3.55600000000178e-06, 3.55600000000178e-06, 3.500000000000031e-06, 3.625000000000156e-06, 3.500000000000031e-06, 3.554999999998837e-06, 3.55600000000178e-06, 3.55600000000178e-06, 3.5279999999991707e-06, 3.5689999999984068e-06, 3.554999999998837e-06, 3.5559999999983105e-06, 3.5419999999987406e-06, 3.458000000001321e-06, 3.5699999999978804e-06, 3.54200000000221e-06, 3.486000000000461e-06, 3.554999999998837e-06, 3.540999999999267e-06, 3.57000000000135e-06]</msg>
<status status="PASS" starttime="20201115 22:04:06.176" endtime="20201115 22:04:06.185"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:06.172" endtime="20201115 22:04:06.186"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:06.188" endtime="20201115 22:04:06.190"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:06.192" endtime="20201115 22:04:06.211"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:06.190" endtime="20201115 22:04:06.212"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:06.187" endtime="20201115 22:04:06.212"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:05.812" endtime="20201115 22:04:06.213"></status>
</kw>
<msg timestamp="20201115 22:04:06.213" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:06.222" endtime="20201115 22:04:06.239"></status>
</kw>
<msg timestamp="20201115 22:04:06.239" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:06.220" endtime="20201115 22:04:06.239"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:06.242" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:06.240" endtime="20201115 22:04:06.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:06.243" endtime="20201115 22:04:06.244"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:06.218" endtime="20201115 22:04:06.245"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:06.215" endtime="20201115 22:04:06.245"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:06.252" endtime="20201115 22:04:06.537"></status>
</kw>
<msg timestamp="20201115 22:04:06.540" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020058611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020062194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:06.250" endtime="20201115 22:04:06.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:06.548" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020058611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020062194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:06.541" endtime="20201115 22:04:06.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:06.550" endtime="20201115 22:04:06.551"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:06.248" endtime="20201115 22:04:06.552"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:06.246" endtime="20201115 22:04:06.552"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:06.556" level="INFO">${RESULT} = [{'time': 0.020062194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5829999999979767e-06, 'source_diff': 3.5829999999979767e-06}, {'time': 0.020208083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:04:06.553" endtime="20201115 22:04:06.556"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:06.570" level="INFO">${OVERHEAD} = {'diff': [3.5829999999979767e-06, 3.5410000000027364e-06, 3.5550000000023063e-06, 3.625000000000156e-06, 3.540999999999267e-06, 3.5690000000018762e-06, 3.5689999999984068e-06, 3.486000000000461e-06, 3...</msg>
<status status="PASS" starttime="20201115 22:04:06.557" endtime="20201115 22:04:06.570"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:06.574" level="INFO">NAME: 00-overhead-11-remove</msg>
<status status="PASS" starttime="20201115 22:04:06.573" endtime="20201115 22:04:06.575"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:06.577" level="INFO">VALUE: [3.5829999999979767e-06, 3.5410000000027364e-06, 3.5550000000023063e-06, 3.625000000000156e-06, 3.540999999999267e-06, 3.5690000000018762e-06, 3.5689999999984068e-06, 3.486000000000461e-06, 3.57000000000135e-06, 3.55600000000178e-06, 3.5279999999991707e-06, 3.55600000000178e-06, 3.5559999999983105e-06, 3.5279999999991707e-06, 3.500000000000031e-06, 3.540999999999267e-06, 3.540999999999267e-06, 3.4859999999969915e-06, 3.5419999999987406e-06, 3.5279999999991707e-06, 3.540999999999267e-06, 3.5279999999991707e-06, 3.486000000000461e-06, 3.55600000000178e-06, 3.540999999999267e-06, 3.5279999999991707e-06, 3.5550000000023063e-06, 3.540999999999267e-06, 3.500000000000031e-06, 3.486000000000461e-06, 3.5699999999978804e-06, 3.625000000000156e-06, 3.54200000000221e-06, 3.5279999999991707e-06, 3.5419999999987406e-06, 3.5419999999987406e-06, 3.55600000000178e-06, 3.486000000000461e-06, 3.54200000000221e-06, 3.54200000000221e-06, 3.5559999999983105e-06, 3.57000000000135e-06, 3.540999999999267e-06, 3.5559999999983105e-06, 3.500000000000031e-06, 3.5279999999991707e-06, 3.5840000000009198e-06, 3.625000000000156e-06, 3.5139999999996008e-06, 3.4579999999978517e-06]</msg>
<status status="PASS" starttime="20201115 22:04:06.575" endtime="20201115 22:04:06.578"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:06.571" endtime="20201115 22:04:06.578"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:06.580" endtime="20201115 22:04:06.582"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:06.584" endtime="20201115 22:04:06.603"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:06.582" endtime="20201115 22:04:06.604"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:06.579" endtime="20201115 22:04:06.604"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:06.213" endtime="20201115 22:04:06.605"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:04.630" endtime="20201115 22:04:06.605"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:04.629" endtime="20201115 22:04:06.605"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:04:06.607" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:06.616" endtime="20201115 22:04:06.632"></status>
</kw>
<msg timestamp="20201115 22:04:06.633" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:06.614" endtime="20201115 22:04:06.633"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:06.635" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:06.634" endtime="20201115 22:04:06.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:06.636" endtime="20201115 22:04:06.638"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:06.612" endtime="20201115 22:04:06.639"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:06.610" endtime="20201115 22:04:06.639"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:06.645" endtime="20201115 22:04:06.932"></status>
</kw>
<msg timestamp="20201115 22:04:06.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022886917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022890694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:06.644" endtime="20201115 22:04:06.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:06.943" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022886917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022890694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:06.937" endtime="20201115 22:04:06.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:06.945" endtime="20201115 22:04:06.946"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:06.641" endtime="20201115 22:04:06.947"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:06.640" endtime="20201115 22:04:06.947"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:06.951" level="INFO">${RESULT} = [{'time': 0.022890694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.776999999999947e-06, 'source_diff': 3.776999999999947e-06}, {'time': 0.023048042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:06.948" endtime="20201115 22:04:06.952"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:06.965" level="INFO">${OVERHEAD} = {'diff': [3.776999999999947e-06, 3.750000000000281e-06, 3.750000000000281e-06, 3.763999999999851e-06, 3.7219999999976716e-06, 3.763999999999851e-06, 3.750000000000281e-06, 3.695000000001475e-06, 3.763...</msg>
<status status="PASS" starttime="20201115 22:04:06.952" endtime="20201115 22:04:06.965"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:06.969" level="INFO">NAME: 00-overhead-12-remove</msg>
<status status="PASS" starttime="20201115 22:04:06.968" endtime="20201115 22:04:06.970"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:06.972" level="INFO">VALUE: [3.776999999999947e-06, 3.750000000000281e-06, 3.750000000000281e-06, 3.763999999999851e-06, 3.7219999999976716e-06, 3.763999999999851e-06, 3.750000000000281e-06, 3.695000000001475e-06, 3.763999999999851e-06, 3.77800000000289e-06, 3.763999999999851e-06, 3.763999999999851e-06, 3.763999999999851e-06, 3.763999999999851e-06, 3.736000000000711e-06, 3.7499999999968114e-06, 3.7359999999972415e-06, 3.763999999999851e-06, 3.750000000000281e-06, 3.763000000000377e-06, 3.750000000000281e-06, 3.750000000000281e-06, 3.7779999999994207e-06, 3.763999999999851e-06, 3.763999999999851e-06, 3.7499999999968114e-06, 3.763999999999851e-06, 3.763999999999851e-06, 3.7779999999994207e-06, 3.7919999999989906e-06, 3.7779999999994207e-06, 3.763999999999851e-06, 3.763999999999851e-06, 3.750000000000281e-06, 3.79200000000246e-06, 3.763999999999851e-06, 3.750000000000281e-06, 3.7779999999994207e-06, 3.763999999999851e-06, 3.763999999999851e-06, 3.7219999999976716e-06, 3.736000000000711e-06, 3.763999999999851e-06, 3.832999999998227e-06, 3.763999999999851e-06, 3.750000000000281e-06, 3.7779999999994207e-06, 3.750000000000281e-06, 3.763999999999851e-06, 3.750000000000281e-06]</msg>
<status status="PASS" starttime="20201115 22:04:06.970" endtime="20201115 22:04:06.973"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:06.966" endtime="20201115 22:04:06.973"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:06.976" endtime="20201115 22:04:06.977"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:06.979" endtime="20201115 22:04:06.998"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:06.977" endtime="20201115 22:04:06.999"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:06.974" endtime="20201115 22:04:06.999"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:06.608" endtime="20201115 22:04:07.000"></status>
</kw>
<msg timestamp="20201115 22:04:07.000" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:07.009" endtime="20201115 22:04:07.026"></status>
</kw>
<msg timestamp="20201115 22:04:07.026" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:07.007" endtime="20201115 22:04:07.026"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:07.028" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:07.027" endtime="20201115 22:04:07.029"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:07.030" endtime="20201115 22:04:07.031"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:07.005" endtime="20201115 22:04:07.032"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:07.003" endtime="20201115 22:04:07.032"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:07.039" endtime="20201115 22:04:07.324"></status>
</kw>
<msg timestamp="20201115 22:04:07.327" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020629542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020633236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:07.037" endtime="20201115 22:04:07.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:07.336" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020629542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020633236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:07.328" endtime="20201115 22:04:07.336"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:07.337" endtime="20201115 22:04:07.339"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:07.034" endtime="20201115 22:04:07.339"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:07.033" endtime="20201115 22:04:07.340"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:07.344" level="INFO">${RESULT} = [{'time': 0.020633236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.693999999998532e-06, 'source_diff': 3.693999999998532e-06}, {'time': 0.020791458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:07.340" endtime="20201115 22:04:07.344"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:07.358" level="INFO">${OVERHEAD} = {'diff': [3.693999999998532e-06, 3.763999999999851e-06, 3.763000000000377e-06, 3.763999999999851e-06, 3.750000000000281e-06, 3.77800000000289e-06, 3.7640000000033202e-06, 3.832999999998227e-06, 3.7500...</msg>
<status status="PASS" starttime="20201115 22:04:07.345" endtime="20201115 22:04:07.358"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:07.363" level="INFO">NAME: 00-overhead-12-remove</msg>
<status status="PASS" starttime="20201115 22:04:07.362" endtime="20201115 22:04:07.363"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:07.366" level="INFO">VALUE: [3.693999999998532e-06, 3.763999999999851e-06, 3.763000000000377e-06, 3.763999999999851e-06, 3.750000000000281e-06, 3.77800000000289e-06, 3.7640000000033202e-06, 3.832999999998227e-06, 3.750000000000281e-06, 3.750000000000281e-06, 3.763000000000377e-06, 3.77800000000289e-06, 3.763999999999851e-06, 3.763999999999851e-06, 3.763999999999851e-06, 3.750000000000281e-06, 3.763999999999851e-06, 3.763999999999851e-06, 3.763999999999851e-06, 3.750000000000281e-06, 3.736000000000711e-06, 3.763999999999851e-06, 3.750000000000281e-06, 3.750000000000281e-06, 3.763999999999851e-06, 3.763999999999851e-06, 3.736000000000711e-06, 3.736000000000711e-06, 3.7779999999994207e-06, 3.7779999999994207e-06, 3.763999999999851e-06, 3.750000000000281e-06, 3.79200000000246e-06, 3.750000000000281e-06, 3.750000000000281e-06, 3.763999999999851e-06, 3.763999999999851e-06, 3.7640000000033202e-06, 3.763999999999851e-06, 3.750000000000281e-06, 3.750000000000281e-06, 3.763999999999851e-06, 3.763999999999851e-06, 3.750000000000281e-06, 3.7919999999989906e-06, 3.763999999999851e-06, 3.736000000000711e-06, 3.763999999999851e-06, 3.750000000000281e-06, 3.750000000000281e-06]</msg>
<status status="PASS" starttime="20201115 22:04:07.364" endtime="20201115 22:04:07.366"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:07.359" endtime="20201115 22:04:07.367"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:07.369" endtime="20201115 22:04:07.370"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:07.373" endtime="20201115 22:04:07.392"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:07.371" endtime="20201115 22:04:07.393"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:07.367" endtime="20201115 22:04:07.393"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:07.001" endtime="20201115 22:04:07.393"></status>
</kw>
<msg timestamp="20201115 22:04:07.394" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:07.403" endtime="20201115 22:04:07.419"></status>
</kw>
<msg timestamp="20201115 22:04:07.419" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:07.401" endtime="20201115 22:04:07.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:07.422" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:07.420" endtime="20201115 22:04:07.422"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:07.423" endtime="20201115 22:04:07.425"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:07.399" endtime="20201115 22:04:07.425"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:07.396" endtime="20201115 22:04:07.426"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:07.433" endtime="20201115 22:04:07.739"></status>
</kw>
<msg timestamp="20201115 22:04:07.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021146472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02115025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:04:07.431" endtime="20201115 22:04:07.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:07.751" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021146472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02115025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:04:07.744" endtime="20201115 22:04:07.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:07.752" endtime="20201115 22:04:07.754"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:07.428" endtime="20201115 22:04:07.754"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:07.426" endtime="20201115 22:04:07.755"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:07.759" level="INFO">${RESULT} = [{'time': 0.02115025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7779999999994207e-06, 'source_diff': 3.7779999999994207e-06}, {'time': 0.021309236, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 22:04:07.756" endtime="20201115 22:04:07.760"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:07.773" level="INFO">${OVERHEAD} = {'diff': [3.7779999999994207e-06, 3.7359999999972415e-06, 3.7779999999994207e-06, 3.750000000000281e-06, 3.763999999999851e-06, 3.763999999999851e-06, 3.8050000000025563e-06, 3.763000000000377e-06, 3....</msg>
<status status="PASS" starttime="20201115 22:04:07.760" endtime="20201115 22:04:07.774"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:07.778" level="INFO">NAME: 00-overhead-12-remove</msg>
<status status="PASS" starttime="20201115 22:04:07.777" endtime="20201115 22:04:07.778"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:07.781" level="INFO">VALUE: [3.7779999999994207e-06, 3.7359999999972415e-06, 3.7779999999994207e-06, 3.750000000000281e-06, 3.763999999999851e-06, 3.763999999999851e-06, 3.8050000000025563e-06, 3.763000000000377e-06, 3.763999999999851e-06, 3.7370000000001846e-06, 3.763999999999851e-06, 3.750000000000281e-06, 3.763999999999851e-06, 3.763999999999851e-06, 3.776999999999947e-06, 3.693999999998532e-06, 3.7779999999994207e-06, 3.776999999999947e-06, 3.7230000000006147e-06, 3.722000000001141e-06, 3.722000000001141e-06, 3.763000000000377e-06, 3.7079999999981017e-06, 3.763999999999851e-06, 3.763999999999851e-06, 3.776999999999947e-06, 3.750000000000281e-06, 3.7219999999976716e-06, 3.750000000000281e-06, 3.763999999999851e-06, 3.750000000000281e-06, 3.763000000000377e-06, 3.763999999999851e-06, 3.8339999999977e-06, 3.763999999999851e-06, 3.750000000000281e-06, 3.736000000000711e-06, 3.750000000000281e-06, 3.7640000000033202e-06, 3.750000000000281e-06, 3.763000000000377e-06, 3.7779999999994207e-06, 3.763000000000377e-06, 3.7370000000001846e-06, 3.80600000000203e-06, 3.750000000000281e-06, 3.819000000002126e-06, 3.736000000000711e-06, 3.763999999999851e-06, 3.8200000000016e-06]</msg>
<status status="PASS" starttime="20201115 22:04:07.779" endtime="20201115 22:04:07.781"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:07.774" endtime="20201115 22:04:07.782"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:07.784" endtime="20201115 22:04:07.785"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:07.788" endtime="20201115 22:04:07.807"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:07.786" endtime="20201115 22:04:07.808"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:07.782" endtime="20201115 22:04:07.808"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:07.394" endtime="20201115 22:04:07.808"></status>
</kw>
<msg timestamp="20201115 22:04:07.809" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:07.818" endtime="20201115 22:04:07.837"></status>
</kw>
<msg timestamp="20201115 22:04:07.837" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:07.816" endtime="20201115 22:04:07.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:07.840" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:07.839" endtime="20201115 22:04:07.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:07.841" endtime="20201115 22:04:07.843"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:07.814" endtime="20201115 22:04:07.843"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:07.811" endtime="20201115 22:04:07.844"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:07.851" endtime="20201115 22:04:08.138"></status>
</kw>
<msg timestamp="20201115 22:04:08.141" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020758389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020762194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:07.849" endtime="20201115 22:04:08.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:08.149" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020758389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020762194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:08.142" endtime="20201115 22:04:08.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:08.151" endtime="20201115 22:04:08.153"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:07.846" endtime="20201115 22:04:08.153"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:07.844" endtime="20201115 22:04:08.154"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:08.158" level="INFO">${RESULT} = [{'time': 0.020762194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.8050000000025563e-06, 'source_diff': 3.8050000000025563e-06}, {'time': 0.020921444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:04:08.155" endtime="20201115 22:04:08.158"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:08.172" level="INFO">${OVERHEAD} = {'diff': [3.8050000000025563e-06, 3.736000000000711e-06, 3.750000000000281e-06, 3.750000000000281e-06, 3.750000000000281e-06, 3.750000000000281e-06, 3.7219999999976716e-06, 3.763999999999851e-06, 3.76...</msg>
<status status="PASS" starttime="20201115 22:04:08.159" endtime="20201115 22:04:08.172"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:08.177" level="INFO">NAME: 00-overhead-12-remove</msg>
<status status="PASS" starttime="20201115 22:04:08.176" endtime="20201115 22:04:08.177"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:08.179" level="INFO">VALUE: [3.8050000000025563e-06, 3.736000000000711e-06, 3.750000000000281e-06, 3.750000000000281e-06, 3.750000000000281e-06, 3.750000000000281e-06, 3.7219999999976716e-06, 3.763999999999851e-06, 3.763999999999851e-06, 3.750000000000281e-06, 3.750000000000281e-06, 3.7640000000033202e-06, 3.763999999999851e-06, 3.763999999999851e-06, 3.832999999998227e-06, 3.8059999999985605e-06, 3.7779999999994207e-06, 3.750000000000281e-06, 3.750000000000281e-06, 3.750000000000281e-06, 3.750000000000281e-06, 3.763999999999851e-06, 3.763999999999851e-06, 3.763999999999851e-06, 3.736000000000711e-06, 3.763999999999851e-06, 3.7779999999994207e-06, 3.763999999999851e-06, 3.763000000000377e-06, 3.763999999999851e-06, 3.763999999999851e-06, 3.736000000000711e-06, 3.80600000000203e-06, 3.750000000000281e-06, 3.776999999999947e-06, 3.804999999999087e-06, 3.750000000000281e-06, 3.7219999999976716e-06, 3.722000000001141e-06, 3.832999999998227e-06, 3.763999999999851e-06, 3.736000000000711e-06, 3.708000000001571e-06, 3.750000000000281e-06, 3.736000000000711e-06, 3.736000000000711e-06, 3.750000000000281e-06, 3.750000000000281e-06, 3.763000000000377e-06, 3.763999999999851e-06]</msg>
<status status="PASS" starttime="20201115 22:04:08.178" endtime="20201115 22:04:08.180"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:08.173" endtime="20201115 22:04:08.180"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:08.183" endtime="20201115 22:04:08.184"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:08.186" endtime="20201115 22:04:08.206"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:08.185" endtime="20201115 22:04:08.206"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:08.181" endtime="20201115 22:04:08.207"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:07.809" endtime="20201115 22:04:08.207"></status>
</kw>
<msg timestamp="20201115 22:04:08.207" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:08.217" endtime="20201115 22:04:08.234"></status>
</kw>
<msg timestamp="20201115 22:04:08.235" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:08.215" endtime="20201115 22:04:08.235"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:08.237" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:08.236" endtime="20201115 22:04:08.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:08.239" endtime="20201115 22:04:08.240"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:08.212" endtime="20201115 22:04:08.241"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:08.210" endtime="20201115 22:04:08.241"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:08.248" endtime="20201115 22:04:08.534"></status>
</kw>
<msg timestamp="20201115 22:04:08.537" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021547014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021550764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:08.246" endtime="20201115 22:04:08.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:08.546" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021547014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021550764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:08.539" endtime="20201115 22:04:08.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:08.547" endtime="20201115 22:04:08.549"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:08.244" endtime="20201115 22:04:08.549"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:08.242" endtime="20201115 22:04:08.550"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:08.554" level="INFO">${RESULT} = [{'time': 0.021550764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.750000000000281e-06, 'source_diff': 3.750000000000281e-06}, {'time': 0.021708653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:08.551" endtime="20201115 22:04:08.554"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:08.568" level="INFO">${OVERHEAD} = {'diff': [3.750000000000281e-06, 3.79200000000246e-06, 3.763999999999851e-06, 3.750000000000281e-06, 3.763999999999851e-06, 3.750000000000281e-06, 3.750000000000281e-06, 3.763999999999851e-06, 3.76399...</msg>
<status status="PASS" starttime="20201115 22:04:08.555" endtime="20201115 22:04:08.568"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:08.573" level="INFO">NAME: 00-overhead-12-remove</msg>
<status status="PASS" starttime="20201115 22:04:08.572" endtime="20201115 22:04:08.573"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:08.575" level="INFO">VALUE: [3.750000000000281e-06, 3.79200000000246e-06, 3.763999999999851e-06, 3.750000000000281e-06, 3.763999999999851e-06, 3.750000000000281e-06, 3.750000000000281e-06, 3.763999999999851e-06, 3.763999999999851e-06, 3.763999999999851e-06, 3.7910000000029864e-06, 3.763000000000377e-06, 3.763999999999851e-06, 3.722000000001141e-06, 3.763999999999851e-06, 3.763000000000377e-06, 3.7779999999994207e-06, 3.763999999999851e-06, 3.763999999999851e-06, 3.804999999999087e-06, 3.790999999999517e-06, 3.763999999999851e-06, 3.763999999999851e-06, 3.7779999999994207e-06, 3.763999999999851e-06, 3.695000000001475e-06, 3.763999999999851e-06, 3.7779999999994207e-06, 3.736000000000711e-06, 3.763999999999851e-06, 3.763999999999851e-06, 3.7779999999994207e-06, 3.763999999999851e-06, 3.736000000000711e-06, 3.776999999999947e-06, 3.736000000000711e-06, 3.750000000000281e-06, 3.763999999999851e-06, 3.763999999999851e-06, 3.763999999999851e-06, 3.7779999999994207e-06, 3.763999999999851e-06, 3.7779999999994207e-06, 3.736000000000711e-06, 3.750000000000281e-06, 3.763999999999851e-06, 3.776999999999947e-06, 3.722000000001141e-06, 3.722000000001141e-06, 3.763999999999851e-06]</msg>
<status status="PASS" starttime="20201115 22:04:08.574" endtime="20201115 22:04:08.576"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:08.569" endtime="20201115 22:04:08.576"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:08.579" endtime="20201115 22:04:08.580"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:08.582" endtime="20201115 22:04:08.602"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:08.581" endtime="20201115 22:04:08.602"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:08.577" endtime="20201115 22:04:08.603"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:08.208" endtime="20201115 22:04:08.603"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:06.606" endtime="20201115 22:04:08.603"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:06.605" endtime="20201115 22:04:08.603"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:04:08.606" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:08.615" endtime="20201115 22:04:08.635"></status>
</kw>
<msg timestamp="20201115 22:04:08.635" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:08.613" endtime="20201115 22:04:08.635"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:08.638" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:08.636" endtime="20201115 22:04:08.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:08.639" endtime="20201115 22:04:08.641"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:08.611" endtime="20201115 22:04:08.641"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:08.608" endtime="20201115 22:04:08.642"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:08.649" endtime="20201115 22:04:08.937"></status>
</kw>
<msg timestamp="20201115 22:04:08.940" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023869153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023873056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:08.647" endtime="20201115 22:04:08.940"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:08.948" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023869153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023873056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:08.941" endtime="20201115 22:04:08.949"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:08.949" endtime="20201115 22:04:08.951"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:08.644" endtime="20201115 22:04:08.952"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:08.643" endtime="20201115 22:04:08.952"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:08.956" level="INFO">${RESULT} = [{'time': 0.023873056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.902999999999546e-06, 'source_diff': 3.902999999999546e-06}, {'time': 0.024043486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:08.953" endtime="20201115 22:04:08.957"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:08.970" level="INFO">${OVERHEAD} = {'diff': [3.902999999999546e-06, 3.957999999998352e-06, 3.986000000000961e-06, 3.973000000000865e-06, 3.971999999997922e-06, 3.971999999997922e-06, 3.972000000001391e-06, 3.986000000000961e-06, 3.9730...</msg>
<status status="PASS" starttime="20201115 22:04:08.957" endtime="20201115 22:04:08.971"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:08.975" level="INFO">NAME: 00-overhead-13-remove</msg>
<status status="PASS" starttime="20201115 22:04:08.974" endtime="20201115 22:04:08.976"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:08.978" level="INFO">VALUE: [3.902999999999546e-06, 3.957999999998352e-06, 3.986000000000961e-06, 3.973000000000865e-06, 3.971999999997922e-06, 3.971999999997922e-06, 3.972000000001391e-06, 3.986000000000961e-06, 3.973000000000865e-06, 3.972000000001391e-06, 3.971999999997922e-06, 4.000000000000531e-06, 3.957999999998352e-06, 3.987000000000435e-06, 3.987000000000435e-06, 3.902999999999546e-06, 3.957999999998352e-06, 3.986000000000961e-06, 3.986000000000961e-06, 4.000000000000531e-06, 3.986000000000961e-06, 3.945000000001725e-06, 3.971999999997922e-06, 3.973000000000865e-06, 3.958000000001821e-06, 4.000000000000531e-06, 3.9449999999982555e-06, 3.986000000000961e-06, 3.971999999997922e-06, 3.986000000000961e-06, 3.958000000001821e-06, 3.973000000000865e-06, 3.916999999999116e-06, 3.972999999997395e-06, 3.986999999996965e-06, 3.972000000001391e-06, 3.986000000000961e-06, 3.971999999997922e-06, 4.000000000000531e-06, 4.041999999999241e-06, 3.931000000002155e-06, 3.916999999999116e-06, 3.958000000001821e-06, 3.971999999997922e-06, 3.9860000000044304e-06, 3.9859999999974915e-06, 3.972999999997395e-06, 3.973000000004334e-06, 3.9860000000044304e-06, 3.9999999999970615e-06]</msg>
<status status="PASS" starttime="20201115 22:04:08.976" endtime="20201115 22:04:08.978"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:08.971" endtime="20201115 22:04:08.979"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:08.981" endtime="20201115 22:04:08.982"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:08.985" endtime="20201115 22:04:09.004"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:08.983" endtime="20201115 22:04:09.005"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:08.979" endtime="20201115 22:04:09.006"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:08.606" endtime="20201115 22:04:09.006"></status>
</kw>
<msg timestamp="20201115 22:04:09.006" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:09.015" endtime="20201115 22:04:09.034"></status>
</kw>
<msg timestamp="20201115 22:04:09.034" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:09.014" endtime="20201115 22:04:09.034"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:09.037" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:09.035" endtime="20201115 22:04:09.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:09.038" endtime="20201115 22:04:09.040"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:09.011" endtime="20201115 22:04:09.041"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:09.009" endtime="20201115 22:04:09.041"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:09.048" endtime="20201115 22:04:09.335"></status>
</kw>
<msg timestamp="20201115 22:04:09.338" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020927861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020931819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:09.046" endtime="20201115 22:04:09.339"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:09.347" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020927861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020931819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:09.340" endtime="20201115 22:04:09.347"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:09.348" endtime="20201115 22:04:09.349"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:09.043" endtime="20201115 22:04:09.350"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:09.042" endtime="20201115 22:04:09.351"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:09.355" level="INFO">${RESULT} = [{'time': 0.020931819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.958000000001821e-06, 'source_diff': 3.958000000001821e-06}, {'time': 0.021102875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:09.351" endtime="20201115 22:04:09.355"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:09.369" level="INFO">${OVERHEAD} = {'diff': [3.958000000001821e-06, 3.972000000001391e-06, 3.986000000000961e-06, 3.957999999998352e-06, 3.972000000001391e-06, 3.973000000000865e-06, 4.000000000000531e-06, 3.931000000002155e-06, 3.9590...</msg>
<status status="PASS" starttime="20201115 22:04:09.356" endtime="20201115 22:04:09.369"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:09.373" level="INFO">NAME: 00-overhead-13-remove</msg>
<status status="PASS" starttime="20201115 22:04:09.372" endtime="20201115 22:04:09.374"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:09.376" level="INFO">VALUE: [3.958000000001821e-06, 3.972000000001391e-06, 3.986000000000961e-06, 3.957999999998352e-06, 3.972000000001391e-06, 3.973000000000865e-06, 4.000000000000531e-06, 3.931000000002155e-06, 3.959000000001295e-06, 3.986000000000961e-06, 3.971999999997922e-06, 3.986000000000961e-06, 3.957999999998352e-06, 3.957999999998352e-06, 3.957999999998352e-06, 3.986000000000961e-06, 3.973000000000865e-06, 4.02800000000314e-06, 3.971999999997922e-06, 3.9859999999974915e-06, 3.972000000001391e-06, 3.972000000001391e-06, 3.958000000001821e-06, 4.041999999999241e-06, 3.958000000001821e-06, 3.972000000001391e-06, 3.972000000001391e-06, 3.986000000000961e-06, 3.986000000000961e-06, 3.986000000000961e-06, 3.971999999997922e-06, 4.000000000000531e-06, 3.915999999999642e-06, 3.9859999999974915e-06, 3.972000000001391e-06, 3.986000000000961e-06, 3.959000000001295e-06, 3.959000000001295e-06, 3.972999999997395e-06, 3.972000000001391e-06, 3.986000000000961e-06, 3.972000000001391e-06, 3.971999999997922e-06, 3.9859999999974915e-06, 3.971999999997922e-06, 3.958999999997825e-06, 3.958000000001821e-06, 3.958000000001821e-06, 3.903000000003015e-06, 3.971999999997922e-06]</msg>
<status status="PASS" starttime="20201115 22:04:09.374" endtime="20201115 22:04:09.376"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:09.370" endtime="20201115 22:04:09.377"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:09.379" endtime="20201115 22:04:09.381"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:09.383" endtime="20201115 22:04:09.402"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:09.381" endtime="20201115 22:04:09.403"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:09.378" endtime="20201115 22:04:09.403"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:09.007" endtime="20201115 22:04:09.404"></status>
</kw>
<msg timestamp="20201115 22:04:09.404" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:09.414" endtime="20201115 22:04:09.434"></status>
</kw>
<msg timestamp="20201115 22:04:09.435" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:09.412" endtime="20201115 22:04:09.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:09.437" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:09.436" endtime="20201115 22:04:09.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:09.438" endtime="20201115 22:04:09.440"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:09.409" endtime="20201115 22:04:09.441"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:09.407" endtime="20201115 22:04:09.441"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:09.448" endtime="20201115 22:04:09.735"></status>
</kw>
<msg timestamp="20201115 22:04:09.738" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022305833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022309806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:09.446" endtime="20201115 22:04:09.738"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:09.746" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022305833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022309806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:09.739" endtime="20201115 22:04:09.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:09.748" endtime="20201115 22:04:09.749"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:09.443" endtime="20201115 22:04:09.750"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:09.442" endtime="20201115 22:04:09.750"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:09.754" level="INFO">${RESULT} = [{'time': 0.022309806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.973000000000865e-06, 'source_diff': 3.973000000000865e-06}, {'time': 0.022481222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:09.751" endtime="20201115 22:04:09.755"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:09.768" level="INFO">${OVERHEAD} = {'diff': [3.973000000000865e-06, 3.9859999999974915e-06, 3.972000000001391e-06, 3.9449999999982555e-06, 3.957999999998352e-06, 3.972000000001391e-06, 3.957999999998352e-06, 3.973000000000865e-06, 3.98...</msg>
<status status="PASS" starttime="20201115 22:04:09.756" endtime="20201115 22:04:09.769"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:09.773" level="INFO">NAME: 00-overhead-13-remove</msg>
<status status="PASS" starttime="20201115 22:04:09.772" endtime="20201115 22:04:09.774"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:09.776" level="INFO">VALUE: [3.973000000000865e-06, 3.9859999999974915e-06, 3.972000000001391e-06, 3.9449999999982555e-06, 3.957999999998352e-06, 3.972000000001391e-06, 3.957999999998352e-06, 3.973000000000865e-06, 3.986000000000961e-06, 3.902999999999546e-06, 3.986000000000961e-06, 3.915999999999642e-06, 3.972000000001391e-06, 3.986000000000961e-06, 3.987000000000435e-06, 3.972000000001391e-06, 3.9859999999974915e-06, 3.957999999998352e-06, 3.972000000001391e-06, 3.9859999999974915e-06, 4.000000000000531e-06, 4.014000000000101e-06, 3.986000000000961e-06, 3.972000000001391e-06, 3.986000000000961e-06, 3.987000000000435e-06, 3.972000000001391e-06, 3.972000000001391e-06, 3.929999999999212e-06, 4.000000000000531e-06, 3.9999999999970615e-06, 4.041999999999241e-06, 3.943999999998782e-06, 3.959000000001295e-06, 3.971999999997922e-06, 3.986000000000961e-06, 3.972000000001391e-06, 3.9859999999974915e-06, 3.972000000001391e-06, 3.957999999998352e-06, 3.986000000000961e-06, 3.986000000000961e-06, 3.986000000000961e-06, 4.027999999999671e-06, 3.972000000001391e-06, 3.986000000000961e-06, 3.986000000000961e-06, 3.971999999997922e-06, 3.972000000001391e-06, 3.971999999997922e-06]</msg>
<status status="PASS" starttime="20201115 22:04:09.774" endtime="20201115 22:04:09.776"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:09.769" endtime="20201115 22:04:09.777"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:09.779" endtime="20201115 22:04:09.780"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:09.783" endtime="20201115 22:04:09.802"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:09.781" endtime="20201115 22:04:09.803"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:09.777" endtime="20201115 22:04:09.803"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:09.405" endtime="20201115 22:04:09.804"></status>
</kw>
<msg timestamp="20201115 22:04:09.804" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:09.813" endtime="20201115 22:04:09.832"></status>
</kw>
<msg timestamp="20201115 22:04:09.832" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:09.812" endtime="20201115 22:04:09.832"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:09.835" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:09.833" endtime="20201115 22:04:09.835"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:09.836" endtime="20201115 22:04:09.838"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:09.809" endtime="20201115 22:04:09.838"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:09.807" endtime="20201115 22:04:09.839"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:09.845" endtime="20201115 22:04:10.131"></status>
</kw>
<msg timestamp="20201115 22:04:10.135" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021301069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021305042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:09.844" endtime="20201115 22:04:10.135"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:10.143" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021301069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021305042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:10.136" endtime="20201115 22:04:10.143"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:10.144" endtime="20201115 22:04:10.146"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:09.841" endtime="20201115 22:04:10.146"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:09.839" endtime="20201115 22:04:10.147"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:10.151" level="INFO">${RESULT} = [{'time': 0.021305042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.973000000000865e-06, 'source_diff': 3.973000000000865e-06}, {'time': 0.021479667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:10.148" endtime="20201115 22:04:10.151"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:10.165" level="INFO">${OVERHEAD} = {'diff': [3.973000000000865e-06, 3.973000000000865e-06, 3.973000000000865e-06, 4.000000000000531e-06, 3.986000000000961e-06, 3.972999999997395e-06, 3.958999999997825e-06, 3.915999999999642e-06, 4.0279...</msg>
<status status="PASS" starttime="20201115 22:04:10.152" endtime="20201115 22:04:10.165"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:10.170" level="INFO">NAME: 00-overhead-13-remove</msg>
<status status="PASS" starttime="20201115 22:04:10.169" endtime="20201115 22:04:10.170"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:10.172" level="INFO">VALUE: [3.973000000000865e-06, 3.973000000000865e-06, 3.973000000000865e-06, 4.000000000000531e-06, 3.986000000000961e-06, 3.972999999997395e-06, 3.958999999997825e-06, 3.915999999999642e-06, 4.027999999999671e-06, 3.972000000001391e-06, 3.972000000001391e-06, 3.987000000000435e-06, 3.958000000001821e-06, 4.000000000000531e-06, 3.986000000000961e-06, 3.959000000001295e-06, 3.971999999997922e-06, 3.929999999999212e-06, 3.971999999997922e-06, 3.972000000001391e-06, 3.971999999997922e-06, 3.971999999997922e-06, 3.9859999999974915e-06, 3.9859999999974915e-06, 4.07000000000185e-06, 3.987000000000435e-06, 3.972000000001391e-06, 3.957999999998352e-06, 3.957999999998352e-06, 3.986000000000961e-06, 3.972000000001391e-06, 3.971999999997922e-06, 3.973000000000865e-06, 3.972000000001391e-06, 3.986000000000961e-06, 3.9859999999974915e-06, 3.902000000000072e-06, 3.972000000001391e-06, 3.973000000000865e-06, 3.916999999999116e-06, 3.986000000000961e-06, 3.973000000000865e-06, 4.000000000000531e-06, 3.986000000000961e-06, 3.973000000000865e-06, 3.972000000001391e-06, 4.027000000000197e-06, 3.972000000001391e-06, 3.945000000001725e-06, 3.986000000000961e-06]</msg>
<status status="PASS" starttime="20201115 22:04:10.171" endtime="20201115 22:04:10.173"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:10.166" endtime="20201115 22:04:10.173"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:10.176" endtime="20201115 22:04:10.178"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:10.180" endtime="20201115 22:04:10.199"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:10.178" endtime="20201115 22:04:10.200"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:10.174" endtime="20201115 22:04:10.200"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:09.805" endtime="20201115 22:04:10.201"></status>
</kw>
<msg timestamp="20201115 22:04:10.201" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:10.210" endtime="20201115 22:04:10.230"></status>
</kw>
<msg timestamp="20201115 22:04:10.230" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:10.209" endtime="20201115 22:04:10.230"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:10.233" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:10.231" endtime="20201115 22:04:10.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:10.234" endtime="20201115 22:04:10.236"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:10.206" endtime="20201115 22:04:10.236"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:10.204" endtime="20201115 22:04:10.237"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:10.243" endtime="20201115 22:04:10.530"></status>
</kw>
<msg timestamp="20201115 22:04:10.533" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020749111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020753111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:10.242" endtime="20201115 22:04:10.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:10.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020749111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020753111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:10.534" endtime="20201115 22:04:10.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:10.543" endtime="20201115 22:04:10.544"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:10.239" endtime="20201115 22:04:10.545"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:10.237" endtime="20201115 22:04:10.545"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:10.550" level="INFO">${RESULT} = [{'time': 0.020753111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.000000000000531e-06, 'source_diff': 4.000000000000531e-06}, {'time': 0.020926014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:10.546" endtime="20201115 22:04:10.550"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:10.563" level="INFO">${OVERHEAD} = {'diff': [4.000000000000531e-06, 3.986000000000961e-06, 3.972999999997395e-06, 3.958999999997825e-06, 3.9859999999974915e-06, 3.972000000001391e-06, 3.959000000001295e-06, 3.958000000001821e-06, 3.972...</msg>
<status status="PASS" starttime="20201115 22:04:10.551" endtime="20201115 22:04:10.564"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:10.568" level="INFO">NAME: 00-overhead-13-remove</msg>
<status status="PASS" starttime="20201115 22:04:10.567" endtime="20201115 22:04:10.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:10.571" level="INFO">VALUE: [4.000000000000531e-06, 3.986000000000961e-06, 3.972999999997395e-06, 3.958999999997825e-06, 3.9859999999974915e-06, 3.972000000001391e-06, 3.959000000001295e-06, 3.958000000001821e-06, 3.972000000001391e-06, 3.9999999999970615e-06, 3.9859999999974915e-06, 3.986000000000961e-06, 3.972000000001391e-06, 4.027999999999671e-06, 3.971999999997922e-06, 3.986000000000961e-06, 3.986000000000961e-06, 3.986000000000961e-06, 3.972000000001391e-06, 3.973000000000865e-06, 3.972000000001391e-06, 3.973000000000865e-06, 3.972999999997395e-06, 3.958999999997825e-06, 3.972000000001391e-06, 3.972000000001391e-06, 4.027999999999671e-06, 4.000000000000531e-06, 4.000000000000531e-06, 3.972000000001391e-06, 3.972000000001391e-06, 3.986000000000961e-06, 3.971999999997922e-06, 3.972000000001391e-06, 4.000000000000531e-06, 4.000000000000531e-06, 3.9309999999986855e-06, 3.958000000001821e-06, 3.986000000000961e-06, 3.957999999998352e-06, 3.957999999998352e-06, 3.971999999997922e-06, 4.014000000000101e-06, 3.972999999997395e-06, 3.957999999998352e-06, 3.972999999997395e-06, 3.959000000001295e-06, 3.972000000001391e-06, 3.986000000000961e-06, 4.02800000000314e-06]</msg>
<status status="PASS" starttime="20201115 22:04:10.569" endtime="20201115 22:04:10.572"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:10.564" endtime="20201115 22:04:10.572"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:10.575" endtime="20201115 22:04:10.576"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:10.578" endtime="20201115 22:04:10.598"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:10.577" endtime="20201115 22:04:10.598"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:10.573" endtime="20201115 22:04:10.599"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:10.201" endtime="20201115 22:04:10.599"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:08.605" endtime="20201115 22:04:10.599"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:08.604" endtime="20201115 22:04:10.600"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:04:10.602" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:10.611" endtime="20201115 22:04:10.630"></status>
</kw>
<msg timestamp="20201115 22:04:10.631" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:10.609" endtime="20201115 22:04:10.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:10.633" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:10.632" endtime="20201115 22:04:10.634"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:10.634" endtime="20201115 22:04:10.636"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:10.607" endtime="20201115 22:04:10.637"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:10.604" endtime="20201115 22:04:10.637"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:10.644" endtime="20201115 22:04:10.932"></status>
</kw>
<msg timestamp="20201115 22:04:10.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023262292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023266472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:10.642" endtime="20201115 22:04:10.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:10.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023262292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023266472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:10.936" endtime="20201115 22:04:10.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:10.945" endtime="20201115 22:04:10.946"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:10.640" endtime="20201115 22:04:10.947"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:10.638" endtime="20201115 22:04:10.947"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:10.952" level="INFO">${RESULT} = [{'time': 0.023266472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.179999999999462e-06, 'source_diff': 4.179999999999462e-06}, {'time': 0.023452069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:10.948" endtime="20201115 22:04:10.952"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:10.966" level="INFO">${OVERHEAD} = {'diff': [4.179999999999462e-06, 4.179999999999462e-06, 4.1809999999989356e-06, 4.193999999999032e-06, 4.179999999999462e-06, 4.193999999999032e-06, 4.250000000000781e-06, 4.193999999999032e-06, 4.194...</msg>
<status status="PASS" starttime="20201115 22:04:10.953" endtime="20201115 22:04:10.966"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:10.970" level="INFO">NAME: 00-overhead-14-remove</msg>
<status status="PASS" starttime="20201115 22:04:10.969" endtime="20201115 22:04:10.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:10.974" level="INFO">VALUE: [4.179999999999462e-06, 4.179999999999462e-06, 4.1809999999989356e-06, 4.193999999999032e-06, 4.179999999999462e-06, 4.193999999999032e-06, 4.250000000000781e-06, 4.193999999999032e-06, 4.1949999999985055e-06, 4.222000000001641e-06, 4.1809999999989356e-06, 4.193999999999032e-06, 4.193999999999032e-06, 4.1809999999989356e-06, 4.152999999999796e-06, 4.179999999999462e-06, 4.193999999999032e-06, 4.194000000002501e-06, 4.1809999999989356e-06, 4.208000000002071e-06, 4.207999999998602e-06, 4.181000000002405e-06, 4.181000000002405e-06, 4.207999999998602e-06, 4.207999999998602e-06, 4.179999999999462e-06, 4.194000000002501e-06, 4.194000000002501e-06, 4.194000000002501e-06, 4.1949999999985055e-06, 4.208999999998075e-06, 4.193999999999032e-06, 4.097000000001516e-06, 4.179999999999462e-06, 4.193999999999032e-06, 4.179999999999462e-06, 4.167000000002835e-06, 4.250000000000781e-06, 4.1949999999985055e-06, 4.194000000002501e-06, 4.1809999999989356e-06, 4.180000000002931e-06, 4.1949999999985055e-06, 4.139000000000226e-06, 4.2499999999973115e-06, 4.194000000005971e-06, 4.194000000005971e-06, 4.1809999999989356e-06, 4.1949999999985055e-06, 4.165999999999892e-06]</msg>
<status status="PASS" starttime="20201115 22:04:10.972" endtime="20201115 22:04:10.974"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:10.967" endtime="20201115 22:04:10.975"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:10.977" endtime="20201115 22:04:10.978"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:10.981" endtime="20201115 22:04:11.000"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:10.979" endtime="20201115 22:04:11.001"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:10.975" endtime="20201115 22:04:11.001"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:10.602" endtime="20201115 22:04:11.001"></status>
</kw>
<msg timestamp="20201115 22:04:11.002" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:11.011" endtime="20201115 22:04:11.032"></status>
</kw>
<msg timestamp="20201115 22:04:11.032" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:11.009" endtime="20201115 22:04:11.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:11.035" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:11.034" endtime="20201115 22:04:11.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:11.036" endtime="20201115 22:04:11.038"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:11.007" endtime="20201115 22:04:11.038"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:11.004" endtime="20201115 22:04:11.039"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:11.046" endtime="20201115 22:04:11.333"></status>
</kw>
<msg timestamp="20201115 22:04:11.336" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021056639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021060819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:11.044" endtime="20201115 22:04:11.337"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:11.344" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021056639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021060819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:11.337" endtime="20201115 22:04:11.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:11.346" endtime="20201115 22:04:11.348"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:11.041" endtime="20201115 22:04:11.348"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:11.040" endtime="20201115 22:04:11.349"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:11.353" level="INFO">${RESULT} = [{'time': 0.021060819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.180000000002931e-06, 'source_diff': 4.180000000002931e-06}, {'time': 0.021245903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:11.349" endtime="20201115 22:04:11.353"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:11.367" level="INFO">${OVERHEAD} = {'diff': [4.180000000002931e-06, 4.139000000000226e-06, 4.207999999998602e-06, 4.1949999999985055e-06, 4.195000000001975e-06, 4.209000000001545e-06, 4.125000000000656e-06, 4.193999999999032e-06, 4.152...</msg>
<status status="PASS" starttime="20201115 22:04:11.354" endtime="20201115 22:04:11.371"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:11.376" level="INFO">NAME: 00-overhead-14-remove</msg>
<status status="PASS" starttime="20201115 22:04:11.375" endtime="20201115 22:04:11.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:11.378" level="INFO">VALUE: [4.180000000002931e-06, 4.139000000000226e-06, 4.207999999998602e-06, 4.1949999999985055e-06, 4.195000000001975e-06, 4.209000000001545e-06, 4.125000000000656e-06, 4.193999999999032e-06, 4.152000000000322e-06, 4.208000000002071e-06, 4.207999999998602e-06, 4.208000000002071e-06, 4.1109999999976166e-06, 4.1949999999985055e-06, 4.2359999999977416e-06, 4.152999999999796e-06, 4.208999999998075e-06, 4.207999999998602e-06, 4.1809999999989356e-06, 4.207999999998602e-06, 4.179999999999462e-06, 4.1809999999989356e-06, 4.1949999999985055e-06, 4.250000000000781e-06, 4.194000000002501e-06, 4.237000000000685e-06, 4.223000000001115e-06, 4.207999999998602e-06, 4.2499999999973115e-06, 4.179999999999462e-06, 4.1949999999985055e-06, 4.166999999999366e-06, 4.193999999999032e-06, 4.195000000001975e-06, 4.179999999999462e-06, 4.166999999999366e-06, 4.1809999999989356e-06, 4.1809999999989356e-06, 4.208999999998075e-06, 4.207999999998602e-06, 4.152999999999796e-06, 4.193999999999032e-06, 4.222000000001641e-06, 4.207999999998602e-06, 4.1809999999989356e-06, 4.167000000002835e-06, 4.097000000001516e-06, 4.1949999999985055e-06, 4.207999999998602e-06, 4.193999999999032e-06]</msg>
<status status="PASS" starttime="20201115 22:04:11.377" endtime="20201115 22:04:11.379"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:11.372" endtime="20201115 22:04:11.379"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:11.382" endtime="20201115 22:04:11.383"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:11.385" endtime="20201115 22:04:11.405"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:11.384" endtime="20201115 22:04:11.405"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:11.380" endtime="20201115 22:04:11.406"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:11.002" endtime="20201115 22:04:11.406"></status>
</kw>
<msg timestamp="20201115 22:04:11.406" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:11.416" endtime="20201115 22:04:11.437"></status>
</kw>
<msg timestamp="20201115 22:04:11.437" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:11.414" endtime="20201115 22:04:11.437"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:11.440" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:11.438" endtime="20201115 22:04:11.440"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:11.441" endtime="20201115 22:04:11.442"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:11.411" endtime="20201115 22:04:11.443"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:11.409" endtime="20201115 22:04:11.443"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:11.450" endtime="20201115 22:04:11.737"></status>
</kw>
<msg timestamp="20201115 22:04:11.740" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021543875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021548069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:11.449" endtime="20201115 22:04:11.740"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:11.748" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021543875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021548069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:11.741" endtime="20201115 22:04:11.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:11.750" endtime="20201115 22:04:11.751"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:11.446" endtime="20201115 22:04:11.752"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:11.444" endtime="20201115 22:04:11.752"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:11.757" level="INFO">${RESULT} = [{'time': 0.021548069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.193999999999032e-06, 'source_diff': 4.193999999999032e-06}, {'time': 0.021735514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:11.753" endtime="20201115 22:04:11.757"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:11.771" level="INFO">${OVERHEAD} = {'diff': [4.193999999999032e-06, 4.195000000001975e-06, 4.195000000001975e-06, 4.207999999998602e-06, 4.193999999999032e-06, 4.207999999998602e-06, 4.1949999999985055e-06, 4.193999999999032e-06, 4.221...</msg>
<status status="PASS" starttime="20201115 22:04:11.758" endtime="20201115 22:04:11.771"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:11.776" level="INFO">NAME: 00-overhead-14-remove</msg>
<status status="PASS" starttime="20201115 22:04:11.775" endtime="20201115 22:04:11.776"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:11.778" level="INFO">VALUE: [4.193999999999032e-06, 4.195000000001975e-06, 4.195000000001975e-06, 4.207999999998602e-06, 4.193999999999032e-06, 4.207999999998602e-06, 4.1949999999985055e-06, 4.193999999999032e-06, 4.221999999998172e-06, 4.1809999999989356e-06, 4.195000000001975e-06, 4.193999999999032e-06, 4.193999999999032e-06, 4.208999999998075e-06, 4.222000000001641e-06, 4.1809999999989356e-06, 4.193999999999032e-06, 4.195000000001975e-06, 4.179999999999462e-06, 4.1949999999985055e-06, 4.165999999999892e-06, 4.208000000002071e-06, 4.139000000000226e-06, 4.180000000002931e-06, 4.193999999999032e-06, 4.180000000002931e-06, 4.193999999999032e-06, 4.179999999999462e-06, 4.193999999999032e-06, 4.180000000002931e-06, 4.139000000000226e-06, 4.195000000001975e-06, 4.194000000002501e-06, 4.1809999999989356e-06, 4.1809999999989356e-06, 4.139000000000226e-06, 4.1809999999989356e-06, 4.193999999999032e-06, 4.195000000001975e-06, 4.1949999999985055e-06, 4.1949999999985055e-06, 4.1949999999985055e-06, 4.208999999998075e-06, 4.194000000002501e-06, 4.193999999999032e-06, 4.1809999999989356e-06, 4.1809999999989356e-06, 4.208000000002071e-06, 4.1809999999989356e-06, 4.179999999999462e-06]</msg>
<status status="PASS" starttime="20201115 22:04:11.777" endtime="20201115 22:04:11.779"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:11.772" endtime="20201115 22:04:11.779"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:11.782" endtime="20201115 22:04:11.783"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:11.785" endtime="20201115 22:04:11.805"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:11.784" endtime="20201115 22:04:11.805"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:11.780" endtime="20201115 22:04:11.806"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:11.407" endtime="20201115 22:04:11.806"></status>
</kw>
<msg timestamp="20201115 22:04:11.806" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:11.816" endtime="20201115 22:04:11.835"></status>
</kw>
<msg timestamp="20201115 22:04:11.836" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:11.814" endtime="20201115 22:04:11.836"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:11.838" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:11.837" endtime="20201115 22:04:11.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:11.840" endtime="20201115 22:04:11.841"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:11.811" endtime="20201115 22:04:11.842"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:11.809" endtime="20201115 22:04:11.842"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:11.849" endtime="20201115 22:04:12.136"></status>
</kw>
<msg timestamp="20201115 22:04:12.139" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020825083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020829264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:11.847" endtime="20201115 22:04:12.140"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:12.148" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020825083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020829264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:12.141" endtime="20201115 22:04:12.148"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:12.150" endtime="20201115 22:04:12.151"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:11.845" endtime="20201115 22:04:12.152"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:11.843" endtime="20201115 22:04:12.152"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:12.157" level="INFO">${RESULT} = [{'time': 0.020829264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1809999999989356e-06, 'source_diff': 4.1809999999989356e-06}, {'time': 0.021014083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:04:12.153" endtime="20201115 22:04:12.157"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:12.171" level="INFO">${OVERHEAD} = {'diff': [4.1809999999989356e-06, 4.207999999998602e-06, 4.165999999999892e-06, 4.152999999999796e-06, 4.193999999999032e-06, 4.138000000000752e-06, 4.1809999999989356e-06, 4.208000000002071e-06, 4.22...</msg>
<status status="PASS" starttime="20201115 22:04:12.158" endtime="20201115 22:04:12.171"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:12.176" level="INFO">NAME: 00-overhead-14-remove</msg>
<status status="PASS" starttime="20201115 22:04:12.174" endtime="20201115 22:04:12.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:12.178" level="INFO">VALUE: [4.1809999999989356e-06, 4.207999999998602e-06, 4.165999999999892e-06, 4.152999999999796e-06, 4.193999999999032e-06, 4.138000000000752e-06, 4.1809999999989356e-06, 4.208000000002071e-06, 4.221999999998172e-06, 4.195000000001975e-06, 4.193999999999032e-06, 4.208999999998075e-06, 4.181000000002405e-06, 4.179999999999462e-06, 4.179999999999462e-06, 4.193999999999032e-06, 4.250000000000781e-06, 4.207999999998602e-06, 4.194000000002501e-06, 4.179999999999462e-06, 4.193999999999032e-06, 4.193999999999032e-06, 4.193999999999032e-06, 4.1809999999989356e-06, 4.1949999999985055e-06, 4.167000000002835e-06, 4.1949999999985055e-06, 4.193999999999032e-06, 4.153000000003265e-06, 4.207999999998602e-06, 4.179999999999462e-06, 4.193999999999032e-06, 4.195000000001975e-06, 4.193999999999032e-06, 4.193999999999032e-06, 4.208000000002071e-06, 4.1809999999989356e-06, 4.1949999999985055e-06, 4.1949999999985055e-06, 4.1809999999989356e-06, 4.152999999999796e-06, 4.179999999999462e-06, 4.1949999999985055e-06, 4.193999999999032e-06, 4.250000000000781e-06, 4.125000000000656e-06, 4.125000000000656e-06, 4.2499999999973115e-06, 4.193999999999032e-06, 4.1949999999985055e-06]</msg>
<status status="PASS" starttime="20201115 22:04:12.177" endtime="20201115 22:04:12.179"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:12.172" endtime="20201115 22:04:12.179"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:12.181" endtime="20201115 22:04:12.183"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:12.185" endtime="20201115 22:04:12.205"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:12.183" endtime="20201115 22:04:12.205"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:12.180" endtime="20201115 22:04:12.206"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:11.807" endtime="20201115 22:04:12.206"></status>
</kw>
<msg timestamp="20201115 22:04:12.206" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:12.216" endtime="20201115 22:04:12.236"></status>
</kw>
<msg timestamp="20201115 22:04:12.237" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:12.214" endtime="20201115 22:04:12.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:12.239" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:12.238" endtime="20201115 22:04:12.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:12.240" endtime="20201115 22:04:12.242"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:12.212" endtime="20201115 22:04:12.242"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:12.209" endtime="20201115 22:04:12.243"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:12.250" endtime="20201115 22:04:12.537"></status>
</kw>
<msg timestamp="20201115 22:04:12.540" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022321375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022325569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:12.248" endtime="20201115 22:04:12.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:12.549" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022321375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022325569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:12.542" endtime="20201115 22:04:12.550"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:12.550" endtime="20201115 22:04:12.552"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:12.245" endtime="20201115 22:04:12.553"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:12.244" endtime="20201115 22:04:12.553"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:12.557" level="INFO">${RESULT} = [{'time': 0.022325569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.193999999999032e-06, 'source_diff': 4.193999999999032e-06}, {'time': 0.022513722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:12.554" endtime="20201115 22:04:12.558"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:12.616" level="INFO">${OVERHEAD} = {'diff': [4.193999999999032e-06, 4.179999999999462e-06, 4.1809999999989356e-06, 4.209000000001545e-06, 4.194000000002501e-06, 4.179999999999462e-06, 4.195000000001975e-06, 4.193999999999032e-06, 4.207...</msg>
<status status="PASS" starttime="20201115 22:04:12.558" endtime="20201115 22:04:12.616"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:12.621" level="INFO">NAME: 00-overhead-14-remove</msg>
<status status="PASS" starttime="20201115 22:04:12.620" endtime="20201115 22:04:12.621"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:12.623" level="INFO">VALUE: [4.193999999999032e-06, 4.179999999999462e-06, 4.1809999999989356e-06, 4.209000000001545e-06, 4.194000000002501e-06, 4.179999999999462e-06, 4.195000000001975e-06, 4.193999999999032e-06, 4.207999999998602e-06, 4.193999999999032e-06, 4.207999999998602e-06, 4.264000000000351e-06, 4.181000000002405e-06, 4.152999999999796e-06, 4.181000000002405e-06, 4.152999999999796e-06, 4.166999999999366e-06, 4.1809999999989356e-06, 4.236000000001211e-06, 4.179999999999462e-06, 4.1809999999989356e-06, 4.194000000002501e-06, 4.125000000000656e-06, 4.209000000001545e-06, 4.11200000000056e-06, 4.207999999998602e-06, 4.193999999999032e-06, 4.1949999999985055e-06, 4.139000000000226e-06, 4.1809999999989356e-06, 4.195000000001975e-06, 4.179999999999462e-06, 4.179999999999462e-06, 4.194000000002501e-06, 4.179999999999462e-06, 4.152000000000322e-06, 4.179999999999462e-06, 4.195000000001975e-06, 4.263000000000877e-06, 4.1809999999989356e-06, 4.194000000002501e-06, 4.1809999999989356e-06, 4.1809999999989356e-06, 4.125000000000656e-06, 4.139000000000226e-06, 4.1809999999989356e-06, 4.1249999999971865e-06, 4.193999999999032e-06, 4.1809999999989356e-06, 4.207999999998602e-06]</msg>
<status status="PASS" starttime="20201115 22:04:12.622" endtime="20201115 22:04:12.624"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:12.617" endtime="20201115 22:04:12.624"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:12.627" endtime="20201115 22:04:12.628"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:12.630" endtime="20201115 22:04:12.650"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:12.629" endtime="20201115 22:04:12.650"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:12.625" endtime="20201115 22:04:12.651"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:12.207" endtime="20201115 22:04:12.651"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:10.601" endtime="20201115 22:04:12.651"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:10.600" endtime="20201115 22:04:12.651"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:04:12.654" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:12.664" endtime="20201115 22:04:12.683"></status>
</kw>
<msg timestamp="20201115 22:04:12.683" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:12.662" endtime="20201115 22:04:12.684"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:12.686" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:12.684" endtime="20201115 22:04:12.686"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:12.687" endtime="20201115 22:04:12.689"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:12.659" endtime="20201115 22:04:12.689"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:12.656" endtime="20201115 22:04:12.690"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:12.697" endtime="20201115 22:04:12.983"></status>
</kw>
<msg timestamp="20201115 22:04:12.987" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023905542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023909958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:12.695" endtime="20201115 22:04:12.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:12.995" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023905542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023909958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:12.988" endtime="20201115 22:04:12.995"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:12.996" endtime="20201115 22:04:12.998"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:12.693" endtime="20201115 22:04:12.998"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:12.691" endtime="20201115 22:04:12.999"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:13.003" level="INFO">${RESULT} = [{'time': 0.023909958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.416000000000142e-06, 'source_diff': 4.416000000000142e-06}, {'time': 0.024112389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:12.999" endtime="20201115 22:04:13.003"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:13.017" level="INFO">${OVERHEAD} = {'diff': [4.416000000000142e-06, 4.417000000003085e-06, 4.402000000000572e-06, 4.403000000000046e-06, 4.429999999999712e-06, 4.444000000002751e-06, 4.403000000000046e-06, 4.387999999997533e-06, 4.4030...</msg>
<status status="PASS" starttime="20201115 22:04:13.004" endtime="20201115 22:04:13.017"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:13.022" level="INFO">NAME: 00-overhead-15-remove</msg>
<status status="PASS" starttime="20201115 22:04:13.021" endtime="20201115 22:04:13.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:13.024" level="INFO">VALUE: [4.416000000000142e-06, 4.417000000003085e-06, 4.402000000000572e-06, 4.403000000000046e-06, 4.429999999999712e-06, 4.444000000002751e-06, 4.403000000000046e-06, 4.387999999997533e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.429999999999712e-06, 4.389000000000476e-06, 4.347000000001766e-06, 4.388000000001002e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.4449999999987555e-06, 4.403000000000046e-06, 4.332999999998727e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.402000000000572e-06, 4.346999999998297e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.416000000000142e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.416999999999616e-06, 4.36200000000081e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.36200000000081e-06, 4.361000000001336e-06, 4.361000000001336e-06, 4.403000000000046e-06, 4.402000000000572e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.346999999994827e-06, 4.403000000000046e-06, 4.347000000001766e-06]</msg>
<status status="PASS" starttime="20201115 22:04:13.023" endtime="20201115 22:04:13.025"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:13.018" endtime="20201115 22:04:13.025"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:13.028" endtime="20201115 22:04:13.029"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:13.031" endtime="20201115 22:04:13.051"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:13.030" endtime="20201115 22:04:13.051"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:13.026" endtime="20201115 22:04:13.052"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:12.654" endtime="20201115 22:04:13.052"></status>
</kw>
<msg timestamp="20201115 22:04:13.052" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:13.062" endtime="20201115 22:04:13.083"></status>
</kw>
<msg timestamp="20201115 22:04:13.084" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:13.061" endtime="20201115 22:04:13.084"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:13.087" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:13.085" endtime="20201115 22:04:13.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:13.088" endtime="20201115 22:04:13.090"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:13.057" endtime="20201115 22:04:13.091"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:13.055" endtime="20201115 22:04:13.091"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:13.098" endtime="20201115 22:04:13.383"></status>
</kw>
<msg timestamp="20201115 22:04:13.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022221292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022225681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:13.096" endtime="20201115 22:04:13.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:13.395" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022221292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022225681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:13.388" endtime="20201115 22:04:13.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:13.396" endtime="20201115 22:04:13.398"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:13.093" endtime="20201115 22:04:13.398"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:13.092" endtime="20201115 22:04:13.399"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:13.403" level="INFO">${RESULT} = [{'time': 0.022225681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.389000000000476e-06, 'source_diff': 4.389000000000476e-06}, {'time': 0.022426764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:13.400" endtime="20201115 22:04:13.403"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:13.417" level="INFO">${OVERHEAD} = {'diff': [4.389000000000476e-06, 4.388999999997006e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.402000000000572e-06, 4.347000000001766e-06, 4.389000000000476e-06, 4.4439...</msg>
<status status="PASS" starttime="20201115 22:04:13.404" endtime="20201115 22:04:13.417"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:13.422" level="INFO">NAME: 00-overhead-15-remove</msg>
<status status="PASS" starttime="20201115 22:04:13.421" endtime="20201115 22:04:13.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:13.424" level="INFO">VALUE: [4.389000000000476e-06, 4.388999999997006e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.402000000000572e-06, 4.347000000001766e-06, 4.389000000000476e-06, 4.443999999999282e-06, 4.403000000000046e-06, 4.416000000000142e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.416999999999616e-06, 4.388999999997006e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.347000000001766e-06, 4.402000000000572e-06, 4.389000000000476e-06, 4.416999999999616e-06, 4.388999999997006e-06, 4.416000000000142e-06, 4.416999999999616e-06, 4.375000000000906e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.389000000000476e-06, 4.402000000000572e-06, 4.429999999999712e-06, 4.402000000000572e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.443999999999282e-06, 4.389000000000476e-06, 4.3749999999974365e-06, 4.403000000000046e-06, 4.402000000000572e-06, 4.360999999997867e-06, 4.416999999999616e-06, 4.375000000000906e-06, 4.402000000000572e-06, 4.443999999999282e-06, 4.389000000000476e-06, 4.416999999999616e-06, 4.416000000000142e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.389000000000476e-06]</msg>
<status status="PASS" starttime="20201115 22:04:13.423" endtime="20201115 22:04:13.425"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:13.418" endtime="20201115 22:04:13.425"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:13.428" endtime="20201115 22:04:13.429"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:13.431" endtime="20201115 22:04:13.451"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:13.430" endtime="20201115 22:04:13.451"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:13.426" endtime="20201115 22:04:13.452"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:13.053" endtime="20201115 22:04:13.452"></status>
</kw>
<msg timestamp="20201115 22:04:13.452" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:13.462" endtime="20201115 22:04:13.482"></status>
</kw>
<msg timestamp="20201115 22:04:13.482" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:13.460" endtime="20201115 22:04:13.483"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:13.485" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:13.483" endtime="20201115 22:04:13.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:13.486" endtime="20201115 22:04:13.488"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:13.457" endtime="20201115 22:04:13.488"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:13.455" endtime="20201115 22:04:13.489"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:13.496" endtime="20201115 22:04:13.781"></status>
</kw>
<msg timestamp="20201115 22:04:13.785" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022129597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022134014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:13.494" endtime="20201115 22:04:13.785"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:13.793" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022129597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022134014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:13.786" endtime="20201115 22:04:13.793"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:13.794" endtime="20201115 22:04:13.796"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:13.491" endtime="20201115 22:04:13.796"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:13.490" endtime="20201115 22:04:13.797"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:13.801" level="INFO">${RESULT} = [{'time': 0.022134014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.416999999999616e-06, 'source_diff': 4.416999999999616e-06}, {'time': 0.022333444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:13.798" endtime="20201115 22:04:13.801"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:13.815" level="INFO">${OVERHEAD} = {'diff': [4.416999999999616e-06, 4.388000000001002e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.3750...</msg>
<status status="PASS" starttime="20201115 22:04:13.802" endtime="20201115 22:04:13.815"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:13.820" level="INFO">NAME: 00-overhead-15-remove</msg>
<status status="PASS" starttime="20201115 22:04:13.819" endtime="20201115 22:04:13.820"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:13.822" level="INFO">VALUE: [4.416999999999616e-06, 4.388000000001002e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.375000000000906e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.416000000000142e-06, 4.458000000002321e-06, 4.389000000000476e-06, 4.388000000001002e-06, 4.361000000001336e-06, 4.403000000000046e-06, 4.416000000000142e-06, 4.403000000000046e-06, 4.430999999999186e-06, 4.402000000000572e-06, 4.416000000000142e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.416000000000142e-06, 4.429999999999712e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.3199999999986305e-06, 4.402000000000572e-06, 4.401999999997103e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.401999999997103e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.387999999997533e-06, 4.402000000000572e-06, 4.403000000000046e-06, 4.375000000000906e-06, 4.416999999999616e-06, 4.401999999997103e-06, 4.346999999998297e-06, 4.416999999999616e-06, 4.402000000000572e-06, 4.402000000000572e-06, 4.429999999999712e-06]</msg>
<status status="PASS" starttime="20201115 22:04:13.821" endtime="20201115 22:04:13.823"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:13.816" endtime="20201115 22:04:13.823"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:13.826" endtime="20201115 22:04:13.827"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:13.829" endtime="20201115 22:04:13.849"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:13.828" endtime="20201115 22:04:13.849"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:13.824" endtime="20201115 22:04:13.850"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:13.453" endtime="20201115 22:04:13.850"></status>
</kw>
<msg timestamp="20201115 22:04:13.851" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:13.860" endtime="20201115 22:04:13.879"></status>
</kw>
<msg timestamp="20201115 22:04:13.879" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:13.858" endtime="20201115 22:04:13.880"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:13.882" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:13.880" endtime="20201115 22:04:13.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:13.883" endtime="20201115 22:04:13.885"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:13.856" endtime="20201115 22:04:13.886"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:13.853" endtime="20201115 22:04:13.886"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:13.893" endtime="20201115 22:04:14.180"></status>
</kw>
<msg timestamp="20201115 22:04:14.183" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022011806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022016208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:13.891" endtime="20201115 22:04:14.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:14.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022011806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022016208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:14.184" endtime="20201115 22:04:14.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:14.192" endtime="20201115 22:04:14.194"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:13.888" endtime="20201115 22:04:14.195"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:13.887" endtime="20201115 22:04:14.195"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:14.199" level="INFO">${RESULT} = [{'time': 0.022016208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.402000000000572e-06, 'source_diff': 4.402000000000572e-06}, {'time': 0.022218722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:14.196" endtime="20201115 22:04:14.199"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:14.214" level="INFO">${OVERHEAD} = {'diff': [4.402000000000572e-06, 4.403000000000046e-06, 4.430000000003181e-06, 4.402000000000572e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.3890...</msg>
<status status="PASS" starttime="20201115 22:04:14.200" endtime="20201115 22:04:14.214"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:14.219" level="INFO">NAME: 00-overhead-15-remove</msg>
<status status="PASS" starttime="20201115 22:04:14.218" endtime="20201115 22:04:14.219"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:14.221" level="INFO">VALUE: [4.402000000000572e-06, 4.403000000000046e-06, 4.430000000003181e-06, 4.402000000000572e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.416000000000142e-06, 4.402000000000572e-06, 4.402000000000572e-06, 4.417000000003085e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.416000000000142e-06, 4.360999999997867e-06, 4.360999999997867e-06, 4.416999999999616e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.402000000000572e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.402999999996576e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.402000000000572e-06, 4.347000000001766e-06, 4.389000000000476e-06, 4.388999999997006e-06, 4.416999999999616e-06, 4.387999999997533e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.402000000000572e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.416000000000142e-06]</msg>
<status status="PASS" starttime="20201115 22:04:14.220" endtime="20201115 22:04:14.222"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:14.215" endtime="20201115 22:04:14.222"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:14.225" endtime="20201115 22:04:14.227"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:14.229" endtime="20201115 22:04:14.248"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:14.227" endtime="20201115 22:04:14.249"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:14.223" endtime="20201115 22:04:14.249"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:13.851" endtime="20201115 22:04:14.250"></status>
</kw>
<msg timestamp="20201115 22:04:14.250" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:14.259" endtime="20201115 22:04:14.280"></status>
</kw>
<msg timestamp="20201115 22:04:14.280" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:14.258" endtime="20201115 22:04:14.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:14.283" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:14.281" endtime="20201115 22:04:14.283"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:14.284" endtime="20201115 22:04:14.287"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:14.255" endtime="20201115 22:04:14.287"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:14.253" endtime="20201115 22:04:14.288"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:14.294" endtime="20201115 22:04:14.580"></status>
</kw>
<msg timestamp="20201115 22:04:14.583" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021566306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021570694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:14.293" endtime="20201115 22:04:14.583"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:14.591" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021566306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021570694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:14.584" endtime="20201115 22:04:14.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:14.593" endtime="20201115 22:04:14.594"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:14.290" endtime="20201115 22:04:14.595"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:14.288" endtime="20201115 22:04:14.595"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:14.600" level="INFO">${RESULT} = [{'time': 0.021570694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.388000000001002e-06, 'source_diff': 4.388000000001002e-06}, {'time': 0.021771931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:14.596" endtime="20201115 22:04:14.600"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:14.613" level="INFO">${OVERHEAD} = {'diff': [4.388000000001002e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.360999999997867e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.487000000000935e-06, 4.4449999999987555e-06, 4.403...</msg>
<status status="PASS" starttime="20201115 22:04:14.601" endtime="20201115 22:04:14.614"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:14.618" level="INFO">NAME: 00-overhead-15-remove</msg>
<status status="PASS" starttime="20201115 22:04:14.617" endtime="20201115 22:04:14.619"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:14.621" level="INFO">VALUE: [4.388000000001002e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.360999999997867e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.487000000000935e-06, 4.4449999999987555e-06, 4.403000000000046e-06, 4.361000000001336e-06, 4.416000000000142e-06, 4.416999999999616e-06, 4.361000000001336e-06, 4.416999999999616e-06, 4.361000000001336e-06, 4.417000000003085e-06, 4.403000000000046e-06, 4.4449999999987555e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.416999999999616e-06, 4.361000000001336e-06, 4.416000000000142e-06, 4.430999999999186e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.34800000000124e-06, 4.389000000000476e-06, 4.388000000001002e-06, 4.333000000002196e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.375000000000906e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.416000000000142e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.416000000000142e-06, 4.389000000000476e-06]</msg>
<status status="PASS" starttime="20201115 22:04:14.619" endtime="20201115 22:04:14.622"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:14.614" endtime="20201115 22:04:14.622"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:14.625" endtime="20201115 22:04:14.626"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:14.628" endtime="20201115 22:04:14.648"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:14.627" endtime="20201115 22:04:14.648"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:14.623" endtime="20201115 22:04:14.649"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:14.251" endtime="20201115 22:04:14.649"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:12.653" endtime="20201115 22:04:14.649"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:12.652" endtime="20201115 22:04:14.649"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:04:14.652" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:14.661" endtime="20201115 22:04:14.682"></status>
</kw>
<msg timestamp="20201115 22:04:14.682" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:14.659" endtime="20201115 22:04:14.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:14.685" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:14.684" endtime="20201115 22:04:14.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:14.686" endtime="20201115 22:04:14.688"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:14.657" endtime="20201115 22:04:14.688"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:14.654" endtime="20201115 22:04:14.689"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:14.696" endtime="20201115 22:04:14.982"></status>
</kw>
<msg timestamp="20201115 22:04:14.985" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023269819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023274444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:14.694" endtime="20201115 22:04:14.985"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:14.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023269819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023274444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:14.986" endtime="20201115 22:04:14.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:14.995" endtime="20201115 22:04:14.996"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:14.691" endtime="20201115 22:04:14.997"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:14.690" endtime="20201115 22:04:14.997"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:15.002" level="INFO">${RESULT} = [{'time': 0.023274444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.6249999999976865e-06, 'source_diff': 4.6249999999976865e-06}, {'time': 0.023491569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:04:14.998" endtime="20201115 22:04:15.002"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:15.016" level="INFO">${OVERHEAD} = {'diff': [4.6249999999976865e-06, 4.611000000001586e-06, 4.611000000001586e-06, 4.638000000001252e-06, 4.596999999998547e-06, 4.637999999997783e-06, 4.6389999999972564e-06, 4.596999999998547e-06, 4.62...</msg>
<status status="PASS" starttime="20201115 22:04:15.003" endtime="20201115 22:04:15.016"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:15.020" level="INFO">NAME: 00-overhead-16-remove</msg>
<status status="PASS" starttime="20201115 22:04:15.019" endtime="20201115 22:04:15.021"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:15.023" level="INFO">VALUE: [4.6249999999976865e-06, 4.611000000001586e-06, 4.611000000001586e-06, 4.638000000001252e-06, 4.596999999998547e-06, 4.637999999997783e-06, 4.6389999999972564e-06, 4.596999999998547e-06, 4.6249999999976865e-06, 4.58400000000192e-06, 4.5839999999984504e-06, 4.597000000002016e-06, 4.597000000002016e-06, 4.625000000001156e-06, 4.59800000000149e-06, 4.625000000001156e-06, 4.596999999998547e-06, 4.6249999999976865e-06, 4.6249999999976865e-06, 4.639000000000726e-06, 4.597000000002016e-06, 4.611000000001586e-06, 4.6249999999976865e-06, 4.625000000001156e-06, 4.610999999998117e-06, 4.611000000001586e-06, 4.611000000001586e-06, 4.666000000000392e-06, 4.6249999999976865e-06, 4.57000000000235e-06, 4.610999999998117e-06, 4.625000000001156e-06, 4.625000000001156e-06, 4.610999999998117e-06, 4.610999999998117e-06, 4.625000000001156e-06, 4.610999999998117e-06, 4.596999999995077e-06, 4.596999999995077e-06, 4.527000000004167e-06, 4.625000000001156e-06, 4.625000000001156e-06, 4.610999999994647e-06, 4.596999999995077e-06, 4.58400000000192e-06, 4.625000000001156e-06, 4.639000000000726e-06, 4.653000000000296e-06, 4.625000000001156e-06, 4.611000000001586e-06]</msg>
<status status="PASS" starttime="20201115 22:04:15.022" endtime="20201115 22:04:15.024"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:15.017" endtime="20201115 22:04:15.024"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:15.027" endtime="20201115 22:04:15.028"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:15.030" endtime="20201115 22:04:15.050"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:15.029" endtime="20201115 22:04:15.051"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:15.025" endtime="20201115 22:04:15.051"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:14.652" endtime="20201115 22:04:15.051"></status>
</kw>
<msg timestamp="20201115 22:04:15.051" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:15.061" endtime="20201115 22:04:15.082"></status>
</kw>
<msg timestamp="20201115 22:04:15.083" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:15.059" endtime="20201115 22:04:15.083"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:15.085" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:15.084" endtime="20201115 22:04:15.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:15.086" endtime="20201115 22:04:15.089"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:15.057" endtime="20201115 22:04:15.090"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:15.054" endtime="20201115 22:04:15.090"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:15.097" endtime="20201115 22:04:15.383"></status>
</kw>
<msg timestamp="20201115 22:04:15.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020792819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020797472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:15.095" endtime="20201115 22:04:15.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:15.395" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020792819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020797472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:15.388" endtime="20201115 22:04:15.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:15.396" endtime="20201115 22:04:15.398"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:15.093" endtime="20201115 22:04:15.398"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:15.091" endtime="20201115 22:04:15.399"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:15.403" level="INFO">${RESULT} = [{'time': 0.020797472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.653000000000296e-06, 'source_diff': 4.653000000000296e-06}, {'time': 0.021014486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:15.400" endtime="20201115 22:04:15.403"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:15.417" level="INFO">${OVERHEAD} = {'diff': [4.653000000000296e-06, 4.596999999998547e-06, 4.610999999998117e-06, 4.6249999999976865e-06, 4.6249999999976865e-06, 4.597000000002016e-06, 4.59799999999802e-06, 4.625000000001156e-06, 4.612...</msg>
<status status="PASS" starttime="20201115 22:04:15.404" endtime="20201115 22:04:15.418"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:15.422" level="INFO">NAME: 00-overhead-16-remove</msg>
<status status="PASS" starttime="20201115 22:04:15.421" endtime="20201115 22:04:15.423"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:15.425" level="INFO">VALUE: [4.653000000000296e-06, 4.596999999998547e-06, 4.610999999998117e-06, 4.6249999999976865e-06, 4.6249999999976865e-06, 4.597000000002016e-06, 4.59799999999802e-06, 4.625000000001156e-06, 4.61200000000106e-06, 4.597000000002016e-06, 4.610999999998117e-06, 4.61200000000106e-06, 4.639000000000726e-06, 4.625000000001156e-06, 4.625000000001156e-06, 4.6249999999976865e-06, 4.611000000001586e-06, 4.5839999999984504e-06, 4.6249999999976865e-06, 4.59799999999802e-06, 4.639000000000726e-06, 4.625000000001156e-06, 4.625000000001156e-06, 4.625000000001156e-06, 4.625000000001156e-06, 4.625000000001156e-06, 4.611000000001586e-06, 4.5839999999984504e-06, 4.6249999999976865e-06, 4.6249999999976865e-06, 4.611000000001586e-06, 4.653000000000296e-06, 4.6249999999976865e-06, 4.6249999999976865e-06, 4.6389999999972564e-06, 4.59799999999802e-06, 4.625000000001156e-06, 4.611000000001586e-06, 4.653000000000296e-06, 4.652000000000822e-06, 4.610999999998117e-06, 4.611000000001586e-06, 4.610999999998117e-06, 4.583000000002446e-06, 4.6249999999976865e-06, 4.611000000001586e-06, 4.639000000000726e-06, 4.611000000001586e-06, 4.708000000002571e-06, 4.625000000001156e-06]</msg>
<status status="PASS" starttime="20201115 22:04:15.423" endtime="20201115 22:04:15.425"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:15.418" endtime="20201115 22:04:15.426"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:15.428" endtime="20201115 22:04:15.429"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:15.432" endtime="20201115 22:04:15.451"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:15.430" endtime="20201115 22:04:15.452"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:15.426" endtime="20201115 22:04:15.452"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:15.052" endtime="20201115 22:04:15.452"></status>
</kw>
<msg timestamp="20201115 22:04:15.453" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:15.462" endtime="20201115 22:04:15.484"></status>
</kw>
<msg timestamp="20201115 22:04:15.485" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:15.460" endtime="20201115 22:04:15.485"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:15.487" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:15.486" endtime="20201115 22:04:15.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:15.489" endtime="20201115 22:04:15.491"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:15.458" endtime="20201115 22:04:15.492"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:15.456" endtime="20201115 22:04:15.492"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:15.499" endtime="20201115 22:04:15.784"></status>
</kw>
<msg timestamp="20201115 22:04:15.788" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02084575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020850375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:04:15.497" endtime="20201115 22:04:15.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:15.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02084575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020850375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:04:15.789" endtime="20201115 22:04:15.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:15.797" endtime="20201115 22:04:15.799"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:15.495" endtime="20201115 22:04:15.799"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:15.493" endtime="20201115 22:04:15.800"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:15.804" level="INFO">${RESULT} = [{'time': 0.020850375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.625000000001156e-06, 'source_diff': 4.625000000001156e-06}, {'time': 0.021064833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:15.801" endtime="20201115 22:04:15.805"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:15.820" level="INFO">${OVERHEAD} = {'diff': [4.625000000001156e-06, 4.597000000002016e-06, 4.625000000001156e-06, 4.610999999998117e-06, 4.610999999998117e-06, 4.6249999999976865e-06, 4.625000000001156e-06, 4.61200000000106e-06, 4.6109...</msg>
<status status="PASS" starttime="20201115 22:04:15.806" endtime="20201115 22:04:15.820"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:15.824" level="INFO">NAME: 00-overhead-16-remove</msg>
<status status="PASS" starttime="20201115 22:04:15.823" endtime="20201115 22:04:15.825"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:15.827" level="INFO">VALUE: [4.625000000001156e-06, 4.597000000002016e-06, 4.625000000001156e-06, 4.610999999998117e-06, 4.610999999998117e-06, 4.6249999999976865e-06, 4.625000000001156e-06, 4.61200000000106e-06, 4.610999999998117e-06, 4.6249999999976865e-06, 4.555999999999311e-06, 4.61199999999759e-06, 4.596999999998547e-06, 4.610999999998117e-06, 4.625000000001156e-06, 4.6389999999972564e-06, 4.6249999999976865e-06, 4.625000000001156e-06, 4.625000000001156e-06, 4.610999999998117e-06, 4.693999999999532e-06, 4.6249999999976865e-06, 4.610999999998117e-06, 4.625000000001156e-06, 4.61200000000106e-06, 4.610999999998117e-06, 4.625000000001156e-06, 4.6249999999976865e-06, 4.611000000001586e-06, 4.639000000000726e-06, 4.6249999999976865e-06, 4.6249999999976865e-06, 4.625000000001156e-06, 4.61200000000106e-06, 4.6249999999976865e-06, 4.625000000001156e-06, 4.5699999999988805e-06, 4.597000000002016e-06, 4.554999999999837e-06, 4.611000000001586e-06, 4.611000000001586e-06, 4.625000000001156e-06, 4.597000000002016e-06, 4.625000000001156e-06, 4.652000000000822e-06, 4.61199999999759e-06, 4.582999999998977e-06, 4.611000000001586e-06, 4.625000000001156e-06, 4.61200000000106e-06]</msg>
<status status="PASS" starttime="20201115 22:04:15.826" endtime="20201115 22:04:15.827"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:15.821" endtime="20201115 22:04:15.828"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:15.830" endtime="20201115 22:04:15.832"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:15.834" endtime="20201115 22:04:15.853"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:15.832" endtime="20201115 22:04:15.854"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:15.829" endtime="20201115 22:04:15.854"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:15.453" endtime="20201115 22:04:15.855"></status>
</kw>
<msg timestamp="20201115 22:04:15.855" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:15.864" endtime="20201115 22:04:15.886"></status>
</kw>
<msg timestamp="20201115 22:04:15.886" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:15.862" endtime="20201115 22:04:15.887"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:15.889" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:15.887" endtime="20201115 22:04:15.889"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:15.890" endtime="20201115 22:04:15.893"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:15.860" endtime="20201115 22:04:15.893"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:15.858" endtime="20201115 22:04:15.894"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:15.900" endtime="20201115 22:04:16.185"></status>
</kw>
<msg timestamp="20201115 22:04:16.188" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02188825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021892833, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:04:15.899" endtime="20201115 22:04:16.189"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:16.197" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02188825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021892833, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:04:16.190" endtime="20201115 22:04:16.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:16.199" endtime="20201115 22:04:16.201"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:15.896" endtime="20201115 22:04:16.201"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:15.894" endtime="20201115 22:04:16.202"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:16.206" level="INFO">${RESULT} = [{'time': 0.021892833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.582999999998977e-06, 'source_diff': 4.582999999998977e-06}, {'time': 0.022111181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:16.203" endtime="20201115 22:04:16.207"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:16.220" level="INFO">${OVERHEAD} = {'diff': [4.582999999998977e-06, 4.625000000001156e-06, 4.59799999999802e-06, 4.611000000001586e-06, 4.610999999998117e-06, 4.653000000000296e-06, 4.596999999998547e-06, 4.625000000001156e-06, 4.65199...</msg>
<status status="PASS" starttime="20201115 22:04:16.207" endtime="20201115 22:04:16.221"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:16.225" level="INFO">NAME: 00-overhead-16-remove</msg>
<status status="PASS" starttime="20201115 22:04:16.224" endtime="20201115 22:04:16.226"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:16.228" level="INFO">VALUE: [4.582999999998977e-06, 4.625000000001156e-06, 4.59799999999802e-06, 4.611000000001586e-06, 4.610999999998117e-06, 4.653000000000296e-06, 4.596999999998547e-06, 4.625000000001156e-06, 4.651999999997353e-06, 4.610999999998117e-06, 4.6249999999976865e-06, 4.639000000000726e-06, 4.6249999999976865e-06, 4.610999999998117e-06, 4.625000000001156e-06, 4.625000000001156e-06, 4.679999999999962e-06, 4.625000000001156e-06, 4.625000000001156e-06, 4.568999999999407e-06, 4.625000000001156e-06, 4.653000000000296e-06, 4.6249999999976865e-06, 4.610999999998117e-06, 4.596999999998547e-06, 4.611000000001586e-06, 4.693999999999532e-06, 4.610999999998117e-06, 4.611000000001586e-06, 4.625000000001156e-06, 4.611000000001586e-06, 4.639000000000726e-06, 4.6249999999976865e-06, 4.625000000001156e-06, 4.625000000001156e-06, 4.5839999999984504e-06, 4.610999999998117e-06, 4.54200000000321e-06, 4.639000000000726e-06, 4.679999999999962e-06, 4.6249999999976865e-06, 4.611000000001586e-06, 4.625000000001156e-06, 4.597000000002016e-06, 4.625000000001156e-06, 4.611000000001586e-06, 4.625000000001156e-06, 4.611000000001586e-06, 4.625000000001156e-06, 4.61200000000106e-06]</msg>
<status status="PASS" starttime="20201115 22:04:16.226" endtime="20201115 22:04:16.228"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:16.221" endtime="20201115 22:04:16.229"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:16.231" endtime="20201115 22:04:16.232"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:16.235" endtime="20201115 22:04:16.254"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:16.233" endtime="20201115 22:04:16.255"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:16.229" endtime="20201115 22:04:16.255"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:15.855" endtime="20201115 22:04:16.256"></status>
</kw>
<msg timestamp="20201115 22:04:16.256" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:16.265" endtime="20201115 22:04:16.286"></status>
</kw>
<msg timestamp="20201115 22:04:16.287" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:16.263" endtime="20201115 22:04:16.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:16.289" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:16.288" endtime="20201115 22:04:16.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:16.290" endtime="20201115 22:04:16.293"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:16.261" endtime="20201115 22:04:16.294"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:16.258" endtime="20201115 22:04:16.294"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:16.301" endtime="20201115 22:04:16.587"></status>
</kw>
<msg timestamp="20201115 22:04:16.590" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020877792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020882403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:16.299" endtime="20201115 22:04:16.591"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:16.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020877792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020882403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:16.592" endtime="20201115 22:04:16.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:16.601" endtime="20201115 22:04:16.602"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:16.297" endtime="20201115 22:04:16.603"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:16.295" endtime="20201115 22:04:16.603"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:16.608" level="INFO">${RESULT} = [{'time': 0.020882403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.611000000001586e-06, 'source_diff': 4.611000000001586e-06}, {'time': 0.021101194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:16.604" endtime="20201115 22:04:16.608"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:16.622" level="INFO">${OVERHEAD} = {'diff': [4.611000000001586e-06, 4.638000000001252e-06, 4.6249999999976865e-06, 4.679999999999962e-06, 4.610999999998117e-06, 4.639000000000726e-06, 4.625000000001156e-06, 4.610999999998117e-06, 4.624...</msg>
<status status="PASS" starttime="20201115 22:04:16.609" endtime="20201115 22:04:16.622"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:16.626" level="INFO">NAME: 00-overhead-16-remove</msg>
<status status="PASS" starttime="20201115 22:04:16.625" endtime="20201115 22:04:16.627"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:16.629" level="INFO">VALUE: [4.611000000001586e-06, 4.638000000001252e-06, 4.6249999999976865e-06, 4.679999999999962e-06, 4.610999999998117e-06, 4.639000000000726e-06, 4.625000000001156e-06, 4.610999999998117e-06, 4.6249999999976865e-06, 4.611000000001586e-06, 4.6249999999976865e-06, 4.625000000001156e-06, 4.61199999999759e-06, 4.639000000000726e-06, 4.625000000001156e-06, 4.666999999999866e-06, 4.597000000002016e-06, 4.625000000001156e-06, 4.695000000002475e-06, 4.6249999999976865e-06, 4.59799999999802e-06, 4.639000000000726e-06, 4.638000000001252e-06, 4.6249999999976865e-06, 4.625000000001156e-06, 4.625000000001156e-06, 4.611000000001586e-06, 4.611000000001586e-06, 4.597000000002016e-06, 4.611000000001586e-06, 4.610999999998117e-06, 4.6249999999976865e-06, 4.625000000001156e-06, 4.611000000001586e-06, 4.611000000001586e-06, 4.610999999998117e-06, 4.5699999999988805e-06, 4.6249999999976865e-06, 4.583000000002446e-06, 4.625000000001156e-06, 4.6249999999976865e-06, 4.611000000001586e-06, 4.597000000002016e-06, 4.596999999998547e-06, 4.625000000001156e-06, 4.610999999998117e-06, 4.596999999998547e-06, 4.625000000001156e-06, 4.638999999993787e-06, 4.625000000001156e-06]</msg>
<status status="PASS" starttime="20201115 22:04:16.627" endtime="20201115 22:04:16.629"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:16.622" endtime="20201115 22:04:16.630"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:16.632" endtime="20201115 22:04:16.633"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:16.636" endtime="20201115 22:04:16.655"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:16.634" endtime="20201115 22:04:16.656"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:16.630" endtime="20201115 22:04:16.656"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:16.256" endtime="20201115 22:04:16.657"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:14.651" endtime="20201115 22:04:16.657"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:14.650" endtime="20201115 22:04:16.657"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:04:16.659" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:16.669" endtime="20201115 22:04:16.689"></status>
</kw>
<msg timestamp="20201115 22:04:16.689" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:16.667" endtime="20201115 22:04:16.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:16.692" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:16.691" endtime="20201115 22:04:16.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:16.693" endtime="20201115 22:04:16.695"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:16.664" endtime="20201115 22:04:16.695"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:16.662" endtime="20201115 22:04:16.696"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:16.703" endtime="20201115 22:04:16.990"></status>
</kw>
<msg timestamp="20201115 22:04:16.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023245375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023250194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:16.702" endtime="20201115 22:04:16.993"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:17.001" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023245375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023250194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:16.994" endtime="20201115 22:04:17.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:17.002" endtime="20201115 22:04:17.004"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:16.699" endtime="20201115 22:04:17.005"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:16.697" endtime="20201115 22:04:17.005"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:17.009" level="INFO">${RESULT} = [{'time': 0.023250194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.818999999999657e-06, 'source_diff': 4.818999999999657e-06}, {'time': 0.023484056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:17.006" endtime="20201115 22:04:17.010"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:17.023" level="INFO">${OVERHEAD} = {'diff': [4.818999999999657e-06, 4.8339999999987004e-06, 4.833000000002696e-06, 4.833000000002696e-06, 4.819000000003126e-06, 4.832999999999227e-06, 4.8339999999987004e-06, 4.8339999999987004e-06, 4.8...</msg>
<status status="PASS" starttime="20201115 22:04:17.010" endtime="20201115 22:04:17.024"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:17.028" level="INFO">NAME: 00-overhead-17-remove</msg>
<status status="PASS" starttime="20201115 22:04:17.027" endtime="20201115 22:04:17.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:17.031" level="INFO">VALUE: [4.818999999999657e-06, 4.8339999999987004e-06, 4.833000000002696e-06, 4.833000000002696e-06, 4.819000000003126e-06, 4.832999999999227e-06, 4.8339999999987004e-06, 4.8339999999987004e-06, 4.832999999999227e-06, 4.847000000002266e-06, 4.818999999999657e-06, 4.875000000001406e-06, 4.8339999999987004e-06, 4.833000000002696e-06, 4.832999999999227e-06, 4.777000000000947e-06, 4.84800000000174e-06, 4.832999999999227e-06, 4.832999999999227e-06, 4.791999999999991e-06, 4.832999999999227e-06, 4.791999999999991e-06, 4.832999999999227e-06, 4.8339999999987004e-06, 4.847000000002266e-06, 4.832999999999227e-06, 4.832999999999227e-06, 4.8749999999979365e-06, 4.818999999999657e-06, 4.847000000002266e-06, 4.818999999999657e-06, 4.833000000002696e-06, 4.8200000000026e-06, 4.846999999998797e-06, 4.875000000001406e-06, 4.833000000002696e-06, 4.833000000002696e-06, 4.819999999995661e-06, 4.847999999994801e-06, 4.79200000000346e-06, 4.83400000000217e-06, 4.833000000002696e-06, 4.84800000000174e-06, 4.833000000002696e-06, 4.763000000004847e-06, 4.84800000000174e-06, 4.8189999999961874e-06, 4.832999999995757e-06, 4.833000000002696e-06, 4.847000000002266e-06]</msg>
<status status="PASS" starttime="20201115 22:04:17.029" endtime="20201115 22:04:17.031"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:17.024" endtime="20201115 22:04:17.032"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:17.034" endtime="20201115 22:04:17.035"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:17.038" endtime="20201115 22:04:17.057"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:17.036" endtime="20201115 22:04:17.058"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:17.032" endtime="20201115 22:04:17.058"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:16.660" endtime="20201115 22:04:17.059"></status>
</kw>
<msg timestamp="20201115 22:04:17.059" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:17.068" endtime="20201115 22:04:17.090"></status>
</kw>
<msg timestamp="20201115 22:04:17.090" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:17.066" endtime="20201115 22:04:17.090"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:17.093" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:17.091" endtime="20201115 22:04:17.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:17.094" endtime="20201115 22:04:17.097"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:17.064" endtime="20201115 22:04:17.098"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:17.061" endtime="20201115 22:04:17.098"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:17.105" endtime="20201115 22:04:17.390"></status>
</kw>
<msg timestamp="20201115 22:04:17.393" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020800958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020805819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:17.103" endtime="20201115 22:04:17.394"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:17.402" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020800958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020805819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:17.395" endtime="20201115 22:04:17.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:17.403" endtime="20201115 22:04:17.405"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:17.100" endtime="20201115 22:04:17.405"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:17.099" endtime="20201115 22:04:17.406"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:17.410" level="INFO">${RESULT} = [{'time': 0.020805819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860999999998367e-06, 'source_diff': 4.860999999998367e-06}, {'time': 0.021040014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:17.407" endtime="20201115 22:04:17.410"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:17.425" level="INFO">${OVERHEAD} = {'diff': [4.860999999998367e-06, 4.832999999999227e-06, 4.791000000000517e-06, 4.875000000001406e-06, 4.83400000000217e-06, 4.805000000000087e-06, 4.847000000002266e-06, 4.832999999999227e-06, 4.84699...</msg>
<status status="PASS" starttime="20201115 22:04:17.411" endtime="20201115 22:04:17.425"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:17.430" level="INFO">NAME: 00-overhead-17-remove</msg>
<status status="PASS" starttime="20201115 22:04:17.429" endtime="20201115 22:04:17.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:17.432" level="INFO">VALUE: [4.860999999998367e-06, 4.832999999999227e-06, 4.791000000000517e-06, 4.875000000001406e-06, 4.83400000000217e-06, 4.805000000000087e-06, 4.847000000002266e-06, 4.832999999999227e-06, 4.846999999998797e-06, 4.832999999999227e-06, 4.805000000000087e-06, 4.860999999998367e-06, 4.777000000000947e-06, 4.8339999999987004e-06, 4.846999999998797e-06, 4.832999999999227e-06, 4.8199999999991305e-06, 4.8199999999991305e-06, 4.818999999999657e-06, 4.861000000001836e-06, 4.8339999999987004e-06, 4.777999999996951e-06, 4.818999999999657e-06, 4.832999999999227e-06, 4.846999999998797e-06, 4.832999999999227e-06, 4.832999999999227e-06, 4.833000000002696e-06, 4.860999999998367e-06, 4.832999999999227e-06, 4.84799999999827e-06, 4.8199999999991305e-06, 4.846999999998797e-06, 4.818999999999657e-06, 4.8200000000026e-06, 4.847000000002266e-06, 4.847000000002266e-06, 4.832999999999227e-06, 4.887999999998033e-06, 4.832999999999227e-06, 4.818999999999657e-06, 4.8339999999987004e-06, 4.846999999998797e-06, 4.8339999999987004e-06, 4.832999999999227e-06, 4.832999999995757e-06, 4.889000000000976e-06, 4.832999999995757e-06, 4.847000000002266e-06, 4.83400000000217e-06]</msg>
<status status="PASS" starttime="20201115 22:04:17.431" endtime="20201115 22:04:17.433"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:17.426" endtime="20201115 22:04:17.433"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:17.436" endtime="20201115 22:04:17.437"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:17.439" endtime="20201115 22:04:17.459"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:17.438" endtime="20201115 22:04:17.459"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:17.434" endtime="20201115 22:04:17.460"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:17.059" endtime="20201115 22:04:17.460"></status>
</kw>
<msg timestamp="20201115 22:04:17.460" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:17.470" endtime="20201115 22:04:17.492"></status>
</kw>
<msg timestamp="20201115 22:04:17.492" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:17.468" endtime="20201115 22:04:17.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:17.495" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:17.493" endtime="20201115 22:04:17.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:17.496" endtime="20201115 22:04:17.499"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:17.465" endtime="20201115 22:04:17.499"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:17.463" endtime="20201115 22:04:17.500"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:17.507" endtime="20201115 22:04:17.793"></status>
</kw>
<msg timestamp="20201115 22:04:17.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021509542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021514333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:17.505" endtime="20201115 22:04:17.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:17.804" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021509542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021514333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:17.797" endtime="20201115 22:04:17.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:17.806" endtime="20201115 22:04:17.807"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:17.502" endtime="20201115 22:04:17.808"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:17.500" endtime="20201115 22:04:17.808"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:17.813" level="INFO">${RESULT} = [{'time': 0.021514333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.791000000000517e-06, 'source_diff': 4.791000000000517e-06}, {'time': 0.021746306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:17.809" endtime="20201115 22:04:17.813"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:17.827" level="INFO">${OVERHEAD} = {'diff': [4.791000000000517e-06, 4.8339999999987004e-06, 4.83400000000217e-06, 4.8339999999987004e-06, 4.818999999999657e-06, 4.8199999999991305e-06, 4.846999999998797e-06, 4.805000000000087e-06, 4.87...</msg>
<status status="PASS" starttime="20201115 22:04:17.814" endtime="20201115 22:04:17.827"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:17.831" level="INFO">NAME: 00-overhead-17-remove</msg>
<status status="PASS" starttime="20201115 22:04:17.830" endtime="20201115 22:04:17.832"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:17.834" level="INFO">VALUE: [4.791000000000517e-06, 4.8339999999987004e-06, 4.83400000000217e-06, 4.8339999999987004e-06, 4.818999999999657e-06, 4.8199999999991305e-06, 4.846999999998797e-06, 4.805000000000087e-06, 4.8749999999979365e-06, 4.833000000002696e-06, 4.846999999998797e-06, 4.777000000000947e-06, 4.832999999999227e-06, 4.832999999999227e-06, 4.778000000000421e-06, 4.832999999999227e-06, 4.832999999999227e-06, 4.832999999999227e-06, 4.791999999999991e-06, 4.8200000000026e-06, 4.818999999999657e-06, 4.8199999999991305e-06, 4.818999999999657e-06, 4.833000000002696e-06, 4.8339999999987004e-06, 4.860999999998367e-06, 4.83400000000217e-06, 4.833000000002696e-06, 4.833000000002696e-06, 4.861000000001836e-06, 4.832999999999227e-06, 4.832999999999227e-06, 4.833000000002696e-06, 4.818999999999657e-06, 4.847000000002266e-06, 4.832999999999227e-06, 4.8199999999991305e-06, 4.791999999999991e-06, 4.860999999998367e-06, 4.889000000000976e-06, 4.847000000002266e-06, 4.8749999999979365e-06, 4.8050000000035564e-06, 4.8200000000026e-06, 4.776999999997478e-06, 4.833000000002696e-06, 4.832999999995757e-06, 4.79200000000346e-06, 4.83400000000217e-06, 4.833000000002696e-06]</msg>
<status status="PASS" starttime="20201115 22:04:17.832" endtime="20201115 22:04:17.834"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:17.828" endtime="20201115 22:04:17.835"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:17.837" endtime="20201115 22:04:17.838"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:17.841" endtime="20201115 22:04:17.860"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:17.839" endtime="20201115 22:04:17.861"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:17.835" endtime="20201115 22:04:17.861"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:17.461" endtime="20201115 22:04:17.862"></status>
</kw>
<msg timestamp="20201115 22:04:17.862" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:17.871" endtime="20201115 22:04:17.893"></status>
</kw>
<msg timestamp="20201115 22:04:17.893" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:17.870" endtime="20201115 22:04:17.893"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:17.896" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:17.894" endtime="20201115 22:04:17.896"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:17.897" endtime="20201115 22:04:17.900"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:17.867" endtime="20201115 22:04:17.900"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:17.865" endtime="20201115 22:04:17.901"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:17.907" endtime="20201115 22:04:18.193"></status>
</kw>
<msg timestamp="20201115 22:04:18.196" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021909944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021914778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:17.906" endtime="20201115 22:04:18.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:18.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021909944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021914778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:18.197" endtime="20201115 22:04:18.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:18.205" endtime="20201115 22:04:18.207"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:17.903" endtime="20201115 22:04:18.207"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:17.901" endtime="20201115 22:04:18.208"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:18.212" level="INFO">${RESULT} = [{'time': 0.021914778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.8339999999987004e-06, 'source_diff': 4.8339999999987004e-06}, {'time': 0.022147722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:04:18.209" endtime="20201115 22:04:18.212"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:18.226" level="INFO">${OVERHEAD} = {'diff': [4.8339999999987004e-06, 4.833000000002696e-06, 4.805000000000087e-06, 4.819000000003126e-06, 4.8339999999987004e-06, 4.8199999999991305e-06, 4.8199999999991305e-06, 4.846999999998797e-06, 4....</msg>
<status status="PASS" starttime="20201115 22:04:18.213" endtime="20201115 22:04:18.226"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:18.231" level="INFO">NAME: 00-overhead-17-remove</msg>
<status status="PASS" starttime="20201115 22:04:18.229" endtime="20201115 22:04:18.231"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:18.233" level="INFO">VALUE: [4.8339999999987004e-06, 4.833000000002696e-06, 4.805000000000087e-06, 4.819000000003126e-06, 4.8339999999987004e-06, 4.8199999999991305e-06, 4.8199999999991305e-06, 4.846999999998797e-06, 4.847000000002266e-06, 4.832999999999227e-06, 4.84800000000174e-06, 4.8199999999991305e-06, 4.805999999999561e-06, 4.805000000000087e-06, 4.764000000000851e-06, 4.875000000001406e-06, 4.832999999999227e-06, 4.832999999999227e-06, 4.791999999999991e-06, 4.818999999999657e-06, 4.832999999999227e-06, 4.847000000002266e-06, 4.832999999999227e-06, 4.832999999999227e-06, 4.791999999999991e-06, 4.805999999999561e-06, 4.778000000000421e-06, 4.832999999999227e-06, 4.791999999999991e-06, 4.8339999999987004e-06, 4.83400000000217e-06, 4.833000000002696e-06, 4.805000000000087e-06, 4.818999999999657e-06, 4.861000000001836e-06, 4.818999999999657e-06, 4.791000000000517e-06, 4.8339999999987004e-06, 4.889000000000976e-06, 4.832999999999227e-06, 4.832999999999227e-06, 4.83400000000217e-06, 4.889000000000976e-06, 4.777999999996951e-06, 4.833000000002696e-06, 4.8189999999961874e-06, 4.8189999999961874e-06, 4.903000000000546e-06, 4.833000000002696e-06, 4.8200000000026e-06]</msg>
<status status="PASS" starttime="20201115 22:04:18.232" endtime="20201115 22:04:18.234"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:18.227" endtime="20201115 22:04:18.234"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:18.237" endtime="20201115 22:04:18.238"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:18.241" endtime="20201115 22:04:18.261"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:18.239" endtime="20201115 22:04:18.263"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:18.235" endtime="20201115 22:04:18.264"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:17.863" endtime="20201115 22:04:18.264"></status>
</kw>
<msg timestamp="20201115 22:04:18.265" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:18.283" endtime="20201115 22:04:18.309"></status>
</kw>
<msg timestamp="20201115 22:04:18.310" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:18.280" endtime="20201115 22:04:18.310"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:18.315" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:18.312" endtime="20201115 22:04:18.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:18.317" endtime="20201115 22:04:18.322"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:18.274" endtime="20201115 22:04:18.323"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:18.270" endtime="20201115 22:04:18.324"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:18.338" endtime="20201115 22:04:18.631"></status>
</kw>
<msg timestamp="20201115 22:04:18.634" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034429486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034434319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:18.335" endtime="20201115 22:04:18.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:18.642" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034429486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034434319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:18.635" endtime="20201115 22:04:18.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:18.644" endtime="20201115 22:04:18.645"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:18.329" endtime="20201115 22:04:18.646"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:18.325" endtime="20201115 22:04:18.646"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:18.651" level="INFO">${RESULT} = [{'time': 0.034434319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.832999999995757e-06, 'source_diff': 4.832999999995757e-06}, {'time': 0.034667833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:18.647" endtime="20201115 22:04:18.651"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:18.665" level="INFO">${OVERHEAD} = {'diff': [4.832999999995757e-06, 4.833000000002696e-06, 4.832999999995757e-06, 4.833000000002696e-06, 4.8189999999961874e-06, 4.847000000002266e-06, 4.833000000002696e-06, 4.819000000003126e-06, 4.833...</msg>
<status status="PASS" starttime="20201115 22:04:18.652" endtime="20201115 22:04:18.665"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:18.670" level="INFO">NAME: 00-overhead-17-remove</msg>
<status status="PASS" starttime="20201115 22:04:18.668" endtime="20201115 22:04:18.670"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:18.672" level="INFO">VALUE: [4.832999999995757e-06, 4.833000000002696e-06, 4.832999999995757e-06, 4.833000000002696e-06, 4.8189999999961874e-06, 4.847000000002266e-06, 4.833000000002696e-06, 4.819000000003126e-06, 4.833000000002696e-06, 4.8189999999961874e-06, 4.83400000000217e-06, 4.832999999995757e-06, 4.83400000000217e-06, 4.84800000000174e-06, 4.846999999995327e-06, 4.847000000002266e-06, 4.875000000001406e-06, 4.83400000000217e-06, 4.819000000003126e-06, 4.83400000000217e-06, 4.832999999995757e-06, 4.777999999996951e-06, 4.832999999995757e-06, 4.8200000000026e-06, 4.833000000002696e-06, 4.833000000002696e-06, 4.7639999999973814e-06, 4.833000000002696e-06, 4.833000000002696e-06, 4.833000000002696e-06, 4.832999999995757e-06, 4.846999999995327e-06, 4.833000000002696e-06, 4.832999999995757e-06, 4.8189999999961874e-06, 4.833999999995231e-06, 4.846999999995327e-06, 4.861000000001836e-06, 4.847000000002266e-06, 4.833000000002696e-06, 4.832999999995757e-06, 4.819000000003126e-06, 4.8200000000026e-06, 4.8189999999961874e-06, 4.8049999999966175e-06, 4.833999999995231e-06, 4.846999999995327e-06, 4.846999999995327e-06, 4.832999999995757e-06, 4.833000000002696e-06]</msg>
<status status="PASS" starttime="20201115 22:04:18.671" endtime="20201115 22:04:18.673"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:18.666" endtime="20201115 22:04:18.673"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:18.676" endtime="20201115 22:04:18.677"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:18.680" endtime="20201115 22:04:18.699"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:18.678" endtime="20201115 22:04:18.700"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:18.674" endtime="20201115 22:04:18.700"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:18.266" endtime="20201115 22:04:18.701"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:16.658" endtime="20201115 22:04:18.701"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:16.657" endtime="20201115 22:04:18.701"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:04:18.703" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:18.712" endtime="20201115 22:04:18.736"></status>
</kw>
<msg timestamp="20201115 22:04:18.737" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:18.711" endtime="20201115 22:04:18.737"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:18.740" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:18.738" endtime="20201115 22:04:18.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:18.741" endtime="20201115 22:04:18.742"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:18.708" endtime="20201115 22:04:18.743"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:18.706" endtime="20201115 22:04:18.743"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:18.750" endtime="20201115 22:04:19.036"></status>
</kw>
<msg timestamp="20201115 22:04:19.040" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023536667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023541722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:18.749" endtime="20201115 22:04:19.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:19.048" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023536667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023541722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:19.041" endtime="20201115 22:04:19.048"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:19.049" endtime="20201115 22:04:19.051"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:18.746" endtime="20201115 22:04:19.051"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:18.744" endtime="20201115 22:04:19.052"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:19.056" level="INFO">${RESULT} = [{'time': 0.023541722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.055000000000337e-06, 'source_diff': 5.055000000000337e-06}, {'time': 0.023794097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:19.053" endtime="20201115 22:04:19.056"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:19.071" level="INFO">${OVERHEAD} = {'diff': [5.055000000000337e-06, 5.041000000000767e-06, 5.041000000000767e-06, 5.055999999999811e-06, 5.110999999998617e-06, 5.028000000000671e-06, 5.028000000000671e-06, 5.041000000000767e-06, 5.0550...</msg>
<status status="PASS" starttime="20201115 22:04:19.057" endtime="20201115 22:04:19.071"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:19.076" level="INFO">NAME: 00-overhead-18-remove</msg>
<status status="PASS" starttime="20201115 22:04:19.075" endtime="20201115 22:04:19.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:19.079" level="INFO">VALUE: [5.055000000000337e-06, 5.041000000000767e-06, 5.041000000000767e-06, 5.055999999999811e-06, 5.110999999998617e-06, 5.028000000000671e-06, 5.028000000000671e-06, 5.041000000000767e-06, 5.055000000000337e-06, 5.042000000000241e-06, 5.041000000000767e-06, 5.042000000000241e-06, 5.055999999999811e-06, 5.0699999999993806e-06, 5.042000000000241e-06, 5.068999999999907e-06, 5.111000000002086e-06, 5.055000000000337e-06, 5.028000000000671e-06, 5.055000000000337e-06, 5.013000000001627e-06, 4.985999999998492e-06, 4.9999999999980616e-06, 5.041999999996771e-06, 5.055999999999811e-06, 5.068999999999907e-06, 5.068999999999907e-06, 5.0549999999968676e-06, 5.041000000000767e-06, 5.055999999999811e-06, 5.042000000000241e-06, 5.0139999999976315e-06, 5.0549999999968676e-06, 5.027999999997201e-06, 5.111000000002086e-06, 5.04200000000371e-06, 5.04200000000371e-06, 5.055999999996341e-06, 5.027999999997201e-06, 5.027000000004667e-06, 5.0550000000038064e-06, 5.125000000001656e-06, 5.05600000000328e-06, 5.0549999999968676e-06, 5.041999999996771e-06, 5.0689999999964375e-06, 5.05600000000328e-06, 5.01400000000457e-06, 5.055999999996341e-06, 4.9999999999980616e-06]</msg>
<status status="PASS" starttime="20201115 22:04:19.077" endtime="20201115 22:04:19.080"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:19.072" endtime="20201115 22:04:19.080"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:19.082" endtime="20201115 22:04:19.084"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:19.086" endtime="20201115 22:04:19.105"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:19.084" endtime="20201115 22:04:19.106"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:19.081" endtime="20201115 22:04:19.107"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:18.704" endtime="20201115 22:04:19.107"></status>
</kw>
<msg timestamp="20201115 22:04:19.107" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:19.117" endtime="20201115 22:04:19.138"></status>
</kw>
<msg timestamp="20201115 22:04:19.138" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:19.115" endtime="20201115 22:04:19.139"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:19.141" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:19.139" endtime="20201115 22:04:19.141"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:19.142" endtime="20201115 22:04:19.145"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:19.112" endtime="20201115 22:04:19.145"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:19.110" endtime="20201115 22:04:19.146"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:19.152" endtime="20201115 22:04:19.439"></status>
</kw>
<msg timestamp="20201115 22:04:19.442" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021776986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021782042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:19.151" endtime="20201115 22:04:19.442"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:19.450" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021776986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021782042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:19.443" endtime="20201115 22:04:19.451"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:19.452" endtime="20201115 22:04:19.453"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:19.148" endtime="20201115 22:04:19.454"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:19.146" endtime="20201115 22:04:19.454"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:19.459" level="INFO">${RESULT} = [{'time': 0.021782042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.055999999999811e-06, 'source_diff': 5.055999999999811e-06}, {'time': 0.022030806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:19.455" endtime="20201115 22:04:19.459"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:19.473" level="INFO">${OVERHEAD} = {'diff': [5.055999999999811e-06, 5.042000000000241e-06, 5.042000000000241e-06, 5.042000000000241e-06, 5.041000000000767e-06, 5.041999999996771e-06, 5.041000000000767e-06, 5.000000000001531e-06, 5.0550...</msg>
<status status="PASS" starttime="20201115 22:04:19.460" endtime="20201115 22:04:19.473"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:19.478" level="INFO">NAME: 00-overhead-18-remove</msg>
<status status="PASS" starttime="20201115 22:04:19.477" endtime="20201115 22:04:19.478"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:19.480" level="INFO">VALUE: [5.055999999999811e-06, 5.042000000000241e-06, 5.042000000000241e-06, 5.042000000000241e-06, 5.041000000000767e-06, 5.041999999996771e-06, 5.041000000000767e-06, 5.000000000001531e-06, 5.055000000000337e-06, 5.05600000000328e-06, 5.014000000001101e-06, 5.028000000000671e-06, 5.07000000000285e-06, 5.028000000000671e-06, 4.985999999998492e-06, 5.097000000002516e-06, 5.068999999999907e-06, 5.041000000000767e-06, 5.068999999999907e-06, 5.028000000000671e-06, 5.055000000000337e-06, 5.041000000000767e-06, 5.028000000000671e-06, 5.0139999999976315e-06, 5.055999999999811e-06, 5.0549999999968676e-06, 5.000000000001531e-06, 5.042000000000241e-06, 5.042000000000241e-06, 5.042000000000241e-06, 5.026999999997728e-06, 5.055999999999811e-06, 5.028000000000671e-06, 5.055999999999811e-06, 5.042000000000241e-06, 5.042000000000241e-06, 5.041000000000767e-06, 5.111000000002086e-06, 5.0550000000038064e-06, 4.985999999998492e-06, 5.040999999997298e-06, 5.02800000000414e-06, 5.0549999999968676e-06, 5.05600000000328e-06, 5.0549999999968676e-06, 5.05600000000328e-06, 5.0550000000038064e-06, 5.0689999999964375e-06, 5.04200000000371e-06, 5.0549999999968676e-06]</msg>
<status status="PASS" starttime="20201115 22:04:19.479" endtime="20201115 22:04:19.481"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:19.474" endtime="20201115 22:04:19.481"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:19.484" endtime="20201115 22:04:19.485"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:19.487" endtime="20201115 22:04:19.507"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:19.486" endtime="20201115 22:04:19.507"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:19.482" endtime="20201115 22:04:19.508"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:19.108" endtime="20201115 22:04:19.508"></status>
</kw>
<msg timestamp="20201115 22:04:19.508" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:19.518" endtime="20201115 22:04:19.540"></status>
</kw>
<msg timestamp="20201115 22:04:19.540" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:19.516" endtime="20201115 22:04:19.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:19.543" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:19.541" endtime="20201115 22:04:19.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:19.544" endtime="20201115 22:04:19.547"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:19.513" endtime="20201115 22:04:19.547"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:19.511" endtime="20201115 22:04:19.548"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:19.554" endtime="20201115 22:04:19.840"></status>
</kw>
<msg timestamp="20201115 22:04:19.843" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020944444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0209495, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:04:19.553" endtime="20201115 22:04:19.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:19.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020944444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0209495, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:04:19.844" endtime="20201115 22:04:19.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:19.852" endtime="20201115 22:04:19.854"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:19.550" endtime="20201115 22:04:19.855"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:19.548" endtime="20201115 22:04:19.855"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:19.859" level="INFO">${RESULT} = [{'time': 0.0209495, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.055999999999811e-06, 'source_diff': 5.055999999999811e-06}, {'time': 0.02120075, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 22:04:19.856" endtime="20201115 22:04:19.860"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:19.874" level="INFO">${OVERHEAD} = {'diff': [5.055999999999811e-06, 5.068999999999907e-06, 5.0839999999989505e-06, 5.042000000000241e-06, 5.055999999999811e-06, 5.042000000000241e-06, 5.055999999999811e-06, 5.041999999996771e-06, 5.055...</msg>
<status status="PASS" starttime="20201115 22:04:19.861" endtime="20201115 22:04:19.874"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:19.879" level="INFO">NAME: 00-overhead-18-remove</msg>
<status status="PASS" starttime="20201115 22:04:19.877" endtime="20201115 22:04:19.879"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:19.881" level="INFO">VALUE: [5.055999999999811e-06, 5.068999999999907e-06, 5.0839999999989505e-06, 5.042000000000241e-06, 5.055999999999811e-06, 5.042000000000241e-06, 5.055999999999811e-06, 5.041999999996771e-06, 5.055999999999811e-06, 5.055999999999811e-06, 5.026999999997728e-06, 5.040999999997298e-06, 5.041000000000767e-06, 5.055999999999811e-06, 5.042000000000241e-06, 5.111000000002086e-06, 5.068999999999907e-06, 5.055999999999811e-06, 5.055000000000337e-06, 5.041000000000767e-06, 5.042000000000241e-06, 5.042000000000241e-06, 5.042000000000241e-06, 5.042000000000241e-06, 5.042000000000241e-06, 5.026999999997728e-06, 5.042000000000241e-06, 5.0549999999968676e-06, 5.013000000001627e-06, 5.042000000000241e-06, 5.028000000000671e-06, 5.11200000000156e-06, 5.055999999999811e-06, 5.055000000000337e-06, 5.055999999999811e-06, 5.082999999999477e-06, 5.055000000000337e-06, 5.000000000001531e-06, 5.042000000000241e-06, 5.014000000001101e-06, 5.0139999999976315e-06, 5.028000000000671e-06, 5.055999999996341e-06, 5.05600000000328e-06, 5.02800000000414e-06, 5.0549999999968676e-06, 5.02800000000414e-06, 5.0000000000050004e-06, 5.055999999996341e-06, 5.041999999996771e-06]</msg>
<status status="PASS" starttime="20201115 22:04:19.880" endtime="20201115 22:04:19.881"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:19.875" endtime="20201115 22:04:19.882"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:19.884" endtime="20201115 22:04:19.886"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:19.888" endtime="20201115 22:04:19.907"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:19.886" endtime="20201115 22:04:19.908"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:19.883" endtime="20201115 22:04:19.909"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:19.509" endtime="20201115 22:04:19.909"></status>
</kw>
<msg timestamp="20201115 22:04:19.909" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:19.918" endtime="20201115 22:04:19.942"></status>
</kw>
<msg timestamp="20201115 22:04:19.942" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:19.917" endtime="20201115 22:04:19.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:19.945" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:19.943" endtime="20201115 22:04:19.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:19.946" endtime="20201115 22:04:19.948"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:19.914" endtime="20201115 22:04:19.949"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:19.912" endtime="20201115 22:04:19.949"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:19.956" endtime="20201115 22:04:20.243"></status>
</kw>
<msg timestamp="20201115 22:04:20.246" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020836889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020841931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:19.955" endtime="20201115 22:04:20.246"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:20.255" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020836889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020841931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:20.247" endtime="20201115 22:04:20.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:20.257" endtime="20201115 22:04:20.259"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:19.952" endtime="20201115 22:04:20.259"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:19.950" endtime="20201115 22:04:20.260"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:20.264" level="INFO">${RESULT} = [{'time': 0.020841931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.042000000000241e-06, 'source_diff': 5.042000000000241e-06}, {'time': 0.021091181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:20.261" endtime="20201115 22:04:20.265"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:20.278" level="INFO">${OVERHEAD} = {'diff': [5.042000000000241e-06, 5.014000000001101e-06, 5.055000000000337e-06, 5.055999999999811e-06, 5.055000000000337e-06, 5.027000000001197e-06, 5.041000000000767e-06, 5.041000000000767e-06, 5.0410...</msg>
<status status="PASS" starttime="20201115 22:04:20.265" endtime="20201115 22:04:20.279"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:20.283" level="INFO">NAME: 00-overhead-18-remove</msg>
<status status="PASS" starttime="20201115 22:04:20.282" endtime="20201115 22:04:20.284"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:20.286" level="INFO">VALUE: [5.042000000000241e-06, 5.014000000001101e-06, 5.055000000000337e-06, 5.055999999999811e-06, 5.055000000000337e-06, 5.027000000001197e-06, 5.041000000000767e-06, 5.041000000000767e-06, 5.041000000000767e-06, 4.971999999998922e-06, 5.028000000000671e-06, 5.028000000000671e-06, 5.055999999999811e-06, 5.0699999999993806e-06, 5.055999999999811e-06, 4.986000000001961e-06, 5.041000000000767e-06, 5.028000000000671e-06, 5.110999999998617e-06, 5.042000000000241e-06, 5.042000000000241e-06, 5.042000000000241e-06, 5.041000000000767e-06, 5.042000000000241e-06, 5.028000000000671e-06, 5.055000000000337e-06, 5.042000000000241e-06, 5.055999999999811e-06, 5.055999999999811e-06, 5.042000000000241e-06, 5.055999999999811e-06, 5.041999999996771e-06, 5.041000000000767e-06, 5.040999999997298e-06, 5.055000000000337e-06, 5.055000000000337e-06, 5.055999999999811e-06, 5.041000000000767e-06, 5.042000000000241e-06, 5.041000000000767e-06, 5.042000000000241e-06, 5.027999999997201e-06, 5.040999999997298e-06, 5.0549999999968676e-06, 5.02800000000414e-06, 5.0000000000050004e-06, 5.0689999999964375e-06, 5.041999999996771e-06, 5.05600000000328e-06, 5.0410000000042365e-06]</msg>
<status status="PASS" starttime="20201115 22:04:20.284" endtime="20201115 22:04:20.286"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:20.279" endtime="20201115 22:04:20.287"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:20.289" endtime="20201115 22:04:20.290"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:20.293" endtime="20201115 22:04:20.312"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:20.291" endtime="20201115 22:04:20.313"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:20.287" endtime="20201115 22:04:20.313"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:19.910" endtime="20201115 22:04:20.314"></status>
</kw>
<msg timestamp="20201115 22:04:20.314" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:20.323" endtime="20201115 22:04:20.346"></status>
</kw>
<msg timestamp="20201115 22:04:20.346" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:20.321" endtime="20201115 22:04:20.346"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:20.349" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:20.347" endtime="20201115 22:04:20.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:20.350" endtime="20201115 22:04:20.352"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:20.319" endtime="20201115 22:04:20.353"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:20.317" endtime="20201115 22:04:20.353"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:20.360" endtime="20201115 22:04:20.647"></status>
</kw>
<msg timestamp="20201115 22:04:20.650" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020870361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020875403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:20.359" endtime="20201115 22:04:20.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:20.658" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020870361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020875403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:20.651" endtime="20201115 22:04:20.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:20.660" endtime="20201115 22:04:20.661"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:20.356" endtime="20201115 22:04:20.662"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:20.354" endtime="20201115 22:04:20.662"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:20.667" level="INFO">${RESULT} = [{'time': 0.020875403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.042000000000241e-06, 'source_diff': 5.042000000000241e-06}, {'time': 0.0211235, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:04:20.663" endtime="20201115 22:04:20.667"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:20.682" level="INFO">${OVERHEAD} = {'diff': [5.042000000000241e-06, 5.042000000000241e-06, 5.028000000000671e-06, 5.05600000000328e-06, 5.040999999997298e-06, 5.055000000000337e-06, 5.042000000000241e-06, 5.055000000000337e-06, 5.05599...</msg>
<status status="PASS" starttime="20201115 22:04:20.668" endtime="20201115 22:04:20.682"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:20.686" level="INFO">NAME: 00-overhead-18-remove</msg>
<status status="PASS" starttime="20201115 22:04:20.685" endtime="20201115 22:04:20.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:20.689" level="INFO">VALUE: [5.042000000000241e-06, 5.042000000000241e-06, 5.028000000000671e-06, 5.05600000000328e-06, 5.040999999997298e-06, 5.055000000000337e-06, 5.042000000000241e-06, 5.055000000000337e-06, 5.055999999999811e-06, 5.082999999999477e-06, 5.042000000000241e-06, 5.082999999999477e-06, 5.09799999999852e-06, 5.0839999999989505e-06, 4.972000000002391e-06, 5.055999999999811e-06, 5.041000000000767e-06, 5.041000000000767e-06, 5.000000000001531e-06, 5.042000000000241e-06, 5.055999999999811e-06, 4.9999999999980616e-06, 5.05600000000328e-06, 5.068999999999907e-06, 5.041000000000767e-06, 5.055999999999811e-06, 5.042000000000241e-06, 5.041000000000767e-06, 5.097000000002516e-06, 5.028000000000671e-06, 5.0139999999976315e-06, 5.028000000000671e-06, 5.028000000000671e-06, 5.055999999999811e-06, 5.055000000000337e-06, 5.027000000001197e-06, 5.041000000000767e-06, 5.040999999997298e-06, 5.042000000000241e-06, 5.041000000000767e-06, 5.055999999999811e-06, 5.055999999999811e-06, 5.041999999996771e-06, 5.04200000000371e-06, 5.040999999997298e-06, 5.041999999996771e-06, 5.05600000000328e-06, 5.055999999996341e-06, 5.02800000000414e-06, 5.0549999999968676e-06]</msg>
<status status="PASS" starttime="20201115 22:04:20.688" endtime="20201115 22:04:20.689"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:20.683" endtime="20201115 22:04:20.690"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:20.692" endtime="20201115 22:04:20.693"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:20.696" endtime="20201115 22:04:20.715"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:20.694" endtime="20201115 22:04:20.716"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:20.690" endtime="20201115 22:04:20.716"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:20.314" endtime="20201115 22:04:20.717"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:18.702" endtime="20201115 22:04:20.717"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:18.701" endtime="20201115 22:04:20.717"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:04:20.719" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:20.729" endtime="20201115 22:04:20.753"></status>
</kw>
<msg timestamp="20201115 22:04:20.753" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:20.727" endtime="20201115 22:04:20.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:20.756" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:20.755" endtime="20201115 22:04:20.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:20.757" endtime="20201115 22:04:20.759"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:20.724" endtime="20201115 22:04:20.759"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:20.722" endtime="20201115 22:04:20.760"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:20.767" endtime="20201115 22:04:21.053"></status>
</kw>
<msg timestamp="20201115 22:04:21.057" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023296097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023301361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:20.765" endtime="20201115 22:04:21.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:21.065" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023296097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023301361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:21.058" endtime="20201115 22:04:21.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:21.066" endtime="20201115 22:04:21.068"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:20.763" endtime="20201115 22:04:21.068"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:20.761" endtime="20201115 22:04:21.069"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:21.073" level="INFO">${RESULT} = [{'time': 0.023301361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.2639999999978815e-06, 'source_diff': 5.2639999999978815e-06}, {'time': 0.023569278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:04:21.070" endtime="20201115 22:04:21.073"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:21.087" level="INFO">${OVERHEAD} = {'diff': [5.2639999999978815e-06, 5.2089999999990755e-06, 5.2499999999983116e-06, 5.2499999999983116e-06, 5.264000000001351e-06, 5.2639999999978815e-06, 5.207999999999602e-06, 5.236000000002211e-06, 5...</msg>
<status status="PASS" starttime="20201115 22:04:21.074" endtime="20201115 22:04:21.088"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:21.092" level="INFO">NAME: 00-overhead-19-remove</msg>
<status status="PASS" starttime="20201115 22:04:21.091" endtime="20201115 22:04:21.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:21.094" level="INFO">VALUE: [5.2639999999978815e-06, 5.2089999999990755e-06, 5.2499999999983116e-06, 5.2499999999983116e-06, 5.264000000001351e-06, 5.2639999999978815e-06, 5.207999999999602e-06, 5.236000000002211e-06, 5.278000000000921e-06, 5.264000000001351e-06, 5.264000000001351e-06, 5.264000000001351e-06, 5.264000000001351e-06, 5.221999999999172e-06, 5.332999999999727e-06, 5.2639999999978815e-06, 5.278000000000921e-06, 5.2639999999978815e-06, 5.277000000001447e-06, 5.2499999999983116e-06, 5.264000000001351e-06, 5.264000000001351e-06, 5.292000000000491e-06, 5.264000000001351e-06, 5.2639999999978815e-06, 5.2639999999978815e-06, 5.2639999999978815e-06, 5.264000000001351e-06, 5.2499999999983116e-06, 5.278000000000921e-06, 5.2639999999978815e-06, 5.2639999999978815e-06, 5.26400000000482e-06, 5.27800000000439e-06, 5.26400000000482e-06, 5.2639999999978815e-06, 5.2499999999983116e-06, 5.277000000004917e-06, 5.27800000000439e-06, 5.2639999999978815e-06, 5.207999999999602e-06, 5.2639999999978815e-06, 5.2499999999983116e-06, 5.2499999999983116e-06, 5.2499999999983116e-06, 5.2639999999978815e-06, 5.2639999999978815e-06, 5.207999999999602e-06, 5.207999999999602e-06, 5.26400000000482e-06]</msg>
<status status="PASS" starttime="20201115 22:04:21.093" endtime="20201115 22:04:21.095"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:21.088" endtime="20201115 22:04:21.095"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:21.098" endtime="20201115 22:04:21.099"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:21.101" endtime="20201115 22:04:21.121"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:21.100" endtime="20201115 22:04:21.121"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:21.096" endtime="20201115 22:04:21.122"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:20.720" endtime="20201115 22:04:21.122"></status>
</kw>
<msg timestamp="20201115 22:04:21.122" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:21.132" endtime="20201115 22:04:21.154"></status>
</kw>
<msg timestamp="20201115 22:04:21.154" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:21.130" endtime="20201115 22:04:21.154"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:21.157" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:21.155" endtime="20201115 22:04:21.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:21.158" endtime="20201115 22:04:21.161"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:21.127" endtime="20201115 22:04:21.161"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:21.125" endtime="20201115 22:04:21.162"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:21.169" endtime="20201115 22:04:21.454"></status>
</kw>
<msg timestamp="20201115 22:04:21.457" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020879028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020884292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:21.167" endtime="20201115 22:04:21.458"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:21.466" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020879028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020884292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:21.458" endtime="20201115 22:04:21.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:21.467" endtime="20201115 22:04:21.469"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:21.164" endtime="20201115 22:04:21.469"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:21.163" endtime="20201115 22:04:21.470"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:21.474" level="INFO">${RESULT} = [{'time': 0.020884292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.2639999999978815e-06, 'source_diff': 5.2639999999978815e-06}, {'time': 0.021154486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:04:21.470" endtime="20201115 22:04:21.474"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:21.488" level="INFO">${OVERHEAD} = {'diff': [5.2639999999978815e-06, 5.332999999999727e-06, 5.264000000001351e-06, 5.250000000001781e-06, 5.264000000001351e-06, 5.304999999997118e-06, 5.262999999998408e-06, 5.264000000001351e-06, 5.264...</msg>
<status status="PASS" starttime="20201115 22:04:21.475" endtime="20201115 22:04:21.488"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:21.493" level="INFO">NAME: 00-overhead-19-remove</msg>
<status status="PASS" starttime="20201115 22:04:21.492" endtime="20201115 22:04:21.493"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:21.495" level="INFO">VALUE: [5.2639999999978815e-06, 5.332999999999727e-06, 5.264000000001351e-06, 5.250000000001781e-06, 5.264000000001351e-06, 5.304999999997118e-06, 5.262999999998408e-06, 5.264000000001351e-06, 5.264000000001351e-06, 5.207999999999602e-06, 5.2639999999978815e-06, 5.262999999998408e-06, 5.2639999999978815e-06, 5.264000000001351e-06, 5.235999999998742e-06, 5.235999999998742e-06, 5.346999999999297e-06, 5.278000000000921e-06, 5.250000000001781e-06, 5.2639999999978815e-06, 5.235999999998742e-06, 5.264000000001351e-06, 5.264000000001351e-06, 5.2639999999978815e-06, 5.264000000001351e-06, 5.264000000001351e-06, 5.278000000000921e-06, 5.264000000001351e-06, 5.250000000001781e-06, 5.194000000000032e-06, 5.264000000001351e-06, 5.236000000002211e-06, 5.264000000001351e-06, 5.250000000001781e-06, 5.264000000001351e-06, 5.264000000001351e-06, 5.264000000001351e-06, 5.235999999998742e-06, 5.2499999999983116e-06, 5.2639999999978815e-06, 5.2499999999983116e-06, 5.207999999999602e-06, 5.2500000000052505e-06, 5.277999999997451e-06, 5.1949999999995056e-06, 5.291999999997021e-06, 5.235999999998742e-06, 5.2499999999983116e-06, 5.276999999997978e-06, 5.29200000000396e-06]</msg>
<status status="PASS" starttime="20201115 22:04:21.494" endtime="20201115 22:04:21.496"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:21.489" endtime="20201115 22:04:21.496"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:21.498" endtime="20201115 22:04:21.500"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:21.502" endtime="20201115 22:04:21.522"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:21.500" endtime="20201115 22:04:21.522"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:21.497" endtime="20201115 22:04:21.523"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:21.123" endtime="20201115 22:04:21.523"></status>
</kw>
<msg timestamp="20201115 22:04:21.523" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:21.533" endtime="20201115 22:04:21.556"></status>
</kw>
<msg timestamp="20201115 22:04:21.556" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:21.531" endtime="20201115 22:04:21.556"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:21.559" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:21.557" endtime="20201115 22:04:21.559"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:21.560" endtime="20201115 22:04:21.562"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:21.528" endtime="20201115 22:04:21.563"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:21.526" endtime="20201115 22:04:21.563"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:21.570" endtime="20201115 22:04:21.855"></status>
</kw>
<msg timestamp="20201115 22:04:21.858" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021307278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021312528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:21.569" endtime="20201115 22:04:21.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:21.867" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021307278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021312528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:21.859" endtime="20201115 22:04:21.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:21.868" endtime="20201115 22:04:21.870"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:21.566" endtime="20201115 22:04:21.870"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:21.564" endtime="20201115 22:04:21.871"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:21.875" level="INFO">${RESULT} = [{'time': 0.021312528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.250000000001781e-06, 'source_diff': 5.250000000001781e-06}, {'time': 0.021582264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:21.871" endtime="20201115 22:04:21.875"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:21.889" level="INFO">${OVERHEAD} = {'diff': [5.250000000001781e-06, 5.278000000000921e-06, 5.2499999999983116e-06, 5.2639999999978815e-06, 5.264000000001351e-06, 5.277999999997451e-06, 5.221999999999172e-06, 5.194000000000032e-06, 5.26...</msg>
<status status="PASS" starttime="20201115 22:04:21.876" endtime="20201115 22:04:21.889"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:21.894" level="INFO">NAME: 00-overhead-19-remove</msg>
<status status="PASS" starttime="20201115 22:04:21.892" endtime="20201115 22:04:21.894"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:21.896" level="INFO">VALUE: [5.250000000001781e-06, 5.278000000000921e-06, 5.2499999999983116e-06, 5.2639999999978815e-06, 5.264000000001351e-06, 5.277999999997451e-06, 5.221999999999172e-06, 5.194000000000032e-06, 5.2639999999978815e-06, 5.250000000001781e-06, 5.250000000001781e-06, 5.264000000001351e-06, 5.2639999999978815e-06, 5.264000000001351e-06, 5.236999999998215e-06, 5.264000000001351e-06, 5.264000000001351e-06, 5.278000000000921e-06, 5.264000000001351e-06, 5.2639999999978815e-06, 5.235999999998742e-06, 5.2639999999978815e-06, 5.264000000001351e-06, 5.2639999999978815e-06, 5.264000000001351e-06, 5.2499999999983116e-06, 5.264000000001351e-06, 5.2499999999983116e-06, 5.2499999999983116e-06, 5.264000000001351e-06, 5.264000000001351e-06, 5.2499999999983116e-06, 5.278000000000921e-06, 5.2639999999978815e-06, 5.277999999997451e-06, 5.250000000001781e-06, 5.264000000001351e-06, 5.250000000001781e-06, 5.2639999999978815e-06, 5.2639999999978815e-06, 5.2639999999978815e-06, 5.2500000000052505e-06, 5.26400000000482e-06, 5.2499999999983116e-06, 5.2639999999978815e-06, 5.2639999999978815e-06, 5.29200000000396e-06, 5.262999999998408e-06, 5.2639999999978815e-06, 5.2639999999978815e-06]</msg>
<status status="PASS" starttime="20201115 22:04:21.895" endtime="20201115 22:04:21.897"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:21.890" endtime="20201115 22:04:21.897"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:21.900" endtime="20201115 22:04:21.901"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:21.903" endtime="20201115 22:04:21.923"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:21.902" endtime="20201115 22:04:21.923"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:21.898" endtime="20201115 22:04:21.924"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:21.524" endtime="20201115 22:04:21.924"></status>
</kw>
<msg timestamp="20201115 22:04:21.929" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:21.939" endtime="20201115 22:04:21.963"></status>
</kw>
<msg timestamp="20201115 22:04:21.964" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:21.937" endtime="20201115 22:04:21.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:21.966" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:21.965" endtime="20201115 22:04:21.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:21.968" endtime="20201115 22:04:21.970"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:21.934" endtime="20201115 22:04:21.971"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:21.932" endtime="20201115 22:04:21.971"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:21.978" endtime="20201115 22:04:22.265"></status>
</kw>
<msg timestamp="20201115 22:04:22.268" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026854986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026860208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:21.977" endtime="20201115 22:04:22.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:22.276" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026854986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026860208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:22.269" endtime="20201115 22:04:22.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:22.278" endtime="20201115 22:04:22.280"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:21.974" endtime="20201115 22:04:22.280"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:21.972" endtime="20201115 22:04:22.281"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:22.285" level="INFO">${RESULT} = [{'time': 0.026860208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.221999999999172e-06, 'source_diff': 5.221999999999172e-06}, {'time': 0.027127181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:22.282" endtime="20201115 22:04:22.286"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:22.301" level="INFO">${OVERHEAD} = {'diff': [5.221999999999172e-06, 5.250000000001781e-06, 5.250000000001781e-06, 5.250000000001781e-06, 5.264000000001351e-06, 5.2499999999983116e-06, 5.235999999998742e-06, 5.332999999999727e-06, 5.221...</msg>
<status status="PASS" starttime="20201115 22:04:22.287" endtime="20201115 22:04:22.301"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:22.306" level="INFO">NAME: 00-overhead-19-remove</msg>
<status status="PASS" starttime="20201115 22:04:22.305" endtime="20201115 22:04:22.306"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:22.308" level="INFO">VALUE: [5.221999999999172e-06, 5.250000000001781e-06, 5.250000000001781e-06, 5.250000000001781e-06, 5.264000000001351e-06, 5.2499999999983116e-06, 5.235999999998742e-06, 5.332999999999727e-06, 5.221999999999172e-06, 5.2499999999983116e-06, 5.262999999998408e-06, 5.194000000000032e-06, 5.264000000001351e-06, 5.264000000001351e-06, 5.264000000001351e-06, 5.264000000001351e-06, 5.2639999999978815e-06, 5.2360000000056806e-06, 5.291999999997021e-06, 5.26400000000482e-06, 5.29200000000396e-06, 5.26400000000482e-06, 5.2499999999983116e-06, 5.2639999999978815e-06, 5.2639999999978815e-06, 5.26400000000482e-06, 5.276999999997978e-06, 5.262999999998408e-06, 5.27800000000439e-06, 5.2639999999978815e-06, 5.2499999999983116e-06, 5.26400000000482e-06, 5.2499999999983116e-06, 5.2499999999983116e-06, 5.2639999999978815e-06, 5.2639999999978815e-06, 5.291999999997021e-06, 5.180000000000462e-06, 5.2639999999978815e-06, 5.2499999999983116e-06, 5.2500000000052505e-06, 5.2639999999978815e-06, 5.2639999999978815e-06, 5.2639999999978815e-06, 5.2500000000052505e-06, 5.235999999998742e-06, 5.2500000000052505e-06, 5.222000000006111e-06, 5.26400000000482e-06, 5.2639999999978815e-06]</msg>
<status status="PASS" starttime="20201115 22:04:22.307" endtime="20201115 22:04:22.309"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:22.302" endtime="20201115 22:04:22.309"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:22.312" endtime="20201115 22:04:22.313"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:22.316" endtime="20201115 22:04:22.335"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:22.314" endtime="20201115 22:04:22.336"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:22.310" endtime="20201115 22:04:22.336"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:21.930" endtime="20201115 22:04:22.337"></status>
</kw>
<msg timestamp="20201115 22:04:22.337" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:22.346" endtime="20201115 22:04:22.370"></status>
</kw>
<msg timestamp="20201115 22:04:22.370" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:22.344" endtime="20201115 22:04:22.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:22.373" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:22.371" endtime="20201115 22:04:22.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:22.374" endtime="20201115 22:04:22.376"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:22.342" endtime="20201115 22:04:22.377"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:22.340" endtime="20201115 22:04:22.378"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:22.384" endtime="20201115 22:04:22.670"></status>
</kw>
<msg timestamp="20201115 22:04:22.673" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02080525, 'source': 'DUT_IC', 'event': 'FALLING',...</msg>
<status status="PASS" starttime="20201115 22:04:22.383" endtime="20201115 22:04:22.673"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:22.681" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02080525, 'source': 'DUT_IC', 'event': 'FALLING',...</msg>
<status status="PASS" starttime="20201115 22:04:22.674" endtime="20201115 22:04:22.682"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:22.683" endtime="20201115 22:04:22.684"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:22.380" endtime="20201115 22:04:22.685"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:22.378" endtime="20201115 22:04:22.686"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:22.690" level="INFO">${RESULT} = [{'time': 0.02080525, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.250000000001781e-06, 'source_diff': 5.250000000001781e-06}, {'time': 0.021074764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:04:22.686" endtime="20201115 22:04:22.690"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:22.704" level="INFO">${OVERHEAD} = {'diff': [5.250000000001781e-06, 5.235999999998742e-06, 5.264000000001351e-06, 5.2499999999983116e-06, 5.2499999999983116e-06, 5.278000000000921e-06, 5.2499999999983116e-06, 5.222999999998645e-06, 5.2...</msg>
<status status="PASS" starttime="20201115 22:04:22.691" endtime="20201115 22:04:22.704"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:22.709" level="INFO">NAME: 00-overhead-19-remove</msg>
<status status="PASS" starttime="20201115 22:04:22.707" endtime="20201115 22:04:22.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:22.711" level="INFO">VALUE: [5.250000000001781e-06, 5.235999999998742e-06, 5.264000000001351e-06, 5.2499999999983116e-06, 5.2499999999983116e-06, 5.278000000000921e-06, 5.2499999999983116e-06, 5.222999999998645e-06, 5.278000000000921e-06, 5.264000000001351e-06, 5.2639999999978815e-06, 5.278000000000921e-06, 5.2499999999983116e-06, 5.250000000001781e-06, 5.262999999998408e-06, 5.236000000002211e-06, 5.2639999999978815e-06, 5.346999999999297e-06, 5.264000000001351e-06, 5.2639999999978815e-06, 5.278000000000921e-06, 5.264000000001351e-06, 5.319999999999631e-06, 5.236000000002211e-06, 5.223000000002115e-06, 5.2089999999990755e-06, 5.306000000000061e-06, 5.250000000001781e-06, 5.2639999999978815e-06, 5.278000000000921e-06, 5.2639999999978815e-06, 5.236000000002211e-06, 5.264000000001351e-06, 5.2639999999978815e-06, 5.2639999999978815e-06, 5.2639999999978815e-06, 5.264000000001351e-06, 5.290999999997548e-06, 5.235999999998742e-06, 5.2499999999983116e-06, 5.277999999997451e-06, 5.277999999997451e-06, 5.276999999997978e-06, 5.2639999999978815e-06, 5.2639999999978815e-06, 5.2499999999983116e-06, 5.2499999999983116e-06, 5.26400000000482e-06, 5.2639999999978815e-06, 5.27800000000439e-06]</msg>
<status status="PASS" starttime="20201115 22:04:22.710" endtime="20201115 22:04:22.712"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:22.705" endtime="20201115 22:04:22.712"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:22.715" endtime="20201115 22:04:22.716"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:22.718" endtime="20201115 22:04:22.738"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:22.717" endtime="20201115 22:04:22.739"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:22.713" endtime="20201115 22:04:22.739"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:22.337" endtime="20201115 22:04:22.739"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:20.718" endtime="20201115 22:04:22.740"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:20.717" endtime="20201115 22:04:22.740"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:04:22.742" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:22.751" endtime="20201115 22:04:22.776"></status>
</kw>
<msg timestamp="20201115 22:04:22.776" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:22.750" endtime="20201115 22:04:22.776"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:22.779" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:22.777" endtime="20201115 22:04:22.779"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:22.780" endtime="20201115 22:04:22.782"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:22.747" endtime="20201115 22:04:22.782"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:22.745" endtime="20201115 22:04:22.783"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:22.789" endtime="20201115 22:04:23.075"></status>
</kw>
<msg timestamp="20201115 22:04:23.078" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023541111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023546583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:22.788" endtime="20201115 22:04:23.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:23.086" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023541111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023546583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:23.079" endtime="20201115 22:04:23.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:23.088" endtime="20201115 22:04:23.089"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:22.785" endtime="20201115 22:04:23.090"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:22.783" endtime="20201115 22:04:23.090"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:23.095" level="INFO">${RESULT} = [{'time': 0.023546583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.471999999999422e-06, 'source_diff': 5.471999999999422e-06}, {'time': 0.023833528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:23.091" endtime="20201115 22:04:23.095"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:23.109" level="INFO">${OVERHEAD} = {'diff': [5.471999999999422e-06, 5.4589999999993255e-06, 5.471999999999422e-06, 5.471999999999422e-06, 5.485999999998992e-06, 5.486999999998465e-06, 5.457999999999852e-06, 5.472000000002891e-06, 5.472...</msg>
<status status="PASS" starttime="20201115 22:04:23.096" endtime="20201115 22:04:23.109"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:23.114" level="INFO">NAME: 00-overhead-20-remove</msg>
<status status="PASS" starttime="20201115 22:04:23.112" endtime="20201115 22:04:23.114"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:23.117" level="INFO">VALUE: [5.471999999999422e-06, 5.4589999999993255e-06, 5.471999999999422e-06, 5.471999999999422e-06, 5.485999999998992e-06, 5.486999999998465e-06, 5.457999999999852e-06, 5.472000000002891e-06, 5.472999999998895e-06, 5.457999999999852e-06, 5.485999999998992e-06, 5.444999999999756e-06, 5.403000000001046e-06, 5.486000000002461e-06, 5.457999999999852e-06, 5.472000000002891e-06, 5.471999999999422e-06, 5.471999999999422e-06, 5.459000000002795e-06, 5.514000000001601e-06, 5.471999999999422e-06, 5.486000000002461e-06, 5.457999999999852e-06, 5.472000000002891e-06, 5.471999999999422e-06, 5.471999999999422e-06, 5.471999999999422e-06, 5.485999999998992e-06, 5.471999999999422e-06, 5.471999999999422e-06, 5.471999999999422e-06, 5.485999999998992e-06, 5.472000000006361e-06, 5.471999999999422e-06, 5.457999999999852e-06, 5.485999999998992e-06, 5.471999999999422e-06, 5.459000000006264e-06, 5.472999999998895e-06, 5.430000000000712e-06, 5.444999999999756e-06, 5.457999999999852e-06, 5.486999999998465e-06, 5.486000000005931e-06, 5.499999999998562e-06, 5.471999999999422e-06, 5.4589999999993255e-06, 5.471999999999422e-06, 5.431000000000186e-06, 5.417000000000616e-06]</msg>
<status status="PASS" starttime="20201115 22:04:23.115" endtime="20201115 22:04:23.117"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:23.110" endtime="20201115 22:04:23.118"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:23.120" endtime="20201115 22:04:23.121"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:23.124" endtime="20201115 22:04:23.143"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:23.122" endtime="20201115 22:04:23.144"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:23.118" endtime="20201115 22:04:23.144"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:22.743" endtime="20201115 22:04:23.144"></status>
</kw>
<msg timestamp="20201115 22:04:23.145" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:23.154" endtime="20201115 22:04:23.177"></status>
</kw>
<msg timestamp="20201115 22:04:23.178" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:23.152" endtime="20201115 22:04:23.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:23.180" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:23.179" endtime="20201115 22:04:23.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:23.181" endtime="20201115 22:04:23.184"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:23.150" endtime="20201115 22:04:23.185"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:23.147" endtime="20201115 22:04:23.185"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:23.192" endtime="20201115 22:04:23.478"></status>
</kw>
<msg timestamp="20201115 22:04:23.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020872167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020877639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:23.190" endtime="20201115 22:04:23.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:23.489" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020872167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020877639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:23.482" endtime="20201115 22:04:23.490"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:23.491" endtime="20201115 22:04:23.492"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:23.188" endtime="20201115 22:04:23.493"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:23.186" endtime="20201115 22:04:23.493"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:23.498" level="INFO">${RESULT} = [{'time': 0.020877639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.471999999999422e-06, 'source_diff': 5.471999999999422e-06}, {'time': 0.021163375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:23.494" endtime="20201115 22:04:23.498"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:23.512" level="INFO">${OVERHEAD} = {'diff': [5.471999999999422e-06, 5.417000000000616e-06, 5.471999999999422e-06, 5.472999999998895e-06, 5.499999999998562e-06, 5.485999999998992e-06, 5.471999999999422e-06, 5.485999999998992e-06, 5.4999...</msg>
<status status="PASS" starttime="20201115 22:04:23.499" endtime="20201115 22:04:23.512"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:23.517" level="INFO">NAME: 00-overhead-20-remove</msg>
<status status="PASS" starttime="20201115 22:04:23.516" endtime="20201115 22:04:23.517"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:23.519" level="INFO">VALUE: [5.471999999999422e-06, 5.417000000000616e-06, 5.471999999999422e-06, 5.472999999998895e-06, 5.499999999998562e-06, 5.485999999998992e-06, 5.471999999999422e-06, 5.485999999998992e-06, 5.499999999998562e-06, 5.444000000000282e-06, 5.471999999999422e-06, 5.472000000002891e-06, 5.444999999999756e-06, 5.471999999999422e-06, 5.471999999999422e-06, 5.471999999999422e-06, 5.4589999999993255e-06, 5.444999999999756e-06, 5.528000000001171e-06, 5.485999999998992e-06, 5.471999999999422e-06, 5.542000000000741e-06, 5.471999999999422e-06, 5.499999999998562e-06, 5.4589999999993255e-06, 5.471999999999422e-06, 5.457999999999852e-06, 5.444000000000282e-06, 5.541000000001267e-06, 5.471999999999422e-06, 5.444999999999756e-06, 5.431000000000186e-06, 5.473000000002365e-06, 5.472999999998895e-06, 5.485999999998992e-06, 5.485999999998992e-06, 5.471999999999422e-06, 5.472000000006361e-06, 5.471999999999422e-06, 5.417000000000616e-06, 5.431000000000186e-06, 5.486000000005931e-06, 5.472000000006361e-06, 5.459000000006264e-06, 5.487000000005404e-06, 5.499999999998562e-06, 5.471999999999422e-06, 5.472999999998895e-06, 5.471999999999422e-06, 5.471999999999422e-06]</msg>
<status status="PASS" starttime="20201115 22:04:23.518" endtime="20201115 22:04:23.520"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:23.513" endtime="20201115 22:04:23.520"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:23.523" endtime="20201115 22:04:23.524"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:23.526" endtime="20201115 22:04:23.546"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:23.525" endtime="20201115 22:04:23.546"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:23.521" endtime="20201115 22:04:23.547"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:23.145" endtime="20201115 22:04:23.547"></status>
</kw>
<msg timestamp="20201115 22:04:23.547" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:23.557" endtime="20201115 22:04:23.582"></status>
</kw>
<msg timestamp="20201115 22:04:23.582" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:23.555" endtime="20201115 22:04:23.583"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:23.585" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:23.584" endtime="20201115 22:04:23.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:23.586" endtime="20201115 22:04:23.589"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:23.552" endtime="20201115 22:04:23.589"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:23.550" endtime="20201115 22:04:23.590"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:23.597" endtime="20201115 22:04:23.883"></status>
</kw>
<msg timestamp="20201115 22:04:23.887" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021681486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021686972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:23.595" endtime="20201115 22:04:23.887"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:23.895" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021681486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021686972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:23.888" endtime="20201115 22:04:23.895"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:23.896" endtime="20201115 22:04:23.898"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:23.592" endtime="20201115 22:04:23.898"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:23.590" endtime="20201115 22:04:23.899"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:23.903" level="INFO">${RESULT} = [{'time': 0.021686972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.485999999998992e-06, 'source_diff': 5.485999999998992e-06}, {'time': 0.021973139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:23.899" endtime="20201115 22:04:23.903"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:23.918" level="INFO">${OVERHEAD} = {'diff': [5.485999999998992e-06, 5.485999999998992e-06, 5.472999999998895e-06, 5.431000000000186e-06, 5.471999999999422e-06, 5.457999999999852e-06, 5.431000000000186e-06, 5.416999999997146e-06, 5.4170...</msg>
<status status="PASS" starttime="20201115 22:04:23.904" endtime="20201115 22:04:23.919"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:23.923" level="INFO">NAME: 00-overhead-20-remove</msg>
<status status="PASS" starttime="20201115 22:04:23.922" endtime="20201115 22:04:23.924"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:23.926" level="INFO">VALUE: [5.485999999998992e-06, 5.485999999998992e-06, 5.472999999998895e-06, 5.431000000000186e-06, 5.471999999999422e-06, 5.457999999999852e-06, 5.431000000000186e-06, 5.416999999997146e-06, 5.417000000000616e-06, 5.4589999999993255e-06, 5.457999999999852e-06, 5.499999999998562e-06, 5.471999999999422e-06, 5.528000000001171e-06, 5.472999999998895e-06, 5.457999999999852e-06, 5.457999999999852e-06, 5.499999999998562e-06, 5.457999999999852e-06, 5.471999999999422e-06, 5.485999999998992e-06, 5.471999999999422e-06, 5.485999999998992e-06, 5.471999999999422e-06, 5.471999999999422e-06, 5.457999999999852e-06, 5.457999999999852e-06, 5.471999999999422e-06, 5.4589999999993255e-06, 5.499999999998562e-06, 5.486999999998465e-06, 5.486000000002461e-06, 5.514000000001601e-06, 5.4589999999993255e-06, 5.458000000006791e-06, 5.431000000000186e-06, 5.457999999999852e-06, 5.471999999999422e-06, 5.4589999999993255e-06, 5.472000000006361e-06, 5.472999999998895e-06, 5.4589999999993255e-06, 5.486999999998465e-06, 5.486999999998465e-06, 5.417000000000616e-06, 5.471999999999422e-06, 5.444000000000282e-06, 5.472999999998895e-06, 5.471999999999422e-06, 5.472000000006361e-06]</msg>
<status status="PASS" starttime="20201115 22:04:23.924" endtime="20201115 22:04:23.926"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:23.919" endtime="20201115 22:04:23.927"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:23.929" endtime="20201115 22:04:23.930"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:23.933" endtime="20201115 22:04:23.952"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:23.931" endtime="20201115 22:04:23.953"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:23.927" endtime="20201115 22:04:23.953"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:23.548" endtime="20201115 22:04:23.953"></status>
</kw>
<msg timestamp="20201115 22:04:23.954" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:23.963" endtime="20201115 22:04:23.988"></status>
</kw>
<msg timestamp="20201115 22:04:23.988" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:23.961" endtime="20201115 22:04:23.989"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:23.991" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:23.990" endtime="20201115 22:04:23.991"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:23.992" endtime="20201115 22:04:23.995"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:23.959" endtime="20201115 22:04:23.995"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:23.956" endtime="20201115 22:04:23.996"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:24.003" endtime="20201115 22:04:24.288"></status>
</kw>
<msg timestamp="20201115 22:04:24.291" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020934472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020939944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:24.001" endtime="20201115 22:04:24.292"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:24.300" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020934472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020939944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:24.293" endtime="20201115 22:04:24.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:24.301" endtime="20201115 22:04:24.303"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:23.998" endtime="20201115 22:04:24.303"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:23.996" endtime="20201115 22:04:24.304"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:24.308" level="INFO">${RESULT} = [{'time': 0.020939944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.471999999999422e-06, 'source_diff': 5.471999999999422e-06}, {'time': 0.021225681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:24.305" endtime="20201115 22:04:24.309"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:24.323" level="INFO">${OVERHEAD} = {'diff': [5.471999999999422e-06, 5.472999999998895e-06, 5.471999999999422e-06, 5.457999999999852e-06, 5.485999999998992e-06, 5.485999999998992e-06, 5.471999999999422e-06, 5.500000000002031e-06, 5.4719...</msg>
<status status="PASS" starttime="20201115 22:04:24.310" endtime="20201115 22:04:24.323"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:24.328" level="INFO">NAME: 00-overhead-20-remove</msg>
<status status="PASS" starttime="20201115 22:04:24.327" endtime="20201115 22:04:24.328"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:24.330" level="INFO">VALUE: [5.471999999999422e-06, 5.472999999998895e-06, 5.471999999999422e-06, 5.457999999999852e-06, 5.485999999998992e-06, 5.485999999998992e-06, 5.471999999999422e-06, 5.500000000002031e-06, 5.471999999999422e-06, 5.486000000002461e-06, 5.485999999998992e-06, 5.499999999998562e-06, 5.472999999998895e-06, 5.472999999998895e-06, 5.486999999998465e-06, 5.4589999999993255e-06, 5.4589999999993255e-06, 5.486000000002461e-06, 5.499999999998562e-06, 5.472000000002891e-06, 5.444999999999756e-06, 5.485999999998992e-06, 5.472999999998895e-06, 5.4589999999993255e-06, 5.472000000002891e-06, 5.486000000002461e-06, 5.457999999999852e-06, 5.472999999998895e-06, 5.471999999999422e-06, 5.5139999999981315e-06, 5.457999999999852e-06, 5.471999999999422e-06, 5.514000000001601e-06, 5.471999999999422e-06, 5.472999999998895e-06, 5.430000000000712e-06, 5.471999999999422e-06, 5.472000000006361e-06, 5.4589999999993255e-06, 5.471999999999422e-06, 5.486999999998465e-06, 5.471999999999422e-06, 5.486999999998465e-06, 5.471999999999422e-06, 5.471999999999422e-06, 5.471999999999422e-06, 5.513000000005597e-06, 5.485999999998992e-06, 5.473000000005834e-06, 5.485999999998992e-06]</msg>
<status status="PASS" starttime="20201115 22:04:24.329" endtime="20201115 22:04:24.331"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:24.324" endtime="20201115 22:04:24.331"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:24.334" endtime="20201115 22:04:24.335"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:24.337" endtime="20201115 22:04:24.357"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:24.336" endtime="20201115 22:04:24.357"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:24.332" endtime="20201115 22:04:24.358"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:23.954" endtime="20201115 22:04:24.358"></status>
</kw>
<msg timestamp="20201115 22:04:24.358" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:24.368" endtime="20201115 22:04:24.394"></status>
</kw>
<msg timestamp="20201115 22:04:24.394" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:24.366" endtime="20201115 22:04:24.395"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:24.397" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:24.395" endtime="20201115 22:04:24.397"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:24.398" endtime="20201115 22:04:24.401"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:24.363" endtime="20201115 22:04:24.401"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:24.361" endtime="20201115 22:04:24.402"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:24.408" endtime="20201115 22:04:24.694"></status>
</kw>
<msg timestamp="20201115 22:04:24.698" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021501097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021506583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:24.407" endtime="20201115 22:04:24.698"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:24.706" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021501097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021506583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:24.699" endtime="20201115 22:04:24.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:24.708" endtime="20201115 22:04:24.709"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:24.404" endtime="20201115 22:04:24.710"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:24.402" endtime="20201115 22:04:24.710"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:24.714" level="INFO">${RESULT} = [{'time': 0.021506583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.485999999998992e-06, 'source_diff': 5.485999999998992e-06}, {'time': 0.021792319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:24.711" endtime="20201115 22:04:24.715"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:24.729" level="INFO">${OVERHEAD} = {'diff': [5.485999999998992e-06, 5.486000000002461e-06, 5.472999999998895e-06, 5.471999999999422e-06, 5.472000000002891e-06, 5.5139999999981315e-06, 5.485999999998992e-06, 5.486000000002461e-06, 5.458...</msg>
<status status="PASS" starttime="20201115 22:04:24.716" endtime="20201115 22:04:24.729"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:24.733" level="INFO">NAME: 00-overhead-20-remove</msg>
<status status="PASS" starttime="20201115 22:04:24.732" endtime="20201115 22:04:24.734"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:24.736" level="INFO">VALUE: [5.485999999998992e-06, 5.486000000002461e-06, 5.472999999998895e-06, 5.471999999999422e-06, 5.472000000002891e-06, 5.5139999999981315e-06, 5.485999999998992e-06, 5.486000000002461e-06, 5.4589999999993255e-06, 5.471999999999422e-06, 5.472000000002891e-06, 5.471999999999422e-06, 5.485999999998992e-06, 5.472999999998895e-06, 5.486000000002461e-06, 5.485999999998992e-06, 5.403000000001046e-06, 5.485999999998992e-06, 5.471999999999422e-06, 5.486000000002461e-06, 5.471999999999422e-06, 5.471999999999422e-06, 5.402000000001572e-06, 5.499999999998562e-06, 5.486000000002461e-06, 5.486000000002461e-06, 5.4589999999993255e-06, 5.500000000002031e-06, 5.485999999998992e-06, 5.485999999998992e-06, 5.485999999998992e-06, 5.472999999998895e-06, 5.485999999998992e-06, 5.471999999999422e-06, 5.486000000002461e-06, 5.4589999999993255e-06, 5.457999999999852e-06, 5.499999999998562e-06, 5.485999999998992e-06, 5.485999999998992e-06, 5.485999999998992e-06, 5.487000000005404e-06, 5.472999999998895e-06, 5.457999999999852e-06, 5.471999999999422e-06, 5.471999999999422e-06, 5.471999999999422e-06, 5.471999999999422e-06, 5.444000000000282e-06, 5.485999999998992e-06]</msg>
<status status="PASS" starttime="20201115 22:04:24.734" endtime="20201115 22:04:24.736"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:24.730" endtime="20201115 22:04:24.737"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:24.739" endtime="20201115 22:04:24.741"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:24.743" endtime="20201115 22:04:24.762"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:24.741" endtime="20201115 22:04:24.763"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:24.738" endtime="20201115 22:04:24.763"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:24.359" endtime="20201115 22:04:24.764"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:22.741" endtime="20201115 22:04:24.764"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:22.740" endtime="20201115 22:04:24.764"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:04:24.767" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:24.776" endtime="20201115 22:04:24.800"></status>
</kw>
<msg timestamp="20201115 22:04:24.800" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:24.774" endtime="20201115 22:04:24.800"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:24.803" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:24.801" endtime="20201115 22:04:24.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:24.804" endtime="20201115 22:04:24.806"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:24.771" endtime="20201115 22:04:24.806"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:24.769" endtime="20201115 22:04:24.807"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:24.814" endtime="20201115 22:04:25.101"></status>
</kw>
<msg timestamp="20201115 22:04:25.104" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023400875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023406556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:24.812" endtime="20201115 22:04:25.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:25.112" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023400875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023406556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:25.105" endtime="20201115 22:04:25.112"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:25.113" endtime="20201115 22:04:25.115"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:24.810" endtime="20201115 22:04:25.115"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:24.808" endtime="20201115 22:04:25.116"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:25.120" level="INFO">${RESULT} = [{'time': 0.023406556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.680999999996966e-06, 'source_diff': 5.680999999996966e-06}, {'time': 0.023713722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:25.117" endtime="20201115 22:04:25.120"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:25.134" level="INFO">${OVERHEAD} = {'diff': [5.680999999996966e-06, 5.680000000000962e-06, 5.708000000000102e-06, 5.694000000000532e-06, 5.681000000000436e-06, 5.694000000000532e-06, 5.695000000000006e-06, 5.653000000001296e-06, 5.7359...</msg>
<status status="PASS" starttime="20201115 22:04:25.121" endtime="20201115 22:04:25.134"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:25.139" level="INFO">NAME: 00-overhead-21-remove</msg>
<status status="PASS" starttime="20201115 22:04:25.138" endtime="20201115 22:04:25.139"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:25.141" level="INFO">VALUE: [5.680999999996966e-06, 5.680000000000962e-06, 5.708000000000102e-06, 5.694000000000532e-06, 5.681000000000436e-06, 5.694000000000532e-06, 5.695000000000006e-06, 5.653000000001296e-06, 5.735999999999242e-06, 5.695000000000006e-06, 5.694000000000532e-06, 5.6939999999970625e-06, 5.667000000000866e-06, 5.695000000000006e-06, 5.721999999999672e-06, 5.694000000000532e-06, 5.624999999998687e-06, 5.7089999999995755e-06, 5.680000000000962e-06, 5.680000000000962e-06, 5.6939999999970625e-06, 5.7079999999966324e-06, 5.695000000000006e-06, 5.7639999999983815e-06, 5.6389999999982565e-06, 5.681000000000436e-06, 5.694000000000532e-06, 5.680000000000962e-06, 5.7229999999991454e-06, 5.735999999999242e-06, 5.694000000000532e-06, 5.695000000000006e-06, 5.667000000000866e-06, 5.708000000000102e-06, 5.651999999994883e-06, 5.681000000000436e-06, 5.667000000000866e-06, 5.694000000000532e-06, 5.680000000000962e-06, 5.695000000000006e-06, 5.695000000000006e-06, 5.680000000000962e-06, 5.681000000000436e-06, 5.681000000000436e-06, 5.680000000000962e-06, 5.7089999999995755e-06, 5.694000000000532e-06, 5.721999999999672e-06, 5.695000000000006e-06, 5.665999999994453e-06]</msg>
<status status="PASS" starttime="20201115 22:04:25.140" endtime="20201115 22:04:25.142"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:25.135" endtime="20201115 22:04:25.142"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:25.145" endtime="20201115 22:04:25.146"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:25.148" endtime="20201115 22:04:25.168"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:25.147" endtime="20201115 22:04:25.169"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:25.143" endtime="20201115 22:04:25.169"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:24.767" endtime="20201115 22:04:25.169"></status>
</kw>
<msg timestamp="20201115 22:04:25.170" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:25.179" endtime="20201115 22:04:25.204"></status>
</kw>
<msg timestamp="20201115 22:04:25.205" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:25.177" endtime="20201115 22:04:25.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:25.208" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:25.206" endtime="20201115 22:04:25.208"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:25.209" endtime="20201115 22:04:25.212"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:25.174" endtime="20201115 22:04:25.212"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:25.172" endtime="20201115 22:04:25.213"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:25.219" endtime="20201115 22:04:25.507"></status>
</kw>
<msg timestamp="20201115 22:04:25.510" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021022625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021028306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:25.218" endtime="20201115 22:04:25.510"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:25.518" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021022625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021028306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:25.511" endtime="20201115 22:04:25.518"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:25.519" endtime="20201115 22:04:25.521"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:25.215" endtime="20201115 22:04:25.522"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:25.213" endtime="20201115 22:04:25.522"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:25.526" level="INFO">${RESULT} = [{'time': 0.021028306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.681000000000436e-06, 'source_diff': 5.681000000000436e-06}, {'time': 0.021335972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:25.523" endtime="20201115 22:04:25.526"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:25.541" level="INFO">${OVERHEAD} = {'diff': [5.681000000000436e-06, 5.639000000001726e-06, 5.694000000000532e-06, 5.681000000000436e-06, 5.666999999997396e-06, 5.694000000000532e-06, 5.695000000000006e-06, 5.653000000001296e-06, 5.7360...</msg>
<status status="PASS" starttime="20201115 22:04:25.527" endtime="20201115 22:04:25.542"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:25.546" level="INFO">NAME: 00-overhead-21-remove</msg>
<status status="PASS" starttime="20201115 22:04:25.545" endtime="20201115 22:04:25.546"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:25.549" level="INFO">VALUE: [5.681000000000436e-06, 5.639000000001726e-06, 5.694000000000532e-06, 5.681000000000436e-06, 5.666999999997396e-06, 5.694000000000532e-06, 5.695000000000006e-06, 5.653000000001296e-06, 5.736000000002711e-06, 5.666999999997396e-06, 5.679999999997493e-06, 5.708000000000102e-06, 5.681000000000436e-06, 5.7089999999995755e-06, 5.638000000002252e-06, 5.7639999999983815e-06, 5.679999999997493e-06, 5.708000000000102e-06, 5.639000000001726e-06, 5.680999999996966e-06, 5.653000000001296e-06, 5.625000000002156e-06, 5.7079999999966324e-06, 5.6939999999970625e-06, 5.680000000000962e-06, 5.694000000000532e-06, 5.7229999999991454e-06, 5.709000000003045e-06, 5.750000000002281e-06, 5.708000000000102e-06, 5.667000000000866e-06, 5.667000000000866e-06, 5.695000000000006e-06, 5.694000000000532e-06, 5.666000000001392e-06, 5.679999999994023e-06, 5.666999999993927e-06, 5.694000000000532e-06, 5.666000000001392e-06, 5.721999999999672e-06, 5.666000000001392e-06, 5.708000000000102e-06, 5.694000000000532e-06, 5.680000000000962e-06, 5.695000000000006e-06, 5.694000000000532e-06, 5.695000000000006e-06, 5.680000000000962e-06, 5.681000000000436e-06, 5.638999999994787e-06]</msg>
<status status="PASS" starttime="20201115 22:04:25.547" endtime="20201115 22:04:25.549"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:25.542" endtime="20201115 22:04:25.550"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:25.552" endtime="20201115 22:04:25.553"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:25.555" endtime="20201115 22:04:25.575"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:25.554" endtime="20201115 22:04:25.576"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:25.550" endtime="20201115 22:04:25.576"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:25.170" endtime="20201115 22:04:25.576"></status>
</kw>
<msg timestamp="20201115 22:04:25.577" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:25.586" endtime="20201115 22:04:25.610"></status>
</kw>
<msg timestamp="20201115 22:04:25.610" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:25.584" endtime="20201115 22:04:25.611"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:25.613" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:25.611" endtime="20201115 22:04:25.613"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:25.614" endtime="20201115 22:04:25.617"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:25.581" endtime="20201115 22:04:25.617"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:25.579" endtime="20201115 22:04:25.618"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:25.624" endtime="20201115 22:04:25.911"></status>
</kw>
<msg timestamp="20201115 22:04:25.914" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021363014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021368792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:25.623" endtime="20201115 22:04:25.914"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:25.922" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021363014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021368792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:25.915" endtime="20201115 22:04:25.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:25.923" endtime="20201115 22:04:25.925"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:25.620" endtime="20201115 22:04:25.926"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:25.618" endtime="20201115 22:04:25.926"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:25.930" level="INFO">${RESULT} = [{'time': 0.021368792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.778000000001421e-06, 'source_diff': 5.778000000001421e-06}, {'time': 0.021674403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:25.927" endtime="20201115 22:04:25.931"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:25.944" level="INFO">${OVERHEAD} = {'diff': [5.778000000001421e-06, 5.7089999999995755e-06, 5.681000000000436e-06, 5.653000000001296e-06, 5.7089999999995755e-06, 5.695000000000006e-06, 5.694000000000532e-06, 5.695000000000006e-06, 5.62...</msg>
<status status="PASS" starttime="20201115 22:04:25.931" endtime="20201115 22:04:25.945"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:25.949" level="INFO">NAME: 00-overhead-21-remove</msg>
<status status="PASS" starttime="20201115 22:04:25.948" endtime="20201115 22:04:25.949"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:25.952" level="INFO">VALUE: [5.778000000001421e-06, 5.7089999999995755e-06, 5.681000000000436e-06, 5.653000000001296e-06, 5.7089999999995755e-06, 5.695000000000006e-06, 5.694000000000532e-06, 5.695000000000006e-06, 5.624999999998687e-06, 5.694000000000532e-06, 5.680000000000962e-06, 5.695000000000006e-06, 5.708000000000102e-06, 5.653000000001296e-06, 5.695000000000006e-06, 5.7639999999983815e-06, 5.694000000000532e-06, 5.625000000002156e-06, 5.680999999996966e-06, 5.681000000000436e-06, 5.694000000000532e-06, 5.708000000000102e-06, 5.7089999999995755e-06, 5.708000000000102e-06, 5.694000000000532e-06, 5.749999999998812e-06, 5.695000000000006e-06, 5.681000000000436e-06, 5.666000000001392e-06, 5.624999999998687e-06, 5.638000000002252e-06, 5.7089999999995755e-06, 5.694000000000532e-06, 5.653000000001296e-06, 5.680000000000962e-06, 5.695000000000006e-06, 5.694000000000532e-06, 5.695000000000006e-06, 5.694000000000532e-06, 5.695000000000006e-06, 5.695000000000006e-06, 5.695000000000006e-06, 5.708000000000102e-06, 5.694000000000532e-06, 5.708000000000102e-06, 5.694000000000532e-06, 5.694000000000532e-06, 5.694000000000532e-06, 5.694000000000532e-06, 5.708000000000102e-06]</msg>
<status status="PASS" starttime="20201115 22:04:25.950" endtime="20201115 22:04:25.952"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:25.945" endtime="20201115 22:04:25.953"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:25.955" endtime="20201115 22:04:25.956"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:25.958" endtime="20201115 22:04:25.978"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:25.957" endtime="20201115 22:04:25.979"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:25.953" endtime="20201115 22:04:25.979"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:25.577" endtime="20201115 22:04:25.980"></status>
</kw>
<msg timestamp="20201115 22:04:25.980" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:25.989" endtime="20201115 22:04:26.016"></status>
</kw>
<msg timestamp="20201115 22:04:26.016" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:25.988" endtime="20201115 22:04:26.016"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:26.019" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:26.017" endtime="20201115 22:04:26.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:26.020" endtime="20201115 22:04:26.022"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:25.985" endtime="20201115 22:04:26.023"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:25.983" endtime="20201115 22:04:26.023"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:26.030" endtime="20201115 22:04:26.316"></status>
</kw>
<msg timestamp="20201115 22:04:26.320" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021344917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021350625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:26.028" endtime="20201115 22:04:26.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:26.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021344917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021350625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:26.321" endtime="20201115 22:04:26.328"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:26.329" endtime="20201115 22:04:26.331"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:26.026" endtime="20201115 22:04:26.331"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:26.024" endtime="20201115 22:04:26.332"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:26.336" level="INFO">${RESULT} = [{'time': 0.021350625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.708000000000102e-06, 'source_diff': 5.708000000000102e-06}, {'time': 0.021656486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:26.332" endtime="20201115 22:04:26.336"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:26.350" level="INFO">${OVERHEAD} = {'diff': [5.708000000000102e-06, 5.6529999999978264e-06, 5.6939999999970625e-06, 5.695000000000006e-06, 5.625000000002156e-06, 5.695000000000006e-06, 5.681000000000436e-06, 5.681000000000436e-06, 5.70...</msg>
<status status="PASS" starttime="20201115 22:04:26.337" endtime="20201115 22:04:26.351"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:26.355" level="INFO">NAME: 00-overhead-21-remove</msg>
<status status="PASS" starttime="20201115 22:04:26.354" endtime="20201115 22:04:26.356"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:26.358" level="INFO">VALUE: [5.708000000000102e-06, 5.6529999999978264e-06, 5.6939999999970625e-06, 5.695000000000006e-06, 5.625000000002156e-06, 5.695000000000006e-06, 5.681000000000436e-06, 5.681000000000436e-06, 5.708000000000102e-06, 5.708000000000102e-06, 5.667000000000866e-06, 5.681000000000436e-06, 5.694000000000532e-06, 5.667000000000866e-06, 5.695000000000006e-06, 5.667000000000866e-06, 5.694000000000532e-06, 5.695000000000006e-06, 5.695000000000006e-06, 5.667000000000866e-06, 5.695000000000006e-06, 5.695000000000006e-06, 5.680000000000962e-06, 5.681000000000436e-06, 5.694000000000532e-06, 5.679999999997493e-06, 5.695000000000006e-06, 5.708000000000102e-06, 5.681000000000436e-06, 5.708000000000102e-06, 5.694000000000532e-06, 5.695000000000006e-06, 5.679999999997493e-06, 5.680000000000962e-06, 5.735999999999242e-06, 5.681000000000436e-06, 5.681000000000436e-06, 5.680000000000962e-06, 5.694000000000532e-06, 5.695000000000006e-06, 5.681000000000436e-06, 5.708000000000102e-06, 5.694000000000532e-06, 5.749999999998812e-06, 5.694000000000532e-06, 5.680000000000962e-06, 5.666000000001392e-06, 5.667000000000866e-06, 5.735999999999242e-06, 5.708000000000102e-06]</msg>
<status status="PASS" starttime="20201115 22:04:26.357" endtime="20201115 22:04:26.358"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:26.352" endtime="20201115 22:04:26.359"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:26.362" endtime="20201115 22:04:26.363"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:26.365" endtime="20201115 22:04:26.385"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:26.364" endtime="20201115 22:04:26.386"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:26.360" endtime="20201115 22:04:26.386"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:25.981" endtime="20201115 22:04:26.386"></status>
</kw>
<msg timestamp="20201115 22:04:26.387" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:26.396" endtime="20201115 22:04:26.422"></status>
</kw>
<msg timestamp="20201115 22:04:26.422" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:26.394" endtime="20201115 22:04:26.422"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:26.425" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:26.423" endtime="20201115 22:04:26.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:26.426" endtime="20201115 22:04:26.428"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:26.392" endtime="20201115 22:04:26.429"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:26.389" endtime="20201115 22:04:26.429"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:26.436" endtime="20201115 22:04:26.721"></status>
</kw>
<msg timestamp="20201115 22:04:26.724" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02174375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021749431, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:04:26.435" endtime="20201115 22:04:26.725"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:26.733" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02174375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021749431, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:04:26.726" endtime="20201115 22:04:26.733"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:26.734" endtime="20201115 22:04:26.736"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:26.432" endtime="20201115 22:04:26.736"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:26.430" endtime="20201115 22:04:26.737"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:26.741" level="INFO">${RESULT} = [{'time': 0.021749431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.681000000000436e-06, 'source_diff': 5.681000000000436e-06}, {'time': 0.022056083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:26.737" endtime="20201115 22:04:26.741"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:26.755" level="INFO">${OVERHEAD} = {'diff': [5.681000000000436e-06, 5.639000000001726e-06, 5.680000000000962e-06, 5.681000000000436e-06, 5.694000000000532e-06, 5.6939999999970625e-06, 5.694000000000532e-06, 5.681000000000436e-06, 5.611...</msg>
<status status="PASS" starttime="20201115 22:04:26.742" endtime="20201115 22:04:26.755"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:26.760" level="INFO">NAME: 00-overhead-21-remove</msg>
<status status="PASS" starttime="20201115 22:04:26.759" endtime="20201115 22:04:26.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:26.762" level="INFO">VALUE: [5.681000000000436e-06, 5.639000000001726e-06, 5.680000000000962e-06, 5.681000000000436e-06, 5.694000000000532e-06, 5.6939999999970625e-06, 5.694000000000532e-06, 5.681000000000436e-06, 5.61199999999859e-06, 5.681000000000436e-06, 5.680000000000962e-06, 5.708000000000102e-06, 5.708000000000102e-06, 5.6389999999982565e-06, 5.681000000000436e-06, 5.681000000000436e-06, 5.694000000000532e-06, 5.708000000000102e-06, 5.681000000000436e-06, 5.7089999999995755e-06, 5.708000000000102e-06, 5.681000000000436e-06, 5.680000000000962e-06, 5.695000000000006e-06, 5.749999999998812e-06, 5.749999999998812e-06, 5.681000000000436e-06, 5.653000000001296e-06, 5.667000000000866e-06, 5.666000000001392e-06, 5.695000000000006e-06, 5.694000000000532e-06, 5.695000000000006e-06, 5.666000000001392e-06, 5.708000000000102e-06, 5.665999999994453e-06, 5.694000000000532e-06, 5.666000000001392e-06, 5.694000000000532e-06, 5.665999999994453e-06, 5.694000000000532e-06, 5.681000000000436e-06, 5.653000000001296e-06, 5.695000000000006e-06, 5.694000000000532e-06, 5.694000000000532e-06, 5.694000000000532e-06, 5.639000000001726e-06, 5.695000000000006e-06, 5.666000000001392e-06]</msg>
<status status="PASS" starttime="20201115 22:04:26.761" endtime="20201115 22:04:26.763"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:26.756" endtime="20201115 22:04:26.764"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:26.766" endtime="20201115 22:04:26.767"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:26.770" endtime="20201115 22:04:26.789"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:26.768" endtime="20201115 22:04:26.790"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:26.764" endtime="20201115 22:04:26.790"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:26.387" endtime="20201115 22:04:26.790"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:24.765" endtime="20201115 22:04:26.791"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:24.764" endtime="20201115 22:04:26.791"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:04:26.793" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:26.802" endtime="20201115 22:04:26.831"></status>
</kw>
<msg timestamp="20201115 22:04:26.831" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:26.801" endtime="20201115 22:04:26.832"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:26.834" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:26.833" endtime="20201115 22:04:26.834"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:26.835" endtime="20201115 22:04:26.837"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:26.798" endtime="20201115 22:04:26.838"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:26.796" endtime="20201115 22:04:26.838"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:26.845" endtime="20201115 22:04:27.130"></status>
</kw>
<msg timestamp="20201115 22:04:27.133" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024268569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024274556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:26.843" endtime="20201115 22:04:27.134"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:27.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024268569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024274556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:27.135" endtime="20201115 22:04:27.142"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:27.143" endtime="20201115 22:04:27.145"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:26.840" endtime="20201115 22:04:27.145"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:26.839" endtime="20201115 22:04:27.146"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:27.150" level="INFO">${RESULT} = [{'time': 0.024274556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.986999999998965e-06, 'source_diff': 5.986999999998965e-06}, {'time': 0.024600236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:27.146" endtime="20201115 22:04:27.150"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:27.165" level="INFO">${OVERHEAD} = {'diff': [5.986999999998965e-06, 5.930000000001212e-06, 5.902000000002072e-06, 5.9029999999980765e-06, 5.971999999999922e-06, 5.903000000001546e-06, 5.860999999999367e-06, 5.972000000003391e-06, 5.903...</msg>
<status status="PASS" starttime="20201115 22:04:27.151" endtime="20201115 22:04:27.165"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:27.170" level="INFO">NAME: 00-overhead-22-remove</msg>
<status status="PASS" starttime="20201115 22:04:27.169" endtime="20201115 22:04:27.170"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:27.176" level="INFO">VALUE: [5.986999999998965e-06, 5.930000000001212e-06, 5.902000000002072e-06, 5.9029999999980765e-06, 5.971999999999922e-06, 5.903000000001546e-06, 5.860999999999367e-06, 5.972000000003391e-06, 5.903000000001546e-06, 5.915999999998173e-06, 5.860999999999367e-06, 5.915999999998173e-06, 5.930000000001212e-06, 5.901999999998603e-06, 5.902000000002072e-06, 5.915999999998173e-06, 5.903000000001546e-06, 5.931000000000686e-06, 5.861000000002836e-06, 5.874999999998937e-06, 5.889000000001976e-06, 5.8889999999985065e-06, 5.916000000001642e-06, 5.860999999995897e-06, 5.902000000002072e-06, 5.902999999994607e-06, 5.916999999994177e-06, 5.943999999993843e-06, 5.917000000001116e-06, 5.916999999994177e-06, 5.917000000001116e-06, 5.917000000001116e-06, 5.916999999994177e-06, 5.889000000001976e-06, 5.903000000001546e-06, 5.902000000002072e-06, 5.889000000001976e-06, 5.902999999994607e-06, 5.944000000000782e-06, 5.917000000001116e-06, 5.903000000001546e-06, 5.889000000001976e-06, 5.888999999995037e-06, 5.929999999994273e-06, 5.902999999994607e-06, 5.846999999996327e-06, 5.916000000001642e-06, 5.917000000001116e-06, 5.916999999994177e-06, 5.903000000001546e-06]</msg>
<status status="PASS" starttime="20201115 22:04:27.171" endtime="20201115 22:04:27.177"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:27.166" endtime="20201115 22:04:27.177"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:27.180" endtime="20201115 22:04:27.181"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:27.184" endtime="20201115 22:04:27.203"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:27.182" endtime="20201115 22:04:27.204"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:27.178" endtime="20201115 22:04:27.204"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:26.794" endtime="20201115 22:04:27.204"></status>
</kw>
<msg timestamp="20201115 22:04:27.205" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:27.214" endtime="20201115 22:04:27.241"></status>
</kw>
<msg timestamp="20201115 22:04:27.241" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:27.212" endtime="20201115 22:04:27.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:27.244" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:27.242" endtime="20201115 22:04:27.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:27.245" endtime="20201115 22:04:27.248"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:27.210" endtime="20201115 22:04:27.248"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:27.207" endtime="20201115 22:04:27.249"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:27.255" endtime="20201115 22:04:27.542"></status>
</kw>
<msg timestamp="20201115 22:04:27.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021008625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021014514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:27.254" endtime="20201115 22:04:27.546"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:27.553" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021008625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021014514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:27.546" endtime="20201115 22:04:27.554"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:27.555" endtime="20201115 22:04:27.556"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:27.251" endtime="20201115 22:04:27.557"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:27.249" endtime="20201115 22:04:27.557"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:27.562" level="INFO">${RESULT} = [{'time': 0.021014514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.889000000001976e-06, 'source_diff': 5.889000000001976e-06}, {'time': 0.021339792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:27.558" endtime="20201115 22:04:27.562"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:27.576" level="INFO">${OVERHEAD} = {'diff': [5.889000000001976e-06, 5.9029999999980765e-06, 5.903000000001546e-06, 5.902000000002072e-06, 5.916999999997646e-06, 5.917000000001116e-06, 5.903000000001546e-06, 5.917000000001116e-06, 5.888...</msg>
<status status="PASS" starttime="20201115 22:04:27.563" endtime="20201115 22:04:27.576"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:27.581" level="INFO">NAME: 00-overhead-22-remove</msg>
<status status="PASS" starttime="20201115 22:04:27.580" endtime="20201115 22:04:27.581"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:27.583" level="INFO">VALUE: [5.889000000001976e-06, 5.9029999999980765e-06, 5.903000000001546e-06, 5.902000000002072e-06, 5.916999999997646e-06, 5.917000000001116e-06, 5.903000000001546e-06, 5.917000000001116e-06, 5.8889999999985065e-06, 5.9029999999980765e-06, 5.916999999997646e-06, 5.901999999998603e-06, 5.903000000001546e-06, 5.9029999999980765e-06, 5.971999999999922e-06, 5.901999999998603e-06, 5.8889999999985065e-06, 5.902000000002072e-06, 5.917000000001116e-06, 5.903000000001546e-06, 5.874999999998937e-06, 5.903000000001546e-06, 5.931000000000686e-06, 5.903000000001546e-06, 5.875000000002406e-06, 5.903000000001546e-06, 5.9439999999973125e-06, 5.916000000001642e-06, 5.9029999999980765e-06, 5.945000000000256e-06, 5.917000000001116e-06, 5.8889999999985065e-06, 5.888999999995037e-06, 5.903000000001546e-06, 5.903000000001546e-06, 5.917000000001116e-06, 5.889000000001976e-06, 5.916000000001642e-06, 5.916000000001642e-06, 5.889000000001976e-06, 5.902999999994607e-06, 5.902999999994607e-06, 5.916000000001642e-06, 5.916000000001642e-06, 5.875000000002406e-06, 5.903000000001546e-06, 5.903000000001546e-06, 5.903000000001546e-06, 5.875000000002406e-06, 5.888000000002502e-06]</msg>
<status status="PASS" starttime="20201115 22:04:27.582" endtime="20201115 22:04:27.584"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:27.577" endtime="20201115 22:04:27.584"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:27.587" endtime="20201115 22:04:27.588"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:27.590" endtime="20201115 22:04:27.610"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:27.589" endtime="20201115 22:04:27.610"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:27.585" endtime="20201115 22:04:27.611"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:27.205" endtime="20201115 22:04:27.611"></status>
</kw>
<msg timestamp="20201115 22:04:27.611" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:27.621" endtime="20201115 22:04:27.650"></status>
</kw>
<msg timestamp="20201115 22:04:27.650" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:27.619" endtime="20201115 22:04:27.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:27.653" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:27.651" endtime="20201115 22:04:27.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:27.654" endtime="20201115 22:04:27.657"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:27.616" endtime="20201115 22:04:27.657"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:27.614" endtime="20201115 22:04:27.658"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:27.664" endtime="20201115 22:04:27.950"></status>
</kw>
<msg timestamp="20201115 22:04:27.953" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021919958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021925861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:27.663" endtime="20201115 22:04:27.954"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:27.962" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021919958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021925861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:27.955" endtime="20201115 22:04:27.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:27.963" endtime="20201115 22:04:27.965"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:27.660" endtime="20201115 22:04:27.965"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:27.658" endtime="20201115 22:04:27.966"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:27.970" level="INFO">${RESULT} = [{'time': 0.021925861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.903000000001546e-06, 'source_diff': 5.903000000001546e-06}, {'time': 0.022252806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:27.966" endtime="20201115 22:04:27.970"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:27.984" level="INFO">${OVERHEAD} = {'diff': [5.903000000001546e-06, 5.917000000001116e-06, 5.903000000001546e-06, 5.903000000001546e-06, 5.9439999999973125e-06, 5.902000000002072e-06, 5.9029999999980765e-06, 5.971999999999922e-06, 5.90...</msg>
<status status="PASS" starttime="20201115 22:04:27.971" endtime="20201115 22:04:27.985"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:27.989" level="INFO">NAME: 00-overhead-22-remove</msg>
<status status="PASS" starttime="20201115 22:04:27.988" endtime="20201115 22:04:27.990"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:27.992" level="INFO">VALUE: [5.903000000001546e-06, 5.917000000001116e-06, 5.903000000001546e-06, 5.903000000001546e-06, 5.9439999999973125e-06, 5.902000000002072e-06, 5.9029999999980765e-06, 5.971999999999922e-06, 5.9029999999980765e-06, 5.903000000001546e-06, 5.9029999999980765e-06, 5.917000000001116e-06, 5.916999999997646e-06, 5.9029999999980765e-06, 5.916999999997646e-06, 5.889000000001976e-06, 5.916000000001642e-06, 5.903000000001546e-06, 5.903000000001546e-06, 5.916000000001642e-06, 5.916000000001642e-06, 5.945000000000256e-06, 5.9029999999980765e-06, 5.874999999998937e-06, 5.8889999999985065e-06, 5.917000000001116e-06, 5.903000000001546e-06, 5.833000000000227e-06, 5.901999999998603e-06, 5.917000000001116e-06, 5.888000000002502e-06, 5.903000000001546e-06, 5.903000000001546e-06, 5.889000000001976e-06, 5.901999999995133e-06, 5.888999999995037e-06, 5.902999999994607e-06, 5.930000000001212e-06, 5.903000000001546e-06, 5.903000000001546e-06, 5.916000000001642e-06, 5.903000000001546e-06, 5.902000000002072e-06, 5.943999999993843e-06, 5.889000000001976e-06, 5.944000000000782e-06, 5.889000000001976e-06, 5.917000000001116e-06, 5.888999999995037e-06, 5.888999999995037e-06]</msg>
<status status="PASS" starttime="20201115 22:04:27.990" endtime="20201115 22:04:27.992"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:27.985" endtime="20201115 22:04:27.993"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:27.995" endtime="20201115 22:04:27.996"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:27.999" endtime="20201115 22:04:28.018"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:27.997" endtime="20201115 22:04:28.019"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:27.993" endtime="20201115 22:04:28.019"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:27.612" endtime="20201115 22:04:28.020"></status>
</kw>
<msg timestamp="20201115 22:04:28.020" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:28.029" endtime="20201115 22:04:28.055"></status>
</kw>
<msg timestamp="20201115 22:04:28.056" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:28.028" endtime="20201115 22:04:28.056"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:28.058" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:28.057" endtime="20201115 22:04:28.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:28.059" endtime="20201115 22:04:28.062"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:28.025" endtime="20201115 22:04:28.062"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:28.023" endtime="20201115 22:04:28.063"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:28.070" endtime="20201115 22:04:28.356"></status>
</kw>
<msg timestamp="20201115 22:04:28.359" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020979847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02098575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:04:28.068" endtime="20201115 22:04:28.359"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:28.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020979847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02098575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:04:28.360" endtime="20201115 22:04:28.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:28.369" endtime="20201115 22:04:28.371"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:28.065" endtime="20201115 22:04:28.372"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:28.063" endtime="20201115 22:04:28.372"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:28.377" level="INFO">${RESULT} = [{'time': 0.02098575, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.903000000001546e-06, 'source_diff': 5.903000000001546e-06}, {'time': 0.021310042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:04:28.373" endtime="20201115 22:04:28.377"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:28.391" level="INFO">${OVERHEAD} = {'diff': [5.903000000001546e-06, 5.917000000001116e-06, 5.889000000001976e-06, 5.916000000001642e-06, 5.929999999997743e-06, 5.9029999999980765e-06, 5.8889999999985065e-06, 5.9029999999980765e-06, 5.9...</msg>
<status status="PASS" starttime="20201115 22:04:28.378" endtime="20201115 22:04:28.392"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:28.396" level="INFO">NAME: 00-overhead-22-remove</msg>
<status status="PASS" starttime="20201115 22:04:28.395" endtime="20201115 22:04:28.396"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:28.399" level="INFO">VALUE: [5.903000000001546e-06, 5.917000000001116e-06, 5.889000000001976e-06, 5.916000000001642e-06, 5.929999999997743e-06, 5.9029999999980765e-06, 5.8889999999985065e-06, 5.9029999999980765e-06, 5.915999999998173e-06, 5.8889999999985065e-06, 5.916999999997646e-06, 5.901999999998603e-06, 5.887999999999033e-06, 5.917000000001116e-06, 5.9029999999980765e-06, 5.9029999999980765e-06, 5.903000000001546e-06, 5.917000000001116e-06, 5.9029999999980765e-06, 5.9029999999980765e-06, 5.903000000001546e-06, 5.929999999997743e-06, 5.915999999998173e-06, 5.902000000002072e-06, 5.915999999998173e-06, 5.931000000000686e-06, 5.903000000001546e-06, 5.901999999998603e-06, 5.903000000001546e-06, 5.917000000001116e-06, 5.8889999999985065e-06, 5.903000000001546e-06, 5.889000000001976e-06, 5.944000000000782e-06, 5.846999999996327e-06, 5.902000000002072e-06, 5.875000000002406e-06, 5.847000000003266e-06, 5.889000000001976e-06, 5.903000000001546e-06, 5.930000000001212e-06, 5.916000000001642e-06, 5.902999999994607e-06, 5.889000000001976e-06, 5.902000000002072e-06, 5.903000000001546e-06, 5.902000000002072e-06, 5.945000000000256e-06, 5.860999999995897e-06, 5.903000000001546e-06]</msg>
<status status="PASS" starttime="20201115 22:04:28.397" endtime="20201115 22:04:28.399"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:28.392" endtime="20201115 22:04:28.400"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:28.402" endtime="20201115 22:04:28.403"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:28.406" endtime="20201115 22:04:28.425"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:28.404" endtime="20201115 22:04:28.426"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:28.400" endtime="20201115 22:04:28.426"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:28.020" endtime="20201115 22:04:28.427"></status>
</kw>
<msg timestamp="20201115 22:04:28.427" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:28.436" endtime="20201115 22:04:28.461"></status>
</kw>
<msg timestamp="20201115 22:04:28.461" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:28.434" endtime="20201115 22:04:28.462"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:28.464" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:28.462" endtime="20201115 22:04:28.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:28.465" endtime="20201115 22:04:28.468"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:28.432" endtime="20201115 22:04:28.468"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:28.429" endtime="20201115 22:04:28.469"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:28.475" endtime="20201115 22:04:28.761"></status>
</kw>
<msg timestamp="20201115 22:04:28.764" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021143194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021149083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:28.474" endtime="20201115 22:04:28.765"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:28.773" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021143194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021149083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:28.766" endtime="20201115 22:04:28.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:28.774" endtime="20201115 22:04:28.776"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:28.471" endtime="20201115 22:04:28.777"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:28.469" endtime="20201115 22:04:28.777"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:28.781" level="INFO">${RESULT} = [{'time': 0.021149083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.8889999999985065e-06, 'source_diff': 5.8889999999985065e-06}, {'time': 0.021476222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:04:28.778" endtime="20201115 22:04:28.782"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:28.796" level="INFO">${OVERHEAD} = {'diff': [5.8889999999985065e-06, 5.874999999998937e-06, 5.917000000001116e-06, 5.8339999999997005e-06, 5.9029999999980765e-06, 5.916000000001642e-06, 5.874999999998937e-06, 5.903000000001546e-06, 5.9...</msg>
<status status="PASS" starttime="20201115 22:04:28.782" endtime="20201115 22:04:28.797"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:28.801" level="INFO">NAME: 00-overhead-22-remove</msg>
<status status="PASS" starttime="20201115 22:04:28.800" endtime="20201115 22:04:28.801"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:28.804" level="INFO">VALUE: [5.8889999999985065e-06, 5.874999999998937e-06, 5.917000000001116e-06, 5.8339999999997005e-06, 5.9029999999980765e-06, 5.916000000001642e-06, 5.874999999998937e-06, 5.903000000001546e-06, 5.903000000001546e-06, 5.8479999999992704e-06, 5.916999999997646e-06, 5.9029999999980765e-06, 5.846999999999797e-06, 5.8889999999985065e-06, 5.889000000001976e-06, 5.944000000000782e-06, 5.901999999998603e-06, 5.902000000002072e-06, 5.903000000001546e-06, 5.874999999998937e-06, 5.903000000001546e-06, 5.903000000001546e-06, 5.903000000001546e-06, 5.903000000001546e-06, 5.9029999999980765e-06, 5.945000000000256e-06, 5.917000000001116e-06, 5.916999999997646e-06, 5.903000000001546e-06, 5.8889999999985065e-06, 5.9029999999980765e-06, 5.903000000001546e-06, 5.889000000001976e-06, 5.889000000001976e-06, 5.8189999999971875e-06, 5.903000000001546e-06, 5.903000000001546e-06, 5.902000000002072e-06, 5.903000000001546e-06, 5.902000000002072e-06, 5.889000000001976e-06, 5.888999999995037e-06, 5.917000000001116e-06, 5.903000000001546e-06, 5.902000000002072e-06, 5.917000000001116e-06, 5.903000000001546e-06, 5.903000000001546e-06, 5.901999999995133e-06, 5.903000000001546e-06]</msg>
<status status="PASS" starttime="20201115 22:04:28.802" endtime="20201115 22:04:28.804"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:28.797" endtime="20201115 22:04:28.805"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:28.807" endtime="20201115 22:04:28.808"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:28.810" endtime="20201115 22:04:28.830"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:28.809" endtime="20201115 22:04:28.831"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:28.805" endtime="20201115 22:04:28.831"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:28.427" endtime="20201115 22:04:28.831"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:26.792" endtime="20201115 22:04:28.832"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:26.791" endtime="20201115 22:04:28.832"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:04:28.834" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:28.843" endtime="20201115 22:04:28.871"></status>
</kw>
<msg timestamp="20201115 22:04:28.872" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:28.842" endtime="20201115 22:04:28.872"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:28.875" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:28.873" endtime="20201115 22:04:28.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:28.876" endtime="20201115 22:04:28.877"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:28.839" endtime="20201115 22:04:28.878"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:28.837" endtime="20201115 22:04:28.879"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:28.886" endtime="20201115 22:04:29.172"></status>
</kw>
<msg timestamp="20201115 22:04:29.175" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023386222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023392333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:28.884" endtime="20201115 22:04:29.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:29.183" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023386222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023392333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:29.176" endtime="20201115 22:04:29.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:29.184" endtime="20201115 22:04:29.186"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:28.881" endtime="20201115 22:04:29.187"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:28.879" endtime="20201115 22:04:29.187"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:29.192" level="INFO">${RESULT} = [{'time': 0.023392333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.110999999999617e-06, 'source_diff': 6.110999999999617e-06}, {'time': 0.023741347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:29.188" endtime="20201115 22:04:29.192"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:29.206" level="INFO">${OVERHEAD} = {'diff': [6.110999999999617e-06, 6.097000000000047e-06, 6.124999999999187e-06, 6.137999999999283e-06, 6.097000000000047e-06, 6.167000000001366e-06, 6.125000000002656e-06, 6.124999999999187e-06, 6.0839...</msg>
<status status="PASS" starttime="20201115 22:04:29.193" endtime="20201115 22:04:29.206"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:29.210" level="INFO">NAME: 00-overhead-23-remove</msg>
<status status="PASS" starttime="20201115 22:04:29.209" endtime="20201115 22:04:29.211"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:29.213" level="INFO">VALUE: [6.110999999999617e-06, 6.097000000000047e-06, 6.124999999999187e-06, 6.137999999999283e-06, 6.097000000000047e-06, 6.167000000001366e-06, 6.125000000002656e-06, 6.124999999999187e-06, 6.0839999999999506e-06, 6.124999999999187e-06, 6.11199999999909e-06, 6.179999999997993e-06, 6.139000000002226e-06, 6.124999999999187e-06, 6.1389999999987566e-06, 6.0839999999999506e-06, 6.124999999999187e-06, 6.111000000003086e-06, 6.167000000001366e-06, 6.110999999999617e-06, 6.041000000001767e-06, 6.1389999999987566e-06, 6.097000000000047e-06, 6.124999999995717e-06, 6.09800000000299e-06, 6.110999999996147e-06, 6.139000000002226e-06, 6.139000000002226e-06, 6.180000000001462e-06, 6.124999999995717e-06, 6.153000000001796e-06, 6.110999999996147e-06, 6.152999999994857e-06, 6.110999999996147e-06, 6.138000000002752e-06, 6.151999999995383e-06, 6.125000000002656e-06, 6.139000000002226e-06, 6.0689999999974376e-06, 6.111000000003086e-06, 6.125000000002656e-06, 6.167000000001366e-06, 6.111999999995621e-06, 6.139000000002226e-06, 6.097000000003516e-06, 6.0689999999974376e-06, 6.125000000002656e-06, 6.139000000002226e-06, 6.124999999995717e-06, 6.054999999997868e-06]</msg>
<status status="PASS" starttime="20201115 22:04:29.212" endtime="20201115 22:04:29.213"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:29.207" endtime="20201115 22:04:29.214"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:29.216" endtime="20201115 22:04:29.218"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:29.220" endtime="20201115 22:04:29.239"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:29.218" endtime="20201115 22:04:29.240"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:29.215" endtime="20201115 22:04:29.241"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:28.835" endtime="20201115 22:04:29.241"></status>
</kw>
<msg timestamp="20201115 22:04:29.241" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:29.250" endtime="20201115 22:04:29.276"></status>
</kw>
<msg timestamp="20201115 22:04:29.276" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:29.249" endtime="20201115 22:04:29.277"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:29.279" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:29.277" endtime="20201115 22:04:29.280"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:29.280" endtime="20201115 22:04:29.283"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:29.246" endtime="20201115 22:04:29.284"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:29.244" endtime="20201115 22:04:29.284"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:29.291" endtime="20201115 22:04:29.576"></status>
</kw>
<msg timestamp="20201115 22:04:29.580" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0209425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020948611, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:04:29.289" endtime="20201115 22:04:29.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:29.588" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0209425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020948611, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:04:29.581" endtime="20201115 22:04:29.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:29.589" endtime="20201115 22:04:29.591"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:29.287" endtime="20201115 22:04:29.591"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:29.285" endtime="20201115 22:04:29.592"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:29.596" level="INFO">${RESULT} = [{'time': 0.020948611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.110999999999617e-06, 'source_diff': 6.110999999999617e-06}, {'time': 0.021297333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:29.593" endtime="20201115 22:04:29.596"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:29.610" level="INFO">${OVERHEAD} = {'diff': [6.110999999999617e-06, 6.152000000002322e-06, 6.124999999999187e-06, 6.124999999999187e-06, 6.097000000000047e-06, 6.110999999999617e-06, 6.083000000000477e-06, 6.124999999999187e-06, 6.1389...</msg>
<status status="PASS" starttime="20201115 22:04:29.597" endtime="20201115 22:04:29.610"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:29.615" level="INFO">NAME: 00-overhead-23-remove</msg>
<status status="PASS" starttime="20201115 22:04:29.614" endtime="20201115 22:04:29.615"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:29.618" level="INFO">VALUE: [6.110999999999617e-06, 6.152000000002322e-06, 6.124999999999187e-06, 6.124999999999187e-06, 6.097000000000047e-06, 6.110999999999617e-06, 6.083000000000477e-06, 6.124999999999187e-06, 6.1389999999987566e-06, 6.139000000002226e-06, 6.124999999999187e-06, 6.124999999999187e-06, 6.111000000003086e-06, 6.069000000000907e-06, 6.125000000002656e-06, 6.1389999999987566e-06, 6.1389999999987566e-06, 6.124999999999187e-06, 6.097000000000047e-06, 6.124999999999187e-06, 6.110999999999617e-06, 6.124999999999187e-06, 6.110999999999617e-06, 6.083000000000477e-06, 6.167000000001366e-06, 6.111000000003086e-06, 6.110999999999617e-06, 6.097000000000047e-06, 6.070000000000381e-06, 6.097000000000047e-06, 6.139000000002226e-06, 6.125000000002656e-06, 6.167000000001366e-06, 6.111999999995621e-06, 6.041999999997771e-06, 6.097999999996051e-06, 6.0550000000048065e-06, 6.124999999995717e-06, 6.124999999995717e-06, 6.124999999995717e-06, 6.07000000000385e-06, 6.1379999999958135e-06, 6.139000000002226e-06, 6.055999999997341e-06, 6.125000000002656e-06, 6.0829999999970075e-06, 6.111000000003086e-06, 6.195000000000506e-06, 6.110999999996147e-06, 6.054999999997868e-06]</msg>
<status status="PASS" starttime="20201115 22:04:29.616" endtime="20201115 22:04:29.618"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:29.611" endtime="20201115 22:04:29.619"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:29.621" endtime="20201115 22:04:29.622"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:29.624" endtime="20201115 22:04:29.644"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:29.623" endtime="20201115 22:04:29.645"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:29.619" endtime="20201115 22:04:29.645"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:29.242" endtime="20201115 22:04:29.645"></status>
</kw>
<msg timestamp="20201115 22:04:29.646" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:29.655" endtime="20201115 22:04:29.682"></status>
</kw>
<msg timestamp="20201115 22:04:29.682" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:29.653" endtime="20201115 22:04:29.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:29.685" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:29.683" endtime="20201115 22:04:29.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:29.686" endtime="20201115 22:04:29.688"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:29.650" endtime="20201115 22:04:29.689"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:29.648" endtime="20201115 22:04:29.689"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:29.696" endtime="20201115 22:04:29.983"></status>
</kw>
<msg timestamp="20201115 22:04:29.986" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021461639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021467778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:29.695" endtime="20201115 22:04:29.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:29.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021461639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021467778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:29.987" endtime="20201115 22:04:29.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:29.995" endtime="20201115 22:04:29.997"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:29.692" endtime="20201115 22:04:29.998"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:29.690" endtime="20201115 22:04:29.998"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:30.002" level="INFO">${RESULT} = [{'time': 0.021467778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.1389999999987566e-06, 'source_diff': 6.1389999999987566e-06}, {'time': 0.021814, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:04:29.999" endtime="20201115 22:04:30.003"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:30.016" level="INFO">${OVERHEAD} = {'diff': [6.1389999999987566e-06, 6.124999999999187e-06, 6.110999999999617e-06, 6.124999999999187e-06, 6.124999999999187e-06, 6.124999999999187e-06, 6.124999999999187e-06, 6.153000000001796e-06, 6.110...</msg>
<status status="PASS" starttime="20201115 22:04:30.003" endtime="20201115 22:04:30.017"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:30.021" level="INFO">NAME: 00-overhead-23-remove</msg>
<status status="PASS" starttime="20201115 22:04:30.020" endtime="20201115 22:04:30.021"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:30.024" level="INFO">VALUE: [6.1389999999987566e-06, 6.124999999999187e-06, 6.110999999999617e-06, 6.124999999999187e-06, 6.124999999999187e-06, 6.124999999999187e-06, 6.124999999999187e-06, 6.153000000001796e-06, 6.110999999999617e-06, 6.097000000000047e-06, 6.139000000002226e-06, 6.110999999999617e-06, 6.111000000003086e-06, 6.166000000001892e-06, 6.110999999999617e-06, 6.110999999999617e-06, 6.124999999999187e-06, 6.179999999997993e-06, 6.110999999999617e-06, 6.124999999999187e-06, 6.153000000001796e-06, 6.110999999999617e-06, 6.11200000000256e-06, 6.152000000002322e-06, 6.2090000000000756e-06, 6.110999999999617e-06, 6.110999999999617e-06, 6.139000000002226e-06, 6.124999999999187e-06, 6.152000000002322e-06, 6.125000000002656e-06, 6.125000000002656e-06, 6.0829999999970075e-06, 6.138000000002752e-06, 6.110999999996147e-06, 6.110999999996147e-06, 6.110999999996147e-06, 6.096999999996577e-06, 6.124999999995717e-06, 6.111000000003086e-06, 6.138999999995287e-06, 6.125000000002656e-06, 6.11200000000256e-06, 6.110999999996147e-06, 6.040999999998298e-06, 6.125000000002656e-06, 6.125000000002656e-06, 6.111000000003086e-06, 6.097000000003516e-06, 6.125000000002656e-06]</msg>
<status status="PASS" starttime="20201115 22:04:30.022" endtime="20201115 22:04:30.024"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:30.017" endtime="20201115 22:04:30.025"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:30.027" endtime="20201115 22:04:30.028"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:30.031" endtime="20201115 22:04:30.050"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:30.029" endtime="20201115 22:04:30.051"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:30.025" endtime="20201115 22:04:30.051"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:29.646" endtime="20201115 22:04:30.052"></status>
</kw>
<msg timestamp="20201115 22:04:30.052" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:30.061" endtime="20201115 22:04:30.091"></status>
</kw>
<msg timestamp="20201115 22:04:30.091" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:30.060" endtime="20201115 22:04:30.091"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:30.094" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:30.092" endtime="20201115 22:04:30.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:30.095" endtime="20201115 22:04:30.097"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:30.057" endtime="20201115 22:04:30.098"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:30.055" endtime="20201115 22:04:30.098"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:30.105" endtime="20201115 22:04:30.391"></status>
</kw>
<msg timestamp="20201115 22:04:30.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021896, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021902111, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:04:30.104" endtime="20201115 22:04:30.395"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:30.403" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021896, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021902111, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:04:30.396" endtime="20201115 22:04:30.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:30.404" endtime="20201115 22:04:30.406"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:30.101" endtime="20201115 22:04:30.407"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:30.099" endtime="20201115 22:04:30.407"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:30.412" level="INFO">${RESULT} = [{'time': 0.021902111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.110999999999617e-06, 'source_diff': 6.110999999999617e-06}, {'time': 0.022247681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:30.408" endtime="20201115 22:04:30.412"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:30.427" level="INFO">${OVERHEAD} = {'diff': [6.110999999999617e-06, 6.124999999999187e-06, 6.125000000002656e-06, 6.111000000003086e-06, 6.124999999999187e-06, 6.1389999999987566e-06, 6.0839999999999506e-06, 6.125000000002656e-06, 6.09...</msg>
<status status="PASS" starttime="20201115 22:04:30.413" endtime="20201115 22:04:30.428"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:30.432" level="INFO">NAME: 00-overhead-23-remove</msg>
<status status="PASS" starttime="20201115 22:04:30.431" endtime="20201115 22:04:30.432"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:30.434" level="INFO">VALUE: [6.110999999999617e-06, 6.124999999999187e-06, 6.125000000002656e-06, 6.111000000003086e-06, 6.124999999999187e-06, 6.1389999999987566e-06, 6.0839999999999506e-06, 6.125000000002656e-06, 6.09800000000299e-06, 6.070000000000381e-06, 6.097000000000047e-06, 6.110999999999617e-06, 6.125000000002656e-06, 6.0979999999995205e-06, 6.1389999999987566e-06, 6.111000000003086e-06, 6.125000000002656e-06, 6.097000000000047e-06, 6.110999999999617e-06, 6.124999999999187e-06, 6.097000000000047e-06, 6.111000000003086e-06, 6.110999999999617e-06, 6.083000000000477e-06, 6.124999999999187e-06, 6.0979999999995205e-06, 6.11199999999909e-06, 6.096999999996577e-06, 6.069999999996911e-06, 6.125000000002656e-06, 6.111000000003086e-06, 6.167000000001366e-06, 6.125000000002656e-06, 6.111000000003086e-06, 6.124999999995717e-06, 6.110999999996147e-06, 6.111000000003086e-06, 6.139000000002226e-06, 6.125000000002656e-06, 6.125000000002656e-06, 6.124999999995717e-06, 6.125000000002656e-06, 6.111000000003086e-06, 6.110999999996147e-06, 6.125000000002656e-06, 6.124999999995717e-06, 6.125000000002656e-06, 6.110999999996147e-06, 6.111999999995621e-06, 6.138999999995287e-06]</msg>
<status status="PASS" starttime="20201115 22:04:30.433" endtime="20201115 22:04:30.435"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:30.428" endtime="20201115 22:04:30.436"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:30.438" endtime="20201115 22:04:30.440"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:30.442" endtime="20201115 22:04:30.461"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:30.440" endtime="20201115 22:04:30.462"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:30.437" endtime="20201115 22:04:30.463"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:30.053" endtime="20201115 22:04:30.463"></status>
</kw>
<msg timestamp="20201115 22:04:30.463" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:30.472" endtime="20201115 22:04:30.501"></status>
</kw>
<msg timestamp="20201115 22:04:30.501" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:30.471" endtime="20201115 22:04:30.502"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:30.504" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:30.503" endtime="20201115 22:04:30.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:30.505" endtime="20201115 22:04:30.508"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:30.468" endtime="20201115 22:04:30.508"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:30.466" endtime="20201115 22:04:30.509"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:30.516" endtime="20201115 22:04:30.802"></status>
</kw>
<msg timestamp="20201115 22:04:30.805" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021539056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021545125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:30.514" endtime="20201115 22:04:30.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:30.813" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021539056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021545125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:30.806" endtime="20201115 22:04:30.814"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:30.814" endtime="20201115 22:04:30.816"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:30.511" endtime="20201115 22:04:30.817"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:30.509" endtime="20201115 22:04:30.817"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:30.822" level="INFO">${RESULT} = [{'time': 0.021545125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0689999999974376e-06, 'source_diff': 6.0689999999974376e-06}, {'time': 0.021890014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:04:30.818" endtime="20201115 22:04:30.822"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:30.836" level="INFO">${OVERHEAD} = {'diff': [6.0689999999974376e-06, 6.124999999999187e-06, 6.125000000002656e-06, 6.1389999999987566e-06, 6.0979999999995205e-06, 6.1389999999987566e-06, 6.110999999999617e-06, 6.041999999997771e-06, 6....</msg>
<status status="PASS" starttime="20201115 22:04:30.823" endtime="20201115 22:04:30.836"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:30.841" level="INFO">NAME: 00-overhead-23-remove</msg>
<status status="PASS" starttime="20201115 22:04:30.840" endtime="20201115 22:04:30.841"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:30.843" level="INFO">VALUE: [6.0689999999974376e-06, 6.124999999999187e-06, 6.125000000002656e-06, 6.1389999999987566e-06, 6.0979999999995205e-06, 6.1389999999987566e-06, 6.110999999999617e-06, 6.041999999997771e-06, 6.110999999999617e-06, 6.110999999999617e-06, 6.124999999999187e-06, 6.124999999999187e-06, 6.124999999999187e-06, 6.1389999999987566e-06, 6.110999999999617e-06, 6.097000000000047e-06, 6.110999999999617e-06, 6.124999999999187e-06, 6.125000000002656e-06, 6.124999999999187e-06, 6.124999999999187e-06, 6.110999999999617e-06, 6.125000000002656e-06, 6.124999999999187e-06, 6.110999999999617e-06, 6.097000000000047e-06, 6.1529999999983265e-06, 6.125000000002656e-06, 6.110999999999617e-06, 6.111000000003086e-06, 6.111000000003086e-06, 6.110999999996147e-06, 6.111000000003086e-06, 6.110999999996147e-06, 6.139000000002226e-06, 6.110999999996147e-06, 6.097000000003516e-06, 6.153000000001796e-06, 6.110999999996147e-06, 6.040999999998298e-06, 6.07000000000385e-06, 6.179999999994523e-06, 6.09800000000299e-06, 6.111000000003086e-06, 6.096999999996577e-06, 6.125000000002656e-06, 6.111000000003086e-06, 6.167000000001366e-06, 6.09800000000299e-06, 6.1379999999958135e-06]</msg>
<status status="PASS" starttime="20201115 22:04:30.842" endtime="20201115 22:04:30.844"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:30.837" endtime="20201115 22:04:30.845"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:30.847" endtime="20201115 22:04:30.849"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:30.851" endtime="20201115 22:04:30.870"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:30.849" endtime="20201115 22:04:30.871"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:30.846" endtime="20201115 22:04:30.871"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:30.464" endtime="20201115 22:04:30.872"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:28.833" endtime="20201115 22:04:30.872"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:28.832" endtime="20201115 22:04:30.872"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:04:30.874" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:30.884" endtime="20201115 22:04:30.911"></status>
</kw>
<msg timestamp="20201115 22:04:30.911" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:30.882" endtime="20201115 22:04:30.911"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:30.914" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:30.912" endtime="20201115 22:04:30.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:30.915" endtime="20201115 22:04:30.917"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:30.879" endtime="20201115 22:04:30.917"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:30.877" endtime="20201115 22:04:30.918"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:30.924" endtime="20201115 22:04:31.210"></status>
</kw>
<msg timestamp="20201115 22:04:31.213" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023639931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02364625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:04:30.923" endtime="20201115 22:04:31.214"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:31.222" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023639931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02364625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:04:31.214" endtime="20201115 22:04:31.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:31.223" endtime="20201115 22:04:31.225"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:30.920" endtime="20201115 22:04:31.225"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:30.918" endtime="20201115 22:04:31.226"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:31.230" level="INFO">${RESULT} = [{'time': 0.02364625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.319000000001157e-06, 'source_diff': 6.319000000001157e-06}, {'time': 0.0240145, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 22:04:31.226" endtime="20201115 22:04:31.230"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:31.244" level="INFO">${OVERHEAD} = {'diff': [6.319000000001157e-06, 6.333000000000727e-06, 6.276999999998978e-06, 6.333999999996731e-06, 6.334000000000201e-06, 6.334000000000201e-06, 6.3329999999972575e-06, 6.374999999999437e-06, 6.332...</msg>
<status status="PASS" starttime="20201115 22:04:31.231" endtime="20201115 22:04:31.244"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:31.249" level="INFO">NAME: 00-overhead-24-remove</msg>
<status status="PASS" starttime="20201115 22:04:31.248" endtime="20201115 22:04:31.249"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:31.252" level="INFO">VALUE: [6.319000000001157e-06, 6.333000000000727e-06, 6.276999999998978e-06, 6.333999999996731e-06, 6.334000000000201e-06, 6.334000000000201e-06, 6.3329999999972575e-06, 6.374999999999437e-06, 6.3329999999972575e-06, 6.347000000000297e-06, 6.347000000000297e-06, 6.306000000001061e-06, 6.306000000001061e-06, 6.333000000000727e-06, 6.320000000000631e-06, 6.306000000001061e-06, 6.333999999996731e-06, 6.319000000001157e-06, 6.3329999999972575e-06, 6.291999999998021e-06, 6.306000000001061e-06, 6.33400000000367e-06, 6.33400000000367e-06, 6.375000000002906e-06, 6.33400000000367e-06, 6.346999999996827e-06, 6.3329999999972575e-06, 6.333000000004196e-06, 6.318999999997688e-06, 6.374999999995967e-06, 6.305999999997591e-06, 6.333000000004196e-06, 6.3329999999972575e-06, 6.304999999998118e-06, 6.29200000000496e-06, 6.361000000003336e-06, 6.346999999996827e-06, 6.304999999998118e-06, 6.34800000000324e-06, 6.333999999996731e-06, 6.319999999997161e-06, 6.347999999996301e-06, 6.3200000000041e-06, 6.3200000000041e-06, 6.333000000004196e-06, 6.333999999996731e-06, 6.347000000003766e-06, 6.333999999996731e-06, 6.3190000000046265e-06, 6.333999999996731e-06]</msg>
<status status="PASS" starttime="20201115 22:04:31.250" endtime="20201115 22:04:31.252"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:31.245" endtime="20201115 22:04:31.253"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:31.255" endtime="20201115 22:04:31.256"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:31.259" endtime="20201115 22:04:31.278"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:31.257" endtime="20201115 22:04:31.279"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:31.253" endtime="20201115 22:04:31.279"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:30.875" endtime="20201115 22:04:31.280"></status>
</kw>
<msg timestamp="20201115 22:04:31.280" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:31.289" endtime="20201115 22:04:31.316"></status>
</kw>
<msg timestamp="20201115 22:04:31.317" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:31.287" endtime="20201115 22:04:31.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:31.319" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:31.318" endtime="20201115 22:04:31.319"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:31.320" endtime="20201115 22:04:31.323"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:31.285" endtime="20201115 22:04:31.323"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:31.282" endtime="20201115 22:04:31.324"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:31.331" endtime="20201115 22:04:31.617"></status>
</kw>
<msg timestamp="20201115 22:04:31.620" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020857861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020864194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:31.329" endtime="20201115 22:04:31.621"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:31.629" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020857861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020864194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:31.622" endtime="20201115 22:04:31.629"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:31.630" endtime="20201115 22:04:31.632"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:31.327" endtime="20201115 22:04:31.632"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:31.325" endtime="20201115 22:04:31.633"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:31.637" level="INFO">${RESULT} = [{'time': 0.020864194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.333000000000727e-06, 'source_diff': 6.333000000000727e-06}, {'time': 0.021231583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:31.633" endtime="20201115 22:04:31.637"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:31.651" level="INFO">${OVERHEAD} = {'diff': [6.333000000000727e-06, 6.3329999999972575e-06, 6.319000000001157e-06, 6.319000000001157e-06, 6.334000000000201e-06, 6.347000000000297e-06, 6.318999999997688e-06, 6.320000000000631e-06, 6.347...</msg>
<status status="PASS" starttime="20201115 22:04:31.638" endtime="20201115 22:04:31.652"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:31.656" level="INFO">NAME: 00-overhead-24-remove</msg>
<status status="PASS" starttime="20201115 22:04:31.655" endtime="20201115 22:04:31.657"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:31.659" level="INFO">VALUE: [6.333000000000727e-06, 6.3329999999972575e-06, 6.319000000001157e-06, 6.319000000001157e-06, 6.334000000000201e-06, 6.347000000000297e-06, 6.318999999997688e-06, 6.320000000000631e-06, 6.347000000000297e-06, 6.333000000000727e-06, 6.347000000000297e-06, 6.333000000000727e-06, 6.334000000000201e-06, 6.319999999997161e-06, 6.3479999999997705e-06, 6.306000000001061e-06, 6.320000000000631e-06, 6.347000000000297e-06, 6.334000000000201e-06, 6.334000000000201e-06, 6.3329999999972575e-06, 6.305000000001587e-06, 6.334000000000201e-06, 6.334000000000201e-06, 6.292000000001491e-06, 6.333000000000727e-06, 6.3329999999972575e-06, 6.347000000000297e-06, 6.290999999998548e-06, 6.3329999999972575e-06, 6.333999999996731e-06, 6.346999999996827e-06, 6.333000000004196e-06, 6.333000000004196e-06, 6.347000000003766e-06, 6.30600000000453e-06, 6.346999999996827e-06, 6.3050000000050566e-06, 6.333999999996731e-06, 6.319999999997161e-06, 6.347000000003766e-06, 6.333999999996731e-06, 6.403000000002046e-06, 6.333000000004196e-06, 6.3329999999972575e-06, 6.34800000000324e-06, 6.333000000004196e-06, 6.347999999996301e-06, 6.333000000004196e-06, 6.333000000004196e-06]</msg>
<status status="PASS" starttime="20201115 22:04:31.657" endtime="20201115 22:04:31.659"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:31.652" endtime="20201115 22:04:31.660"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:31.662" endtime="20201115 22:04:31.663"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:31.666" endtime="20201115 22:04:31.685"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:31.664" endtime="20201115 22:04:31.686"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:31.660" endtime="20201115 22:04:31.686"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:31.280" endtime="20201115 22:04:31.687"></status>
</kw>
<msg timestamp="20201115 22:04:31.687" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:31.696" endtime="20201115 22:04:31.726"></status>
</kw>
<msg timestamp="20201115 22:04:31.726" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:31.694" endtime="20201115 22:04:31.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:31.729" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:31.727" endtime="20201115 22:04:31.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:31.730" endtime="20201115 22:04:31.733"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:31.692" endtime="20201115 22:04:31.733"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:31.690" endtime="20201115 22:04:31.734"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:31.741" endtime="20201115 22:04:32.026"></status>
</kw>
<msg timestamp="20201115 22:04:32.029" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021576181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021582556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:31.739" endtime="20201115 22:04:32.030"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:32.038" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021576181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021582556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:32.031" endtime="20201115 22:04:32.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:32.039" endtime="20201115 22:04:32.041"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:31.736" endtime="20201115 22:04:32.041"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:31.734" endtime="20201115 22:04:32.042"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:32.046" level="INFO">${RESULT} = [{'time': 0.021582556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.374999999999437e-06, 'source_diff': 6.374999999999437e-06}, {'time': 0.021952611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:32.042" endtime="20201115 22:04:32.046"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:32.061" level="INFO">${OVERHEAD} = {'diff': [6.374999999999437e-06, 6.333000000000727e-06, 6.334000000000201e-06, 6.333000000000727e-06, 6.347000000000297e-06, 6.334000000000201e-06, 6.389000000002476e-06, 6.333000000000727e-06, 6.3470...</msg>
<status status="PASS" starttime="20201115 22:04:32.047" endtime="20201115 22:04:32.062"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:32.066" level="INFO">NAME: 00-overhead-24-remove</msg>
<status status="PASS" starttime="20201115 22:04:32.065" endtime="20201115 22:04:32.066"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:32.069" level="INFO">VALUE: [6.374999999999437e-06, 6.333000000000727e-06, 6.334000000000201e-06, 6.333000000000727e-06, 6.347000000000297e-06, 6.334000000000201e-06, 6.389000000002476e-06, 6.333000000000727e-06, 6.347000000000297e-06, 6.3329999999972575e-06, 6.347000000000297e-06, 6.334000000000201e-06, 6.334000000000201e-06, 6.334000000000201e-06, 6.333000000000727e-06, 6.374999999999437e-06, 6.347000000000297e-06, 6.3479999999997705e-06, 6.333000000000727e-06, 6.333000000000727e-06, 6.319000000001157e-06, 6.347000000000297e-06, 6.320000000000631e-06, 6.3329999999972575e-06, 6.333000000000727e-06, 6.347000000000297e-06, 6.333000000000727e-06, 6.347999999996301e-06, 6.319999999997161e-06, 6.33400000000367e-06, 6.333999999996731e-06, 6.3329999999972575e-06, 6.3329999999972575e-06, 6.374999999995967e-06, 6.375000000002906e-06, 6.333000000004196e-06, 6.333999999996731e-06, 6.333999999996731e-06, 6.3329999999972575e-06, 6.346999999996827e-06, 6.346999999996827e-06, 6.346999999996827e-06, 6.34800000000324e-06, 6.389000000002476e-06, 6.389000000002476e-06, 6.3190000000046265e-06, 6.333999999996731e-06, 6.3329999999972575e-06, 6.347000000003766e-06, 6.3050000000050566e-06]</msg>
<status status="PASS" starttime="20201115 22:04:32.067" endtime="20201115 22:04:32.069"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:32.062" endtime="20201115 22:04:32.069"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:32.072" endtime="20201115 22:04:32.073"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:32.075" endtime="20201115 22:04:32.095"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:32.074" endtime="20201115 22:04:32.096"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:32.070" endtime="20201115 22:04:32.096"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:31.687" endtime="20201115 22:04:32.096"></status>
</kw>
<msg timestamp="20201115 22:04:32.097" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:32.106" endtime="20201115 22:04:32.135"></status>
</kw>
<msg timestamp="20201115 22:04:32.136" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:32.104" endtime="20201115 22:04:32.136"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:32.138" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:32.137" endtime="20201115 22:04:32.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:32.140" endtime="20201115 22:04:32.142"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:32.102" endtime="20201115 22:04:32.143"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:32.099" endtime="20201115 22:04:32.143"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:32.150" endtime="20201115 22:04:32.436"></status>
</kw>
<msg timestamp="20201115 22:04:32.440" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021740208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021746528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:32.148" endtime="20201115 22:04:32.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:32.448" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021740208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021746528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:32.441" endtime="20201115 22:04:32.449"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:32.450" endtime="20201115 22:04:32.452"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:32.146" endtime="20201115 22:04:32.452"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:32.144" endtime="20201115 22:04:32.453"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:32.457" level="INFO">${RESULT} = [{'time': 0.021746528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.320000000000631e-06, 'source_diff': 6.320000000000631e-06}, {'time': 0.022115194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:32.453" endtime="20201115 22:04:32.457"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:32.471" level="INFO">${OVERHEAD} = {'diff': [6.320000000000631e-06, 6.319000000001157e-06, 6.333000000000727e-06, 6.347000000000297e-06, 6.319000000001157e-06, 6.333000000000727e-06, 6.334000000000201e-06, 6.333000000000727e-06, 6.3330...</msg>
<status status="PASS" starttime="20201115 22:04:32.458" endtime="20201115 22:04:32.471"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:32.476" level="INFO">NAME: 00-overhead-24-remove</msg>
<status status="PASS" starttime="20201115 22:04:32.475" endtime="20201115 22:04:32.476"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:32.478" level="INFO">VALUE: [6.320000000000631e-06, 6.319000000001157e-06, 6.333000000000727e-06, 6.347000000000297e-06, 6.319000000001157e-06, 6.333000000000727e-06, 6.334000000000201e-06, 6.333000000000727e-06, 6.333000000000727e-06, 6.333000000000727e-06, 6.347000000000297e-06, 6.333000000000727e-06, 6.333000000000727e-06, 6.360999999999867e-06, 6.306000000001061e-06, 6.333000000000727e-06, 6.306000000001061e-06, 6.347000000000297e-06, 6.333000000000727e-06, 6.292000000001491e-06, 6.319000000001157e-06, 6.320000000000631e-06, 6.319000000001157e-06, 6.334000000000201e-06, 6.3329999999972575e-06, 6.319000000001157e-06, 6.360999999996397e-06, 6.360999999996397e-06, 6.276999999998978e-06, 6.34800000000324e-06, 6.305999999997591e-06, 6.3329999999972575e-06, 6.347000000003766e-06, 6.33400000000367e-06, 6.375000000002906e-06, 6.34800000000324e-06, 6.3329999999972575e-06, 6.290999999998548e-06, 6.333999999996731e-06, 6.347000000003766e-06, 6.347999999996301e-06, 6.333000000004196e-06, 6.333999999996731e-06, 6.3329999999972575e-06, 6.33400000000367e-06, 6.3329999999972575e-06, 6.2779999999984515e-06, 6.3329999999972575e-06, 6.291999999998021e-06, 6.3329999999972575e-06]</msg>
<status status="PASS" starttime="20201115 22:04:32.477" endtime="20201115 22:04:32.479"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:32.472" endtime="20201115 22:04:32.479"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:32.482" endtime="20201115 22:04:32.483"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:32.485" endtime="20201115 22:04:32.505"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:32.484" endtime="20201115 22:04:32.505"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:32.480" endtime="20201115 22:04:32.506"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:32.097" endtime="20201115 22:04:32.506"></status>
</kw>
<msg timestamp="20201115 22:04:32.506" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:32.516" endtime="20201115 22:04:32.545"></status>
</kw>
<msg timestamp="20201115 22:04:32.545" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:32.514" endtime="20201115 22:04:32.546"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:32.548" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:32.546" endtime="20201115 22:04:32.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:32.549" endtime="20201115 22:04:32.552"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:32.511" endtime="20201115 22:04:32.552"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:32.509" endtime="20201115 22:04:32.553"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:32.559" endtime="20201115 22:04:32.846"></status>
</kw>
<msg timestamp="20201115 22:04:32.849" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021654347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021660653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:32.558" endtime="20201115 22:04:32.849"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:32.858" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021654347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021660653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:32.850" endtime="20201115 22:04:32.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:32.859" endtime="20201115 22:04:32.860"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:32.555" endtime="20201115 22:04:32.861"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:32.553" endtime="20201115 22:04:32.861"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:32.866" level="INFO">${RESULT} = [{'time': 0.021660653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.305999999997591e-06, 'source_diff': 6.305999999997591e-06}, {'time': 0.022031042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:32.862" endtime="20201115 22:04:32.866"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:32.880" level="INFO">${OVERHEAD} = {'diff': [6.305999999997591e-06, 6.334000000000201e-06, 6.388999999999007e-06, 6.3329999999972575e-06, 6.334000000000201e-06, 6.3479999999997705e-06, 6.320000000000631e-06, 6.291999999998021e-06, 6.33...</msg>
<status status="PASS" starttime="20201115 22:04:32.867" endtime="20201115 22:04:32.880"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:32.885" level="INFO">NAME: 00-overhead-24-remove</msg>
<status status="PASS" starttime="20201115 22:04:32.884" endtime="20201115 22:04:32.885"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:32.887" level="INFO">VALUE: [6.305999999997591e-06, 6.334000000000201e-06, 6.388999999999007e-06, 6.3329999999972575e-06, 6.334000000000201e-06, 6.3479999999997705e-06, 6.320000000000631e-06, 6.291999999998021e-06, 6.334000000000201e-06, 6.319000000001157e-06, 6.319000000001157e-06, 6.319000000001157e-06, 6.320000000000631e-06, 6.319000000001157e-06, 6.3329999999972575e-06, 6.346999999996827e-06, 6.334000000000201e-06, 6.333000000000727e-06, 6.3479999999997705e-06, 6.291999999998021e-06, 6.333000000000727e-06, 6.347000000000297e-06, 6.319000000001157e-06, 6.334000000000201e-06, 6.333000000000727e-06, 6.319000000001157e-06, 6.334000000000201e-06, 6.346999999996827e-06, 6.346999999996827e-06, 6.2500000000062506e-06, 6.346999999996827e-06, 6.3190000000046265e-06, 6.333999999996731e-06, 6.333999999996731e-06, 6.374999999995967e-06, 6.3190000000046265e-06, 6.360999999996397e-06, 6.319999999997161e-06, 6.3329999999972575e-06, 6.319999999997161e-06, 6.3329999999972575e-06, 6.249999999999312e-06, 6.33400000000367e-06, 6.3329999999972575e-06, 6.249999999999312e-06, 6.3329999999972575e-06, 6.346999999996827e-06, 6.333999999996731e-06, 6.34800000000324e-06, 6.33400000000367e-06]</msg>
<status status="PASS" starttime="20201115 22:04:32.886" endtime="20201115 22:04:32.888"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:32.881" endtime="20201115 22:04:32.888"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:32.891" endtime="20201115 22:04:32.892"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:32.894" endtime="20201115 22:04:32.914"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:32.892" endtime="20201115 22:04:32.914"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:32.889" endtime="20201115 22:04:32.915"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:32.507" endtime="20201115 22:04:32.915"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:30.873" endtime="20201115 22:04:32.915"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:30.872" endtime="20201115 22:04:32.915"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:04:32.918" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:32.927" endtime="20201115 22:04:32.957"></status>
</kw>
<msg timestamp="20201115 22:04:32.958" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:32.925" endtime="20201115 22:04:32.958"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:32.960" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:32.959" endtime="20201115 22:04:32.961"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:32.962" endtime="20201115 22:04:32.963"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:32.923" endtime="20201115 22:04:32.964"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:32.920" endtime="20201115 22:04:32.965"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:32.971" endtime="20201115 22:04:33.259"></status>
</kw>
<msg timestamp="20201115 22:04:33.262" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023502542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023509111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:32.970" endtime="20201115 22:04:33.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:33.270" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023502542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023509111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:33.263" endtime="20201115 22:04:33.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:33.271" endtime="20201115 22:04:33.273"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:32.967" endtime="20201115 22:04:33.274"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:32.965" endtime="20201115 22:04:33.274"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:33.278" level="INFO">${RESULT} = [{'time': 0.023509111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.568999999997938e-06, 'source_diff': 6.568999999997938e-06}, {'time': 0.023898486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:33.275" endtime="20201115 22:04:33.279"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:33.292" level="INFO">${OVERHEAD} = {'diff': [6.568999999997938e-06, 6.542000000001741e-06, 6.611000000000117e-06, 6.556000000001311e-06, 6.554999999998368e-06, 6.485999999999992e-06, 6.528000000002171e-06, 6.6119999999995904e-06, 6.570...</msg>
<status status="PASS" starttime="20201115 22:04:33.279" endtime="20201115 22:04:33.293"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:33.297" level="INFO">NAME: 00-overhead-25-remove</msg>
<status status="PASS" starttime="20201115 22:04:33.296" endtime="20201115 22:04:33.298"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:33.300" level="INFO">VALUE: [6.568999999997938e-06, 6.542000000001741e-06, 6.611000000000117e-06, 6.556000000001311e-06, 6.554999999998368e-06, 6.485999999999992e-06, 6.528000000002171e-06, 6.6119999999995904e-06, 6.570000000000881e-06, 6.583000000000977e-06, 6.556000000001311e-06, 6.556000000001311e-06, 6.486999999999465e-06, 6.540999999998798e-06, 6.569000000001407e-06, 6.5279999999987015e-06, 6.541999999998271e-06, 6.540999999998798e-06, 6.555999999997841e-06, 6.499999999999562e-06, 6.583000000004446e-06, 6.541999999998271e-06, 6.5969999999970774e-06, 6.54200000000521e-06, 6.555999999997841e-06, 6.569999999997411e-06, 6.555999999997841e-06, 6.55600000000478e-06, 6.555999999997841e-06, 6.540999999998798e-06, 6.527000000006167e-06, 6.555000000005307e-06, 6.554999999998368e-06, 6.55600000000478e-06, 6.54200000000521e-06, 6.554999999998368e-06, 6.55600000000478e-06, 6.472000000000422e-06, 6.55600000000478e-06, 6.541000000005737e-06, 6.554999999998368e-06, 6.568999999997938e-06, 6.597000000004016e-06, 6.541999999998271e-06, 6.625000000003156e-06, 6.54200000000521e-06, 6.58400000000392e-06, 6.555999999997841e-06, 6.540999999998798e-06, 6.568999999997938e-06]</msg>
<status status="PASS" starttime="20201115 22:04:33.298" endtime="20201115 22:04:33.300"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:33.293" endtime="20201115 22:04:33.301"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:33.303" endtime="20201115 22:04:33.304"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:33.307" endtime="20201115 22:04:33.326"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:33.305" endtime="20201115 22:04:33.327"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:33.301" endtime="20201115 22:04:33.327"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:32.918" endtime="20201115 22:04:33.328"></status>
</kw>
<msg timestamp="20201115 22:04:33.328" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:33.337" endtime="20201115 22:04:33.367"></status>
</kw>
<msg timestamp="20201115 22:04:33.367" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:33.335" endtime="20201115 22:04:33.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:33.370" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:33.369" endtime="20201115 22:04:33.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:33.372" endtime="20201115 22:04:33.374"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:33.333" endtime="20201115 22:04:33.375"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:33.331" endtime="20201115 22:04:33.375"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:33.382" endtime="20201115 22:04:33.668"></status>
</kw>
<msg timestamp="20201115 22:04:33.672" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021002278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021008847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:33.380" endtime="20201115 22:04:33.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:33.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021002278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021008847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:33.673" endtime="20201115 22:04:33.680"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:33.681" endtime="20201115 22:04:33.683"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:33.378" endtime="20201115 22:04:33.683"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:33.376" endtime="20201115 22:04:33.684"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:33.688" level="INFO">${RESULT} = [{'time': 0.021008847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.569000000001407e-06, 'source_diff': 6.569000000001407e-06}, {'time': 0.021400986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:33.684" endtime="20201115 22:04:33.688"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:33.703" level="INFO">${OVERHEAD} = {'diff': [6.569000000001407e-06, 6.555000000001837e-06, 6.556000000001311e-06, 6.542000000001741e-06, 6.554999999998368e-06, 6.5969999999970774e-06, 6.556000000001311e-06, 6.555999999997841e-06, 6.472...</msg>
<status status="PASS" starttime="20201115 22:04:33.689" endtime="20201115 22:04:33.703"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:33.708" level="INFO">NAME: 00-overhead-25-remove</msg>
<status status="PASS" starttime="20201115 22:04:33.707" endtime="20201115 22:04:33.708"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:33.710" level="INFO">VALUE: [6.569000000001407e-06, 6.555000000001837e-06, 6.556000000001311e-06, 6.542000000001741e-06, 6.554999999998368e-06, 6.5969999999970774e-06, 6.556000000001311e-06, 6.555999999997841e-06, 6.472000000000422e-06, 6.554999999998368e-06, 6.555999999997841e-06, 6.542000000001741e-06, 6.555999999997841e-06, 6.527000000002697e-06, 6.485999999999992e-06, 6.569999999997411e-06, 6.485999999999992e-06, 6.540999999998798e-06, 6.541999999998271e-06, 6.528000000002171e-06, 6.528000000002171e-06, 6.541999999998271e-06, 6.570000000000881e-06, 6.597000000000547e-06, 6.542000000001741e-06, 6.556000000001311e-06, 6.584000000000451e-06, 6.5279999999987015e-06, 6.541999999998271e-06, 6.5279999999987015e-06, 6.57000000000435e-06, 6.526999999999228e-06, 6.5969999999970774e-06, 6.554999999998368e-06, 6.540999999998798e-06, 6.541999999998271e-06, 6.540999999998798e-06, 6.554999999998368e-06, 6.540999999998798e-06, 6.568999999997938e-06, 6.541999999998271e-06, 6.541999999998271e-06, 6.55600000000478e-06, 6.55600000000478e-06, 6.554999999998368e-06, 6.540999999998798e-06, 6.555000000005307e-06, 6.568999999997938e-06, 6.610999999996647e-06, 6.555999999997841e-06]</msg>
<status status="PASS" starttime="20201115 22:04:33.709" endtime="20201115 22:04:33.711"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:33.704" endtime="20201115 22:04:33.711"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:33.714" endtime="20201115 22:04:33.715"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:33.717" endtime="20201115 22:04:33.737"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:33.716" endtime="20201115 22:04:33.737"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:33.712" endtime="20201115 22:04:33.738"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:33.328" endtime="20201115 22:04:33.738"></status>
</kw>
<msg timestamp="20201115 22:04:33.738" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:33.748" endtime="20201115 22:04:33.778"></status>
</kw>
<msg timestamp="20201115 22:04:33.779" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:33.746" endtime="20201115 22:04:33.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:33.781" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:33.780" endtime="20201115 22:04:33.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:33.782" endtime="20201115 22:04:33.785"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:33.743" endtime="20201115 22:04:33.786"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:33.741" endtime="20201115 22:04:33.786"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:33.793" endtime="20201115 22:04:34.080"></status>
</kw>
<msg timestamp="20201115 22:04:34.083" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021531042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021537583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:33.791" endtime="20201115 22:04:34.084"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:34.092" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021531042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021537583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:34.085" endtime="20201115 22:04:34.092"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:34.093" endtime="20201115 22:04:34.095"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:33.789" endtime="20201115 22:04:34.095"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:33.787" endtime="20201115 22:04:34.096"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:34.100" level="INFO">${RESULT} = [{'time': 0.021537583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.540999999998798e-06, 'source_diff': 6.540999999998798e-06}, {'time': 0.021929944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:34.096" endtime="20201115 22:04:34.100"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:34.114" level="INFO">${OVERHEAD} = {'diff': [6.540999999998798e-06, 6.611000000000117e-06, 6.541999999998271e-06, 6.528000000002171e-06, 6.555000000001837e-06, 6.556000000001311e-06, 6.555000000001837e-06, 6.541999999998271e-06, 6.5409...</msg>
<status status="PASS" starttime="20201115 22:04:34.101" endtime="20201115 22:04:34.114"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:34.119" level="INFO">NAME: 00-overhead-25-remove</msg>
<status status="PASS" starttime="20201115 22:04:34.118" endtime="20201115 22:04:34.119"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:34.121" level="INFO">VALUE: [6.540999999998798e-06, 6.611000000000117e-06, 6.541999999998271e-06, 6.528000000002171e-06, 6.555000000001837e-06, 6.556000000001311e-06, 6.555000000001837e-06, 6.541999999998271e-06, 6.540999999998798e-06, 6.513999999999132e-06, 6.555999999997841e-06, 6.542000000001741e-06, 6.513999999999132e-06, 6.569999999997411e-06, 6.542000000001741e-06, 6.542000000001741e-06, 6.555000000001837e-06, 6.541999999998271e-06, 6.526999999999228e-06, 6.541999999998271e-06, 6.528000000002171e-06, 6.624999999999687e-06, 6.555000000001837e-06, 6.540999999998798e-06, 6.514000000002601e-06, 6.55600000000478e-06, 6.554999999998368e-06, 6.583999999996981e-06, 6.5279999999987015e-06, 6.554999999998368e-06, 6.597000000004016e-06, 6.513999999999132e-06, 6.54200000000521e-06, 6.540999999998798e-06, 6.5690000000048765e-06, 6.499999999999562e-06, 6.555999999997841e-06, 6.5279999999987015e-06, 6.541000000005737e-06, 6.540999999998798e-06, 6.554999999998368e-06, 6.54200000000521e-06, 6.5279999999987015e-06, 6.513999999999132e-06, 6.54200000000521e-06, 6.541999999998271e-06, 6.5690000000048765e-06, 6.541999999998271e-06, 6.555000000005307e-06, 6.541999999998271e-06]</msg>
<status status="PASS" starttime="20201115 22:04:34.120" endtime="20201115 22:04:34.122"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:34.115" endtime="20201115 22:04:34.122"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:34.125" endtime="20201115 22:04:34.126"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:34.128" endtime="20201115 22:04:34.148"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:34.127" endtime="20201115 22:04:34.148"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:34.123" endtime="20201115 22:04:34.149"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:33.739" endtime="20201115 22:04:34.150"></status>
</kw>
<msg timestamp="20201115 22:04:34.150" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:34.159" endtime="20201115 22:04:34.188"></status>
</kw>
<msg timestamp="20201115 22:04:34.188" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:34.158" endtime="20201115 22:04:34.189"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:34.191" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:34.189" endtime="20201115 22:04:34.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:34.192" endtime="20201115 22:04:34.195"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:34.155" endtime="20201115 22:04:34.195"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:34.153" endtime="20201115 22:04:34.196"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:34.202" endtime="20201115 22:04:34.488"></status>
</kw>
<msg timestamp="20201115 22:04:34.492" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021353236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021359792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:34.201" endtime="20201115 22:04:34.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:34.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021353236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021359792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:34.493" endtime="20201115 22:04:34.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:34.501" endtime="20201115 22:04:34.503"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:34.198" endtime="20201115 22:04:34.503"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:34.196" endtime="20201115 22:04:34.504"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:34.508" level="INFO">${RESULT} = [{'time': 0.021359792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.555999999997841e-06, 'source_diff': 6.555999999997841e-06}, {'time': 0.021748861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:34.504" endtime="20201115 22:04:34.508"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:34.522" level="INFO">${OVERHEAD} = {'diff': [6.555999999997841e-06, 6.528000000002171e-06, 6.555999999997841e-06, 6.513999999999132e-06, 6.556000000001311e-06, 6.555999999997841e-06, 6.485999999999992e-06, 6.485999999999992e-06, 6.5419...</msg>
<status status="PASS" starttime="20201115 22:04:34.509" endtime="20201115 22:04:34.522"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:34.527" level="INFO">NAME: 00-overhead-25-remove</msg>
<status status="PASS" starttime="20201115 22:04:34.526" endtime="20201115 22:04:34.527"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:34.530" level="INFO">VALUE: [6.555999999997841e-06, 6.528000000002171e-06, 6.555999999997841e-06, 6.513999999999132e-06, 6.556000000001311e-06, 6.555999999997841e-06, 6.485999999999992e-06, 6.485999999999992e-06, 6.541999999998271e-06, 6.541999999998271e-06, 6.513999999999132e-06, 6.555000000001837e-06, 6.555000000001837e-06, 6.540999999998798e-06, 6.541999999998271e-06, 6.499999999999562e-06, 6.583000000000977e-06, 6.555000000001837e-06, 6.513999999999132e-06, 6.540999999998798e-06, 6.556000000001311e-06, 6.555999999997841e-06, 6.513999999999132e-06, 6.5279999999987015e-06, 6.485999999999992e-06, 6.528000000002171e-06, 6.554999999998368e-06, 6.541999999998271e-06, 6.52800000000564e-06, 6.569999999997411e-06, 6.57000000000435e-06, 6.555999999997841e-06, 6.526999999999228e-06, 6.541999999998271e-06, 6.541000000005737e-06, 6.54200000000521e-06, 6.554999999998368e-06, 6.610999999996647e-06, 6.541999999998271e-06, 6.540999999998798e-06, 6.54200000000521e-06, 6.554999999998368e-06, 6.555999999997841e-06, 6.5279999999987015e-06, 6.5279999999987015e-06, 6.5969999999970774e-06, 6.54200000000521e-06, 6.541999999998271e-06, 6.541999999998271e-06, 6.540999999998798e-06]</msg>
<status status="PASS" starttime="20201115 22:04:34.528" endtime="20201115 22:04:34.530"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:34.523" endtime="20201115 22:04:34.530"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:34.533" endtime="20201115 22:04:34.535"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:34.537" endtime="20201115 22:04:34.556"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:34.535" endtime="20201115 22:04:34.557"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:34.531" endtime="20201115 22:04:34.558"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:34.150" endtime="20201115 22:04:34.558"></status>
</kw>
<msg timestamp="20201115 22:04:34.558" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:34.567" endtime="20201115 22:04:34.597"></status>
</kw>
<msg timestamp="20201115 22:04:34.598" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:34.566" endtime="20201115 22:04:34.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:34.600" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:34.599" endtime="20201115 22:04:34.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:34.601" endtime="20201115 22:04:34.604"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:34.563" endtime="20201115 22:04:34.605"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:34.561" endtime="20201115 22:04:34.605"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:34.612" endtime="20201115 22:04:34.898"></status>
</kw>
<msg timestamp="20201115 22:04:34.901" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021955972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021962514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:34.610" endtime="20201115 22:04:34.901"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:34.909" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021955972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021962514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:34.902" endtime="20201115 22:04:34.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:34.910" endtime="20201115 22:04:34.912"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:34.608" endtime="20201115 22:04:34.912"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:34.606" endtime="20201115 22:04:34.913"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:34.917" level="INFO">${RESULT} = [{'time': 0.021962514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.541999999998271e-06, 'source_diff': 6.541999999998271e-06}, {'time': 0.022352292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:34.914" endtime="20201115 22:04:34.917"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:34.931" level="INFO">${OVERHEAD} = {'diff': [6.541999999998271e-06, 6.541999999998271e-06, 6.556000000001311e-06, 6.541999999998271e-06, 6.541999999998271e-06, 6.570000000000881e-06, 6.541999999998271e-06, 6.528000000002171e-06, 6.5829...</msg>
<status status="PASS" starttime="20201115 22:04:34.918" endtime="20201115 22:04:34.931"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:34.936" level="INFO">NAME: 00-overhead-25-remove</msg>
<status status="PASS" starttime="20201115 22:04:34.935" endtime="20201115 22:04:34.936"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:34.938" level="INFO">VALUE: [6.541999999998271e-06, 6.541999999998271e-06, 6.556000000001311e-06, 6.541999999998271e-06, 6.541999999998271e-06, 6.570000000000881e-06, 6.541999999998271e-06, 6.528000000002171e-06, 6.5829999999975075e-06, 6.526999999999228e-06, 6.542000000001741e-06, 6.542000000001741e-06, 6.514000000002601e-06, 6.513999999999132e-06, 6.554999999998368e-06, 6.555000000001837e-06, 6.555999999997841e-06, 6.541000000002267e-06, 6.527000000002697e-06, 6.555000000001837e-06, 6.541999999998271e-06, 6.542000000001741e-06, 6.542000000001741e-06, 6.555999999997841e-06, 6.541999999998271e-06, 6.472000000000422e-06, 6.554999999998368e-06, 6.569999999997411e-06, 6.541999999998271e-06, 6.541999999998271e-06, 6.540999999998798e-06, 6.554999999998368e-06, 6.52800000000564e-06, 6.513999999999132e-06, 6.541999999998271e-06, 6.5279999999987015e-06, 6.5279999999987015e-06, 6.5279999999987015e-06, 6.554999999998368e-06, 6.5690000000048765e-06, 6.540999999998798e-06, 6.57000000000435e-06, 6.555000000005307e-06, 6.5279999999987015e-06, 6.526999999999228e-06, 6.555999999997841e-06, 6.554999999998368e-06, 6.5279999999987015e-06, 6.625000000003156e-06, 6.541999999998271e-06]</msg>
<status status="PASS" starttime="20201115 22:04:34.937" endtime="20201115 22:04:34.939"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:34.932" endtime="20201115 22:04:34.940"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:34.942" endtime="20201115 22:04:34.944"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:34.946" endtime="20201115 22:04:34.965"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:34.944" endtime="20201115 22:04:34.966"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:34.941" endtime="20201115 22:04:34.966"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:34.559" endtime="20201115 22:04:34.967"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:32.917" endtime="20201115 22:04:34.967"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:32.916" endtime="20201115 22:04:34.967"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:44.791" endtime="20201115 22:04:34.967"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="teardown">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:34.972" endtime="20201115 22:04:34.991"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:34.970" endtime="20201115 22:04:34.992"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:34.969" endtime="20201115 22:04:34.992"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:03:41.692" endtime="20201115 22:04:34.993" critical="yes"></status>
</test>
<status status="PASS" starttime="20201115 22:02:34.129" endtime="20201115 22:04:34.999"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">arduino-due</item>
<item name="RIOT-Version">2020.10</item>
</metadata>
<status status="PASS" starttime="20201115 22:02:22.970" endtime="20201115 22:04:35.021"></status>
</suite>
<statistics>
<total>
<stat pass="5" fail="0">Critical Tests</stat>
<stat pass="5" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="5" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="5" fail="0">BOARD_arduino-due</stat>
<stat pass="5" fail="0">dev</stat>
</tag>
<suite>
<stat pass="5" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="4" fail="0" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
