<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2 (Python 3.7.3 on linux)" generated="20201115 22:02:44.981" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201115 22:02:46.236" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201115 22:02:46.251" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201115 22:02:48.173" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201115 22:02:46.231" endtime="20201115 22:02:48.175"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201115 22:02:48.180" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201115 22:02:48.177" endtime="20201115 22:02:48.181"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.229" endtime="20201115 22:02:48.183"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:48.187" endtime="20201115 22:02:48.527"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.184" endtime="20201115 22:02:48.529"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:48.560" endtime="20201115 22:02:48.579"></status>
</kw>
<msg timestamp="20201115 22:02:48.580" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:48.557" endtime="20201115 22:02:48.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:48.587" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:48.583" endtime="20201115 22:02:48.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:02:48.594" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:02:48.589" endtime="20201115 22:02:48.595"></status>
</kw>
<status status="FAIL" starttime="20201115 22:02:48.550" endtime="20201115 22:02:48.597"></status>
</kw>
<status status="FAIL" starttime="20201115 22:02:48.545" endtime="20201115 22:02:48.599"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.541" endtime="20201115 22:02:48.599"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:02:48.607" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:02:48.606" endtime="20201115 22:02:48.608"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.601" endtime="20201115 22:02:48.609"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.540" endtime="20201115 22:02:48.609"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.538" endtime="20201115 22:02:48.609"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:48.611" endtime="20201115 22:02:48.615"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.534" endtime="20201115 22:02:48.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:48.618" endtime="20201115 22:02:48.621"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.530" endtime="20201115 22:02:48.623"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.225" endtime="20201115 22:02:48.624"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:48.641" endtime="20201115 22:02:48.663"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.637" endtime="20201115 22:02:48.665"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:48.699" endtime="20201115 22:02:48.718"></status>
</kw>
<msg timestamp="20201115 22:02:48.719" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:48.696" endtime="20201115 22:02:48.719"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:48.726" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:48.721" endtime="20201115 22:02:48.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:02:48.732" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:02:48.728" endtime="20201115 22:02:48.733"></status>
</kw>
<status status="FAIL" starttime="20201115 22:02:48.688" endtime="20201115 22:02:48.735"></status>
</kw>
<status status="FAIL" starttime="20201115 22:02:48.682" endtime="20201115 22:02:48.736"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.678" endtime="20201115 22:02:48.737"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:02:48.745" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:02:48.744" endtime="20201115 22:02:48.746"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.739" endtime="20201115 22:02:48.747"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.676" endtime="20201115 22:02:48.747"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.675" endtime="20201115 22:02:48.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:48.749" endtime="20201115 22:02:48.752"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.670" endtime="20201115 22:02:48.754"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.666" endtime="20201115 22:02:48.756"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.634" endtime="20201115 22:02:48.756"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:48.775" endtime="20201115 22:02:48.787"></status>
</kw>
<msg timestamp="20201115 22:02:48.788" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:48.771" endtime="20201115 22:02:48.789"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:48.795" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:48.791" endtime="20201115 22:02:48.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:48.797" endtime="20201115 22:02:48.803"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.764" endtime="20201115 22:02:48.804"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.758" endtime="20201115 22:02:48.806"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:48.817" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201115 22:02:48.814" endtime="20201115 22:02:48.817"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:48.821" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201115 22:02:48.819" endtime="20201115 22:02:48.822"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.808" endtime="20201115 22:02:48.824"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:02:48.625" endtime="20201115 22:02:48.826" critical="yes"></status>
</test>
<status status="PASS" starttime="20201115 22:02:45.244" endtime="20201115 22:02:48.834"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201115 22:02:48.972" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201115 22:02:48.988" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201115 22:02:50.931" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201115 22:02:48.969" endtime="20201115 22:02:50.933"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201115 22:02:50.938" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201115 22:02:50.935" endtime="20201115 22:02:50.939"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.966" endtime="20201115 22:02:50.941"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:50.945" endtime="20201115 22:02:51.285"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.942" endtime="20201115 22:02:51.287"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:51.317" endtime="20201115 22:02:51.336"></status>
</kw>
<msg timestamp="20201115 22:02:51.337" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:51.314" endtime="20201115 22:02:51.338"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:51.344" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:51.340" endtime="20201115 22:02:51.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:02:51.351" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:02:51.346" endtime="20201115 22:02:51.353"></status>
</kw>
<status status="FAIL" starttime="20201115 22:02:51.307" endtime="20201115 22:02:51.355"></status>
</kw>
<status status="FAIL" starttime="20201115 22:02:51.302" endtime="20201115 22:02:51.357"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.299" endtime="20201115 22:02:51.358"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:02:51.365" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:02:51.364" endtime="20201115 22:02:51.366"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.359" endtime="20201115 22:02:51.367"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.297" endtime="20201115 22:02:51.367"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.295" endtime="20201115 22:02:51.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:51.369" endtime="20201115 22:02:51.373"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.292" endtime="20201115 22:02:51.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:51.376" endtime="20201115 22:02:51.380"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.288" endtime="20201115 22:02:51.381"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.963" endtime="20201115 22:02:51.382"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO/">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:51.396" endtime="20201115 22:02:51.418"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.392" endtime="20201115 22:02:51.420"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:51.454" endtime="20201115 22:02:51.473"></status>
</kw>
<msg timestamp="20201115 22:02:51.474" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:51.451" endtime="20201115 22:02:51.475"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:51.481" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:51.477" endtime="20201115 22:02:51.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:02:51.488" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:02:51.484" endtime="20201115 22:02:51.489"></status>
</kw>
<status status="FAIL" starttime="20201115 22:02:51.443" endtime="20201115 22:02:51.491"></status>
</kw>
<status status="FAIL" starttime="20201115 22:02:51.437" endtime="20201115 22:02:51.493"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.434" endtime="20201115 22:02:51.493"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:02:51.501" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:02:51.500" endtime="20201115 22:02:51.502"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.495" endtime="20201115 22:02:51.503"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.432" endtime="20201115 22:02:51.574"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.430" endtime="20201115 22:02:51.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:51.576" endtime="20201115 22:02:51.581"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.426" endtime="20201115 22:02:51.583"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.422" endtime="20201115 22:02:51.585"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.390" endtime="20201115 22:02:51.586"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure GPIO Overhead</arg>
</arguments>
<msg timestamp="20201115 22:02:51.591" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:51.612" endtime="20201115 22:02:51.625"></status>
</kw>
<msg timestamp="20201115 22:02:51.626" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:51.609" endtime="20201115 22:02:51.626"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:51.632" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:51.628" endtime="20201115 22:02:51.633"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:51.635" endtime="20201115 22:02:51.639"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.601" endtime="20201115 22:02:51.640"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.596" endtime="20201115 22:02:51.642"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:51.659" endtime="20201115 22:02:52.035"></status>
</kw>
<msg timestamp="20201115 22:02:52.042" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.206171542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.206172014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:51.656" endtime="20201115 22:02:52.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:52.062" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.206171542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.206172014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:52.045" endtime="20201115 22:02:52.062"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:52.064" endtime="20201115 22:02:52.068"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.648" endtime="20201115 22:02:52.070"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.643" endtime="20201115 22:02:52.071"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:52.082" level="INFO">${RESULT} = [{'time': 0.206172014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999997360464e-07, 'source_diff': 4.7199999997360464e-07}, {'time': 0.206181903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:52.073" endtime="20201115 22:02:52.083"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:52.115" level="INFO">${GPIO_OVERHEAD} = {'time': [0.206172014, 0.206181903, 0.206189389, 0.206196972, 0.206203736, 0.206209861, 0.206220694, 0.206230278, 0.206235139, 0.206246389, 0.206255125, 0.206264389, 0.206275111, 0.20628125, 0.2062885...</msg>
<status status="PASS" starttime="20201115 22:02:52.084" endtime="20201115 22:02:52.116"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:52.126" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201115 22:02:52.123" endtime="20201115 22:02:52.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:52.131" level="INFO">VALUE: [4.7199999997360464e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 5.419999999922709e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201115 22:02:52.128" endtime="20201115 22:02:52.132"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.117" endtime="20201115 22:02:52.134"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:52.140" endtime="20201115 22:02:52.143"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:52.149" endtime="20201115 22:02:52.171"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.144" endtime="20201115 22:02:52.173"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.136" endtime="20201115 22:02:52.174"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.593" endtime="20201115 22:02:52.175"></status>
</kw>
<msg timestamp="20201115 22:02:52.175" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:52.196" endtime="20201115 22:02:52.208"></status>
</kw>
<msg timestamp="20201115 22:02:52.209" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:52.192" endtime="20201115 22:02:52.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:52.216" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:52.211" endtime="20201115 22:02:52.216"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:52.218" endtime="20201115 22:02:52.222"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.185" endtime="20201115 22:02:52.224"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.180" endtime="20201115 22:02:52.225"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:52.242" endtime="20201115 22:02:52.599"></status>
</kw>
<msg timestamp="20201115 22:02:52.607" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037035944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037036417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:52.239" endtime="20201115 22:02:52.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:52.626" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037035944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037036417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:52.609" endtime="20201115 22:02:52.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:52.629" endtime="20201115 22:02:52.633"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.231" endtime="20201115 22:02:52.634"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.226" endtime="20201115 22:02:52.636"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:52.647" level="INFO">${RESULT} = [{'time': 0.037036417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037045986, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:52.637" endtime="20201115 22:02:52.648"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:52.679" level="INFO">${GPIO_OVERHEAD} = {'time': [0.037036417, 0.037045986, 0.037056625, 0.0370615, 0.0370715, 0.037077625, 0.0370825, 0.037090083, 0.037095389, 0.037102375, 0.037113514, 0.037119528, 0.037127958, 0.037137639, 0.037148264, 0...</msg>
<status status="PASS" starttime="20201115 22:02:52.650" endtime="20201115 22:02:52.680"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:52.690" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201115 22:02:52.688" endtime="20201115 22:02:52.692"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:52.697" level="INFO">VALUE: [4.7300000000083386e-07, 4.720000000013602e-07, 5.420000000061487e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201115 22:02:52.693" endtime="20201115 22:02:52.698"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.681" endtime="20201115 22:02:52.700"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:52.706" endtime="20201115 22:02:52.709"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:52.715" endtime="20201115 22:02:52.737"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.710" endtime="20201115 22:02:52.739"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.702" endtime="20201115 22:02:52.740"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.177" endtime="20201115 22:02:52.741"></status>
</kw>
<msg timestamp="20201115 22:02:52.741" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:52.762" endtime="20201115 22:02:52.775"></status>
</kw>
<msg timestamp="20201115 22:02:52.776" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:52.759" endtime="20201115 22:02:52.776"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:52.782" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:52.778" endtime="20201115 22:02:52.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:52.784" endtime="20201115 22:02:52.788"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.751" endtime="20201115 22:02:52.790"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.746" endtime="20201115 22:02:52.791"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:52.808" endtime="20201115 22:02:53.162"></status>
</kw>
<msg timestamp="20201115 22:02:53.170" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037437167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037437639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:52.805" endtime="20201115 22:02:53.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:53.189" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037437167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037437639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:53.172" endtime="20201115 22:02:53.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:53.192" endtime="20201115 22:02:53.196"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.797" endtime="20201115 22:02:53.197"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.793" endtime="20201115 22:02:53.199"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:53.210" level="INFO">${RESULT} = [{'time': 0.037437639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037446903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:53.200" endtime="20201115 22:02:53.210"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:53.241" level="INFO">${GPIO_OVERHEAD} = {'time': [0.037437639, 0.037446903, 0.037454528, 0.037462528, 0.037471389, 0.03748125, 0.037487917, 0.037497778, 0.037502542, 0.037513792, 0.037519819, 0.037527514, 0.037537917, 0.037545722, 0.0375519...</msg>
<status status="PASS" starttime="20201115 22:02:53.212" endtime="20201115 22:02:53.242"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:53.252" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201115 22:02:53.249" endtime="20201115 22:02:53.252"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:53.257" level="INFO">VALUE: [4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.7299999999389497e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 5.419999999992098e-07, 4.7199999999442133e-07]</msg>
<status status="PASS" starttime="20201115 22:02:53.254" endtime="20201115 22:02:53.258"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.243" endtime="20201115 22:02:53.260"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:53.267" endtime="20201115 22:02:53.269"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:53.275" endtime="20201115 22:02:53.297"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.271" endtime="20201115 22:02:53.299"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.262" endtime="20201115 22:02:53.300"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.743" endtime="20201115 22:02:53.301"></status>
</kw>
<msg timestamp="20201115 22:02:53.302" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:53.322" endtime="20201115 22:02:53.334"></status>
</kw>
<msg timestamp="20201115 22:02:53.336" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:53.318" endtime="20201115 22:02:53.336"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:53.342" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:53.338" endtime="20201115 22:02:53.343"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:53.344" endtime="20201115 22:02:53.348"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.311" endtime="20201115 22:02:53.350"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.306" endtime="20201115 22:02:53.351"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:53.368" endtime="20201115 22:02:53.724"></status>
</kw>
<msg timestamp="20201115 22:02:53.731" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0370855, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037085972, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:02:53.365" endtime="20201115 22:02:53.732"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:53.751" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0370855, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037085972, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:02:53.734" endtime="20201115 22:02:53.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:53.754" endtime="20201115 22:02:53.759"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.357" endtime="20201115 22:02:53.761"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.352" endtime="20201115 22:02:53.762"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:53.773" level="INFO">${RESULT} = [{'time': 0.037085972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037094083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:53.764" endtime="20201115 22:02:53.773"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:53.806" level="INFO">${GPIO_OVERHEAD} = {'time': [0.037085972, 0.037094083, 0.037100333, 0.037111472, 0.037118125, 0.037128222, 0.037139056, 0.037147069, 0.037158333, 0.037164556, 0.037172778, 0.037178292, 0.037189653, 0.037198389, 0.037204...</msg>
<status status="PASS" starttime="20201115 22:02:53.775" endtime="20201115 22:02:53.807"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:53.817" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201115 22:02:53.814" endtime="20201115 22:02:53.817"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:53.822" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.420000000061487e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 5.409999999997361e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201115 22:02:53.819" endtime="20201115 22:02:53.823"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.808" endtime="20201115 22:02:53.825"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:53.831" endtime="20201115 22:02:53.834"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:53.840" endtime="20201115 22:02:53.862"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.835" endtime="20201115 22:02:53.863"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.827" endtime="20201115 22:02:53.865"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.303" endtime="20201115 22:02:53.866"></status>
</kw>
<msg timestamp="20201115 22:02:53.866" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:53.886" endtime="20201115 22:02:53.899"></status>
</kw>
<msg timestamp="20201115 22:02:53.900" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:53.883" endtime="20201115 22:02:53.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:53.906" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:53.902" endtime="20201115 22:02:53.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:53.909" endtime="20201115 22:02:53.912"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.875" endtime="20201115 22:02:53.914"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.871" endtime="20201115 22:02:53.916"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:53.933" endtime="20201115 22:02:54.289"></status>
</kw>
<msg timestamp="20201115 22:02:54.297" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036942986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036943458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:53.929" endtime="20201115 22:02:54.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:54.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036942986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036943458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:54.299" endtime="20201115 22:02:54.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:54.318" endtime="20201115 22:02:54.323"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.922" endtime="20201115 22:02:54.325"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.917" endtime="20201115 22:02:54.327"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:54.338" level="INFO">${RESULT} = [{'time': 0.036943458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036949903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:54.328" endtime="20201115 22:02:54.338"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:54.369" level="INFO">${GPIO_OVERHEAD} = {'time': [0.036943458, 0.036949903, 0.036957486, 0.036966639, 0.036974347, 0.036985292, 0.036994111, 0.037000056, 0.037004944, 0.037014931, 0.037020347, 0.037030333, 0.037039486, 0.037049278, 0.037056...</msg>
<status status="PASS" starttime="20201115 22:02:54.340" endtime="20201115 22:02:54.370"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:54.379" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201115 22:02:54.377" endtime="20201115 22:02:54.380"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:54.385" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 5.420000000061487e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 5.409999999997361e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 5.409999999997361e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07]</msg>
<status status="PASS" starttime="20201115 22:02:54.382" endtime="20201115 22:02:54.386"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.371" endtime="20201115 22:02:54.387"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:54.394" endtime="20201115 22:02:54.397"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:54.402" endtime="20201115 22:02:54.425"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.398" endtime="20201115 22:02:54.426"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.389" endtime="20201115 22:02:54.428"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.867" endtime="20201115 22:02:54.428"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.589" endtime="20201115 22:02:54.429"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:54.440" endtime="20201115 22:02:54.462"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.436" endtime="20201115 22:02:54.464"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.433" endtime="20201115 22:02:54.465"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:02:51.383" endtime="20201115 22:02:54.466" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:54.485" endtime="20201115 22:02:54.507"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.480" endtime="20201115 22:02:54.509"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:54.545" endtime="20201115 22:02:54.565"></status>
</kw>
<msg timestamp="20201115 22:02:54.566" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:54.540" endtime="20201115 22:02:54.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:54.573" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:54.568" endtime="20201115 22:02:54.573"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:02:54.579" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:02:54.575" endtime="20201115 22:02:54.580"></status>
</kw>
<status status="FAIL" starttime="20201115 22:02:54.533" endtime="20201115 22:02:54.582"></status>
</kw>
<status status="FAIL" starttime="20201115 22:02:54.526" endtime="20201115 22:02:54.584"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.523" endtime="20201115 22:02:54.584"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:02:54.592" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:02:54.591" endtime="20201115 22:02:54.593"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.586" endtime="20201115 22:02:54.594"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.521" endtime="20201115 22:02:54.594"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.519" endtime="20201115 22:02:54.594"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:54.596" endtime="20201115 22:02:54.599"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.515" endtime="20201115 22:02:54.601"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.511" endtime="20201115 22:02:54.603"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.478" endtime="20201115 22:02:54.603"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer Now Overhead</arg>
</arguments>
<msg timestamp="20201115 22:02:54.608" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:54.629" endtime="20201115 22:02:54.644"></status>
</kw>
<msg timestamp="20201115 22:02:54.645" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:54.626" endtime="20201115 22:02:54.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:54.652" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:54.647" endtime="20201115 22:02:54.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:54.654" endtime="20201115 22:02:54.658"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.618" endtime="20201115 22:02:54.660"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.613" endtime="20201115 22:02:54.662"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:54.679" endtime="20201115 22:02:55.041"></status>
</kw>
<msg timestamp="20201115 22:02:55.049" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.135129903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.135138875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:54.675" endtime="20201115 22:02:55.049"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:55.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.135129903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.135138875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:55.051" endtime="20201115 22:02:55.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:55.071" endtime="20201115 22:02:55.075"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.668" endtime="20201115 22:02:55.076"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.663" endtime="20201115 22:02:55.078"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:55.089" level="INFO">${RESULT} = [{'time': 0.135138875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.971999999995983e-06, 'source_diff': 8.971999999995983e-06}, {'time': 0.135152917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:55.080" endtime="20201115 22:02:55.089"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:55.122" level="INFO">${OVERHEAD} = {'time': [0.135138875, 0.135152917, 0.135168847, 0.135185903, 0.1352, 0.135217944, 0.135233083, 0.135247056, 0.135262028, 0.135278986, 0.135297125, 0.135311083, 0.135328139, 0.135346097, 0.135364222, ...</msg>
<status status="PASS" starttime="20201115 22:02:55.091" endtime="20201115 22:02:55.122"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:55.132" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201115 22:02:55.130" endtime="20201115 22:02:55.133"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:55.137" level="INFO">VALUE: [8.971999999995983e-06, 8.79200000000746e-06, 9.652999999998357e-06, 8.819999999992723e-06, 8.971999999995983e-06, 9.472000000010361e-06, 9.707999999997163e-06, 9.3200000000071e-06, 9.610999999992709e-06, 9.333000000000258e-06, 9.486000000002992e-06, 9.152000000012261e-06, 9.63899999997797e-06, 8.985999999988614e-06, 9.111000000006086e-06, 9.653000000026113e-06, 8.98600000001637e-06, 9.499999999995623e-06, 8.791999999979705e-06, 8.83299999998588e-06, 9.695000000004006e-06, 8.971999999995983e-06, 9.667000000018744e-06, 9.611999999992182e-06, 9.179999999997523e-06, 8.735999999981425e-06, 8.820000000020478e-06, 9.486000000002992e-06, 9.66600000001927e-06, 9.30499999998724e-06, 8.846999999978511e-06, 9.652999999998357e-06, 8.806000000000092e-06, 9.305999999986714e-06, 8.973000000023212e-06, 9.138999999991348e-06, 8.959000000002826e-06, 9.652999999998357e-06, 8.985999999988614e-06, 8.805000000000618e-06, 9.652999999998357e-06, 9.443999999997343e-06, 9.486000000002992e-06, 9.472000000010361e-06, 9.333999999999731e-06, 8.818999999993249e-06, 9.137999999991875e-06, 9.639000000005726e-06, 8.98600000001637e-06, 9.19400000001791e-06]</msg>
<status status="PASS" starttime="20201115 22:02:55.134" endtime="20201115 22:02:55.138"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.124" endtime="20201115 22:02:55.140"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:55.147" endtime="20201115 22:02:55.149"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:55.155" endtime="20201115 22:02:55.177"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.150" endtime="20201115 22:02:55.179"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.142" endtime="20201115 22:02:55.180"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.610" endtime="20201115 22:02:55.181"></status>
</kw>
<msg timestamp="20201115 22:02:55.182" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:55.202" endtime="20201115 22:02:55.216"></status>
</kw>
<msg timestamp="20201115 22:02:55.217" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:55.198" endtime="20201115 22:02:55.218"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:55.224" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:55.219" endtime="20201115 22:02:55.224"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:55.226" endtime="20201115 22:02:55.230"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.191" endtime="20201115 22:02:55.231"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.186" endtime="20201115 22:02:55.233"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:55.250" endtime="20201115 22:02:55.602"></status>
</kw>
<msg timestamp="20201115 22:02:55.609" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037454375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037463403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:55.246" endtime="20201115 22:02:55.611"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:55.629" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037454375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037463403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:55.612" endtime="20201115 22:02:55.630"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:55.632" endtime="20201115 22:02:55.636"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.239" endtime="20201115 22:02:55.637"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.234" endtime="20201115 22:02:55.639"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:55.650" level="INFO">${RESULT} = [{'time': 0.037463403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.028000000001202e-06, 'source_diff': 9.028000000001202e-06}, {'time': 0.037483306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:55.640" endtime="20201115 22:02:55.650"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:55.682" level="INFO">${OVERHEAD} = {'time': [0.037463403, 0.037483306, 0.037499347, 0.037515347, 0.037533431, 0.0375475, 0.037565514, 0.037582542, 0.0376005, 0.037617625, 0.037633667, 0.037647569, 0.037662639, 0.037678583, 0.037695708,...</msg>
<status status="PASS" starttime="20201115 22:02:55.652" endtime="20201115 22:02:55.682"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:55.694" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201115 22:02:55.692" endtime="20201115 22:02:55.695"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:55.699" level="INFO">VALUE: [9.028000000001202e-06, 8.945000000003256e-06, 8.819000000000188e-06, 9.638999999998787e-06, 8.958999999995887e-06, 9.471999999996483e-06, 8.819999999999661e-06, 8.972999999995457e-06, 8.986000000002492e-06, 8.972000000002922e-06, 9.653000000005296e-06, 9.305000000001118e-06, 9.320000000000161e-06, 9.151999999998384e-06, 9.500000000002562e-06, 8.806000000000092e-06, 9.01299999999522e-06, 8.792000000000522e-06, 9.638999999998787e-06, 9.000000000002062e-06, 9.138999999998287e-06, 8.806000000000092e-06, 9.680000000004962e-06, 9.138999999998287e-06, 8.819000000000188e-06, 9.306000000000592e-06, 9.638999999998787e-06, 9.500000000002562e-06, 8.972999999995457e-06, 9.652999999998357e-06, 9.403000000005046e-06, 9.306000000000592e-06, 9.486000000002992e-06, 9.555000000001368e-06, 9.638999999998787e-06, 8.987000000001966e-06, 9.320000000000161e-06, 8.971999999995983e-06, 8.819000000000188e-06, 9.041000000001298e-06, 9.443999999997343e-06, 8.986000000002492e-06, 9.472000000003422e-06, 9.083000000000008e-06, 8.986000000002492e-06, 9.291999999994083e-06, 9.346999999999828e-06, 9.473000000002896e-06, 8.972000000002922e-06, 9.638999999998787e-06]</msg>
<status status="PASS" starttime="20201115 22:02:55.696" endtime="20201115 22:02:55.700"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.684" endtime="20201115 22:02:55.702"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:55.709" endtime="20201115 22:02:55.711"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:55.717" endtime="20201115 22:02:55.739"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.713" endtime="20201115 22:02:55.741"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.704" endtime="20201115 22:02:55.743"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.183" endtime="20201115 22:02:55.744"></status>
</kw>
<msg timestamp="20201115 22:02:55.744" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:55.764" endtime="20201115 22:02:55.779"></status>
</kw>
<msg timestamp="20201115 22:02:55.780" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:55.761" endtime="20201115 22:02:55.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:55.786" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:55.782" endtime="20201115 22:02:55.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:55.789" endtime="20201115 22:02:55.792"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.754" endtime="20201115 22:02:55.794"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.749" endtime="20201115 22:02:55.796"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:55.813" endtime="20201115 22:02:56.166"></status>
</kw>
<msg timestamp="20201115 22:02:56.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037870319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03787925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:02:55.809" endtime="20201115 22:02:56.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:56.193" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037870319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03787925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:02:56.176" endtime="20201115 22:02:56.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:56.195" endtime="20201115 22:02:56.199"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.802" endtime="20201115 22:02:56.201"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.797" endtime="20201115 22:02:56.202"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:56.213" level="INFO">${RESULT} = [{'time': 0.03787925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.931000000003686e-06, 'source_diff': 8.931000000003686e-06}, {'time': 0.037895292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:02:56.204" endtime="20201115 22:02:56.214"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:56.247" level="INFO">${OVERHEAD} = {'time': [0.03787925, 0.037895292, 0.037912319, 0.037932472, 0.037948347, 0.037964375, 0.037978458, 0.0379965, 0.038016458, 0.038034528, 0.038051528, 0.038069542, 0.0380855, 0.038105681, 0.038120639, ...</msg>
<status status="PASS" starttime="20201115 22:02:56.215" endtime="20201115 22:02:56.248"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:56.259" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201115 22:02:56.255" endtime="20201115 22:02:56.260"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:56.265" level="INFO">VALUE: [8.931000000003686e-06, 9.124999999998717e-06, 9.500000000002562e-06, 9.208000000003602e-06, 9.152999999997857e-06, 9.138999999998287e-06, 9.346999999999828e-06, 9.639000000005726e-06, 9.194000000004032e-06, 9.124999999998717e-06, 9.472000000003422e-06, 8.819999999999661e-06, 9.486000000002992e-06, 9.320000000000161e-06, 9.306000000000592e-06, 8.999999999995123e-06, 8.875000000005406e-06, 9.472999999995957e-06, 8.972000000002922e-06, 9.638999999998787e-06, 8.861000000005836e-06, 9.680999999997497e-06, 9.333999999999731e-06, 8.972000000002922e-06, 8.847000000006267e-06, 8.986000000002492e-06, 9.638999999998787e-06, 9.472000000003422e-06, 9.306000000000592e-06, 9.471999999996483e-06, 9.416999999997677e-06, 8.819000000000188e-06, 8.805000000000618e-06, 9.638999999998787e-06, 9.597999999999551e-06, 8.792000000000522e-06, 8.847999999998801e-06, 8.819000000000188e-06, 9.485999999996053e-06, 9.416999999997677e-06, 9.333000000000258e-06, 8.819999999999661e-06, 8.805000000000618e-06, 9.124999999998717e-06, 9.333000000000258e-06, 9.431000000004186e-06, 8.929999999997273e-06, 9.305000000001118e-06, 9.305000000001118e-06, 9.528000000001702e-06]</msg>
<status status="PASS" starttime="20201115 22:02:56.261" endtime="20201115 22:02:56.266"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.249" endtime="20201115 22:02:56.267"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:56.274" endtime="20201115 22:02:56.276"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:56.282" endtime="20201115 22:02:56.304"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.278" endtime="20201115 22:02:56.306"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.269" endtime="20201115 22:02:56.307"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.745" endtime="20201115 22:02:56.308"></status>
</kw>
<msg timestamp="20201115 22:02:56.309" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:56.329" endtime="20201115 22:02:56.343"></status>
</kw>
<msg timestamp="20201115 22:02:56.344" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:56.325" endtime="20201115 22:02:56.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:56.351" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:56.347" endtime="20201115 22:02:56.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:56.353" endtime="20201115 22:02:56.357"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.318" endtime="20201115 22:02:56.358"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.313" endtime="20201115 22:02:56.361"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:56.378" endtime="20201115 22:02:56.732"></status>
</kw>
<msg timestamp="20201115 22:02:56.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037396861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037406333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:56.374" endtime="20201115 22:02:56.739"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:56.758" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037396861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037406333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:56.741" endtime="20201115 22:02:56.759"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:56.761" endtime="20201115 22:02:56.765"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.367" endtime="20201115 22:02:56.767"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.362" endtime="20201115 22:02:56.768"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:56.779" level="INFO">${RESULT} = [{'time': 0.037406333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.471999999996483e-06, 'source_diff': 9.471999999996483e-06}, {'time': 0.037420431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:56.770" endtime="20201115 22:02:56.779"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:56.811" level="INFO">${OVERHEAD} = {'time': [0.037406333, 0.037420431, 0.037440306, 0.037455347, 0.037473361, 0.037490389, 0.037506403, 0.037525583, 0.037545597, 0.037564694, 0.037578667, 0.037593639, 0.037610708, 0.037625569, 0.037643...</msg>
<status status="PASS" starttime="20201115 22:02:56.781" endtime="20201115 22:02:56.811"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:56.821" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201115 22:02:56.819" endtime="20201115 22:02:56.822"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:56.827" level="INFO">VALUE: [9.471999999996483e-06, 9.722999999996207e-06, 8.973000000002396e-06, 8.972000000002922e-06, 8.763999999994443e-06, 8.971999999995983e-06, 8.819999999999661e-06, 9.151999999998384e-06, 9.486000000002992e-06, 9.069000000000438e-06, 8.819999999999661e-06, 9.263999999994943e-06, 9.360999999999398e-06, 9.471999999996483e-06, 8.749999999994873e-06, 9.638999999998787e-06, 9.638999999998787e-06, 9.637999999999314e-06, 9.500000000002562e-06, 9.320000000000161e-06, 9.138999999998287e-06, 9.666999999997927e-06, 8.819000000000188e-06, 9.638999999998787e-06, 9.138999999998287e-06, 9.181000000003936e-06, 8.999999999995123e-06, 9.638999999998787e-06, 9.264000000001882e-06, 8.973000000002396e-06, 9.486000000002992e-06, 9.290999999994609e-06, 8.972999999995457e-06, 9.195000000003506e-06, 9.291000000001548e-06, 8.792000000000522e-06, 8.986000000002492e-06, 8.819000000000188e-06, 9.000000000002062e-06, 9.138999999998287e-06, 9.319000000000688e-06, 9.235999999995803e-06, 8.986000000002492e-06, 9.152999999997857e-06, 9.651999999998884e-06, 9.624999999999218e-06, 9.652999999998357e-06, 9.305000000001118e-06, 9.138999999998287e-06, 9.666999999997927e-06]</msg>
<status status="PASS" starttime="20201115 22:02:56.823" endtime="20201115 22:02:56.828"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.813" endtime="20201115 22:02:56.829"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:56.836" endtime="20201115 22:02:56.840"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:56.845" endtime="20201115 22:02:56.867"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.841" endtime="20201115 22:02:56.869"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.831" endtime="20201115 22:02:56.871"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.310" endtime="20201115 22:02:56.872"></status>
</kw>
<msg timestamp="20201115 22:02:56.872" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:56.892" endtime="20201115 22:02:56.906"></status>
</kw>
<msg timestamp="20201115 22:02:56.908" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:56.889" endtime="20201115 22:02:56.908"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:56.915" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:56.910" endtime="20201115 22:02:56.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:56.917" endtime="20201115 22:02:56.921"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.881" endtime="20201115 22:02:56.923"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.877" endtime="20201115 22:02:56.924"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:56.941" endtime="20201115 22:02:57.294"></status>
</kw>
<msg timestamp="20201115 22:02:57.302" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037571625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037580778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:56.938" endtime="20201115 22:02:57.302"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:57.320" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037571625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037580778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:57.304" endtime="20201115 22:02:57.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:57.323" endtime="20201115 22:02:57.327"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.930" endtime="20201115 22:02:57.328"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.925" endtime="20201115 22:02:57.330"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:57.341" level="INFO">${RESULT} = [{'time': 0.037580778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.153000000004796e-06, 'source_diff': 9.153000000004796e-06}, {'time': 0.037595778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:57.331" endtime="20201115 22:02:57.341"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:57.372" level="INFO">${OVERHEAD} = {'time': [0.037580778, 0.037595778, 0.037611847, 0.037627861, 0.037644806, 0.037658917, 0.037676903, 0.037692903, 0.037709917, 0.037726917, 0.037747069, 0.037761056, 0.037778, 0.037792097, 0.037809097...</msg>
<status status="PASS" starttime="20201115 22:02:57.343" endtime="20201115 22:02:57.373"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:57.383" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201115 22:02:57.381" endtime="20201115 22:02:57.384"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:57.389" level="INFO">VALUE: [9.153000000004796e-06, 9.667000000004866e-06, 8.957999999996413e-06, 9.319000000000688e-06, 9.639000000005726e-06, 8.986000000002492e-06, 8.999999999995123e-06, 9.638999999998787e-06, 9.167000000004366e-06, 8.972999999995457e-06, 9.151999999998384e-06, 8.987000000001966e-06, 8.819000000000188e-06, 8.943999999996843e-06, 9.165999999997954e-06, 9.666999999997927e-06, 9.638999999998787e-06, 9.139000000005226e-06, 9.124999999998717e-06, 9.305000000001118e-06, 8.764000000001382e-06, 9.624999999999218e-06, 9.305000000001118e-06, 9.138999999998287e-06, 9.679999999998024e-06, 9.319000000000688e-06, 8.805000000000618e-06, 9.014000000001632e-06, 9.320000000000161e-06, 9.306000000000592e-06, 8.971999999995983e-06, 9.458999999996387e-06, 8.791000000001048e-06, 9.278000000001452e-06, 8.972000000002922e-06, 9.652999999998357e-06, 9.652999999998357e-06, 9.306000000000592e-06, 9.624999999999218e-06, 9.306000000000592e-06, 9.320000000000161e-06, 9.125000000005656e-06, 9.652999999998357e-06, 9.666999999997927e-06, 9.181000000003936e-06, 8.986000000002492e-06, 8.972000000002922e-06, 9.471999999996483e-06, 9.320000000000161e-06, 9.013999999994693e-06]</msg>
<status status="PASS" starttime="20201115 22:02:57.385" endtime="20201115 22:02:57.390"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.374" endtime="20201115 22:02:57.391"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:57.398" endtime="20201115 22:02:57.400"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:57.406" endtime="20201115 22:02:57.428"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.402" endtime="20201115 22:02:57.430"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.393" endtime="20201115 22:02:57.432"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.873" endtime="20201115 22:02:57.432"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.606" endtime="20201115 22:02:57.433"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:57.444" endtime="20201115 22:02:57.467"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.439" endtime="20201115 22:02:57.469"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.437" endtime="20201115 22:02:57.470"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:02:54.471" endtime="20201115 22:02:57.471" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set List">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:57.491" endtime="20201115 22:02:57.513"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.487" endtime="20201115 22:02:57.515"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:57.549" endtime="20201115 22:02:57.568"></status>
</kw>
<msg timestamp="20201115 22:02:57.569" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:57.546" endtime="20201115 22:02:57.570"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:57.576" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:57.572" endtime="20201115 22:02:57.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:02:57.583" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:02:57.578" endtime="20201115 22:02:57.583"></status>
</kw>
<status status="FAIL" starttime="20201115 22:02:57.538" endtime="20201115 22:02:57.585"></status>
</kw>
<status status="FAIL" starttime="20201115 22:02:57.531" endtime="20201115 22:02:57.587"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.529" endtime="20201115 22:02:57.588"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:02:57.596" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:02:57.594" endtime="20201115 22:02:57.597"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.590" endtime="20201115 22:02:57.597"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.527" endtime="20201115 22:02:57.597"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.525" endtime="20201115 22:02:57.598"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:57.599" endtime="20201115 22:02:57.603"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.521" endtime="20201115 22:02:57.605"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.517" endtime="20201115 22:02:57.606"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.484" endtime="20201115 22:02:57.607"></status>
</kw>
<kw name="${n} IN RANGE [ 25 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:57.614" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:57.640" endtime="20201115 22:02:57.656"></status>
</kw>
<msg timestamp="20201115 22:02:57.657" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:57.637" endtime="20201115 22:02:57.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:57.665" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:57.660" endtime="20201115 22:02:57.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:57.667" endtime="20201115 22:02:57.671"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.627" endtime="20201115 22:02:57.673"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.621" endtime="20201115 22:02:57.674"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:57.692" endtime="20201115 22:02:58.059"></status>
</kw>
<msg timestamp="20201115 22:02:58.067" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.140419417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.140435736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:57.689" endtime="20201115 22:02:58.067"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:58.086" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.140419417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.140435736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:58.069" endtime="20201115 22:02:58.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:58.088" endtime="20201115 22:02:58.092"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.680" endtime="20201115 22:02:58.094"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.676" endtime="20201115 22:02:58.095"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:58.106" level="INFO">${RESULT} = [{'time': 0.140435736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6319000000014627e-05, 'source_diff': 1.6319000000014627e-05}, {'time': 0.140542833, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:58.097" endtime="20201115 22:02:58.107"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:58.138" level="INFO">${OVERHEAD} = {'time': [0.140435736, 0.140542833, 0.140649014, 0.140752069, 0.140855194, 0.140959333, 0.141063333, 0.141170556, 0.141277736, 0.14137975, 0.141482986, 0.141587986, 0.14169225, 0.141796361, 0.14189847...</msg>
<status status="PASS" starttime="20201115 22:02:58.108" endtime="20201115 22:02:58.138"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:58.149" level="INFO">NAME: 00-overhead-1-set</msg>
<status status="PASS" starttime="20201115 22:02:58.147" endtime="20201115 22:02:58.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:58.155" level="INFO">VALUE: [1.6319000000014627e-05, 1.5958000000010353e-05, 1.6471999999989606e-05, 1.627700000000898e-05, 1.6540999999981043e-05, 1.629100000000161e-05, 1.629100000000161e-05, 1.5959000000009826e-05, 1.5749999999981057e-05, 1.5653000000004358e-05, 1.562499999999134e-05, 1.580500000000762e-05, 1.5791999999986706e-05, 1.6486000000009993e-05, 1.6236000000002804e-05, 1.579200000001446e-05, 1.647200000001736e-05, 1.5791999999986706e-05, 1.630600000002147e-05, 1.6278000000008452e-05, 1.6361000000020276e-05, 1.5639000000011727e-05, 1.645800000002473e-05, 1.6486000000009993e-05, 1.6457999999996975e-05, 1.613899999999835e-05, 1.5777999999994075e-05, 1.594499999998944e-05, 1.5972000000002984e-05, 1.5805999999979337e-05, 1.6278000000008452e-05, 1.6111999999984805e-05, 1.6236000000002804e-05, 1.647200000001736e-05, 1.645899999999645e-05, 1.6125000000005718e-05, 1.562499999999134e-05, 1.6485999999982237e-05, 1.5916000000004704e-05, 1.5806000000007092e-05, 1.6471999999989606e-05, 1.629100000000161e-05, 1.6276999999981223e-05, 1.630499999999424e-05, 1.6430000000011713e-05, 1.6125000000005718e-05, 1.647200000001736e-05, 1.562499999999134e-05, 1.6125000000005718e-05, 1.555500000000043e-05]</msg>
<status status="PASS" starttime="20201115 22:02:58.151" endtime="20201115 22:02:58.155"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.140" endtime="20201115 22:02:58.157"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:58.164" endtime="20201115 22:02:58.166"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:58.172" endtime="20201115 22:02:58.194"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.168" endtime="20201115 22:02:58.196"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.159" endtime="20201115 22:02:58.197"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.616" endtime="20201115 22:02:58.198"></status>
</kw>
<msg timestamp="20201115 22:02:58.199" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:58.222" endtime="20201115 22:02:58.238"></status>
</kw>
<msg timestamp="20201115 22:02:58.239" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:58.219" endtime="20201115 22:02:58.239"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:58.245" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:58.241" endtime="20201115 22:02:58.246"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:58.248" endtime="20201115 22:02:58.254"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.211" endtime="20201115 22:02:58.255"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.205" endtime="20201115 22:02:58.257"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:58.276" endtime="20201115 22:02:58.628"></status>
</kw>
<msg timestamp="20201115 22:02:58.636" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041884347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041899972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:58.272" endtime="20201115 22:02:58.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:58.655" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041884347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041899972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:58.638" endtime="20201115 22:02:58.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:58.657" endtime="20201115 22:02:58.661"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.264" endtime="20201115 22:02:58.663"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.258" endtime="20201115 22:02:58.665"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:58.676" level="INFO">${RESULT} = [{'time': 0.041899972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.562499999999828e-05, 'source_diff': 1.562499999999828e-05}, {'time': 0.042006194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:58.666" endtime="20201115 22:02:58.677"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:58.710" level="INFO">${OVERHEAD} = {'time': [0.041899972, 0.042006194, 0.042112194, 0.042218458, 0.0423245, 0.042427681, 0.042535931, 0.042641028, 0.042744111, 0.042850333, 0.042955403, 0.043060556, 0.043163667, 0.043271903, 0.04338004...</msg>
<status status="PASS" starttime="20201115 22:02:58.678" endtime="20201115 22:02:58.710"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:58.721" level="INFO">NAME: 00-overhead-1-set</msg>
<status status="PASS" starttime="20201115 22:02:58.719" endtime="20201115 22:02:58.722"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:58.727" level="INFO">VALUE: [1.562499999999828e-05, 1.630499999999424e-05, 1.5957999999996475e-05, 1.579100000000111e-05, 1.5806000000000153e-05, 1.5653000000004358e-05, 1.616699999999749e-05, 1.644499999999688e-05, 1.563899999999785e-05, 1.5651999999997945e-05, 1.6306000000000653e-05, 1.5973000000002457e-05, 1.5806000000000153e-05, 1.6236000000002804e-05, 1.6459000000003388e-05, 1.615299999999792e-05, 1.5653000000004358e-05, 1.562499999999828e-05, 1.5972000000002984e-05, 1.5929999999997335e-05, 1.5972000000002984e-05, 1.6500000000002624e-05, 1.6471999999996545e-05, 1.630500000000118e-05, 1.563899999999785e-05, 1.5806000000000153e-05, 1.579100000000111e-05, 1.630500000000118e-05, 1.6139000000005288e-05, 1.563899999999785e-05, 1.6486000000003054e-05, 1.5971999999996045e-05, 1.5833999999999293e-05, 1.5792000000000583e-05, 1.5806000000000153e-05, 1.5972000000002984e-05, 1.613899999999835e-05, 1.594499999999638e-05, 1.631900000000075e-05, 1.561099999999871e-05, 1.6486000000003054e-05, 1.612499999999878e-05, 1.645899999999645e-05, 1.5806000000000153e-05, 1.611099999999921e-05, 1.613899999999835e-05, 1.644499999999688e-05, 1.612499999999878e-05, 1.6471999999996545e-05, 1.563899999999785e-05]</msg>
<status status="PASS" starttime="20201115 22:02:58.723" endtime="20201115 22:02:58.727"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.711" endtime="20201115 22:02:58.729"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:58.736" endtime="20201115 22:02:58.738"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:58.744" endtime="20201115 22:02:58.766"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.739" endtime="20201115 22:02:58.768"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.731" endtime="20201115 22:02:58.770"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.200" endtime="20201115 22:02:58.770"></status>
</kw>
<msg timestamp="20201115 22:02:58.771" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:58.796" endtime="20201115 22:02:58.811"></status>
</kw>
<msg timestamp="20201115 22:02:58.813" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:58.792" endtime="20201115 22:02:58.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:58.819" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:58.815" endtime="20201115 22:02:58.820"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:58.822" endtime="20201115 22:02:58.826"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.785" endtime="20201115 22:02:58.827"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.778" endtime="20201115 22:02:58.829"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:58.848" endtime="20201115 22:02:59.201"></status>
</kw>
<msg timestamp="20201115 22:02:59.208" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043257194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043273347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:58.844" endtime="20201115 22:02:59.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:59.227" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043257194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043273347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:59.210" endtime="20201115 22:02:59.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:59.230" endtime="20201115 22:02:59.234"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.835" endtime="20201115 22:02:59.235"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.830" endtime="20201115 22:02:59.237"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:59.248" level="INFO">${RESULT} = [{'time': 0.043273347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.615299999999792e-05, 'source_diff': 1.615299999999792e-05}, {'time': 0.043375569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:59.238" endtime="20201115 22:02:59.248"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:59.279" level="INFO">${OVERHEAD} = {'time': [0.043273347, 0.043375569, 0.043480722, 0.043582833, 0.043687972, 0.043796153, 0.043900306, 0.044002486, 0.044104597, 0.044208736, 0.044313847, 0.044422, 0.04452725, 0.044629417, 0.0447355, 0...</msg>
<status status="PASS" starttime="20201115 22:02:59.250" endtime="20201115 22:02:59.280"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:59.290" level="INFO">NAME: 00-overhead-1-set</msg>
<status status="PASS" starttime="20201115 22:02:59.288" endtime="20201115 22:02:59.291"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:59.296" level="INFO">VALUE: [1.615299999999792e-05, 1.5944000000003844e-05, 1.615299999999792e-05, 1.562499999999828e-05, 1.615299999999792e-05, 1.6471999999996545e-05, 1.6306000000000653e-05, 1.6014000000001694e-05, 1.5653000000004358e-05, 1.591699999999724e-05, 1.579100000000111e-05, 1.6125000000005718e-05, 1.612499999999878e-05, 1.597299999999552e-05, 1.612499999999878e-05, 1.559699999999914e-05, 1.6485999999996115e-05, 1.569499999999613e-05, 1.5971999999996045e-05, 1.5639000000004788e-05, 1.562499999999828e-05, 1.645899999999645e-05, 1.629100000000161e-05, 1.605500000000093e-05, 1.6415999999998265e-05, 1.6473000000002957e-05, 1.5806000000000153e-05, 1.562499999999828e-05, 1.6320000000000223e-05, 1.5749999999994935e-05, 1.6457999999996975e-05, 1.6292000000001083e-05, 1.5806000000000153e-05, 1.580500000000068e-05, 1.6472000000003484e-05, 1.6457999999996975e-05, 1.6443999999997405e-05, 1.563899999999785e-05, 1.5959000000002888e-05, 1.580500000000068e-05, 1.6486000000003054e-05, 1.6292000000001083e-05, 1.5639000000004788e-05, 1.562499999999828e-05, 1.5957999999996475e-05, 1.6445000000003818e-05, 1.581900000000025e-05, 1.5999999999995185e-05, 1.563899999999785e-05, 1.5985999999995615e-05]</msg>
<status status="PASS" starttime="20201115 22:02:59.293" endtime="20201115 22:02:59.297"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.281" endtime="20201115 22:02:59.298"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:59.305" endtime="20201115 22:02:59.308"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:59.313" endtime="20201115 22:02:59.335"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.309" endtime="20201115 22:02:59.337"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.300" endtime="20201115 22:02:59.339"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.772" endtime="20201115 22:02:59.339"></status>
</kw>
<msg timestamp="20201115 22:02:59.340" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:59.364" endtime="20201115 22:02:59.380"></status>
</kw>
<msg timestamp="20201115 22:02:59.381" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:59.361" endtime="20201115 22:02:59.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:59.387" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:59.383" endtime="20201115 22:02:59.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:59.389" endtime="20201115 22:02:59.393"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.353" endtime="20201115 22:02:59.395"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.347" endtime="20201115 22:02:59.396"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:59.413" endtime="20201115 22:02:59.767"></status>
</kw>
<msg timestamp="20201115 22:02:59.775" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042373319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042388931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:59.410" endtime="20201115 22:02:59.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:59.794" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042373319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042388931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:59.777" endtime="20201115 22:02:59.795"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:59.797" endtime="20201115 22:02:59.801"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.403" endtime="20201115 22:02:59.802"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.398" endtime="20201115 22:02:59.804"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:59.815" level="INFO">${RESULT} = [{'time': 0.042388931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5611999999998183e-05, 'source_diff': 1.5611999999998183e-05}, {'time': 0.042495125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:59.806" endtime="20201115 22:02:59.816"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:59.847" level="INFO">${OVERHEAD} = {'time': [0.042388931, 0.042495125, 0.042599236, 0.042704236, 0.042807389, 0.042915569, 0.043021639, 0.04312775, 0.043229944, 0.043333028, 0.043440125, 0.043543208, 0.043645389, 0.043753389, 0.0438564...</msg>
<status status="PASS" starttime="20201115 22:02:59.818" endtime="20201115 22:02:59.848"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:59.859" level="INFO">NAME: 00-overhead-1-set</msg>
<status status="PASS" starttime="20201115 22:02:59.856" endtime="20201115 22:02:59.859"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:59.864" level="INFO">VALUE: [1.5611999999998183e-05, 1.561099999999871e-05, 1.5971999999996045e-05, 1.561099999999871e-05, 1.5958000000003414e-05, 1.629100000000161e-05, 1.608300000000007e-05, 1.5764000000001444e-05, 1.5637999999998375e-05, 1.5806000000000153e-05, 1.6458000000003914e-05, 1.577700000000154e-05, 1.641699999999774e-05, 1.6319999999993284e-05, 1.612499999999878e-05, 1.612499999999878e-05, 1.5945000000003318e-05, 1.5943999999996905e-05, 1.579100000000111e-05, 1.612499999999878e-05, 1.5791999999993644e-05, 1.612499999999878e-05, 1.558299999999957e-05, 1.579099999999417e-05, 1.562499999999828e-05, 1.612499999999878e-05, 1.6528000000001764e-05, 1.6458000000003914e-05, 1.561099999999871e-05, 1.6277999999994575e-05, 1.565299999999742e-05, 1.6278000000001513e-05, 1.6445000000003818e-05, 1.562499999999828e-05, 1.579099999999417e-05, 1.6306000000000653e-05, 1.579100000000111e-05, 1.5625000000005218e-05, 1.6472000000003484e-05, 1.580500000000068e-05, 1.6443999999997405e-05, 1.612499999999878e-05, 1.612499999999878e-05, 1.5973000000002457e-05, 1.612499999999878e-05, 1.612499999999878e-05, 1.6291999999994144e-05, 1.5985999999995615e-05, 1.63889999999986e-05, 1.5959000000002888e-05]</msg>
<status status="PASS" starttime="20201115 22:02:59.861" endtime="20201115 22:02:59.865"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.849" endtime="20201115 22:02:59.867"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:59.873" endtime="20201115 22:02:59.876"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:59.882" endtime="20201115 22:02:59.905"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.877" endtime="20201115 22:02:59.906"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.869" endtime="20201115 22:02:59.908"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.341" endtime="20201115 22:02:59.909"></status>
</kw>
<msg timestamp="20201115 22:02:59.909" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:59.933" endtime="20201115 22:02:59.948"></status>
</kw>
<msg timestamp="20201115 22:02:59.949" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:59.930" endtime="20201115 22:02:59.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:59.956" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:59.952" endtime="20201115 22:02:59.957"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:59.958" endtime="20201115 22:02:59.962"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.922" endtime="20201115 22:02:59.964"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.916" endtime="20201115 22:02:59.965"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:59.982" endtime="20201115 22:03:00.337"></status>
</kw>
<msg timestamp="20201115 22:03:00.344" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041901389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041917861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:59.979" endtime="20201115 22:03:00.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:00.363" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041901389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041917861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:00.346" endtime="20201115 22:03:00.364"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:00.366" endtime="20201115 22:03:00.369"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.971" endtime="20201115 22:03:00.371"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.966" endtime="20201115 22:03:00.373"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:00.383" level="INFO">${RESULT} = [{'time': 0.041917861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6472000000003484e-05, 'source_diff': 1.6472000000003484e-05}, {'time': 0.042020986, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:00.374" endtime="20201115 22:03:00.384"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:00.415" level="INFO">${OVERHEAD} = {'time': [0.041917861, 0.042020986, 0.042127069, 0.042231194, 0.042333417, 0.0424365, 0.042540625, 0.042645764, 0.042753889, 0.042857153, 0.042965236, 0.043070333, 0.043175542, 0.043280597, 0.04338570...</msg>
<status status="PASS" starttime="20201115 22:03:00.386" endtime="20201115 22:03:00.415"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:00.426" level="INFO">NAME: 00-overhead-1-set</msg>
<status status="PASS" starttime="20201115 22:03:00.424" endtime="20201115 22:03:00.427"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:00.432" level="INFO">VALUE: [1.6472000000003484e-05, 1.5764000000001444e-05, 1.6472000000003484e-05, 1.5972000000002984e-05, 1.595899999999595e-05, 1.6486000000003054e-05, 1.6306000000000653e-05, 1.6125000000005718e-05, 1.6139000000005288e-05, 1.6445000000003818e-05, 1.615299999999792e-05, 1.5611000000005648e-05, 1.5777999999994075e-05, 1.5943999999996905e-05, 1.561099999999871e-05, 1.5749999999994935e-05, 1.612499999999878e-05, 1.5971999999996045e-05, 1.5778000000001013e-05, 1.5639000000004788e-05, 1.561099999999871e-05, 1.5792000000000583e-05, 1.5943999999996905e-05, 1.611099999999921e-05, 1.5985999999995615e-05, 1.5792000000000583e-05, 1.630500000000118e-05, 1.5957999999996475e-05, 1.5957999999996475e-05, 1.615299999999792e-05, 1.6443999999997405e-05, 1.6179999999997585e-05, 1.5637999999998375e-05, 1.6471999999996545e-05, 1.559699999999914e-05, 1.6458000000003914e-05, 1.6473000000002957e-05, 1.6458000000003914e-05, 1.6264000000001944e-05, 1.580500000000068e-05, 1.6320000000000223e-05, 1.562499999999828e-05, 1.6306000000000653e-05, 1.613899999999835e-05, 1.6139000000005288e-05, 1.562499999999828e-05, 1.6320000000000223e-05, 1.6499999999995685e-05, 1.637499999999903e-05, 1.6471999999996545e-05]</msg>
<status status="PASS" starttime="20201115 22:03:00.428" endtime="20201115 22:03:00.433"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.417" endtime="20201115 22:03:00.435"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:00.441" endtime="20201115 22:03:00.444"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:00.450" endtime="20201115 22:03:00.472"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.446" endtime="20201115 22:03:00.474"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.437" endtime="20201115 22:03:00.475"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.910" endtime="20201115 22:03:00.476"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.612" endtime="20201115 22:03:00.477"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.610" endtime="20201115 22:03:00.477"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:00.482" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:00.506" endtime="20201115 22:03:00.521"></status>
</kw>
<msg timestamp="20201115 22:03:00.523" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:00.502" endtime="20201115 22:03:00.523"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:00.529" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:00.525" endtime="20201115 22:03:00.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:00.531" endtime="20201115 22:03:00.535"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.495" endtime="20201115 22:03:00.537"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.489" endtime="20201115 22:03:00.538"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:00.556" endtime="20201115 22:03:00.908"></status>
</kw>
<msg timestamp="20201115 22:03:00.915" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047064694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047078597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:00.552" endtime="20201115 22:03:00.915"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:00.933" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047064694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047078597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:00.917" endtime="20201115 22:03:00.934"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:00.936" endtime="20201115 22:03:00.941"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.545" endtime="20201115 22:03:00.943"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.540" endtime="20201115 22:03:00.944"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:00.955" level="INFO">${RESULT} = [{'time': 0.047078597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3903000000002608e-05, 'source_diff': 1.3903000000002608e-05}, {'time': 0.047194722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:00.946" endtime="20201115 22:03:00.956"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:00.989" level="INFO">${OVERHEAD} = {'time': [0.047078597, 0.047194722, 0.047313889, 0.047435, 0.047555167, 0.047673375, 0.0477935, 0.047912667, 0.048032736, 0.048154889, 0.048272125, 0.048391208, 0.048507444, 0.048624514, 0.048742681, ...</msg>
<status status="PASS" starttime="20201115 22:03:00.957" endtime="20201115 22:03:00.989"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:01.000" level="INFO">NAME: 00-overhead-2-set</msg>
<status status="PASS" starttime="20201115 22:03:00.998" endtime="20201115 22:03:01.001"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:01.007" level="INFO">VALUE: [1.3903000000002608e-05, 1.40689999999985e-05, 1.4041999999998833e-05, 1.4013999999999693e-05, 1.3403000000002108e-05, 1.3693999999994655e-05, 1.4167000000002428e-05, 1.4069999999997973e-05, 1.4222000000001234e-05, 1.4236000000000804e-05, 1.3860999999996959e-05, 1.3901999999996195e-05, 1.3735999999993365e-05, 1.3903000000002608e-05, 1.3389000000002538e-05, 1.3568999999998e-05, 1.355499999999843e-05, 1.3889000000003038e-05, 1.3402999999995169e-05, 1.4181000000001998e-05, 1.3888999999996099e-05, 1.3542000000005272e-05, 1.3638999999995849e-05, 1.4000000000000123e-05, 1.3556000000004842e-05, 1.3903000000002608e-05, 1.3568999999998e-05, 1.3374999999996029e-05, 1.3347000000003828e-05, 1.3763999999999443e-05, 1.3568999999998e-05, 1.3888999999996099e-05, 1.3402999999995169e-05, 1.3569000000004938e-05, 1.3319999999997223e-05, 1.3889000000003038e-05, 1.3387999999996125e-05, 1.3889000000003038e-05, 1.3680000000002024e-05, 1.4110999999997209e-05, 1.4056000000005342e-05, 1.4236000000000804e-05, 1.3722000000000734e-05, 1.4209000000001137e-05, 1.3403000000002108e-05, 1.408299999999807e-05, 1.3736000000000304e-05, 1.3903000000002608e-05, 1.3402999999995169e-05, 1.3888999999996099e-05]</msg>
<status status="PASS" starttime="20201115 22:03:01.003" endtime="20201115 22:03:01.008"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.991" endtime="20201115 22:03:01.009"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:01.016" endtime="20201115 22:03:01.019"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:01.024" endtime="20201115 22:03:01.046"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.020" endtime="20201115 22:03:01.048"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.011" endtime="20201115 22:03:01.050"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.483" endtime="20201115 22:03:01.050"></status>
</kw>
<msg timestamp="20201115 22:03:01.051" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:01.075" endtime="20201115 22:03:01.091"></status>
</kw>
<msg timestamp="20201115 22:03:01.092" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:01.071" endtime="20201115 22:03:01.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:01.098" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:01.094" endtime="20201115 22:03:01.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:01.101" endtime="20201115 22:03:01.104"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.064" endtime="20201115 22:03:01.106"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.058" endtime="20201115 22:03:01.108"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:01.125" endtime="20201115 22:03:01.477"></status>
</kw>
<msg timestamp="20201115 22:03:01.484" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041786194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041799597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:01.121" endtime="20201115 22:03:01.484"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:01.503" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041786194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041799597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:01.486" endtime="20201115 22:03:01.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:01.505" endtime="20201115 22:03:01.509"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.114" endtime="20201115 22:03:01.511"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.109" endtime="20201115 22:03:01.512"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:01.523" level="INFO">${RESULT} = [{'time': 0.041799597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3403000000002108e-05, 'source_diff': 1.3403000000002108e-05}, {'time': 0.041917778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:01.514" endtime="20201115 22:03:01.523"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:01.555" level="INFO">${OVERHEAD} = {'time': [0.041799597, 0.041917778, 0.042040083, 0.04215825, 0.042276375, 0.042396583, 0.042512639, 0.042632875, 0.042751111, 0.042867333, 0.042985458, 0.043106597, 0.043225847, 0.043343986, 0.0434620...</msg>
<status status="PASS" starttime="20201115 22:03:01.525" endtime="20201115 22:03:01.557"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:01.567" level="INFO">NAME: 00-overhead-2-set</msg>
<status status="PASS" starttime="20201115 22:03:01.565" endtime="20201115 22:03:01.568"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:01.573" level="INFO">VALUE: [1.3403000000002108e-05, 1.3570000000004412e-05, 1.4179999999995585e-05, 1.3417000000001678e-05, 1.3346999999996889e-05, 1.355499999999843e-05, 1.3346999999996889e-05, 1.4041999999998833e-05, 1.4222000000001234e-05, 1.40689999999985e-05, 1.3901999999996195e-05, 1.4097000000004578e-05, 1.3402999999995169e-05, 1.3917000000002178e-05, 1.384699999999739e-05, 1.3889000000003038e-05, 1.3555000000005368e-05, 1.3736000000000304e-05, 1.4222000000001234e-05, 1.3888000000003564e-05, 1.4236000000000804e-05, 1.3902999999995669e-05, 1.358299999999757e-05, 1.3458000000000914e-05, 1.3569999999997473e-05, 1.3736000000000304e-05, 1.4236000000000804e-05, 1.4194999999994629e-05, 1.4236000000000804e-05, 1.4250000000000373e-05, 1.355499999999843e-05, 1.3541999999998333e-05, 1.3874999999996529e-05, 1.3513999999999193e-05, 1.4236000000000804e-05, 1.4237000000000277e-05, 1.3653000000002358e-05, 1.4236000000000804e-05, 1.3736000000000304e-05, 1.3874999999996529e-05, 1.3402999999995169e-05, 1.4236000000000804e-05, 1.3458000000000914e-05, 1.3570000000004412e-05, 1.3944000000001844e-05, 1.3403000000002108e-05, 1.3569000000004938e-05, 1.3375000000002968e-05, 1.3901999999996195e-05, 1.3444000000001344e-05]</msg>
<status status="PASS" starttime="20201115 22:03:01.570" endtime="20201115 22:03:01.574"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.558" endtime="20201115 22:03:01.576"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:01.582" endtime="20201115 22:03:01.585"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:01.591" endtime="20201115 22:03:01.613"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.586" endtime="20201115 22:03:01.614"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.577" endtime="20201115 22:03:01.616"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.052" endtime="20201115 22:03:01.617"></status>
</kw>
<msg timestamp="20201115 22:03:01.617" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:01.641" endtime="20201115 22:03:01.657"></status>
</kw>
<msg timestamp="20201115 22:03:01.658" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:01.637" endtime="20201115 22:03:01.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:01.664" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:01.660" endtime="20201115 22:03:01.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:01.667" endtime="20201115 22:03:01.671"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.630" endtime="20201115 22:03:01.672"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.624" endtime="20201115 22:03:01.674"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:01.691" endtime="20201115 22:03:02.053"></status>
</kw>
<msg timestamp="20201115 22:03:02.061" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041764097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041777653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:01.687" endtime="20201115 22:03:02.062"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:02.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041764097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041777653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:02.064" endtime="20201115 22:03:02.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:02.085" endtime="20201115 22:03:02.090"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.680" endtime="20201115 22:03:02.092"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.675" endtime="20201115 22:03:02.094"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:02.107" level="INFO">${RESULT} = [{'time': 0.041777653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3555999999997903e-05, 'source_diff': 1.3555999999997903e-05}, {'time': 0.041895778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:02.095" endtime="20201115 22:03:02.107"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:02.140" level="INFO">${OVERHEAD} = {'time': [0.041777653, 0.041895778, 0.042014917, 0.042136, 0.042254153, 0.042375458, 0.042493611, 0.042612681, 0.042728875, 0.042847028, 0.042966111, 0.043083333, 0.0432025, 0.043321667, 0.043438792, ...</msg>
<status status="PASS" starttime="20201115 22:03:02.109" endtime="20201115 22:03:02.140"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:02.151" level="INFO">NAME: 00-overhead-2-set</msg>
<status status="PASS" starttime="20201115 22:03:02.149" endtime="20201115 22:03:02.152"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:02.157" level="INFO">VALUE: [1.3555999999997903e-05, 1.4222000000001234e-05, 1.4083999999997543e-05, 1.3889000000003038e-05, 1.3556000000004842e-05, 1.355499999999843e-05, 1.3375000000002968e-05, 1.4223000000000707e-05, 1.3389000000002538e-05, 1.3736000000000304e-05, 1.3403000000002108e-05, 1.408299999999807e-05, 1.4236000000000804e-05, 1.4069999999997973e-05, 1.3888999999996099e-05, 1.354099999999886e-05, 1.4055999999998403e-05, 1.3389000000002538e-05, 1.4236000000000804e-05, 1.3568999999998e-05, 1.4083000000005008e-05, 1.3403000000002108e-05, 1.3903000000002608e-05, 1.3403000000002108e-05, 1.3917000000002178e-05, 1.4236000000000804e-05, 1.4098000000004052e-05, 1.3888999999996099e-05, 1.4042000000005772e-05, 1.3375000000002968e-05, 1.3570000000004412e-05, 1.3763999999999443e-05, 1.4237000000000277e-05, 1.4236000000000804e-05, 1.3915999999995765e-05, 1.3347000000003828e-05, 1.4236000000000804e-05, 1.3902999999995669e-05, 1.4055999999998403e-05, 1.3889000000003038e-05, 1.4222000000001234e-05, 1.355499999999843e-05, 1.3874999999996529e-05, 1.3887999999996625e-05, 1.3875000000003468e-05, 1.355499999999843e-05, 1.4236000000000804e-05, 1.4056000000005342e-05, 1.3555999999997903e-05, 1.3389000000002538e-05]</msg>
<status status="PASS" starttime="20201115 22:03:02.154" endtime="20201115 22:03:02.158"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.142" endtime="20201115 22:03:02.159"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:02.166" endtime="20201115 22:03:02.169"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:02.174" endtime="20201115 22:03:02.196"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.170" endtime="20201115 22:03:02.198"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.161" endtime="20201115 22:03:02.200"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.618" endtime="20201115 22:03:02.200"></status>
</kw>
<msg timestamp="20201115 22:03:02.201" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:02.225" endtime="20201115 22:03:02.241"></status>
</kw>
<msg timestamp="20201115 22:03:02.242" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:02.221" endtime="20201115 22:03:02.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:02.248" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:02.244" endtime="20201115 22:03:02.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:02.251" endtime="20201115 22:03:02.255"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.214" endtime="20201115 22:03:02.256"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.208" endtime="20201115 22:03:02.258"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:02.275" endtime="20201115 22:03:02.626"></status>
</kw>
<msg timestamp="20201115 22:03:02.634" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042012514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042025903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:02.271" endtime="20201115 22:03:02.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:02.652" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042012514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042025903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:02.636" endtime="20201115 22:03:02.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:02.655" endtime="20201115 22:03:02.659"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.264" endtime="20201115 22:03:02.661"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.259" endtime="20201115 22:03:02.663"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:02.674" level="INFO">${RESULT} = [{'time': 0.042025903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3389000000002538e-05, 'source_diff': 1.3389000000002538e-05}, {'time': 0.042148014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:02.664" endtime="20201115 22:03:02.674"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:02.706" level="INFO">${OVERHEAD} = {'time': [0.042025903, 0.042148014, 0.042268208, 0.042390319, 0.042509625, 0.042627667, 0.042749903, 0.042869125, 0.042986278, 0.043101417, 0.043219597, 0.043338667, 0.043454875, 0.043575028, 0.043696...</msg>
<status status="PASS" starttime="20201115 22:03:02.676" endtime="20201115 22:03:02.707"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:02.718" level="INFO">NAME: 00-overhead-2-set</msg>
<status status="PASS" starttime="20201115 22:03:02.715" endtime="20201115 22:03:02.718"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:02.723" level="INFO">VALUE: [1.3389000000002538e-05, 1.4221999999994295e-05, 1.3944000000001844e-05, 1.3888000000003564e-05, 1.4056000000005342e-05, 1.3417000000001678e-05, 1.4069999999997973e-05, 1.3889000000003038e-05, 1.4056000000005342e-05, 1.3431000000001247e-05, 1.3415999999995265e-05, 1.4250000000000373e-05, 1.3388999999995599e-05, 1.4222000000001234e-05, 1.4222000000001234e-05, 1.4069999999997973e-05, 1.429099999999961e-05, 1.3901999999996195e-05, 1.3722000000000734e-05, 1.4236000000000804e-05, 1.408299999999807e-05, 1.405499999999893e-05, 1.4055999999998403e-05, 1.3556000000004842e-05, 1.354099999999886e-05, 1.3874999999996529e-05, 1.3417000000001678e-05, 1.3916999999995239e-05, 1.3930000000002274e-05, 1.4250000000000373e-05, 1.4222000000001234e-05, 1.358299999999757e-05, 1.405499999999893e-05, 1.3388999999995599e-05, 1.4222000000001234e-05, 1.3597000000004078e-05, 1.3403000000002108e-05, 1.4237000000000277e-05, 1.3388999999995599e-05, 1.3402999999995169e-05, 1.4222000000001234e-05, 1.3416000000002204e-05, 1.3860999999996959e-05, 1.3931000000001748e-05, 1.3583000000004508e-05, 1.3568999999998e-05, 1.3556000000004842e-05, 1.4055999999998403e-05, 1.3403000000002108e-05, 1.404099999999936e-05]</msg>
<status status="PASS" starttime="20201115 22:03:02.720" endtime="20201115 22:03:02.724"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.708" endtime="20201115 22:03:02.726"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:02.732" endtime="20201115 22:03:02.735"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:02.741" endtime="20201115 22:03:02.763"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.736" endtime="20201115 22:03:02.765"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.728" endtime="20201115 22:03:02.766"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.202" endtime="20201115 22:03:02.767"></status>
</kw>
<msg timestamp="20201115 22:03:02.767" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:02.791" endtime="20201115 22:03:02.807"></status>
</kw>
<msg timestamp="20201115 22:03:02.809" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:02.788" endtime="20201115 22:03:02.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:02.815" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:02.811" endtime="20201115 22:03:02.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:02.817" endtime="20201115 22:03:02.821"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.780" endtime="20201115 22:03:02.823"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.774" endtime="20201115 22:03:02.824"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:02.841" endtime="20201115 22:03:03.195"></status>
</kw>
<msg timestamp="20201115 22:03:03.211" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042430542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042443931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:02.838" endtime="20201115 22:03:03.211"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:03.230" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042430542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042443931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:03.213" endtime="20201115 22:03:03.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:03.232" endtime="20201115 22:03:03.236"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.831" endtime="20201115 22:03:03.238"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.826" endtime="20201115 22:03:03.239"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:03.250" level="INFO">${RESULT} = [{'time': 0.042443931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3388999999995599e-05, 'source_diff': 1.3388999999995599e-05}, {'time': 0.042563153, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:03.241" endtime="20201115 22:03:03.251"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:03.284" level="INFO">${OVERHEAD} = {'time': [0.042443931, 0.042563153, 0.042684194, 0.042804347, 0.042923472, 0.043040667, 0.043161736, 0.043283806, 0.043401042, 0.043516125, 0.043632319, 0.043753444, 0.043870514, 0.043991681, 0.044109...</msg>
<status status="PASS" starttime="20201115 22:03:03.252" endtime="20201115 22:03:03.285"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:03.296" level="INFO">NAME: 00-overhead-2-set</msg>
<status status="PASS" starttime="20201115 22:03:03.293" endtime="20201115 22:03:03.296"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:03.301" level="INFO">VALUE: [1.3388999999995599e-05, 1.3389000000002538e-05, 1.3736000000000304e-05, 1.3888999999996099e-05, 1.4250000000000373e-05, 1.3888999999996099e-05, 1.3472000000000484e-05, 1.4055999999998403e-05, 1.4236000000000804e-05, 1.3361000000003398e-05, 1.3388000000003064e-05, 1.3597000000004078e-05, 1.3569999999997473e-05, 1.4209000000001137e-05, 1.3791999999998583e-05, 1.4000000000000123e-05, 1.3389000000002538e-05, 1.3389000000002538e-05, 1.3888999999996099e-05, 1.3389000000002538e-05, 1.355499999999843e-05, 1.408299999999807e-05, 1.3555999999997903e-05, 1.3417000000001678e-05, 1.3388000000003064e-05, 1.3695000000001067e-05, 1.3916000000002704e-05, 1.3722000000000734e-05, 1.4041999999998833e-05, 1.4237000000000277e-05, 1.3556000000004842e-05, 1.405499999999893e-05, 1.3403000000002108e-05, 1.3389000000002538e-05, 1.4055999999998403e-05, 1.3875000000003468e-05, 1.408299999999807e-05, 1.4056000000005342e-05, 1.355499999999843e-05, 1.3568999999998e-05, 1.3722000000000734e-05, 1.3889000000003038e-05, 1.3570000000004412e-05, 1.3389000000002538e-05, 1.4250000000000373e-05, 1.3569999999997473e-05, 1.4056000000005342e-05, 1.3430999999994309e-05, 1.4069999999997973e-05, 1.3722000000000734e-05]</msg>
<status status="PASS" starttime="20201115 22:03:03.298" endtime="20201115 22:03:03.302"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.286" endtime="20201115 22:03:03.304"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:03.310" endtime="20201115 22:03:03.313"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:03.319" endtime="20201115 22:03:03.340"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.314" endtime="20201115 22:03:03.342"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.306" endtime="20201115 22:03:03.344"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.768" endtime="20201115 22:03:03.345"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.480" endtime="20201115 22:03:03.345"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.478" endtime="20201115 22:03:03.345"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:03.350" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:03.374" endtime="20201115 22:03:03.391"></status>
</kw>
<msg timestamp="20201115 22:03:03.392" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:03.371" endtime="20201115 22:03:03.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:03.398" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:03.394" endtime="20201115 22:03:03.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:03.401" endtime="20201115 22:03:03.405"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.363" endtime="20201115 22:03:03.407"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.357" endtime="20201115 22:03:03.408"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:03.425" endtime="20201115 22:03:03.777"></status>
</kw>
<msg timestamp="20201115 22:03:03.784" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047005458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047019792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:03.422" endtime="20201115 22:03:03.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:03.802" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047005458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047019792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:03.786" endtime="20201115 22:03:03.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:03.805" endtime="20201115 22:03:03.809"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.414" endtime="20201115 22:03:03.810"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.409" endtime="20201115 22:03:03.812"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:03.823" level="INFO">${RESULT} = [{'time': 0.047019792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4333999999997793e-05, 'source_diff': 1.4333999999997793e-05}, {'time': 0.047149944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:03.813" endtime="20201115 22:03:03.823"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:03.856" level="INFO">${OVERHEAD} = {'time': [0.047019792, 0.047149944, 0.047282069, 0.047416236, 0.047548514, 0.047682556, 0.047812778, 0.047949931, 0.048086069, 0.048224361, 0.0483585, 0.048490569, 0.048625833, 0.048758944, 0.04889119...</msg>
<status status="PASS" starttime="20201115 22:03:03.825" endtime="20201115 22:03:03.856"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:03.867" level="INFO">NAME: 00-overhead-3-set</msg>
<status status="PASS" starttime="20201115 22:03:03.865" endtime="20201115 22:03:03.868"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:03.872" level="INFO">VALUE: [1.4333999999997793e-05, 1.4194000000002094e-05, 1.4416000000003204e-05, 1.4750000000000874e-05, 1.458299999999857e-05, 1.5069999999998973e-05, 1.4236000000000804e-05, 1.4431000000002248e-05, 1.4736000000001304e-05, 1.5028000000000263e-05, 1.4764000000000443e-05, 1.4235999999993865e-05, 1.4236000000000804e-05, 1.4429999999995835e-05, 1.476300000000097e-05, 1.4250000000000373e-05, 1.4597000000005078e-05, 1.5083999999998543e-05, 1.4402000000003634e-05, 1.4915999999996765e-05, 1.5083999999998543e-05, 1.4709000000001637e-05, 1.4417000000002678e-05, 1.4875000000004468e-05, 1.4250000000000373e-05, 1.509699999999864e-05, 1.4568999999999e-05, 1.426300000000047e-05, 1.4417000000002678e-05, 1.4597999999997613e-05, 1.4929999999996335e-05, 1.4250000000000373e-05, 1.4263999999999943e-05, 1.4901999999997195e-05, 1.4403000000003108e-05, 1.4250000000000373e-05, 1.461099999999771e-05, 1.4764000000000443e-05, 1.4930000000003274e-05, 1.4263999999999943e-05, 1.459699999999814e-05, 1.511099999999821e-05, 1.4430000000002774e-05, 1.4972000000001984e-05, 1.4570000000005412e-05, 1.4263999999999943e-05, 1.4417000000002678e-05, 1.4417000000002678e-05, 1.4361000000004398e-05, 1.5083000000006008e-05]</msg>
<status status="PASS" starttime="20201115 22:03:03.869" endtime="20201115 22:03:03.873"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.857" endtime="20201115 22:03:03.875"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:03.881" endtime="20201115 22:03:03.884"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:03.890" endtime="20201115 22:03:03.912"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.885" endtime="20201115 22:03:03.914"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.877" endtime="20201115 22:03:03.915"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.352" endtime="20201115 22:03:03.916"></status>
</kw>
<msg timestamp="20201115 22:03:03.916" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:03.941" endtime="20201115 22:03:03.958"></status>
</kw>
<msg timestamp="20201115 22:03:03.959" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:03.937" endtime="20201115 22:03:03.960"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:03.966" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:03.962" endtime="20201115 22:03:03.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:03.968" endtime="20201115 22:03:03.972"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.930" endtime="20201115 22:03:03.974"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.923" endtime="20201115 22:03:03.975"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:03.992" endtime="20201115 22:03:04.337"></status>
</kw>
<msg timestamp="20201115 22:03:04.344" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043071833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043086764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:03.989" endtime="20201115 22:03:04.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:04.363" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043071833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043086764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:04.347" endtime="20201115 22:03:04.364"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:04.365" endtime="20201115 22:03:04.369"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.981" endtime="20201115 22:03:04.371"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.977" endtime="20201115 22:03:04.372"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:04.383" level="INFO">${RESULT} = [{'time': 0.043086764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4931000000002748e-05, 'source_diff': 1.4931000000002748e-05}, {'time': 0.043223014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:04.374" endtime="20201115 22:03:04.383"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:04.414" level="INFO">${OVERHEAD} = {'time': [0.043086764, 0.043223014, 0.043354125, 0.043485264, 0.043621361, 0.043757625, 0.043892806, 0.044027917, 0.044160014, 0.044290306, 0.044426417, 0.044560569, 0.044695736, 0.044830875, 0.044965...</msg>
<status status="PASS" starttime="20201115 22:03:04.385" endtime="20201115 22:03:04.415"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:04.426" level="INFO">NAME: 00-overhead-3-set</msg>
<status status="PASS" starttime="20201115 22:03:04.423" endtime="20201115 22:03:04.427"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:04.432" level="INFO">VALUE: [1.4931000000002748e-05, 1.4416999999995739e-05, 1.50689999999995e-05, 1.4236000000000804e-05, 1.4416999999995739e-05, 1.4903000000003608e-05, 1.4750000000000874e-05, 1.4917000000003178e-05, 1.5055999999999403e-05, 1.4598000000004552e-05, 1.4250000000000373e-05, 1.4402000000003634e-05, 1.4291999999999083e-05, 1.4250000000000373e-05, 1.508299999999907e-05, 1.4736000000001304e-05, 1.4167000000002428e-05, 1.511099999999821e-05, 1.5124999999997779e-05, 1.4861000000004898e-05, 1.4778000000000013e-05, 1.50689999999995e-05, 1.4583999999998043e-05, 1.458299999999857e-05, 1.480499999999968e-05, 1.4444000000002344e-05, 1.4237000000000277e-05, 1.4749999999993935e-05, 1.4416999999995739e-05, 1.4597000000005078e-05, 1.4764000000000443e-05, 1.508299999999907e-05, 1.4431000000002248e-05, 1.5083999999998543e-05, 1.4207999999994725e-05, 1.4917000000003178e-05, 1.4236000000000804e-05, 1.4931000000002748e-05, 1.4598000000004552e-05, 1.4778000000000013e-05, 1.4250000000000373e-05, 1.4236000000000804e-05, 1.5124999999997779e-05, 1.509699999999864e-05, 1.4458000000001914e-05, 1.4250000000000373e-05, 1.4207999999994725e-05, 1.4915999999996765e-05, 1.508299999999907e-05, 1.4931000000002748e-05]</msg>
<status status="PASS" starttime="20201115 22:03:04.429" endtime="20201115 22:03:04.433"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.416" endtime="20201115 22:03:04.434"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:04.441" endtime="20201115 22:03:04.443"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:04.449" endtime="20201115 22:03:04.471"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.445" endtime="20201115 22:03:04.473"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.436" endtime="20201115 22:03:04.474"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.917" endtime="20201115 22:03:04.475"></status>
</kw>
<msg timestamp="20201115 22:03:04.475" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:04.499" endtime="20201115 22:03:04.515"></status>
</kw>
<msg timestamp="20201115 22:03:04.516" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:04.496" endtime="20201115 22:03:04.517"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:04.523" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:04.519" endtime="20201115 22:03:04.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:04.525" endtime="20201115 22:03:04.529"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.489" endtime="20201115 22:03:04.530"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.482" endtime="20201115 22:03:04.532"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:04.549" endtime="20201115 22:03:04.889"></status>
</kw>
<msg timestamp="20201115 22:03:04.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041809375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041824125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:04.545" endtime="20201115 22:03:04.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:04.914" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041809375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041824125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:04.898" endtime="20201115 22:03:04.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:04.916" endtime="20201115 22:03:04.920"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.538" endtime="20201115 22:03:04.922"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.533" endtime="20201115 22:03:04.923"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:04.934" level="INFO">${RESULT} = [{'time': 0.041824125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4749999999993935e-05, 'source_diff': 1.4749999999993935e-05}, {'time': 0.041960278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:04.925" endtime="20201115 22:03:04.934"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:04.973" level="INFO">${OVERHEAD} = {'time': [0.041824125, 0.041960278, 0.0420985, 0.04223275, 0.042362903, 0.042493889, 0.042629181, 0.04276525, 0.042901472, 0.043033722, 0.043166778, 0.043298986, 0.043431097, 0.043567278, 0.043701444,...</msg>
<status status="PASS" starttime="20201115 22:03:04.936" endtime="20201115 22:03:04.973"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:04.985" level="INFO">NAME: 00-overhead-3-set</msg>
<status status="PASS" starttime="20201115 22:03:04.982" endtime="20201115 22:03:04.985"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:04.990" level="INFO">VALUE: [1.4749999999993935e-05, 1.4249999999993435e-05, 1.509699999999864e-05, 1.461099999999771e-05, 1.4195000000001567e-05, 1.458299999999857e-05, 1.4917000000003178e-05, 1.4902999999996669e-05, 1.4527999999999763e-05, 1.5055000000006868e-05, 1.4263999999999943e-05, 1.4250000000000373e-05, 1.4416000000003204e-05, 1.5069999999998973e-05, 1.4250000000000373e-05, 1.4416000000003204e-05, 1.509699999999864e-05, 1.459699999999814e-05, 1.4291999999999083e-05, 1.4429999999995835e-05, 1.4429999999995835e-05, 1.4736000000001304e-05, 1.4929999999996335e-05, 1.5138999999997349e-05, 1.4444999999994879e-05, 1.4431000000002248e-05, 1.5083000000006008e-05, 1.4431000000002248e-05, 1.4999999999994185e-05, 1.4930999999995809e-05, 1.4750000000000874e-05, 1.4568999999999e-05, 1.508299999999907e-05, 1.4750000000000874e-05, 1.4750000000000874e-05, 1.4764000000000443e-05, 1.4236000000000804e-05, 1.4250000000000373e-05, 1.4236000000000804e-05, 1.4597000000005078e-05, 1.509699999999864e-05, 1.4568999999999e-05, 1.509699999999864e-05, 1.4417000000002678e-05, 1.508299999999907e-05, 1.4223000000000707e-05, 1.4403000000003108e-05, 1.459699999999814e-05, 1.4764000000000443e-05, 1.5084000000005482e-05]</msg>
<status status="PASS" starttime="20201115 22:03:04.987" endtime="20201115 22:03:04.992"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.975" endtime="20201115 22:03:04.994"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:05.001" endtime="20201115 22:03:05.004"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:05.009" endtime="20201115 22:03:05.032"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.005" endtime="20201115 22:03:05.034"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.996" endtime="20201115 22:03:05.035"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.476" endtime="20201115 22:03:05.036"></status>
</kw>
<msg timestamp="20201115 22:03:05.036" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:05.059" endtime="20201115 22:03:05.076"></status>
</kw>
<msg timestamp="20201115 22:03:05.078" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:05.056" endtime="20201115 22:03:05.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:05.084" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:05.080" endtime="20201115 22:03:05.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:05.086" endtime="20201115 22:03:05.090"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.049" endtime="20201115 22:03:05.092"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.043" endtime="20201115 22:03:05.093"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:05.110" endtime="20201115 22:03:05.452"></status>
</kw>
<msg timestamp="20201115 22:03:05.459" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042304222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042319264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:05.107" endtime="20201115 22:03:05.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:05.479" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042304222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042319264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:05.463" endtime="20201115 22:03:05.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:05.481" endtime="20201115 22:03:05.485"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.099" endtime="20201115 22:03:05.487"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.095" endtime="20201115 22:03:05.488"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:05.499" level="INFO">${RESULT} = [{'time': 0.042319264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5041999999999833e-05, 'source_diff': 1.5041999999999833e-05}, {'time': 0.042449347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:05.490" endtime="20201115 22:03:05.499"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:05.532" level="INFO">${OVERHEAD} = {'time': [0.042319264, 0.042449347, 0.042580528, 0.042716667, 0.042850806, 0.042986944, 0.043118083, 0.043254264, 0.043388486, 0.043525597, 0.043661833, 0.043794903, 0.043930069, 0.044062278, 0.044200...</msg>
<status status="PASS" starttime="20201115 22:03:05.501" endtime="20201115 22:03:05.532"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:05.543" level="INFO">NAME: 00-overhead-3-set</msg>
<status status="PASS" starttime="20201115 22:03:05.541" endtime="20201115 22:03:05.544"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:05.548" level="INFO">VALUE: [1.5041999999999833e-05, 1.459699999999814e-05, 1.4222000000001234e-05, 1.5083999999998543e-05, 1.4416999999995739e-05, 1.4915999999996765e-05, 1.4750000000000874e-05, 1.5055999999999403e-05, 1.4207999999994725e-05, 1.4902999999996669e-05, 1.4415999999996265e-05, 1.4375000000003968e-05, 1.426300000000047e-05, 1.4750000000000874e-05, 1.508299999999907e-05, 1.4194000000002094e-05, 1.4625000000004218e-05, 1.4874999999997529e-05, 1.4431000000002248e-05, 1.5166999999996489e-05, 1.4250000000000373e-05, 1.4236000000000804e-05, 1.4403000000003108e-05, 1.4653000000003358e-05, 1.4568999999999e-05, 1.4555999999998903e-05, 1.4263999999999943e-05, 1.509699999999864e-05, 1.4749999999993935e-05, 1.4431000000002248e-05, 1.4417000000002678e-05, 1.476300000000097e-05, 1.5083999999998543e-05, 1.4915999999996765e-05, 1.4916999999996239e-05, 1.4250000000000373e-05, 1.4874999999997529e-05, 1.4930999999995809e-05, 1.4930999999995809e-05, 1.4764000000000443e-05, 1.4402999999996169e-05, 1.508299999999907e-05, 1.458299999999857e-05, 1.4250000000000373e-05, 1.4444999999994879e-05, 1.459699999999814e-05, 1.4235999999993865e-05, 1.4415999999996265e-05, 1.4431000000002248e-05, 1.4916999999996239e-05]</msg>
<status status="PASS" starttime="20201115 22:03:05.545" endtime="20201115 22:03:05.550"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.534" endtime="20201115 22:03:05.552"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:05.558" endtime="20201115 22:03:05.562"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:05.568" endtime="20201115 22:03:05.589"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.563" endtime="20201115 22:03:05.591"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.554" endtime="20201115 22:03:05.593"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.037" endtime="20201115 22:03:05.594"></status>
</kw>
<msg timestamp="20201115 22:03:05.594" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:05.617" endtime="20201115 22:03:05.633"></status>
</kw>
<msg timestamp="20201115 22:03:05.635" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:05.614" endtime="20201115 22:03:05.635"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:05.641" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:05.637" endtime="20201115 22:03:05.641"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:05.643" endtime="20201115 22:03:05.647"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.607" endtime="20201115 22:03:05.649"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.601" endtime="20201115 22:03:05.650"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:05.668" endtime="20201115 22:03:06.016"></status>
</kw>
<msg timestamp="20201115 22:03:06.023" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041109347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041123931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:05.665" endtime="20201115 22:03:06.024"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:06.042" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041109347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041123931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:06.026" endtime="20201115 22:03:06.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:06.045" endtime="20201115 22:03:06.049"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.656" endtime="20201115 22:03:06.050"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.651" endtime="20201115 22:03:06.052"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:06.063" level="INFO">${RESULT} = [{'time': 0.041123931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4584000000004982e-05, 'source_diff': 1.4584000000004982e-05}, {'time': 0.041258139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:06.053" endtime="20201115 22:03:06.063"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:06.094" level="INFO">${OVERHEAD} = {'time': [0.041123931, 0.041258139, 0.041396264, 0.041532542, 0.041668681, 0.041805875, 0.041938056, 0.042068153, 0.042205403, 0.042341417, 0.042475625, 0.042613764, 0.042749875, 0.042883028, 0.043016...</msg>
<status status="PASS" starttime="20201115 22:03:06.065" endtime="20201115 22:03:06.095"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:06.106" level="INFO">NAME: 00-overhead-3-set</msg>
<status status="PASS" starttime="20201115 22:03:06.103" endtime="20201115 22:03:06.106"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:06.111" level="INFO">VALUE: [1.4584000000004982e-05, 1.5041999999999833e-05, 1.508299999999907e-05, 1.4445000000001817e-05, 1.4277999999999513e-05, 1.4236000000000804e-05, 1.4569999999998473e-05, 1.459699999999814e-05, 1.4917000000003178e-05, 1.5083999999998543e-05, 1.4250000000000373e-05, 1.4764000000000443e-05, 1.4916999999996239e-05, 1.4541999999999333e-05, 1.5083999999998543e-05, 1.509699999999864e-05, 1.477700000000054e-05, 1.4263999999999943e-05, 1.4458999999994449e-05, 1.509699999999864e-05, 1.508299999999907e-05, 1.4915999999996765e-05, 1.430499999999918e-05, 1.4625000000004218e-05, 1.4250000000000373e-05, 1.4181000000001998e-05, 1.4263999999999943e-05, 1.4931000000002748e-05, 1.4263999999999943e-05, 1.4583999999998043e-05, 1.5097000000005578e-05, 1.508299999999907e-05, 1.458299999999857e-05, 1.4209000000001137e-05, 1.458299999999857e-05, 1.4915999999996765e-05, 1.4944000000002844e-05, 1.480499999999968e-05, 1.4736000000001304e-05, 1.4568999999999e-05, 1.4750000000000874e-05, 1.4598000000004552e-05, 1.458299999999857e-05, 1.4930999999995809e-05, 1.4764000000000443e-05, 1.4736000000001304e-05, 1.4250000000000373e-05, 1.4250000000000373e-05, 1.4263999999999943e-05, 1.509699999999864e-05]</msg>
<status status="PASS" starttime="20201115 22:03:06.108" endtime="20201115 22:03:06.113"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.096" endtime="20201115 22:03:06.114"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:06.121" endtime="20201115 22:03:06.124"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:06.129" endtime="20201115 22:03:06.153"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.125" endtime="20201115 22:03:06.155"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.116" endtime="20201115 22:03:06.156"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.595" endtime="20201115 22:03:06.157"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.348" endtime="20201115 22:03:06.157"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.346" endtime="20201115 22:03:06.158"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:06.163" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:06.186" endtime="20201115 22:03:06.204"></status>
</kw>
<msg timestamp="20201115 22:03:06.205" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:06.183" endtime="20201115 22:03:06.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:06.212" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:06.208" endtime="20201115 22:03:06.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:06.214" endtime="20201115 22:03:06.218"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.175" endtime="20201115 22:03:06.219"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.169" endtime="20201115 22:03:06.221"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:06.238" endtime="20201115 22:03:06.590"></status>
</kw>
<msg timestamp="20201115 22:03:06.597" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047532986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047548097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:06.235" endtime="20201115 22:03:06.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:06.616" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047532986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047548097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:06.599" endtime="20201115 22:03:06.617"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:06.618" endtime="20201115 22:03:06.622"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.227" endtime="20201115 22:03:06.624"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.222" endtime="20201115 22:03:06.625"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:06.636" level="INFO">${RESULT} = [{'time': 0.047548097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.511099999999821e-05, 'source_diff': 1.511099999999821e-05}, {'time': 0.047700319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:06.627" endtime="20201115 22:03:06.637"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:06.668" level="INFO">${OVERHEAD} = {'time': [0.047548097, 0.047700319, 0.047853542, 0.048002556, 0.048149764, 0.048299972, 0.048450181, 0.048603375, 0.048753556, 0.04890475, 0.049054833, 0.049205986, 0.04935925, 0.049508431, 0.04965554...</msg>
<status status="PASS" starttime="20201115 22:03:06.638" endtime="20201115 22:03:06.668"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:06.679" level="INFO">NAME: 00-overhead-4-set</msg>
<status status="PASS" starttime="20201115 22:03:06.677" endtime="20201115 22:03:06.680"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:06.685" level="INFO">VALUE: [1.511099999999821e-05, 1.531899999999975e-05, 1.5985999999995615e-05, 1.5098000000005052e-05, 1.5264000000000943e-05, 1.5179999999996585e-05, 1.5112000000004622e-05, 1.5292000000000083e-05, 1.5098000000005052e-05, 1.559699999999914e-05, 1.581900000000025e-05, 1.5929999999997335e-05, 1.586099999999896e-05, 1.5750000000001874e-05, 1.545899999999545e-05, 1.577700000000154e-05, 1.577700000000154e-05, 1.576300000000197e-05, 1.5111000000005148e-05, 1.5166000000003954e-05, 1.5138999999997349e-05, 1.57769999999946e-05, 1.5125000000004718e-05, 1.561099999999871e-05, 1.559699999999914e-05, 1.5125000000004718e-05, 1.5277999999993574e-05, 1.563899999999785e-05, 1.509699999999864e-05, 1.5445000000002818e-05, 1.5264000000000943e-05, 1.5750000000001874e-05, 1.5943999999996905e-05, 1.5806000000000153e-05, 1.5278000000000513e-05, 1.5263999999994005e-05, 1.593099999999681e-05, 1.5945000000003318e-05, 1.509699999999864e-05, 1.5166999999996489e-05, 1.509699999999864e-05, 1.509699999999864e-05, 1.5292000000000083e-05, 1.5929999999997335e-05, 1.5264000000000943e-05, 1.577700000000154e-05, 1.5124999999997779e-05, 1.577700000000154e-05, 1.595899999999595e-05, 1.576300000000197e-05]</msg>
<status status="PASS" starttime="20201115 22:03:06.681" endtime="20201115 22:03:06.686"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.670" endtime="20201115 22:03:06.688"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:06.695" endtime="20201115 22:03:06.697"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:06.704" endtime="20201115 22:03:06.727"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.699" endtime="20201115 22:03:06.728"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.690" endtime="20201115 22:03:06.730"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.164" endtime="20201115 22:03:06.731"></status>
</kw>
<msg timestamp="20201115 22:03:06.731" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:06.755" endtime="20201115 22:03:06.772"></status>
</kw>
<msg timestamp="20201115 22:03:06.774" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:06.751" endtime="20201115 22:03:06.774"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:06.780" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:06.776" endtime="20201115 22:03:06.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:06.782" endtime="20201115 22:03:06.786"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.744" endtime="20201115 22:03:06.788"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.738" endtime="20201115 22:03:06.789"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:06.806" endtime="20201115 22:03:07.160"></status>
</kw>
<msg timestamp="20201115 22:03:07.167" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041855736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041870847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:06.803" endtime="20201115 22:03:07.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:07.185" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041855736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041870847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:07.169" endtime="20201115 22:03:07.186"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:07.188" endtime="20201115 22:03:07.192"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.795" endtime="20201115 22:03:07.194"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.791" endtime="20201115 22:03:07.195"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:07.206" level="INFO">${RESULT} = [{'time': 0.041870847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5111000000005148e-05, 'source_diff': 1.5111000000005148e-05}, {'time': 0.042017, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:03:07.197" endtime="20201115 22:03:07.206"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:07.237" level="INFO">${OVERHEAD} = {'time': [0.041870847, 0.042017, 0.042170111, 0.042321458, 0.042468569, 0.042617764, 0.042770903, 0.042919194, 0.043067431, 0.043219625, 0.043371819, 0.043523139, 0.043673222, 0.0438195, 0.043966639, ...</msg>
<status status="PASS" starttime="20201115 22:03:07.208" endtime="20201115 22:03:07.238"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:07.249" level="INFO">NAME: 00-overhead-4-set</msg>
<status status="PASS" starttime="20201115 22:03:07.247" endtime="20201115 22:03:07.250"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:07.255" level="INFO">VALUE: [1.5111000000005148e-05, 1.537499999999803e-05, 1.5111000000005148e-05, 1.5651999999997945e-05, 1.5999999999995185e-05, 1.5445000000002818e-05, 1.593099999999681e-05, 1.527700000000104e-05, 1.5945000000003318e-05, 1.561099999999871e-05, 1.526300000000147e-05, 1.5945000000003318e-05, 1.5778000000001013e-05, 1.508299999999907e-05, 1.5472000000002484e-05, 1.5472000000002484e-05, 1.5278000000000513e-05, 1.5625000000005218e-05, 1.5945000000003318e-05, 1.5931000000003748e-05, 1.591699999999724e-05, 1.5764000000001444e-05, 1.509699999999864e-05, 1.5111000000005148e-05, 1.5485999999995115e-05, 1.5485999999995115e-05, 1.5957999999996475e-05, 1.5153000000003858e-05, 1.544499999999588e-05, 1.5292000000000083e-05, 1.5485999999995115e-05, 1.511099999999821e-05, 1.5472000000002484e-05, 1.5264000000000943e-05, 1.5264000000000943e-05, 1.5944000000003844e-05, 1.511099999999821e-05, 1.5639000000004788e-05, 1.511099999999821e-05, 1.5263999999994005e-05, 1.5597000000006078e-05, 1.593099999999681e-05, 1.5445000000002818e-05, 1.5778000000001013e-05, 1.562499999999828e-05, 1.5125000000004718e-05, 1.527700000000104e-05, 1.529100000000061e-05, 1.561099999999871e-05, 1.5278000000000513e-05]</msg>
<status status="PASS" starttime="20201115 22:03:07.252" endtime="20201115 22:03:07.256"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.240" endtime="20201115 22:03:07.258"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:07.264" endtime="20201115 22:03:07.267"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:07.273" endtime="20201115 22:03:07.295"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.268" endtime="20201115 22:03:07.297"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.259" endtime="20201115 22:03:07.298"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.732" endtime="20201115 22:03:07.299"></status>
</kw>
<msg timestamp="20201115 22:03:07.299" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:07.325" endtime="20201115 22:03:07.343"></status>
</kw>
<msg timestamp="20201115 22:03:07.344" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:07.321" endtime="20201115 22:03:07.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:07.350" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:07.346" endtime="20201115 22:03:07.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:07.353" endtime="20201115 22:03:07.356"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.314" endtime="20201115 22:03:07.358"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.306" endtime="20201115 22:03:07.360"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:07.376" endtime="20201115 22:03:07.739"></status>
</kw>
<msg timestamp="20201115 22:03:07.746" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043324667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043339986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:07.373" endtime="20201115 22:03:07.747"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:07.765" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043324667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043339986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:07.749" endtime="20201115 22:03:07.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:07.767" endtime="20201115 22:03:07.771"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.366" endtime="20201115 22:03:07.773"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.361" endtime="20201115 22:03:07.774"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:07.785" level="INFO">${RESULT} = [{'time': 0.043339986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.531899999999975e-05, 'source_diff': 1.531899999999975e-05}, {'time': 0.043487222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:07.776" endtime="20201115 22:03:07.786"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:07.824" level="INFO">${OVERHEAD} = {'time': [0.043339986, 0.043487222, 0.043637375, 0.043788611, 0.043941806, 0.044093028, 0.044243264, 0.044390431, 0.044540625, 0.044688889, 0.044836917, 0.044986167, 0.045133292, 0.045285514, 0.045431...</msg>
<status status="PASS" starttime="20201115 22:03:07.788" endtime="20201115 22:03:07.825"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:07.836" level="INFO">NAME: 00-overhead-4-set</msg>
<status status="PASS" starttime="20201115 22:03:07.833" endtime="20201115 22:03:07.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:07.842" level="INFO">VALUE: [1.531899999999975e-05, 1.511099999999821e-05, 1.5124999999997779e-05, 1.5778000000001013e-05, 1.5138999999997349e-05, 1.5736000000002304e-05, 1.511099999999821e-05, 1.5223000000001707e-05, 1.5486000000002054e-05, 1.5458000000002914e-05, 1.5777999999994075e-05, 1.5778000000001013e-05, 1.57089999999957e-05, 1.53889999999976e-05, 1.5236000000001804e-05, 1.5625000000005218e-05, 1.5429999999996835e-05, 1.5292000000000083e-05, 1.5792000000000583e-05, 1.5444000000003344e-05, 1.5944000000003844e-05, 1.5792000000000583e-05, 1.511099999999821e-05, 1.531899999999975e-05, 1.5138999999997349e-05, 1.5973000000002457e-05, 1.5124999999997779e-05, 1.5945000000003318e-05, 1.580500000000068e-05, 1.594499999999638e-05, 1.561099999999871e-05, 1.5278000000000513e-05, 1.5445000000002818e-05, 1.511099999999821e-05, 1.559699999999914e-05, 1.5778000000001013e-05, 1.591699999999724e-05, 1.5943999999996905e-05, 1.5444000000003344e-05, 1.558299999999957e-05, 1.5806000000000153e-05, 1.5111000000005148e-05, 1.591699999999724e-05, 1.5292000000000083e-05, 1.5778000000001013e-05, 1.559699999999914e-05, 1.5639000000004788e-05, 1.5735999999995365e-05, 1.5986000000002554e-05, 1.5778000000001013e-05]</msg>
<status status="PASS" starttime="20201115 22:03:07.839" endtime="20201115 22:03:07.843"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.826" endtime="20201115 22:03:07.844"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:07.851" endtime="20201115 22:03:07.854"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:07.861" endtime="20201115 22:03:07.884"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.855" endtime="20201115 22:03:07.886"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.846" endtime="20201115 22:03:07.888"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.300" endtime="20201115 22:03:07.889"></status>
</kw>
<msg timestamp="20201115 22:03:07.889" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:07.913" endtime="20201115 22:03:07.930"></status>
</kw>
<msg timestamp="20201115 22:03:07.932" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:07.909" endtime="20201115 22:03:07.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:07.938" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:07.934" endtime="20201115 22:03:07.939"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:07.941" endtime="20201115 22:03:07.944"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.902" endtime="20201115 22:03:07.946"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.896" endtime="20201115 22:03:07.948"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:07.965" endtime="20201115 22:03:08.318"></status>
</kw>
<msg timestamp="20201115 22:03:08.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043059847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043075625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:07.961" endtime="20201115 22:03:08.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:08.344" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043059847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043075625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:08.327" endtime="20201115 22:03:08.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:08.352" endtime="20201115 22:03:08.356"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.954" endtime="20201115 22:03:08.358"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.949" endtime="20201115 22:03:08.359"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:08.370" level="INFO">${RESULT} = [{'time': 0.043075625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5778000000001013e-05, 'source_diff': 1.5778000000001013e-05}, {'time': 0.043224903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:08.361" endtime="20201115 22:03:08.370"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:08.402" level="INFO">${OVERHEAD} = {'time': [0.043075625, 0.043224903, 0.043373028, 0.043522319, 0.043671431, 0.043819583, 0.043968875, 0.044119097, 0.044269333, 0.044419611, 0.044569833, 0.044720042, 0.044866222, 0.045013431, 0.045164...</msg>
<status status="PASS" starttime="20201115 22:03:08.372" endtime="20201115 22:03:08.402"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:08.413" level="INFO">NAME: 00-overhead-4-set</msg>
<status status="PASS" starttime="20201115 22:03:08.411" endtime="20201115 22:03:08.414"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:08.418" level="INFO">VALUE: [1.5778000000001013e-05, 1.5806000000000153e-05, 1.511099999999821e-05, 1.5151999999997445e-05, 1.5277999999993574e-05, 1.555500000000043e-05, 1.5152999999996919e-05, 1.5264000000000943e-05, 1.527700000000104e-05, 1.5778000000001013e-05, 1.5611000000005648e-05, 1.5223000000001707e-05, 1.5443999999996405e-05, 1.562499999999828e-05, 1.5929999999997335e-05, 1.511099999999821e-05, 1.533299999999932e-05, 1.561099999999871e-05, 1.543099999999631e-05, 1.5792000000000583e-05, 1.540299999999717e-05, 1.5750000000001874e-05, 1.5292000000000083e-05, 1.5471999999995545e-05, 1.562499999999828e-05, 1.5945000000003318e-05, 1.5778000000001013e-05, 1.527700000000104e-05, 1.5500000000001624e-05, 1.5943999999996905e-05, 1.5792000000000583e-05, 1.508299999999907e-05, 1.527700000000104e-05, 1.5429999999996835e-05, 1.5764000000001444e-05, 1.576299999999503e-05, 1.5319999999999223e-05, 1.5124999999997779e-05, 1.561099999999871e-05, 1.5930000000004274e-05, 1.5111000000005148e-05, 1.5957999999996475e-05, 1.509699999999864e-05, 1.561099999999871e-05, 1.5887999999998625e-05, 1.5986000000002554e-05, 1.561099999999871e-05, 1.5124999999997779e-05, 1.5445000000002818e-05, 1.511099999999821e-05]</msg>
<status status="PASS" starttime="20201115 22:03:08.415" endtime="20201115 22:03:08.419"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.404" endtime="20201115 22:03:08.421"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:08.427" endtime="20201115 22:03:08.430"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:08.436" endtime="20201115 22:03:08.458"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.431" endtime="20201115 22:03:08.460"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.423" endtime="20201115 22:03:08.461"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.890" endtime="20201115 22:03:08.462"></status>
</kw>
<msg timestamp="20201115 22:03:08.463" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:08.487" endtime="20201115 22:03:08.504"></status>
</kw>
<msg timestamp="20201115 22:03:08.505" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:08.483" endtime="20201115 22:03:08.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:08.512" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:08.508" endtime="20201115 22:03:08.512"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:08.514" endtime="20201115 22:03:08.518"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.476" endtime="20201115 22:03:08.520"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.469" endtime="20201115 22:03:08.521"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:08.540" endtime="20201115 22:03:08.892"></status>
</kw>
<msg timestamp="20201115 22:03:08.899" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042067403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042082667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:08.536" endtime="20201115 22:03:08.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:08.918" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042067403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042082667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:08.902" endtime="20201115 22:03:08.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:08.921" endtime="20201115 22:03:08.925"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.527" endtime="20201115 22:03:08.926"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.522" endtime="20201115 22:03:08.928"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:08.939" level="INFO">${RESULT} = [{'time': 0.042082667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5263999999994005e-05, 'source_diff': 1.5263999999994005e-05}, {'time': 0.042229764, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:08.929" endtime="20201115 22:03:08.939"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:08.970" level="INFO">${OVERHEAD} = {'time': [0.042082667, 0.042229764, 0.042380986, 0.042530069, 0.042678306, 0.042830403, 0.042981722, 0.043128819, 0.043276958, 0.043428194, 0.043581444, 0.043731597, 0.043883861, 0.044034917, 0.044187...</msg>
<status status="PASS" starttime="20201115 22:03:08.941" endtime="20201115 22:03:08.971"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:08.981" level="INFO">NAME: 00-overhead-4-set</msg>
<status status="PASS" starttime="20201115 22:03:08.979" endtime="20201115 22:03:08.982"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:08.987" level="INFO">VALUE: [1.5263999999994005e-05, 1.5681000000003498e-05, 1.5569e-05, 1.5443999999996405e-05, 1.5597999999998613e-05, 1.5931000000003748e-05, 1.563899999999785e-05, 1.527700000000104e-05, 1.5915999999997765e-05, 1.576300000000197e-05, 1.5943999999996905e-05, 1.5471999999995545e-05, 1.580500000000068e-05, 1.5778000000001013e-05, 1.50689999999995e-05, 1.544499999999588e-05, 1.559699999999914e-05, 1.508299999999907e-05, 1.565299999999742e-05, 1.559699999999914e-05, 1.529100000000061e-05, 1.561099999999871e-05, 1.5264000000000943e-05, 1.563899999999785e-05, 1.5958000000003414e-05, 1.537499999999803e-05, 1.544499999999588e-05, 1.5124999999997779e-05, 1.5778000000001013e-05, 1.5125000000004718e-05, 1.5749999999994935e-05, 1.5945000000003318e-05, 1.5499999999994685e-05, 1.5264000000000943e-05, 1.5278000000000513e-05, 1.5597000000006078e-05, 1.527700000000104e-05, 1.541699999999674e-05, 1.509699999999864e-05, 1.543099999999631e-05, 1.5111999999997683e-05, 1.5264000000000943e-05, 1.509699999999864e-05, 1.5416000000004204e-05, 1.5250000000001374e-05, 1.5429999999996835e-05, 1.511099999999821e-05, 1.5278000000000513e-05, 1.5139000000004288e-05, 1.530500000000018e-05]</msg>
<status status="PASS" starttime="20201115 22:03:08.984" endtime="20201115 22:03:08.988"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.972" endtime="20201115 22:03:08.989"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:08.996" endtime="20201115 22:03:08.999"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:09.005" endtime="20201115 22:03:09.027"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.000" endtime="20201115 22:03:09.029"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.991" endtime="20201115 22:03:09.030"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.464" endtime="20201115 22:03:09.031"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.160" endtime="20201115 22:03:09.032"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.159" endtime="20201115 22:03:09.032"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:09.037" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:09.061" endtime="20201115 22:03:09.079"></status>
</kw>
<msg timestamp="20201115 22:03:09.080" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:09.057" endtime="20201115 22:03:09.081"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:09.087" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:09.083" endtime="20201115 22:03:09.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:09.089" endtime="20201115 22:03:09.093"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.050" endtime="20201115 22:03:09.095"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.044" endtime="20201115 22:03:09.097"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:09.115" endtime="20201115 22:03:09.472"></status>
</kw>
<msg timestamp="20201115 22:03:09.479" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047262083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047278194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:09.111" endtime="20201115 22:03:09.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:09.498" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047262083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047278194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:09.481" endtime="20201115 22:03:09.498"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:09.500" endtime="20201115 22:03:09.504"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.104" endtime="20201115 22:03:09.506"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.099" endtime="20201115 22:03:09.507"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:09.518" level="INFO">${RESULT} = [{'time': 0.047278194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.611099999999921e-05, 'source_diff': 1.611099999999921e-05}, {'time': 0.047444486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:09.509" endtime="20201115 22:03:09.519"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:09.550" level="INFO">${OVERHEAD} = {'time': [0.047278194, 0.047444486, 0.047613708, 0.047781778, 0.047947986, 0.048111222, 0.048277528, 0.048444694, 0.048612931, 0.048781208, 0.048944431, 0.049112583, 0.049280917, 0.049450097, 0.049616...</msg>
<status status="PASS" starttime="20201115 22:03:09.520" endtime="20201115 22:03:09.550"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:09.561" level="INFO">NAME: 00-overhead-5-set</msg>
<status status="PASS" starttime="20201115 22:03:09.559" endtime="20201115 22:03:09.562"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:09.567" level="INFO">VALUE: [1.611099999999921e-05, 1.6429999999997835e-05, 1.679099999999517e-05, 1.591699999999724e-05, 1.609699999999964e-05, 1.6514000000002194e-05, 1.6750000000002874e-05, 1.631900000000075e-05, 1.613899999999835e-05, 1.6471999999996545e-05, 1.5999999999995185e-05, 1.679100000000211e-05, 1.5986000000002554e-05, 1.6471999999996545e-05, 1.644499999999688e-05, 1.662499999999928e-05, 1.611099999999921e-05, 1.609699999999964e-05, 1.6806000000001153e-05, 1.644499999999688e-05, 1.5973000000002457e-05, 1.6306000000000653e-05, 1.6292000000001083e-05, 1.6471999999996545e-05, 1.630500000000118e-05, 1.6806000000001153e-05, 1.6625000000006218e-05, 1.6792000000001583e-05, 1.6792000000001583e-05, 1.686099999999996e-05, 1.6429999999997835e-05, 1.6542000000001333e-05, 1.630500000000118e-05, 1.6292000000001083e-05, 1.6806000000001153e-05, 1.6486000000003054e-05, 1.6472000000003484e-05, 1.6778000000002014e-05, 1.6443999999997405e-05, 1.616699999999749e-05, 1.6292000000001083e-05, 1.612499999999878e-05, 1.6222000000003234e-05, 1.6750000000002874e-05, 1.6250000000002374e-05, 1.6471999999996545e-05, 1.6791999999994645e-05, 1.5986000000002554e-05, 1.6459000000003388e-05, 1.6612000000006122e-05]</msg>
<status status="PASS" starttime="20201115 22:03:09.564" endtime="20201115 22:03:09.568"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.552" endtime="20201115 22:03:09.569"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:09.576" endtime="20201115 22:03:09.579"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:09.584" endtime="20201115 22:03:09.606"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.580" endtime="20201115 22:03:09.608"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.571" endtime="20201115 22:03:09.610"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.038" endtime="20201115 22:03:09.610"></status>
</kw>
<msg timestamp="20201115 22:03:09.611" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:09.635" endtime="20201115 22:03:09.653"></status>
</kw>
<msg timestamp="20201115 22:03:09.654" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:09.631" endtime="20201115 22:03:09.655"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:09.661" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:09.657" endtime="20201115 22:03:09.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:09.664" endtime="20201115 22:03:09.668"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.624" endtime="20201115 22:03:09.669"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.618" endtime="20201115 22:03:09.671"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:09.688" endtime="20201115 22:03:10.043"></status>
</kw>
<msg timestamp="20201115 22:03:10.050" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0418905, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041906806, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:03:09.684" endtime="20201115 22:03:10.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:10.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0418905, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041906806, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:03:10.052" endtime="20201115 22:03:10.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:10.071" endtime="20201115 22:03:10.075"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.677" endtime="20201115 22:03:10.076"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.672" endtime="20201115 22:03:10.078"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:10.089" level="INFO">${RESULT} = [{'time': 0.041906806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6306000000000653e-05, 'source_diff': 1.6306000000000653e-05}, {'time': 0.042075139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:10.079" endtime="20201115 22:03:10.089"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:10.123" level="INFO">${OVERHEAD} = {'time': [0.041906806, 0.042075139, 0.042242333, 0.042408542, 0.042577792, 0.042743083, 0.042911292, 0.043078514, 0.043246708, 0.043410875, 0.043580153, 0.043745417, 0.043913694, 0.044078847, 0.044247...</msg>
<status status="PASS" starttime="20201115 22:03:10.091" endtime="20201115 22:03:10.123"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:10.134" level="INFO">NAME: 00-overhead-5-set</msg>
<status status="PASS" starttime="20201115 22:03:10.132" endtime="20201115 22:03:10.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:10.140" level="INFO">VALUE: [1.6306000000000653e-05, 1.5971999999996045e-05, 1.630500000000118e-05, 1.5945000000003318e-05, 1.6473000000002957e-05, 1.679100000000211e-05, 1.597299999999552e-05, 1.6777999999995075e-05, 1.663899999999885e-05, 1.6292000000001083e-05, 1.5945000000003318e-05, 1.6473000000002957e-05, 1.6666000000005454e-05, 1.6277999999994575e-05, 1.6486000000003054e-05, 1.630500000000118e-05, 1.613899999999835e-05, 1.6292000000001083e-05, 1.612499999999878e-05, 1.6111000000006148e-05, 1.6639000000005788e-05, 1.6806000000001153e-05, 1.641699999999774e-05, 1.662499999999928e-05, 1.6430000000004774e-05, 1.6014000000001694e-05, 1.6625000000006218e-05, 1.6792000000001583e-05, 1.612499999999878e-05, 1.629100000000161e-05, 1.6292000000001083e-05, 1.663899999999885e-05, 1.663899999999885e-05, 1.6458000000003914e-05, 1.661099999999971e-05, 1.630500000000118e-05, 1.6306000000000653e-05, 1.5931000000003748e-05, 1.6306000000000653e-05, 1.6639000000005788e-05, 1.67769999999956e-05, 1.643099999999731e-05, 1.662499999999928e-05, 1.677700000000254e-05, 1.6084000000006482e-05, 1.5972000000002984e-05, 1.6750000000002874e-05, 1.6792000000001583e-05, 1.6278000000001513e-05, 1.662499999999928e-05]</msg>
<status status="PASS" starttime="20201115 22:03:10.137" endtime="20201115 22:03:10.141"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.125" endtime="20201115 22:03:10.143"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:10.150" endtime="20201115 22:03:10.153"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:10.159" endtime="20201115 22:03:10.181"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.154" endtime="20201115 22:03:10.183"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.145" endtime="20201115 22:03:10.185"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.612" endtime="20201115 22:03:10.185"></status>
</kw>
<msg timestamp="20201115 22:03:10.186" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:10.210" endtime="20201115 22:03:10.229"></status>
</kw>
<msg timestamp="20201115 22:03:10.230" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:10.206" endtime="20201115 22:03:10.231"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:10.237" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:10.232" endtime="20201115 22:03:10.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:10.239" endtime="20201115 22:03:10.243"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.199" endtime="20201115 22:03:10.244"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.192" endtime="20201115 22:03:10.246"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:10.263" endtime="20201115 22:03:10.616"></status>
</kw>
<msg timestamp="20201115 22:03:10.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043025153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043041611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:10.259" endtime="20201115 22:03:10.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:10.641" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043025153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043041611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:10.625" endtime="20201115 22:03:10.642"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:10.644" endtime="20201115 22:03:10.648"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.252" endtime="20201115 22:03:10.649"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.247" endtime="20201115 22:03:10.651"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:10.662" level="INFO">${RESULT} = [{'time': 0.043041611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6458000000003914e-05, 'source_diff': 1.6458000000003914e-05}, {'time': 0.043205792, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:10.652" endtime="20201115 22:03:10.662"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:10.695" level="INFO">${OVERHEAD} = {'time': [0.043041611, 0.043205792, 0.043372042, 0.043539347, 0.043702597, 0.043865778, 0.044033028, 0.044199292, 0.044368472, 0.044533639, 0.044701958, 0.044870111, 0.045039431, 0.045209722, 0.045375...</msg>
<status status="PASS" starttime="20201115 22:03:10.664" endtime="20201115 22:03:10.695"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:10.706" level="INFO">NAME: 00-overhead-5-set</msg>
<status status="PASS" starttime="20201115 22:03:10.704" endtime="20201115 22:03:10.707"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:10.711" level="INFO">VALUE: [1.6458000000003914e-05, 1.662499999999928e-05, 1.5973000000002457e-05, 1.630500000000118e-05, 1.6139000000005288e-05, 1.6486000000003054e-05, 1.5972000000002984e-05, 1.6097999999999113e-05, 1.661099999999971e-05, 1.6750000000002874e-05, 1.6651999999998945e-05, 1.6457999999996975e-05, 1.597299999999552e-05, 1.6264000000001944e-05, 1.630499999999424e-05, 1.6306000000000653e-05, 1.6792000000001583e-05, 1.613899999999835e-05, 1.6333999999999793e-05, 1.6527999999994825e-05, 1.615299999999792e-05, 1.6473000000002957e-05, 1.663899999999885e-05, 1.629099999999467e-05, 1.6457999999996975e-05, 1.662499999999928e-05, 1.6806000000001153e-05, 1.680500000000168e-05, 1.6320000000000223e-05, 1.6320000000000223e-05, 1.6139000000005288e-05, 1.5959000000002888e-05, 1.634699999999989e-05, 1.612499999999878e-05, 1.6611999999999183e-05, 1.594499999999638e-05, 1.5958000000003414e-05, 1.662499999999928e-05, 1.680500000000168e-05, 1.615299999999792e-05, 1.5972000000002984e-05, 1.6139000000005288e-05, 1.5958000000003414e-05, 1.641699999999774e-05, 1.663899999999885e-05, 1.6445000000003818e-05, 1.6458000000003914e-05, 1.6457999999996975e-05, 1.613899999999835e-05, 1.663899999999885e-05]</msg>
<status status="PASS" starttime="20201115 22:03:10.708" endtime="20201115 22:03:10.712"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.697" endtime="20201115 22:03:10.714"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:10.721" endtime="20201115 22:03:10.723"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:10.729" endtime="20201115 22:03:10.751"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.725" endtime="20201115 22:03:10.753"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.716" endtime="20201115 22:03:10.754"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.187" endtime="20201115 22:03:10.755"></status>
</kw>
<msg timestamp="20201115 22:03:10.756" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:10.781" endtime="20201115 22:03:10.799"></status>
</kw>
<msg timestamp="20201115 22:03:10.800" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:10.777" endtime="20201115 22:03:10.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:10.807" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:10.803" endtime="20201115 22:03:10.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:10.809" endtime="20201115 22:03:10.813"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.770" endtime="20201115 22:03:10.815"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.764" endtime="20201115 22:03:10.816"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:10.833" endtime="20201115 22:03:11.196"></status>
</kw>
<msg timestamp="20201115 22:03:11.203" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043453903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043470139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:10.830" endtime="20201115 22:03:11.204"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:11.222" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043453903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043470139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:11.205" endtime="20201115 22:03:11.223"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:11.224" endtime="20201115 22:03:11.228"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.822" endtime="20201115 22:03:11.230"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.817" endtime="20201115 22:03:11.231"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:11.242" level="INFO">${RESULT} = [{'time': 0.043470139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6235999999995865e-05, 'source_diff': 1.6235999999995865e-05}, {'time': 0.043634458, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:11.233" endtime="20201115 22:03:11.243"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:11.275" level="INFO">${OVERHEAD} = {'time': [0.043470139, 0.043634458, 0.043798667, 0.043967986, 0.044137139, 0.044304472, 0.044470653, 0.044634819, 0.0448, 0.044964292, 0.045129528, 0.045297708, 0.045466042, 0.045634181, 0.045798319, ...</msg>
<status status="PASS" starttime="20201115 22:03:11.245" endtime="20201115 22:03:11.276"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:11.287" level="INFO">NAME: 00-overhead-5-set</msg>
<status status="PASS" starttime="20201115 22:03:11.284" endtime="20201115 22:03:11.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:11.292" level="INFO">VALUE: [1.6235999999995865e-05, 1.663899999999885e-05, 1.613899999999835e-05, 1.612499999999878e-05, 1.6792000000001583e-05, 1.663899999999885e-05, 1.665299999999842e-05, 1.630500000000118e-05, 1.5972000000002984e-05, 1.6459000000003388e-05, 1.662499999999928e-05, 1.613899999999835e-05, 1.6485999999996115e-05, 1.6459000000003388e-05, 1.629099999999467e-05, 1.6457999999996975e-05, 1.612499999999878e-05, 1.6139000000005288e-05, 1.611099999999921e-05, 1.611099999999921e-05, 1.6584000000000043e-05, 1.663899999999885e-05, 1.6320000000000223e-05, 1.5985999999995615e-05, 1.661099999999971e-05, 1.6306000000000653e-05, 1.6306000000000653e-05, 1.597299999999552e-05, 1.6806000000001153e-05, 1.613899999999835e-05, 1.6625000000006218e-05, 1.613899999999835e-05, 1.6459000000003388e-05, 1.6306000000000653e-05, 1.5958000000003414e-05, 1.663899999999885e-05, 1.6458000000003914e-05, 1.662499999999928e-05, 1.5957999999996475e-05, 1.6250000000002374e-05, 1.6000000000002124e-05, 1.683300000000082e-05, 1.662499999999928e-05, 1.627700000000204e-05, 1.6264000000001944e-05, 1.6791999999994645e-05, 1.5917000000004178e-05, 1.663899999999885e-05, 1.6292000000001083e-05, 1.6651999999998945e-05]</msg>
<status status="PASS" starttime="20201115 22:03:11.289" endtime="20201115 22:03:11.293"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.277" endtime="20201115 22:03:11.295"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:11.301" endtime="20201115 22:03:11.305"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:11.311" endtime="20201115 22:03:11.333"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.306" endtime="20201115 22:03:11.335"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.297" endtime="20201115 22:03:11.336"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.758" endtime="20201115 22:03:11.337"></status>
</kw>
<msg timestamp="20201115 22:03:11.337" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:11.361" endtime="20201115 22:03:11.380"></status>
</kw>
<msg timestamp="20201115 22:03:11.381" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:11.358" endtime="20201115 22:03:11.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:11.388" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:11.384" endtime="20201115 22:03:11.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:11.390" endtime="20201115 22:03:11.394"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.350" endtime="20201115 22:03:11.395"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.344" endtime="20201115 22:03:11.397"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:11.414" endtime="20201115 22:03:11.777"></status>
</kw>
<msg timestamp="20201115 22:03:11.784" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042041639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042057764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:11.411" endtime="20201115 22:03:11.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:11.802" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042041639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042057764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:11.786" endtime="20201115 22:03:11.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:11.805" endtime="20201115 22:03:11.809"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.403" endtime="20201115 22:03:11.810"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.398" endtime="20201115 22:03:11.812"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:11.823" level="INFO">${RESULT} = [{'time': 0.042057764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.612499999999878e-05, 'source_diff': 1.612499999999878e-05}, {'time': 0.042226986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:11.813" endtime="20201115 22:03:11.823"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:11.855" level="INFO">${OVERHEAD} = {'time': [0.042057764, 0.042226986, 0.042392208, 0.0425595, 0.042727653, 0.042893903, 0.043062194, 0.043228306, 0.043398556, 0.043567792, 0.043736083, 0.043900167, 0.044068472, 0.044237764, 0.04440594...</msg>
<status status="PASS" starttime="20201115 22:03:11.825" endtime="20201115 22:03:11.856"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:11.867" level="INFO">NAME: 00-overhead-5-set</msg>
<status status="PASS" starttime="20201115 22:03:11.865" endtime="20201115 22:03:11.868"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:11.872" level="INFO">VALUE: [1.612499999999878e-05, 1.680500000000168e-05, 1.611099999999921e-05, 1.6306000000000653e-05, 1.609699999999964e-05, 1.6805999999994214e-05, 1.5915999999997765e-05, 1.6764000000002444e-05, 1.6320000000000223e-05, 1.612499999999878e-05, 1.5958000000003414e-05, 1.613899999999835e-05, 1.665299999999842e-05, 1.658300000000057e-05, 1.6486000000003054e-05, 1.6443999999997405e-05, 1.630499999999424e-05, 1.643099999999731e-05, 1.6792000000001583e-05, 1.6472000000003484e-05, 1.6513999999995255e-05, 1.6179999999997585e-05, 1.6278000000001513e-05, 1.661099999999971e-05, 1.6806000000001153e-05, 1.666699999999799e-05, 1.6651999999998945e-05, 1.6306000000000653e-05, 1.6486000000003054e-05, 1.613899999999835e-05, 1.631900000000075e-05, 1.6806000000001153e-05, 1.6125000000005718e-05, 1.5972000000002984e-05, 1.662499999999928e-05, 1.6819999999993784e-05, 1.662499999999928e-05, 1.6791999999994645e-05, 1.663899999999885e-05, 1.6153000000004858e-05, 1.630500000000118e-05, 1.662499999999928e-05, 1.6457999999996975e-05, 1.615299999999792e-05, 1.629099999999467e-05, 1.5958000000003414e-05, 1.611099999999921e-05, 1.6486000000003054e-05, 1.629100000000161e-05, 1.6806000000001153e-05]</msg>
<status status="PASS" starttime="20201115 22:03:11.869" endtime="20201115 22:03:11.874"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.857" endtime="20201115 22:03:11.876"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:11.882" endtime="20201115 22:03:11.885"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:11.891" endtime="20201115 22:03:11.913"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.886" endtime="20201115 22:03:11.915"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.878" endtime="20201115 22:03:11.916"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.339" endtime="20201115 22:03:11.917"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.035" endtime="20201115 22:03:11.917"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.033" endtime="20201115 22:03:11.918"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:11.923" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:11.946" endtime="20201115 22:03:11.966"></status>
</kw>
<msg timestamp="20201115 22:03:11.967" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:11.943" endtime="20201115 22:03:11.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:11.974" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:11.970" endtime="20201115 22:03:11.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:11.976" endtime="20201115 22:03:11.980"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.936" endtime="20201115 22:03:11.981"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.930" endtime="20201115 22:03:11.983"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:12.001" endtime="20201115 22:03:12.365"></status>
</kw>
<msg timestamp="20201115 22:03:12.372" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047281472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047298792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:11.997" endtime="20201115 22:03:12.372"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:12.390" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047281472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047298792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:12.374" endtime="20201115 22:03:12.391"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:12.393" endtime="20201115 22:03:12.397"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.989" endtime="20201115 22:03:12.398"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.984" endtime="20201115 22:03:12.400"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:12.411" level="INFO">${RESULT} = [{'time': 0.047298792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7320000000001223e-05, 'source_diff': 1.7320000000001223e-05}, {'time': 0.047481194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:12.402" endtime="20201115 22:03:12.411"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:12.446" level="INFO">${OVERHEAD} = {'time': [0.047298792, 0.047481194, 0.0476665, 0.047847819, 0.048029014, 0.048213278, 0.048399694, 0.048585875, 0.048769333, 0.048950556, 0.049132861, 0.049315236, 0.049501403, 0.049682708, 0.04986298...</msg>
<status status="PASS" starttime="20201115 22:03:12.413" endtime="20201115 22:03:12.446"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:12.457" level="INFO">NAME: 00-overhead-6-set</msg>
<status status="PASS" starttime="20201115 22:03:12.455" endtime="20201115 22:03:12.458"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:12.463" level="INFO">VALUE: [1.7320000000001223e-05, 1.701299999999628e-05, 1.7693999999998655e-05, 1.7137999999999876e-05, 1.7486000000004054e-05, 1.766699999999899e-05, 1.683300000000082e-05, 1.7000000000003124e-05, 1.731899999999481e-05, 1.747299999999702e-05, 1.7179999999998585e-05, 1.731900000000175e-05, 1.766699999999899e-05, 1.7165999999999015e-05, 1.6985999999996615e-05, 1.737500000000003e-05, 1.6792000000001583e-05, 1.7193999999998155e-05, 1.766699999999899e-05, 1.715299999999892e-05, 1.7000000000003124e-05, 1.6986000000003554e-05, 1.747299999999702e-05, 1.763899999999985e-05, 1.6972000000003984e-05, 1.6985999999996615e-05, 1.681900000000125e-05, 1.6820000000000723e-05, 1.7665999999999515e-05, 1.766699999999899e-05, 1.73889999999996e-05, 1.7137999999999876e-05, 1.7472000000004484e-05, 1.7292000000002083e-05, 1.7486000000004054e-05, 1.7500000000003624e-05, 1.715299999999892e-05, 1.6834000000000293e-05, 1.6985999999996615e-05, 1.6985999999996615e-05, 1.7693999999998655e-05, 1.7320000000001223e-05, 1.6791999999994645e-05, 1.7665999999999515e-05, 1.7485999999997115e-05, 1.6986000000003554e-05, 1.6820000000000723e-05, 1.681900000000125e-05, 1.736100000000046e-05, 1.733300000000132e-05]</msg>
<status status="PASS" starttime="20201115 22:03:12.459" endtime="20201115 22:03:12.464"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.447" endtime="20201115 22:03:12.466"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:12.472" endtime="20201115 22:03:12.475"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:12.481" endtime="20201115 22:03:12.503"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.476" endtime="20201115 22:03:12.505"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.468" endtime="20201115 22:03:12.506"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.924" endtime="20201115 22:03:12.507"></status>
</kw>
<msg timestamp="20201115 22:03:12.507" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:12.531" endtime="20201115 22:03:12.551"></status>
</kw>
<msg timestamp="20201115 22:03:12.552" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:12.528" endtime="20201115 22:03:12.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:12.559" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:12.554" endtime="20201115 22:03:12.559"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:12.561" endtime="20201115 22:03:12.565"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.520" endtime="20201115 22:03:12.566"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.514" endtime="20201115 22:03:12.568"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:12.585" endtime="20201115 22:03:12.940"></status>
</kw>
<msg timestamp="20201115 22:03:12.947" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042184819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042201806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:12.581" endtime="20201115 22:03:12.948"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:12.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042184819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042201806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:12.949" endtime="20201115 22:03:12.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:12.968" endtime="20201115 22:03:12.972"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.574" endtime="20201115 22:03:12.974"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.569" endtime="20201115 22:03:12.975"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:12.986" level="INFO">${RESULT} = [{'time': 0.042201806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6987000000003027e-05, 'source_diff': 1.6987000000003027e-05}, {'time': 0.042383972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:12.977" endtime="20201115 22:03:12.986"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:13.018" level="INFO">${OVERHEAD} = {'time': [0.042201806, 0.042383972, 0.042566222, 0.042747472, 0.042933569, 0.043118833, 0.043303931, 0.043487139, 0.043670486, 0.043857528, 0.044042875, 0.044229056, 0.044412208, 0.044597431, 0.044779...</msg>
<status status="PASS" starttime="20201115 22:03:12.988" endtime="20201115 22:03:13.019"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:13.031" level="INFO">NAME: 00-overhead-6-set</msg>
<status status="PASS" starttime="20201115 22:03:13.028" endtime="20201115 22:03:13.032"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:13.037" level="INFO">VALUE: [1.6987000000003027e-05, 1.763899999999985e-05, 1.7471999999997545e-05, 1.715299999999892e-05, 1.7651999999999946e-05, 1.7486000000004054e-05, 1.748699999999659e-05, 1.6958000000004414e-05, 1.7000000000003124e-05, 1.7471999999997545e-05, 1.763899999999985e-05, 1.763899999999985e-05, 1.7264000000002944e-05, 1.713899999999935e-05, 1.715299999999892e-05, 1.7499999999996685e-05, 1.715299999999892e-05, 1.6986000000003554e-05, 1.7485999999997115e-05, 1.715299999999892e-05, 1.713899999999935e-05, 1.7651999999999946e-05, 1.711100000000021e-05, 1.745899999999745e-05, 1.7042000000001833e-05, 1.7499999999996685e-05, 1.7320000000001223e-05, 1.7500000000003624e-05, 1.734700000000089e-05, 1.736100000000046e-05, 1.769499999999813e-05, 1.6750000000002874e-05, 1.6985999999996615e-05, 1.715299999999892e-05, 1.6833999999993354e-05, 1.737500000000003e-05, 1.765299999999942e-05, 1.6985999999996615e-05, 1.731900000000175e-05, 1.681900000000125e-05, 1.7320000000001223e-05, 1.731900000000175e-05, 1.748699999999659e-05, 1.6806000000001153e-05, 1.7179999999998585e-05, 1.713899999999935e-05, 1.715299999999892e-05, 1.7750000000003874e-05, 1.7667000000005928e-05, 1.715299999999892e-05]</msg>
<status status="PASS" starttime="20201115 22:03:13.034" endtime="20201115 22:03:13.038"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.021" endtime="20201115 22:03:13.039"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:13.046" endtime="20201115 22:03:13.049"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:13.054" endtime="20201115 22:03:13.076"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.050" endtime="20201115 22:03:13.078"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.041" endtime="20201115 22:03:13.080"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.509" endtime="20201115 22:03:13.080"></status>
</kw>
<msg timestamp="20201115 22:03:13.081" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:13.105" endtime="20201115 22:03:13.124"></status>
</kw>
<msg timestamp="20201115 22:03:13.125" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:13.101" endtime="20201115 22:03:13.126"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:13.131" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:13.127" endtime="20201115 22:03:13.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:13.134" endtime="20201115 22:03:13.138"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.094" endtime="20201115 22:03:13.139"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.088" endtime="20201115 22:03:13.141"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:13.158" endtime="20201115 22:03:13.510"></status>
</kw>
<msg timestamp="20201115 22:03:13.517" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041857333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041874653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:13.155" endtime="20201115 22:03:13.518"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:13.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041857333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041874653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:13.520" endtime="20201115 22:03:13.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:13.538" endtime="20201115 22:03:13.542"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.147" endtime="20201115 22:03:13.544"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.142" endtime="20201115 22:03:13.546"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:13.557" level="INFO">${RESULT} = [{'time': 0.041874653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7320000000001223e-05, 'source_diff': 1.7320000000001223e-05}, {'time': 0.042057944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:13.547" endtime="20201115 22:03:13.563"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:13.595" level="INFO">${OVERHEAD} = {'time': [0.041874653, 0.042057944, 0.042243097, 0.042429417, 0.042611639, 0.042798722, 0.042983014, 0.04316925, 0.043350472, 0.043537625, 0.043718917, 0.043905208, 0.044088403, 0.044275708, 0.0444569...</msg>
<status status="PASS" starttime="20201115 22:03:13.565" endtime="20201115 22:03:13.595"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:13.606" level="INFO">NAME: 00-overhead-6-set</msg>
<status status="PASS" starttime="20201115 22:03:13.604" endtime="20201115 22:03:13.607"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:13.612" level="INFO">VALUE: [1.7320000000001223e-05, 1.7137999999999876e-05, 1.7500000000003624e-05, 1.716699999999849e-05, 1.6820000000000723e-05, 1.7485999999997115e-05, 1.7485999999997115e-05, 1.7292000000002083e-05, 1.680500000000168e-05, 1.6986000000003554e-05, 1.6806000000001153e-05, 1.763899999999985e-05, 1.7334000000000793e-05, 1.7679999999999085e-05, 1.712499999999978e-05, 1.7334000000000793e-05, 1.7151999999999445e-05, 1.7707999999998225e-05, 1.681900000000125e-05, 1.6735999999996365e-05, 1.733300000000132e-05, 1.748699999999659e-05, 1.7499999999996685e-05, 1.7471999999997545e-05, 1.7305999999994714e-05, 1.766699999999899e-05, 1.730500000000218e-05, 1.7499999999996685e-05, 1.716699999999849e-05, 1.7499999999996685e-05, 1.6806000000001153e-05, 1.716699999999849e-05, 1.763899999999985e-05, 1.766699999999899e-05, 1.6987000000003027e-05, 1.731900000000175e-05, 1.762500000000028e-05, 1.763899999999985e-05, 1.7485999999997115e-05, 1.7472000000004484e-05, 1.6985999999996615e-05, 1.730500000000218e-05, 1.7151999999999445e-05, 1.762500000000028e-05, 1.715299999999892e-05, 1.7651999999999946e-05, 1.68889999999991e-05, 1.697299999999652e-05, 1.6971999999997045e-05, 1.7111999999999683e-05]</msg>
<status status="PASS" starttime="20201115 22:03:13.608" endtime="20201115 22:03:13.614"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.597" endtime="20201115 22:03:13.615"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:13.622" endtime="20201115 22:03:13.625"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:13.630" endtime="20201115 22:03:13.652"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.626" endtime="20201115 22:03:13.654"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.617" endtime="20201115 22:03:13.656"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.082" endtime="20201115 22:03:13.657"></status>
</kw>
<msg timestamp="20201115 22:03:13.657" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:13.681" endtime="20201115 22:03:13.700"></status>
</kw>
<msg timestamp="20201115 22:03:13.701" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:13.677" endtime="20201115 22:03:13.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:13.708" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:13.704" endtime="20201115 22:03:13.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:13.710" endtime="20201115 22:03:13.714"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.670" endtime="20201115 22:03:13.715"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.664" endtime="20201115 22:03:13.717"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:13.734" endtime="20201115 22:03:14.086"></status>
</kw>
<msg timestamp="20201115 22:03:14.093" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041897208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041914875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:13.730" endtime="20201115 22:03:14.093"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:14.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041897208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041914875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:14.095" endtime="20201115 22:03:14.112"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:14.114" endtime="20201115 22:03:14.118"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.723" endtime="20201115 22:03:14.120"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.718" endtime="20201115 22:03:14.122"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:14.132" level="INFO">${RESULT} = [{'time': 0.041914875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.766699999999899e-05, 'source_diff': 1.766699999999899e-05}, {'time': 0.042099042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:14.123" endtime="20201115 22:03:14.133"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:14.164" level="INFO">${OVERHEAD} = {'time': [0.041914875, 0.042099042, 0.04228125, 0.0424645, 0.042649736, 0.042832944, 0.043020056, 0.043207222, 0.043391403, 0.043574611, 0.043756778, 0.043939139, 0.044123306, 0.044308514, 0.044490625...</msg>
<status status="PASS" starttime="20201115 22:03:14.135" endtime="20201115 22:03:14.165"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:14.176" level="INFO">NAME: 00-overhead-6-set</msg>
<status status="PASS" starttime="20201115 22:03:14.173" endtime="20201115 22:03:14.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:14.181" level="INFO">VALUE: [1.766699999999899e-05, 1.7667000000005928e-05, 1.759700000000114e-05, 1.6806000000001153e-05, 1.7500000000003624e-05, 1.7151999999999445e-05, 1.713899999999935e-05, 1.7653000000006358e-05, 1.6806000000001153e-05, 1.7485999999997115e-05, 1.6959000000003888e-05, 1.684700000000039e-05, 1.763899999999985e-05, 1.7235999999996865e-05, 1.731900000000175e-05, 1.6778000000002014e-05, 1.7165999999999015e-05, 1.7485999999997115e-05, 1.683300000000082e-05, 1.681900000000125e-05, 1.730499999999524e-05, 1.7485999999997115e-05, 1.765299999999942e-05, 1.7500000000003624e-05, 1.733300000000132e-05, 1.7500000000003624e-05, 1.7472000000004484e-05, 1.713899999999935e-05, 1.7486000000004054e-05, 1.713899999999935e-05, 1.734700000000089e-05, 1.7222000000004234e-05, 1.6819999999993784e-05, 1.681899999999431e-05, 1.733300000000132e-05, 1.731900000000175e-05, 1.6999999999996185e-05, 1.713899999999935e-05, 1.6820000000000723e-05, 1.7665999999999515e-05, 1.765299999999942e-05, 1.6986000000003554e-05, 1.766699999999899e-05, 1.715299999999892e-05, 1.7320000000001223e-05, 1.715299999999892e-05, 1.763899999999985e-05, 1.755500000000243e-05, 1.7499999999996685e-05, 1.6985999999996615e-05]</msg>
<status status="PASS" starttime="20201115 22:03:14.178" endtime="20201115 22:03:14.182"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.166" endtime="20201115 22:03:14.184"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:14.190" endtime="20201115 22:03:14.195"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:14.200" endtime="20201115 22:03:14.222"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.196" endtime="20201115 22:03:14.224"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.186" endtime="20201115 22:03:14.226"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.658" endtime="20201115 22:03:14.226"></status>
</kw>
<msg timestamp="20201115 22:03:14.227" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:14.250" endtime="20201115 22:03:14.270"></status>
</kw>
<msg timestamp="20201115 22:03:14.271" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:14.247" endtime="20201115 22:03:14.272"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:14.278" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:14.274" endtime="20201115 22:03:14.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:14.281" endtime="20201115 22:03:14.285"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.240" endtime="20201115 22:03:14.286"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.234" endtime="20201115 22:03:14.288"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:14.306" endtime="20201115 22:03:14.666"></status>
</kw>
<msg timestamp="20201115 22:03:14.673" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041800306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041818014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:14.302" endtime="20201115 22:03:14.674"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:14.693" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041800306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041818014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:14.676" endtime="20201115 22:03:14.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:14.695" endtime="20201115 22:03:14.699"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.295" endtime="20201115 22:03:14.701"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.289" endtime="20201115 22:03:14.702"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:14.713" level="INFO">${RESULT} = [{'time': 0.041818014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7707999999998225e-05, 'source_diff': 1.7707999999998225e-05}, {'time': 0.042002153, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:14.704" endtime="20201115 22:03:14.714"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:14.745" level="INFO">${OVERHEAD} = {'time': [0.041818014, 0.042002153, 0.042184444, 0.042366597, 0.042552889, 0.042737083, 0.042923403, 0.043105556, 0.043287792, 0.043471056, 0.043653264, 0.043834472, 0.044021667, 0.044207819, 0.044390...</msg>
<status status="PASS" starttime="20201115 22:03:14.715" endtime="20201115 22:03:14.745"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:14.756" level="INFO">NAME: 00-overhead-6-set</msg>
<status status="PASS" starttime="20201115 22:03:14.754" endtime="20201115 22:03:14.757"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:14.762" level="INFO">VALUE: [1.7707999999998225e-05, 1.6806000000001153e-05, 1.6986000000003554e-05, 1.6985999999996615e-05, 1.7667000000005928e-05, 1.731900000000175e-05, 1.6806000000001153e-05, 1.7473000000003958e-05, 1.768099999999856e-05, 1.7487000000003528e-05, 1.6971999999997045e-05, 1.6999999999996185e-05, 1.715299999999892e-05, 1.683300000000082e-05, 1.716699999999849e-05, 1.7153000000005858e-05, 1.758300000000157e-05, 1.7639000000006788e-05, 1.6972000000003984e-05, 1.6806000000001153e-05, 1.7679999999999085e-05, 1.745899999999745e-05, 1.7513999999996255e-05, 1.684700000000039e-05, 1.733300000000132e-05, 1.6834000000000293e-05, 1.718099999999806e-05, 1.7486000000004054e-05, 1.6806000000001153e-05, 1.6986000000003554e-05, 1.7055999999994464e-05, 1.6971999999997045e-05, 1.7471999999997545e-05, 1.7485999999997115e-05, 1.7151999999999445e-05, 1.7499999999996685e-05, 1.6929999999998335e-05, 1.7165999999999015e-05, 1.715299999999892e-05, 1.766699999999899e-05, 1.7165999999999015e-05, 1.7319999999994284e-05, 1.7471999999997545e-05, 1.687499999999953e-05, 1.6987000000003027e-05, 1.683300000000082e-05, 1.716699999999849e-05, 1.7459000000004388e-05, 1.766699999999899e-05, 1.7179999999998585e-05]</msg>
<status status="PASS" starttime="20201115 22:03:14.758" endtime="20201115 22:03:14.762"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.747" endtime="20201115 22:03:14.764"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:14.771" endtime="20201115 22:03:14.773"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:14.779" endtime="20201115 22:03:14.805"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.775" endtime="20201115 22:03:14.806"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.766" endtime="20201115 22:03:14.808"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.228" endtime="20201115 22:03:14.809"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.920" endtime="20201115 22:03:14.809"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.919" endtime="20201115 22:03:14.810"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:14.815" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:14.838" endtime="20201115 22:03:14.859"></status>
</kw>
<msg timestamp="20201115 22:03:14.860" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:14.835" endtime="20201115 22:03:14.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:14.866" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:14.862" endtime="20201115 22:03:14.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:14.869" endtime="20201115 22:03:14.872"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.827" endtime="20201115 22:03:14.874"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.821" endtime="20201115 22:03:14.876"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:14.893" endtime="20201115 22:03:15.245"></status>
</kw>
<msg timestamp="20201115 22:03:15.253" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047539556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047557222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:14.890" endtime="20201115 22:03:15.253"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:15.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047539556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047557222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:15.255" endtime="20201115 22:03:15.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:15.274" endtime="20201115 22:03:15.278"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.882" endtime="20201115 22:03:15.279"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.878" endtime="20201115 22:03:15.281"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:15.292" level="INFO">${RESULT} = [{'time': 0.047557222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7666000000006454e-05, 'source_diff': 1.7666000000006454e-05}, {'time': 0.047761458, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:15.283" endtime="20201115 22:03:15.292"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:15.324" level="INFO">${OVERHEAD} = {'time': [0.047557222, 0.047761458, 0.047963708, 0.048162875, 0.048366153, 0.048571292, 0.048771542, 0.048970778, 0.049176125, 0.049381361, 0.049580542, 0.049785931, 0.049984042, 0.050185431, 0.050385...</msg>
<status status="PASS" starttime="20201115 22:03:15.294" endtime="20201115 22:03:15.325"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:15.336" level="INFO">NAME: 00-overhead-7-set</msg>
<status status="PASS" starttime="20201115 22:03:15.333" endtime="20201115 22:03:15.337"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:15.341" level="INFO">VALUE: [1.7666000000006454e-05, 1.7999999999997185e-05, 1.8514000000004194e-05, 1.8028000000003264e-05, 1.7834000000001293e-05, 1.8500000000004624e-05, 1.768099999999856e-05, 1.7806000000002153e-05, 1.840300000000017e-05, 1.8193999999999155e-05, 1.768099999999856e-05, 1.8513999999997255e-05, 1.769499999999813e-05, 1.7848000000000863e-05, 1.804099999999642e-05, 1.781899999999531e-05, 1.8459000000005388e-05, 1.768099999999856e-05, 1.784700000000139e-05, 1.8499999999997685e-05, 1.8152000000000446e-05, 1.8348000000001363e-05, 1.8000000000004124e-05, 1.8348000000001363e-05, 1.836100000000146e-05, 1.816699999999949e-05, 1.8013999999996755e-05, 1.816699999999949e-05, 1.8179999999999585e-05, 1.7944000000005844e-05, 1.78890000000001e-05, 1.8320000000002223e-05, 1.781899999999531e-05, 1.7999999999997185e-05, 1.833300000000232e-05, 1.7695000000005068e-05, 1.815299999999992e-05, 1.781899999999531e-05, 1.8000000000004124e-05, 1.7999999999997185e-05, 1.8181000000005998e-05, 1.8500000000004624e-05, 1.8402000000000696e-05, 1.8181000000005998e-05, 1.784699999999445e-05, 1.8334000000001793e-05, 1.829099999999667e-05, 1.834700000000189e-05, 1.818099999999906e-05, 1.8027999999996325e-05]</msg>
<status status="PASS" starttime="20201115 22:03:15.338" endtime="20201115 22:03:15.342"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.326" endtime="20201115 22:03:15.344"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:15.350" endtime="20201115 22:03:15.353"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:15.360" endtime="20201115 22:03:15.382"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.354" endtime="20201115 22:03:15.384"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.346" endtime="20201115 22:03:15.386"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.816" endtime="20201115 22:03:15.386"></status>
</kw>
<msg timestamp="20201115 22:03:15.387" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:15.411" endtime="20201115 22:03:15.431"></status>
</kw>
<msg timestamp="20201115 22:03:15.433" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:15.407" endtime="20201115 22:03:15.433"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:15.440" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:15.435" endtime="20201115 22:03:15.440"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:15.442" endtime="20201115 22:03:15.446"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.400" endtime="20201115 22:03:15.448"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.394" endtime="20201115 22:03:15.449"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:15.467" endtime="20201115 22:03:15.829"></status>
</kw>
<msg timestamp="20201115 22:03:15.836" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042158681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042176833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:15.463" endtime="20201115 22:03:15.836"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:15.854" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042158681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042176833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:15.838" endtime="20201115 22:03:15.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:15.857" endtime="20201115 22:03:15.861"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.456" endtime="20201115 22:03:15.862"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.451" endtime="20201115 22:03:15.864"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:15.875" level="INFO">${RESULT} = [{'time': 0.042176833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8151999999993507e-05, 'source_diff': 1.8151999999993507e-05}, {'time': 0.042381056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:15.866" endtime="20201115 22:03:15.875"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:15.907" level="INFO">${OVERHEAD} = {'time': [0.042176833, 0.042381056, 0.042581347, 0.042780583, 0.042982806, 0.043187153, 0.043386472, 0.043590667, 0.043796083, 0.043997278, 0.044200583, 0.044401778, 0.044604972, 0.044808361, 0.045009...</msg>
<status status="PASS" starttime="20201115 22:03:15.877" endtime="20201115 22:03:15.907"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:15.918" level="INFO">NAME: 00-overhead-7-set</msg>
<status status="PASS" starttime="20201115 22:03:15.916" endtime="20201115 22:03:15.919"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:15.923" level="INFO">VALUE: [1.8151999999993507e-05, 1.8014000000003694e-05, 1.7693999999998655e-05, 1.836099999999452e-05, 1.819499999999863e-05, 1.811100000000121e-05, 1.7694000000005594e-05, 1.8334000000001793e-05, 1.8221999999998295e-05, 1.836100000000146e-05, 1.834700000000189e-05, 1.7959000000004888e-05, 1.834700000000189e-05, 1.783299999999488e-05, 1.8402000000000696e-05, 1.8486000000005054e-05, 1.834700000000189e-05, 1.8457999999998975e-05, 1.833299999999538e-05, 1.769499999999813e-05, 1.783300000000182e-05, 1.8000000000004124e-05, 1.819499999999863e-05, 1.8333999999994854e-05, 1.830499999999624e-05, 1.8014000000003694e-05, 1.8014000000003694e-05, 1.8181000000005998e-05, 1.7693999999998655e-05, 1.766699999999899e-05, 1.7834000000001293e-05, 1.834700000000189e-05, 1.783299999999488e-05, 1.786100000000096e-05, 1.783300000000182e-05, 1.8166000000000015e-05, 1.8584000000002043e-05, 1.818099999999906e-05, 1.858300000000257e-05, 1.851299999999778e-05, 1.766699999999899e-05, 1.816699999999949e-05, 1.765299999999942e-05, 1.8499999999997685e-05, 1.815299999999992e-05, 1.786100000000096e-05, 1.7820000000001723e-05, 1.819499999999863e-05, 1.8527999999996825e-05, 1.8527999999996825e-05]</msg>
<status status="PASS" starttime="20201115 22:03:15.920" endtime="20201115 22:03:15.924"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.909" endtime="20201115 22:03:15.926"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:15.933" endtime="20201115 22:03:15.935"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:15.941" endtime="20201115 22:03:15.963"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.937" endtime="20201115 22:03:15.965"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.928" endtime="20201115 22:03:15.967"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.388" endtime="20201115 22:03:15.967"></status>
</kw>
<msg timestamp="20201115 22:03:15.968" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:15.994" endtime="20201115 22:03:16.015"></status>
</kw>
<msg timestamp="20201115 22:03:16.016" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:15.990" endtime="20201115 22:03:16.016"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:16.022" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:16.018" endtime="20201115 22:03:16.023"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:16.025" endtime="20201115 22:03:16.028"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.982" endtime="20201115 22:03:16.030"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.975" endtime="20201115 22:03:16.032"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:16.048" endtime="20201115 22:03:16.412"></status>
</kw>
<msg timestamp="20201115 22:03:16.419" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044566472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044584667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:16.045" endtime="20201115 22:03:16.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:16.437" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044566472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044584667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:16.421" endtime="20201115 22:03:16.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:16.440" endtime="20201115 22:03:16.444"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.038" endtime="20201115 22:03:16.446"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.033" endtime="20201115 22:03:16.447"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:16.458" level="INFO">${RESULT} = [{'time': 0.044584667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.819499999999863e-05, 'source_diff': 1.819499999999863e-05}, {'time': 0.044783972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:16.449" endtime="20201115 22:03:16.458"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:16.490" level="INFO">${OVERHEAD} = {'time': [0.044584667, 0.044783972, 0.044983097, 0.045183375, 0.045385736, 0.045587083, 0.045789292, 0.045994542, 0.046193833, 0.046398139, 0.046597264, 0.046798639, 0.046997903, 0.047197028, 0.047396...</msg>
<status status="PASS" starttime="20201115 22:03:16.460" endtime="20201115 22:03:16.490"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:16.501" level="INFO">NAME: 00-overhead-7-set</msg>
<status status="PASS" starttime="20201115 22:03:16.499" endtime="20201115 22:03:16.502"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:16.507" level="INFO">VALUE: [1.819499999999863e-05, 1.8027999999996325e-05, 1.784700000000139e-05, 1.818099999999906e-05, 1.786100000000096e-05, 1.781900000000225e-05, 1.787500000000053e-05, 1.812500000000078e-05, 1.784699999999445e-05, 1.7985999999997615e-05, 1.815299999999992e-05, 1.834700000000189e-05, 1.763899999999985e-05, 1.766699999999899e-05, 1.815299999999992e-05, 1.7999999999997185e-05, 1.816699999999949e-05, 1.768099999999856e-05, 1.8320000000002223e-05, 1.8513999999997255e-05, 1.8042000000002834e-05, 1.8014000000003694e-05, 1.8320000000002223e-05, 1.8027999999996325e-05, 1.8334000000001793e-05, 1.768099999999856e-05, 1.768099999999856e-05, 1.8333999999994854e-05, 1.7679999999999085e-05, 1.8278000000003514e-05, 1.8334000000001793e-05, 1.8499999999997685e-05, 1.831900000000275e-05, 1.8514000000004194e-05, 1.7972000000004984e-05, 1.7999999999997185e-05, 1.7999999999997185e-05, 1.8499999999997685e-05, 1.816699999999949e-05, 1.8471999999998545e-05, 1.8179999999999585e-05, 1.834699999999495e-05, 1.8500000000004624e-05, 1.8027999999996325e-05, 1.8334000000001793e-05, 1.8513999999997255e-05, 1.833299999999538e-05, 1.7665999999999515e-05, 1.7681000000005498e-05, 1.833300000000232e-05]</msg>
<status status="PASS" starttime="20201115 22:03:16.504" endtime="20201115 22:03:16.508"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.492" endtime="20201115 22:03:16.509"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:16.516" endtime="20201115 22:03:16.519"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:16.525" endtime="20201115 22:03:16.547"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.520" endtime="20201115 22:03:16.549"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.511" endtime="20201115 22:03:16.550"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.969" endtime="20201115 22:03:16.551"></status>
</kw>
<msg timestamp="20201115 22:03:16.552" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:16.576" endtime="20201115 22:03:16.597"></status>
</kw>
<msg timestamp="20201115 22:03:16.598" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:16.572" endtime="20201115 22:03:16.599"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:16.605" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:16.601" endtime="20201115 22:03:16.606"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:16.607" endtime="20201115 22:03:16.611"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.565" endtime="20201115 22:03:16.613"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.559" endtime="20201115 22:03:16.614"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:16.631" endtime="20201115 22:03:16.983"></status>
</kw>
<msg timestamp="20201115 22:03:16.990" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044241306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044259667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:16.628" endtime="20201115 22:03:16.991"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:17.009" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044241306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044259667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:16.993" endtime="20201115 22:03:17.010"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:17.012" endtime="20201115 22:03:17.016"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.621" endtime="20201115 22:03:17.018"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.616" endtime="20201115 22:03:17.019"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:17.030" level="INFO">${RESULT} = [{'time': 0.044259667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.836100000000146e-05, 'source_diff': 1.836100000000146e-05}, {'time': 0.044459931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:17.021" endtime="20201115 22:03:17.030"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:17.062" level="INFO">${OVERHEAD} = {'time': [0.044259667, 0.044459931, 0.044662208, 0.0448615, 0.045063764, 0.045266028, 0.045470319, 0.045672639, 0.045873986, 0.046077181, 0.046279486, 0.046484792, 0.046684194, 0.046888444, 0.04708868...</msg>
<status status="PASS" starttime="20201115 22:03:17.032" endtime="20201115 22:03:17.062"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:17.073" level="INFO">NAME: 00-overhead-7-set</msg>
<status status="PASS" starttime="20201115 22:03:17.071" endtime="20201115 22:03:17.074"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:17.079" level="INFO">VALUE: [1.836100000000146e-05, 1.7862000000000433e-05, 1.854100000000386e-05, 1.784700000000139e-05, 1.765299999999942e-05, 1.8513999999997255e-05, 1.851300000000472e-05, 1.834700000000189e-05, 1.7999999999997185e-05, 1.813900000000035e-05, 1.816699999999949e-05, 1.8513999999997255e-05, 1.852699999999735e-05, 1.7651999999999946e-05, 1.818099999999906e-05, 1.858299999999563e-05, 1.7820000000001723e-05, 1.769499999999813e-05, 1.8179999999999585e-05, 1.783299999999488e-05, 1.8499999999997685e-05, 1.818099999999906e-05, 1.8499999999997685e-05, 1.8028000000003264e-05, 1.8513999999997255e-05, 1.8207999999998725e-05, 1.7679999999999085e-05, 1.8167000000006428e-05, 1.8014000000003694e-05, 1.8013999999996755e-05, 1.8014000000003694e-05, 1.7834000000001293e-05, 1.784700000000139e-05, 1.8166000000000015e-05, 1.836100000000146e-05, 1.7999999999997185e-05, 1.8513999999997255e-05, 1.816699999999949e-05, 1.7667000000005928e-05, 1.8514000000004194e-05, 1.8334000000001793e-05, 1.7999999999997185e-05, 1.7679999999999085e-05, 1.7693999999998655e-05, 1.8542000000003334e-05, 1.784700000000139e-05, 1.8499999999997685e-05, 1.8013999999996755e-05, 1.784700000000139e-05, 1.8513999999997255e-05]</msg>
<status status="PASS" starttime="20201115 22:03:17.075" endtime="20201115 22:03:17.079"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.064" endtime="20201115 22:03:17.081"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:17.088" endtime="20201115 22:03:17.091"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:17.097" endtime="20201115 22:03:17.119"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.092" endtime="20201115 22:03:17.121"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.084" endtime="20201115 22:03:17.122"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.553" endtime="20201115 22:03:17.123"></status>
</kw>
<msg timestamp="20201115 22:03:17.124" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:17.147" endtime="20201115 22:03:17.167"></status>
</kw>
<msg timestamp="20201115 22:03:17.168" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:17.144" endtime="20201115 22:03:17.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:17.175" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:17.171" endtime="20201115 22:03:17.176"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:17.177" endtime="20201115 22:03:17.181"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.136" endtime="20201115 22:03:17.183"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.130" endtime="20201115 22:03:17.184"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:17.205" endtime="20201115 22:03:17.558"></status>
</kw>
<msg timestamp="20201115 22:03:17.565" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041791861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041810403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:17.202" endtime="20201115 22:03:17.566"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:17.584" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041791861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041810403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:17.568" endtime="20201115 22:03:17.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:17.587" endtime="20201115 22:03:17.590"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.190" endtime="20201115 22:03:17.592"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.186" endtime="20201115 22:03:17.594"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:17.605" level="INFO">${RESULT} = [{'time': 0.041810403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8542000000003334e-05, 'source_diff': 1.8542000000003334e-05}, {'time': 0.042009556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:17.595" endtime="20201115 22:03:17.605"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:17.636" level="INFO">${OVERHEAD} = {'time': [0.041810403, 0.042009556, 0.042214861, 0.042413069, 0.042614333, 0.042818708, 0.043018903, 0.043222125, 0.043423361, 0.043628639, 0.043827958, 0.04403325, 0.044236444, 0.044440722, 0.0446461...</msg>
<status status="PASS" starttime="20201115 22:03:17.607" endtime="20201115 22:03:17.636"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:17.647" level="INFO">NAME: 00-overhead-7-set</msg>
<status status="PASS" starttime="20201115 22:03:17.645" endtime="20201115 22:03:17.648"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:17.653" level="INFO">VALUE: [1.8542000000003334e-05, 1.7695000000005068e-05, 1.816699999999949e-05, 1.783299999999488e-05, 1.784699999999445e-05, 1.833299999999538e-05, 1.8513999999997255e-05, 1.8513999999997255e-05, 1.8014000000003694e-05, 1.811099999999427e-05, 1.7651999999999946e-05, 1.8056000000002403e-05, 1.783300000000182e-05, 1.8500000000004624e-05, 1.818099999999906e-05, 1.769499999999813e-05, 1.8028000000003264e-05, 1.784700000000139e-05, 1.8166000000000015e-05, 1.834700000000189e-05, 1.7665999999999515e-05, 1.8221999999998295e-05, 1.834700000000189e-05, 1.8514000000004194e-05, 1.7834000000001293e-05, 1.8486000000005054e-05, 1.815299999999992e-05, 1.816699999999949e-05, 1.8513999999997255e-05, 1.8514000000004194e-05, 1.801299999999728e-05, 1.836099999999452e-05, 1.7693999999998655e-05, 1.805499999999599e-05, 1.7820000000001723e-05, 1.8249999999997435e-05, 1.8028000000003264e-05, 1.834700000000189e-05, 1.8027999999996325e-05, 1.816699999999949e-05, 1.8499999999997685e-05, 1.7735999999997365e-05, 1.833300000000232e-05, 1.8514000000004194e-05, 1.8514000000004194e-05, 1.7694000000005594e-05, 1.7820000000001723e-05, 1.8499999999997685e-05, 1.836100000000146e-05, 1.818099999999906e-05]</msg>
<status status="PASS" starttime="20201115 22:03:17.649" endtime="20201115 22:03:17.654"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.638" endtime="20201115 22:03:17.656"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:17.662" endtime="20201115 22:03:17.665"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:17.671" endtime="20201115 22:03:17.693"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.667" endtime="20201115 22:03:17.695"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.658" endtime="20201115 22:03:17.697"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.125" endtime="20201115 22:03:17.697"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.812" endtime="20201115 22:03:17.698"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.810" endtime="20201115 22:03:17.698"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:17.703" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:17.730" endtime="20201115 22:03:17.752"></status>
</kw>
<msg timestamp="20201115 22:03:17.753" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:17.726" endtime="20201115 22:03:17.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:17.760" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:17.756" endtime="20201115 22:03:17.760"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:17.762" endtime="20201115 22:03:17.766"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.717" endtime="20201115 22:03:17.768"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.710" endtime="20201115 22:03:17.769"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:17.786" endtime="20201115 22:03:18.144"></status>
</kw>
<msg timestamp="20201115 22:03:18.151" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.05138975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.051408972, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:03:17.783" endtime="20201115 22:03:18.152"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:18.170" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.05138975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.051408972, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:03:18.154" endtime="20201115 22:03:18.171"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:18.172" endtime="20201115 22:03:18.176"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.775" endtime="20201115 22:03:18.178"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.771" endtime="20201115 22:03:18.179"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:18.190" level="INFO">${RESULT} = [{'time': 0.051408972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9221999999999295e-05, 'source_diff': 1.9221999999999295e-05}, {'time': 0.051628069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:18.181" endtime="20201115 22:03:18.191"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:18.222" level="INFO">${OVERHEAD} = {'time': [0.051408972, 0.051628069, 0.051849431, 0.052069778, 0.052289931, 0.052508236, 0.0527315, 0.052951764, 0.053171125, 0.053392403, 0.053613681, 0.053832833, 0.054051153, 0.054274347, 0.05449861...</msg>
<status status="PASS" starttime="20201115 22:03:18.192" endtime="20201115 22:03:18.222"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:18.233" level="INFO">NAME: 00-overhead-8-set</msg>
<status status="PASS" starttime="20201115 22:03:18.231" endtime="20201115 22:03:18.234"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:18.239" level="INFO">VALUE: [1.9221999999999295e-05, 1.8693999999999655e-05, 1.93890000000016e-05, 1.8735999999998365e-05, 1.8541999999996395e-05, 1.8707999999999225e-05, 1.9013999999997755e-05, 1.884699999999545e-05, 1.9207999999999725e-05, 1.8541999999996395e-05, 1.93890000000016e-05, 1.936099999999552e-05, 1.9013999999997755e-05, 1.9013999999997755e-05, 1.936100000000246e-05, 1.9277999999997575e-05, 1.887500000000153e-05, 1.92089999999992e-05, 1.87089999999987e-05, 1.905500000000393e-05, 1.8542000000003334e-05, 1.9194000000000155e-05, 1.886099999999502e-05, 1.8693999999999655e-05, 1.88890000000011e-05, 1.919499999999963e-05, 1.8528000000003764e-05, 1.8500000000004624e-05, 1.884699999999545e-05, 1.937500000000203e-05, 1.919499999999963e-05, 1.855499999999649e-05, 1.9027999999997325e-05, 1.883300000000282e-05, 1.886099999999502e-05, 1.9070000000002973e-05, 1.9348000000002363e-05, 1.8861999999994494e-05, 1.886100000000196e-05, 1.886099999999502e-05, 1.918100000000006e-05, 1.8693999999999655e-05, 1.916700000000049e-05, 1.852699999999735e-05, 1.9361999999994994e-05, 1.9207999999999725e-05, 1.9194000000000155e-05, 1.887500000000153e-05, 1.937500000000203e-05, 1.9194000000000155e-05]</msg>
<status status="PASS" starttime="20201115 22:03:18.236" endtime="20201115 22:03:18.240"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.224" endtime="20201115 22:03:18.242"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:18.249" endtime="20201115 22:03:18.251"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:18.257" endtime="20201115 22:03:18.279"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.252" endtime="20201115 22:03:18.281"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.244" endtime="20201115 22:03:18.282"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.704" endtime="20201115 22:03:18.283"></status>
</kw>
<msg timestamp="20201115 22:03:18.283" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:18.307" endtime="20201115 22:03:18.328"></status>
</kw>
<msg timestamp="20201115 22:03:18.329" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:18.304" endtime="20201115 22:03:18.330"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:18.337" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:18.331" endtime="20201115 22:03:18.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:18.339" endtime="20201115 22:03:18.344"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.296" endtime="20201115 22:03:18.345"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.290" endtime="20201115 22:03:18.347"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:18.364" endtime="20201115 22:03:18.719"></status>
</kw>
<msg timestamp="20201115 22:03:18.726" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041763875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041783111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:18.360" endtime="20201115 22:03:18.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:18.745" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041763875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041783111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:18.728" endtime="20201115 22:03:18.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:18.747" endtime="20201115 22:03:18.751"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.353" endtime="20201115 22:03:18.753"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.348" endtime="20201115 22:03:18.754"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:18.765" level="INFO">${RESULT} = [{'time': 0.041783111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9235999999998865e-05, 'source_diff': 1.9235999999998865e-05}, {'time': 0.042004417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:18.756" endtime="20201115 22:03:18.766"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:18.797" level="INFO">${OVERHEAD} = {'time': [0.041783111, 0.042004417, 0.042221708, 0.042441014, 0.042660431, 0.042882694, 0.043100903, 0.043325208, 0.0435435, 0.043765722, 0.043988986, 0.044208319, 0.044426569, 0.044647833, 0.04486905...</msg>
<status status="PASS" starttime="20201115 22:03:18.767" endtime="20201115 22:03:18.802"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:18.813" level="INFO">NAME: 00-overhead-8-set</msg>
<status status="PASS" starttime="20201115 22:03:18.811" endtime="20201115 22:03:18.814"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:18.819" level="INFO">VALUE: [1.9235999999998865e-05, 1.92089999999992e-05, 1.854099999999692e-05, 1.887500000000153e-05, 1.919499999999963e-05, 1.9207999999999725e-05, 1.9042000000003834e-05, 1.9194000000000155e-05, 1.8541999999996395e-05, 1.937500000000203e-05, 1.9027999999997325e-05, 1.936100000000246e-05, 1.9194000000000155e-05, 1.931899999999681e-05, 1.8819999999995785e-05, 1.854100000000386e-05, 1.866699999999999e-05, 1.8791999999996645e-05, 1.8707999999999225e-05, 1.8735999999998365e-05, 1.8513999999997255e-05, 1.8528000000003764e-05, 1.851299999999778e-05, 1.9195000000006568e-05, 1.8528000000003764e-05, 1.887500000000153e-05, 1.8834000000002293e-05, 1.936100000000246e-05, 1.9028000000004264e-05, 1.887500000000153e-05, 1.8499999999997685e-05, 1.905500000000393e-05, 1.937500000000203e-05, 1.9333999999995855e-05, 1.8735999999998365e-05, 1.847299999999802e-05, 1.865300000000042e-05, 1.904100000000436e-05, 1.8541999999996395e-05, 1.919499999999963e-05, 1.884699999999545e-05, 1.918100000000006e-05, 1.934700000000289e-05, 1.887500000000153e-05, 1.936099999999552e-05, 1.919499999999963e-05, 1.919499999999963e-05, 1.8499999999997685e-05, 1.9056000000003404e-05, 1.9055999999996465e-05]</msg>
<status status="PASS" starttime="20201115 22:03:18.816" endtime="20201115 22:03:18.820"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.804" endtime="20201115 22:03:18.822"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:18.828" endtime="20201115 22:03:18.831"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:18.837" endtime="20201115 22:03:18.859"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.832" endtime="20201115 22:03:18.860"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.824" endtime="20201115 22:03:18.862"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.285" endtime="20201115 22:03:18.863"></status>
</kw>
<msg timestamp="20201115 22:03:18.863" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:18.887" endtime="20201115 22:03:18.908"></status>
</kw>
<msg timestamp="20201115 22:03:18.909" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:18.883" endtime="20201115 22:03:18.910"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:18.916" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:18.911" endtime="20201115 22:03:18.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:18.918" endtime="20201115 22:03:18.922"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.876" endtime="20201115 22:03:18.923"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.870" endtime="20201115 22:03:18.925"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:18.942" endtime="20201115 22:03:19.296"></status>
</kw>
<msg timestamp="20201115 22:03:19.303" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041783083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041801611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:18.939" endtime="20201115 22:03:19.304"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:19.321" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041783083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041801611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:19.306" endtime="20201115 22:03:19.322"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:19.324" endtime="20201115 22:03:19.329"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.931" endtime="20201115 22:03:19.331"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.926" endtime="20201115 22:03:19.332"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:19.343" level="INFO">${RESULT} = [{'time': 0.041801611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8528000000003764e-05, 'source_diff': 1.8528000000003764e-05}, {'time': 0.042024833, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:19.334" endtime="20201115 22:03:19.344"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:19.375" level="INFO">${OVERHEAD} = {'time': [0.041801611, 0.042024833, 0.042248097, 0.042469403, 0.042687583, 0.042910764, 0.043133028, 0.043351347, 0.043570556, 0.043789653, 0.044011931, 0.044235222, 0.044458458, 0.044676722, 0.044897...</msg>
<status status="PASS" starttime="20201115 22:03:19.346" endtime="20201115 22:03:19.375"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:19.386" level="INFO">NAME: 00-overhead-8-set</msg>
<status status="PASS" starttime="20201115 22:03:19.383" endtime="20201115 22:03:19.386"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:19.391" level="INFO">VALUE: [1.8528000000003764e-05, 1.9207999999999725e-05, 1.934699999999595e-05, 1.919499999999963e-05, 1.8693999999999655e-05, 1.918100000000006e-05, 1.887499999999459e-05, 1.8707999999999225e-05, 1.8695000000006068e-05, 1.884699999999545e-05, 1.8861999999994494e-05, 1.8999999999998185e-05, 1.934699999999595e-05, 1.884700000000239e-05, 1.886100000000196e-05, 1.9194000000000155e-05, 1.919499999999963e-05, 1.8707999999999225e-05, 1.902699999999785e-05, 1.93890000000016e-05, 1.9013999999997755e-05, 1.8527999999996825e-05, 1.8723000000005208e-05, 1.9028000000004264e-05, 1.9028000000004264e-05, 1.937500000000203e-05, 1.9180000000000585e-05, 1.9333999999995855e-05, 1.934700000000289e-05, 1.9348000000002363e-05, 1.9207999999999725e-05, 1.8847999999994924e-05, 1.9180000000000585e-05, 1.936100000000246e-05, 1.852700000000429e-05, 1.9249999999998435e-05, 1.865300000000042e-05, 1.92089999999992e-05, 1.934700000000289e-05, 1.884700000000239e-05, 1.936099999999552e-05, 1.8735999999998365e-05, 1.852699999999735e-05, 1.908300000000307e-05, 1.886099999999502e-05, 1.883300000000282e-05, 1.8528000000003764e-05, 1.936100000000246e-05, 1.8680000000000085e-05, 1.8513999999997255e-05]</msg>
<status status="PASS" starttime="20201115 22:03:19.388" endtime="20201115 22:03:19.392"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.377" endtime="20201115 22:03:19.394"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:19.400" endtime="20201115 22:03:19.403"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:19.409" endtime="20201115 22:03:19.430"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.404" endtime="20201115 22:03:19.432"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.395" endtime="20201115 22:03:19.434"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.864" endtime="20201115 22:03:19.435"></status>
</kw>
<msg timestamp="20201115 22:03:19.435" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:19.459" endtime="20201115 22:03:19.480"></status>
</kw>
<msg timestamp="20201115 22:03:19.481" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:19.456" endtime="20201115 22:03:19.482"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:19.488" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:19.484" endtime="20201115 22:03:19.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:19.490" endtime="20201115 22:03:19.494"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.448" endtime="20201115 22:03:19.496"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.442" endtime="20201115 22:03:19.497"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:19.514" endtime="20201115 22:03:19.852"></status>
</kw>
<msg timestamp="20201115 22:03:19.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042962028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042980542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:19.510" endtime="20201115 22:03:19.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:19.877" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042962028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042980542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:19.861" endtime="20201115 22:03:19.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:19.880" endtime="20201115 22:03:19.887"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.503" endtime="20201115 22:03:19.889"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.498" endtime="20201115 22:03:19.890"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:19.901" level="INFO">${RESULT} = [{'time': 0.042980542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8513999999997255e-05, 'source_diff': 1.8513999999997255e-05}, {'time': 0.043201708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:19.892" endtime="20201115 22:03:19.901"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:19.931" level="INFO">${OVERHEAD} = {'time': [0.042980542, 0.043201708, 0.043419944, 0.043640222, 0.043862514, 0.044083708, 0.044304972, 0.044525264, 0.044744431, 0.044965667, 0.045183861, 0.045403167, 0.045627361, 0.045848625, 0.046068...</msg>
<status status="PASS" starttime="20201115 22:03:19.903" endtime="20201115 22:03:19.932"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:19.942" level="INFO">NAME: 00-overhead-8-set</msg>
<status status="PASS" starttime="20201115 22:03:19.940" endtime="20201115 22:03:19.943"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:19.947" level="INFO">VALUE: [1.8513999999997255e-05, 1.937499999999509e-05, 1.9194000000000155e-05, 1.8513999999997255e-05, 1.919499999999963e-05, 1.9180000000000585e-05, 1.8721999999998795e-05, 1.8556000000002904e-05, 1.9362000000001933e-05, 1.8848000000001863e-05, 1.9041999999996895e-05, 1.9013999999997755e-05, 1.9194000000000155e-05, 1.936099999999552e-05, 1.9180000000000585e-05, 1.869499999999913e-05, 1.8542000000003334e-05, 1.9027999999997325e-05, 1.9207999999999725e-05, 1.9207999999999725e-05, 1.9028000000004264e-05, 1.886100000000196e-05, 1.886100000000196e-05, 1.8721999999998795e-05, 1.8541999999996395e-05, 1.919499999999963e-05, 1.886100000000196e-05, 1.9069999999996035e-05, 1.9277999999997575e-05, 1.8693999999999655e-05, 1.869499999999913e-05, 1.852700000000429e-05, 1.886100000000196e-05, 1.9320000000003223e-05, 1.8750000000004874e-05, 1.9209000000006138e-05, 1.9028000000004264e-05, 1.9028000000004264e-05, 1.919499999999963e-05, 1.9027999999997325e-05, 1.8584000000002043e-05, 1.854099999999692e-05, 1.9098000000002113e-05, 1.861099999999477e-05, 1.8570000000002473e-05, 1.8527999999996825e-05, 1.868099999999956e-05, 1.8570000000002473e-05, 1.9334000000002793e-05, 1.868099999999956e-05]</msg>
<status status="PASS" starttime="20201115 22:03:19.944" endtime="20201115 22:03:19.948"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.933" endtime="20201115 22:03:19.950"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:19.956" endtime="20201115 22:03:19.959"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:19.965" endtime="20201115 22:03:19.986"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.960" endtime="20201115 22:03:19.988"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.952" endtime="20201115 22:03:19.990"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.436" endtime="20201115 22:03:19.990"></status>
</kw>
<msg timestamp="20201115 22:03:19.991" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:20.014" endtime="20201115 22:03:20.034"></status>
</kw>
<msg timestamp="20201115 22:03:20.035" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:20.011" endtime="20201115 22:03:20.036"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:20.041" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:20.037" endtime="20201115 22:03:20.042"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:20.044" endtime="20201115 22:03:20.047"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.003" endtime="20201115 22:03:20.049"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.997" endtime="20201115 22:03:20.050"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:20.067" endtime="20201115 22:03:20.406"></status>
</kw>
<msg timestamp="20201115 22:03:20.413" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040917569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040936375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:20.064" endtime="20201115 22:03:20.414"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:20.432" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040917569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040936375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:20.416" endtime="20201115 22:03:20.433"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:20.435" endtime="20201115 22:03:20.440"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.056" endtime="20201115 22:03:20.441"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.052" endtime="20201115 22:03:20.443"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:20.453" level="INFO">${RESULT} = [{'time': 0.040936375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8805999999996215e-05, 'source_diff': 1.8805999999996215e-05}, {'time': 0.041159667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:20.444" endtime="20201115 22:03:20.454"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:20.484" level="INFO">${OVERHEAD} = {'time': [0.040936375, 0.041159667, 0.041379736, 0.041598028, 0.041818264, 0.0420385, 0.042258778, 0.042477153, 0.042698236, 0.042916569, 0.043135694, 0.043359861, 0.043582181, 0.043805444, 0.04402569...</msg>
<status status="PASS" starttime="20201115 22:03:20.456" endtime="20201115 22:03:20.485"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:20.496" level="INFO">NAME: 00-overhead-8-set</msg>
<status status="PASS" starttime="20201115 22:03:20.493" endtime="20201115 22:03:20.497"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:20.501" level="INFO">VALUE: [1.8805999999996215e-05, 1.872299999999827e-05, 1.886100000000196e-05, 1.886100000000196e-05, 1.8514000000004194e-05, 1.8693999999999655e-05, 1.937499999999509e-05, 1.8749999999997935e-05, 1.8542000000003334e-05, 1.8971999999999045e-05, 1.936100000000246e-05, 1.936100000000246e-05, 1.9361999999994994e-05, 1.8999999999998185e-05, 1.9180000000000585e-05, 1.863900000000085e-05, 1.9362000000001933e-05, 1.866699999999999e-05, 1.9207999999999725e-05, 1.905499999999699e-05, 1.9028000000004264e-05, 1.880499999999674e-05, 1.8527999999996825e-05, 1.936100000000246e-05, 1.8541999999996395e-05, 1.937499999999509e-05, 1.8707999999999225e-05, 1.8721999999998795e-05, 1.87089999999987e-05, 1.869499999999913e-05, 1.887499999999459e-05, 1.8680000000000085e-05, 1.919499999999963e-05, 1.9207999999999725e-05, 1.891700000000024e-05, 1.937499999999509e-05, 1.919499999999963e-05, 1.8528000000003764e-05, 1.847299999999802e-05, 1.908299999999613e-05, 1.855499999999649e-05, 1.8514000000004194e-05, 1.887500000000153e-05, 1.93890000000016e-05, 1.9221999999999295e-05, 1.8527999999996825e-05, 1.93890000000016e-05, 1.919499999999963e-05, 1.937500000000203e-05, 1.8513999999997255e-05]</msg>
<status status="PASS" starttime="20201115 22:03:20.498" endtime="20201115 22:03:20.502"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.486" endtime="20201115 22:03:20.504"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:20.510" endtime="20201115 22:03:20.513"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:20.518" endtime="20201115 22:03:20.540"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.514" endtime="20201115 22:03:20.542"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.506" endtime="20201115 22:03:20.543"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.992" endtime="20201115 22:03:20.544"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.701" endtime="20201115 22:03:20.545"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.699" endtime="20201115 22:03:20.545"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:20.550" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:20.573" endtime="20201115 22:03:20.594"></status>
</kw>
<msg timestamp="20201115 22:03:20.595" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:20.569" endtime="20201115 22:03:20.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:20.601" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:20.597" endtime="20201115 22:03:20.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:20.604" endtime="20201115 22:03:20.607"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.562" endtime="20201115 22:03:20.609"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.556" endtime="20201115 22:03:20.610"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:20.628" endtime="20201115 22:03:20.972"></status>
</kw>
<msg timestamp="20201115 22:03:20.979" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045982556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046002431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:20.625" endtime="20201115 22:03:20.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:20.997" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045982556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046002431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:20.981" endtime="20201115 22:03:20.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:20.999" endtime="20201115 22:03:21.003"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.617" endtime="20201115 22:03:21.005"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.612" endtime="20201115 22:03:21.006"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:21.017" level="INFO">${RESULT} = [{'time': 0.046002431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.987500000000253e-05, 'source_diff': 1.987500000000253e-05}, {'time': 0.046245736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:21.008" endtime="20201115 22:03:21.018"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:21.048" level="INFO">${OVERHEAD} = {'time': [0.046002431, 0.046245736, 0.046487111, 0.046728333, 0.046971597, 0.047210903, 0.047454292, 0.047693528, 0.047935833, 0.048177167, 0.048418458, 0.048656736, 0.048896069, 0.04913325, 0.0493765...</msg>
<status status="PASS" starttime="20201115 22:03:21.019" endtime="20201115 22:03:21.048"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:21.059" level="INFO">NAME: 00-overhead-9-set</msg>
<status status="PASS" starttime="20201115 22:03:21.057" endtime="20201115 22:03:21.060"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:21.065" level="INFO">VALUE: [1.987500000000253e-05, 1.9542000000004334e-05, 1.990299999999473e-05, 1.954099999999792e-05, 2.005499999999799e-05, 1.93890000000016e-05, 1.97089999999997e-05, 1.9569999999996535e-05, 1.938899999999466e-05, 2.02090000000002e-05, 2.004099999999842e-05, 1.990300000000167e-05, 1.9402000000001696e-05, 1.9736000000006304e-05, 1.937500000000203e-05, 1.937499999999509e-05, 1.9902000000002196e-05, 1.940299999999423e-05, 1.962500000000228e-05, 2.0235999999999865e-05, 2.0249999999999435e-05, 1.987500000000253e-05, 2.02090000000002e-05, 1.9861999999995494e-05, 1.988899999999516e-05, 2.0055999999997465e-05, 2.0056000000004404e-05, 2.023699999999934e-05, 2.0056000000004404e-05, 1.994500000000038e-05, 1.959700000000314e-05, 1.98890000000021e-05, 1.9542000000004334e-05, 2.013900000000235e-05, 2.0194000000001155e-05, 1.937500000000203e-05, 2.019500000000063e-05, 1.983300000000382e-05, 2.004100000000536e-05, 2.0235999999999865e-05, 1.9541999999997395e-05, 1.9556000000003904e-05, 2.013900000000235e-05, 1.938899999999466e-05, 1.93890000000016e-05, 1.93890000000016e-05, 1.9569999999996535e-05, 1.93890000000016e-05, 1.9944000000000905e-05, 1.9584000000003043e-05]</msg>
<status status="PASS" starttime="20201115 22:03:21.061" endtime="20201115 22:03:21.066"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.050" endtime="20201115 22:03:21.068"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:21.074" endtime="20201115 22:03:21.077"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:21.083" endtime="20201115 22:03:21.104"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.078" endtime="20201115 22:03:21.106"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.069" endtime="20201115 22:03:21.108"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.551" endtime="20201115 22:03:21.108"></status>
</kw>
<msg timestamp="20201115 22:03:21.109" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:21.132" endtime="20201115 22:03:21.153"></status>
</kw>
<msg timestamp="20201115 22:03:21.154" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:21.129" endtime="20201115 22:03:21.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:21.161" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:21.156" endtime="20201115 22:03:21.162"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:21.163" endtime="20201115 22:03:21.167"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.121" endtime="20201115 22:03:21.169"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.115" endtime="20201115 22:03:21.170"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:21.187" endtime="20201115 22:03:21.528"></status>
</kw>
<msg timestamp="20201115 22:03:21.535" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040871875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040891611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:21.184" endtime="20201115 22:03:21.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:21.554" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040871875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040891611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:21.538" endtime="20201115 22:03:21.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:21.556" endtime="20201115 22:03:21.562"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.176" endtime="20201115 22:03:21.564"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.171" endtime="20201115 22:03:21.565"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:21.576" level="INFO">${RESULT} = [{'time': 0.040891611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9735999999999365e-05, 'source_diff': 1.9735999999999365e-05}, {'time': 0.041135875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:21.567" endtime="20201115 22:03:21.576"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:21.607" level="INFO">${OVERHEAD} = {'time': [0.040891611, 0.041135875, 0.041376222, 0.041619486, 0.041857889, 0.042100222, 0.042340514, 0.042579931, 0.042823278, 0.043067583, 0.043308889, 0.043550292, 0.043789556, 0.044033889, 0.044273...</msg>
<status status="PASS" starttime="20201115 22:03:21.578" endtime="20201115 22:03:21.607"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:21.618" level="INFO">NAME: 00-overhead-9-set</msg>
<status status="PASS" starttime="20201115 22:03:21.616" endtime="20201115 22:03:21.619"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:21.624" level="INFO">VALUE: [1.9735999999999365e-05, 2.0235999999999865e-05, 1.9721999999999795e-05, 1.9708000000000225e-05, 2.0056000000004404e-05, 2.006899999999756e-05, 1.98890000000021e-05, 1.990300000000167e-05, 1.98890000000021e-05, 2.005499999999799e-05, 2.0208000000000725e-05, 1.937499999999509e-05, 2.0055999999997465e-05, 2.0055999999997465e-05, 1.9555999999996965e-05, 1.979099999999817e-05, 2.005500000000493e-05, 1.9416000000001266e-05, 2.0055999999997465e-05, 2.005499999999799e-05, 2.0222000000000295e-05, 1.987500000000253e-05, 2.0069999999997035e-05, 1.9513999999998255e-05, 1.955499999999749e-05, 2.02090000000002e-05, 2.0027999999998325e-05, 1.955500000000443e-05, 1.955499999999749e-05, 1.943100000000031e-05, 1.93890000000016e-05, 1.9749999999998935e-05, 1.941700000000074e-05, 1.9541999999997395e-05, 2.02090000000002e-05, 1.9541999999997395e-05, 2.016700000000149e-05, 2.0193999999994217e-05, 1.990299999999473e-05, 1.955500000000443e-05, 2.005500000000493e-05, 2.006899999999756e-05, 1.937500000000203e-05, 1.955499999999749e-05, 2.0055999999997465e-05, 2.02090000000002e-05, 1.9570000000003474e-05, 2.005500000000493e-05, 2.0249999999999435e-05, 1.990299999999473e-05]</msg>
<status status="PASS" starttime="20201115 22:03:21.621" endtime="20201115 22:03:21.625"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.609" endtime="20201115 22:03:21.626"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:21.633" endtime="20201115 22:03:21.636"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:21.641" endtime="20201115 22:03:21.664"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.637" endtime="20201115 22:03:21.665"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.628" endtime="20201115 22:03:21.667"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.110" endtime="20201115 22:03:21.668"></status>
</kw>
<msg timestamp="20201115 22:03:21.668" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:21.692" endtime="20201115 22:03:21.715"></status>
</kw>
<msg timestamp="20201115 22:03:21.716" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:21.688" endtime="20201115 22:03:21.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:21.722" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:21.718" endtime="20201115 22:03:21.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:21.724" endtime="20201115 22:03:21.728"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.681" endtime="20201115 22:03:21.730"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.675" endtime="20201115 22:03:21.731"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:21.748" endtime="20201115 22:03:22.104"></status>
</kw>
<msg timestamp="20201115 22:03:22.112" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042766167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042785542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:21.745" endtime="20201115 22:03:22.112"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:22.130" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042766167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042785542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:22.114" endtime="20201115 22:03:22.131"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:22.133" endtime="20201115 22:03:22.137"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.738" endtime="20201115 22:03:22.138"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.733" endtime="20201115 22:03:22.140"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:22.151" level="INFO">${RESULT} = [{'time': 0.042785542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.937500000000203e-05, 'source_diff': 1.937500000000203e-05}, {'time': 0.043023792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:22.141" endtime="20201115 22:03:22.151"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:22.182" level="INFO">${OVERHEAD} = {'time': [0.042785542, 0.043023792, 0.043266069, 0.043507347, 0.043750583, 0.043992889, 0.044232306, 0.044473472, 0.044710778, 0.044950069, 0.045191389, 0.045429611, 0.045670931, 0.045914181, 0.046152...</msg>
<status status="PASS" starttime="20201115 22:03:22.153" endtime="20201115 22:03:22.183"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:22.193" level="INFO">NAME: 00-overhead-9-set</msg>
<status status="PASS" starttime="20201115 22:03:22.191" endtime="20201115 22:03:22.194"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:22.199" level="INFO">VALUE: [1.937500000000203e-05, 1.987499999999559e-05, 2.0235999999999865e-05, 1.954100000000486e-05, 2.0222000000000295e-05, 2.0055999999997465e-05, 1.973699999999884e-05, 1.93890000000016e-05, 1.9721999999999795e-05, 1.9735999999999365e-05, 1.969500000000013e-05, 2.005500000000493e-05, 1.9569999999996535e-05, 2.0055999999997465e-05, 1.9929999999994397e-05, 1.9652000000001946e-05, 2.0055999999997465e-05, 1.9527999999997825e-05, 1.9736000000006304e-05, 1.9777999999998075e-05, 1.940300000000117e-05, 1.98890000000021e-05, 1.9555999999996965e-05, 2.005499999999799e-05, 2.0056000000004404e-05, 1.990300000000167e-05, 2.0056000000004404e-05, 1.97089999999997e-05, 1.938899999999466e-05, 2.0055999999997465e-05, 2.022299999999977e-05, 1.98890000000021e-05, 1.9735999999999365e-05, 1.986100000000296e-05, 1.937499999999509e-05, 2.0208000000000725e-05, 1.966699999999405e-05, 1.955500000000443e-05, 2.0222000000000295e-05, 1.966700000000099e-05, 1.986099999999602e-05, 1.9694000000000655e-05, 1.987499999999559e-05, 1.961100000000271e-05, 1.9721999999999795e-05, 2.0013999999998755e-05, 2.0221999999993356e-05, 1.937499999999509e-05, 1.9735999999999365e-05, 2.0055999999997465e-05]</msg>
<status status="PASS" starttime="20201115 22:03:22.196" endtime="20201115 22:03:22.200"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.184" endtime="20201115 22:03:22.201"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:22.208" endtime="20201115 22:03:22.211"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:22.216" endtime="20201115 22:03:22.238"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.212" endtime="20201115 22:03:22.240"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.203" endtime="20201115 22:03:22.242"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.669" endtime="20201115 22:03:22.242"></status>
</kw>
<msg timestamp="20201115 22:03:22.243" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:22.267" endtime="20201115 22:03:22.289"></status>
</kw>
<msg timestamp="20201115 22:03:22.290" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:22.264" endtime="20201115 22:03:22.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:22.297" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:22.293" endtime="20201115 22:03:22.298"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:22.299" endtime="20201115 22:03:22.303"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.256" endtime="20201115 22:03:22.305"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.250" endtime="20201115 22:03:22.306"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:22.323" endtime="20201115 22:03:22.676"></status>
</kw>
<msg timestamp="20201115 22:03:22.683" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042455806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042476056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:22.320" endtime="20201115 22:03:22.684"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:22.702" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042455806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042476056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:22.686" endtime="20201115 22:03:22.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:22.704" endtime="20201115 22:03:22.710"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.312" endtime="20201115 22:03:22.711"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.308" endtime="20201115 22:03:22.713"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:22.724" level="INFO">${RESULT} = [{'time': 0.042476056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0249999999999435e-05, 'source_diff': 2.0249999999999435e-05}, {'time': 0.042717361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:22.714" endtime="20201115 22:03:22.724"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:22.755" level="INFO">${OVERHEAD} = {'time': [0.042476056, 0.042717361, 0.042961625, 0.043204931, 0.043442333, 0.043683583, 0.043927, 0.04416725, 0.044405542, 0.044646764, 0.044890139, 0.045133431, 0.045371847, 0.045613139, 0.045851347,...</msg>
<status status="PASS" starttime="20201115 22:03:22.726" endtime="20201115 22:03:22.756"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:22.766" level="INFO">NAME: 00-overhead-9-set</msg>
<status status="PASS" starttime="20201115 22:03:22.764" endtime="20201115 22:03:22.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:22.772" level="INFO">VALUE: [2.0249999999999435e-05, 1.9569000000004e-05, 2.0208000000000725e-05, 1.97089999999997e-05, 1.937500000000203e-05, 2.0235999999999865e-05, 1.961100000000271e-05, 2.0055999999997465e-05, 1.9541999999997395e-05, 1.93890000000016e-05, 2.0028000000005264e-05, 2.0056000000004404e-05, 1.9666000000001516e-05, 2.0041999999997895e-05, 1.9735999999999365e-05, 1.990300000000167e-05, 1.93890000000016e-05, 2.02090000000002e-05, 1.9542000000004334e-05, 1.9694000000000655e-05, 2.0222000000000295e-05, 2.005500000000493e-05, 1.9541999999997395e-05, 2.0056000000004404e-05, 1.93890000000016e-05, 1.987499999999559e-05, 1.93890000000016e-05, 1.98890000000021e-05, 1.9583999999996105e-05, 1.93890000000016e-05, 1.9708000000000225e-05, 2.0291999999998145e-05, 1.9708000000000225e-05, 1.937499999999509e-05, 1.93890000000016e-05, 2.0235999999999865e-05, 2.019500000000063e-05, 2.0042000000004834e-05, 1.9527999999997825e-05, 2.022299999999977e-05, 1.9805999999997215e-05, 1.9735999999999365e-05, 2.016699999999455e-05, 1.93890000000016e-05, 2.0222000000000295e-05, 2.0208000000000725e-05, 1.983299999999688e-05, 2.0056000000004404e-05, 1.9735999999999365e-05, 1.98890000000021e-05]</msg>
<status status="PASS" starttime="20201115 22:03:22.769" endtime="20201115 22:03:22.773"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.757" endtime="20201115 22:03:22.774"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:22.781" endtime="20201115 22:03:22.784"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:22.790" endtime="20201115 22:03:22.812"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.786" endtime="20201115 22:03:22.814"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.776" endtime="20201115 22:03:22.815"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.245" endtime="20201115 22:03:22.816"></status>
</kw>
<msg timestamp="20201115 22:03:22.817" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:22.840" endtime="20201115 22:03:22.862"></status>
</kw>
<msg timestamp="20201115 22:03:22.864" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:22.837" endtime="20201115 22:03:22.864"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:22.870" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:22.866" endtime="20201115 22:03:22.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:22.872" endtime="20201115 22:03:22.876"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.829" endtime="20201115 22:03:22.878"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.823" endtime="20201115 22:03:22.880"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:22.897" endtime="20201115 22:03:23.250"></status>
</kw>
<msg timestamp="20201115 22:03:23.257" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041879139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041898889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:22.893" endtime="20201115 22:03:23.258"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:23.276" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041879139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041898889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:23.260" endtime="20201115 22:03:23.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:23.279" endtime="20201115 22:03:23.284"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.886" endtime="20201115 22:03:23.286"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.881" endtime="20201115 22:03:23.287"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:23.298" level="INFO">${RESULT} = [{'time': 0.041898889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9749999999998935e-05, 'source_diff': 1.9749999999998935e-05}, {'time': 0.042141194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:23.289" endtime="20201115 22:03:23.299"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:23.329" level="INFO">${OVERHEAD} = {'time': [0.041898889, 0.042141194, 0.0423815, 0.042620861, 0.042858028, 0.043101389, 0.043340806, 0.043581111, 0.043824361, 0.044064736, 0.044307139, 0.044544444, 0.044784875, 0.045022111, 0.04526030...</msg>
<status status="PASS" starttime="20201115 22:03:23.300" endtime="20201115 22:03:23.330"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:23.341" level="INFO">NAME: 00-overhead-9-set</msg>
<status status="PASS" starttime="20201115 22:03:23.338" endtime="20201115 22:03:23.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:23.346" level="INFO">VALUE: [1.9749999999998935e-05, 2.006899999999756e-05, 2.0222000000000295e-05, 2.0235999999999865e-05, 1.97089999999997e-05, 1.938899999999466e-05, 1.93890000000016e-05, 2.016700000000149e-05, 2.0222000000000295e-05, 1.937500000000203e-05, 1.98890000000021e-05, 1.987500000000253e-05, 1.98890000000021e-05, 1.9749999999998935e-05, 1.97089999999997e-05, 2.0055999999997465e-05, 1.9735999999999365e-05, 2.0055999999997465e-05, 1.9721999999999795e-05, 1.937500000000203e-05, 1.940300000000117e-05, 1.959700000000314e-05, 2.0055999999997465e-05, 1.987499999999559e-05, 1.972299999999927e-05, 1.973699999999884e-05, 1.987500000000253e-05, 1.9764000000005444e-05, 1.9708000000000225e-05, 2.0055999999997465e-05, 1.940299999999423e-05, 1.9541999999997395e-05, 1.9735999999999365e-05, 1.954099999999792e-05, 1.9721999999999795e-05, 2.005500000000493e-05, 1.987500000000253e-05, 1.9721999999999795e-05, 1.9570000000003474e-05, 1.93890000000016e-05, 1.993099999999387e-05, 1.988899999999516e-05, 1.93890000000016e-05, 1.98890000000021e-05, 1.9708000000000225e-05, 1.986100000000296e-05, 2.0041999999997895e-05, 2.0055999999997465e-05, 1.955500000000443e-05, 2.0249999999999435e-05]</msg>
<status status="PASS" starttime="20201115 22:03:23.343" endtime="20201115 22:03:23.348"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.331" endtime="20201115 22:03:23.350"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:23.356" endtime="20201115 22:03:23.359"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:23.365" endtime="20201115 22:03:23.387"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.360" endtime="20201115 22:03:23.388"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.351" endtime="20201115 22:03:23.390"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.818" endtime="20201115 22:03:23.391"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.548" endtime="20201115 22:03:23.391"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.546" endtime="20201115 22:03:23.392"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:23.397" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:23.420" endtime="20201115 22:03:23.444"></status>
</kw>
<msg timestamp="20201115 22:03:23.445" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:23.417" endtime="20201115 22:03:23.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:23.451" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:23.447" endtime="20201115 22:03:23.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:23.454" endtime="20201115 22:03:23.457"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.409" endtime="20201115 22:03:23.459"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.403" endtime="20201115 22:03:23.460"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:23.478" endtime="20201115 22:03:23.832"></status>
</kw>
<msg timestamp="20201115 22:03:23.839" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047462972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047483556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:23.474" endtime="20201115 22:03:23.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:23.857" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047462972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047483556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:23.841" endtime="20201115 22:03:23.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:23.860" endtime="20201115 22:03:23.864"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.467" endtime="20201115 22:03:23.865"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.462" endtime="20201115 22:03:23.867"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:23.878" level="INFO">${RESULT} = [{'time': 0.047483556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0584000000004044e-05, 'source_diff': 2.0584000000004044e-05}, {'time': 0.047744792, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:23.869" endtime="20201115 22:03:23.878"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:23.909" level="INFO">${OVERHEAD} = {'time': [0.047483556, 0.047744792, 0.048008111, 0.048271431, 0.048529708, 0.048790111, 0.049050319, 0.049309611, 0.049570944, 0.049831222, 0.050095403, 0.050354819, 0.050618028, 0.050882306, 0.051140...</msg>
<status status="PASS" starttime="20201115 22:03:23.880" endtime="20201115 22:03:23.910"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:23.920" level="INFO">NAME: 00-overhead-10-set</msg>
<status status="PASS" starttime="20201115 22:03:23.918" endtime="20201115 22:03:23.921"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:23.932" level="INFO">VALUE: [2.0584000000004044e-05, 2.094500000000138e-05, 2.108299999999813e-05, 2.09169999999953e-05, 2.0222000000000295e-05, 2.0249999999999435e-05, 2.0249999999999435e-05, 2.0250000000006374e-05, 2.0401999999995757e-05, 2.0277999999998575e-05, 2.088899999999616e-05, 2.0402000000002696e-05, 2.0472000000000545e-05, 2.091700000000224e-05, 2.0569000000005e-05, 2.0722000000000795e-05, 2.034699999999695e-05, 2.056899999999806e-05, 2.087500000000353e-05, 2.058299999999763e-05, 2.0235999999999865e-05, 2.034699999999695e-05, 2.0263999999999005e-05, 2.0777999999999075e-05, 2.0583999999997105e-05, 2.0736000000000365e-05, 2.040300000000217e-05, 2.090299999999573e-05, 2.056899999999806e-05, 2.0235999999999865e-05, 2.040300000000217e-05, 2.0736000000000365e-05, 2.0736000000000365e-05, 2.056899999999806e-05, 2.091700000000224e-05, 2.0402000000002696e-05, 2.0208000000000725e-05, 2.1055999999998465e-05, 2.090300000000267e-05, 2.0444000000001405e-05, 2.087499999999659e-05, 2.0222000000000295e-05, 2.0736000000000365e-05, 2.036099999999652e-05, 2.08890000000031e-05, 2.0416000000002266e-05, 2.058299999999763e-05, 2.0708000000001225e-05, 2.0680000000002086e-05, 2.041700000000174e-05]</msg>
<status status="PASS" starttime="20201115 22:03:23.923" endtime="20201115 22:03:23.933"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.911" endtime="20201115 22:03:23.935"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:23.942" endtime="20201115 22:03:23.944"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:23.950" endtime="20201115 22:03:23.972"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.946" endtime="20201115 22:03:23.974"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.937" endtime="20201115 22:03:23.975"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.398" endtime="20201115 22:03:23.976"></status>
</kw>
<msg timestamp="20201115 22:03:23.977" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:24.000" endtime="20201115 22:03:24.024"></status>
</kw>
<msg timestamp="20201115 22:03:24.025" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:23.997" endtime="20201115 22:03:24.026"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:24.031" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:24.027" endtime="20201115 22:03:24.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:24.034" endtime="20201115 22:03:24.038"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.989" endtime="20201115 22:03:24.039"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.983" endtime="20201115 22:03:24.041"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:24.058" endtime="20201115 22:03:24.411"></status>
</kw>
<msg timestamp="20201115 22:03:24.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042282819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042303361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:24.055" endtime="20201115 22:03:24.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:24.437" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042282819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042303361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:24.421" endtime="20201115 22:03:24.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:24.439" endtime="20201115 22:03:24.447"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.047" endtime="20201115 22:03:24.448"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.042" endtime="20201115 22:03:24.450"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:24.461" level="INFO">${RESULT} = [{'time': 0.042303361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0541999999998395e-05, 'source_diff': 2.0541999999998395e-05}, {'time': 0.042567722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:24.452" endtime="20201115 22:03:24.461"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:24.492" level="INFO">${OVERHEAD} = {'time': [0.042303361, 0.042567722, 0.042827931, 0.043088292, 0.043351542, 0.043614861, 0.043874236, 0.044139458, 0.044403847, 0.04466225, 0.044921486, 0.045185792, 0.045447222, 0.045707556, 0.0459699...</msg>
<status status="PASS" starttime="20201115 22:03:24.463" endtime="20201115 22:03:24.493"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:24.504" level="INFO">NAME: 00-overhead-10-set</msg>
<status status="PASS" starttime="20201115 22:03:24.502" endtime="20201115 22:03:24.505"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:24.510" level="INFO">VALUE: [2.0541999999998395e-05, 2.0263999999999005e-05, 2.0749999999999935e-05, 2.1097999999997175e-05, 2.041700000000174e-05, 2.090299999999573e-05, 2.0235999999999865e-05, 2.105499999999899e-05, 2.0250000000006374e-05, 2.0249999999999435e-05, 2.0221999999993356e-05, 2.0777999999999075e-05, 2.0749999999999935e-05, 2.094500000000138e-05, 2.0915999999995827e-05, 2.090300000000267e-05, 2.088899999999616e-05, 2.0527999999998825e-05, 2.0570000000004474e-05, 2.0250000000006374e-05, 2.0207999999993786e-05, 2.0722000000000795e-05, 2.0930000000002336e-05, 2.09169999999953e-05, 2.04169999999948e-05, 2.108299999999813e-05, 2.040300000000217e-05, 2.072300000000027e-05, 2.0915999999995827e-05, 2.058299999999763e-05, 2.0235999999999865e-05, 2.1070000000004974e-05, 2.0763999999999505e-05, 2.072300000000027e-05, 2.0763999999999505e-05, 2.037500000000303e-05, 2.109700000000464e-05, 2.073699999999984e-05, 2.062500000000328e-05, 2.03890000000026e-05, 2.058299999999763e-05, 2.1069999999998035e-05, 2.1055999999998465e-05, 2.0749999999999935e-05, 2.040300000000217e-05, 2.106899999999856e-05, 2.041700000000174e-05, 2.0749999999999935e-05, 2.040299999999523e-05, 2.0541999999998395e-05]</msg>
<status status="PASS" starttime="20201115 22:03:24.506" endtime="20201115 22:03:24.510"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.495" endtime="20201115 22:03:24.512"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:24.519" endtime="20201115 22:03:24.521"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:24.527" endtime="20201115 22:03:24.549"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.523" endtime="20201115 22:03:24.551"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.514" endtime="20201115 22:03:24.552"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.978" endtime="20201115 22:03:24.553"></status>
</kw>
<msg timestamp="20201115 22:03:24.554" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:24.577" endtime="20201115 22:03:24.601"></status>
</kw>
<msg timestamp="20201115 22:03:24.602" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:24.574" endtime="20201115 22:03:24.602"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:24.609" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:24.604" endtime="20201115 22:03:24.610"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:24.611" endtime="20201115 22:03:24.615"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.566" endtime="20201115 22:03:24.617"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.560" endtime="20201115 22:03:24.619"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:24.636" endtime="20201115 22:03:24.988"></status>
</kw>
<msg timestamp="20201115 22:03:24.995" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041947736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041968625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:24.633" endtime="20201115 22:03:24.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:25.014" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041947736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041968625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:24.997" endtime="20201115 22:03:25.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:25.016" endtime="20201115 22:03:25.022"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.625" endtime="20201115 22:03:25.023"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.620" endtime="20201115 22:03:25.025"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:25.036" level="INFO">${RESULT} = [{'time': 0.041968625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.08890000000031e-05, 'source_diff': 2.08890000000031e-05}, {'time': 0.042230972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:03:25.026" endtime="20201115 22:03:25.037"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:25.068" level="INFO">${OVERHEAD} = {'time': [0.041968625, 0.042230972, 0.042488361, 0.042750653, 0.043012083, 0.043274389, 0.043536708, 0.043795028, 0.044054389, 0.04431875, 0.044579167, 0.044837389, 0.045100806, 0.045366222, 0.0456276...</msg>
<status status="PASS" starttime="20201115 22:03:25.039" endtime="20201115 22:03:25.068"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:25.079" level="INFO">NAME: 00-overhead-10-set</msg>
<status status="PASS" starttime="20201115 22:03:25.077" endtime="20201115 22:03:25.080"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:25.085" level="INFO">VALUE: [2.08890000000031e-05, 2.0749999999999935e-05, 2.0249999999999435e-05, 2.091700000000224e-05, 2.0736000000000365e-05, 2.0736000000000365e-05, 2.0222000000000295e-05, 2.0569999999997535e-05, 2.108299999999813e-05, 2.0749999999999935e-05, 2.0235999999999865e-05, 2.0569999999997535e-05, 2.0555999999997965e-05, 2.10969999999977e-05, 2.0194000000001155e-05, 2.1013999999999755e-05, 2.0584000000004044e-05, 2.072300000000027e-05, 2.1070000000004974e-05, 2.106899999999856e-05, 2.108299999999813e-05, 2.043100000000131e-05, 2.090300000000267e-05, 2.083299999999788e-05, 2.0249999999999435e-05, 2.0680000000002086e-05, 2.0584000000004044e-05, 2.091700000000224e-05, 2.093100000000181e-05, 2.044500000000088e-05, 2.108299999999813e-05, 2.058299999999763e-05, 2.087500000000353e-05, 2.0235999999999865e-05, 2.0402000000002696e-05, 2.0916000000002766e-05, 2.0749999999999935e-05, 2.038899999999566e-05, 2.0583999999997105e-05, 2.0736000000000365e-05, 2.08890000000031e-05, 2.0458000000000975e-05, 2.058299999999763e-05, 2.0763999999999505e-05, 2.040299999999523e-05, 2.0430000000001836e-05, 2.091700000000224e-05, 2.059700000000414e-05, 2.02090000000002e-05, 2.0291999999998145e-05]</msg>
<status status="PASS" starttime="20201115 22:03:25.081" endtime="20201115 22:03:25.086"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.070" endtime="20201115 22:03:25.087"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:25.094" endtime="20201115 22:03:25.096"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:25.102" endtime="20201115 22:03:25.124"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.098" endtime="20201115 22:03:25.126"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.089" endtime="20201115 22:03:25.127"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.555" endtime="20201115 22:03:25.128"></status>
</kw>
<msg timestamp="20201115 22:03:25.128" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:25.151" endtime="20201115 22:03:25.174"></status>
</kw>
<msg timestamp="20201115 22:03:25.175" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:25.148" endtime="20201115 22:03:25.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:25.181" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:25.177" endtime="20201115 22:03:25.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:25.184" endtime="20201115 22:03:25.187"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.141" endtime="20201115 22:03:25.189"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.135" endtime="20201115 22:03:25.191"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:25.207" endtime="20201115 22:03:25.547"></status>
</kw>
<msg timestamp="20201115 22:03:25.554" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041318347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041339264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:25.204" endtime="20201115 22:03:25.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:25.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041318347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041339264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:25.556" endtime="20201115 22:03:25.573"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:25.575" endtime="20201115 22:03:25.580"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.197" endtime="20201115 22:03:25.582"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.192" endtime="20201115 22:03:25.584"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:25.594" level="INFO">${RESULT} = [{'time': 0.041339264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.091700000000224e-05, 'source_diff': 2.091700000000224e-05}, {'time': 0.041599569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:25.585" endtime="20201115 22:03:25.595"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:25.624" level="INFO">${OVERHEAD} = {'time': [0.041339264, 0.041599569, 0.041862917, 0.042125222, 0.042389542, 0.042650764, 0.042909083, 0.043167236, 0.043428653, 0.043686889, 0.043951208, 0.044209403, 0.044470917, 0.044735125, 0.044996...</msg>
<status status="PASS" starttime="20201115 22:03:25.596" endtime="20201115 22:03:25.625"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:25.640" level="INFO">NAME: 00-overhead-10-set</msg>
<status status="PASS" starttime="20201115 22:03:25.638" endtime="20201115 22:03:25.641"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:25.646" level="INFO">VALUE: [2.091700000000224e-05, 2.0569000000005e-05, 2.037499999999609e-05, 2.0486000000000115e-05, 2.111100000000421e-05, 2.0249999999999435e-05, 2.0763999999999505e-05, 2.0194000000001155e-05, 2.04169999999948e-05, 2.1055999999998465e-05, 2.07769999999996e-05, 2.041700000000174e-05, 2.095900000000095e-05, 2.0194000000001155e-05, 2.0569999999997535e-05, 2.090300000000267e-05, 2.0291999999998145e-05, 2.02090000000002e-05, 2.0500000000006624e-05, 2.0401999999995757e-05, 2.055500000000543e-05, 2.0763999999999505e-05, 2.09169999999953e-05, 2.0235999999999865e-05, 2.091700000000224e-05, 2.091700000000224e-05, 2.058299999999763e-05, 2.091700000000224e-05, 2.0222000000000295e-05, 2.091700000000224e-05, 2.0429999999994897e-05, 2.08890000000031e-05, 2.0222000000000295e-05, 2.0249999999999435e-05, 2.0402000000002696e-05, 2.040300000000217e-05, 2.093100000000181e-05, 2.105499999999899e-05, 2.0583999999997105e-05, 2.040300000000217e-05, 2.1070000000004974e-05, 2.038899999999566e-05, 2.0736000000000365e-05, 2.0249999999999435e-05, 2.041700000000174e-05, 2.061100000000371e-05, 2.0541999999998395e-05, 2.1152000000003446e-05, 2.090300000000267e-05, 2.02769999999991e-05]</msg>
<status status="PASS" starttime="20201115 22:03:25.643" endtime="20201115 22:03:25.647"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.626" endtime="20201115 22:03:25.649"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:25.655" endtime="20201115 22:03:25.658"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:25.664" endtime="20201115 22:03:25.686"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.660" endtime="20201115 22:03:25.688"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.651" endtime="20201115 22:03:25.689"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.129" endtime="20201115 22:03:25.690"></status>
</kw>
<msg timestamp="20201115 22:03:25.690" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:25.713" endtime="20201115 22:03:25.736"></status>
</kw>
<msg timestamp="20201115 22:03:25.737" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:25.710" endtime="20201115 22:03:25.737"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:25.743" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:25.739" endtime="20201115 22:03:25.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:25.745" endtime="20201115 22:03:25.749"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.703" endtime="20201115 22:03:25.751"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.697" endtime="20201115 22:03:25.752"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:25.769" endtime="20201115 22:03:26.108"></status>
</kw>
<msg timestamp="20201115 22:03:26.115" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040875444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040896333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:25.765" endtime="20201115 22:03:26.116"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:26.134" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040875444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040896333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:26.118" endtime="20201115 22:03:26.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:26.136" endtime="20201115 22:03:26.141"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.758" endtime="20201115 22:03:26.143"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.753" endtime="20201115 22:03:26.144"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:26.155" level="INFO">${RESULT} = [{'time': 0.040896333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.08890000000031e-05, 'source_diff': 2.08890000000031e-05}, {'time': 0.041155667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:03:26.146" endtime="20201115 22:03:26.156"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:26.185" level="INFO">${OVERHEAD} = {'time': [0.040896333, 0.041155667, 0.041418889, 0.041679056, 0.041943431, 0.042202833, 0.042467056, 0.042730444, 0.042988806, 0.043248028, 0.043511458, 0.043769806, 0.044029194, 0.0442905, 0.04455290...</msg>
<status status="PASS" starttime="20201115 22:03:26.157" endtime="20201115 22:03:26.186"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:26.196" level="INFO">NAME: 00-overhead-10-set</msg>
<status status="PASS" starttime="20201115 22:03:26.194" endtime="20201115 22:03:26.197"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:26.202" level="INFO">VALUE: [2.08890000000031e-05, 2.040300000000217e-05, 2.0569999999997535e-05, 2.1055999999998465e-05, 2.1084000000004544e-05, 2.058300000000457e-05, 2.091700000000224e-05, 2.0430000000001836e-05, 2.072300000000027e-05, 2.091700000000224e-05, 2.0569000000005e-05, 2.069500000000113e-05, 2.0416000000002266e-05, 2.108299999999813e-05, 2.1083999999997605e-05, 2.0222000000000295e-05, 2.041700000000174e-05, 2.0472000000000545e-05, 2.10690000000055e-05, 2.058299999999763e-05, 2.090300000000267e-05, 2.0263999999999005e-05, 2.0235999999999865e-05, 2.029099999999867e-05, 2.040300000000217e-05, 2.1069999999998035e-05, 2.10690000000055e-05, 2.04169999999948e-05, 2.040299999999523e-05, 2.056899999999806e-05, 2.108299999999813e-05, 2.058300000000457e-05, 2.038899999999566e-05, 2.106899999999856e-05, 2.0569000000005e-05, 2.0944000000001906e-05, 2.0235999999999865e-05, 2.02769999999991e-05, 2.088899999999616e-05, 2.0749999999999935e-05, 2.061100000000371e-05, 2.0583999999997105e-05, 2.040300000000217e-05, 2.040300000000217e-05, 2.106899999999856e-05, 2.0736000000000365e-05, 2.0749999999999935e-05, 2.061100000000371e-05, 2.0598000000003613e-05, 2.105499999999899e-05]</msg>
<status status="PASS" starttime="20201115 22:03:26.199" endtime="20201115 22:03:26.202"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.187" endtime="20201115 22:03:26.204"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:26.210" endtime="20201115 22:03:26.213"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:26.219" endtime="20201115 22:03:26.240"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.214" endtime="20201115 22:03:26.242"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.206" endtime="20201115 22:03:26.243"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.692" endtime="20201115 22:03:26.244"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.394" endtime="20201115 22:03:26.245"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.393" endtime="20201115 22:03:26.245"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:26.250" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:26.273" endtime="20201115 22:03:26.296"></status>
</kw>
<msg timestamp="20201115 22:03:26.297" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:26.269" endtime="20201115 22:03:26.298"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:26.303" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:26.299" endtime="20201115 22:03:26.304"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:26.306" endtime="20201115 22:03:26.309"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.262" endtime="20201115 22:03:26.311"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.256" endtime="20201115 22:03:26.312"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:26.330" endtime="20201115 22:03:26.669"></status>
</kw>
<msg timestamp="20201115 22:03:26.676" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046044667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046065764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:26.326" endtime="20201115 22:03:26.677"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:26.695" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046044667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046065764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:26.679" endtime="20201115 22:03:26.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:26.697" endtime="20201115 22:03:26.701"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.319" endtime="20201115 22:03:26.703"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.314" endtime="20201115 22:03:26.704"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:26.715" level="INFO">${RESULT} = [{'time': 0.046065764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.109700000000464e-05, 'source_diff': 2.109700000000464e-05}, {'time': 0.046347111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:26.706" endtime="20201115 22:03:26.715"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:26.745" level="INFO">${OVERHEAD} = {'time': [0.046065764, 0.046347111, 0.046630403, 0.046913764, 0.047200167, 0.0474805, 0.047763833, 0.048046319, 0.048332653, 0.048612847, 0.048898361, 0.049182583, 0.049465972, 0.049751375, 0.05003770...</msg>
<status status="PASS" starttime="20201115 22:03:26.717" endtime="20201115 22:03:26.746"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:26.756" level="INFO">NAME: 00-overhead-11-set</msg>
<status status="PASS" starttime="20201115 22:03:26.754" endtime="20201115 22:03:26.757"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:26.761" level="INFO">VALUE: [2.109700000000464e-05, 2.187500000000453e-05, 2.1778000000000075e-05, 2.1291999999999145e-05, 2.1598000000004614e-05, 2.109700000000464e-05, 2.1750000000000935e-05, 2.111099999999727e-05, 2.111100000000421e-05, 2.111099999999727e-05, 2.1472000000001545e-05, 2.108300000000507e-05, 2.1778000000000075e-05, 2.1986000000001615e-05, 2.113900000000335e-05, 2.1930000000003336e-05, 2.141700000000274e-05, 2.1083999999997605e-05, 2.1401999999996757e-05, 2.15969999999982e-05, 2.1137999999996937e-05, 2.1778000000000075e-05, 2.108299999999813e-05, 2.143099999999537e-05, 2.108299999999813e-05, 2.1750000000000935e-05, 2.1430000000002836e-05, 2.108299999999813e-05, 2.159700000000514e-05, 2.1763999999993566e-05, 2.1430000000002836e-05, 2.1250000000000435e-05, 2.143100000000231e-05, 2.1597999999997675e-05, 2.111099999999727e-05, 2.1583999999998105e-05, 2.10969999999977e-05, 2.1764000000000505e-05, 2.194500000000238e-05, 2.118100000000206e-05, 2.1042000000005834e-05, 2.1915999999996827e-05, 2.1291999999999145e-05, 2.106899999999856e-05, 2.1764000000000505e-05, 2.15969999999982e-05, 2.145900000000145e-05, 2.17770000000006e-05, 2.191700000000324e-05, 2.1457999999995037e-05]</msg>
<status status="PASS" starttime="20201115 22:03:26.758" endtime="20201115 22:03:26.762"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.747" endtime="20201115 22:03:26.764"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:26.770" endtime="20201115 22:03:26.773"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:26.779" endtime="20201115 22:03:26.800"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.774" endtime="20201115 22:03:26.802"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.766" endtime="20201115 22:03:26.803"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.251" endtime="20201115 22:03:26.804"></status>
</kw>
<msg timestamp="20201115 22:03:26.805" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:26.827" endtime="20201115 22:03:26.851"></status>
</kw>
<msg timestamp="20201115 22:03:26.852" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:26.824" endtime="20201115 22:03:26.852"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:26.859" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:26.854" endtime="20201115 22:03:26.859"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:26.861" endtime="20201115 22:03:26.865"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.817" endtime="20201115 22:03:26.866"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.811" endtime="20201115 22:03:26.868"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:26.885" endtime="20201115 22:03:27.233"></status>
</kw>
<msg timestamp="20201115 22:03:27.240" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040696597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040718194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:26.881" endtime="20201115 22:03:27.241"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:27.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040696597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040718194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:27.243" endtime="20201115 22:03:27.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:27.261" endtime="20201115 22:03:27.267"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.874" endtime="20201115 22:03:27.268"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.869" endtime="20201115 22:03:27.270"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:27.281" level="INFO">${RESULT} = [{'time': 0.040718194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.15969999999982e-05, 'source_diff': 2.15969999999982e-05}, {'time': 0.040999458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:03:27.272" endtime="20201115 22:03:27.281"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:27.312" level="INFO">${OVERHEAD} = {'time': [0.040718194, 0.040999458, 0.041284889, 0.041570333, 0.041854736, 0.042140069, 0.042426542, 0.042709958, 0.042995333, 0.043276861, 0.043559181, 0.043839681, 0.044125069, 0.044411528, 0.044694...</msg>
<status status="PASS" starttime="20201115 22:03:27.283" endtime="20201115 22:03:27.313"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:27.323" level="INFO">NAME: 00-overhead-11-set</msg>
<status status="PASS" starttime="20201115 22:03:27.321" endtime="20201115 22:03:27.324"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:27.329" level="INFO">VALUE: [2.15969999999982e-05, 2.159700000000514e-05, 2.1764000000000505e-05, 2.112500000000378e-05, 2.1264000000000005e-05, 2.1750000000000935e-05, 2.1277999999999575e-05, 2.1901999999997257e-05, 2.1749999999993996e-05, 2.1250000000000435e-05, 2.1555999999998965e-05, 2.1611999999997245e-05, 2.104099999999942e-05, 2.1764000000000505e-05, 2.131899999999881e-05, 2.194500000000238e-05, 2.1930000000003336e-05, 2.1764000000000505e-05, 2.1264000000000005e-05, 2.1250000000000435e-05, 2.193100000000281e-05, 2.1084000000004544e-05, 2.1930000000003336e-05, 2.1750000000000935e-05, 2.1098000000004113e-05, 2.144500000000188e-05, 2.1250000000000435e-05, 2.109700000000464e-05, 2.108299999999813e-05, 2.1778000000000075e-05, 2.1986000000001615e-05, 2.118100000000206e-05, 2.1764000000000505e-05, 2.1444000000002406e-05, 2.1612000000004183e-05, 2.179100000000017e-05, 2.130499999999924e-05, 2.129099999999967e-05, 2.193100000000281e-05, 2.1472000000001545e-05, 2.116700000000249e-05, 2.1084000000004544e-05, 2.1778000000000075e-05, 2.1277999999999575e-05, 2.1763999999993566e-05, 2.105499999999899e-05, 2.1264000000000005e-05, 2.1291999999999145e-05, 2.1472000000001545e-05, 2.137499999999709e-05]</msg>
<status status="PASS" starttime="20201115 22:03:27.326" endtime="20201115 22:03:27.330"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.314" endtime="20201115 22:03:27.331"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:27.338" endtime="20201115 22:03:27.341"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:27.346" endtime="20201115 22:03:27.368"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.342" endtime="20201115 22:03:27.370"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.333" endtime="20201115 22:03:27.372"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.806" endtime="20201115 22:03:27.372"></status>
</kw>
<msg timestamp="20201115 22:03:27.373" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:27.397" endtime="20201115 22:03:27.422"></status>
</kw>
<msg timestamp="20201115 22:03:27.423" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:27.393" endtime="20201115 22:03:27.423"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:27.429" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:27.425" endtime="20201115 22:03:27.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:27.432" endtime="20201115 22:03:27.436"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.386" endtime="20201115 22:03:27.437"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.380" endtime="20201115 22:03:27.439"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:27.456" endtime="20201115 22:03:27.810"></status>
</kw>
<msg timestamp="20201115 22:03:27.817" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042868153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042890097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:27.452" endtime="20201115 22:03:27.817"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:27.835" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042868153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042890097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:27.819" endtime="20201115 22:03:27.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:27.838" endtime="20201115 22:03:27.843"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.445" endtime="20201115 22:03:27.845"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.440" endtime="20201115 22:03:27.847"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:27.857" level="INFO">${RESULT} = [{'time': 0.042890097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1944000000002906e-05, 'source_diff': 2.1944000000002906e-05}, {'time': 0.043170611, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:27.848" endtime="20201115 22:03:27.858"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:27.889" level="INFO">${OVERHEAD} = {'time': [0.042890097, 0.043170611, 0.043450944, 0.043737389, 0.044017819, 0.044301292, 0.044585708, 0.044870097, 0.045152486, 0.045437861, 0.045722333, 0.046007667, 0.046289125, 0.046569389, 0.046854...</msg>
<status status="PASS" starttime="20201115 22:03:27.859" endtime="20201115 22:03:27.889"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:27.900" level="INFO">NAME: 00-overhead-11-set</msg>
<status status="PASS" starttime="20201115 22:03:27.898" endtime="20201115 22:03:27.901"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:27.905" level="INFO">VALUE: [2.1944000000002906e-05, 2.1250000000000435e-05, 2.112499999999684e-05, 2.112500000000378e-05, 2.104099999999942e-05, 2.143100000000231e-05, 2.1430000000002836e-05, 2.1750000000000935e-05, 2.1236000000000865e-05, 2.1930000000003336e-05, 2.10969999999977e-05, 2.122300000000077e-05, 2.10969999999977e-05, 2.1250000000000435e-05, 2.1499999999993746e-05, 2.161099999999777e-05, 2.1597999999997675e-05, 2.1929999999996397e-05, 2.1069999999998035e-05, 2.1250000000000435e-05, 2.126300000000053e-05, 2.193099999999587e-05, 2.1598000000004614e-05, 2.1665999999996577e-05, 2.130500000000618e-05, 2.108299999999813e-05, 2.1264000000000005e-05, 2.1098000000004113e-05, 2.112499999999684e-05, 2.10969999999977e-05, 2.1097999999997175e-05, 2.194500000000238e-05, 2.141700000000274e-05, 2.1083999999997605e-05, 2.1778000000000075e-05, 2.190300000000367e-05, 2.145900000000145e-05, 2.14169999999958e-05, 2.193100000000281e-05, 2.1277999999999575e-05, 2.144500000000188e-05, 2.1264000000000005e-05, 2.19169999999963e-05, 2.1208000000001725e-05, 2.1250000000000435e-05, 2.159700000000514e-05, 2.10969999999977e-05, 2.15969999999982e-05, 2.108299999999813e-05, 2.111100000000421e-05]</msg>
<status status="PASS" starttime="20201115 22:03:27.902" endtime="20201115 22:03:27.906"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.891" endtime="20201115 22:03:27.908"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:27.915" endtime="20201115 22:03:27.917"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:27.923" endtime="20201115 22:03:27.945"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.918" endtime="20201115 22:03:27.947"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.910" endtime="20201115 22:03:27.948"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.374" endtime="20201115 22:03:27.949"></status>
</kw>
<msg timestamp="20201115 22:03:27.950" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:27.975" endtime="20201115 22:03:27.999"></status>
</kw>
<msg timestamp="20201115 22:03:28.000" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:27.971" endtime="20201115 22:03:28.001"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:28.007" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:28.003" endtime="20201115 22:03:28.008"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:28.009" endtime="20201115 22:03:28.013"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.963" endtime="20201115 22:03:28.015"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.957" endtime="20201115 22:03:28.016"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:28.033" endtime="20201115 22:03:28.386"></status>
</kw>
<msg timestamp="20201115 22:03:28.393" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043465306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043486597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:28.030" endtime="20201115 22:03:28.394"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:28.411" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043465306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043486597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:28.395" endtime="20201115 22:03:28.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:28.414" endtime="20201115 22:03:28.419"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:28.022" endtime="20201115 22:03:28.421"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:28.017" endtime="20201115 22:03:28.422"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:28.433" level="INFO">${RESULT} = [{'time': 0.043486597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.129099999999967e-05, 'source_diff': 2.129099999999967e-05}, {'time': 0.043768, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 22:03:28.424" endtime="20201115 22:03:28.434"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:28.465" level="INFO">${OVERHEAD} = {'time': [0.043486597, 0.043768, 0.044052319, 0.044337736, 0.044621167, 0.044901417, 0.045181819, 0.045463097, 0.045747528, 0.046030861, 0.046312306, 0.046597569, 0.046879958, 0.047165375, 0.047447764...</msg>
<status status="PASS" starttime="20201115 22:03:28.435" endtime="20201115 22:03:28.465"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:28.476" level="INFO">NAME: 00-overhead-11-set</msg>
<status status="PASS" starttime="20201115 22:03:28.474" endtime="20201115 22:03:28.477"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:28.481" level="INFO">VALUE: [2.129099999999967e-05, 2.143100000000231e-05, 2.108299999999813e-05, 2.1013999999999755e-05, 2.1750000000000935e-05, 2.111099999999727e-05, 2.126300000000053e-05, 2.108299999999813e-05, 2.143100000000231e-05, 2.1250000000000435e-05, 2.143099999999537e-05, 2.111099999999727e-05, 2.1250000000000435e-05, 2.10690000000055e-05, 2.143100000000231e-05, 2.1541999999999395e-05, 2.111099999999727e-05, 2.156899999999906e-05, 2.180499999999974e-05, 2.1611999999997245e-05, 2.1764000000000505e-05, 2.193099999999587e-05, 2.1583999999998105e-05, 2.1611999999997245e-05, 2.1569999999998535e-05, 2.137500000000403e-05, 2.141700000000274e-05, 2.1264000000000005e-05, 2.1833999999998355e-05, 2.1778000000000075e-05, 2.1778000000000075e-05, 2.161100000000471e-05, 2.1778000000000075e-05, 2.158299999999863e-05, 2.1736000000001365e-05, 2.1569000000006e-05, 2.1443999999995467e-05, 2.1429999999995897e-05, 2.10969999999977e-05, 2.112499999999684e-05, 2.19169999999963e-05, 2.143099999999537e-05, 2.106899999999856e-05, 2.162499999999734e-05, 2.130499999999924e-05, 2.1929999999996397e-05, 2.161100000000471e-05, 2.143099999999537e-05, 2.1929999999996397e-05, 2.1250000000000435e-05]</msg>
<status status="PASS" starttime="20201115 22:03:28.478" endtime="20201115 22:03:28.482"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:28.466" endtime="20201115 22:03:28.484"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:28.491" endtime="20201115 22:03:28.494"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:28.500" endtime="20201115 22:03:28.522"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:28.495" endtime="20201115 22:03:28.524"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:28.486" endtime="20201115 22:03:28.525"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.951" endtime="20201115 22:03:28.526"></status>
</kw>
<msg timestamp="20201115 22:03:28.526" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:28.550" endtime="20201115 22:03:28.574"></status>
</kw>
<msg timestamp="20201115 22:03:28.575" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:28.547" endtime="20201115 22:03:28.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:28.581" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:28.577" endtime="20201115 22:03:28.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:28.583" endtime="20201115 22:03:28.587"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:28.539" endtime="20201115 22:03:28.589"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:28.533" endtime="20201115 22:03:28.590"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:28.607" endtime="20201115 22:03:28.966"></status>
</kw>
<msg timestamp="20201115 22:03:28.973" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042209083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042231014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:28.604" endtime="20201115 22:03:28.974"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:28.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042209083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042231014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:28.976" endtime="20201115 22:03:28.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:28.994" endtime="20201115 22:03:29.002"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:28.597" endtime="20201115 22:03:29.003"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:28.592" endtime="20201115 22:03:29.005"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:29.016" level="INFO">${RESULT} = [{'time': 0.042231014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.193099999999587e-05, 'source_diff': 2.193099999999587e-05}, {'time': 0.042514389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:29.006" endtime="20201115 22:03:29.016"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:29.047" level="INFO">${OVERHEAD} = {'time': [0.042231014, 0.042514389, 0.042795583, 0.043078917, 0.04336425, 0.043646639, 0.043931042, 0.044217361, 0.044499694, 0.044781083, 0.045062431, 0.045343833, 0.045626208, 0.045907569, 0.0461910...</msg>
<status status="PASS" starttime="20201115 22:03:29.018" endtime="20201115 22:03:29.047"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:29.058" level="INFO">NAME: 00-overhead-11-set</msg>
<status status="PASS" starttime="20201115 22:03:29.056" endtime="20201115 22:03:29.059"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:29.063" level="INFO">VALUE: [2.193099999999587e-05, 2.111099999999727e-05, 2.1929999999996397e-05, 2.187500000000453e-05, 2.1750000000000935e-05, 2.144500000000188e-05, 2.1749999999993996e-05, 2.15969999999982e-05, 2.15969999999982e-05, 2.188899999999716e-05, 2.1097999999997175e-05, 2.162499999999734e-05, 2.158299999999863e-05, 2.1166000000003016e-05, 2.1500000000000685e-05, 2.1444000000002406e-05, 2.162499999999734e-05, 2.191700000000324e-05, 2.131899999999881e-05, 2.1320000000005224e-05, 2.1291999999999145e-05, 2.15969999999982e-05, 2.1778000000000075e-05, 2.13890000000036e-05, 2.1277999999999575e-05, 2.138899999999666e-05, 2.111100000000421e-05, 2.1250000000000435e-05, 2.14169999999958e-05, 2.1750000000000935e-05, 2.1264000000000005e-05, 2.194499999999544e-05, 2.1929999999996397e-05, 2.108299999999813e-05, 2.1750000000000935e-05, 2.1416000000003266e-05, 2.108299999999813e-05, 2.1612000000004183e-05, 2.1193999999995217e-05, 2.1250000000000435e-05, 2.1763999999993566e-05, 2.106899999999856e-05, 2.140299999999623e-05, 2.10969999999977e-05, 2.156899999999906e-05, 2.10969999999977e-05, 2.1764000000000505e-05, 2.108299999999813e-05, 2.1750000000000935e-05, 2.1944000000002906e-05]</msg>
<status status="PASS" starttime="20201115 22:03:29.060" endtime="20201115 22:03:29.069"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.049" endtime="20201115 22:03:29.071"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:29.078" endtime="20201115 22:03:29.080"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:29.086" endtime="20201115 22:03:29.108"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.081" endtime="20201115 22:03:29.110"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.073" endtime="20201115 22:03:29.111"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:28.528" endtime="20201115 22:03:29.112"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.248" endtime="20201115 22:03:29.113"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.246" endtime="20201115 22:03:29.113"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:29.118" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:29.142" endtime="20201115 22:03:29.168"></status>
</kw>
<msg timestamp="20201115 22:03:29.169" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:29.138" endtime="20201115 22:03:29.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:29.175" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:29.171" endtime="20201115 22:03:29.176"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:29.178" endtime="20201115 22:03:29.181"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.131" endtime="20201115 22:03:29.183"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.125" endtime="20201115 22:03:29.185"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:29.202" endtime="20201115 22:03:29.567"></status>
</kw>
<msg timestamp="20201115 22:03:29.575" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047756458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047778417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:29.198" endtime="20201115 22:03:29.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:29.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047756458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047778417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:29.577" endtime="20201115 22:03:29.594"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:29.595" endtime="20201115 22:03:29.599"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.191" endtime="20201115 22:03:29.601"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.186" endtime="20201115 22:03:29.602"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:29.613" level="INFO">${RESULT} = [{'time': 0.047778417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.195899999999501e-05, 'source_diff': 2.195899999999501e-05}, {'time': 0.048081722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:29.604" endtime="20201115 22:03:29.614"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:29.644" level="INFO">${OVERHEAD} = {'time': [0.047778417, 0.048081722, 0.048390083, 0.048694472, 0.048998681, 0.049305125, 0.049613403, 0.049918833, 0.050224069, 0.050528417, 0.050833708, 0.051137083, 0.051444319, 0.051749708, 0.052054...</msg>
<status status="PASS" starttime="20201115 22:03:29.615" endtime="20201115 22:03:29.645"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:29.656" level="INFO">NAME: 00-overhead-12-set</msg>
<status status="PASS" starttime="20201115 22:03:29.653" endtime="20201115 22:03:29.657"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:29.662" level="INFO">VALUE: [2.195899999999501e-05, 2.2444000000003406e-05, 2.2472000000002545e-05, 2.2278000000000575e-05, 2.2278000000000575e-05, 2.2292000000000145e-05, 2.2222000000002295e-05, 2.259700000000614e-05, 2.1958000000002476e-05, 2.211099999999827e-05, 2.2429999999996897e-05, 2.229100000000067e-05, 2.258299999999963e-05, 2.2264000000001005e-05, 2.2278000000000575e-05, 2.213900000000435e-05, 2.2000000000001185e-05, 2.22090000000022e-05, 2.1929999999996397e-05, 2.244499999999594e-05, 2.2792000000000645e-05, 2.2806000000000215e-05, 2.2778000000001075e-05, 2.212499999999784e-05, 2.238899999999766e-05, 2.2763999999994566e-05, 2.279100000000117e-05, 2.2083999999998605e-05, 2.194499999999544e-05, 2.2278000000000575e-05, 2.1944000000002906e-05, 2.2778000000001075e-05, 2.2819999999999785e-05, 2.2792000000000645e-05, 2.20969999999987e-05, 2.190300000000367e-05, 2.262499999999834e-05, 2.2444000000003406e-05, 2.1958000000002476e-05, 2.194500000000238e-05, 2.2778000000001075e-05, 2.2778000000001075e-05, 2.263900000000485e-05, 2.262499999999834e-05, 2.244500000000288e-05, 2.276300000000203e-05, 2.2222000000002295e-05, 2.230500000000024e-05, 2.2457999999996037e-05, 2.1971999999995107e-05]</msg>
<status status="PASS" starttime="20201115 22:03:29.658" endtime="20201115 22:03:29.663"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.646" endtime="20201115 22:03:29.665"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:29.671" endtime="20201115 22:03:29.674"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:29.680" endtime="20201115 22:03:29.702"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.675" endtime="20201115 22:03:29.704"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.666" endtime="20201115 22:03:29.705"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.119" endtime="20201115 22:03:29.706"></status>
</kw>
<msg timestamp="20201115 22:03:29.706" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:29.730" endtime="20201115 22:03:29.756"></status>
</kw>
<msg timestamp="20201115 22:03:29.757" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:29.727" endtime="20201115 22:03:29.758"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:29.764" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:29.760" endtime="20201115 22:03:29.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:29.766" endtime="20201115 22:03:29.770"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.719" endtime="20201115 22:03:29.772"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.713" endtime="20201115 22:03:29.774"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:29.792" endtime="20201115 22:03:30.157"></status>
</kw>
<msg timestamp="20201115 22:03:30.164" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042314514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042336639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:29.788" endtime="20201115 22:03:30.165"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:30.183" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042314514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042336639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:30.167" endtime="20201115 22:03:30.183"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:30.185" endtime="20201115 22:03:30.190"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.780" endtime="20201115 22:03:30.192"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.775" endtime="20201115 22:03:30.194"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:30.205" level="INFO">${RESULT} = [{'time': 0.042336639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.212500000000478e-05, 'source_diff': 2.212500000000478e-05}, {'time': 0.042645083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:30.195" endtime="20201115 22:03:30.205"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:30.236" level="INFO">${OVERHEAD} = {'time': [0.042336639, 0.042645083, 0.042950278, 0.043256694, 0.043563167, 0.043870486, 0.044177736, 0.044481139, 0.044787444, 0.045094819, 0.045398139, 0.0457025, 0.046005792, 0.046311125, 0.04661837...</msg>
<status status="PASS" starttime="20201115 22:03:30.207" endtime="20201115 22:03:30.237"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:30.248" level="INFO">NAME: 00-overhead-12-set</msg>
<status status="PASS" starttime="20201115 22:03:30.246" endtime="20201115 22:03:30.249"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:30.253" level="INFO">VALUE: [2.212500000000478e-05, 2.262499999999834e-05, 2.261099999999877e-05, 2.2457999999996037e-05, 2.195900000000195e-05, 2.2778000000001075e-05, 2.2444000000003406e-05, 2.262500000000528e-05, 2.2666000000004516e-05, 2.27770000000016e-05, 2.263899999999791e-05, 2.211099999999827e-05, 2.194499999999544e-05, 2.1944000000002906e-05, 2.20969999999987e-05, 2.2443999999996467e-05, 2.266700000000399e-05, 2.2443999999996467e-05, 2.2778000000001075e-05, 2.2833999999999355e-05, 2.262499999999834e-05, 2.261099999999877e-05, 2.2721999999995857e-05, 2.2778000000001075e-05, 2.2097999999998175e-05, 2.262499999999834e-05, 2.1930000000003336e-05, 2.2097999999998175e-05, 2.2736000000002365e-05, 2.2569999999999535e-05, 2.194500000000238e-05, 2.194500000000238e-05, 2.2026999999993913e-05, 2.1915999999996827e-05, 2.265300000000442e-05, 2.262499999999834e-05, 2.244500000000288e-05, 2.243099999999637e-05, 2.2292000000000145e-05, 2.259700000000614e-05, 2.190299999999673e-05, 2.236099999999852e-05, 2.22369999999944e-05, 2.2792000000000645e-05, 2.27770000000016e-05, 2.194500000000238e-05, 2.2778000000001075e-05, 2.244500000000288e-05, 2.2278000000000575e-05, 2.2792000000000645e-05]</msg>
<status status="PASS" starttime="20201115 22:03:30.250" endtime="20201115 22:03:30.254"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:30.238" endtime="20201115 22:03:30.256"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:30.262" endtime="20201115 22:03:30.265"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:30.271" endtime="20201115 22:03:30.293"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:30.266" endtime="20201115 22:03:30.295"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:30.258" endtime="20201115 22:03:30.297"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.708" endtime="20201115 22:03:30.297"></status>
</kw>
<msg timestamp="20201115 22:03:30.298" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:30.321" endtime="20201115 22:03:30.347"></status>
</kw>
<msg timestamp="20201115 22:03:30.348" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:30.318" endtime="20201115 22:03:30.349"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:30.355" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:30.351" endtime="20201115 22:03:30.356"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:30.357" endtime="20201115 22:03:30.361"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:30.310" endtime="20201115 22:03:30.363"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:30.305" endtime="20201115 22:03:30.364"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:30.381" endtime="20201115 22:03:30.746"></status>
</kw>
<msg timestamp="20201115 22:03:30.753" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042306917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042329042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:30.378" endtime="20201115 22:03:30.753"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:30.771" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042306917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042329042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:30.755" endtime="20201115 22:03:30.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:30.774" endtime="20201115 22:03:30.779"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:30.370" endtime="20201115 22:03:30.781"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:30.366" endtime="20201115 22:03:30.782"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:30.793" level="INFO">${RESULT} = [{'time': 0.042329042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.212499999999784e-05, 'source_diff': 2.212499999999784e-05}, {'time': 0.0426365, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:03:30.784" endtime="20201115 22:03:30.794"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:30.826" level="INFO">${OVERHEAD} = {'time': [0.042329042, 0.0426365, 0.042938944, 0.043242319, 0.043546611, 0.043851972, 0.044157528, 0.044462694, 0.044765264, 0.045069472, 0.045371889, 0.04567525, 0.045979611, 0.046287042, 0.046594375...</msg>
<status status="PASS" starttime="20201115 22:03:30.796" endtime="20201115 22:03:30.827"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:30.838" level="INFO">NAME: 00-overhead-12-set</msg>
<status status="PASS" starttime="20201115 22:03:30.836" endtime="20201115 22:03:30.839"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:30.844" level="INFO">VALUE: [2.212499999999784e-05, 2.1944000000002906e-05, 2.236099999999852e-05, 2.230500000000024e-05, 2.258299999999963e-05, 2.1972000000002045e-05, 2.287499999999859e-05, 2.2776999999994663e-05, 2.263899999999791e-05, 2.1958000000002476e-05, 2.1957999999995537e-05, 2.262499999999834e-05, 2.19169999999963e-05, 2.2597999999998675e-05, 2.2278000000000575e-05, 2.195899999999501e-05, 2.2790999999994233e-05, 2.1958000000002476e-05, 2.262499999999834e-05, 2.195900000000195e-05, 2.2292000000000145e-05, 2.236099999999852e-05, 2.1972000000002045e-05, 2.2457999999996037e-05, 2.2778000000001075e-05, 2.2778000000001075e-05, 2.2277999999993636e-05, 2.2792000000000645e-05, 2.2443999999996467e-05, 2.1943999999995967e-05, 2.262499999999834e-05, 2.2790999999994233e-05, 2.2792000000000645e-05, 2.2458000000002976e-05, 2.240300000000417e-05, 2.211099999999827e-05, 2.2500000000001685e-05, 2.193100000000281e-05, 2.2611999999998245e-05, 2.1944000000002906e-05, 2.261099999999877e-05, 2.261099999999877e-05, 2.263900000000485e-05, 2.2319999999999285e-05, 2.2486000000002115e-05, 2.195900000000195e-05, 2.195899999999501e-05, 2.229100000000067e-05, 2.212499999999784e-05, 2.2792000000000645e-05]</msg>
<status status="PASS" starttime="20201115 22:03:30.841" endtime="20201115 22:03:30.845"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:30.828" endtime="20201115 22:03:30.847"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:30.853" endtime="20201115 22:03:30.856"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:30.862" endtime="20201115 22:03:30.884"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:30.857" endtime="20201115 22:03:30.886"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:30.849" endtime="20201115 22:03:30.887"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:30.299" endtime="20201115 22:03:30.888"></status>
</kw>
<msg timestamp="20201115 22:03:30.888" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:30.912" endtime="20201115 22:03:30.937"></status>
</kw>
<msg timestamp="20201115 22:03:30.939" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:30.909" endtime="20201115 22:03:30.939"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:30.945" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:30.941" endtime="20201115 22:03:30.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:30.947" endtime="20201115 22:03:30.951"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:30.901" endtime="20201115 22:03:30.953"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:30.895" endtime="20201115 22:03:30.954"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:30.971" endtime="20201115 22:03:31.324"></status>
</kw>
<msg timestamp="20201115 22:03:31.331" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042077375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042099653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:30.968" endtime="20201115 22:03:31.332"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:31.350" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042077375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042099653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:31.334" endtime="20201115 22:03:31.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:31.353" endtime="20201115 22:03:31.360"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:30.961" endtime="20201115 22:03:31.362"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:30.956" endtime="20201115 22:03:31.364"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:31.374" level="INFO">${RESULT} = [{'time': 0.042099653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2278000000000575e-05, 'source_diff': 2.2278000000000575e-05}, {'time': 0.042406111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:31.365" endtime="20201115 22:03:31.375"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:31.406" level="INFO">${OVERHEAD} = {'time': [0.042099653, 0.042406111, 0.042711389, 0.043015833, 0.043322181, 0.043630625, 0.043935097, 0.044239417, 0.044547736, 0.044851111, 0.045154569, 0.045462819, 0.045770181, 0.046075569, 0.046377...</msg>
<status status="PASS" starttime="20201115 22:03:31.377" endtime="20201115 22:03:31.406"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:31.417" level="INFO">NAME: 00-overhead-12-set</msg>
<status status="PASS" starttime="20201115 22:03:31.415" endtime="20201115 22:03:31.418"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:31.422" level="INFO">VALUE: [2.2278000000000575e-05, 2.2292000000000145e-05, 2.244500000000288e-05, 2.263900000000485e-05, 2.2792000000000645e-05, 2.2443999999996467e-05, 2.2278000000000575e-05, 2.222300000000177e-05, 2.2292000000000145e-05, 2.1929999999996397e-05, 2.2193999999996217e-05, 2.25969999999992e-05, 2.194500000000238e-05, 2.2776999999994663e-05, 2.1957999999995537e-05, 2.2486000000002115e-05, 2.2777999999994136e-05, 2.244500000000288e-05, 2.2305999999999715e-05, 2.261099999999877e-05, 2.2597999999998675e-05, 2.2611999999998245e-05, 2.2763999999994566e-05, 2.261099999999877e-05, 2.212499999999784e-05, 2.1986000000001615e-05, 2.2749999999994996e-05, 2.2443999999996467e-05, 2.280500000000074e-05, 2.27770000000016e-05, 2.212499999999784e-05, 2.262499999999834e-05, 2.2778000000001075e-05, 2.202700000000085e-05, 2.2528000000000825e-05, 2.215300000000392e-05, 2.2764000000001505e-05, 2.269500000000313e-05, 2.2444000000003406e-05, 2.20969999999987e-05, 2.262499999999834e-05, 2.2235999999994926e-05, 2.261099999999877e-05, 2.213899999999741e-05, 2.2292000000000145e-05, 2.2764000000001505e-05, 2.1929999999996397e-05, 2.244500000000288e-05, 2.2569999999999535e-05, 2.2278000000000575e-05]</msg>
<status status="PASS" starttime="20201115 22:03:31.419" endtime="20201115 22:03:31.423"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:31.408" endtime="20201115 22:03:31.425"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:31.431" endtime="20201115 22:03:31.434"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:31.440" endtime="20201115 22:03:31.462"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:31.435" endtime="20201115 22:03:31.464"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:31.427" endtime="20201115 22:03:31.465"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:30.889" endtime="20201115 22:03:31.466"></status>
</kw>
<msg timestamp="20201115 22:03:31.466" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:31.490" endtime="20201115 22:03:31.516"></status>
</kw>
<msg timestamp="20201115 22:03:31.517" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:31.487" endtime="20201115 22:03:31.517"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:31.523" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:31.519" endtime="20201115 22:03:31.524"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:31.526" endtime="20201115 22:03:31.530"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:31.479" endtime="20201115 22:03:31.531"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:31.473" endtime="20201115 22:03:31.533"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:31.550" endtime="20201115 22:03:31.896"></status>
</kw>
<msg timestamp="20201115 22:03:31.903" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042400875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042422764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:31.547" endtime="20201115 22:03:31.904"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:31.922" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042400875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042422764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:31.906" endtime="20201115 22:03:31.922"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:31.924" endtime="20201115 22:03:31.929"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:31.539" endtime="20201115 22:03:31.931"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:31.534" endtime="20201115 22:03:31.932"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:31.943" level="INFO">${RESULT} = [{'time': 0.042422764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.18890000000041e-05, 'source_diff': 2.18890000000041e-05}, {'time': 0.042729056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:03:31.934" endtime="20201115 22:03:31.944"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:31.974" level="INFO">${OVERHEAD} = {'time': [0.042422764, 0.042729056, 0.043035486, 0.043338806, 0.043645111, 0.043947444, 0.044250861, 0.044556208, 0.044859472, 0.045165917, 0.045468347, 0.045772653, 0.046076028, 0.046384472, 0.046690...</msg>
<status status="PASS" starttime="20201115 22:03:31.945" endtime="20201115 22:03:31.975"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:31.985" level="INFO">NAME: 00-overhead-12-set</msg>
<status status="PASS" starttime="20201115 22:03:31.983" endtime="20201115 22:03:31.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:31.991" level="INFO">VALUE: [2.18890000000041e-05, 2.245900000000245e-05, 2.216699999999655e-05, 2.2278000000000575e-05, 2.2278000000000575e-05, 2.2430000000003836e-05, 2.1944000000002906e-05, 2.2486000000002115e-05, 2.2263999999994066e-05, 2.2000000000001185e-05, 2.213899999999741e-05, 2.243100000000331e-05, 2.2778000000001075e-05, 2.229100000000067e-05, 2.218099999999612e-05, 2.1986000000001615e-05, 2.1957999999995537e-05, 2.2208000000002726e-05, 2.2764000000001505e-05, 2.280500000000074e-05, 2.262499999999834e-05, 2.261099999999877e-05, 2.244500000000288e-05, 2.2443999999996467e-05, 2.2278000000000575e-05, 2.1957999999995537e-05, 2.219499999999569e-05, 2.2472000000002545e-05, 2.2792000000000645e-05, 2.2278000000000575e-05, 2.272300000000227e-05, 2.261099999999877e-05, 2.2138000000004876e-05, 2.2264000000001005e-05, 2.245900000000245e-05, 2.2278000000000575e-05, 2.194500000000238e-05, 2.247299999999508e-05, 2.229100000000067e-05, 2.2597999999998675e-05, 2.20969999999987e-05, 2.2278000000000575e-05, 2.2443999999996467e-05, 2.2806000000000215e-05, 2.212499999999784e-05, 2.233299999999938e-05, 2.197300000000152e-05, 2.194500000000238e-05, 2.212499999999784e-05, 2.2486000000002115e-05]</msg>
<status status="PASS" starttime="20201115 22:03:31.988" endtime="20201115 22:03:31.992"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:31.976" endtime="20201115 22:03:31.993"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:32.000" endtime="20201115 22:03:32.003"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:32.009" endtime="20201115 22:03:32.030"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:32.004" endtime="20201115 22:03:32.032"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:31.995" endtime="20201115 22:03:32.034"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:31.467" endtime="20201115 22:03:32.034"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.116" endtime="20201115 22:03:32.035"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.114" endtime="20201115 22:03:32.035"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:32.040" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:32.064" endtime="20201115 22:03:32.089"></status>
</kw>
<msg timestamp="20201115 22:03:32.091" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:32.060" endtime="20201115 22:03:32.091"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:32.097" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:32.093" endtime="20201115 22:03:32.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:32.099" endtime="20201115 22:03:32.103"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:32.053" endtime="20201115 22:03:32.105"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:32.047" endtime="20201115 22:03:32.107"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:32.124" endtime="20201115 22:03:32.468"></status>
</kw>
<msg timestamp="20201115 22:03:32.475" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047043931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047067431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:32.120" endtime="20201115 22:03:32.475"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:32.493" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047043931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047067431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:32.477" endtime="20201115 22:03:32.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:32.496" endtime="20201115 22:03:32.499"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:32.113" endtime="20201115 22:03:32.501"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:32.108" endtime="20201115 22:03:32.503"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:32.513" level="INFO">${RESULT} = [{'time': 0.047067431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3500000000002685e-05, 'source_diff': 2.3500000000002685e-05}, {'time': 0.047395958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:32.504" endtime="20201115 22:03:32.514"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:32.544" level="INFO">${OVERHEAD} = {'time': [0.047067431, 0.047395958, 0.047726333, 0.048057833, 0.048384264, 0.048710694, 0.049036125, 0.049367597, 0.049694042, 0.050024375, 0.050350931, 0.050681375, 0.051010792, 0.051341194, 0.051670...</msg>
<status status="PASS" starttime="20201115 22:03:32.515" endtime="20201115 22:03:32.545"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:32.556" level="INFO">NAME: 00-overhead-13-set</msg>
<status status="PASS" starttime="20201115 22:03:32.553" endtime="20201115 22:03:32.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:32.561" level="INFO">VALUE: [2.3500000000002685e-05, 2.3472000000003546e-05, 2.2986000000002615e-05, 2.362499999999934e-05, 2.313900000000535e-05, 2.3471999999996607e-05, 2.2792000000000645e-05, 2.3471999999996607e-05, 2.3347999999999425e-05, 2.3486000000003115e-05, 2.3028000000001325e-05, 2.2972000000003046e-05, 2.297300000000252e-05, 2.3137999999998937e-05, 2.2792000000000645e-05, 2.2972000000003046e-05, 2.365300000000542e-05, 2.3320000000000285e-05, 2.2972000000003046e-05, 2.2819999999999785e-05, 2.2985999999995677e-05, 2.2806000000000215e-05, 2.331900000000081e-05, 2.3166000000005016e-05, 2.3179999999997647e-05, 2.330500000000124e-05, 2.281900000000031e-05, 2.3666000000005516e-05, 2.313899999999841e-05, 2.3194000000004156e-05, 2.280500000000074e-05, 2.2790999999994233e-05, 2.3472000000003546e-05, 2.3444000000004406e-05, 2.3320000000000285e-05, 2.2972000000003046e-05, 2.3500000000002685e-05, 2.281900000000031e-05, 2.3306000000000715e-05, 2.313900000000535e-05, 2.3485999999996177e-05, 2.3637999999999437e-05, 2.2819999999999785e-05, 2.2819999999999785e-05, 2.284699999999945e-05, 2.3291999999994206e-05, 2.2985999999995677e-05, 2.3486000000003115e-05, 2.2792000000007584e-05, 2.2833999999999355e-05]</msg>
<status status="PASS" starttime="20201115 22:03:32.558" endtime="20201115 22:03:32.562"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:32.546" endtime="20201115 22:03:32.564"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:32.570" endtime="20201115 22:03:32.572"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:32.578" endtime="20201115 22:03:32.600"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:32.574" endtime="20201115 22:03:32.602"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:32.565" endtime="20201115 22:03:32.603"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:32.041" endtime="20201115 22:03:32.604"></status>
</kw>
<msg timestamp="20201115 22:03:32.604" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:32.628" endtime="20201115 22:03:32.654"></status>
</kw>
<msg timestamp="20201115 22:03:32.655" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:32.624" endtime="20201115 22:03:32.655"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:32.662" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:32.657" endtime="20201115 22:03:32.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:32.664" endtime="20201115 22:03:32.668"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:32.617" endtime="20201115 22:03:32.670"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:32.611" endtime="20201115 22:03:32.671"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:32.688" endtime="20201115 22:03:33.031"></status>
</kw>
<msg timestamp="20201115 22:03:33.038" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041495958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041518931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:32.685" endtime="20201115 22:03:33.038"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:33.056" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041495958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041518931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:33.040" endtime="20201115 22:03:33.057"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:33.059" endtime="20201115 22:03:33.064"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:32.677" endtime="20201115 22:03:33.066"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:32.672" endtime="20201115 22:03:33.067"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:33.078" level="INFO">${RESULT} = [{'time': 0.041518931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.297300000000252e-05, 'source_diff': 2.297300000000252e-05}, {'time': 0.0418505, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:03:33.069" endtime="20201115 22:03:33.079"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:33.109" level="INFO">${OVERHEAD} = {'time': [0.041518931, 0.0418505, 0.042178806, 0.042510264, 0.042839653, 0.043170097, 0.043500542, 0.043830986, 0.044158486, 0.044484958, 0.044813236, 0.045140736, 0.045469056, 0.045799444, 0.04612680...</msg>
<status status="PASS" starttime="20201115 22:03:33.080" endtime="20201115 22:03:33.110"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:33.120" level="INFO">NAME: 00-overhead-13-set</msg>
<status status="PASS" starttime="20201115 22:03:33.118" endtime="20201115 22:03:33.121"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:33.126" level="INFO">VALUE: [2.297300000000252e-05, 2.3514000000002255e-05, 2.2833999999999355e-05, 2.363899999999891e-05, 2.2971999999996107e-05, 2.365299999999848e-05, 2.362500000000628e-05, 2.280500000000074e-05, 2.2957999999996537e-05, 2.288899999999816e-05, 2.34169999999978e-05, 2.3278000000001575e-05, 2.273700000000184e-05, 2.2972000000003046e-05, 2.298700000000209e-05, 2.284699999999945e-05, 2.2972000000003046e-05, 2.330500000000124e-05, 2.3292000000001145e-05, 2.2806000000000215e-05, 2.2806000000000215e-05, 2.345899999999651e-05, 2.362499999999934e-05, 2.3292000000001145e-05, 2.3500000000002685e-05, 2.315300000000492e-05, 2.2972000000003046e-05, 2.2985999999995677e-05, 2.2819999999999785e-05, 2.363899999999891e-05, 2.280500000000074e-05, 2.2806000000000215e-05, 2.280500000000074e-05, 2.365299999999848e-05, 2.366699999999805e-05, 2.362499999999934e-05, 2.334699999999995e-05, 2.311099999999927e-05, 2.3472000000003546e-05, 2.340299999999823e-05, 2.2972000000003046e-05, 2.2971999999996107e-05, 2.3151999999998507e-05, 2.363899999999891e-05, 2.3278000000001575e-05, 2.3347999999999425e-05, 2.313899999999841e-05, 2.331900000000081e-05, 2.363899999999891e-05, 2.30969999999997e-05]</msg>
<status status="PASS" starttime="20201115 22:03:33.122" endtime="20201115 22:03:33.127"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:33.111" endtime="20201115 22:03:33.128"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:33.135" endtime="20201115 22:03:33.137"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:33.143" endtime="20201115 22:03:33.165"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:33.139" endtime="20201115 22:03:33.167"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:33.130" endtime="20201115 22:03:33.168"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:32.606" endtime="20201115 22:03:33.169"></status>
</kw>
<msg timestamp="20201115 22:03:33.169" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:33.193" endtime="20201115 22:03:33.219"></status>
</kw>
<msg timestamp="20201115 22:03:33.220" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:33.189" endtime="20201115 22:03:33.221"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:33.227" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:33.223" endtime="20201115 22:03:33.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:33.229" endtime="20201115 22:03:33.233"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:33.182" endtime="20201115 22:03:33.235"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:33.176" endtime="20201115 22:03:33.236"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:33.253" endtime="20201115 22:03:33.595"></status>
</kw>
<msg timestamp="20201115 22:03:33.602" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042286278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042309597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:33.249" endtime="20201115 22:03:33.603"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:33.621" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042286278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042309597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:33.605" endtime="20201115 22:03:33.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:33.623" endtime="20201115 22:03:33.631"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:33.242" endtime="20201115 22:03:33.632"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:33.237" endtime="20201115 22:03:33.634"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:33.644" level="INFO">${RESULT} = [{'time': 0.042309597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.331900000000081e-05, 'source_diff': 2.331900000000081e-05}, {'time': 0.042637917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:33.635" endtime="20201115 22:03:33.645"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:33.675" level="INFO">${OVERHEAD} = {'time': [0.042309597, 0.042637917, 0.042966417, 0.043293792, 0.043624306, 0.043956806, 0.044284222, 0.044613528, 0.044944861, 0.045274333, 0.045601625, 0.045932097, 0.046261486, 0.046590958, 0.046921...</msg>
<status status="PASS" starttime="20201115 22:03:33.647" endtime="20201115 22:03:33.676"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:33.686" level="INFO">NAME: 00-overhead-13-set</msg>
<status status="PASS" starttime="20201115 22:03:33.684" endtime="20201115 22:03:33.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:33.692" level="INFO">VALUE: [2.331900000000081e-05, 2.3485999999996177e-05, 2.362499999999934e-05, 2.3320000000000285e-05, 2.347300000000302e-05, 2.363899999999891e-05, 2.2957999999996537e-05, 2.312499999999884e-05, 2.2792000000000645e-05, 2.362499999999934e-05, 2.3306000000000715e-05, 2.3165999999998077e-05, 2.283299999999988e-05, 2.3486000000003115e-05, 2.2986000000002615e-05, 2.344499999999694e-05, 2.3137999999998937e-05, 2.366699999999805e-05, 2.3527999999994886e-05, 2.3471999999996607e-05, 2.362499999999934e-05, 2.297299999999558e-05, 2.330500000000124e-05, 2.363899999999891e-05, 2.2833999999999355e-05, 2.297300000000252e-05, 2.2778000000001075e-05, 2.315299999999798e-05, 2.3014000000001755e-05, 2.363899999999891e-05, 2.3320000000000285e-05, 2.3320000000000285e-05, 2.2972000000003046e-05, 2.279100000000117e-05, 2.363899999999891e-05, 2.3138000000005876e-05, 2.3306000000000715e-05, 2.365299999999848e-05, 2.294499999999644e-05, 2.3292000000001145e-05, 2.2943999999996967e-05, 2.331900000000081e-05, 2.3111999999998745e-05, 2.2791999999993706e-05, 2.280500000000074e-05, 2.280500000000074e-05, 2.2985999999995677e-05, 2.27770000000016e-05, 2.3486000000003115e-05, 2.2985999999995677e-05]</msg>
<status status="PASS" starttime="20201115 22:03:33.689" endtime="20201115 22:03:33.693"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:33.677" endtime="20201115 22:03:33.694"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:33.701" endtime="20201115 22:03:33.704"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:33.709" endtime="20201115 22:03:33.731"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:33.705" endtime="20201115 22:03:33.733"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:33.696" endtime="20201115 22:03:33.734"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:33.170" endtime="20201115 22:03:33.736"></status>
</kw>
<msg timestamp="20201115 22:03:33.736" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:33.760" endtime="20201115 22:03:33.785"></status>
</kw>
<msg timestamp="20201115 22:03:33.787" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:33.756" endtime="20201115 22:03:33.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:33.793" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:33.789" endtime="20201115 22:03:33.793"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:33.795" endtime="20201115 22:03:33.799"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:33.749" endtime="20201115 22:03:33.800"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:33.743" endtime="20201115 22:03:33.802"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:33.819" endtime="20201115 22:03:34.161"></status>
</kw>
<msg timestamp="20201115 22:03:34.168" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042276597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042299556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:33.816" endtime="20201115 22:03:34.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:34.186" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042276597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042299556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:34.170" endtime="20201115 22:03:34.187"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:34.189" endtime="20201115 22:03:34.194"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:33.808" endtime="20201115 22:03:34.196"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:33.803" endtime="20201115 22:03:34.197"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:34.208" level="INFO">${RESULT} = [{'time': 0.042299556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.295900000000295e-05, 'source_diff': 2.295900000000295e-05}, {'time': 0.042631931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:34.199" endtime="20201115 22:03:34.208"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:34.239" level="INFO">${OVERHEAD} = {'time': [0.042299556, 0.042631931, 0.042959375, 0.043289653, 0.043617028, 0.043943431, 0.044275806, 0.044606181, 0.044937569, 0.045263889, 0.045595153, 0.045925681, 0.046253972, 0.046580375, 0.046906...</msg>
<status status="PASS" starttime="20201115 22:03:34.210" endtime="20201115 22:03:34.239"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:34.250" level="INFO">NAME: 00-overhead-13-set</msg>
<status status="PASS" starttime="20201115 22:03:34.248" endtime="20201115 22:03:34.251"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:34.255" level="INFO">VALUE: [2.295900000000295e-05, 2.316699999999755e-05, 2.365299999999848e-05, 2.2806000000000215e-05, 2.316700000000449e-05, 2.345899999999651e-05, 2.3306000000000715e-05, 2.363899999999891e-05, 2.2804999999993802e-05, 2.362499999999934e-05, 2.2806000000000215e-05, 2.366700000000499e-05, 2.2790999999994233e-05, 2.2972000000003046e-05, 2.3137999999998937e-05, 2.2806000000000215e-05, 2.331900000000081e-05, 2.3500000000002685e-05, 2.3151999999998507e-05, 2.3347999999999425e-05, 2.361099999999977e-05, 2.331900000000081e-05, 2.3292000000001145e-05, 2.3679999999998147e-05, 2.362499999999934e-05, 2.3014000000001755e-05, 2.2806000000000215e-05, 2.2985999999995677e-05, 2.311099999999927e-05, 2.363899999999891e-05, 2.302700000000185e-05, 2.3457999999997037e-05, 2.2972000000003046e-05, 2.315300000000492e-05, 2.279100000000117e-05, 2.2944000000003906e-05, 2.297300000000252e-05, 2.2972000000003046e-05, 2.330500000000124e-05, 2.338899999999866e-05, 2.3637999999999437e-05, 2.3458000000003976e-05, 2.330500000000124e-05, 2.312499999999884e-05, 2.313899999999841e-05, 2.363899999999891e-05, 2.3472000000003546e-05, 2.3278000000001575e-05, 2.312499999999884e-05, 2.3444000000004406e-05]</msg>
<status status="PASS" starttime="20201115 22:03:34.252" endtime="20201115 22:03:34.256"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:34.241" endtime="20201115 22:03:34.258"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:34.270" endtime="20201115 22:03:34.273"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:34.279" endtime="20201115 22:03:34.300"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:34.274" endtime="20201115 22:03:34.302"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:34.265" endtime="20201115 22:03:34.304"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:33.737" endtime="20201115 22:03:34.304"></status>
</kw>
<msg timestamp="20201115 22:03:34.305" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:34.328" endtime="20201115 22:03:34.354"></status>
</kw>
<msg timestamp="20201115 22:03:34.355" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:34.325" endtime="20201115 22:03:34.356"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:34.362" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:34.358" endtime="20201115 22:03:34.362"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:34.364" endtime="20201115 22:03:34.368"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:34.318" endtime="20201115 22:03:34.369"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:34.312" endtime="20201115 22:03:34.371"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:34.387" endtime="20201115 22:03:34.730"></status>
</kw>
<msg timestamp="20201115 22:03:34.737" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041534486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041557792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:34.384" endtime="20201115 22:03:34.738"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:34.755" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041534486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041557792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:34.740" endtime="20201115 22:03:34.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:34.758" endtime="20201115 22:03:34.763"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:34.377" endtime="20201115 22:03:34.765"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:34.372" endtime="20201115 22:03:34.766"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:34.777" level="INFO">${RESULT} = [{'time': 0.041557792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3306000000000715e-05, 'source_diff': 2.3306000000000715e-05}, {'time': 0.041885069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:34.768" endtime="20201115 22:03:34.778"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:34.808" level="INFO">${OVERHEAD} = {'time': [0.041557792, 0.041885069, 0.042214458, 0.042541764, 0.042870153, 0.0431965, 0.043527764, 0.043854111, 0.044185514, 0.044514917, 0.044844264, 0.045174597, 0.045501, 0.045829417, 0.046159653, ...</msg>
<status status="PASS" starttime="20201115 22:03:34.779" endtime="20201115 22:03:34.809"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:34.819" level="INFO">NAME: 00-overhead-13-set</msg>
<status status="PASS" starttime="20201115 22:03:34.817" endtime="20201115 22:03:34.820"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:34.825" level="INFO">VALUE: [2.3306000000000715e-05, 2.281900000000031e-05, 2.331900000000081e-05, 2.2958000000003476e-05, 2.290299999999773e-05, 2.315299999999798e-05, 2.294499999999644e-05, 2.330500000000124e-05, 2.3458000000003976e-05, 2.2833999999999355e-05, 2.363899999999891e-05, 2.3457999999997037e-05, 2.3556000000000965e-05, 2.3485999999996177e-05, 2.313899999999841e-05, 2.3292000000001145e-05, 2.2972000000003046e-05, 2.3290999999994733e-05, 2.2971999999996107e-05, 2.365300000000542e-05, 2.334699999999995e-05, 2.362499999999934e-05, 2.3651999999999007e-05, 2.330500000000124e-05, 2.368100000000456e-05, 2.3305999999993776e-05, 2.279100000000117e-05, 2.35970000000002e-05, 2.280500000000074e-05, 2.345899999999651e-05, 2.365299999999848e-05, 2.3471999999996607e-05, 2.2958000000003476e-05, 2.2806000000000215e-05, 2.2972000000003046e-05, 2.281900000000031e-05, 2.334699999999995e-05, 2.313899999999841e-05, 2.3500000000002685e-05, 2.365299999999848e-05, 2.3347999999999425e-05, 2.2806000000000215e-05, 2.3472000000003546e-05, 2.365299999999848e-05, 2.3472000000003546e-05, 2.362499999999934e-05, 2.3306000000000715e-05, 2.3651999999999007e-05, 2.3471999999996607e-05, 2.315299999999798e-05]</msg>
<status status="PASS" starttime="20201115 22:03:34.822" endtime="20201115 22:03:34.826"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:34.810" endtime="20201115 22:03:34.828"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:34.835" endtime="20201115 22:03:34.837"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:34.843" endtime="20201115 22:03:34.865"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:34.839" endtime="20201115 22:03:34.867"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:34.830" endtime="20201115 22:03:34.868"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:34.306" endtime="20201115 22:03:34.869"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:32.038" endtime="20201115 22:03:34.869"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:32.036" endtime="20201115 22:03:34.870"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:34.875" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:34.898" endtime="20201115 22:03:34.925"></status>
</kw>
<msg timestamp="20201115 22:03:34.926" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:34.894" endtime="20201115 22:03:34.926"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:34.932" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:34.928" endtime="20201115 22:03:34.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:34.935" endtime="20201115 22:03:34.939"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:34.887" endtime="20201115 22:03:34.941"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:34.881" endtime="20201115 22:03:34.942"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:34.960" endtime="20201115 22:03:35.304"></status>
</kw>
<msg timestamp="20201115 22:03:35.312" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046688431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046712917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:34.956" endtime="20201115 22:03:35.312"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:35.330" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046688431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046712917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:35.314" endtime="20201115 22:03:35.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:35.332" endtime="20201115 22:03:35.336"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:34.949" endtime="20201115 22:03:35.338"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:34.944" endtime="20201115 22:03:35.339"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:35.350" level="INFO">${RESULT} = [{'time': 0.046712917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4485999999997177e-05, 'source_diff': 2.4485999999997177e-05}, {'time': 0.047065319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:35.341" endtime="20201115 22:03:35.350"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:35.381" level="INFO">${OVERHEAD} = {'time': [0.046712917, 0.047065319, 0.047419653, 0.047775, 0.048131486, 0.048484903, 0.048837167, 0.049190653, 0.049547125, 0.049904472, 0.050256931, 0.050609333, 0.050962542, 0.051315083, 0.051669458...</msg>
<status status="PASS" starttime="20201115 22:03:35.352" endtime="20201115 22:03:35.382"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:35.392" level="INFO">NAME: 00-overhead-14-set</msg>
<status status="PASS" starttime="20201115 22:03:35.390" endtime="20201115 22:03:35.393"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:35.398" level="INFO">VALUE: [2.4485999999997177e-05, 2.3972000000004046e-05, 2.384700000000045e-05, 2.3791999999994706e-05, 2.3972000000004046e-05, 2.4028000000002325e-05, 2.4348000000000425e-05, 2.416699999999855e-05, 2.3999999999996247e-05, 2.4499999999996747e-05, 2.416699999999855e-05, 2.433300000000138e-05, 2.3764000000002505e-05, 2.4151999999999507e-05, 2.388899999999916e-05, 2.3999999999996247e-05, 2.381900000000131e-05, 2.3651999999999007e-05, 2.4000000000003185e-05, 2.3820000000000785e-05, 2.415299999999898e-05, 2.4165999999999077e-05, 2.4499999999996747e-05, 2.433300000000138e-05, 2.4332999999994442e-05, 2.415299999999898e-05, 2.4320000000001285e-05, 2.4472000000004546e-05, 2.4179999999998647e-05, 2.3665999999998577e-05, 2.413899999999941e-05, 2.384700000000045e-05, 2.4500000000003685e-05, 2.3999999999996247e-05, 2.4028000000002325e-05, 2.3861999999999495e-05, 2.381900000000131e-05, 2.4165999999999077e-05, 2.415299999999898e-05, 2.368099999999762e-05, 2.366700000000499e-05, 2.4277999999995636e-05, 2.418099999999812e-05, 2.365299999999848e-05, 2.4499999999996747e-05, 2.4514000000003255e-05, 2.4110999999993332e-05, 2.3971999999997107e-05, 2.3679999999998147e-05, 2.433300000000138e-05]</msg>
<status status="PASS" starttime="20201115 22:03:35.394" endtime="20201115 22:03:35.399"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:35.383" endtime="20201115 22:03:35.401"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:35.407" endtime="20201115 22:03:35.410"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:35.416" endtime="20201115 22:03:35.438"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:35.411" endtime="20201115 22:03:35.440"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:35.403" endtime="20201115 22:03:35.441"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:34.876" endtime="20201115 22:03:35.442"></status>
</kw>
<msg timestamp="20201115 22:03:35.442" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:35.466" endtime="20201115 22:03:35.493"></status>
</kw>
<msg timestamp="20201115 22:03:35.494" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:35.462" endtime="20201115 22:03:35.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:35.500" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:35.496" endtime="20201115 22:03:35.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:35.502" endtime="20201115 22:03:35.506"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:35.455" endtime="20201115 22:03:35.508"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:35.449" endtime="20201115 22:03:35.509"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:35.526" endtime="20201115 22:03:35.868"></status>
</kw>
<msg timestamp="20201115 22:03:35.875" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04162375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041647778, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:03:35.523" endtime="20201115 22:03:35.876"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:35.893" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04162375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041647778, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:03:35.877" endtime="20201115 22:03:35.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:35.896" endtime="20201115 22:03:35.904"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:35.516" endtime="20201115 22:03:35.905"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:35.511" endtime="20201115 22:03:35.907"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:35.918" level="INFO">${RESULT} = [{'time': 0.041647778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4028000000002325e-05, 'source_diff': 2.4028000000002325e-05}, {'time': 0.042002139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:35.908" endtime="20201115 22:03:35.918"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:35.948" level="INFO">${OVERHEAD} = {'time': [0.041647778, 0.042002139, 0.042354583, 0.042707028, 0.043058431, 0.043413694, 0.043769181, 0.044122611, 0.044478986, 0.044836444, 0.045192889, 0.04554725, 0.045902764, 0.046256236, 0.0466136...</msg>
<status status="PASS" starttime="20201115 22:03:35.920" endtime="20201115 22:03:35.949"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:35.960" level="INFO">NAME: 00-overhead-14-set</msg>
<status status="PASS" starttime="20201115 22:03:35.958" endtime="20201115 22:03:35.961"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:35.966" level="INFO">VALUE: [2.4028000000002325e-05, 2.4556000000001965e-05, 2.4014000000002755e-05, 2.394500000000438e-05, 2.3834000000000355e-05, 2.4000000000003185e-05, 2.4361999999999995e-05, 2.361099999999977e-05, 2.365299999999848e-05, 2.4458000000004976e-05, 2.433300000000138e-05, 2.365299999999848e-05, 2.366699999999805e-05, 2.433300000000138e-05, 2.433300000000138e-05, 2.365299999999848e-05, 2.381900000000131e-05, 2.386100000000002e-05, 2.440299999999923e-05, 2.4278000000002575e-05, 2.4318999999994872e-05, 2.434700000000095e-05, 2.381900000000131e-05, 2.3834000000000355e-05, 2.416699999999855e-05, 2.454100000000292e-05, 2.415299999999898e-05, 2.4278000000002575e-05, 2.4306000000001715e-05, 2.4486000000004116e-05, 2.3818999999994372e-05, 2.383300000000088e-05, 2.365299999999848e-05, 2.381900000000131e-05, 2.3999999999996247e-05, 2.4320000000001285e-05, 2.3651999999999007e-05, 2.365299999999848e-05, 2.4471999999997607e-05, 2.4179999999998647e-05, 2.4096999999993762e-05, 2.415299999999898e-05, 2.3834000000000355e-05, 2.4306000000001715e-05, 2.394499999999744e-05, 2.3985999999996677e-05, 2.366700000000499e-05, 2.365299999999848e-05, 2.4179999999998647e-05, 2.430500000000224e-05]</msg>
<status status="PASS" starttime="20201115 22:03:35.962" endtime="20201115 22:03:35.967"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:35.951" endtime="20201115 22:03:35.968"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:35.975" endtime="20201115 22:03:35.978"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:35.984" endtime="20201115 22:03:36.006"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:35.979" endtime="20201115 22:03:36.008"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:35.970" endtime="20201115 22:03:36.010"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:35.443" endtime="20201115 22:03:36.010"></status>
</kw>
<msg timestamp="20201115 22:03:36.011" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:36.034" endtime="20201115 22:03:36.062"></status>
</kw>
<msg timestamp="20201115 22:03:36.063" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:36.031" endtime="20201115 22:03:36.063"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:36.069" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:36.065" endtime="20201115 22:03:36.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:36.071" endtime="20201115 22:03:36.075"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:36.024" endtime="20201115 22:03:36.077"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:36.018" endtime="20201115 22:03:36.078"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:36.095" endtime="20201115 22:03:36.438"></status>
</kw>
<msg timestamp="20201115 22:03:36.445" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042130556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042154375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:36.092" endtime="20201115 22:03:36.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:36.464" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042130556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042154375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:36.448" endtime="20201115 22:03:36.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:36.466" endtime="20201115 22:03:36.472"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:36.084" endtime="20201115 22:03:36.474"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:36.080" endtime="20201115 22:03:36.475"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:36.486" level="INFO">${RESULT} = [{'time': 0.042154375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.381900000000131e-05, 'source_diff': 2.381900000000131e-05}, {'time': 0.042508833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:36.477" endtime="20201115 22:03:36.487"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:36.517" level="INFO">${OVERHEAD} = {'time': [0.042154375, 0.042508833, 0.042860139, 0.043216611, 0.043570083, 0.043925597, 0.044281069, 0.044638625, 0.044994069, 0.0453495, 0.045703875, 0.046059444, 0.046412861, 0.046767347, 0.04712077...</msg>
<status status="PASS" starttime="20201115 22:03:36.488" endtime="20201115 22:03:36.518"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:36.528" level="INFO">NAME: 00-overhead-14-set</msg>
<status status="PASS" starttime="20201115 22:03:36.526" endtime="20201115 22:03:36.529"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:36.534" level="INFO">VALUE: [2.381900000000131e-05, 2.431900000000181e-05, 2.434700000000095e-05, 2.4486000000004116e-05, 2.3986000000003616e-05, 2.3985999999996677e-05, 2.3665999999998577e-05, 2.416699999999855e-05, 2.4165999999999077e-05, 2.365299999999848e-05, 2.381900000000131e-05, 2.384700000000045e-05, 2.4028000000002325e-05, 2.4179999999998647e-05, 2.4486000000004116e-05, 2.3651999999999007e-05, 2.413899999999941e-05, 2.388899999999916e-05, 2.365299999999848e-05, 2.4499999999996747e-05, 2.388899999999916e-05, 2.4028000000002325e-05, 2.365299999999848e-05, 2.4179999999998647e-05, 2.4013000000003282e-05, 2.4499999999996747e-05, 2.3806000000001215e-05, 2.3584000000000105e-05, 2.4500000000003685e-05, 2.4415999999999327e-05, 2.4151999999999507e-05, 2.419499999999769e-05, 2.3665999999998577e-05, 2.379100000000217e-05, 2.4471999999997607e-05, 2.4500000000003685e-05, 2.39169999999983e-05, 2.4012999999996343e-05, 2.362499999999934e-05, 2.4014000000002755e-05, 2.4500000000003685e-05, 2.433300000000138e-05, 2.4499999999996747e-05, 2.381900000000131e-05, 2.4000000000003185e-05, 2.4151999999999507e-05, 2.4306000000001715e-05, 2.4318999999994872e-05, 2.413899999999941e-05, 2.411100000000027e-05]</msg>
<status status="PASS" starttime="20201115 22:03:36.531" endtime="20201115 22:03:36.535"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:36.519" endtime="20201115 22:03:36.537"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:36.543" endtime="20201115 22:03:36.546"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:36.551" endtime="20201115 22:03:36.573"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:36.547" endtime="20201115 22:03:36.575"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:36.538" endtime="20201115 22:03:36.576"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:36.012" endtime="20201115 22:03:36.577"></status>
</kw>
<msg timestamp="20201115 22:03:36.577" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:36.601" endtime="20201115 22:03:36.628"></status>
</kw>
<msg timestamp="20201115 22:03:36.629" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:36.597" endtime="20201115 22:03:36.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:36.635" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:36.631" endtime="20201115 22:03:36.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:36.637" endtime="20201115 22:03:36.641"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:36.590" endtime="20201115 22:03:36.643"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:36.584" endtime="20201115 22:03:36.644"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:36.661" endtime="20201115 22:03:37.004"></status>
</kw>
<msg timestamp="20201115 22:03:37.011" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041317056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041341056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:36.658" endtime="20201115 22:03:37.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:37.030" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041317056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041341056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:37.014" endtime="20201115 22:03:37.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:37.033" endtime="20201115 22:03:37.039"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:36.650" endtime="20201115 22:03:37.040"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:36.646" endtime="20201115 22:03:37.042"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:37.053" level="INFO">${RESULT} = [{'time': 0.041341056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4000000000003185e-05, 'source_diff': 2.4000000000003185e-05}, {'time': 0.0416925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:37.044" endtime="20201115 22:03:37.053"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:37.084" level="INFO">${OVERHEAD} = {'time': [0.041341056, 0.0416925, 0.042045167, 0.042399514, 0.042756097, 0.043106583, 0.043457958, 0.043811458, 0.044166861, 0.044519278, 0.044872778, 0.045225361, 0.045577833, 0.045930222, 0.04628365...</msg>
<status status="PASS" starttime="20201115 22:03:37.055" endtime="20201115 22:03:37.085"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:37.095" level="INFO">NAME: 00-overhead-14-set</msg>
<status status="PASS" starttime="20201115 22:03:37.093" endtime="20201115 22:03:37.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:37.101" level="INFO">VALUE: [2.4000000000003185e-05, 2.366699999999805e-05, 2.4500000000003685e-05, 2.3820000000000785e-05, 2.365299999999848e-05, 2.3985999999996677e-05, 2.35970000000002e-05, 2.388899999999916e-05, 2.431900000000181e-05, 2.4334000000000855e-05, 2.4334000000000855e-05, 2.416699999999855e-05, 2.381900000000131e-05, 2.4165999999999077e-05, 2.4500000000003685e-05, 2.4513999999996317e-05, 2.365299999999848e-05, 2.4291999999995206e-05, 2.4000000000003185e-05, 2.3985999999996677e-05, 2.383300000000088e-05, 2.415299999999898e-05, 2.381900000000131e-05, 2.4499999999996747e-05, 2.4318999999994872e-05, 2.381900000000131e-05, 2.3679999999998147e-05, 2.368099999999762e-05, 2.4514000000003255e-05, 2.4179999999998647e-05, 2.366699999999805e-05, 2.4014000000002755e-05, 2.365299999999848e-05, 2.4320000000001285e-05, 2.4013000000003282e-05, 2.365299999999848e-05, 2.4179999999998647e-05, 2.4000000000003185e-05, 2.4014000000002755e-05, 2.415299999999898e-05, 2.418099999999812e-05, 2.3847999999999925e-05, 2.3806000000001215e-05, 2.4513999999996317e-05, 2.4013000000003282e-05, 2.4528000000002825e-05, 2.4513999999996317e-05, 2.4334000000000855e-05, 2.434700000000095e-05, 2.368099999999762e-05]</msg>
<status status="PASS" starttime="20201115 22:03:37.097" endtime="20201115 22:03:37.101"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:37.086" endtime="20201115 22:03:37.103"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:37.109" endtime="20201115 22:03:37.112"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:37.118" endtime="20201115 22:03:37.140"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:37.114" endtime="20201115 22:03:37.142"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:37.105" endtime="20201115 22:03:37.143"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:36.579" endtime="20201115 22:03:37.144"></status>
</kw>
<msg timestamp="20201115 22:03:37.144" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:37.168" endtime="20201115 22:03:37.195"></status>
</kw>
<msg timestamp="20201115 22:03:37.196" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:37.164" endtime="20201115 22:03:37.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:37.202" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:37.198" endtime="20201115 22:03:37.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:37.205" endtime="20201115 22:03:37.208"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:37.157" endtime="20201115 22:03:37.210"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:37.151" endtime="20201115 22:03:37.211"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:37.228" endtime="20201115 22:03:37.572"></status>
</kw>
<msg timestamp="20201115 22:03:37.579" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041666611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041690444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:37.225" endtime="20201115 22:03:37.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:37.598" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041666611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041690444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:37.582" endtime="20201115 22:03:37.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:37.600" endtime="20201115 22:03:37.606"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:37.218" endtime="20201115 22:03:37.607"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:37.213" endtime="20201115 22:03:37.609"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:37.619" level="INFO">${RESULT} = [{'time': 0.041690444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.383300000000088e-05, 'source_diff': 2.383300000000088e-05}, {'time': 0.042045917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:37.610" endtime="20201115 22:03:37.620"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:37.650" level="INFO">${OVERHEAD} = {'time': [0.041690444, 0.042045917, 0.0423975, 0.042749972, 0.043101444, 0.043457917, 0.043809528, 0.044162833, 0.044514431, 0.044865958, 0.045220319, 0.045572819, 0.045928389, 0.046283722, 0.04663920...</msg>
<status status="PASS" starttime="20201115 22:03:37.621" endtime="20201115 22:03:37.650"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:37.661" level="INFO">NAME: 00-overhead-14-set</msg>
<status status="PASS" starttime="20201115 22:03:37.659" endtime="20201115 22:03:37.662"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:37.666" level="INFO">VALUE: [2.383300000000088e-05, 2.4000000000003185e-05, 2.4499999999996747e-05, 2.4318999999994872e-05, 2.383300000000088e-05, 2.4235999999996927e-05, 2.4042000000001895e-05, 2.3665999999998577e-05, 2.4514000000003255e-05, 2.4179999999998647e-05, 2.4486000000004116e-05, 2.433300000000138e-05, 2.418099999999812e-05, 2.3999999999996247e-05, 2.3986000000003616e-05, 2.4499999999996747e-05, 2.3985999999996677e-05, 2.3651999999999007e-05, 2.368099999999762e-05, 2.4028000000002325e-05, 2.4306000000001715e-05, 2.433300000000138e-05, 2.4485999999997177e-05, 2.3693999999997717e-05, 2.366699999999805e-05, 2.431900000000181e-05, 2.4028000000002325e-05, 2.394499999999744e-05, 2.4499999999996747e-05, 2.368100000000456e-05, 2.4207999999997787e-05, 2.4332999999994442e-05, 2.444500000000488e-05, 2.4499999999996747e-05, 2.4070000000001035e-05, 2.366699999999805e-05, 2.3820000000000785e-05, 2.4000000000003185e-05, 2.4305999999994776e-05, 2.4500000000003685e-05, 2.4334000000000855e-05, 2.413899999999941e-05, 2.393099999999787e-05, 2.434700000000095e-05, 2.415299999999898e-05, 2.366700000000499e-05, 2.365299999999848e-05, 2.3819999999993846e-05, 2.433300000000138e-05, 2.383300000000088e-05]</msg>
<status status="PASS" starttime="20201115 22:03:37.663" endtime="20201115 22:03:37.667"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:37.652" endtime="20201115 22:03:37.669"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:37.676" endtime="20201115 22:03:37.679"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:37.685" endtime="20201115 22:03:37.706"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:37.680" endtime="20201115 22:03:37.708"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:37.671" endtime="20201115 22:03:37.710"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:37.145" endtime="20201115 22:03:37.710"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:34.872" endtime="20201115 22:03:37.711"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:34.870" endtime="20201115 22:03:37.711"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:37.716" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:37.739" endtime="20201115 22:03:37.767"></status>
</kw>
<msg timestamp="20201115 22:03:37.768" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:37.736" endtime="20201115 22:03:37.769"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:37.774" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:37.770" endtime="20201115 22:03:37.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:37.777" endtime="20201115 22:03:37.781"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:37.728" endtime="20201115 22:03:37.782"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:37.723" endtime="20201115 22:03:37.784"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:37.805" endtime="20201115 22:03:38.169"></status>
</kw>
<msg timestamp="20201115 22:03:38.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046108736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046134097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:37.801" endtime="20201115 22:03:38.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:38.195" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046108736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046134097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:38.179" endtime="20201115 22:03:38.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:38.197" endtime="20201115 22:03:38.201"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:37.791" endtime="20201115 22:03:38.203"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:37.786" endtime="20201115 22:03:38.204"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:38.215" level="INFO">${RESULT} = [{'time': 0.046134097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.536100000000152e-05, 'source_diff': 2.536100000000152e-05}, {'time': 0.046512639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:38.206" endtime="20201115 22:03:38.216"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:38.247" level="INFO">${OVERHEAD} = {'time': [0.046134097, 0.046512639, 0.046889333, 0.047268917, 0.047644431, 0.048021028, 0.0483985, 0.048778986, 0.049159569, 0.04953825, 0.049919792, 0.050298333, 0.050675833, 0.051058306, 0.051438917...</msg>
<status status="PASS" starttime="20201115 22:03:38.217" endtime="20201115 22:03:38.247"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:38.258" level="INFO">NAME: 00-overhead-15-set</msg>
<status status="PASS" starttime="20201115 22:03:38.256" endtime="20201115 22:03:38.259"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:38.263" level="INFO">VALUE: [2.536100000000152e-05, 2.4542000000002395e-05, 2.4679999999999147e-05, 2.5028000000003325e-05, 2.4528000000002825e-05, 2.4528000000002825e-05, 2.4707999999998287e-05, 2.4430000000005836e-05, 2.536100000000152e-05, 2.5235999999997927e-05, 2.5041999999995956e-05, 2.5027000000003852e-05, 2.5027000000003852e-05, 2.518099999999912e-05, 2.4486000000004116e-05, 2.487500000000059e-05, 2.4679999999999147e-05, 2.520899999999826e-05, 2.466699999999905e-05, 2.452700000000335e-05, 2.4902000000000257e-05, 2.4722000000004796e-05, 2.4527999999995886e-05, 2.486100000000102e-05, 2.5179999999999647e-05, 2.5166000000000077e-05, 2.4528000000002825e-05, 2.5416000000000327e-05, 2.519499999999869e-05, 2.4527999999995886e-05, 2.4665999999999577e-05, 2.538900000000066e-05, 2.458300000000163e-05, 2.538900000000066e-05, 2.5374999999994152e-05, 2.487500000000059e-05, 2.5166000000000077e-05, 2.4874999999993652e-05, 2.4693999999998717e-05, 2.4707999999998287e-05, 2.4679999999999147e-05, 2.4542000000002395e-05, 2.4707999999998287e-05, 2.4528000000002825e-05, 2.462500000000034e-05, 2.519500000000563e-05, 2.537500000000803e-05, 2.466700000000599e-05, 2.486100000000102e-05, 2.4874999999993652e-05]</msg>
<status status="PASS" starttime="20201115 22:03:38.260" endtime="20201115 22:03:38.264"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:38.249" endtime="20201115 22:03:38.266"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:38.272" endtime="20201115 22:03:38.275"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:38.281" endtime="20201115 22:03:38.303"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:38.277" endtime="20201115 22:03:38.305"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:38.268" endtime="20201115 22:03:38.306"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:37.717" endtime="20201115 22:03:38.307"></status>
</kw>
<msg timestamp="20201115 22:03:38.308" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:38.332" endtime="20201115 22:03:38.361"></status>
</kw>
<msg timestamp="20201115 22:03:38.362" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:38.328" endtime="20201115 22:03:38.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:38.369" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:38.364" endtime="20201115 22:03:38.370"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:38.372" endtime="20201115 22:03:38.376"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:38.321" endtime="20201115 22:03:38.377"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:38.315" endtime="20201115 22:03:38.379"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:38.396" endtime="20201115 22:03:38.750"></status>
</kw>
<msg timestamp="20201115 22:03:38.758" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042876208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042901236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:38.392" endtime="20201115 22:03:38.758"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:38.776" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042876208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042901236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:38.760" endtime="20201115 22:03:38.777"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:38.779" endtime="20201115 22:03:38.784"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:38.385" endtime="20201115 22:03:38.786"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:38.380" endtime="20201115 22:03:38.787"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:38.798" level="INFO">${RESULT} = [{'time': 0.042901236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5028000000003325e-05, 'source_diff': 2.5028000000003325e-05}, {'time': 0.043281, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:03:38.789" endtime="20201115 22:03:38.799"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:38.829" level="INFO">${OVERHEAD} = {'time': [0.042901236, 0.043281, 0.043658375, 0.044033903, 0.044411583, 0.044786958, 0.045167389, 0.04555, 0.045929514, 0.046309042, 0.046687431, 0.047068056, 0.047449444, 0.047830986, 0.0482075, 0.04...</msg>
<status status="PASS" starttime="20201115 22:03:38.800" endtime="20201115 22:03:38.830"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:38.841" level="INFO">NAME: 00-overhead-15-set</msg>
<status status="PASS" starttime="20201115 22:03:38.838" endtime="20201115 22:03:38.841"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:38.846" level="INFO">VALUE: [2.5028000000003325e-05, 2.4749999999996997e-05, 2.4693999999998717e-05, 2.534700000000195e-05, 2.5221999999998357e-05, 2.481900000000231e-05, 2.486100000000102e-05, 2.536100000000152e-05, 2.4569999999994596e-05, 2.519499999999869e-05, 2.515299999999998e-05, 2.5027999999996386e-05, 2.4679999999999147e-05, 2.516699999999955e-05, 2.5193999999999217e-05, 2.5208000000005726e-05, 2.518099999999912e-05, 2.534700000000195e-05, 2.534700000000195e-05, 2.4514000000003255e-05, 2.5348000000001425e-05, 2.534700000000195e-05, 2.5055999999995526e-05, 2.534700000000195e-05, 2.488900000000016e-05, 2.468099999999862e-05, 2.4820000000001785e-05, 2.538900000000066e-05, 2.5362000000000995e-05, 2.488900000000016e-05, 2.5388000000001187e-05, 2.4693999999998717e-05, 2.4527999999995886e-05, 2.5193999999999217e-05, 2.536100000000152e-05, 2.506900000000256e-05, 2.469499999999819e-05, 2.5207999999998787e-05, 2.519499999999869e-05, 2.5042000000002895e-05, 2.536100000000152e-05, 2.4512999999996843e-05, 2.5180000000006586e-05, 2.5193999999999217e-05, 2.4512999999996843e-05, 2.468099999999862e-05, 2.540300000000023e-05, 2.5194000000006156e-05, 2.5014000000003755e-05, 2.4848000000000925e-05]</msg>
<status status="PASS" starttime="20201115 22:03:38.843" endtime="20201115 22:03:38.847"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:38.831" endtime="20201115 22:03:38.849"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:38.855" endtime="20201115 22:03:38.858"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:38.864" endtime="20201115 22:03:38.886"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:38.859" endtime="20201115 22:03:38.888"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:38.851" endtime="20201115 22:03:38.889"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:38.309" endtime="20201115 22:03:38.890"></status>
</kw>
<msg timestamp="20201115 22:03:38.890" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:38.915" endtime="20201115 22:03:38.944"></status>
</kw>
<msg timestamp="20201115 22:03:38.945" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:38.910" endtime="20201115 22:03:38.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:38.951" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:38.947" endtime="20201115 22:03:38.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:38.954" endtime="20201115 22:03:38.958"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:38.903" endtime="20201115 22:03:38.959"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:38.897" endtime="20201115 22:03:38.961"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:38.978" endtime="20201115 22:03:39.333"></status>
</kw>
<msg timestamp="20201115 22:03:39.340" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042907931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042933278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:38.975" endtime="20201115 22:03:39.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:39.358" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042907931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042933278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:39.342" endtime="20201115 22:03:39.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:39.361" endtime="20201115 22:03:39.366"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:38.967" endtime="20201115 22:03:39.368"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:38.962" endtime="20201115 22:03:39.370"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:39.380" level="INFO">${RESULT} = [{'time': 0.042933278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5346999999995012e-05, 'source_diff': 2.5346999999995012e-05}, {'time': 0.043312806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:39.371" endtime="20201115 22:03:39.381"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:39.412" level="INFO">${OVERHEAD} = {'time': [0.042933278, 0.043312806, 0.043691264, 0.044070681, 0.044452347, 0.044833833, 0.045215472, 0.045591917, 0.045967417, 0.046344028, 0.046721639, 0.047100139, 0.047478764, 0.047854278, 0.048235...</msg>
<status status="PASS" starttime="20201115 22:03:39.383" endtime="20201115 22:03:39.412"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:39.423" level="INFO">NAME: 00-overhead-15-set</msg>
<status status="PASS" starttime="20201115 22:03:39.421" endtime="20201115 22:03:39.424"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:39.429" level="INFO">VALUE: [2.5346999999995012e-05, 2.519500000000563e-05, 2.519499999999869e-05, 2.4999999999997247e-05, 2.4694000000005656e-05, 2.5193999999999217e-05, 2.4679999999999147e-05, 2.468100000000556e-05, 2.4528000000002825e-05, 2.4542000000002395e-05, 2.4542000000002395e-05, 2.516699999999955e-05, 2.488900000000016e-05, 2.4542000000002395e-05, 2.54169999999998e-05, 2.5320000000002285e-05, 2.536100000000152e-05, 2.484700000000145e-05, 2.5028000000003325e-05, 2.470899999999776e-05, 2.534700000000195e-05, 2.5193999999999217e-05, 2.519499999999869e-05, 2.519499999999869e-05, 2.5028000000003325e-05, 2.484700000000145e-05, 2.454100000000292e-05, 2.5208000000005726e-05, 2.4528000000002825e-05, 2.536100000000152e-05, 2.540300000000023e-05, 2.4862000000000495e-05, 2.486100000000102e-05, 2.5360999999994582e-05, 2.518099999999912e-05, 2.5014000000003755e-05, 2.515299999999998e-05, 2.5360999999994582e-05, 2.4542000000002395e-05, 2.4457999999998037e-05, 2.536100000000152e-05, 2.537500000000109e-05, 2.493099999999887e-05, 2.5027999999996386e-05, 2.536100000000152e-05, 2.454100000000292e-05, 2.5014000000003755e-05, 2.531900000000281e-05, 2.533300000000238e-05, 2.5180000000006586e-05]</msg>
<status status="PASS" starttime="20201115 22:03:39.426" endtime="20201115 22:03:39.430"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:39.414" endtime="20201115 22:03:39.431"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:39.438" endtime="20201115 22:03:39.440"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:39.446" endtime="20201115 22:03:39.468"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:39.442" endtime="20201115 22:03:39.470"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:39.433" endtime="20201115 22:03:39.472"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:38.891" endtime="20201115 22:03:39.478"></status>
</kw>
<msg timestamp="20201115 22:03:39.478" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:39.502" endtime="20201115 22:03:39.531"></status>
</kw>
<msg timestamp="20201115 22:03:39.532" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:39.499" endtime="20201115 22:03:39.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:39.539" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:39.535" endtime="20201115 22:03:39.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:39.541" endtime="20201115 22:03:39.545"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:39.491" endtime="20201115 22:03:39.547"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:39.485" endtime="20201115 22:03:39.548"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:39.565" endtime="20201115 22:03:39.918"></status>
</kw>
<msg timestamp="20201115 22:03:39.925" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047769889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047794514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:39.562" endtime="20201115 22:03:39.926"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:39.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047769889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047794514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:39.928" endtime="20201115 22:03:39.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:39.946" endtime="20201115 22:03:39.952"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:39.554" endtime="20201115 22:03:39.953"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:39.549" endtime="20201115 22:03:39.955"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:39.966" level="INFO">${RESULT} = [{'time': 0.047794514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.462500000000034e-05, 'source_diff': 2.462500000000034e-05}, {'time': 0.048175986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:39.956" endtime="20201115 22:03:39.966"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:39.997" level="INFO">${OVERHEAD} = {'time': [0.047794514, 0.048175986, 0.048557667, 0.048937069, 0.049315778, 0.049697333, 0.050074722, 0.050457278, 0.050833833, 0.051214347, 0.051591944, 0.051972347, 0.052349875, 0.052728486, 0.053108...</msg>
<status status="PASS" starttime="20201115 22:03:39.968" endtime="20201115 22:03:39.998"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:40.009" level="INFO">NAME: 00-overhead-15-set</msg>
<status status="PASS" starttime="20201115 22:03:40.006" endtime="20201115 22:03:40.009"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:40.014" level="INFO">VALUE: [2.462500000000034e-05, 2.4679999999999147e-05, 2.536100000000152e-05, 2.534700000000195e-05, 2.5041999999995956e-05, 2.533300000000238e-05, 2.536100000000152e-05, 2.536100000000152e-05, 2.534700000000195e-05, 2.4528000000002825e-05, 2.4500000000003685e-05, 2.4514000000003255e-05, 2.4832999999994942e-05, 2.5013999999996817e-05, 2.468099999999862e-05, 2.4527999999995886e-05, 2.533300000000238e-05, 2.513900000000041e-05, 2.452700000000335e-05, 2.5000000000004186e-05, 2.5028000000003325e-05, 2.5042000000002895e-05, 2.4972000000005046e-05, 2.4513999999996317e-05, 2.4693999999998717e-05, 2.4693999999998717e-05, 2.4528000000002825e-05, 2.519499999999869e-05, 2.5388000000001187e-05, 2.5179999999999647e-05, 2.486100000000102e-05, 2.518099999999912e-05, 2.4526999999996413e-05, 2.469499999999819e-05, 2.4528000000002825e-05, 2.465299999999948e-05, 2.4832999999994942e-05, 2.484700000000145e-05, 2.534700000000195e-05, 2.518099999999912e-05, 2.519500000000563e-05, 2.486100000000102e-05, 2.4874999999993652e-05, 2.468099999999862e-05, 2.4583999999994166e-05, 2.5430000000006836e-05, 2.4486000000004116e-05, 2.4846999999994512e-05, 2.5346999999995012e-05, 2.4666000000006516e-05]</msg>
<status status="PASS" starttime="20201115 22:03:40.011" endtime="20201115 22:03:40.015"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:39.999" endtime="20201115 22:03:40.017"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:40.024" endtime="20201115 22:03:40.027"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:40.033" endtime="20201115 22:03:40.055"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:40.028" endtime="20201115 22:03:40.057"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:40.019" endtime="20201115 22:03:40.058"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:39.479" endtime="20201115 22:03:40.059"></status>
</kw>
<msg timestamp="20201115 22:03:40.059" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:40.083" endtime="20201115 22:03:40.113"></status>
</kw>
<msg timestamp="20201115 22:03:40.114" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:40.080" endtime="20201115 22:03:40.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:40.121" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:40.116" endtime="20201115 22:03:40.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:40.123" endtime="20201115 22:03:40.127"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:40.072" endtime="20201115 22:03:40.129"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:40.066" endtime="20201115 22:03:40.131"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:40.148" endtime="20201115 22:03:40.501"></status>
</kw>
<msg timestamp="20201115 22:03:40.508" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042195806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042220806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:40.145" endtime="20201115 22:03:40.508"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:40.526" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042195806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042220806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:40.510" endtime="20201115 22:03:40.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:40.529" endtime="20201115 22:03:40.536"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:40.137" endtime="20201115 22:03:40.538"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:40.132" endtime="20201115 22:03:40.539"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:40.550" level="INFO">${RESULT} = [{'time': 0.042220806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4999999999997247e-05, 'source_diff': 2.4999999999997247e-05}, {'time': 0.042601333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:40.541" endtime="20201115 22:03:40.551"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:40.581" level="INFO">${OVERHEAD} = {'time': [0.042220806, 0.042601333, 0.042981972, 0.043358528, 0.043737069, 0.044116514, 0.044496125, 0.044876625, 0.045258153, 0.045638819, 0.046014264, 0.046392917, 0.046771542, 0.047152042, 0.047532...</msg>
<status status="PASS" starttime="20201115 22:03:40.552" endtime="20201115 22:03:40.582"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:40.593" level="INFO">NAME: 00-overhead-15-set</msg>
<status status="PASS" starttime="20201115 22:03:40.590" endtime="20201115 22:03:40.593"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:40.598" level="INFO">VALUE: [2.4999999999997247e-05, 2.5068999999995623e-05, 2.536100000000152e-05, 2.537500000000109e-05, 2.5000000000004186e-05, 2.5028000000003325e-05, 2.5041999999995956e-05, 2.5194000000006156e-05, 2.47090000000047e-05, 2.4471999999997607e-05, 2.518099999999912e-05, 2.487500000000059e-05, 2.5027999999996386e-05, 2.470899999999776e-05, 2.511100000000127e-05, 2.4569999999994596e-05, 2.4528000000002825e-05, 2.486100000000102e-05, 2.466699999999905e-05, 2.469499999999819e-05, 2.513900000000041e-05, 2.505500000000299e-05, 2.518099999999912e-05, 2.465299999999948e-05, 2.486100000000102e-05, 2.5027999999996386e-05, 2.452700000000335e-05, 2.538900000000066e-05, 2.4513999999996317e-05, 2.5193999999999217e-05, 2.486100000000102e-05, 2.5235999999997927e-05, 2.519499999999869e-05, 2.534700000000195e-05, 2.5207999999998787e-05, 2.5027999999996386e-05, 2.534700000000195e-05, 2.5012999999997343e-05, 2.469499999999819e-05, 2.4486000000004116e-05, 2.484700000000145e-05, 2.5362000000000995e-05, 2.466699999999905e-05, 2.4665999999999577e-05, 2.486100000000102e-05, 2.4957999999998537e-05, 2.5027999999996386e-05, 2.465299999999948e-05, 2.497299999999758e-05, 2.4486000000004116e-05]</msg>
<status status="PASS" starttime="20201115 22:03:40.595" endtime="20201115 22:03:40.600"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:40.583" endtime="20201115 22:03:40.601"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:40.608" endtime="20201115 22:03:40.611"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:40.616" endtime="20201115 22:03:40.638"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:40.612" endtime="20201115 22:03:40.640"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:40.603" endtime="20201115 22:03:40.642"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:40.061" endtime="20201115 22:03:40.642"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:37.714" endtime="20201115 22:03:40.643"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:37.712" endtime="20201115 22:03:40.643"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:40.649" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:40.672" endtime="20201115 22:03:40.703"></status>
</kw>
<msg timestamp="20201115 22:03:40.704" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:40.669" endtime="20201115 22:03:40.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:40.710" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:40.706" endtime="20201115 22:03:40.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:40.712" endtime="20201115 22:03:40.716"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:40.661" endtime="20201115 22:03:40.718"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:40.655" endtime="20201115 22:03:40.719"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:40.737" endtime="20201115 22:03:41.092"></status>
</kw>
<msg timestamp="20201115 22:03:41.099" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047723222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047748611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:40.733" endtime="20201115 22:03:41.099"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:41.118" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047723222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047748611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:41.101" endtime="20201115 22:03:41.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:41.120" endtime="20201115 22:03:41.124"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:40.726" endtime="20201115 22:03:41.126"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:40.721" endtime="20201115 22:03:41.127"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:41.138" level="INFO">${RESULT} = [{'time': 0.047748611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.538900000000066e-05, 'source_diff': 2.538900000000066e-05}, {'time': 0.048154153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:41.129" endtime="20201115 22:03:41.139"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:41.170" level="INFO">${OVERHEAD} = {'time': [0.047748611, 0.048154153, 0.048557722, 0.048959194, 0.049364792, 0.049767361, 0.05017175, 0.050574292, 0.050975736, 0.051383236, 0.051790611, 0.052198097, 0.052603583, 0.053009125, 0.0534115...</msg>
<status status="PASS" starttime="20201115 22:03:41.141" endtime="20201115 22:03:41.171"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:41.182" level="INFO">NAME: 00-overhead-16-set</msg>
<status status="PASS" starttime="20201115 22:03:41.179" endtime="20201115 22:03:41.182"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:41.188" level="INFO">VALUE: [2.538900000000066e-05, 2.569499999999919e-05, 2.5527999999996887e-05, 2.5526999999997413e-05, 2.5527999999996887e-05, 2.6042000000003895e-05, 2.588900000000116e-05, 2.5806000000003215e-05, 2.5707999999999287e-05, 2.588900000000116e-05, 2.5680000000000147e-05, 2.6221999999999357e-05, 2.554100000000392e-05, 2.5541999999996456e-05, 2.5721999999998857e-05, 2.5721999999998857e-05, 2.5527999999996887e-05, 2.568099999999962e-05, 2.6054999999997053e-05, 2.6235999999998927e-05, 2.537500000000109e-05, 2.5791000000004172e-05, 2.618100000000012e-05, 2.6235999999998927e-05, 2.6207999999999787e-05, 2.6013999999997817e-05, 2.590300000000073e-05, 2.5528000000003825e-05, 2.6056000000003465e-05, 2.6207999999999787e-05, 2.6070000000003035e-05, 2.537500000000109e-05, 2.533300000000238e-05, 2.5374999999994152e-05, 2.586100000000202e-05, 2.5374999999994152e-05, 2.5542000000003395e-05, 2.5486000000005116e-05, 2.6041999999990018e-05, 2.588900000000116e-05, 2.5542000000003395e-05, 2.5527999999996887e-05, 2.618100000000012e-05, 2.613900000000835e-05, 2.6041000000004422e-05, 2.537500000000803e-05, 2.6194999999992752e-05, 2.6056000000010404e-05, 2.537500000000803e-05, 2.5693999999992778e-05]</msg>
<status status="PASS" starttime="20201115 22:03:41.184" endtime="20201115 22:03:41.189"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:41.172" endtime="20201115 22:03:41.191"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:41.197" endtime="20201115 22:03:41.200"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:41.206" endtime="20201115 22:03:41.228"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:41.201" endtime="20201115 22:03:41.229"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:41.192" endtime="20201115 22:03:41.231"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:40.650" endtime="20201115 22:03:41.232"></status>
</kw>
<msg timestamp="20201115 22:03:41.232" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:41.256" endtime="20201115 22:03:41.287"></status>
</kw>
<msg timestamp="20201115 22:03:41.288" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:41.253" endtime="20201115 22:03:41.289"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:41.295" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:41.290" endtime="20201115 22:03:41.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:41.297" endtime="20201115 22:03:41.301"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:41.245" endtime="20201115 22:03:41.302"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:41.239" endtime="20201115 22:03:41.304"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:41.321" endtime="20201115 22:03:41.677"></status>
</kw>
<msg timestamp="20201115 22:03:41.684" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042247972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042273375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:41.318" endtime="20201115 22:03:41.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:41.702" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042247972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042273375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:41.686" endtime="20201115 22:03:41.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:41.705" endtime="20201115 22:03:41.710"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:41.310" endtime="20201115 22:03:41.711"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:41.305" endtime="20201115 22:03:41.713"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:41.724" level="INFO">${RESULT} = [{'time': 0.042273375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.540300000000023e-05, 'source_diff': 2.540300000000023e-05}, {'time': 0.042676903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:41.715" endtime="20201115 22:03:41.724"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:41.754" level="INFO">${OVERHEAD} = {'time': [0.042273375, 0.042676903, 0.043080375, 0.043486931, 0.043893625, 0.044300167, 0.044704708, 0.045109361, 0.045514889, 0.045918389, 0.046324, 0.046729542, 0.047135125, 0.047537708, 0.047939292...</msg>
<status status="PASS" starttime="20201115 22:03:41.726" endtime="20201115 22:03:41.755"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:41.766" level="INFO">NAME: 00-overhead-16-set</msg>
<status status="PASS" starttime="20201115 22:03:41.763" endtime="20201115 22:03:41.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:41.771" level="INFO">VALUE: [2.540300000000023e-05, 2.6221999999999357e-05, 2.5541999999996456e-05, 2.572299999999833e-05, 2.5555999999996026e-05, 2.570899999999876e-05, 2.5722000000005796e-05, 2.605500000000399e-05, 2.608300000000313e-05, 2.6221999999999357e-05, 2.5721999999998857e-05, 2.537500000000109e-05, 2.6221999999999357e-05, 2.6221999999999357e-05, 2.570899999999876e-05, 2.5542000000003395e-05, 2.620899999999926e-05, 2.6042000000003895e-05, 2.6041999999996956e-05, 2.536100000000152e-05, 2.6207999999999787e-05, 2.554100000000392e-05, 2.623700000000534e-05, 2.5542000000003395e-05, 2.5777000000004602e-05, 2.6264000000005006e-05, 2.5943999999999967e-05, 2.5527000000004352e-05, 2.556900000000306e-05, 2.538900000000066e-05, 2.587500000000159e-05, 2.6277000000005102e-05, 2.6221999999999357e-05, 2.5860999999995082e-05, 2.588900000000116e-05, 2.5862000000001495e-05, 2.6250000000005436e-05, 2.5707999999999287e-05, 2.5556000000002965e-05, 2.587500000000159e-05, 2.590300000000073e-05, 2.619499999999969e-05, 2.5693999999999717e-05, 2.6235999999998927e-05, 2.606900000000356e-05, 2.6235999999998927e-05, 2.5693999999999717e-05, 2.5499999999997747e-05, 2.5527999999996887e-05, 2.55970000000022e-05]</msg>
<status status="PASS" starttime="20201115 22:03:41.768" endtime="20201115 22:03:41.772"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:41.757" endtime="20201115 22:03:41.774"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:41.780" endtime="20201115 22:03:41.783"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:41.788" endtime="20201115 22:03:41.810"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:41.784" endtime="20201115 22:03:41.811"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:41.775" endtime="20201115 22:03:41.813"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:41.233" endtime="20201115 22:03:41.814"></status>
</kw>
<msg timestamp="20201115 22:03:41.814" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:41.837" endtime="20201115 22:03:41.867"></status>
</kw>
<msg timestamp="20201115 22:03:41.868" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:41.834" endtime="20201115 22:03:41.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:41.874" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:41.870" endtime="20201115 22:03:41.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:41.876" endtime="20201115 22:03:41.880"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:41.827" endtime="20201115 22:03:41.882"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:41.821" endtime="20201115 22:03:41.883"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:41.900" endtime="20201115 22:03:42.245"></status>
</kw>
<msg timestamp="20201115 22:03:42.252" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040904181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040929722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:41.896" endtime="20201115 22:03:42.253"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:42.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040904181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040929722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:42.254" endtime="20201115 22:03:42.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:42.273" endtime="20201115 22:03:42.279"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:41.889" endtime="20201115 22:03:42.280"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:41.884" endtime="20201115 22:03:42.282"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:42.293" level="INFO">${RESULT} = [{'time': 0.040929722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.554100000000392e-05, 'source_diff': 2.554100000000392e-05}, {'time': 0.041332292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:42.284" endtime="20201115 22:03:42.294"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:42.325" level="INFO">${OVERHEAD} = {'time': [0.040929722, 0.041332292, 0.041734778, 0.042139292, 0.042545792, 0.042952264, 0.043357806, 0.043765375, 0.044167931, 0.044570556, 0.044971917, 0.0453785, 0.045785944, 0.046193403, 0.04659498...</msg>
<status status="PASS" starttime="20201115 22:03:42.296" endtime="20201115 22:03:42.326"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:42.336" level="INFO">NAME: 00-overhead-16-set</msg>
<status status="PASS" starttime="20201115 22:03:42.334" endtime="20201115 22:03:42.337"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:42.342" level="INFO">VALUE: [2.554100000000392e-05, 2.622299999999883e-05, 2.5721999999998857e-05, 2.5348000000001425e-05, 2.6041999999996956e-05, 2.5388999999993722e-05, 2.618100000000012e-05, 2.6042000000003895e-05, 2.620899999999926e-05, 2.620899999999926e-05, 2.5848000000001925e-05, 2.5707999999999287e-05, 2.6194000000000217e-05, 2.6221999999999357e-05, 2.540300000000023e-05, 2.5722000000005796e-05, 2.587500000000159e-05, 2.5540999999996983e-05, 2.5542000000003395e-05, 2.5556000000002965e-05, 2.6042000000003895e-05, 2.6194000000000217e-05, 2.590300000000073e-05, 2.6068999999996623e-05, 2.537500000000109e-05, 2.5985999999998677e-05, 2.5721999999998857e-05, 2.6207999999999787e-05, 2.611100000000227e-05, 2.534700000000195e-05, 2.5874999999994652e-05, 2.5721999999998857e-05, 2.5513999999997317e-05, 2.5598000000001675e-05, 2.5374999999994152e-05, 2.537500000000109e-05, 2.5749999999997997e-05, 2.5347999999994486e-05, 2.568099999999962e-05, 2.5540999999996983e-05, 2.6027999999997387e-05, 2.5707999999999287e-05, 2.6222000000006296e-05, 2.5707999999999287e-05, 2.5721999999998857e-05, 2.5972000000006046e-05, 2.554100000000392e-05, 2.6207999999999787e-05, 2.5513999999997317e-05, 2.5528000000003825e-05]</msg>
<status status="PASS" starttime="20201115 22:03:42.339" endtime="20201115 22:03:42.343"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:42.327" endtime="20201115 22:03:42.344"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:42.351" endtime="20201115 22:03:42.354"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:42.359" endtime="20201115 22:03:42.381"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:42.355" endtime="20201115 22:03:42.383"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:42.346" endtime="20201115 22:03:42.385"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:41.815" endtime="20201115 22:03:42.386"></status>
</kw>
<msg timestamp="20201115 22:03:42.386" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:42.410" endtime="20201115 22:03:42.441"></status>
</kw>
<msg timestamp="20201115 22:03:42.442" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:42.406" endtime="20201115 22:03:42.442"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:42.448" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:42.444" endtime="20201115 22:03:42.449"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:42.451" endtime="20201115 22:03:42.455"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:42.399" endtime="20201115 22:03:42.456"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:42.393" endtime="20201115 22:03:42.458"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:42.475" endtime="20201115 22:03:42.837"></status>
</kw>
<msg timestamp="20201115 22:03:42.844" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042297056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042323278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:42.471" endtime="20201115 22:03:42.845"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:42.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042297056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042323278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:42.846" endtime="20201115 22:03:42.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:42.866" endtime="20201115 22:03:42.873"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:42.464" endtime="20201115 22:03:42.875"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:42.459" endtime="20201115 22:03:42.877"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:42.887" level="INFO">${RESULT} = [{'time': 0.042323278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6221999999999357e-05, 'source_diff': 2.6221999999999357e-05}, {'time': 0.042727847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:42.878" endtime="20201115 22:03:42.888"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:42.919" level="INFO">${OVERHEAD} = {'time': [0.042323278, 0.042727847, 0.043133417, 0.043534139, 0.043940708, 0.044343292, 0.044749708, 0.04515225, 0.045555792, 0.045959472, 0.046364069, 0.046769569, 0.047172042, 0.047576694, 0.0479842...</msg>
<status status="PASS" starttime="20201115 22:03:42.890" endtime="20201115 22:03:42.919"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:42.930" level="INFO">NAME: 00-overhead-16-set</msg>
<status status="PASS" starttime="20201115 22:03:42.928" endtime="20201115 22:03:42.931"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:42.936" level="INFO">VALUE: [2.6221999999999357e-05, 2.6221999999999357e-05, 2.587500000000159e-05, 2.536100000000152e-05, 2.5707999999999287e-05, 2.622299999999883e-05, 2.6040999999997483e-05, 2.6207999999999787e-05, 2.5541999999996456e-05, 2.5985999999998677e-05, 2.562500000000134e-05, 2.6054999999997053e-05, 2.622299999999883e-05, 2.537500000000109e-05, 2.5860999999995082e-05, 2.5541999999996456e-05, 2.5846999999995512e-05, 2.6207999999999787e-05, 2.537500000000109e-05, 2.5721999999998857e-05, 2.581900000000331e-05, 2.5541999999996456e-05, 2.5513999999997317e-05, 2.6207999999999787e-05, 2.593099999999987e-05, 2.6221999999999357e-05, 2.566700000000005e-05, 2.60970000000027e-05, 2.5735999999998427e-05, 2.6221999999999357e-05, 2.5360999999994582e-05, 2.6056000000003465e-05, 2.5555999999996026e-05, 2.5722000000005796e-05, 2.5930000000000397e-05, 2.5707999999999287e-05, 2.622299999999883e-05, 2.55970000000022e-05, 2.538900000000066e-05, 2.588900000000116e-05, 2.587500000000159e-05, 2.6235999999998927e-05, 2.6222000000006296e-05, 2.538900000000066e-05, 2.5735999999998427e-05, 2.54169999999998e-05, 2.5541999999996456e-05, 2.5499999999997747e-05, 2.6208000000006726e-05, 2.554100000000392e-05]</msg>
<status status="PASS" starttime="20201115 22:03:42.932" endtime="20201115 22:03:42.936"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:42.921" endtime="20201115 22:03:42.938"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:42.945" endtime="20201115 22:03:42.947"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:42.953" endtime="20201115 22:03:42.975"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:42.949" endtime="20201115 22:03:42.977"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:42.940" endtime="20201115 22:03:42.979"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:42.387" endtime="20201115 22:03:42.980"></status>
</kw>
<msg timestamp="20201115 22:03:42.980" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:43.004" endtime="20201115 22:03:43.035"></status>
</kw>
<msg timestamp="20201115 22:03:43.036" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:43.000" endtime="20201115 22:03:43.036"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:43.042" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:43.038" endtime="20201115 22:03:43.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:43.044" endtime="20201115 22:03:43.048"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:42.993" endtime="20201115 22:03:43.050"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:42.987" endtime="20201115 22:03:43.051"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:43.068" endtime="20201115 22:03:43.422"></status>
</kw>
<msg timestamp="20201115 22:03:43.429" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042659306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042684875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:43.065" endtime="20201115 22:03:43.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:43.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042659306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042684875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:43.432" endtime="20201115 22:03:43.449"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:43.451" endtime="20201115 22:03:43.457"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:43.058" endtime="20201115 22:03:43.458"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:43.053" endtime="20201115 22:03:43.460"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:43.471" level="INFO">${RESULT} = [{'time': 0.042684875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5568999999996123e-05, 'source_diff': 2.5568999999996123e-05}, {'time': 0.043088542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:43.461" endtime="20201115 22:03:43.471"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:43.502" level="INFO">${OVERHEAD} = {'time': [0.042684875, 0.043088542, 0.043491, 0.043894597, 0.044302153, 0.04470475, 0.045108194, 0.045509833, 0.045915306, 0.046319819, 0.046726319, 0.047133083, 0.047538458, 0.047947, 0.048348681, 0....</msg>
<status status="PASS" starttime="20201115 22:03:43.473" endtime="20201115 22:03:43.503"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:43.514" level="INFO">NAME: 00-overhead-16-set</msg>
<status status="PASS" starttime="20201115 22:03:43.511" endtime="20201115 22:03:43.514"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:43.519" level="INFO">VALUE: [2.5568999999996123e-05, 2.5584000000002105e-05, 2.587500000000159e-05, 2.5721999999998857e-05, 2.5541999999996456e-05, 2.6194000000000217e-05, 2.6207999999999787e-05, 2.5735999999998427e-05, 2.587500000000159e-05, 2.5693999999999717e-05, 2.5707999999999287e-05, 2.5916000000000827e-05, 2.5554999999996553e-05, 2.6027999999997387e-05, 2.593099999999987e-05, 2.5500000000004686e-05, 2.5874999999994652e-05, 2.5832999999995943e-05, 2.5721999999998857e-05, 2.6056000000003465e-05, 2.5680000000000147e-05, 2.6222000000006296e-05, 2.6221999999999357e-05, 2.5554999999996553e-05, 2.536100000000152e-05, 2.6207999999999787e-05, 2.5554999999996553e-05, 2.538900000000066e-05, 2.586100000000202e-05, 2.5527999999996887e-05, 2.6207999999999787e-05, 2.537500000000109e-05, 2.587500000000159e-05, 2.537500000000109e-05, 2.619499999999969e-05, 2.6194000000000217e-05, 2.618100000000012e-05, 2.6194000000000217e-05, 2.5527999999996887e-05, 2.6221999999999357e-05, 2.587500000000159e-05, 2.5514000000004255e-05, 2.6207999999999787e-05, 2.6027999999997387e-05, 2.6236000000005866e-05, 2.570899999999876e-05, 2.6221999999999357e-05, 2.6207999999999787e-05, 2.570899999999876e-05, 2.6207999999992848e-05]</msg>
<status status="PASS" starttime="20201115 22:03:43.516" endtime="20201115 22:03:43.520"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:43.504" endtime="20201115 22:03:43.521"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:43.528" endtime="20201115 22:03:43.531"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:43.537" endtime="20201115 22:03:43.559"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:43.532" endtime="20201115 22:03:43.560"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:43.523" endtime="20201115 22:03:43.562"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:42.981" endtime="20201115 22:03:43.562"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:40.646" endtime="20201115 22:03:43.563"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:40.644" endtime="20201115 22:03:43.564"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:43.568" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:43.592" endtime="20201115 22:03:43.624"></status>
</kw>
<msg timestamp="20201115 22:03:43.625" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:43.589" endtime="20201115 22:03:43.626"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:43.632" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:43.627" endtime="20201115 22:03:43.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:43.634" endtime="20201115 22:03:43.638"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:43.581" endtime="20201115 22:03:43.639"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:43.575" endtime="20201115 22:03:43.642"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:43.659" endtime="20201115 22:03:44.012"></status>
</kw>
<msg timestamp="20201115 22:03:44.019" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047682208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047708639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:43.655" endtime="20201115 22:03:44.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:44.038" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047682208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047708639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:44.022" endtime="20201115 22:03:44.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:44.040" endtime="20201115 22:03:44.044"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:43.648" endtime="20201115 22:03:44.046"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:43.643" endtime="20201115 22:03:44.047"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:44.058" level="INFO">${RESULT} = [{'time': 0.047708639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.643100000000037e-05, 'source_diff': 2.643100000000037e-05}, {'time': 0.048140194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:44.049" endtime="20201115 22:03:44.059"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:44.090" level="INFO">${OVERHEAD} = {'time': [0.047708639, 0.048140194, 0.048568833, 0.048999458, 0.049430069, 0.049861764, 0.050293347, 0.050728069, 0.051160639, 0.051594153, 0.052026792, 0.052457431, 0.052885931, 0.053320597, 0.053751...</msg>
<status status="PASS" starttime="20201115 22:03:44.060" endtime="20201115 22:03:44.090"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:44.101" level="INFO">NAME: 00-overhead-17-set</msg>
<status status="PASS" starttime="20201115 22:03:44.099" endtime="20201115 22:03:44.102"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:44.107" level="INFO">VALUE: [2.643100000000037e-05, 2.690199999999532e-05, 2.6402000000001757e-05, 2.706900000000456e-05, 2.6735999999999427e-05, 2.6250000000005436e-05, 2.6721999999999857e-05, 2.6916000000001827e-05, 2.6708000000000287e-05, 2.7083999999996666e-05, 2.69170000000013e-05, 2.6569999999996596e-05, 2.6416999999993862e-05, 2.6568999999997123e-05, 2.640300000000123e-05, 2.6291999999997206e-05, 2.641599999999439e-05, 2.6554999999997553e-05, 2.6388999999994722e-05, 2.640300000000123e-05, 2.7068999999997623e-05, 2.690300000000173e-05, 2.6542000000004395e-05, 2.690300000000173e-05, 2.7069999999997096e-05, 2.6249999999998497e-05, 2.7054999999998053e-05, 2.7069999999997096e-05, 2.672299999999933e-05, 2.6888999999995222e-05, 2.6762999999999093e-05, 2.6221999999999357e-05, 2.638900000000166e-05, 2.690300000000173e-05, 2.65970000000032e-05, 2.638900000000166e-05, 2.6388999999987783e-05, 2.6221999999992418e-05, 2.656900000000406e-05, 2.6846999999996513e-05, 2.6388000000002187e-05, 2.6722000000006796e-05, 2.6235999999998927e-05, 2.7054999999998053e-05, 2.6402999999994292e-05, 2.638900000000166e-05, 2.6556000000010904e-05, 2.6568999999990184e-05, 2.6957999999993598e-05, 2.656900000000406e-05]</msg>
<status status="PASS" starttime="20201115 22:03:44.103" endtime="20201115 22:03:44.108"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:44.092" endtime="20201115 22:03:44.109"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:44.116" endtime="20201115 22:03:44.118"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:44.124" endtime="20201115 22:03:44.146"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:44.120" endtime="20201115 22:03:44.148"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:44.111" endtime="20201115 22:03:44.150"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:43.570" endtime="20201115 22:03:44.150"></status>
</kw>
<msg timestamp="20201115 22:03:44.151" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:44.174" endtime="20201115 22:03:44.206"></status>
</kw>
<msg timestamp="20201115 22:03:44.208" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:44.171" endtime="20201115 22:03:44.208"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:44.215" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:44.210" endtime="20201115 22:03:44.216"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:44.217" endtime="20201115 22:03:44.221"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:44.164" endtime="20201115 22:03:44.223"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:44.158" endtime="20201115 22:03:44.224"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:44.242" endtime="20201115 22:03:44.595"></status>
</kw>
<msg timestamp="20201115 22:03:44.602" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042124903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042151806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:44.238" endtime="20201115 22:03:44.602"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:44.620" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042124903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042151806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:44.604" endtime="20201115 22:03:44.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:44.623" endtime="20201115 22:03:44.628"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:44.230" endtime="20201115 22:03:44.630"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:44.226" endtime="20201115 22:03:44.631"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:44.643" level="INFO">${RESULT} = [{'time': 0.042151806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.690300000000173e-05, 'source_diff': 2.690300000000173e-05}, {'time': 0.042583278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:44.633" endtime="20201115 22:03:44.643"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:44.674" level="INFO">${OVERHEAD} = {'time': [0.042151806, 0.042583278, 0.043015931, 0.043447528, 0.043882111, 0.044315764, 0.04474925, 0.045176819, 0.045607375, 0.046036958, 0.046466653, 0.046901236, 0.047331861, 0.047765417, 0.0481970...</msg>
<status status="PASS" starttime="20201115 22:03:44.645" endtime="20201115 22:03:44.674"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:44.685" level="INFO">NAME: 00-overhead-17-set</msg>
<status status="PASS" starttime="20201115 22:03:44.683" endtime="20201115 22:03:44.686"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:44.691" level="INFO">VALUE: [2.690300000000173e-05, 2.6721999999999857e-05, 2.67369999999989e-05, 2.6235999999998927e-05, 2.7041999999997957e-05, 2.7055999999997526e-05, 2.6568999999997123e-05, 2.6554999999997553e-05, 2.6721999999999857e-05, 2.656900000000406e-05, 2.7069999999997096e-05, 2.690300000000173e-05, 2.6250000000005436e-05, 2.64170000000008e-05, 2.64170000000008e-05, 2.6570000000003535e-05, 2.637500000000209e-05, 2.6207999999999787e-05, 2.6721999999999857e-05, 2.6541999999997457e-05, 2.6249999999998497e-05, 2.7082999999997193e-05, 2.7124999999995902e-05, 2.6554999999997553e-05, 2.6374999999995152e-05, 2.6249999999998497e-05, 2.690300000000173e-05, 2.6874999999995652e-05, 2.690300000000173e-05, 2.7055000000004992e-05, 2.6749999999998997e-05, 2.6235999999998927e-05, 2.6902999999994792e-05, 2.7069999999997096e-05, 2.64170000000008e-05, 2.6777999999998137e-05, 2.6221999999999357e-05, 2.6249999999998497e-05, 2.6235999999998927e-05, 2.656900000000406e-05, 2.6444000000000467e-05, 2.6235999999998927e-05, 2.6763999999998567e-05, 2.6582999999996693e-05, 2.615300000000098e-05, 2.6568999999997123e-05, 2.688900000000216e-05, 2.640300000000123e-05, 2.6958000000007476e-05, 2.655500000001143e-05]</msg>
<status status="PASS" starttime="20201115 22:03:44.688" endtime="20201115 22:03:44.692"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:44.676" endtime="20201115 22:03:44.694"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:44.700" endtime="20201115 22:03:44.703"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:44.709" endtime="20201115 22:03:44.731"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:44.704" endtime="20201115 22:03:44.732"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:44.695" endtime="20201115 22:03:44.734"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:44.152" endtime="20201115 22:03:44.735"></status>
</kw>
<msg timestamp="20201115 22:03:44.735" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:44.764" endtime="20201115 22:03:44.796"></status>
</kw>
<msg timestamp="20201115 22:03:44.797" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:44.761" endtime="20201115 22:03:44.798"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:44.804" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:44.800" endtime="20201115 22:03:44.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:44.806" endtime="20201115 22:03:44.810"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:44.748" endtime="20201115 22:03:44.812"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:44.742" endtime="20201115 22:03:44.813"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:44.830" endtime="20201115 22:03:45.182"></status>
</kw>
<msg timestamp="20201115 22:03:45.190" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047693833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047720236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:44.827" endtime="20201115 22:03:45.190"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:45.208" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047693833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047720236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:45.192" endtime="20201115 22:03:45.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:45.210" endtime="20201115 22:03:45.218"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:44.819" endtime="20201115 22:03:45.220"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:44.814" endtime="20201115 22:03:45.221"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:45.232" level="INFO">${RESULT} = [{'time': 0.047720236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.640300000000123e-05, 'source_diff': 2.640300000000123e-05}, {'time': 0.048154847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:45.223" endtime="20201115 22:03:45.232"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:45.263" level="INFO">${OVERHEAD} = {'time': [0.047720236, 0.048154847, 0.048585403, 0.049016, 0.049445514, 0.049875028, 0.05030875, 0.050738236, 0.051170875, 0.0516035, 0.052032931, 0.052465597, 0.052895111, 0.053329583, 0.053762222, 0...</msg>
<status status="PASS" starttime="20201115 22:03:45.234" endtime="20201115 22:03:45.264"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:45.275" level="INFO">NAME: 00-overhead-17-set</msg>
<status status="PASS" starttime="20201115 22:03:45.273" endtime="20201115 22:03:45.276"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:45.281" level="INFO">VALUE: [2.640300000000123e-05, 2.7082999999997193e-05, 2.6735999999999427e-05, 2.6402999999994292e-05, 2.6721999999999857e-05, 2.688900000000216e-05, 2.6763999999998567e-05, 2.6846999999996513e-05, 2.6708000000000287e-05, 2.6902999999994792e-05, 2.672299999999933e-05, 2.6221999999999357e-05, 2.6958000000000537e-05, 2.6902000000002257e-05, 2.638900000000166e-05, 2.6249999999998497e-05, 2.6735999999999427e-05, 2.6222000000006296e-05, 2.638900000000166e-05, 2.708300000000413e-05, 2.6735999999999427e-05, 2.6860999999996082e-05, 2.6235999999998927e-05, 2.6749999999998997e-05, 2.638900000000166e-05, 2.638900000000166e-05, 2.690300000000173e-05, 2.6221999999999357e-05, 2.7069999999997096e-05, 2.69170000000013e-05, 2.7054999999998053e-05, 2.687500000000259e-05, 2.6554999999997553e-05, 2.6471999999999607e-05, 2.7083999999996666e-05, 2.6874999999995652e-05, 2.6235999999998927e-05, 2.6570000000003535e-05, 2.6555999999997026e-05, 2.706900000000456e-05, 2.7042000000004895e-05, 2.6542000000004395e-05, 2.670899999999976e-05, 2.638900000000166e-05, 2.6735999999999427e-05, 2.7082999999997193e-05, 2.6221999999992418e-05, 2.6554999999997553e-05, 2.6250000000005436e-05, 2.7070000000004035e-05]</msg>
<status status="PASS" starttime="20201115 22:03:45.278" endtime="20201115 22:03:45.282"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:45.265" endtime="20201115 22:03:45.284"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:45.291" endtime="20201115 22:03:45.294"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:45.300" endtime="20201115 22:03:45.322"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:45.295" endtime="20201115 22:03:45.324"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:45.286" endtime="20201115 22:03:45.325"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:44.736" endtime="20201115 22:03:45.327"></status>
</kw>
<msg timestamp="20201115 22:03:45.327" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:45.351" endtime="20201115 22:03:45.383"></status>
</kw>
<msg timestamp="20201115 22:03:45.384" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:45.348" endtime="20201115 22:03:45.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:45.390" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:45.386" endtime="20201115 22:03:45.391"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:45.393" endtime="20201115 22:03:45.397"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:45.340" endtime="20201115 22:03:45.398"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:45.334" endtime="20201115 22:03:45.400"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:45.417" endtime="20201115 22:03:45.770"></status>
</kw>
<msg timestamp="20201115 22:03:45.777" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043081861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043108347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:45.414" endtime="20201115 22:03:45.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:45.795" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043081861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043108347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:45.779" endtime="20201115 22:03:45.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:45.798" endtime="20201115 22:03:45.803"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:45.406" endtime="20201115 22:03:45.805"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:45.401" endtime="20201115 22:03:45.807"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:45.817" level="INFO">${RESULT} = [{'time': 0.043108347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6485999999999177e-05, 'source_diff': 2.6485999999999177e-05}, {'time': 0.043539958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:45.808" endtime="20201115 22:03:45.818"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:45.849" level="INFO">${OVERHEAD} = {'time': [0.043108347, 0.043539958, 0.043974597, 0.044406194, 0.044838708, 0.045272125, 0.045699806, 0.046128319, 0.046561764, 0.046995292, 0.047425917, 0.047859486, 0.048291931, 0.048720569, 0.049150...</msg>
<status status="PASS" starttime="20201115 22:03:45.820" endtime="20201115 22:03:45.849"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:45.860" level="INFO">NAME: 00-overhead-17-set</msg>
<status status="PASS" starttime="20201115 22:03:45.858" endtime="20201115 22:03:45.861"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:45.866" level="INFO">VALUE: [2.6485999999999177e-05, 2.7054999999998053e-05, 2.6249999999998497e-05, 2.6721999999999857e-05, 2.6471999999999607e-05, 2.638900000000166e-05, 2.6542000000004395e-05, 2.7068999999997623e-05, 2.6207999999999787e-05, 2.64170000000008e-05, 2.672299999999933e-05, 2.7068999999997623e-05, 2.62090000000062e-05, 2.688799999999575e-05, 2.64170000000008e-05, 2.6721999999999857e-05, 2.7042000000004895e-05, 2.6721999999999857e-05, 2.655500000000449e-05, 2.7041999999997957e-05, 2.7084000000003605e-05, 2.6235999999998927e-05, 2.6749999999998997e-05, 2.6708000000000287e-05, 2.6235999999998927e-05, 2.706900000000456e-05, 2.6902999999994792e-05, 2.6221999999999357e-05, 2.6222000000006296e-05, 2.6568999999997123e-05, 2.6402000000001757e-05, 2.6736000000006366e-05, 2.7056000000004465e-05, 2.6207999999999787e-05, 2.6235999999998927e-05, 2.6721999999999857e-05, 2.6249999999998497e-05, 2.6263999999998067e-05, 2.6179999999993708e-05, 2.637500000000209e-05, 2.6249999999998497e-05, 2.7013999999998817e-05, 2.6555999999997026e-05, 2.6652999999994542e-05, 2.7040999999998483e-05, 2.7041999999997957e-05, 2.6584000000010044e-05, 2.6708000000000287e-05, 2.6318999999996873e-05, 2.7042000000004895e-05]</msg>
<status status="PASS" starttime="20201115 22:03:45.862" endtime="20201115 22:03:45.867"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:45.851" endtime="20201115 22:03:45.868"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:45.875" endtime="20201115 22:03:45.878"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:45.884" endtime="20201115 22:03:45.906"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:45.880" endtime="20201115 22:03:45.908"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:45.871" endtime="20201115 22:03:45.909"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:45.328" endtime="20201115 22:03:45.910"></status>
</kw>
<msg timestamp="20201115 22:03:45.911" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:45.934" endtime="20201115 22:03:45.966"></status>
</kw>
<msg timestamp="20201115 22:03:45.967" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:45.931" endtime="20201115 22:03:45.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:45.974" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:45.970" endtime="20201115 22:03:45.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:45.976" endtime="20201115 22:03:45.980"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:45.923" endtime="20201115 22:03:45.981"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:45.917" endtime="20201115 22:03:45.983"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:46.000" endtime="20201115 22:03:46.353"></status>
</kw>
<msg timestamp="20201115 22:03:46.360" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042131417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042158319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:45.997" endtime="20201115 22:03:46.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:46.379" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042131417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042158319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:46.362" endtime="20201115 22:03:46.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:46.381" endtime="20201115 22:03:46.387"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:45.989" endtime="20201115 22:03:46.388"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:45.984" endtime="20201115 22:03:46.390"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:46.401" level="INFO">${RESULT} = [{'time': 0.042158319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6902000000002257e-05, 'source_diff': 2.6902000000002257e-05}, {'time': 0.042591861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:46.392" endtime="20201115 22:03:46.401"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:46.432" level="INFO">${OVERHEAD} = {'time': [0.042158319, 0.042591861, 0.043024417, 0.043452931, 0.043884444, 0.044313972, 0.044743556, 0.045176292, 0.04560975, 0.046039389, 0.046467875, 0.046898306, 0.047329903, 0.047759514, 0.0481889...</msg>
<status status="PASS" starttime="20201115 22:03:46.403" endtime="20201115 22:03:46.433"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:46.444" level="INFO">NAME: 00-overhead-17-set</msg>
<status status="PASS" starttime="20201115 22:03:46.441" endtime="20201115 22:03:46.445"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:46.449" level="INFO">VALUE: [2.6902000000002257e-05, 2.7055000000004992e-05, 2.64170000000008e-05, 2.672299999999933e-05, 2.656900000000406e-05, 2.6735999999999427e-05, 2.6416999999993862e-05, 2.6569999999996596e-05, 2.6888999999995222e-05, 2.690300000000173e-05, 2.6555999999997026e-05, 2.666700000000105e-05, 2.6735999999999427e-05, 2.687500000000259e-05, 2.6902999999994792e-05, 2.6416000000001327e-05, 2.6221999999999357e-05, 2.6569999999996596e-05, 2.64170000000008e-05, 2.6388000000002187e-05, 2.6750000000005936e-05, 2.687500000000259e-05, 2.6542000000004395e-05, 2.640199999999482e-05, 2.6735999999999427e-05, 2.7041999999997957e-05, 2.7026999999998913e-05, 2.640300000000123e-05, 2.7055999999997526e-05, 2.6555999999997026e-05, 2.6735999999999427e-05, 2.6249999999998497e-05, 2.6221999999999357e-05, 2.6749999999998997e-05, 2.6721999999999857e-05, 2.637500000000209e-05, 2.688900000000216e-05, 2.6735999999999427e-05, 2.6290999999997733e-05, 2.640300000000123e-05, 2.6250000000005436e-05, 2.6235999999998927e-05, 2.6388000000002187e-05, 2.661100000000277e-05, 2.688900000000216e-05, 2.6749999999998997e-05, 2.6570000000003535e-05, 2.622299999999883e-05, 2.638900000000166e-05, 2.6402999999994292e-05]</msg>
<status status="PASS" starttime="20201115 22:03:46.446" endtime="20201115 22:03:46.451"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:46.434" endtime="20201115 22:03:46.453"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:46.459" endtime="20201115 22:03:46.462"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:46.468" endtime="20201115 22:03:46.490"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:46.463" endtime="20201115 22:03:46.491"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:46.455" endtime="20201115 22:03:46.493"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:45.912" endtime="20201115 22:03:46.494"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:43.566" endtime="20201115 22:03:46.494"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:43.564" endtime="20201115 22:03:46.495"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:46.500" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:46.523" endtime="20201115 22:03:46.557"></status>
</kw>
<msg timestamp="20201115 22:03:46.558" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:46.520" endtime="20201115 22:03:46.558"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:46.564" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:46.560" endtime="20201115 22:03:46.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:46.566" endtime="20201115 22:03:46.570"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:46.512" endtime="20201115 22:03:46.572"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:46.506" endtime="20201115 22:03:46.573"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:46.590" endtime="20201115 22:03:46.944"></status>
</kw>
<msg timestamp="20201115 22:03:46.951" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047705792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047733222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:46.587" endtime="20201115 22:03:46.952"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:46.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047705792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047733222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:46.954" endtime="20201115 22:03:46.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:46.972" endtime="20201115 22:03:46.976"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:46.580" endtime="20201115 22:03:46.978"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:46.575" endtime="20201115 22:03:46.979"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:46.990" level="INFO">${RESULT} = [{'time': 0.047733222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7430000000001897e-05, 'source_diff': 2.7430000000001897e-05}, {'time': 0.048188819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:46.981" endtime="20201115 22:03:46.991"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:47.023" level="INFO">${OVERHEAD} = {'time': [0.047733222, 0.048188819, 0.048649639, 0.04911225, 0.049571889, 0.050028569, 0.050486306, 0.050942986, 0.051399625, 0.05185825, 0.052315972, 0.052776583, 0.053238181, 0.053696694, 0.05415843...</msg>
<status status="PASS" starttime="20201115 22:03:46.992" endtime="20201115 22:03:47.023"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:47.034" level="INFO">NAME: 00-overhead-18-set</msg>
<status status="PASS" starttime="20201115 22:03:47.032" endtime="20201115 22:03:47.035"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:47.040" level="INFO">VALUE: [2.7430000000001897e-05, 2.75970000000042e-05, 2.7805999999998277e-05, 2.7749999999999997e-05, 2.744500000000094e-05, 2.7138000000002938e-05, 2.772300000000033e-05, 2.756900000000506e-05, 2.7374999999996152e-05, 2.7056000000004465e-05, 2.7055000000004992e-05, 2.7819000000005312e-05, 2.74170000000018e-05, 2.7250000000006436e-05, 2.7597999999996736e-05, 2.75970000000042e-05, 2.7430000000001897e-05, 2.70970000000037e-05, 2.7582999999997693e-05, 2.70970000000037e-05, 2.74170000000018e-05, 2.738900000000266e-05, 2.743100000000137e-05, 2.7082999999997193e-05, 2.7277999999998637e-05, 2.7430000000001897e-05, 2.7416999999994862e-05, 2.7444000000001467e-05, 2.790300000000273e-05, 2.7263999999999067e-05, 2.708300000000413e-05, 2.708300000000413e-05, 2.758300000000463e-05, 2.7402999999995292e-05, 2.793100000000881e-05, 2.7444000000001467e-05, 2.7263999999999067e-05, 2.79170000000023e-05, 2.70970000000037e-05, 2.7444000000001467e-05, 2.7235999999999927e-05, 2.708300000001107e-05, 2.7054999999998053e-05, 2.7736000000000427e-05, 2.743100000000831e-05, 2.7444000000001467e-05, 2.7402999999995292e-05, 2.794500000000144e-05, 2.7763999999999567e-05, 2.7250000000006436e-05]</msg>
<status status="PASS" starttime="20201115 22:03:47.036" endtime="20201115 22:03:47.041"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:47.025" endtime="20201115 22:03:47.043"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:47.050" endtime="20201115 22:03:47.052"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:47.058" endtime="20201115 22:03:47.080"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:47.054" endtime="20201115 22:03:47.082"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:47.045" endtime="20201115 22:03:47.083"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:46.501" endtime="20201115 22:03:47.084"></status>
</kw>
<msg timestamp="20201115 22:03:47.085" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:47.108" endtime="20201115 22:03:47.142"></status>
</kw>
<msg timestamp="20201115 22:03:47.143" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:47.105" endtime="20201115 22:03:47.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:47.150" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:47.145" endtime="20201115 22:03:47.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:47.152" endtime="20201115 22:03:47.156"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:47.098" endtime="20201115 22:03:47.157"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:47.091" endtime="20201115 22:03:47.159"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:47.176" endtime="20201115 22:03:47.537"></status>
</kw>
<msg timestamp="20201115 22:03:47.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042291389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042319306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:47.172" endtime="20201115 22:03:47.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:47.563" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042291389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042319306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:47.547" endtime="20201115 22:03:47.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:47.566" endtime="20201115 22:03:47.573"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:47.165" endtime="20201115 22:03:47.575"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:47.160" endtime="20201115 22:03:47.577"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:47.587" level="INFO">${RESULT} = [{'time': 0.042319306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.79170000000023e-05, 'source_diff': 2.79170000000023e-05}, {'time': 0.042780819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:03:47.578" endtime="20201115 22:03:47.588"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:47.619" level="INFO">${OVERHEAD} = {'time': [0.042319306, 0.042780819, 0.043239417, 0.043697167, 0.044154819, 0.044611278, 0.045071875, 0.045530417, 0.045986069, 0.046445597, 0.046903097, 0.047359667, 0.047818181, 0.048274889, 0.048732...</msg>
<status status="PASS" starttime="20201115 22:03:47.589" endtime="20201115 22:03:47.620"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:47.631" level="INFO">NAME: 00-overhead-18-set</msg>
<status status="PASS" starttime="20201115 22:03:47.628" endtime="20201115 22:03:47.631"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:47.636" level="INFO">VALUE: [2.79170000000023e-05, 2.7540999999998983e-05, 2.7749999999999997e-05, 2.763900000000291e-05, 2.7986000000000677e-05, 2.7416999999994862e-05, 2.794399999999503e-05, 2.722299999999983e-05, 2.7235999999999927e-05, 2.7749999999999997e-05, 2.7249999999999497e-05, 2.7056000000004465e-05, 2.744500000000094e-05, 2.737500000000309e-05, 2.74170000000018e-05, 2.7596999999997263e-05, 2.7582999999997693e-05, 2.7235999999999927e-05, 2.7570000000004535e-05, 2.7916999999995362e-05, 2.7596999999997263e-05, 2.7763999999999567e-05, 2.7791999999998707e-05, 2.7749999999999997e-05, 2.7944000000001967e-05, 2.7888999999996222e-05, 2.74170000000018e-05, 2.7416000000002327e-05, 2.74170000000018e-05, 2.738900000000266e-05, 2.7916999999995362e-05, 2.7902999999995792e-05, 2.7930000000002397e-05, 2.7084000000003605e-05, 2.708300000000413e-05, 2.7278000000005576e-05, 2.7763999999999567e-05, 2.7097999999996236e-05, 2.740300000000223e-05, 2.706900000000456e-05, 2.7582999999997693e-05, 2.7096999999996763e-05, 2.7249999999999497e-05, 2.7402000000002757e-05, 2.7096999999996763e-05, 2.7416000000002327e-05, 2.7082999999997193e-05, 2.7555999999998027e-05, 2.74170000000018e-05, 2.7444000000001467e-05]</msg>
<status status="PASS" starttime="20201115 22:03:47.633" endtime="20201115 22:03:47.637"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:47.621" endtime="20201115 22:03:47.639"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:47.645" endtime="20201115 22:03:47.648"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:47.654" endtime="20201115 22:03:47.676"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:47.650" endtime="20201115 22:03:47.678"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:47.641" endtime="20201115 22:03:47.680"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:47.086" endtime="20201115 22:03:47.680"></status>
</kw>
<msg timestamp="20201115 22:03:47.681" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:47.704" endtime="20201115 22:03:47.737"></status>
</kw>
<msg timestamp="20201115 22:03:47.738" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:47.701" endtime="20201115 22:03:47.739"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:47.745" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:47.741" endtime="20201115 22:03:47.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:47.747" endtime="20201115 22:03:47.751"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:47.694" endtime="20201115 22:03:47.753"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:47.688" endtime="20201115 22:03:47.754"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:47.771" endtime="20201115 22:03:48.125"></status>
</kw>
<msg timestamp="20201115 22:03:48.132" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042449556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042477139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:47.768" endtime="20201115 22:03:48.132"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:48.150" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042449556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042477139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:48.134" endtime="20201115 22:03:48.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:48.153" endtime="20201115 22:03:48.158"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:47.760" endtime="20201115 22:03:48.160"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:47.755" endtime="20201115 22:03:48.161"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:48.172" level="INFO">${RESULT} = [{'time': 0.042477139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7582999999997693e-05, 'source_diff': 2.7582999999997693e-05}, {'time': 0.042939736, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:48.163" endtime="20201115 22:03:48.173"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:48.204" level="INFO">${OVERHEAD} = {'time': [0.042477139, 0.042939736, 0.043399194, 0.043855722, 0.044311306, 0.044772917, 0.045233347, 0.045691875, 0.046150458, 0.046610097, 0.047069667, 0.047531236, 0.047990944, 0.048451444, 0.048912...</msg>
<status status="PASS" starttime="20201115 22:03:48.175" endtime="20201115 22:03:48.204"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:48.215" level="INFO">NAME: 00-overhead-18-set</msg>
<status status="PASS" starttime="20201115 22:03:48.213" endtime="20201115 22:03:48.216"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:48.220" level="INFO">VALUE: [2.7582999999997693e-05, 2.7958000000001537e-05, 2.7235999999999927e-05, 2.7430000000001897e-05, 2.7292000000005145e-05, 2.740300000000223e-05, 2.7568999999998123e-05, 2.7222000000000357e-05, 2.7749999999999997e-05, 2.7235999999999927e-05, 2.793100000000187e-05, 2.6999999999999247e-05, 2.7249999999999497e-05, 2.7416000000002327e-05, 2.7054999999998053e-05, 2.7806000000005215e-05, 2.7249999999999497e-05, 2.7568999999998123e-05, 2.70970000000037e-05, 2.7582999999997693e-05, 2.722299999999983e-05, 2.7584000000004105e-05, 2.7749999999999997e-05, 2.8000000000000247e-05, 2.7583999999997166e-05, 2.79170000000023e-05, 2.7056000000004465e-05, 2.7582999999997693e-05, 2.7763999999999567e-05, 2.7249999999999497e-05, 2.7916999999995362e-05, 2.7596999999997263e-05, 2.7430000000001897e-05, 2.706900000000456e-05, 2.7902999999995792e-05, 2.7749999999999997e-05, 2.7124999999995902e-05, 2.7235999999999927e-05, 2.7068999999997623e-05, 2.7708999999993822e-05, 2.7070000000004035e-05, 2.7458000000001037e-05, 2.7568999999998123e-05, 2.720900000000026e-05, 2.758300000001157e-05, 2.79170000000023e-05, 2.790300000000967e-05, 2.7986000000007616e-05, 2.7570000000004535e-05, 2.74170000000018e-05]</msg>
<status status="PASS" starttime="20201115 22:03:48.217" endtime="20201115 22:03:48.221"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:48.206" endtime="20201115 22:03:48.223"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:48.229" endtime="20201115 22:03:48.232"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:48.238" endtime="20201115 22:03:48.260"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:48.233" endtime="20201115 22:03:48.262"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:48.225" endtime="20201115 22:03:48.263"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:47.682" endtime="20201115 22:03:48.264"></status>
</kw>
<msg timestamp="20201115 22:03:48.264" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:48.288" endtime="20201115 22:03:48.321"></status>
</kw>
<msg timestamp="20201115 22:03:48.322" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:48.284" endtime="20201115 22:03:48.322"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:48.328" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:48.324" endtime="20201115 22:03:48.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:48.330" endtime="20201115 22:03:48.334"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:48.277" endtime="20201115 22:03:48.336"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:48.271" endtime="20201115 22:03:48.337"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:48.354" endtime="20201115 22:03:48.708"></status>
</kw>
<msg timestamp="20201115 22:03:48.715" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041849194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041876208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:48.351" endtime="20201115 22:03:48.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:48.733" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041849194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041876208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:48.718" endtime="20201115 22:03:48.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:48.736" endtime="20201115 22:03:48.742"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:48.344" endtime="20201115 22:03:48.744"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:48.339" endtime="20201115 22:03:48.745"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:48.756" level="INFO">${RESULT} = [{'time': 0.041876208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7013999999998817e-05, 'source_diff': 2.7013999999998817e-05}, {'time': 0.042337931, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:48.747" endtime="20201115 22:03:48.756"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:48.787" level="INFO">${OVERHEAD} = {'time': [0.041876208, 0.042337931, 0.042796514, 0.043253083, 0.043714611, 0.044171403, 0.044630028, 0.045090639, 0.045552333, 0.046014069, 0.046470708, 0.046932444, 0.047392097, 0.047847681, 0.048305...</msg>
<status status="PASS" starttime="20201115 22:03:48.758" endtime="20201115 22:03:48.787"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:48.798" level="INFO">NAME: 00-overhead-18-set</msg>
<status status="PASS" starttime="20201115 22:03:48.796" endtime="20201115 22:03:48.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:48.803" level="INFO">VALUE: [2.7013999999998817e-05, 2.7584000000004105e-05, 2.70970000000037e-05, 2.7818999999998373e-05, 2.7930000000002397e-05, 2.7083999999996666e-05, 2.7278000000005576e-05, 2.758300000000463e-05, 2.7430000000001897e-05, 2.742999999999496e-05, 2.7082999999997193e-05, 2.7596999999997263e-05, 2.7930000000002397e-05, 2.7084000000003605e-05, 2.7624999999996402e-05, 2.744399999999453e-05, 2.7097999999996236e-05, 2.7402999999995292e-05, 2.7582999999997693e-05, 2.7596999999997263e-05, 2.7763000000000093e-05, 2.7791999999998707e-05, 2.7250000000006436e-05, 2.790300000000273e-05, 2.793100000000187e-05, 2.79170000000023e-05, 2.7444000000001467e-05, 2.7722000000000857e-05, 2.7736000000000427e-05, 2.758300000000463e-05, 2.7276999999999163e-05, 2.7624999999996402e-05, 2.7930000000002397e-05, 2.7944000000001967e-05, 2.7082999999997193e-05, 2.712500000000284e-05, 2.7263999999999067e-05, 2.742999999999496e-05, 2.7944999999994502e-05, 2.7582999999997693e-05, 2.744500000000094e-05, 2.791599999999589e-05, 2.7930000000002397e-05, 2.793100000000187e-05, 2.7582999999997693e-05, 2.7472000000000607e-05, 2.74170000000018e-05, 2.79170000000023e-05, 2.79170000000023e-05, 2.75970000000042e-05]</msg>
<status status="PASS" starttime="20201115 22:03:48.800" endtime="20201115 22:03:48.804"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:48.788" endtime="20201115 22:03:48.806"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:48.812" endtime="20201115 22:03:48.815"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:48.821" endtime="20201115 22:03:48.843"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:48.816" endtime="20201115 22:03:48.845"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:48.808" endtime="20201115 22:03:48.846"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:48.266" endtime="20201115 22:03:48.847"></status>
</kw>
<msg timestamp="20201115 22:03:48.847" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:48.870" endtime="20201115 22:03:48.903"></status>
</kw>
<msg timestamp="20201115 22:03:48.905" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:48.867" endtime="20201115 22:03:48.905"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:48.911" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:48.907" endtime="20201115 22:03:48.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:48.913" endtime="20201115 22:03:48.917"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:48.860" endtime="20201115 22:03:48.919"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:48.854" endtime="20201115 22:03:48.920"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:48.937" endtime="20201115 22:03:49.291"></status>
</kw>
<msg timestamp="20201115 22:03:49.298" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041873556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041900986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:48.934" endtime="20201115 22:03:49.299"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:49.317" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041873556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041900986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:49.301" endtime="20201115 22:03:49.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:49.320" endtime="20201115 22:03:49.325"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:48.926" endtime="20201115 22:03:49.327"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:48.921" endtime="20201115 22:03:49.328"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:49.339" level="INFO">${RESULT} = [{'time': 0.041900986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7430000000001897e-05, 'source_diff': 2.7430000000001897e-05}, {'time': 0.042363542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:49.330" endtime="20201115 22:03:49.339"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:49.370" level="INFO">${OVERHEAD} = {'time': [0.041900986, 0.042363542, 0.042822333, 0.043280028, 0.043736667, 0.044193333, 0.044654083, 0.04511075, 0.045570458, 0.046030097, 0.046489639, 0.04694525, 0.047403014, 0.047860542, 0.04831627...</msg>
<status status="PASS" starttime="20201115 22:03:49.341" endtime="20201115 22:03:49.370"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:49.381" level="INFO">NAME: 00-overhead-18-set</msg>
<status status="PASS" starttime="20201115 22:03:49.379" endtime="20201115 22:03:49.382"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:49.386" level="INFO">VALUE: [2.7430000000001897e-05, 2.7041999999997957e-05, 2.7249999999999497e-05, 2.7096999999996763e-05, 2.74170000000018e-05, 2.7902000000003258e-05, 2.7596999999997263e-05, 2.7763999999999567e-05, 2.708300000000413e-05, 2.7554999999998553e-05, 2.7235999999999927e-05, 2.7582999999997693e-05, 2.79170000000023e-05, 2.74170000000018e-05, 2.7583999999997166e-05, 2.719500000000069e-05, 2.7555999999998027e-05, 2.7444000000001467e-05, 2.7902999999995792e-05, 2.7902999999995792e-05, 2.7278000000005576e-05, 2.7749999999999997e-05, 2.7596999999997263e-05, 2.70970000000037e-05, 2.7570000000004535e-05, 2.7736000000000427e-05, 2.7305999999997776e-05, 2.784700000000445e-05, 2.7249999999999497e-05, 2.742999999999496e-05, 2.7986000000000677e-05, 2.743100000000137e-05, 2.7084000000003605e-05, 2.737500000000309e-05, 2.7276999999999163e-05, 2.740300000000223e-05, 2.7249999999999497e-05, 2.738900000000266e-05, 2.7416999999994862e-05, 2.7570000000004535e-05, 2.7916999999995362e-05, 2.7777999999999137e-05, 2.7249999999999497e-05, 2.7582999999997693e-05, 2.7749999999999997e-05, 2.7610999999996833e-05, 2.7596999999990324e-05, 2.7070000000004035e-05, 2.758300000001157e-05, 2.7082999999997193e-05]</msg>
<status status="PASS" starttime="20201115 22:03:49.383" endtime="20201115 22:03:49.387"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:49.372" endtime="20201115 22:03:49.389"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:49.395" endtime="20201115 22:03:49.398"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:49.404" endtime="20201115 22:03:49.427"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:49.399" endtime="20201115 22:03:49.428"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:49.391" endtime="20201115 22:03:49.430"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:48.848" endtime="20201115 22:03:49.431"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:46.497" endtime="20201115 22:03:49.431"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:46.496" endtime="20201115 22:03:49.432"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:49.437" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:49.461" endtime="20201115 22:03:49.495"></status>
</kw>
<msg timestamp="20201115 22:03:49.496" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:49.457" endtime="20201115 22:03:49.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:49.503" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:49.499" endtime="20201115 22:03:49.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:49.505" endtime="20201115 22:03:49.509"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:49.450" endtime="20201115 22:03:49.510"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:49.444" endtime="20201115 22:03:49.513"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:49.529" endtime="20201115 22:03:49.887"></status>
</kw>
<msg timestamp="20201115 22:03:49.894" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04843525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048463861, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:03:49.526" endtime="20201115 22:03:49.894"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:49.912" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04843525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048463861, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:03:49.896" endtime="20201115 22:03:49.913"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:49.915" endtime="20201115 22:03:49.919"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:49.519" endtime="20201115 22:03:49.920"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:49.514" endtime="20201115 22:03:49.922"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:49.932" level="INFO">${RESULT} = [{'time': 0.048463861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8610999999997833e-05, 'source_diff': 2.8610999999997833e-05}, {'time': 0.048952611, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:49.923" endtime="20201115 22:03:49.933"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:49.963" level="INFO">${OVERHEAD} = {'time': [0.048463861, 0.048952611, 0.049442361, 0.049928097, 0.050418986, 0.050908625, 0.051395514, 0.051883278, 0.052368264, 0.052853944, 0.053340736, 0.053830472, 0.054319333, 0.054807111, 0.055292...</msg>
<status status="PASS" starttime="20201115 22:03:49.934" endtime="20201115 22:03:49.964"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:49.975" level="INFO">NAME: 00-overhead-19-set</msg>
<status status="PASS" starttime="20201115 22:03:49.972" endtime="20201115 22:03:49.975"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:49.980" level="INFO">VALUE: [2.8610999999997833e-05, 2.8778000000000137e-05, 2.8124999999996902e-05, 2.8124999999996902e-05, 2.842999999999596e-05, 2.8110999999997333e-05, 2.8764000000000567e-05, 2.8291999999999207e-05, 2.8027999999999387e-05, 2.8777000000000663e-05, 2.8804999999999803e-05, 2.8471999999994668e-05, 2.8791000000000233e-05, 2.7958000000001537e-05, 2.792999999999546e-05, 2.813900000000341e-05, 2.84170000000028e-05, 2.8750000000000997e-05, 2.8722000000001857e-05, 2.844500000000194e-05, 2.8069999999998096e-05, 2.7930999999994932e-05, 2.8291999999999207e-05, 2.8514000000000317e-05, 2.79170000000023e-05, 2.84170000000028e-05, 2.8791999999999707e-05, 2.8764000000000567e-05, 2.8624999999997403e-05, 2.8582999999998693e-05, 2.7902999999995792e-05, 2.8430999999995432e-05, 2.8305999999991838e-05, 2.8610999999997833e-05, 2.8124999999989964e-05, 2.8764000000000567e-05, 2.8305999999991838e-05, 2.862500000000434e-05, 2.8013999999992878e-05, 2.793100000000881e-05, 2.7930999999994932e-05, 2.8750000000007936e-05, 2.8291999999999207e-05, 2.8278000000006576e-05, 2.7944000000001967e-05, 2.8610999999997833e-05, 2.8347999999997486e-05, 2.8472000000001607e-05, 2.812500000000384e-05, 2.7944000000001967e-05]</msg>
<status status="PASS" starttime="20201115 22:03:49.977" endtime="20201115 22:03:49.981"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:49.965" endtime="20201115 22:03:49.982"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:49.989" endtime="20201115 22:03:49.992"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:49.997" endtime="20201115 22:03:50.020"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:49.993" endtime="20201115 22:03:50.021"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:49.984" endtime="20201115 22:03:50.023"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:49.438" endtime="20201115 22:03:50.024"></status>
</kw>
<msg timestamp="20201115 22:03:50.024" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:50.048" endtime="20201115 22:03:50.082"></status>
</kw>
<msg timestamp="20201115 22:03:50.083" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:50.044" endtime="20201115 22:03:50.084"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:50.097" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:50.085" endtime="20201115 22:03:50.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:50.099" endtime="20201115 22:03:50.103"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:50.037" endtime="20201115 22:03:50.105"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:50.031" endtime="20201115 22:03:50.106"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:50.123" endtime="20201115 22:03:50.476"></status>
</kw>
<msg timestamp="20201115 22:03:50.484" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042138167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04216625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:03:50.119" endtime="20201115 22:03:50.484"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:50.502" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042138167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04216625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:03:50.486" endtime="20201115 22:03:50.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:50.504" endtime="20201115 22:03:50.510"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:50.112" endtime="20201115 22:03:50.511"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:50.107" endtime="20201115 22:03:50.513"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:50.524" level="INFO">${RESULT} = [{'time': 0.04216625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.808300000000513e-05, 'source_diff': 2.808300000000513e-05}, {'time': 0.042653861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:03:50.515" endtime="20201115 22:03:50.524"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:50.555" level="INFO">${OVERHEAD} = {'time': [0.04216625, 0.042653861, 0.043143486, 0.043628056, 0.044117597, 0.044602194, 0.045088722, 0.045573389, 0.046058833, 0.046542431, 0.047027, 0.047511514, 0.048000083, 0.048486708, 0.048971153,...</msg>
<status status="PASS" starttime="20201115 22:03:50.526" endtime="20201115 22:03:50.555"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:50.566" level="INFO">NAME: 00-overhead-19-set</msg>
<status status="PASS" starttime="20201115 22:03:50.563" endtime="20201115 22:03:50.566"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:50.571" level="INFO">VALUE: [2.808300000000513e-05, 2.8291999999999207e-05, 2.7958000000001537e-05, 2.820900000000126e-05, 2.8264000000000067e-05, 2.841599999999639e-05, 2.842999999999596e-05, 2.8430999999995432e-05, 2.8096999999997763e-05, 2.8250000000000497e-05, 2.8402999999996292e-05, 2.8430999999995432e-05, 2.844399999999553e-05, 2.8472000000001607e-05, 2.784700000000445e-05, 2.8194000000002217e-05, 2.788900000000316e-05, 2.7930000000002397e-05, 2.8277999999999637e-05, 2.7930000000002397e-05, 2.8306000000005715e-05, 2.8249999999993558e-05, 2.8444000000002467e-05, 2.8582999999998693e-05, 2.8764000000000567e-05, 2.8778000000000137e-05, 2.8582999999998693e-05, 2.8597999999997736e-05, 2.836100000000452e-05, 2.8750000000000997e-05, 2.8500000000000747e-05, 2.8277000000000163e-05, 2.80970000000047e-05, 2.8110999999997333e-05, 2.8597999999997736e-05, 2.8792000000006646e-05, 2.8472000000001607e-05, 2.845900000000151e-05, 2.794399999999503e-05, 2.843100000000237e-05, 2.8291999999999207e-05, 2.811100000000427e-05, 2.8277999999992698e-05, 2.86379999999975e-05, 2.8430000000009836e-05, 2.8722000000008796e-05, 2.7930999999994932e-05, 2.8764000000000567e-05, 2.7916000000002827e-05, 2.842999999999596e-05]</msg>
<status status="PASS" starttime="20201115 22:03:50.568" endtime="20201115 22:03:50.572"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:50.557" endtime="20201115 22:03:50.574"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:50.580" endtime="20201115 22:03:50.583"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:50.588" endtime="20201115 22:03:50.610"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:50.584" endtime="20201115 22:03:50.612"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:50.576" endtime="20201115 22:03:50.614"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:50.025" endtime="20201115 22:03:50.614"></status>
</kw>
<msg timestamp="20201115 22:03:50.615" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:50.639" endtime="20201115 22:03:50.673"></status>
</kw>
<msg timestamp="20201115 22:03:50.674" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:50.636" endtime="20201115 22:03:50.675"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:50.681" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:50.677" endtime="20201115 22:03:50.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:50.683" endtime="20201115 22:03:50.687"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:50.627" endtime="20201115 22:03:50.688"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:50.622" endtime="20201115 22:03:50.690"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:50.707" endtime="20201115 22:03:51.065"></status>
</kw>
<msg timestamp="20201115 22:03:51.072" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042520014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042548458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:50.704" endtime="20201115 22:03:51.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:51.090" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042520014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042548458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:51.074" endtime="20201115 22:03:51.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:51.092" endtime="20201115 22:03:51.098"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:50.696" endtime="20201115 22:03:51.100"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:50.691" endtime="20201115 22:03:51.102"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:51.116" level="INFO">${RESULT} = [{'time': 0.042548458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.844399999999553e-05, 'source_diff': 2.844399999999553e-05}, {'time': 0.043034056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:51.104" endtime="20201115 22:03:51.116"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:51.147" level="INFO">${OVERHEAD} = {'time': [0.042548458, 0.043034056, 0.043522722, 0.044009264, 0.044499889, 0.044988667, 0.045479278, 0.045968833, 0.046454611, 0.046944194, 0.047432806, 0.047922472, 0.048413042, 0.048897833, 0.049388...</msg>
<status status="PASS" starttime="20201115 22:03:51.118" endtime="20201115 22:03:51.147"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:51.158" level="INFO">NAME: 00-overhead-19-set</msg>
<status status="PASS" starttime="20201115 22:03:51.156" endtime="20201115 22:03:51.159"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:51.163" level="INFO">VALUE: [2.844399999999553e-05, 2.843100000000237e-05, 2.8624999999997403e-05, 2.843100000000237e-05, 2.8082999999998193e-05, 2.811100000000427e-05, 2.8277999999999637e-05, 2.8777000000000663e-05, 2.8430000000002897e-05, 2.80970000000047e-05, 2.8612000000004245e-05, 2.8110999999997333e-05, 2.8084000000004605e-05, 2.8777000000000663e-05, 2.8096999999997763e-05, 2.841599999999639e-05, 2.8263000000000593e-05, 2.861100000000477e-05, 2.8430000000002897e-05, 2.8444000000002467e-05, 2.811100000000427e-05, 2.8778000000000137e-05, 2.7944999999994502e-05, 2.8320000000005285e-05, 2.8250000000000497e-05, 2.8791999999999707e-05, 2.8097999999997236e-05, 2.8804999999999803e-05, 2.8527000000000413e-05, 2.7930000000002397e-05, 2.862500000000434e-05, 2.8819999999998847e-05, 2.8250000000000497e-05, 2.8110999999997333e-05, 2.7957999999994598e-05, 2.8791000000000233e-05, 2.8082999999998193e-05, 2.8458000000002037e-05, 2.8291999999999207e-05, 2.8096999999997763e-05, 2.8791999999999707e-05, 2.8111999999996806e-05, 2.8264000000000067e-05, 2.8610999999997833e-05, 2.794500000000144e-05, 2.7944000000001967e-05, 2.8098000000004175e-05, 2.793100000000881e-05, 2.8777999999993198e-05, 2.8277999999992698e-05]</msg>
<status status="PASS" starttime="20201115 22:03:51.160" endtime="20201115 22:03:51.164"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:51.148" endtime="20201115 22:03:51.166"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:51.172" endtime="20201115 22:03:51.175"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:51.181" endtime="20201115 22:03:51.203"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:51.176" endtime="20201115 22:03:51.205"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:51.168" endtime="20201115 22:03:51.206"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:50.616" endtime="20201115 22:03:51.208"></status>
</kw>
<msg timestamp="20201115 22:03:51.208" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:51.232" endtime="20201115 22:03:51.266"></status>
</kw>
<msg timestamp="20201115 22:03:51.267" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:51.229" endtime="20201115 22:03:51.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:51.273" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:51.269" endtime="20201115 22:03:51.274"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:51.276" endtime="20201115 22:03:51.279"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:51.221" endtime="20201115 22:03:51.281"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:51.215" endtime="20201115 22:03:51.282"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:51.299" endtime="20201115 22:03:51.642"></status>
</kw>
<msg timestamp="20201115 22:03:51.649" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043462222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043490542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:51.296" endtime="20201115 22:03:51.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:51.668" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043462222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043490542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:51.652" endtime="20201115 22:03:51.668"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:51.670" endtime="20201115 22:03:51.675"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:51.289" endtime="20201115 22:03:51.677"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:51.284" endtime="20201115 22:03:51.678"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:51.689" level="INFO">${RESULT} = [{'time': 0.043490542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8319999999998346e-05, 'source_diff': 2.8319999999998346e-05}, {'time': 0.043975222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:51.680" endtime="20201115 22:03:51.690"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:51.720" level="INFO">${OVERHEAD} = {'time': [0.043490542, 0.043975222, 0.044463861, 0.044949514, 0.045433958, 0.045920528, 0.046406139, 0.046893708, 0.047378403, 0.047862917, 0.048351403, 0.048836083, 0.049323736, 0.049811431, 0.050299...</msg>
<status status="PASS" starttime="20201115 22:03:51.691" endtime="20201115 22:03:51.721"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:51.731" level="INFO">NAME: 00-overhead-19-set</msg>
<status status="PASS" starttime="20201115 22:03:51.729" endtime="20201115 22:03:51.732"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:51.737" level="INFO">VALUE: [2.8319999999998346e-05, 2.840300000000323e-05, 2.8778000000000137e-05, 2.84170000000028e-05, 2.8444000000002467e-05, 2.8264000000000067e-05, 2.7874999999996652e-05, 2.8764000000000567e-05, 2.845900000000151e-05, 2.8444999999995002e-05, 2.8264000000000067e-05, 2.862500000000434e-05, 2.8610999999997833e-05, 2.812500000000384e-05, 2.7958000000001537e-05, 2.861100000000477e-05, 2.8804999999999803e-05, 2.8374999999997152e-05, 2.844399999999553e-05, 2.811100000000427e-05, 2.844500000000194e-05, 2.8152999999996042e-05, 2.7958000000001537e-05, 2.8346999999998013e-05, 2.8264000000000067e-05, 2.8112000000003745e-05, 2.794500000000144e-05, 2.8472000000001607e-05, 2.795900000000101e-05, 2.8138999999996472e-05, 2.7888999999996222e-05, 2.8430999999995432e-05, 2.8416999999995862e-05, 2.8764000000000567e-05, 2.8096999999997763e-05, 2.8250000000000497e-05, 2.7944000000001967e-05, 2.815300000000298e-05, 2.85970000000052e-05, 2.8764000000000567e-05, 2.8444999999988063e-05, 2.80970000000047e-05, 2.85970000000052e-05, 2.862500000000434e-05, 2.8764000000000567e-05, 2.8110999999997333e-05, 2.8082999999998193e-05, 2.8458000000008976e-05, 2.792999999999546e-05, 2.8264000000000067e-05]</msg>
<status status="PASS" starttime="20201115 22:03:51.734" endtime="20201115 22:03:51.738"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:51.722" endtime="20201115 22:03:51.739"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:51.747" endtime="20201115 22:03:51.749"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:51.755" endtime="20201115 22:03:51.777"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:51.750" endtime="20201115 22:03:51.779"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:51.742" endtime="20201115 22:03:51.780"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:51.209" endtime="20201115 22:03:51.781"></status>
</kw>
<msg timestamp="20201115 22:03:51.782" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:51.805" endtime="20201115 22:03:51.839"></status>
</kw>
<msg timestamp="20201115 22:03:51.841" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:51.802" endtime="20201115 22:03:51.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:51.847" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:51.843" endtime="20201115 22:03:51.848"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:51.849" endtime="20201115 22:03:51.853"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:51.794" endtime="20201115 22:03:51.855"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:51.788" endtime="20201115 22:03:51.856"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:51.873" endtime="20201115 22:03:52.228"></status>
</kw>
<msg timestamp="20201115 22:03:52.235" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041975528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042003486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:51.870" endtime="20201115 22:03:52.235"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:52.253" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041975528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042003486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:52.237" endtime="20201115 22:03:52.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:52.255" endtime="20201115 22:03:52.263"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:51.862" endtime="20201115 22:03:52.264"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:51.858" endtime="20201115 22:03:52.266"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:52.276" level="INFO">${RESULT} = [{'time': 0.042003486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7958000000001537e-05, 'source_diff': 2.7958000000001537e-05}, {'time': 0.042489181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:52.267" endtime="20201115 22:03:52.277"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:52.307" level="INFO">${OVERHEAD} = {'time': [0.042003486, 0.042489181, 0.042973778, 0.043462667, 0.043948431, 0.044432125, 0.044921958, 0.045409556, 0.045896333, 0.046383903, 0.046870653, 0.047356278, 0.047843958, 0.048329694, 0.048815...</msg>
<status status="PASS" starttime="20201115 22:03:52.278" endtime="20201115 22:03:52.308"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:52.318" level="INFO">NAME: 00-overhead-19-set</msg>
<status status="PASS" starttime="20201115 22:03:52.316" endtime="20201115 22:03:52.319"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:52.324" level="INFO">VALUE: [2.7958000000001537e-05, 2.845900000000151e-05, 2.8610999999997833e-05, 2.862500000000434e-05, 2.845900000000151e-05, 2.85970000000052e-05, 2.8777000000000663e-05, 2.8124999999996902e-05, 2.8304999999999303e-05, 2.8291999999999207e-05, 2.794500000000144e-05, 2.8277999999999637e-05, 2.8458000000002037e-05, 2.8250000000000497e-05, 2.7888999999996222e-05, 2.843100000000237e-05, 2.815300000000298e-05, 2.840300000000323e-05, 2.7888999999996222e-05, 2.7958000000001537e-05, 2.8291999999999207e-05, 2.792999999999546e-05, 2.8764000000000567e-05, 2.8110999999997333e-05, 2.845900000000151e-05, 2.8264000000000067e-05, 2.8777000000000663e-05, 2.7972000000001107e-05, 2.8194000000002217e-05, 2.7930000000002397e-05, 2.8569999999998597e-05, 2.8277000000000163e-05, 2.8472000000001607e-05, 2.7958000000001537e-05, 2.8444000000002467e-05, 2.8514000000000317e-05, 2.7916999999995362e-05, 2.7930999999994932e-05, 2.8610999999997833e-05, 2.8277999999999637e-05, 2.8096999999997763e-05, 2.8777000000000663e-05, 2.8610999999997833e-05, 2.8110999999997333e-05, 2.8291999999999207e-05, 2.8458000000008976e-05, 2.8249999999993558e-05, 2.8110999999997333e-05, 2.8721999999994918e-05, 2.8610999999997833e-05]</msg>
<status status="PASS" starttime="20201115 22:03:52.321" endtime="20201115 22:03:52.325"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:52.309" endtime="20201115 22:03:52.327"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:52.334" endtime="20201115 22:03:52.336"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:52.342" endtime="20201115 22:03:52.364"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:52.337" endtime="20201115 22:03:52.366"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:52.329" endtime="20201115 22:03:52.367"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:51.783" endtime="20201115 22:03:52.368"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:49.435" endtime="20201115 22:03:52.368"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:49.433" endtime="20201115 22:03:52.369"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:52.374" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:52.397" endtime="20201115 22:03:52.433"></status>
</kw>
<msg timestamp="20201115 22:03:52.434" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:52.393" endtime="20201115 22:03:52.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:52.440" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:52.436" endtime="20201115 22:03:52.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:52.443" endtime="20201115 22:03:52.447"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:52.386" endtime="20201115 22:03:52.448"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:52.380" endtime="20201115 22:03:52.450"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:52.466" endtime="20201115 22:03:52.813"></status>
</kw>
<msg timestamp="20201115 22:03:52.820" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046936014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046965125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:52.463" endtime="20201115 22:03:52.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:52.838" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046936014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046965125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:52.823" endtime="20201115 22:03:52.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:52.841" endtime="20201115 22:03:52.845"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:52.456" endtime="20201115 22:03:52.846"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:52.451" endtime="20201115 22:03:52.848"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:52.859" level="INFO">${RESULT} = [{'time': 0.046965125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.911100000000527e-05, 'source_diff': 2.911100000000527e-05}, {'time': 0.04748175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:03:52.849" endtime="20201115 22:03:52.859"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:52.890" level="INFO">${OVERHEAD} = {'time': [0.046965125, 0.04748175, 0.048001611, 0.048518153, 0.049032, 0.049547653, 0.050064278, 0.050581014, 0.051095611, 0.051609181, 0.052125931, 0.052641597, 0.053157208, 0.053675889, 0.054193639,...</msg>
<status status="PASS" starttime="20201115 22:03:52.861" endtime="20201115 22:03:52.890"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:52.901" level="INFO">NAME: 00-overhead-20-set</msg>
<status status="PASS" starttime="20201115 22:03:52.898" endtime="20201115 22:03:52.901"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:52.907" level="INFO">VALUE: [2.911100000000527e-05, 2.965300000000448e-05, 2.9028000000000387e-05, 2.9124999999997903e-05, 2.94579999999961e-05, 2.8805999999999277e-05, 2.8971999999995168e-05, 2.9319999999999347e-05, 2.9124999999997903e-05, 2.8972999999994642e-05, 2.895900000000201e-05, 2.894399999999603e-05, 2.8971999999995168e-05, 2.9152999999997042e-05, 2.8778000000000137e-05, 2.8806000000006216e-05, 2.8791000000000233e-05, 2.944399999999653e-05, 2.947300000000208e-05, 2.8930000000003397e-05, 2.9166999999996612e-05, 2.9278000000000637e-05, 2.891599999999689e-05, 2.8777000000000663e-05, 2.962500000000534e-05, 2.8791000000000233e-05, 2.897300000000158e-05, 2.9624999999998403e-05, 2.9318999999999873e-05, 2.919399999999628e-05, 2.94170000000038e-05, 2.916599999999714e-05, 2.9541000000007922e-05, 2.9638999999997973e-05, 2.9610999999998833e-05, 2.8972000000002107e-05, 2.9638999999997973e-05, 2.8986000000008616e-05, 2.8958999999995072e-05, 2.947300000000208e-05, 2.9610999999998833e-05, 2.947300000000208e-05, 2.8777999999993198e-05, 2.9138999999997472e-05, 2.9610999999998833e-05, 2.8819999999998847e-05, 2.8944999999988563e-05, 2.892999999999646e-05, 2.8958000000009476e-05, 2.8958999999995072e-05]</msg>
<status status="PASS" starttime="20201115 22:03:52.903" endtime="20201115 22:03:52.908"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:52.891" endtime="20201115 22:03:52.910"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:52.916" endtime="20201115 22:03:52.919"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:52.925" endtime="20201115 22:03:52.946"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:52.920" endtime="20201115 22:03:52.948"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:52.911" endtime="20201115 22:03:52.950"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:52.375" endtime="20201115 22:03:52.950"></status>
</kw>
<msg timestamp="20201115 22:03:52.951" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:52.974" endtime="20201115 22:03:53.010"></status>
</kw>
<msg timestamp="20201115 22:03:53.011" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:52.971" endtime="20201115 22:03:53.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:53.017" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:53.013" endtime="20201115 22:03:53.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:53.020" endtime="20201115 22:03:53.023"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:52.964" endtime="20201115 22:03:53.025"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:52.958" endtime="20201115 22:03:53.027"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:53.043" endtime="20201115 22:03:53.386"></status>
</kw>
<msg timestamp="20201115 22:03:53.393" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041946875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041975694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:53.040" endtime="20201115 22:03:53.394"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:53.412" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041946875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041975694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:53.395" endtime="20201115 22:03:53.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:53.414" endtime="20201115 22:03:53.419"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:53.033" endtime="20201115 22:03:53.421"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:53.028" endtime="20201115 22:03:53.423"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:53.433" level="INFO">${RESULT} = [{'time': 0.041975694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8818999999999373e-05, 'source_diff': 2.8818999999999373e-05}, {'time': 0.042494472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:53.424" endtime="20201115 22:03:53.434"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:53.465" level="INFO">${OVERHEAD} = {'time': [0.041975694, 0.042494472, 0.043009264, 0.043526972, 0.044041708, 0.044557583, 0.045078417, 0.045595194, 0.046110028, 0.046629681, 0.047147514, 0.047668194, 0.048186972, 0.048704708, 0.049220...</msg>
<status status="PASS" starttime="20201115 22:03:53.435" endtime="20201115 22:03:53.466"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:53.476" level="INFO">NAME: 00-overhead-20-set</msg>
<status status="PASS" starttime="20201115 22:03:53.474" endtime="20201115 22:03:53.477"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:53.482" level="INFO">VALUE: [2.8818999999999373e-05, 2.947199999999567e-05, 2.89579999999956e-05, 2.8818999999999373e-05, 2.944399999999653e-05, 2.9610999999998833e-05, 2.913900000000441e-05, 2.9137999999998e-05, 2.9652999999997542e-05, 2.9305999999999777e-05, 2.913900000000441e-05, 2.9124999999997903e-05, 2.8804999999999803e-05, 2.891599999999689e-05, 2.8778000000000137e-05, 2.8805999999999277e-05, 2.9124999999997903e-05, 2.94579999999961e-05, 2.8804999999999803e-05, 2.969500000000319e-05, 2.962500000000534e-05, 2.9138999999997472e-05, 2.9472999999995142e-05, 2.9305000000000303e-05, 2.9278000000000637e-05, 2.8806000000006216e-05, 2.8804999999999803e-05, 2.8791999999999707e-05, 2.9124999999997903e-05, 2.9610999999998833e-05, 2.8777000000000663e-05, 2.9124999999997903e-05, 2.8804999999999803e-05, 2.9318999999999873e-05, 2.9430999999996432e-05, 2.8791999999999707e-05, 2.8818999999999373e-05, 2.9610999999998833e-05, 2.9138000000004938e-05, 2.8791999999999707e-05, 2.9304999999993364e-05, 2.962500000000534e-05, 2.9638999999997973e-05, 2.9444999999989063e-05, 2.961100000001271e-05, 2.9249999999994558e-05, 2.8958000000009476e-05, 2.917999999998977e-05, 2.9444000000003467e-05, 2.9305000000007242e-05]</msg>
<status status="PASS" starttime="20201115 22:03:53.479" endtime="20201115 22:03:53.483"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:53.467" endtime="20201115 22:03:53.485"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:53.491" endtime="20201115 22:03:53.494"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:53.499" endtime="20201115 22:03:53.521"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:53.495" endtime="20201115 22:03:53.523"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:53.486" endtime="20201115 22:03:53.524"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:52.952" endtime="20201115 22:03:53.525"></status>
</kw>
<msg timestamp="20201115 22:03:53.525" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:53.549" endtime="20201115 22:03:53.585"></status>
</kw>
<msg timestamp="20201115 22:03:53.587" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:53.546" endtime="20201115 22:03:53.587"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:53.593" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:53.589" endtime="20201115 22:03:53.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:53.595" endtime="20201115 22:03:53.599"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:53.538" endtime="20201115 22:03:53.600"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:53.532" endtime="20201115 22:03:53.602"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:53.619" endtime="20201115 22:03:53.960"></status>
</kw>
<msg timestamp="20201115 22:03:53.967" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042600083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042629208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:53.616" endtime="20201115 22:03:53.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:53.985" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042600083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042629208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:53.969" endtime="20201115 22:03:53.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:53.987" endtime="20201115 22:03:53.993"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:53.608" endtime="20201115 22:03:53.994"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:53.603" endtime="20201115 22:03:53.996"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:54.007" level="INFO">${RESULT} = [{'time': 0.042629208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.912500000000484e-05, 'source_diff': 2.912500000000484e-05}, {'time': 0.043147944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:53.997" endtime="20201115 22:03:54.008"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:54.038" level="INFO">${OVERHEAD} = {'time': [0.042629208, 0.043147944, 0.043666833, 0.044185778, 0.0447005, 0.045216431, 0.045737208, 0.046254, 0.046771014, 0.047285736, 0.047801653, 0.048317569, 0.048837472, 0.04935825, 0.049878986, 0...</msg>
<status status="PASS" starttime="20201115 22:03:54.010" endtime="20201115 22:03:54.039"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:54.049" level="INFO">NAME: 00-overhead-20-set</msg>
<status status="PASS" starttime="20201115 22:03:54.047" endtime="20201115 22:03:54.050"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:54.055" level="INFO">VALUE: [2.912500000000484e-05, 2.8777000000000663e-05, 2.9152000000004508e-05, 2.8805999999999277e-05, 2.9638999999997973e-05, 2.8805999999999277e-05, 2.9666000000004578e-05, 2.9306000000006716e-05, 2.9652999999997542e-05, 2.913900000000441e-05, 2.9110999999998333e-05, 2.8971999999995168e-05, 2.9138999999997472e-05, 2.9430999999996432e-05, 2.9124999999997903e-05, 2.969399999999678e-05, 2.9444000000003467e-05, 2.9110999999998333e-05, 2.8999999999994308e-05, 2.912500000000484e-05, 2.9624999999998403e-05, 2.9624999999998403e-05, 2.9292000000000207e-05, 2.8777000000000663e-05, 2.897300000000158e-05, 2.9014000000000817e-05, 2.94579999999961e-05, 2.9278000000000637e-05, 2.947300000000208e-05, 2.8985999999994738e-05, 2.9152999999997042e-05, 2.892999999999646e-05, 2.9346999999999013e-05, 2.8805999999999277e-05, 2.9292000000000207e-05, 2.9332999999999443e-05, 2.8791999999999707e-05, 2.9348000000005425e-05, 2.9458000000003037e-05, 2.9305999999992838e-05, 2.9472000000002607e-05, 2.912500000000484e-05, 2.965300000000448e-05, 2.8805999999992338e-05, 2.9485999999995238e-05, 2.8986000000008616e-05, 2.965300000000448e-05, 2.89579999999956e-05, 2.916700000001049e-05, 2.947300000000208e-05]</msg>
<status status="PASS" starttime="20201115 22:03:54.052" endtime="20201115 22:03:54.056"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:54.040" endtime="20201115 22:03:54.058"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:54.064" endtime="20201115 22:03:54.067"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:54.073" endtime="20201115 22:03:54.094"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:54.068" endtime="20201115 22:03:54.096"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:54.060" endtime="20201115 22:03:54.098"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:53.527" endtime="20201115 22:03:54.098"></status>
</kw>
<msg timestamp="20201115 22:03:54.099" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:54.122" endtime="20201115 22:03:54.157"></status>
</kw>
<msg timestamp="20201115 22:03:54.159" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:54.119" endtime="20201115 22:03:54.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:54.165" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:54.161" endtime="20201115 22:03:54.166"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:54.167" endtime="20201115 22:03:54.171"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:54.112" endtime="20201115 22:03:54.173"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:54.106" endtime="20201115 22:03:54.174"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:54.191" endtime="20201115 22:03:54.534"></status>
</kw>
<msg timestamp="20201115 22:03:54.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04180625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041835722, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:03:54.188" endtime="20201115 22:03:54.542"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:54.559" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04180625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041835722, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:03:54.544" endtime="20201115 22:03:54.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:54.562" endtime="20201115 22:03:54.570"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:54.180" endtime="20201115 22:03:54.572"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:54.176" endtime="20201115 22:03:54.574"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:54.585" level="INFO">${RESULT} = [{'time': 0.041835722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.947199999999567e-05, 'source_diff': 2.947199999999567e-05}, {'time': 0.042350472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:54.575" endtime="20201115 22:03:54.585"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:54.616" level="INFO">${OVERHEAD} = {'time': [0.041835722, 0.042350472, 0.042869278, 0.043386069, 0.043901944, 0.044421722, 0.044939514, 0.045458319, 0.045976208, 0.046492083, 0.047005833, 0.047524694, 0.048039444, 0.048555222, 0.049074...</msg>
<status status="PASS" starttime="20201115 22:03:54.587" endtime="20201115 22:03:54.617"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:54.627" level="INFO">NAME: 00-overhead-20-set</msg>
<status status="PASS" starttime="20201115 22:03:54.625" endtime="20201115 22:03:54.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:54.633" level="INFO">VALUE: [2.947199999999567e-05, 2.8986000000001677e-05, 2.9666999999997112e-05, 2.9000000000001247e-05, 2.965199999999807e-05, 2.9638999999997973e-05, 2.9292000000000207e-05, 2.9305000000000303e-05, 2.9305000000000303e-05, 2.9110999999998333e-05, 2.915199999999757e-05, 2.96379999999985e-05, 2.9096999999998763e-05, 2.9318999999999873e-05, 2.947300000000208e-05, 2.9444999999996002e-05, 2.8791000000000233e-05, 2.9486000000002177e-05, 2.9291000000000733e-05, 2.9624999999998403e-05, 2.947199999999567e-05, 2.948700000000165e-05, 2.944399999999653e-05, 2.8944000000002967e-05, 2.8791999999999707e-05, 2.8778000000000137e-05, 2.9278000000000637e-05, 2.8972000000002107e-05, 2.8958000000002537e-05, 2.9000000000001247e-05, 2.9318999999999873e-05, 2.9500000000001747e-05, 2.9138999999997472e-05, 2.915300000000398e-05, 2.8944000000002967e-05, 2.9638999999997973e-05, 2.9305000000000303e-05, 2.8804999999999803e-05, 2.962500000000534e-05, 2.8791999999999707e-05, 2.9138999999997472e-05, 2.962500000000534e-05, 2.916599999999714e-05, 2.8777999999993198e-05, 2.9138999999997472e-05, 2.9318999999999873e-05, 2.9318999999999873e-05, 2.947300000000208e-05, 2.916700000001049e-05, 2.8916000000003828e-05]</msg>
<status status="PASS" starttime="20201115 22:03:54.630" endtime="20201115 22:03:54.634"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:54.618" endtime="20201115 22:03:54.635"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:54.642" endtime="20201115 22:03:54.644"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:54.650" endtime="20201115 22:03:54.672"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:54.646" endtime="20201115 22:03:54.674"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:54.637" endtime="20201115 22:03:54.675"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:54.100" endtime="20201115 22:03:54.676"></status>
</kw>
<msg timestamp="20201115 22:03:54.676" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:54.700" endtime="20201115 22:03:54.735"></status>
</kw>
<msg timestamp="20201115 22:03:54.736" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:54.696" endtime="20201115 22:03:54.737"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:54.742" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:54.738" endtime="20201115 22:03:54.743"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:54.745" endtime="20201115 22:03:54.748"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:54.689" endtime="20201115 22:03:54.750"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:54.683" endtime="20201115 22:03:54.752"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:54.769" endtime="20201115 22:03:55.111"></status>
</kw>
<msg timestamp="20201115 22:03:55.118" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041723125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041752583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:54.765" endtime="20201115 22:03:55.123"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:55.141" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041723125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041752583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:55.125" endtime="20201115 22:03:55.142"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:55.144" endtime="20201115 22:03:55.149"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:54.758" endtime="20201115 22:03:55.151"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:54.753" endtime="20201115 22:03:55.152"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:55.163" level="INFO">${RESULT} = [{'time': 0.041752583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9458000000003037e-05, 'source_diff': 2.9458000000003037e-05}, {'time': 0.042269389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:55.154" endtime="20201115 22:03:55.164"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:55.194" level="INFO">${OVERHEAD} = {'time': [0.041752583, 0.042269389, 0.042789125, 0.043304958, 0.043822722, 0.044341375, 0.04486025, 0.045374903, 0.045889667, 0.046406361, 0.046926153, 0.047445958, 0.047961722, 0.048478417, 0.0489942...</msg>
<status status="PASS" starttime="20201115 22:03:55.165" endtime="20201115 22:03:55.195"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:55.205" level="INFO">NAME: 00-overhead-20-set</msg>
<status status="PASS" starttime="20201115 22:03:55.203" endtime="20201115 22:03:55.206"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:55.211" level="INFO">VALUE: [2.9458000000003037e-05, 2.8999999999994308e-05, 2.9124999999997903e-05, 2.9138999999997472e-05, 2.9624999999998403e-05, 2.9458000000003037e-05, 2.8818999999999373e-05, 2.9110999999998333e-05, 2.897300000000158e-05, 2.8972000000002107e-05, 2.9596999999999263e-05, 2.912500000000484e-05, 2.8791000000000233e-05, 2.947300000000208e-05, 2.9082999999999193e-05, 2.9652999999997542e-05, 2.9624999999998403e-05, 2.897300000000158e-05, 2.8972999999994642e-05, 2.9610999999998833e-05, 2.94579999999961e-05, 2.961100000000577e-05, 2.965300000000448e-05, 2.916700000000355e-05, 2.9014000000000817e-05, 2.8972000000002107e-05, 2.9624999999998403e-05, 2.9137999999998e-05, 2.9666999999997112e-05, 2.9138999999997472e-05, 2.962500000000534e-05, 2.8986000000001677e-05, 2.9096999999998763e-05, 2.9596999999999263e-05, 2.89579999999956e-05, 2.9138000000004938e-05, 2.9319999999999347e-05, 2.9138999999997472e-05, 2.94579999999961e-05, 2.9458000000003037e-05, 2.9610999999998833e-05, 2.944500000000294e-05, 2.9138999999997472e-05, 2.9292000000000207e-05, 2.912500000000484e-05, 2.9597999999991798e-05, 2.962500000000534e-05, 2.9638999999997973e-05, 2.8778000000007076e-05, 2.9110999999998333e-05]</msg>
<status status="PASS" starttime="20201115 22:03:55.208" endtime="20201115 22:03:55.212"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:55.196" endtime="20201115 22:03:55.214"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:55.220" endtime="20201115 22:03:55.223"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:55.228" endtime="20201115 22:03:55.250"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:55.224" endtime="20201115 22:03:55.252"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:55.215" endtime="20201115 22:03:55.253"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:54.678" endtime="20201115 22:03:55.254"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:52.371" endtime="20201115 22:03:55.255"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:52.370" endtime="20201115 22:03:55.255"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:55.260" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:55.283" endtime="20201115 22:03:55.320"></status>
</kw>
<msg timestamp="20201115 22:03:55.321" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:55.280" endtime="20201115 22:03:55.322"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:55.328" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:55.324" endtime="20201115 22:03:55.328"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:55.330" endtime="20201115 22:03:55.334"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:55.273" endtime="20201115 22:03:55.335"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:55.267" endtime="20201115 22:03:55.338"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:55.355" endtime="20201115 22:03:55.702"></status>
</kw>
<msg timestamp="20201115 22:03:55.709" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047289042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047319528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:55.351" endtime="20201115 22:03:55.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:55.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047289042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047319528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:55.711" endtime="20201115 22:03:55.728"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:55.730" endtime="20201115 22:03:55.733"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:55.344" endtime="20201115 22:03:55.735"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:55.339" endtime="20201115 22:03:55.737"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:55.747" level="INFO">${RESULT} = [{'time': 0.047319528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.048599999999624e-05, 'source_diff': 3.048599999999624e-05}, {'time': 0.047865472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:55.738" endtime="20201115 22:03:55.748"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:55.778" level="INFO">${OVERHEAD} = {'time': [0.047319528, 0.047865472, 0.048413431, 0.048964139, 0.049509181, 0.050056028, 0.050602931, 0.051153903, 0.051700861, 0.052247806, 0.052798806, 0.053344819, 0.053891778, 0.054439722, 0.054986...</msg>
<status status="PASS" starttime="20201115 22:03:55.749" endtime="20201115 22:03:55.779"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:55.790" level="INFO">NAME: 00-overhead-21-set</msg>
<status status="PASS" starttime="20201115 22:03:55.787" endtime="20201115 22:03:55.790"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:55.795" level="INFO">VALUE: [3.048599999999624e-05, 2.9888999999998223e-05, 2.9680999999996682e-05, 2.9985999999995738e-05, 3.0000000000002247e-05, 3.015300000000498e-05, 3.0319999999993408e-05, 3.0000000000002247e-05, 3.0374999999999153e-05, 2.9833999999999417e-05, 2.9666999999997112e-05, 2.988799999999875e-05, 2.9624999999998403e-05, 2.965300000000448e-05, 2.965300000000448e-05, 3.0333000000000443e-05, 3.0152000000005508e-05, 3.0305000000001303e-05, 2.966599999999764e-05, 3.0166999999997612e-05, 3.0333999999999917e-05, 2.9666999999997112e-05, 3.0027999999994448e-05, 3.0152999999998042e-05, 3.015199999999857e-05, 3.0333999999999917e-05, 3.048599999999624e-05, 2.9624999999998403e-05, 3.0333000000007382e-05, 2.9597999999991798e-05, 3.0138999999998473e-05, 2.962500000000534e-05, 3.0320000000000347e-05, 2.966700000001099e-05, 2.9638999999997973e-05, 2.9805000000007742e-05, 2.9624999999991464e-05, 2.972300000000927e-05, 2.9833999999992478e-05, 3.0152000000005508e-05, 2.9834000000006355e-05, 2.965300000000448e-05, 3.048599999999624e-05, 3.012500000000584e-05, 2.997300000000258e-05, 3.0347999999999486e-05, 3.0320000000000347e-05, 2.9680000000004148e-05, 3.0083000000000193e-05, 2.9805999999993338e-05]</msg>
<status status="PASS" starttime="20201115 22:03:55.792" endtime="20201115 22:03:55.796"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:55.780" endtime="20201115 22:03:55.798"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:55.804" endtime="20201115 22:03:55.807"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:55.812" endtime="20201115 22:03:55.835"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:55.808" endtime="20201115 22:03:55.836"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:55.799" endtime="20201115 22:03:55.838"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:55.261" endtime="20201115 22:03:55.838"></status>
</kw>
<msg timestamp="20201115 22:03:55.839" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:55.862" endtime="20201115 22:03:55.900"></status>
</kw>
<msg timestamp="20201115 22:03:55.901" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:55.859" endtime="20201115 22:03:55.901"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:55.908" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:55.903" endtime="20201115 22:03:55.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:55.910" endtime="20201115 22:03:55.914"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:55.851" endtime="20201115 22:03:55.916"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:55.846" endtime="20201115 22:03:55.918"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:55.934" endtime="20201115 22:03:56.290"></status>
</kw>
<msg timestamp="20201115 22:03:56.297" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042047056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042076861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:55.931" endtime="20201115 22:03:56.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:56.315" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042047056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042076861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:56.299" endtime="20201115 22:03:56.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:56.318" endtime="20201115 22:03:56.323"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:55.924" endtime="20201115 22:03:56.325"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:55.919" endtime="20201115 22:03:56.326"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:56.337" level="INFO">${RESULT} = [{'time': 0.042076861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9805000000000803e-05, 'source_diff': 2.9805000000000803e-05}, {'time': 0.042625681, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:56.328" endtime="20201115 22:03:56.337"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:56.368" level="INFO">${OVERHEAD} = {'time': [0.042076861, 0.042625681, 0.043176458, 0.04372225, 0.044271153, 0.044820028, 0.045365764, 0.045912597, 0.046458542, 0.047005278, 0.04755325, 0.048098986, 0.048647917, 0.049195819, 0.04974454...</msg>
<status status="PASS" starttime="20201115 22:03:56.339" endtime="20201115 22:03:56.368"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:56.379" level="INFO">NAME: 00-overhead-21-set</msg>
<status status="PASS" starttime="20201115 22:03:56.377" endtime="20201115 22:03:56.379"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:56.384" level="INFO">VALUE: [2.9805000000000803e-05, 3.0014000000001817e-05, 3.016599999999814e-05, 2.9819000000000373e-05, 3.0500000000002747e-05, 2.9999999999995308e-05, 2.9778000000001137e-05, 3.0305000000001303e-05, 3.0499999999995808e-05, 2.9624999999998403e-05, 2.9999999999995308e-05, 3.0000000000002247e-05, 3.048599999999624e-05, 2.9832999999999943e-05, 3.0333999999999917e-05, 2.9985999999995738e-05, 3.016700000000455e-05, 3.0499999999995808e-05, 3.0278000000001637e-05, 2.9986000000002677e-05, 2.9846999999999513e-05, 2.9652999999997542e-05, 2.998700000000215e-05, 3.0347000000000013e-05, 3.017999999999771e-05, 3.0208000000003787e-05, 3.0554999999994614e-05, 2.9819000000000373e-05, 3.047199999999667e-05, 2.9638999999997973e-05, 2.9778000000001137e-05, 3.0374999999999153e-05, 3.016599999999814e-05, 3.0000000000002247e-05, 3.0138999999998473e-05, 3.0180000000004648e-05, 3.0500000000002747e-05, 3.047199999999667e-05, 2.9804999999993864e-05, 3.0014000000008756e-05, 3.0138999999998473e-05, 2.9666999999997112e-05, 3.0306000000007716e-05, 3.0500000000002747e-05, 2.9666999999997112e-05, 3.0014000000008756e-05, 3.0486999999995712e-05, 2.9791000000001233e-05, 2.9805999999993338e-05, 3.0500000000002747e-05]</msg>
<status status="PASS" starttime="20201115 22:03:56.381" endtime="20201115 22:03:56.385"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:56.369" endtime="20201115 22:03:56.387"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:56.393" endtime="20201115 22:03:56.396"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:56.402" endtime="20201115 22:03:56.424"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:56.397" endtime="20201115 22:03:56.425"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:56.389" endtime="20201115 22:03:56.427"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:55.840" endtime="20201115 22:03:56.427"></status>
</kw>
<msg timestamp="20201115 22:03:56.428" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:56.452" endtime="20201115 22:03:56.489"></status>
</kw>
<msg timestamp="20201115 22:03:56.490" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:56.449" endtime="20201115 22:03:56.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:56.496" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:56.492" endtime="20201115 22:03:56.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:56.499" endtime="20201115 22:03:56.503"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:56.440" endtime="20201115 22:03:56.504"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:56.435" endtime="20201115 22:03:56.506"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:56.523" endtime="20201115 22:03:56.866"></status>
</kw>
<msg timestamp="20201115 22:03:56.873" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042497556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042527708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:56.520" endtime="20201115 22:03:56.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:56.891" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042497556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042527708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:56.875" endtime="20201115 22:03:56.891"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:56.893" endtime="20201115 22:03:56.901"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:56.512" endtime="20201115 22:03:56.902"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:56.507" endtime="20201115 22:03:56.904"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:56.914" level="INFO">${RESULT} = [{'time': 0.042527708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.015199999999857e-05, 'source_diff': 3.015199999999857e-05}, {'time': 0.043079333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:56.905" endtime="20201115 22:03:56.915"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:57.017" level="INFO">${OVERHEAD} = {'time': [0.042527708, 0.043079333, 0.043630958, 0.044182667, 0.044729347, 0.045274972, 0.045822556, 0.046373083, 0.04692275, 0.047473389, 0.048020069, 0.048566653, 0.049117431, 0.049665042, 0.0502116...</msg>
<status status="PASS" starttime="20201115 22:03:56.917" endtime="20201115 22:03:57.017"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:57.028" level="INFO">NAME: 00-overhead-21-set</msg>
<status status="PASS" starttime="20201115 22:03:57.026" endtime="20201115 22:03:57.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:57.034" level="INFO">VALUE: [3.015199999999857e-05, 3.0110999999999333e-05, 3.0069000000000623e-05, 3.0292000000001207e-05, 3.0514000000002317e-05, 2.997199999999617e-05, 3.019500000000369e-05, 2.9805000000000803e-05, 3.048599999999624e-05, 3.0152999999998042e-05, 3.0305000000001303e-05, 2.9638999999997973e-05, 2.9819999999999847e-05, 3.048599999999624e-05, 3.0306000000000777e-05, 3.0319000000000873e-05, 3.0306000000000777e-05, 3.018100000000412e-05, 3.0374999999999153e-05, 2.99579999999966e-05, 2.9832999999999943e-05, 2.9805000000000803e-05, 3.0166000000005078e-05, 2.9819000000000373e-05, 3.0306000000000777e-05, 3.0318999999993934e-05, 3.048599999999624e-05, 3.0319000000000873e-05, 3.0263999999995128e-05, 2.9819999999999847e-05, 2.9986000000002677e-05, 3.0166999999997612e-05, 3.0333999999999917e-05, 2.9791000000001233e-05, 3.019399999999728e-05, 3.0444000000004467e-05, 2.9805000000000803e-05, 3.0292000000001207e-05, 3.044500000000394e-05, 3.0304999999994364e-05, 3.012500000000584e-05, 3.0320000000000347e-05, 3.056999999999366e-05, 3.012500000000584e-05, 2.9832999999993004e-05, 2.9791000000001233e-05, 3.0137999999999e-05, 3.0334000000006855e-05, 2.9972000000003107e-05, 3.049999999998887e-05]</msg>
<status status="PASS" starttime="20201115 22:03:57.030" endtime="20201115 22:03:57.034"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:57.019" endtime="20201115 22:03:57.036"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:57.042" endtime="20201115 22:03:57.045"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:57.051" endtime="20201115 22:03:57.072"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:57.046" endtime="20201115 22:03:57.074"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:57.038" endtime="20201115 22:03:57.076"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:56.429" endtime="20201115 22:03:57.077"></status>
</kw>
<msg timestamp="20201115 22:03:57.078" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:57.102" endtime="20201115 22:03:57.139"></status>
</kw>
<msg timestamp="20201115 22:03:57.140" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:57.098" endtime="20201115 22:03:57.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:57.147" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:57.142" endtime="20201115 22:03:57.147"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:57.149" endtime="20201115 22:03:57.153"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:57.090" endtime="20201115 22:03:57.154"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:57.084" endtime="20201115 22:03:57.156"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:57.172" endtime="20201115 22:03:57.515"></status>
</kw>
<msg timestamp="20201115 22:03:57.523" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043658861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043689333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:57.169" endtime="20201115 22:03:57.523"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:57.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043658861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043689333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:57.525" endtime="20201115 22:03:57.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:57.543" endtime="20201115 22:03:57.547"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:57.162" endtime="20201115 22:03:57.548"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:57.157" endtime="20201115 22:03:57.550"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:57.561" level="INFO">${RESULT} = [{'time': 0.043689333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.047199999999667e-05, 'source_diff': 3.047199999999667e-05}, {'time': 0.044237903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:57.551" endtime="20201115 22:03:57.561"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:57.592" level="INFO">${OVERHEAD} = {'time': [0.043689333, 0.044237903, 0.044785639, 0.045334278, 0.045882833, 0.046428514, 0.046978014, 0.047523736, 0.048073347, 0.048621986, 0.049172736, 0.049721375, 0.050266056, 0.050812653, 0.051361...</msg>
<status status="PASS" starttime="20201115 22:03:57.563" endtime="20201115 22:03:57.592"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:57.603" level="INFO">NAME: 00-overhead-21-set</msg>
<status status="PASS" starttime="20201115 22:03:57.600" endtime="20201115 22:03:57.603"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:57.608" level="INFO">VALUE: [3.047199999999667e-05, 3.013900000000541e-05, 3.0124999999998903e-05, 3.047199999999667e-05, 3.0333000000000443e-05, 2.9819999999999847e-05, 3.0306000000000777e-05, 2.9832999999999943e-05, 3.015300000000498e-05, 3.0333000000000443e-05, 3.0124999999998903e-05, 2.969399999999678e-05, 2.9848000000005925e-05, 3.0333999999999917e-05, 2.9638000000005438e-05, 2.9791000000001233e-05, 3.0014000000001817e-05, 3.016599999999814e-05, 2.969500000000319e-05, 3.0124999999998903e-05, 3.047300000000308e-05, 2.9986000000002677e-05, 3.0333000000000443e-05, 2.9819999999999847e-05, 3.0500000000002747e-05, 3.0152999999998042e-05, 2.995900000000301e-05, 3.0319000000000873e-05, 2.9666999999997112e-05, 2.9638999999997973e-05, 2.965300000000448e-05, 2.9666999999997112e-05, 3.0306000000000777e-05, 2.966700000000405e-05, 2.9806000000000277e-05, 3.0013999999994878e-05, 3.0320000000000347e-05, 3.013900000001235e-05, 3.0458999999996572e-05, 2.965199999999113e-05, 2.9819000000000373e-05, 3.0306000000007716e-05, 3.0305999999993838e-05, 3.0472000000003607e-05, 3.0319000000000873e-05, 3.015300000000498e-05, 2.9985999999995738e-05, 3.0138000000012877e-05, 2.99579999999966e-05, 3.0320000000000347e-05]</msg>
<status status="PASS" starttime="20201115 22:03:57.605" endtime="20201115 22:03:57.609"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:57.593" endtime="20201115 22:03:57.611"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:57.618" endtime="20201115 22:03:57.621"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:57.627" endtime="20201115 22:03:57.649"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:57.622" endtime="20201115 22:03:57.651"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:57.613" endtime="20201115 22:03:57.652"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:57.079" endtime="20201115 22:03:57.653"></status>
</kw>
<msg timestamp="20201115 22:03:57.654" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:57.684" endtime="20201115 22:03:57.723"></status>
</kw>
<msg timestamp="20201115 22:03:57.725" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:57.680" endtime="20201115 22:03:57.725"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:57.731" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:57.727" endtime="20201115 22:03:57.732"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:57.733" endtime="20201115 22:03:57.737"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:57.671" endtime="20201115 22:03:57.739"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:57.665" endtime="20201115 22:03:57.740"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:57.758" endtime="20201115 22:03:58.113"></status>
</kw>
<msg timestamp="20201115 22:03:58.120" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050419014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050449167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:57.754" endtime="20201115 22:03:58.120"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:58.138" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050419014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050449167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:58.122" endtime="20201115 22:03:58.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:58.141" endtime="20201115 22:03:58.145"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:57.747" endtime="20201115 22:03:58.146"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:57.742" endtime="20201115 22:03:58.148"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:58.159" level="INFO">${RESULT} = [{'time': 0.050449167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.015300000000498e-05, 'source_diff': 3.015300000000498e-05}, {'time': 0.050994958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:58.149" endtime="20201115 22:03:58.159"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:58.190" level="INFO">${OVERHEAD} = {'time': [0.050449167, 0.050994958, 0.051543639, 0.052088375, 0.052636972, 0.053182694, 0.053728569, 0.054273167, 0.054822819, 0.055373681, 0.055923375, 0.056472042, 0.057023736, 0.057570514, 0.058119...</msg>
<status status="PASS" starttime="20201115 22:03:58.161" endtime="20201115 22:03:58.191"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:58.202" level="INFO">NAME: 00-overhead-21-set</msg>
<status status="PASS" starttime="20201115 22:03:58.199" endtime="20201115 22:03:58.202"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:58.207" level="INFO">VALUE: [3.015300000000498e-05, 3.0138999999998473e-05, 3.0000000000002247e-05, 2.9819000000000373e-05, 3.0152999999998042e-05, 2.9819000000000373e-05, 2.96379999999985e-05, 2.9652999999997542e-05, 3.0166000000005078e-05, 3.0500000000002747e-05, 3.044399999999753e-05, 3.0152999999998042e-05, 3.04579999999971e-05, 2.9806000000000277e-05, 3.048599999999624e-05, 2.9819999999999847e-05, 2.9986000000002677e-05, 2.9624999999998403e-05, 2.9819000000000373e-05, 2.9985999999995738e-05, 2.9819999999999847e-05, 3.0347000000000013e-05, 3.048599999999624e-05, 3.011100000001321e-05, 3.015300000000498e-05, 3.0486999999995712e-05, 2.99579999999966e-05, 3.016599999999814e-05, 3.0472000000003607e-05, 2.9638999999997973e-05, 3.0500000000002747e-05, 3.048599999999624e-05, 2.9804999999993864e-05, 3.0486999999995712e-05, 2.9972000000003107e-05, 3.0333000000007382e-05, 3.0513999999995378e-05, 3.048700000000959e-05, 3.0013999999994878e-05, 3.0319000000000873e-05, 3.0486000000010116e-05, 3.022199999999642e-05, 2.9804999999993864e-05, 2.9860999999992144e-05, 3.048599999999624e-05, 3.0472000000003607e-05, 3.029199999998733e-05, 3.0000000000002247e-05, 3.054199999999452e-05, 3.0304999999994364e-05]</msg>
<status status="PASS" starttime="20201115 22:03:58.204" endtime="20201115 22:03:58.209"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:58.192" endtime="20201115 22:03:58.210"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:58.217" endtime="20201115 22:03:58.220"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:58.226" endtime="20201115 22:03:58.248"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:58.221" endtime="20201115 22:03:58.249"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:58.212" endtime="20201115 22:03:58.251"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:57.655" endtime="20201115 22:03:58.252"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:55.258" endtime="20201115 22:03:58.252"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:55.256" endtime="20201115 22:03:58.253"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:58.258" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:58.282" endtime="20201115 22:03:58.322"></status>
</kw>
<msg timestamp="20201115 22:03:58.323" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:58.279" endtime="20201115 22:03:58.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:58.329" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:58.325" endtime="20201115 22:03:58.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:58.332" endtime="20201115 22:03:58.335"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:58.271" endtime="20201115 22:03:58.337"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:58.264" endtime="20201115 22:03:58.339"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:58.358" endtime="20201115 22:03:58.711"></status>
</kw>
<msg timestamp="20201115 22:03:58.718" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049022625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049053556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:58.354" endtime="20201115 22:03:58.719"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:58.737" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049022625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049053556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:58.721" endtime="20201115 22:03:58.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:58.740" endtime="20201115 22:03:58.744"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:58.347" endtime="20201115 22:03:58.746"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:58.340" endtime="20201115 22:03:58.747"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:58.758" level="INFO">${RESULT} = [{'time': 0.049053556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.093099999999793e-05, 'source_diff': 3.093099999999793e-05}, {'time': 0.049635417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:58.749" endtime="20201115 22:03:58.759"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:58.790" level="INFO">${OVERHEAD} = {'time': [0.049053556, 0.049635417, 0.050212069, 0.050788833, 0.051363569, 0.051940292, 0.052517944, 0.053096736, 0.053678444, 0.054257194, 0.054835806, 0.055413625, 0.055991306, 0.056570111, 0.057151...</msg>
<status status="PASS" starttime="20201115 22:03:58.760" endtime="20201115 22:03:58.790"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:58.801" level="INFO">NAME: 00-overhead-22-set</msg>
<status status="PASS" starttime="20201115 22:03:58.799" endtime="20201115 22:03:58.802"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:58.807" level="INFO">VALUE: [3.093099999999793e-05, 3.1348000000000487e-05, 3.1012999999996405e-05, 3.116599999999914e-05, 3.06249999999994e-05, 3.069499999999725e-05, 3.048599999999624e-05, 3.119399999999828e-05, 3.067999999999821e-05, 3.069400000000472e-05, 3.080600000000128e-05, 3.118099999999818e-05, 3.0444999999997002e-05, 3.119399999999828e-05, 3.134700000000101e-05, 3.1348000000000487e-05, 3.0846999999993574e-05, 3.0513999999995378e-05, 3.083400000000042e-05, 3.069500000000419e-05, 3.099999999999631e-05, 3.117999999999871e-05, 3.065299999999854e-05, 3.098599999999674e-05, 3.048599999999624e-05, 3.134700000000101e-05, 3.102799999998851e-05, 3.1180999999991243e-05, 3.083399999999348e-05, 3.069500000001113e-05, 3.100000000000325e-05, 3.1180999999991243e-05, 3.118100000000512e-05, 3.067999999999127e-05, 3.101399999999588e-05, 3.101399999999588e-05, 3.0513999999995378e-05, 3.0834000000007356e-05, 3.134700000000101e-05, 3.134700000000101e-05, 3.126400000000307e-05, 3.0500000000002747e-05, 3.0514000000009256e-05, 3.090199999999932e-05, 3.100000000000325e-05, 3.1194000000012156e-05, 3.086100000000702e-05, 3.100000000000325e-05, 3.0513000000009782e-05, 3.118100000000512e-05]</msg>
<status status="PASS" starttime="20201115 22:03:58.803" endtime="20201115 22:03:58.808"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:58.791" endtime="20201115 22:03:58.810"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:58.816" endtime="20201115 22:03:58.819"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:58.825" endtime="20201115 22:03:58.847"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:58.820" endtime="20201115 22:03:58.849"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:58.812" endtime="20201115 22:03:58.850"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:58.259" endtime="20201115 22:03:58.851"></status>
</kw>
<msg timestamp="20201115 22:03:58.851" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:58.875" endtime="20201115 22:03:58.915"></status>
</kw>
<msg timestamp="20201115 22:03:58.916" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:58.872" endtime="20201115 22:03:58.916"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:58.922" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:58.918" endtime="20201115 22:03:58.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:58.925" endtime="20201115 22:03:58.929"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:58.864" endtime="20201115 22:03:58.930"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:58.858" endtime="20201115 22:03:58.932"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:58.950" endtime="20201115 22:03:59.307"></status>
</kw>
<msg timestamp="20201115 22:03:59.314" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0425665, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042597486, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:03:58.945" endtime="20201115 22:03:59.314"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:59.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0425665, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042597486, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:03:59.316" endtime="20201115 22:03:59.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:59.335" endtime="20201115 22:03:59.339"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:58.938" endtime="20201115 22:03:59.341"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:58.933" endtime="20201115 22:03:59.342"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:59.353" level="INFO">${RESULT} = [{'time': 0.042597486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.098599999999674e-05, 'source_diff': 3.098599999999674e-05}, {'time': 0.043176194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:59.344" endtime="20201115 22:03:59.353"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:59.386" level="INFO">${OVERHEAD} = {'time': [0.042597486, 0.043176194, 0.043754972, 0.044331708, 0.044913375, 0.045491208, 0.046070931, 0.046648542, 0.047226153, 0.047805847, 0.048384444, 0.048960181, 0.049541833, 0.0501205, 0.05070041...</msg>
<status status="PASS" starttime="20201115 22:03:59.355" endtime="20201115 22:03:59.387"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:59.398" level="INFO">NAME: 00-overhead-22-set</msg>
<status status="PASS" starttime="20201115 22:03:59.396" endtime="20201115 22:03:59.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:59.404" level="INFO">VALUE: [3.098599999999674e-05, 3.067999999999821e-05, 3.084700000000051e-05, 3.136100000000058e-05, 3.113899999999947e-05, 3.084700000000051e-05, 3.0514000000002317e-05, 3.086100000000008e-05, 3.102800000000239e-05, 3.133300000000144e-05, 3.069399999999778e-05, 3.0486999999995712e-05, 3.117999999999871e-05, 3.133300000000144e-05, 3.126399999999613e-05, 3.118100000000512e-05, 3.116699999999861e-05, 3.0513999999995378e-05, 3.1013000000003343e-05, 3.082000000000085e-05, 3.100000000000325e-05, 3.133400000000092e-05, 3.0513999999995378e-05, 3.086100000000008e-05, 3.116599999999914e-05, 3.0499999999995808e-05, 3.1346999999994074e-05, 3.116700000000555e-05, 3.1348000000000487e-05, 3.0514000000002317e-05, 3.099999999999631e-05, 3.0513000000002843e-05, 3.133300000000144e-05, 3.084700000000051e-05, 3.065199999999907e-05, 3.0513999999995378e-05, 3.116699999999861e-05, 3.0486999999995712e-05, 3.069399999999778e-05, 3.133300000000838e-05, 3.113899999999947e-05, 3.066599999999864e-05, 3.048599999999624e-05, 3.1014000000009756e-05, 3.087499999999965e-05, 3.048599999999624e-05, 3.0513999999995378e-05, 3.133399999999398e-05, 3.0472000000003607e-05, 3.066699999999811e-05]</msg>
<status status="PASS" starttime="20201115 22:03:59.401" endtime="20201115 22:03:59.405"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:59.389" endtime="20201115 22:03:59.406"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:59.413" endtime="20201115 22:03:59.416"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:59.421" endtime="20201115 22:03:59.443"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:59.417" endtime="20201115 22:03:59.445"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:59.408" endtime="20201115 22:03:59.447"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:58.853" endtime="20201115 22:03:59.447"></status>
</kw>
<msg timestamp="20201115 22:03:59.448" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:59.471" endtime="20201115 22:03:59.511"></status>
</kw>
<msg timestamp="20201115 22:03:59.512" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:59.468" endtime="20201115 22:03:59.512"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:59.518" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:59.514" endtime="20201115 22:03:59.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:59.520" endtime="20201115 22:03:59.524"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:59.461" endtime="20201115 22:03:59.526"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:59.455" endtime="20201115 22:03:59.528"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:59.545" endtime="20201115 22:03:59.899"></status>
</kw>
<msg timestamp="20201115 22:03:59.907" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042202236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042233236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:59.541" endtime="20201115 22:03:59.907"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:59.925" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042202236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042233236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:59.909" endtime="20201115 22:03:59.926"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:59.928" endtime="20201115 22:03:59.932"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:59.534" endtime="20201115 22:03:59.933"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:59.529" endtime="20201115 22:03:59.935"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:59.946" level="INFO">${RESULT} = [{'time': 0.042233236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.100000000000325e-05, 'source_diff': 3.100000000000325e-05}, {'time': 0.042811125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:59.936" endtime="20201115 22:03:59.947"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:59.978" level="INFO">${OVERHEAD} = {'time': [0.042233236, 0.042811125, 0.043392806, 0.043968556, 0.044550389, 0.045129181, 0.045710903, 0.046289792, 0.046871431, 0.047449097, 0.048030931, 0.048609694, 0.049184528, 0.049761236, 0.050343...</msg>
<status status="PASS" starttime="20201115 22:03:59.948" endtime="20201115 22:03:59.978"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:59.989" level="INFO">NAME: 00-overhead-22-set</msg>
<status status="PASS" starttime="20201115 22:03:59.987" endtime="20201115 22:03:59.990"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:59.995" level="INFO">VALUE: [3.100000000000325e-05, 3.084700000000051e-05, 3.133400000000092e-05, 3.101399999999588e-05, 3.134700000000101e-05, 3.118099999999818e-05, 3.084700000000051e-05, 3.073600000000343e-05, 3.133400000000092e-05, 3.0500000000002747e-05, 3.068099999999768e-05, 3.116599999999914e-05, 3.07779999999952e-05, 3.100000000000325e-05, 3.054200000000146e-05, 3.119399999999828e-05, 3.134700000000101e-05, 3.052700000000241e-05, 3.063899999999897e-05, 3.052799999999495e-05, 3.1012999999996405e-05, 3.108300000000119e-05, 3.129199999999527e-05, 3.133300000000144e-05, 3.115299999999904e-05, 3.115199999999957e-05, 3.099999999999631e-05, 3.116699999999861e-05, 3.133300000000144e-05, 3.101399999999588e-05, 3.116699999999861e-05, 3.063899999999897e-05, 3.086100000000008e-05, 3.063899999999897e-05, 3.083300000000094e-05, 3.065299999999854e-05, 3.0847999999999987e-05, 3.0472000000003607e-05, 3.102799999998851e-05, 3.0500000000002747e-05, 3.134700000000101e-05, 3.137500000000015e-05, 3.102700000000291e-05, 3.098599999999674e-05, 3.130599999999484e-05, 3.097200000000411e-05, 3.1360999999993644e-05, 3.119399999999828e-05, 3.088800000000669e-05, 3.108300000000119e-05]</msg>
<status status="PASS" starttime="20201115 22:03:59.991" endtime="20201115 22:03:59.996"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:59.980" endtime="20201115 22:03:59.997"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:00.004" endtime="20201115 22:04:00.007"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:00.012" endtime="20201115 22:04:00.034"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:00.008" endtime="20201115 22:04:00.036"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:59.999" endtime="20201115 22:04:00.038"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:59.449" endtime="20201115 22:04:00.038"></status>
</kw>
<msg timestamp="20201115 22:04:00.039" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:00.062" endtime="20201115 22:04:00.102"></status>
</kw>
<msg timestamp="20201115 22:04:00.103" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:00.059" endtime="20201115 22:04:00.103"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:00.109" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:00.105" endtime="20201115 22:04:00.110"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:00.111" endtime="20201115 22:04:00.115"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:00.052" endtime="20201115 22:04:00.117"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:00.046" endtime="20201115 22:04:00.119"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:00.136" endtime="20201115 22:04:00.489"></status>
</kw>
<msg timestamp="20201115 22:04:00.496" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042219556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042250472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:00.132" endtime="20201115 22:04:00.496"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:00.514" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042219556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042250472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:00.498" endtime="20201115 22:04:00.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:00.522" endtime="20201115 22:04:00.528"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:00.125" endtime="20201115 22:04:00.529"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:00.120" endtime="20201115 22:04:00.531"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:00.542" level="INFO">${RESULT} = [{'time': 0.042250472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.091599999999889e-05, 'source_diff': 3.091599999999889e-05}, {'time': 0.042832306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:00.533" endtime="20201115 22:04:00.542"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:00.573" level="INFO">${OVERHEAD} = {'time': [0.042250472, 0.042832306, 0.04340925, 0.043988125, 0.044568986, 0.04514975, 0.045727639, 0.046310278, 0.046886181, 0.047467972, 0.048048722, 0.048629639, 0.049209458, 0.049791347, 0.05037219...</msg>
<status status="PASS" starttime="20201115 22:04:00.544" endtime="20201115 22:04:00.574"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:00.584" level="INFO">NAME: 00-overhead-22-set</msg>
<status status="PASS" starttime="20201115 22:04:00.582" endtime="20201115 22:04:00.585"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:00.590" level="INFO">VALUE: [3.091599999999889e-05, 3.066699999999811e-05, 3.134700000000101e-05, 3.118100000000512e-05, 3.067999999999821e-05, 3.084700000000051e-05, 3.105600000000153e-05, 3.116700000000555e-05, 3.0847999999999987e-05, 3.099999999999631e-05, 3.101400000000282e-05, 3.090300000000573e-05, 3.101399999999588e-05, 3.069399999999778e-05, 3.069400000000472e-05, 3.045900000000351e-05, 3.081900000000137e-05, 3.066599999999864e-05, 3.052799999999495e-05, 3.129200000000221e-05, 3.0500000000002747e-05, 3.133300000000144e-05, 3.065199999999907e-05, 3.115299999999904e-05, 3.099999999999631e-05, 3.098600000000368e-05, 3.083300000000094e-05, 3.122199999999742e-05, 3.134700000000101e-05, 3.127800000000264e-05, 3.0499999999995808e-05, 3.134700000000101e-05, 3.133400000000092e-05, 3.099999999999631e-05, 3.0513999999995378e-05, 3.115300000000598e-05, 3.098599999999674e-05, 3.066699999999811e-05, 3.062500000000634e-05, 3.068000000000515e-05, 3.0500000000002747e-05, 3.0832999999994004e-05, 3.0832999999994004e-05, 3.0514000000009256e-05, 3.070800000000429e-05, 3.0847999999999987e-05, 3.102700000000291e-05, 3.118000000000565e-05, 3.080599999999434e-05, 3.0832999999994004e-05]</msg>
<status status="PASS" starttime="20201115 22:04:00.587" endtime="20201115 22:04:00.591"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:00.575" endtime="20201115 22:04:00.592"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:00.599" endtime="20201115 22:04:00.602"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:00.608" endtime="20201115 22:04:00.629"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:00.603" endtime="20201115 22:04:00.631"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:00.594" endtime="20201115 22:04:00.633"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:00.040" endtime="20201115 22:04:00.634"></status>
</kw>
<msg timestamp="20201115 22:04:00.634" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:00.658" endtime="20201115 22:04:00.697"></status>
</kw>
<msg timestamp="20201115 22:04:00.698" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:00.654" endtime="20201115 22:04:00.698"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:00.704" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:00.700" endtime="20201115 22:04:00.705"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:00.707" endtime="20201115 22:04:00.710"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:00.647" endtime="20201115 22:04:00.712"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:00.641" endtime="20201115 22:04:00.714"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:00.731" endtime="20201115 22:04:01.083"></status>
</kw>
<msg timestamp="20201115 22:04:01.090" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042161875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042192556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:00.727" endtime="20201115 22:04:01.091"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:01.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042161875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042192556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:01.093" endtime="20201115 22:04:01.112"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:01.115" endtime="20201115 22:04:01.121"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:00.720" endtime="20201115 22:04:01.123"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:00.715" endtime="20201115 22:04:01.125"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:01.137" level="INFO">${RESULT} = [{'time': 0.042192556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.068099999999768e-05, 'source_diff': 3.068099999999768e-05}, {'time': 0.042768389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:01.127" endtime="20201115 22:04:01.138"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:01.173" level="INFO">${OVERHEAD} = {'time': [0.042192556, 0.042768389, 0.043345222, 0.043923056, 0.044500875, 0.045080514, 0.045662347, 0.046238083, 0.046816903, 0.047397667, 0.0479785, 0.048557361, 0.049135056, 0.049714986, 0.05029272...</msg>
<status status="PASS" starttime="20201115 22:04:01.140" endtime="20201115 22:04:01.174"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:01.188" level="INFO">NAME: 00-overhead-22-set</msg>
<status status="PASS" starttime="20201115 22:04:01.185" endtime="20201115 22:04:01.189"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:01.196" level="INFO">VALUE: [3.068099999999768e-05, 3.1346999999994074e-05, 3.061099999999983e-05, 3.0514000000002317e-05, 3.070800000000429e-05, 3.115299999999904e-05, 3.133300000000144e-05, 3.065199999999907e-05, 3.0514000000002317e-05, 3.101399999999588e-05, 3.116699999999861e-05, 3.101400000000282e-05, 3.068100000000462e-05, 3.116700000000555e-05, 3.098599999999674e-05, 3.084700000000051e-05, 3.118099999999818e-05, 3.083300000000094e-05, 3.101399999999588e-05, 3.052800000000189e-05, 3.067999999999821e-05, 3.134700000000101e-05, 3.0500000000002747e-05, 3.097199999999717e-05, 3.0499999999995808e-05, 3.0847999999999987e-05, 3.099999999999631e-05, 3.048599999999624e-05, 3.084700000000051e-05, 3.0499999999995808e-05, 3.065299999999854e-05, 3.052700000000241e-05, 3.0846999999993574e-05, 3.068000000000515e-05, 3.086100000000008e-05, 3.052800000000189e-05, 3.1348000000000487e-05, 3.069399999999778e-05, 3.084700000000051e-05, 3.104199999999502e-05, 3.084700000000051e-05, 3.066699999999811e-05, 3.1012999999996405e-05, 3.1068999999994684e-05, 3.0458999999996572e-05, 3.115199999999263e-05, 3.133300000000838e-05, 3.0652999999991604e-05, 3.0500000000002747e-05, 3.129200000000221e-05]</msg>
<status status="PASS" starttime="20201115 22:04:01.191" endtime="20201115 22:04:01.197"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:01.176" endtime="20201115 22:04:01.199"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:01.206" endtime="20201115 22:04:01.210"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:01.217" endtime="20201115 22:04:01.240"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:01.212" endtime="20201115 22:04:01.242"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:01.201" endtime="20201115 22:04:01.243"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:00.635" endtime="20201115 22:04:01.244"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:58.255" endtime="20201115 22:04:01.245"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:58.254" endtime="20201115 22:04:01.245"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:04:01.250" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:01.274" endtime="20201115 22:04:01.315"></status>
</kw>
<msg timestamp="20201115 22:04:01.316" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:01.270" endtime="20201115 22:04:01.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:01.322" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:01.318" endtime="20201115 22:04:01.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:01.325" endtime="20201115 22:04:01.329"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:01.263" endtime="20201115 22:04:01.330"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:01.257" endtime="20201115 22:04:01.332"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:01.350" endtime="20201115 22:04:01.704"></status>
</kw>
<msg timestamp="20201115 22:04:01.711" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049040111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049071486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:01.346" endtime="20201115 22:04:01.712"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:01.730" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049040111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049071486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:01.714" endtime="20201115 22:04:01.731"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:01.732" endtime="20201115 22:04:01.736"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:01.339" endtime="20201115 22:04:01.738"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:01.334" endtime="20201115 22:04:01.739"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:01.750" level="INFO">${RESULT} = [{'time': 0.049071486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.137500000000015e-05, 'source_diff': 3.137500000000015e-05}, {'time': 0.049684389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:01.741" endtime="20201115 22:04:01.751"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:01.784" level="INFO">${OVERHEAD} = {'time': [0.049071486, 0.049684389, 0.050292153, 0.050904028, 0.051514875, 0.052121722, 0.052731528, 0.053342333, 0.053956097, 0.054565014, 0.055173806, 0.055785542, 0.056395319, 0.057008236, 0.057616...</msg>
<status status="PASS" starttime="20201115 22:04:01.752" endtime="20201115 22:04:01.785"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:01.795" level="INFO">NAME: 00-overhead-23-set</msg>
<status status="PASS" starttime="20201115 22:04:01.793" endtime="20201115 22:04:01.796"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:01.801" level="INFO">VALUE: [3.137500000000015e-05, 3.186100000000108e-05, 3.154200000000246e-05, 3.145899999999757e-05, 3.155600000000203e-05, 3.129100000000273e-05, 3.138899999999972e-05, 3.170799999999835e-05, 3.167999999999921e-05, 3.186100000000108e-05, 3.220899999999832e-05, 3.202800000000339e-05, 3.136100000000058e-05, 3.152799999999595e-05, 3.137500000000015e-05, 3.190299999999979e-05, 3.206999999999516e-05, 3.204100000000348e-05, 3.218099999999918e-05, 3.201399999999688e-05, 3.169399999999878e-05, 3.220899999999832e-05, 3.205600000000253e-05, 3.220799999999191e-05, 3.168100000000562e-05, 3.169399999999878e-05, 3.215199999999363e-05, 3.152800000000289e-05, 3.200000000000425e-05, 3.184700000000151e-05, 3.184700000000151e-05, 3.201399999999688e-05, 3.202800000000339e-05, 3.1527000000003413e-05, 3.150000000000375e-05, 3.202800000000339e-05, 3.136100000000752e-05, 3.138900000000666e-05, 3.200000000000425e-05, 3.184700000000151e-05, 3.137500000000015e-05, 3.2040999999996544e-05, 3.137500000000015e-05, 3.169399999999878e-05, 3.154199999999552e-05, 3.141600000000633e-05, 3.2027000000003913e-05, 3.1860999999994144e-05, 3.17779999999962e-05, 3.2027000000003913e-05]</msg>
<status status="PASS" starttime="20201115 22:04:01.798" endtime="20201115 22:04:01.802"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:01.786" endtime="20201115 22:04:01.803"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:01.810" endtime="20201115 22:04:01.813"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:01.819" endtime="20201115 22:04:01.841"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:01.815" endtime="20201115 22:04:01.843"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:01.805" endtime="20201115 22:04:01.845"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:01.251" endtime="20201115 22:04:01.846"></status>
</kw>
<msg timestamp="20201115 22:04:01.846" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:01.870" endtime="20201115 22:04:01.911"></status>
</kw>
<msg timestamp="20201115 22:04:01.912" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:01.867" endtime="20201115 22:04:01.912"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:01.919" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:01.914" endtime="20201115 22:04:01.920"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:01.921" endtime="20201115 22:04:01.925"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:01.859" endtime="20201115 22:04:01.927"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:01.853" endtime="20201115 22:04:01.928"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:01.945" endtime="20201115 22:04:02.299"></status>
</kw>
<msg timestamp="20201115 22:04:02.306" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042735583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042767792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:01.942" endtime="20201115 22:04:02.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:02.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042735583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042767792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:02.309" endtime="20201115 22:04:02.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:02.327" endtime="20201115 22:04:02.331"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:01.935" endtime="20201115 22:04:02.333"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:01.930" endtime="20201115 22:04:02.334"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:02.345" level="INFO">${RESULT} = [{'time': 0.042767792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.220899999999832e-05, 'source_diff': 3.220899999999832e-05}, {'time': 0.043377722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:02.336" endtime="20201115 22:04:02.346"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:02.378" level="INFO">${OVERHEAD} = {'time': [0.042767792, 0.043377722, 0.043988417, 0.044599153, 0.045209875, 0.045817681, 0.046431486, 0.047043444, 0.047651222, 0.048265083, 0.048874861, 0.049483639, 0.050093306, 0.050705139, 0.051315...</msg>
<status status="PASS" starttime="20201115 22:04:02.347" endtime="20201115 22:04:02.378"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:02.389" level="INFO">NAME: 00-overhead-23-set</msg>
<status status="PASS" starttime="20201115 22:04:02.387" endtime="20201115 22:04:02.390"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:02.395" level="INFO">VALUE: [3.220899999999832e-05, 3.167999999999921e-05, 3.1598000000000737e-05, 3.184700000000151e-05, 3.201399999999688e-05, 3.154200000000246e-05, 3.152800000000289e-05, 3.167999999999921e-05, 3.152800000000289e-05, 3.151400000000332e-05, 3.204199999999602e-05, 3.169500000000519e-05, 3.152799999999595e-05, 3.218100000000612e-05, 3.186100000000108e-05, 3.2082999999995254e-05, 3.155600000000203e-05, 3.206900000000262e-05, 3.140299999999929e-05, 3.181900000000237e-05, 3.220799999999885e-05, 3.201399999999688e-05, 3.220899999999832e-05, 3.186100000000108e-05, 3.1862000000000557e-05, 3.137500000000015e-05, 3.219499999999875e-05, 3.137500000000015e-05, 3.170900000000476e-05, 3.202799999999645e-05, 3.211100000000133e-05, 3.170800000000529e-05, 3.202800000000339e-05, 3.202800000000339e-05, 3.204199999999602e-05, 3.218100000000612e-05, 3.220800000000579e-05, 3.202800000000339e-05, 3.172199999999792e-05, 3.170799999999141e-05, 3.137500000000015e-05, 3.2180999999992244e-05, 3.187500000000065e-05, 3.1360999999993644e-05, 3.1304999999995364e-05, 3.182000000000185e-05, 3.136199999999312e-05, 3.184700000000151e-05, 3.188900000000716e-05, 3.14170000000058e-05]</msg>
<status status="PASS" starttime="20201115 22:04:02.391" endtime="20201115 22:04:02.396"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:02.380" endtime="20201115 22:04:02.397"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:02.404" endtime="20201115 22:04:02.407"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:02.412" endtime="20201115 22:04:02.435"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:02.408" endtime="20201115 22:04:02.436"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:02.399" endtime="20201115 22:04:02.438"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:01.847" endtime="20201115 22:04:02.439"></status>
</kw>
<msg timestamp="20201115 22:04:02.439" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:02.463" endtime="20201115 22:04:02.504"></status>
</kw>
<msg timestamp="20201115 22:04:02.506" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:02.459" endtime="20201115 22:04:02.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:02.512" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:02.508" endtime="20201115 22:04:02.513"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:02.514" endtime="20201115 22:04:02.518"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:02.452" endtime="20201115 22:04:02.520"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:02.446" endtime="20201115 22:04:02.521"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:02.538" endtime="20201115 22:04:02.890"></status>
</kw>
<msg timestamp="20201115 22:04:02.897" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043334056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043366139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:02.535" endtime="20201115 22:04:02.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:02.916" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043334056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043366139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:02.899" endtime="20201115 22:04:02.917"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:02.918" endtime="20201115 22:04:02.922"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:02.528" endtime="20201115 22:04:02.924"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:02.523" endtime="20201115 22:04:02.925"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:02.936" level="INFO">${RESULT} = [{'time': 0.043366139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.2082999999995254e-05, 'source_diff': 3.2082999999995254e-05}, {'time': 0.043974792, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:04:02.927" endtime="20201115 22:04:02.937"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:02.969" level="INFO">${OVERHEAD} = {'time': [0.043366139, 0.043974792, 0.044587597, 0.045201528, 0.04581025, 0.046417236, 0.047026958, 0.047638806, 0.0482525, 0.048865417, 0.049474292, 0.050087181, 0.050700014, 0.051314903, 0.051923861...</msg>
<status status="PASS" starttime="20201115 22:04:02.938" endtime="20201115 22:04:02.969"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:02.980" level="INFO">NAME: 00-overhead-23-set</msg>
<status status="PASS" starttime="20201115 22:04:02.978" endtime="20201115 22:04:02.981"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:02.986" level="INFO">VALUE: [3.2082999999995254e-05, 3.170899999999782e-05, 3.148599999999724e-05, 3.133400000000092e-05, 3.170799999999835e-05, 3.156900000000212e-05, 3.170799999999835e-05, 3.137500000000015e-05, 3.205599999999559e-05, 3.197300000000458e-05, 3.137500000000015e-05, 3.165299999999954e-05, 3.219499999999875e-05, 3.21250000000009e-05, 3.134700000000101e-05, 3.220799999999885e-05, 3.204200000000296e-05, 3.154100000000298e-05, 3.219399999999928e-05, 3.170799999999835e-05, 3.219499999999875e-05, 3.152800000000289e-05, 3.154200000000246e-05, 3.138899999999972e-05, 3.218000000000665e-05, 3.211100000000133e-05, 3.227800000000364e-05, 3.204100000000348e-05, 3.201400000000382e-05, 3.1874999999993714e-05, 3.187500000000065e-05, 3.187500000000065e-05, 3.219499999999875e-05, 3.137500000000015e-05, 3.2040999999996544e-05, 3.169399999999878e-05, 3.137500000000015e-05, 3.219499999999875e-05, 3.2180999999992244e-05, 3.208400000000167e-05, 3.137500000000015e-05, 3.1360999999993644e-05, 3.141599999999245e-05, 3.154199999999552e-05, 3.134700000000101e-05, 3.162500000000734e-05, 3.147199999999073e-05, 3.186100000000802e-05, 3.1527000000003413e-05, 3.1860999999994144e-05]</msg>
<status status="PASS" starttime="20201115 22:04:02.983" endtime="20201115 22:04:02.987"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:02.971" endtime="20201115 22:04:02.988"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:02.995" endtime="20201115 22:04:02.998"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:03.004" endtime="20201115 22:04:03.026"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:02.999" endtime="20201115 22:04:03.027"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:02.990" endtime="20201115 22:04:03.029"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:02.440" endtime="20201115 22:04:03.030"></status>
</kw>
<msg timestamp="20201115 22:04:03.031" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:03.054" endtime="20201115 22:04:03.095"></status>
</kw>
<msg timestamp="20201115 22:04:03.096" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:03.051" endtime="20201115 22:04:03.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:03.103" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:03.099" endtime="20201115 22:04:03.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:03.105" endtime="20201115 22:04:03.109"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:03.044" endtime="20201115 22:04:03.111"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:03.038" endtime="20201115 22:04:03.112"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:03.129" endtime="20201115 22:04:03.482"></status>
</kw>
<msg timestamp="20201115 22:04:03.489" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042943958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042976153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:03.126" endtime="20201115 22:04:03.490"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:03.508" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042943958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042976153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:03.492" endtime="20201115 22:04:03.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:03.510" endtime="20201115 22:04:03.514"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:03.118" endtime="20201115 22:04:03.516"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:03.114" endtime="20201115 22:04:03.517"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:03.528" level="INFO">${RESULT} = [{'time': 0.042976153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.219500000000569e-05, 'source_diff': 3.219500000000569e-05}, {'time': 0.043584917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:03.519" endtime="20201115 22:04:03.529"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:03.561" level="INFO">${OVERHEAD} = {'time': [0.042976153, 0.043584917, 0.044196764, 0.044807611, 0.045417417, 0.046026042, 0.046635861, 0.047247556, 0.047860333, 0.048472125, 0.049084986, 0.049697917, 0.050309667, 0.050917569, 0.051526...</msg>
<status status="PASS" starttime="20201115 22:04:03.530" endtime="20201115 22:04:03.562"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:03.573" level="INFO">NAME: 00-overhead-23-set</msg>
<status status="PASS" starttime="20201115 22:04:03.570" endtime="20201115 22:04:03.573"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:03.578" level="INFO">VALUE: [3.219500000000569e-05, 3.170899999999782e-05, 3.191699999999936e-05, 3.201399999999688e-05, 3.186100000000108e-05, 3.180600000000228e-05, 3.187500000000065e-05, 3.218100000000612e-05, 3.201399999999688e-05, 3.12779999999957e-05, 3.201399999999688e-05, 3.136100000000058e-05, 3.184800000000099e-05, 3.136100000000058e-05, 3.15700000000016e-05, 3.187500000000065e-05, 3.136100000000058e-05, 3.186100000000108e-05, 3.169499999999825e-05, 3.220800000000579e-05, 3.197199999999817e-05, 3.169399999999878e-05, 3.1512999999996905e-05, 3.170899999999782e-05, 3.166599999999964e-05, 3.1362000000000056e-05, 3.168099999999868e-05, 3.136100000000058e-05, 3.201399999999688e-05, 3.134700000000101e-05, 3.220799999999885e-05, 3.223599999999799e-05, 3.202800000000339e-05, 3.1348000000000487e-05, 3.186100000000802e-05, 3.187500000000065e-05, 3.155600000000203e-05, 3.169399999999878e-05, 3.219399999999928e-05, 3.219399999999928e-05, 3.144400000000547e-05, 3.1570000000008536e-05, 3.136100000000752e-05, 3.137500000000015e-05, 3.202800000000339e-05, 3.170899999999088e-05, 3.1527000000003413e-05, 3.151399999999638e-05, 3.1860999999994144e-05, 3.137500000000015e-05]</msg>
<status status="PASS" starttime="20201115 22:04:03.575" endtime="20201115 22:04:03.579"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:03.563" endtime="20201115 22:04:03.581"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:03.587" endtime="20201115 22:04:03.591"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:03.597" endtime="20201115 22:04:03.619"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:03.592" endtime="20201115 22:04:03.620"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:03.583" endtime="20201115 22:04:03.622"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:03.032" endtime="20201115 22:04:03.623"></status>
</kw>
<msg timestamp="20201115 22:04:03.623" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:03.647" endtime="20201115 22:04:03.688"></status>
</kw>
<msg timestamp="20201115 22:04:03.689" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:03.643" endtime="20201115 22:04:03.689"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:03.695" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:03.691" endtime="20201115 22:04:03.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:03.697" endtime="20201115 22:04:03.701"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:03.636" endtime="20201115 22:04:03.703"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:03.630" endtime="20201115 22:04:03.705"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:03.721" endtime="20201115 22:04:04.075"></status>
</kw>
<msg timestamp="20201115 22:04:04.083" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042214653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042246194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:03.718" endtime="20201115 22:04:04.083"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:04.101" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042214653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042246194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:04.085" endtime="20201115 22:04:04.102"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:04.104" endtime="20201115 22:04:04.108"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:03.711" endtime="20201115 22:04:04.109"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:03.706" endtime="20201115 22:04:04.111"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:04.122" level="INFO">${RESULT} = [{'time': 0.042246194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.154100000000298e-05, 'source_diff': 3.154100000000298e-05}, {'time': 0.042860972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:04.112" endtime="20201115 22:04:04.122"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:04.156" level="INFO">${OVERHEAD} = {'time': [0.042246194, 0.042860972, 0.04347075, 0.044080486, 0.044691361, 0.045299222, 0.045910944, 0.046523736, 0.04713675, 0.047743389, 0.048356153, 0.048967917, 0.049576583, 0.050185389, 0.05079518...</msg>
<status status="PASS" starttime="20201115 22:04:04.124" endtime="20201115 22:04:04.156"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:04.167" level="INFO">NAME: 00-overhead-23-set</msg>
<status status="PASS" starttime="20201115 22:04:04.165" endtime="20201115 22:04:04.168"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:04.173" level="INFO">VALUE: [3.154100000000298e-05, 3.199999999999731e-05, 3.138899999999972e-05, 3.220799999999885e-05, 3.138899999999972e-05, 3.170799999999835e-05, 3.133300000000144e-05, 3.151400000000332e-05, 3.155599999999509e-05, 3.1332999999994504e-05, 3.152799999999595e-05, 3.187500000000065e-05, 3.217999999999971e-05, 3.204199999999602e-05, 3.22370000000044e-05, 3.219399999999928e-05, 3.167999999999921e-05, 3.188800000000075e-05, 3.172200000000486e-05, 3.219499999999875e-05, 3.134700000000101e-05, 3.2027000000003913e-05, 3.209700000000176e-05, 3.222199999999842e-05, 3.1360999999993644e-05, 3.148600000000418e-05, 3.137500000000015e-05, 3.152799999999595e-05, 3.136100000000058e-05, 3.151400000000332e-05, 3.138899999999972e-05, 3.169399999999878e-05, 3.202799999999645e-05, 3.1846999999994574e-05, 3.167999999999227e-05, 3.218000000000665e-05, 3.2040999999996544e-05, 3.184700000000151e-05, 3.184700000000151e-05, 3.1526999999989536e-05, 3.201399999999688e-05, 3.168000000000615e-05, 3.169399999999878e-05, 3.2042000000009896e-05, 3.186199999999362e-05, 3.201399999999688e-05, 3.184800000000099e-05, 3.1888999999993284e-05, 3.152800000000289e-05, 3.1527000000003413e-05]</msg>
<status status="PASS" starttime="20201115 22:04:04.170" endtime="20201115 22:04:04.174"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:04.158" endtime="20201115 22:04:04.176"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:04.183" endtime="20201115 22:04:04.185"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:04.191" endtime="20201115 22:04:04.213"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:04.187" endtime="20201115 22:04:04.215"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:04.178" endtime="20201115 22:04:04.216"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:03.624" endtime="20201115 22:04:04.217"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:01.248" endtime="20201115 22:04:04.218"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:01.246" endtime="20201115 22:04:04.218"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:04:04.223" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:04.247" endtime="20201115 22:04:04.289"></status>
</kw>
<msg timestamp="20201115 22:04:04.290" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:04.243" endtime="20201115 22:04:04.290"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:04.297" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:04.292" endtime="20201115 22:04:04.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:04.299" endtime="20201115 22:04:04.303"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:04.236" endtime="20201115 22:04:04.304"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:04.230" endtime="20201115 22:04:04.306"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:04.323" endtime="20201115 22:04:04.674"></status>
</kw>
<msg timestamp="20201115 22:04:04.681" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047690986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047723528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:04.319" endtime="20201115 22:04:04.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:04.700" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047690986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047723528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:04.684" endtime="20201115 22:04:04.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:04.702" endtime="20201115 22:04:04.706"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:04.312" endtime="20201115 22:04:04.708"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:04.307" endtime="20201115 22:04:04.709"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:04.720" level="INFO">${RESULT} = [{'time': 0.047723528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.254200000000346e-05, 'source_diff': 3.254200000000346e-05}, {'time': 0.048368472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:04.711" endtime="20201115 22:04:04.721"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:04.753" level="INFO">${OVERHEAD} = {'time': [0.047723528, 0.048368472, 0.049014292, 0.049659236, 0.050305958, 0.050944764, 0.051585708, 0.052226417, 0.05286625, 0.053505181, 0.054149111, 0.054791958, 0.055433917, 0.056075722, 0.0567165...</msg>
<status status="PASS" starttime="20201115 22:04:04.722" endtime="20201115 22:04:04.754"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:04.764" level="INFO">NAME: 00-overhead-24-set</msg>
<status status="PASS" starttime="20201115 22:04:04.762" endtime="20201115 22:04:04.765"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:04.771" level="INFO">VALUE: [3.254200000000346e-05, 3.2541000000003983e-05, 3.236100000000158e-05, 3.270799999999935e-05, 3.2776999999997725e-05, 3.248599999999824e-05, 3.270799999999935e-05, 3.240300000000029e-05, 3.223599999999799e-05, 3.270899999999882e-05, 3.287500000000165e-05, 3.273599999999849e-05, 3.240300000000029e-05, 3.222199999999842e-05, 3.269399999999978e-05, 3.272299999999839e-05, 3.255599999999609e-05, 3.305599999999659e-05, 3.255500000000355e-05, 3.286100000000208e-05, 3.288900000000122e-05, 3.220799999999885e-05, 3.273599999999849e-05, 3.270799999999935e-05, 3.2888999999994284e-05, 3.240300000000029e-05, 3.272199999999892e-05, 3.255600000000303e-05, 3.219399999999928e-05, 3.223600000000493e-05, 3.287500000000165e-05, 3.2874999999987775e-05, 3.237500000000115e-05, 3.255600000000303e-05, 3.237500000000115e-05, 3.295899999999907e-05, 3.222199999999842e-05, 3.306999999999616e-05, 3.2388999999993784e-05, 3.2388999999993784e-05, 3.240300000000029e-05, 3.255600000000303e-05, 3.272299999999839e-05, 3.2888999999994284e-05, 3.219500000001263e-05, 3.272199999999892e-05, 3.287500000000165e-05, 3.237500000000115e-05, 3.3070000000010036e-05, 3.24170000000068e-05]</msg>
<status status="PASS" starttime="20201115 22:04:04.767" endtime="20201115 22:04:04.771"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:04.755" endtime="20201115 22:04:04.773"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:04.780" endtime="20201115 22:04:04.782"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:04.788" endtime="20201115 22:04:04.810"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:04.784" endtime="20201115 22:04:04.812"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:04.775" endtime="20201115 22:04:04.814"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:04.224" endtime="20201115 22:04:04.814"></status>
</kw>
<msg timestamp="20201115 22:04:04.815" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:04.838" endtime="20201115 22:04:04.881"></status>
</kw>
<msg timestamp="20201115 22:04:04.882" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:04.835" endtime="20201115 22:04:04.882"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:04.888" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:04.884" endtime="20201115 22:04:04.889"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:04.891" endtime="20201115 22:04:04.895"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:04.828" endtime="20201115 22:04:04.896"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:04.822" endtime="20201115 22:04:04.898"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:04.915" endtime="20201115 22:04:05.268"></status>
</kw>
<msg timestamp="20201115 22:04:05.275" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042355708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042387917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:04.912" endtime="20201115 22:04:05.276"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:05.294" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042355708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042387917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:05.278" endtime="20201115 22:04:05.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:05.296" endtime="20201115 22:04:05.300"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:04.904" endtime="20201115 22:04:05.302"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:04.899" endtime="20201115 22:04:05.304"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:05.314" level="INFO">${RESULT} = [{'time': 0.042387917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.220899999999832e-05, 'source_diff': 3.220899999999832e-05}, {'time': 0.043032764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:05.305" endtime="20201115 22:04:05.315"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:05.346" level="INFO">${OVERHEAD} = {'time': [0.042387917, 0.043032764, 0.043675639, 0.044320597, 0.044965681, 0.045608486, 0.046255347, 0.046901347, 0.047545125, 0.048191028, 0.048836986, 0.049482764, 0.050127722, 0.050769778, 0.051413...</msg>
<status status="PASS" starttime="20201115 22:04:05.316" endtime="20201115 22:04:05.347"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:05.359" level="INFO">NAME: 00-overhead-24-set</msg>
<status status="PASS" starttime="20201115 22:04:05.356" endtime="20201115 22:04:05.360"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:05.365" level="INFO">VALUE: [3.220899999999832e-05, 3.22500000000045e-05, 3.305600000000353e-05, 3.305500000000405e-05, 3.274999999999806e-05, 3.270799999999935e-05, 3.305500000000405e-05, 3.287500000000165e-05, 3.238900000000072e-05, 3.222199999999842e-05, 3.3054999999997114e-05, 3.288900000000122e-05, 3.274999999999806e-05, 3.287500000000165e-05, 3.276399999999763e-05, 3.290300000000079e-05, 3.222199999999842e-05, 3.29579999999996e-05, 3.223599999999799e-05, 3.272199999999892e-05, 3.238900000000072e-05, 3.237500000000115e-05, 3.30700000000031e-05, 3.240300000000029e-05, 3.240300000000029e-05, 3.3041000000004483e-05, 3.304200000000396e-05, 3.290300000000079e-05, 3.276399999999763e-05, 3.270799999999935e-05, 3.287500000000165e-05, 3.269399999999978e-05, 3.233300000000938e-05, 3.237500000000115e-05, 3.305500000000405e-05, 3.220800000000579e-05, 3.2888999999994284e-05, 3.220800000000579e-05, 3.255600000000303e-05, 3.2514000000011256e-05, 3.304199999999702e-05, 3.270799999999241e-05, 3.270900000000576e-05, 3.272199999999892e-05, 3.236100000000852e-05, 3.222300000001177e-05, 3.287500000000165e-05, 3.2540999999997045e-05, 3.2888999999994284e-05, 3.237500000000115e-05]</msg>
<status status="PASS" starttime="20201115 22:04:05.362" endtime="20201115 22:04:05.366"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:05.349" endtime="20201115 22:04:05.367"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:05.374" endtime="20201115 22:04:05.377"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:05.382" endtime="20201115 22:04:05.404"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:05.378" endtime="20201115 22:04:05.406"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:05.369" endtime="20201115 22:04:05.408"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:04.816" endtime="20201115 22:04:05.408"></status>
</kw>
<msg timestamp="20201115 22:04:05.409" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:05.433" endtime="20201115 22:04:05.475"></status>
</kw>
<msg timestamp="20201115 22:04:05.476" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:05.429" endtime="20201115 22:04:05.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:05.483" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:05.479" endtime="20201115 22:04:05.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:05.485" endtime="20201115 22:04:05.489"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:05.422" endtime="20201115 22:04:05.491"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:05.416" endtime="20201115 22:04:05.492"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:05.509" endtime="20201115 22:04:05.862"></status>
</kw>
<msg timestamp="20201115 22:04:05.869" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042469903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042502458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:05.506" endtime="20201115 22:04:05.869"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:05.887" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042469903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042502458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:05.871" endtime="20201115 22:04:05.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:05.890" endtime="20201115 22:04:05.894"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:05.498" endtime="20201115 22:04:05.895"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:05.494" endtime="20201115 22:04:05.897"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:05.908" level="INFO">${RESULT} = [{'time': 0.042502458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.2554999999996614e-05, 'source_diff': 3.2554999999996614e-05}, {'time': 0.043146431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:04:05.898" endtime="20201115 22:04:05.916"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:05.948" level="INFO">${OVERHEAD} = {'time': [0.042502458, 0.043146431, 0.043791347, 0.044435375, 0.045079306, 0.045726181, 0.046372208, 0.047017944, 0.047663986, 0.048303944, 0.048946861, 0.049588764, 0.050229597, 0.050871583, 0.051513...</msg>
<status status="PASS" starttime="20201115 22:04:05.918" endtime="20201115 22:04:05.949"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:05.960" level="INFO">NAME: 00-overhead-24-set</msg>
<status status="PASS" starttime="20201115 22:04:05.957" endtime="20201115 22:04:05.961"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:05.966" level="INFO">VALUE: [3.2554999999996614e-05, 3.281999999999591e-05, 3.272199999999892e-05, 3.288900000000122e-05, 3.286200000000156e-05, 3.290300000000079e-05, 3.3068999999996684e-05, 3.237500000000115e-05, 3.229199999999627e-05, 3.2513000000004844e-05, 3.220799999999885e-05, 3.226399999999713e-05, 3.223599999999799e-05, 3.288900000000122e-05, 3.2860999999995144e-05, 3.2374999999994214e-05, 3.29449999999995e-05, 3.238800000000125e-05, 3.240300000000029e-05, 3.2568999999996184e-05, 3.269399999999978e-05, 3.254199999999652e-05, 3.241699999999986e-05, 3.290300000000079e-05, 3.266700000000011e-05, 3.305600000000353e-05, 3.223600000000493e-05, 3.305600000000353e-05, 3.223599999999799e-05, 3.223600000000493e-05, 3.2916999999993424e-05, 3.273599999999849e-05, 3.273600000000543e-05, 3.237500000000115e-05, 3.240300000000029e-05, 3.220800000000579e-05, 3.272199999999892e-05, 3.256900000001006e-05, 3.2208999999991383e-05, 3.222199999999842e-05, 3.255500000000355e-05, 3.2222000000012296e-05, 3.2888999999994284e-05, 3.251399999999738e-05, 3.237500000000115e-05, 3.2888999999994284e-05, 3.288900000000816e-05, 3.220799999999191e-05, 3.222299999999789e-05, 3.3070000000010036e-05]</msg>
<status status="PASS" starttime="20201115 22:04:05.962" endtime="20201115 22:04:05.968"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:05.950" endtime="20201115 22:04:05.970"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:05.977" endtime="20201115 22:04:05.980"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:05.985" endtime="20201115 22:04:06.008"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:05.981" endtime="20201115 22:04:06.009"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:05.972" endtime="20201115 22:04:06.011"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:05.410" endtime="20201115 22:04:06.012"></status>
</kw>
<msg timestamp="20201115 22:04:06.012" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:06.036" endtime="20201115 22:04:06.078"></status>
</kw>
<msg timestamp="20201115 22:04:06.079" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:06.032" endtime="20201115 22:04:06.080"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:06.086" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:06.082" endtime="20201115 22:04:06.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:06.088" endtime="20201115 22:04:06.092"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:06.025" endtime="20201115 22:04:06.094"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:06.019" endtime="20201115 22:04:06.095"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:06.112" endtime="20201115 22:04:06.466"></status>
</kw>
<msg timestamp="20201115 22:04:06.473" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042600069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042632639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:06.109" endtime="20201115 22:04:06.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:06.491" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042600069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042632639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:06.475" endtime="20201115 22:04:06.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:06.494" endtime="20201115 22:04:06.498"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:06.101" endtime="20201115 22:04:06.500"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:06.097" endtime="20201115 22:04:06.502"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:06.512" level="INFO">${RESULT} = [{'time': 0.042632639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.25700000000026e-05, 'source_diff': 3.25700000000026e-05}, {'time': 0.043274486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:04:06.503" endtime="20201115 22:04:06.513"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:06.546" level="INFO">${OVERHEAD} = {'time': [0.042632639, 0.043274486, 0.043916236, 0.044558153, 0.045204069, 0.045849028, 0.046489958, 0.047131917, 0.047773778, 0.048417847, 0.049062694, 0.049709528, 0.050349208, 0.050994097, 0.051638...</msg>
<status status="PASS" starttime="20201115 22:04:06.515" endtime="20201115 22:04:06.546"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:06.557" level="INFO">NAME: 00-overhead-24-set</msg>
<status status="PASS" starttime="20201115 22:04:06.555" endtime="20201115 22:04:06.558"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:06.563" level="INFO">VALUE: [3.25700000000026e-05, 3.252800000000389e-05, 3.2374999999994214e-05, 3.238900000000072e-05, 3.270799999999935e-05, 3.286100000000208e-05, 3.272199999999892e-05, 3.220900000000526e-05, 3.283400000000242e-05, 3.238900000000072e-05, 3.219399999999928e-05, 3.238900000000072e-05, 3.220799999999885e-05, 3.305500000000405e-05, 3.270799999999935e-05, 3.288900000000122e-05, 3.305599999999659e-05, 3.236100000000158e-05, 3.22500000000045e-05, 3.2638999999994034e-05, 3.273599999999849e-05, 3.3054999999997114e-05, 3.3068999999996684e-05, 3.217999999999971e-05, 3.23050000000033e-05, 3.237500000000115e-05, 3.2554999999996614e-05, 3.240300000000029e-05, 3.286100000000208e-05, 3.222300000000483e-05, 3.237500000000115e-05, 3.244399999999259e-05, 3.3040999999997545e-05, 3.304199999999702e-05, 3.2542000000010396e-05, 3.258400000000217e-05, 3.288800000000869e-05, 3.305600000000353e-05, 3.2360999999994644e-05, 3.238900000000766e-05, 3.2791000000004233e-05, 3.287500000000165e-05, 3.2874999999987775e-05, 3.272199999999892e-05, 3.269399999999978e-05, 3.255600000000303e-05, 3.219399999999928e-05, 3.305500000000405e-05, 3.273599999999155e-05, 3.305599999998965e-05]</msg>
<status status="PASS" starttime="20201115 22:04:06.560" endtime="20201115 22:04:06.564"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:06.548" endtime="20201115 22:04:06.565"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:06.572" endtime="20201115 22:04:06.576"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:06.582" endtime="20201115 22:04:06.604"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:06.577" endtime="20201115 22:04:06.606"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:06.567" endtime="20201115 22:04:06.607"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:06.013" endtime="20201115 22:04:06.608"></status>
</kw>
<msg timestamp="20201115 22:04:06.608" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:06.632" endtime="20201115 22:04:06.674"></status>
</kw>
<msg timestamp="20201115 22:04:06.676" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:06.628" endtime="20201115 22:04:06.676"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:06.682" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:06.678" endtime="20201115 22:04:06.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:06.684" endtime="20201115 22:04:06.688"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:06.621" endtime="20201115 22:04:06.690"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:06.615" endtime="20201115 22:04:06.691"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:06.708" endtime="20201115 22:04:07.064"></status>
</kw>
<msg timestamp="20201115 22:04:07.071" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042255708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042288264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:06.705" endtime="20201115 22:04:07.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:07.090" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042255708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042288264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:07.074" endtime="20201115 22:04:07.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:07.092" endtime="20201115 22:04:07.096"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:06.698" endtime="20201115 22:04:07.098"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:06.693" endtime="20201115 22:04:07.100"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:07.111" level="INFO">${RESULT} = [{'time': 0.042288264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.255599999999609e-05, 'source_diff': 3.255599999999609e-05}, {'time': 0.042933097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:07.101" endtime="20201115 22:04:07.111"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:07.142" level="INFO">${OVERHEAD} = {'time': [0.042288264, 0.042933097, 0.043575875, 0.044219736, 0.044865625, 0.045508528, 0.046154361, 0.046794264, 0.047437028, 0.048081806, 0.048722722, 0.0493685, 0.050008389, 0.050653167, 0.05129818...</msg>
<status status="PASS" starttime="20201115 22:04:07.113" endtime="20201115 22:04:07.143"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:07.153" level="INFO">NAME: 00-overhead-24-set</msg>
<status status="PASS" starttime="20201115 22:04:07.151" endtime="20201115 22:04:07.154"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:07.159" level="INFO">VALUE: [3.255599999999609e-05, 3.286100000000208e-05, 3.270799999999935e-05, 3.288900000000122e-05, 3.273599999999849e-05, 3.288900000000122e-05, 3.222199999999842e-05, 3.255600000000303e-05, 3.291700000000036e-05, 3.304199999999702e-05, 3.287500000000165e-05, 3.288900000000122e-05, 3.226399999999713e-05, 3.255599999999609e-05, 3.284799999999505e-05, 3.30700000000031e-05, 3.219399999999928e-05, 3.220799999999885e-05, 3.222200000000536e-05, 3.254200000000346e-05, 3.3054999999997114e-05, 3.220800000000579e-05, 3.22500000000045e-05, 3.222199999999842e-05, 3.2374999999994214e-05, 3.255599999999609e-05, 3.222199999999842e-05, 3.2374999999994214e-05, 3.309700000000276e-05, 3.25700000000026e-05, 3.237500000000115e-05, 3.305600000000353e-05, 3.288900000000816e-05, 3.255500000000355e-05, 3.252799999999001e-05, 3.216600000000014e-05, 3.220900000000526e-05, 3.234800000000149e-05, 3.266700000000011e-05, 3.255599999998915e-05, 3.2778000000011076e-05, 3.217999999999277e-05, 3.238900000000766e-05, 3.237500000000115e-05, 3.272299999999839e-05, 3.255600000000303e-05, 3.305600000000353e-05, 3.223600000000493e-05, 3.2540999999997045e-05, 3.272199999999892e-05]</msg>
<status status="PASS" starttime="20201115 22:04:07.156" endtime="20201115 22:04:07.160"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:07.144" endtime="20201115 22:04:07.161"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:07.168" endtime="20201115 22:04:07.171"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:07.177" endtime="20201115 22:04:07.200"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:07.172" endtime="20201115 22:04:07.202"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:07.163" endtime="20201115 22:04:07.203"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:06.609" endtime="20201115 22:04:07.204"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:04.220" endtime="20201115 22:04:07.204"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:04.219" endtime="20201115 22:04:07.205"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:04:07.210" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:07.233" endtime="20201115 22:04:07.277"></status>
</kw>
<msg timestamp="20201115 22:04:07.279" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:07.230" endtime="20201115 22:04:07.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:07.285" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:07.281" endtime="20201115 22:04:07.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:07.287" endtime="20201115 22:04:07.291"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:07.222" endtime="20201115 22:04:07.293"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:07.216" endtime="20201115 22:04:07.294"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:07.312" endtime="20201115 22:04:07.664"></status>
</kw>
<msg timestamp="20201115 22:04:07.671" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047720278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047753986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:07.309" endtime="20201115 22:04:07.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:07.690" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047720278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047753986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:07.674" endtime="20201115 22:04:07.691"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:07.692" endtime="20201115 22:04:07.696"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:07.301" endtime="20201115 22:04:07.698"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:07.296" endtime="20201115 22:04:07.700"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:07.710" level="INFO">${RESULT} = [{'time': 0.047753986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.370800000000035e-05, 'source_diff': 3.370800000000035e-05}, {'time': 0.048431931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:07.701" endtime="20201115 22:04:07.711"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:07.742" level="INFO">${OVERHEAD} = {'time': [0.047753986, 0.048431931, 0.049107833, 0.049783819, 0.050457708, 0.051133681, 0.051809694, 0.052488625, 0.053163597, 0.053842458, 0.054519472, 0.055195306, 0.055871403, 0.056545319, 0.057220...</msg>
<status status="PASS" starttime="20201115 22:04:07.713" endtime="20201115 22:04:07.743"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:07.754" level="INFO">NAME: 00-overhead-25-set</msg>
<status status="PASS" starttime="20201115 22:04:07.751" endtime="20201115 22:04:07.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:07.759" level="INFO">VALUE: [3.370800000000035e-05, 3.323699999999846e-05, 3.317999999999377e-05, 3.340200000000182e-05, 3.390199999999538e-05, 3.311200000000181e-05, 3.338800000000225e-05, 3.344400000000053e-05, 3.3804999999997865e-05, 3.306900000000362e-05, 3.391600000000189e-05, 3.387500000000265e-05, 3.376399999999863e-05, 3.3304999999997364e-05, 3.3041000000004483e-05, 3.391700000000136e-05, 3.390300000000179e-05, 3.311100000000233e-05, 3.32779999999977e-05, 3.3568999999997184e-05, 3.338900000000172e-05, 3.388900000000222e-05, 3.338900000000866e-05, 3.324999999999856e-05, 3.3068999999996684e-05, 3.341600000000833e-05, 3.3388999999994784e-05, 3.34170000000078e-05, 3.305500000000405e-05, 3.3040999999997545e-05, 3.30970000000097e-05, 3.341599999999445e-05, 3.34170000000078e-05, 3.306999999999616e-05, 3.341600000000833e-05, 3.3416999999993924e-05, 3.323600000000593e-05, 3.356900000001106e-05, 3.372199999999992e-05, 3.390300000000179e-05, 3.384800000000299e-05, 3.3598000000009676e-05, 3.374999999999906e-05, 3.304199999999702e-05, 3.306999999999616e-05, 3.356900000001106e-05, 3.374999999999906e-05, 3.373600000000643e-05, 3.390300000000179e-05, 3.3291000000004733e-05]</msg>
<status status="PASS" starttime="20201115 22:04:07.756" endtime="20201115 22:04:07.760"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:07.744" endtime="20201115 22:04:07.762"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:07.768" endtime="20201115 22:04:07.771"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:07.778" endtime="20201115 22:04:07.800"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:07.772" endtime="20201115 22:04:07.802"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:07.763" endtime="20201115 22:04:07.803"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:07.211" endtime="20201115 22:04:07.804"></status>
</kw>
<msg timestamp="20201115 22:04:07.804" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:07.828" endtime="20201115 22:04:07.872"></status>
</kw>
<msg timestamp="20201115 22:04:07.873" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:07.825" endtime="20201115 22:04:07.874"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:07.880" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:07.876" endtime="20201115 22:04:07.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:07.883" endtime="20201115 22:04:07.887"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:07.817" endtime="20201115 22:04:07.888"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:07.811" endtime="20201115 22:04:07.890"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:07.907" endtime="20201115 22:04:08.260"></status>
</kw>
<msg timestamp="20201115 22:04:08.267" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042339014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042372764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:07.904" endtime="20201115 22:04:08.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:08.286" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042339014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042372764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:08.270" endtime="20201115 22:04:08.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:08.288" endtime="20201115 22:04:08.292"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:07.896" endtime="20201115 22:04:08.294"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:07.891" endtime="20201115 22:04:08.295"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:08.306" level="INFO">${RESULT} = [{'time': 0.042372764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.374999999999906e-05, 'source_diff': 3.374999999999906e-05}, {'time': 0.043047583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:08.297" endtime="20201115 22:04:08.307"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:08.338" level="INFO">${OVERHEAD} = {'time': [0.042372764, 0.043047583, 0.0437265, 0.044401403, 0.045075208, 0.045750056, 0.046428083, 0.047105944, 0.047782653, 0.048461653, 0.049137667, 0.049816778, 0.050494667, 0.051172681, 0.05184859...</msg>
<status status="PASS" starttime="20201115 22:04:08.308" endtime="20201115 22:04:08.338"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:08.349" level="INFO">NAME: 00-overhead-25-set</msg>
<status status="PASS" starttime="20201115 22:04:08.347" endtime="20201115 22:04:08.350"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:08.355" level="INFO">VALUE: [3.374999999999906e-05, 3.3568999999997184e-05, 3.308300000000319e-05, 3.373599999999949e-05, 3.338900000000172e-05, 3.318100000000018e-05, 3.373599999999949e-05, 3.340199999999488e-05, 3.370899999999982e-05, 3.30700000000031e-05, 3.368100000000068e-05, 3.341700000000086e-05, 3.338900000000172e-05, 3.324999999999856e-05, 3.391600000000189e-05, 3.373599999999949e-05, 3.324999999999856e-05, 3.372199999999992e-05, 3.306900000000362e-05, 3.374999999999906e-05, 3.32500000000055e-05, 3.30700000000031e-05, 3.305500000000405e-05, 3.377800000000514e-05, 3.393000000000146e-05, 3.323599999999899e-05, 3.368000000000121e-05, 3.391700000000136e-05, 3.376399999999863e-05, 3.302799999999745e-05, 3.323600000000593e-05, 3.34170000000078e-05, 3.393000000000146e-05, 3.35970000000102e-05, 3.343000000000096e-05, 3.366700000000111e-05, 3.35979999999958e-05, 3.323599999999205e-05, 3.370900000000676e-05, 3.3568999999997184e-05, 3.356999999999666e-05, 3.361100000000283e-05, 3.393100000000093e-05, 3.34170000000078e-05, 3.358300000000369e-05, 3.376399999999169e-05, 3.3916999999994424e-05, 3.361100000000283e-05, 3.391599999999495e-05, 3.343000000000096e-05]</msg>
<status status="PASS" starttime="20201115 22:04:08.351" endtime="20201115 22:04:08.355"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:08.340" endtime="20201115 22:04:08.357"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:08.364" endtime="20201115 22:04:08.367"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:08.373" endtime="20201115 22:04:08.395"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:08.368" endtime="20201115 22:04:08.397"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:08.359" endtime="20201115 22:04:08.399"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:07.806" endtime="20201115 22:04:08.399"></status>
</kw>
<msg timestamp="20201115 22:04:08.400" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:08.425" endtime="20201115 22:04:08.468"></status>
</kw>
<msg timestamp="20201115 22:04:08.470" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:08.421" endtime="20201115 22:04:08.470"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:08.476" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:08.472" endtime="20201115 22:04:08.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:08.478" endtime="20201115 22:04:08.482"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:08.414" endtime="20201115 22:04:08.484"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:08.407" endtime="20201115 22:04:08.485"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:08.502" endtime="20201115 22:04:08.845"></status>
</kw>
<msg timestamp="20201115 22:04:08.852" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044214236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044248139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:08.499" endtime="20201115 22:04:08.853"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:08.871" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044214236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044248139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:08.855" endtime="20201115 22:04:08.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:08.873" endtime="20201115 22:04:08.877"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:08.491" endtime="20201115 22:04:08.879"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:08.487" endtime="20201115 22:04:08.880"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:08.891" level="INFO">${RESULT} = [{'time': 0.044248139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.390300000000179e-05, 'source_diff': 3.390300000000179e-05}, {'time': 0.044921014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:08.882" endtime="20201115 22:04:08.891"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:08.924" level="INFO">${OVERHEAD} = {'time': [0.044248139, 0.044921014, 0.045596028, 0.046270819, 0.046946625, 0.047619639, 0.048296569, 0.048972458, 0.049646347, 0.050323319, 0.051000319, 0.051680208, 0.052359264, 0.053034139, 0.053712...</msg>
<status status="PASS" starttime="20201115 22:04:08.893" endtime="20201115 22:04:08.925"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:08.936" level="INFO">NAME: 00-overhead-25-set</msg>
<status status="PASS" starttime="20201115 22:04:08.933" endtime="20201115 22:04:08.936"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:08.941" level="INFO">VALUE: [3.390300000000179e-05, 3.35700000000036e-05, 3.356999999999666e-05, 3.3082999999996254e-05, 3.3068999999996684e-05, 3.322199999999942e-05, 3.340199999999488e-05, 3.393000000000146e-05, 3.341600000000139e-05, 3.3582999999996754e-05, 3.394400000000103e-05, 3.3554999999997615e-05, 3.361100000000283e-05, 3.322199999999942e-05, 3.323599999999899e-05, 3.324999999999856e-05, 3.3638999999995034e-05, 3.3568999999997184e-05, 3.352799999999795e-05, 3.3512999999998905e-05, 3.388900000000222e-05, 3.323600000000593e-05, 3.302800000000439e-05, 3.373599999999949e-05, 3.311100000000233e-05, 3.3750000000006e-05, 3.341600000000139e-05, 3.324999999999856e-05, 3.326400000000507e-05, 3.344400000000747e-05, 3.374999999999906e-05, 3.372199999999992e-05, 3.324999999999856e-05, 3.3596999999996324e-05, 3.322199999999942e-05, 3.323600000000593e-05, 3.323599999999205e-05, 3.381900000000437e-05, 3.305500000000405e-05, 3.338800000000919e-05, 3.308300000000319e-05, 3.319499999999975e-05, 3.340300000000129e-05, 3.372199999999992e-05, 3.340200000000182e-05, 3.306999999999616e-05, 3.340300000000129e-05, 3.337500000000215e-05, 3.322199999999942e-05, 3.352799999999101e-05]</msg>
<status status="PASS" starttime="20201115 22:04:08.938" endtime="20201115 22:04:08.942"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:08.926" endtime="20201115 22:04:08.944"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:08.950" endtime="20201115 22:04:08.953"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:08.959" endtime="20201115 22:04:08.980"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:08.954" endtime="20201115 22:04:08.982"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:08.945" endtime="20201115 22:04:08.984"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:08.401" endtime="20201115 22:04:08.984"></status>
</kw>
<msg timestamp="20201115 22:04:08.985" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:09.009" endtime="20201115 22:04:09.053"></status>
</kw>
<msg timestamp="20201115 22:04:09.054" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:09.006" endtime="20201115 22:04:09.055"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:09.061" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:09.056" endtime="20201115 22:04:09.062"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:09.063" endtime="20201115 22:04:09.067"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:08.998" endtime="20201115 22:04:09.069"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:08.992" endtime="20201115 22:04:09.071"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:09.088" endtime="20201115 22:04:09.431"></status>
</kw>
<msg timestamp="20201115 22:04:09.438" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043167181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043200764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:09.085" endtime="20201115 22:04:09.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:09.456" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043167181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043200764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:09.440" endtime="20201115 22:04:09.457"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:09.459" endtime="20201115 22:04:09.463"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:09.077" endtime="20201115 22:04:09.464"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:09.072" endtime="20201115 22:04:09.466"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:09.477" level="INFO">${RESULT} = [{'time': 0.043200764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.358300000000369e-05, 'source_diff': 3.358300000000369e-05}, {'time': 0.043875889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:09.467" endtime="20201115 22:04:09.477"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:09.508" level="INFO">${OVERHEAD} = {'time': [0.043200764, 0.043875889, 0.044548833, 0.045225889, 0.045900597, 0.046574611, 0.047248639, 0.04792775, 0.048605681, 0.04928175, 0.049958708, 0.050632667, 0.051312597, 0.051985667, 0.0526625,...</msg>
<status status="PASS" starttime="20201115 22:04:09.479" endtime="20201115 22:04:09.508"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:09.519" level="INFO">NAME: 00-overhead-25-set</msg>
<status status="PASS" starttime="20201115 22:04:09.517" endtime="20201115 22:04:09.520"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:09.524" level="INFO">VALUE: [3.358300000000369e-05, 3.327800000000464e-05, 3.373599999999949e-05, 3.3902999999994854e-05, 3.341600000000139e-05, 3.373599999999949e-05, 3.340300000000129e-05, 3.3582999999996754e-05, 3.358399999999623e-05, 3.3068999999996684e-05, 3.373599999999949e-05, 3.356999999999666e-05, 3.308300000000319e-05, 3.379199999999777e-05, 3.356900000000412e-05, 3.35700000000036e-05, 3.374999999999906e-05, 3.343000000000096e-05, 3.341600000000139e-05, 3.358400000000317e-05, 3.373599999999949e-05, 3.343000000000096e-05, 3.359700000000326e-05, 3.374999999999906e-05, 3.32500000000055e-05, 3.308400000000267e-05, 3.3291000000004733e-05, 3.3750000000006e-05, 3.359700000000326e-05, 3.324999999999856e-05, 3.376400000000557e-05, 3.308300000000319e-05, 3.340300000000129e-05, 3.305599999998965e-05, 3.372199999999992e-05, 3.3596999999996324e-05, 3.323600000000593e-05, 3.395900000000007e-05, 3.34170000000078e-05, 3.3930999999987055e-05, 3.356999999999666e-05, 3.322199999999942e-05, 3.306999999999616e-05, 3.324999999999856e-05, 3.391600000000883e-05, 3.338900000000866e-05, 3.376399999999169e-05, 3.340300000000129e-05, 3.30970000000097e-05, 3.373599999999255e-05]</msg>
<status status="PASS" starttime="20201115 22:04:09.521" endtime="20201115 22:04:09.525"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:09.510" endtime="20201115 22:04:09.527"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:09.533" endtime="20201115 22:04:09.537"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:09.543" endtime="20201115 22:04:09.565"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:09.538" endtime="20201115 22:04:09.567"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:09.529" endtime="20201115 22:04:09.568"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:08.987" endtime="20201115 22:04:09.569"></status>
</kw>
<msg timestamp="20201115 22:04:09.569" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:09.593" endtime="20201115 22:04:09.636"></status>
</kw>
<msg timestamp="20201115 22:04:09.637" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:09.589" endtime="20201115 22:04:09.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:09.643" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:09.639" endtime="20201115 22:04:09.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:09.646" endtime="20201115 22:04:09.650"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:09.582" endtime="20201115 22:04:09.651"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:09.576" endtime="20201115 22:04:09.653"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:09.671" endtime="20201115 22:04:10.014"></status>
</kw>
<msg timestamp="20201115 22:04:10.021" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041943472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041976694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:09.668" endtime="20201115 22:04:10.021"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:10.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041943472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041976694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:10.023" endtime="20201115 22:04:10.040"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:10.042" endtime="20201115 22:04:10.045"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:09.659" endtime="20201115 22:04:10.047"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:09.654" endtime="20201115 22:04:10.049"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:10.059" level="INFO">${RESULT} = [{'time': 0.041976694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.322199999999942e-05, 'source_diff': 3.322199999999942e-05}, {'time': 0.042650875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:10.050" endtime="20201115 22:04:10.060"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:10.091" level="INFO">${OVERHEAD} = {'time': [0.041976694, 0.042650875, 0.043329917, 0.044006917, 0.044684, 0.045362875, 0.046036931, 0.046715736, 0.047392667, 0.048071597, 0.048746583, 0.049425347, 0.050100472, 0.050777389, 0.051454111...</msg>
<status status="PASS" starttime="20201115 22:04:10.062" endtime="20201115 22:04:10.091"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:10.103" level="INFO">NAME: 00-overhead-25-set</msg>
<status status="PASS" starttime="20201115 22:04:10.100" endtime="20201115 22:04:10.104"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:10.109" level="INFO">VALUE: [3.322199999999942e-05, 3.374999999999906e-05, 3.359800000000274e-05, 3.358399999999623e-05, 3.355600000000403e-05, 3.373599999999949e-05, 3.30700000000031e-05, 3.373599999999949e-05, 3.341700000000086e-05, 3.390300000000179e-05, 3.363900000000197e-05, 3.356900000000412e-05, 3.3818999999997434e-05, 3.3096999999995824e-05, 3.3846999999996574e-05, 3.3068999999996684e-05, 3.340300000000129e-05, 3.313900000000147e-05, 3.374999999999906e-05, 3.390300000000179e-05, 3.3888999999995284e-05, 3.3568999999997184e-05, 3.37779999999982e-05, 3.390300000000179e-05, 3.3582999999996754e-05, 3.355599999999709e-05, 3.306900000000362e-05, 3.308400000000267e-05, 3.374999999999906e-05, 3.373599999999949e-05, 3.343000000000096e-05, 3.354199999999752e-05, 3.306999999999616e-05, 3.373599999999255e-05, 3.3416999999993924e-05, 3.379200000000471e-05, 3.37779999999982e-05, 3.3068999999996684e-05, 3.3054999999990176e-05, 3.341599999999445e-05, 3.313900000000147e-05, 3.324999999999856e-05, 3.3416999999993924e-05, 3.306999999999616e-05, 3.356999999999666e-05, 3.39170000000083e-05, 3.308400000000267e-05, 3.376400000000557e-05, 3.341600000000833e-05, 3.3582999999989815e-05]</msg>
<status status="PASS" starttime="20201115 22:04:10.105" endtime="20201115 22:04:10.110"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:10.093" endtime="20201115 22:04:10.112"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:10.118" endtime="20201115 22:04:10.121"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:10.127" endtime="20201115 22:04:10.148"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:10.122" endtime="20201115 22:04:10.150"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:10.114" endtime="20201115 22:04:10.152"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:09.570" endtime="20201115 22:04:10.153"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:07.207" endtime="20201115 22:04:10.153"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:07.206" endtime="20201115 22:04:10.154"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.608" endtime="20201115 22:04:10.154"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="teardown">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:10.164" endtime="20201115 22:04:10.186"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:10.160" endtime="20201115 22:04:10.188"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:10.157" endtime="20201115 22:04:10.189"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:02:57.478" endtime="20201115 22:04:10.190" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Remove List">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:10.208" endtime="20201115 22:04:10.230"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:10.205" endtime="20201115 22:04:10.232"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:10.267" endtime="20201115 22:04:10.283"></status>
</kw>
<msg timestamp="20201115 22:04:10.284" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:10.264" endtime="20201115 22:04:10.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:10.291" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:10.287" endtime="20201115 22:04:10.292"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:04:10.297" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:04:10.293" endtime="20201115 22:04:10.298"></status>
</kw>
<status status="FAIL" starttime="20201115 22:04:10.255" endtime="20201115 22:04:10.300"></status>
</kw>
<status status="FAIL" starttime="20201115 22:04:10.248" endtime="20201115 22:04:10.302"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:10.246" endtime="20201115 22:04:10.303"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:04:10.310" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:04:10.309" endtime="20201115 22:04:10.311"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:10.305" endtime="20201115 22:04:10.312"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:10.244" endtime="20201115 22:04:10.312"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:10.242" endtime="20201115 22:04:10.312"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:10.314" endtime="20201115 22:04:10.318"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:10.238" endtime="20201115 22:04:10.319"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:10.234" endtime="20201115 22:04:10.321"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:10.202" endtime="20201115 22:04:10.321"></status>
</kw>
<kw name="${n} IN RANGE [ 25 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:04:10.329" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:10.353" endtime="20201115 22:04:10.368"></status>
</kw>
<msg timestamp="20201115 22:04:10.369" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:10.349" endtime="20201115 22:04:10.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:10.375" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:10.371" endtime="20201115 22:04:10.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:10.378" endtime="20201115 22:04:10.381"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:10.342" endtime="20201115 22:04:10.383"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:10.335" endtime="20201115 22:04:10.385"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:10.401" endtime="20201115 22:04:10.758"></status>
</kw>
<msg timestamp="20201115 22:04:10.765" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.136673319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.136675347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:10.398" endtime="20201115 22:04:10.765"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:10.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.136673319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.136675347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:10.767" endtime="20201115 22:04:10.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:10.786" endtime="20201115 22:04:10.790"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:10.391" endtime="20201115 22:04:10.791"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:10.386" endtime="20201115 22:04:10.793"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:10.804" level="INFO">${RESULT} = [{'time': 0.136675347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.028000000015018e-06, 'source_diff': 2.028000000015018e-06}, {'time': 0.136784278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:10.794" endtime="20201115 22:04:10.804"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:10.835" level="INFO">${OVERHEAD} = {'time': [0.136675347, 0.136784278, 0.136887847, 0.136996569, 0.137104528, 0.137209958, 0.137319361, 0.137425514, 0.137532972, 0.137642486, 0.137746792, 0.137855222, 0.137961125, 0.13806425, 0.1381735...</msg>
<status status="PASS" starttime="20201115 22:04:10.806" endtime="20201115 22:04:10.835"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:10.846" level="INFO">NAME: 00-overhead-1-remove</msg>
<status status="PASS" starttime="20201115 22:04:10.844" endtime="20201115 22:04:10.847"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:10.852" level="INFO">VALUE: [2.028000000015018e-06, 2.0700000000206664e-06, 2.028000000015018e-06, 2.041000000008175e-06, 2.0840000000132974e-06, 2.0409999999804196e-06, 2.013999999994631e-06, 2.069999999992911e-06, 2.013999999994631e-06, 2.042000000007649e-06, 2.028000000015018e-06, 2.055000000000806e-06, 2.0279999999872622e-06, 2.0279999999872622e-06, 2.0269999999877886e-06, 2.0279999999872622e-06, 2.110999999999086e-06, 2.041000000008175e-06, 2.028000000015018e-06, 2.013999999994631e-06, 2.028000000015018e-06, 2.042000000007649e-06, 2.028000000015018e-06, 2.013999999994631e-06, 2.0279999999872622e-06, 2.097000000006455e-06, 2.028000000015018e-06, 2.042000000007649e-06, 2.028000000015018e-06, 2.028000000015018e-06, 2.042000000007649e-06, 2.041000000008175e-06, 2.042000000007649e-06, 2.027000000015544e-06, 2.028000000015018e-06, 2.055000000000806e-06, 2.055000000000806e-06, 2.0269999999877886e-06, 2.0279999999872622e-06, 2.0279999999872622e-06, 2.083000000013824e-06, 2.055000000000806e-06, 2.110999999999086e-06, 2.0409999999804196e-06, 2.013999999994631e-06, 2.000000000002e-06, 2.041000000008175e-06, 2.013999999994631e-06, 2.028000000015018e-06, 2.042000000007649e-06]</msg>
<status status="PASS" starttime="20201115 22:04:10.848" endtime="20201115 22:04:10.853"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:10.837" endtime="20201115 22:04:10.854"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:10.861" endtime="20201115 22:04:10.863"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:10.869" endtime="20201115 22:04:10.891"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:10.865" endtime="20201115 22:04:10.893"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:10.856" endtime="20201115 22:04:10.895"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:10.330" endtime="20201115 22:04:10.895"></status>
</kw>
<msg timestamp="20201115 22:04:10.896" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:10.919" endtime="20201115 22:04:10.934"></status>
</kw>
<msg timestamp="20201115 22:04:10.935" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:10.916" endtime="20201115 22:04:10.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:10.942" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:10.938" endtime="20201115 22:04:10.942"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:10.944" endtime="20201115 22:04:10.948"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:10.909" endtime="20201115 22:04:10.949"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:10.903" endtime="20201115 22:04:10.951"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:10.968" endtime="20201115 22:04:11.321"></status>
</kw>
<msg timestamp="20201115 22:04:11.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041643194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041645222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:10.964" endtime="20201115 22:04:11.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:11.347" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041643194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041645222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:11.331" endtime="20201115 22:04:11.347"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:11.349" endtime="20201115 22:04:11.355"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:10.957" endtime="20201115 22:04:11.356"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:10.952" endtime="20201115 22:04:11.358"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:11.368" level="INFO">${RESULT} = [{'time': 0.041645222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.02800000000114e-06, 'source_diff': 2.02800000000114e-06}, {'time': 0.041749972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:04:11.359" endtime="20201115 22:04:11.369"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:11.402" level="INFO">${OVERHEAD} = {'time': [0.041645222, 0.041749972, 0.041854903, 0.04196, 0.042065194, 0.042170083, 0.042277569, 0.042382139, 0.042487556, 0.042591069, 0.0426995, 0.042807986, 0.042916639, 0.043023667, 0.043128389, 0...</msg>
<status status="PASS" starttime="20201115 22:04:11.370" endtime="20201115 22:04:11.403"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:11.414" level="INFO">NAME: 00-overhead-1-remove</msg>
<status status="PASS" starttime="20201115 22:04:11.411" endtime="20201115 22:04:11.414"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:11.419" level="INFO">VALUE: [2.02800000000114e-06, 2.055000000000806e-06, 2.01400000000157e-06, 2.027999999994201e-06, 2.0410000000012363e-06, 2.0269999999947275e-06, 2.0410000000012363e-06, 2.02800000000114e-06, 2.02800000000114e-06, 2.0410000000012363e-06, 2.110999999999086e-06, 2.055000000000806e-06, 2.04200000000071e-06, 2.04200000000071e-06, 1.9860000000024303e-06, 1.9860000000024303e-06, 2.0269999999947275e-06, 2.027999999994201e-06, 2.0410000000012363e-06, 2.055000000000806e-06, 2.0270000000016664e-06, 2.01400000000157e-06, 2.0699999999998497e-06, 2.013999999994631e-06, 2.02800000000114e-06, 1.9580000000032904e-06, 2.0549999999938673e-06, 2.01400000000157e-06, 2.027999999994201e-06, 2.0699999999998497e-06, 2.027999999994201e-06, 2.0269999999947275e-06, 2.01400000000157e-06, 2.069000000000376e-06, 2.02800000000114e-06, 2.041999999993771e-06, 2.0839999999994197e-06, 2.01400000000157e-06, 2.000000000002e-06, 2.082999999999946e-06, 2.01400000000157e-06, 2.0270000000016664e-06, 2.000000000002e-06, 1.9860000000024303e-06, 2.01400000000157e-06, 2.02800000000114e-06, 2.02800000000114e-06, 2.04200000000071e-06, 2.01400000000157e-06, 2.0270000000016664e-06]</msg>
<status status="PASS" starttime="20201115 22:04:11.416" endtime="20201115 22:04:11.420"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:11.404" endtime="20201115 22:04:11.422"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:11.429" endtime="20201115 22:04:11.431"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:11.437" endtime="20201115 22:04:11.459"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:11.433" endtime="20201115 22:04:11.461"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:11.424" endtime="20201115 22:04:11.462"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:10.897" endtime="20201115 22:04:11.463"></status>
</kw>
<msg timestamp="20201115 22:04:11.464" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:11.487" endtime="20201115 22:04:11.503"></status>
</kw>
<msg timestamp="20201115 22:04:11.504" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:11.484" endtime="20201115 22:04:11.505"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:11.510" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:11.506" endtime="20201115 22:04:11.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:11.513" endtime="20201115 22:04:11.517"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:11.476" endtime="20201115 22:04:11.518"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:11.470" endtime="20201115 22:04:11.520"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:11.536" endtime="20201115 22:04:11.891"></status>
</kw>
<msg timestamp="20201115 22:04:11.898" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0422145, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042216528, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:04:11.533" endtime="20201115 22:04:11.899"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:11.917" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0422145, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042216528, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:04:11.901" endtime="20201115 22:04:11.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:11.919" endtime="20201115 22:04:11.923"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:11.526" endtime="20201115 22:04:11.925"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:11.521" endtime="20201115 22:04:11.926"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:11.937" level="INFO">${RESULT} = [{'time': 0.042216528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.02800000000114e-06, 'source_diff': 2.02800000000114e-06}, {'time': 0.042319917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:04:11.928" endtime="20201115 22:04:11.938"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:11.970" level="INFO">${OVERHEAD} = {'time': [0.042216528, 0.042319917, 0.042426417, 0.04253375, 0.042639181, 0.042746806, 0.042855847, 0.04296, 0.043067764, 0.043172569, 0.043277181, 0.043380917, 0.043488292, 0.043595542, 0.043700069, ...</msg>
<status status="PASS" starttime="20201115 22:04:11.939" endtime="20201115 22:04:11.970"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:11.981" level="INFO">NAME: 00-overhead-1-remove</msg>
<status status="PASS" starttime="20201115 22:04:11.978" endtime="20201115 22:04:11.981"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:11.986" level="INFO">VALUE: [2.02800000000114e-06, 2.04200000000071e-06, 2.000000000002e-06, 2.02800000000114e-06, 2.01400000000157e-06, 2.05600000000028e-06, 2.02800000000114e-06, 1.9999999999950613e-06, 2.02800000000114e-06, 2.055000000000806e-06, 2.0839999999994197e-06, 2.02800000000114e-06, 2.0839999999994197e-06, 2.0699999999998497e-06, 2.000000000002e-06, 2.02800000000114e-06, 2.027999999994201e-06, 1.9860000000024303e-06, 2.02800000000114e-06, 2.0130000000020964e-06, 2.027999999994201e-06, 2.0839999999994197e-06, 2.0130000000020964e-06, 2.04200000000071e-06, 2.01400000000157e-06, 1.9860000000024303e-06, 2.02800000000114e-06, 2.01400000000157e-06, 2.027999999994201e-06, 2.01400000000157e-06, 2.02800000000114e-06, 1.9720000000028604e-06, 2.0409999999942974e-06, 2.02800000000114e-06, 2.082999999999946e-06, 2.027999999994201e-06, 2.069000000000376e-06, 2.02800000000114e-06, 2.055000000000806e-06, 2.069000000000376e-06, 2.02800000000114e-06, 2.096999999999516e-06, 1.9999999999950613e-06, 2.069000000000376e-06, 2.01400000000157e-06, 2.01400000000157e-06, 1.9999999999950613e-06, 2.02800000000114e-06, 2.02800000000114e-06, 2.0410000000012363e-06]</msg>
<status status="PASS" starttime="20201115 22:04:11.983" endtime="20201115 22:04:11.988"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:11.971" endtime="20201115 22:04:11.989"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:11.996" endtime="20201115 22:04:11.999"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:12.004" endtime="20201115 22:04:12.027"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:12.000" endtime="20201115 22:04:12.028"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:11.991" endtime="20201115 22:04:12.030"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:11.465" endtime="20201115 22:04:12.031"></status>
</kw>
<msg timestamp="20201115 22:04:12.031" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:12.055" endtime="20201115 22:04:12.070"></status>
</kw>
<msg timestamp="20201115 22:04:12.071" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:12.051" endtime="20201115 22:04:12.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:12.078" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:12.074" endtime="20201115 22:04:12.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:12.080" endtime="20201115 22:04:12.084"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:12.044" endtime="20201115 22:04:12.085"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:12.038" endtime="20201115 22:04:12.087"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:12.104" endtime="20201115 22:04:12.459"></status>
</kw>
<msg timestamp="20201115 22:04:12.466" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041904222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04190625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:04:12.100" endtime="20201115 22:04:12.467"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:12.484" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041904222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04190625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:04:12.469" endtime="20201115 22:04:12.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:12.487" endtime="20201115 22:04:12.491"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:12.093" endtime="20201115 22:04:12.492"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:12.088" endtime="20201115 22:04:12.494"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:12.505" level="INFO">${RESULT} = [{'time': 0.04190625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.02800000000114e-06, 'source_diff': 2.02800000000114e-06}, {'time': 0.042015403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 22:04:12.496" endtime="20201115 22:04:12.505"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:12.537" level="INFO">${OVERHEAD} = {'time': [0.04190625, 0.042015403, 0.042122472, 0.042229722, 0.042337319, 0.042440458, 0.042546125, 0.042654681, 0.042761514, 0.042867194, 0.042975431, 0.043078944, 0.043188444, 0.043291931, 0.0433972...</msg>
<status status="PASS" starttime="20201115 22:04:12.507" endtime="20201115 22:04:12.537"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:12.548" level="INFO">NAME: 00-overhead-1-remove</msg>
<status status="PASS" starttime="20201115 22:04:12.546" endtime="20201115 22:04:12.549"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:12.553" level="INFO">VALUE: [2.02800000000114e-06, 2.02800000000114e-06, 2.02800000000114e-06, 2.069000000000376e-06, 2.0410000000012363e-06, 2.0270000000016664e-06, 2.027999999994201e-06, 2.01400000000157e-06, 2.02800000000114e-06, 2.0129999999951576e-06, 2.02800000000114e-06, 2.0270000000016664e-06, 2.0270000000016664e-06, 2.000000000002e-06, 2.02800000000114e-06, 2.0410000000012363e-06, 2.069000000000376e-06, 2.02800000000114e-06, 2.013999999994631e-06, 2.0270000000016664e-06, 2.04200000000071e-06, 2.02800000000114e-06, 2.05600000000028e-06, 2.0410000000012363e-06, 2.082999999999946e-06, 1.9999999999950613e-06, 2.01400000000157e-06, 2.041999999993771e-06, 2.069000000000376e-06, 2.000000000002e-06, 2.041999999993771e-06, 2.04200000000071e-06, 2.041999999993771e-06, 2.0979999999989896e-06, 2.04200000000071e-06, 1.9859999999954914e-06, 2.027999999994201e-06, 1.9720000000028604e-06, 2.02800000000114e-06, 2.000000000002e-06, 2.04200000000071e-06, 2.02800000000114e-06, 2.02800000000114e-06, 2.02800000000114e-06, 2.027999999994201e-06, 2.000000000002e-06, 2.02800000000114e-06, 2.02800000000114e-06, 2.0410000000012363e-06, 2.0410000000012363e-06]</msg>
<status status="PASS" starttime="20201115 22:04:12.550" endtime="20201115 22:04:12.555"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:12.539" endtime="20201115 22:04:12.557"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:12.563" endtime="20201115 22:04:12.566"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:12.572" endtime="20201115 22:04:12.594"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:12.567" endtime="20201115 22:04:12.596"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:12.559" endtime="20201115 22:04:12.597"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:12.032" endtime="20201115 22:04:12.598"></status>
</kw>
<msg timestamp="20201115 22:04:12.598" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:12.622" endtime="20201115 22:04:12.637"></status>
</kw>
<msg timestamp="20201115 22:04:12.638" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:12.618" endtime="20201115 22:04:12.639"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:12.645" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:12.641" endtime="20201115 22:04:12.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:12.647" endtime="20201115 22:04:12.651"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:12.611" endtime="20201115 22:04:12.652"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:12.605" endtime="20201115 22:04:12.654"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:12.671" endtime="20201115 22:04:13.025"></status>
</kw>
<msg timestamp="20201115 22:04:13.032" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041900458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041902486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:12.667" endtime="20201115 22:04:13.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:13.050" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041900458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041902486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:13.034" endtime="20201115 22:04:13.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:13.052" endtime="20201115 22:04:13.056"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:12.660" endtime="20201115 22:04:13.058"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:12.655" endtime="20201115 22:04:13.060"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:13.070" level="INFO">${RESULT} = [{'time': 0.041902486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.02800000000114e-06, 'source_diff': 2.02800000000114e-06}, {'time': 0.042011514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:04:13.061" endtime="20201115 22:04:13.071"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:13.102" level="INFO">${OVERHEAD} = {'time': [0.041902486, 0.042011514, 0.042115569, 0.042220333, 0.042325403, 0.042432556, 0.042535653, 0.042641361, 0.042748361, 0.042851833, 0.042955417, 0.043060514, 0.043165319, 0.043268806, 0.043373...</msg>
<status status="PASS" starttime="20201115 22:04:13.072" endtime="20201115 22:04:13.103"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:13.114" level="INFO">NAME: 00-overhead-1-remove</msg>
<status status="PASS" starttime="20201115 22:04:13.111" endtime="20201115 22:04:13.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:13.119" level="INFO">VALUE: [2.02800000000114e-06, 1.9720000000028604e-06, 2.0270000000016664e-06, 2.01400000000157e-06, 2.027999999994201e-06, 2.1120000000054984e-06, 1.9860000000024303e-06, 2.01400000000157e-06, 2.04200000000071e-06, 2.01400000000157e-06, 2.01400000000157e-06, 2.02800000000114e-06, 2.082999999999946e-06, 2.02800000000114e-06, 2.02800000000114e-06, 2.013999999994631e-06, 2.02800000000114e-06, 2.0410000000012363e-06, 2.02800000000114e-06, 2.02800000000114e-06, 2.02800000000114e-06, 2.069000000000376e-06, 2.04200000000071e-06, 2.01400000000157e-06, 2.000000000002e-06, 2.01400000000157e-06, 2.01400000000157e-06, 2.04200000000071e-06, 2.0699999999998497e-06, 2.013999999994631e-06, 2.04200000000071e-06, 2.055000000000806e-06, 2.0130000000020964e-06, 1.9859999999954914e-06, 2.027999999994201e-06, 2.01400000000157e-06, 2.027999999994201e-06, 2.000000000002e-06, 2.027999999994201e-06, 2.013999999994631e-06, 2.02800000000114e-06, 2.04200000000071e-06, 2.02800000000114e-06, 2.02800000000114e-06, 2.082999999999946e-06, 2.055000000000806e-06, 2.083000000006885e-06, 2.027999999994201e-06, 2.0270000000016664e-06, 2.0410000000012363e-06]</msg>
<status status="PASS" starttime="20201115 22:04:13.116" endtime="20201115 22:04:13.121"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:13.104" endtime="20201115 22:04:13.122"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:13.129" endtime="20201115 22:04:13.132"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:13.137" endtime="20201115 22:04:13.159"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:13.133" endtime="20201115 22:04:13.161"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:13.124" endtime="20201115 22:04:13.162"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:12.599" endtime="20201115 22:04:13.163"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:10.326" endtime="20201115 22:04:13.164"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:10.324" endtime="20201115 22:04:13.164"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:04:13.169" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:13.193" endtime="20201115 22:04:13.210"></status>
</kw>
<msg timestamp="20201115 22:04:13.211" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:13.190" endtime="20201115 22:04:13.212"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:13.218" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:13.214" endtime="20201115 22:04:13.218"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:13.220" endtime="20201115 22:04:13.224"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:13.182" endtime="20201115 22:04:13.225"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:13.176" endtime="20201115 22:04:13.227"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:13.244" endtime="20201115 22:04:13.601"></status>
</kw>
<msg timestamp="20201115 22:04:13.609" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048287972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048290208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:13.240" endtime="20201115 22:04:13.609"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:13.627" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048287972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048290208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:13.611" endtime="20201115 22:04:13.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:13.629" endtime="20201115 22:04:13.633"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:13.233" endtime="20201115 22:04:13.635"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:13.228" endtime="20201115 22:04:13.636"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:13.647" level="INFO">${RESULT} = [{'time': 0.048290208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2360000000026803e-06, 'source_diff': 2.2360000000026803e-06}, {'time': 0.048414597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:04:13.638" endtime="20201115 22:04:13.648"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:13.680" level="INFO">${OVERHEAD} = {'time': [0.048290208, 0.048414597, 0.048535681, 0.048657083, 0.048777444, 0.048897917, 0.049022889, 0.049140917, 0.049262972, 0.049383069, 0.049503681, 0.049624347, 0.049746917, 0.049866319, 0.049983...</msg>
<status status="PASS" starttime="20201115 22:04:13.649" endtime="20201115 22:04:13.681"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:13.693" level="INFO">NAME: 00-overhead-2-remove</msg>
<status status="PASS" starttime="20201115 22:04:13.690" endtime="20201115 22:04:13.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:13.699" level="INFO">VALUE: [2.2360000000026803e-06, 2.2499999999953113e-06, 2.1809999999969354e-06, 2.2219999999961715e-06, 2.2360000000026803e-06, 2.2359999999957414e-06, 2.25000000000225e-06, 2.223000000002584e-06, 2.2360000000026803e-06, 2.25000000000225e-06, 2.25000000000225e-06, 2.2359999999957414e-06, 2.2360000000026803e-06, 2.319000000000626e-06, 2.2499999999953113e-06, 2.2219999999961715e-06, 2.2360000000026803e-06, 2.237000000002154e-06, 2.2220000000031104e-06, 2.209000000003014e-06, 2.209000000003014e-06, 2.25000000000225e-06, 2.2360000000026803e-06, 2.2499999999953113e-06, 2.25000000000225e-06, 2.2359999999957414e-06, 2.26400000000182e-06, 2.2499999999953113e-06, 2.2359999999957414e-06, 2.2360000000026803e-06, 2.2359999999957414e-06, 2.25000000000225e-06, 2.2359999999957414e-06, 2.2639999999948812e-06, 2.1939999999970317e-06, 2.27800000000139e-06, 2.2359999999957414e-06, 2.2359999999957414e-06, 2.30600000000053e-06, 2.29200000000096e-06, 2.2219999999961715e-06, 2.25000000000225e-06, 2.2360000000026803e-06, 2.25000000000225e-06, 2.25000000000225e-06, 2.2360000000026803e-06, 2.2220000000031104e-06, 2.25000000000225e-06, 2.2079999999966016e-06, 2.2499999999953113e-06]</msg>
<status status="PASS" starttime="20201115 22:04:13.695" endtime="20201115 22:04:13.700"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:13.682" endtime="20201115 22:04:13.701"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:13.708" endtime="20201115 22:04:13.710"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:13.716" endtime="20201115 22:04:13.738"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:13.712" endtime="20201115 22:04:13.740"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:13.703" endtime="20201115 22:04:13.741"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:13.170" endtime="20201115 22:04:13.742"></status>
</kw>
<msg timestamp="20201115 22:04:13.743" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:13.766" endtime="20201115 22:04:13.782"></status>
</kw>
<msg timestamp="20201115 22:04:13.783" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:13.763" endtime="20201115 22:04:13.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:13.790" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:13.786" endtime="20201115 22:04:13.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:13.792" endtime="20201115 22:04:13.796"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:13.755" endtime="20201115 22:04:13.797"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:13.749" endtime="20201115 22:04:13.799"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:13.816" endtime="20201115 22:04:14.171"></status>
</kw>
<msg timestamp="20201115 22:04:14.179" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041624736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041627042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:13.812" endtime="20201115 22:04:14.179"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:14.197" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041624736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041627042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:14.181" endtime="20201115 22:04:14.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:14.199" endtime="20201115 22:04:14.203"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:13.805" endtime="20201115 22:04:14.205"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:13.800" endtime="20201115 22:04:14.207"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:14.218" level="INFO">${RESULT} = [{'time': 0.041627042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.30600000000053e-06, 'source_diff': 2.30600000000053e-06}, {'time': 0.041745639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:04:14.208" endtime="20201115 22:04:14.218"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:14.250" level="INFO">${OVERHEAD} = {'time': [0.041627042, 0.041745639, 0.041864472, 0.041987139, 0.042108361, 0.042232236, 0.042350792, 0.042469889, 0.042589333, 0.042712444, 0.042834778, 0.042953972, 0.043071653, 0.043194847, 0.043315...</msg>
<status status="PASS" starttime="20201115 22:04:14.220" endtime="20201115 22:04:14.251"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:14.262" level="INFO">NAME: 00-overhead-2-remove</msg>
<status status="PASS" starttime="20201115 22:04:14.259" endtime="20201115 22:04:14.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:14.268" level="INFO">VALUE: [2.30600000000053e-06, 2.25000000000225e-06, 2.25000000000225e-06, 2.2360000000026803e-06, 2.1799999999974617e-06, 2.2360000000026803e-06, 2.2359999999957414e-06, 2.2499999999953113e-06, 2.1939999999970317e-06, 2.2360000000026803e-06, 2.1669999999973655e-06, 2.2360000000026803e-06, 2.2360000000026803e-06, 2.2360000000026803e-06, 2.2219999999961715e-06, 2.2360000000026803e-06, 2.2499999999953113e-06, 2.25000000000225e-06, 2.2359999999957414e-06, 2.26400000000182e-06, 2.2499999999953113e-06, 2.209000000003014e-06, 2.2360000000026803e-06, 2.237000000002154e-06, 2.2359999999957414e-06, 2.2639999999948812e-06, 2.223000000002584e-06, 2.2360000000026803e-06, 2.2359999999957414e-06, 2.2359999999957414e-06, 2.2220000000031104e-06, 2.277999999994451e-06, 2.2359999999957414e-06, 2.26400000000182e-06, 2.2499999999953113e-06, 2.25000000000225e-06, 2.1939999999970317e-06, 2.25000000000225e-06, 2.2910000000014863e-06, 2.2220000000031104e-06, 2.2360000000026803e-06, 2.2360000000026803e-06, 2.2220000000031104e-06, 2.2359999999957414e-06, 2.2360000000026803e-06, 2.1939999999970317e-06, 2.25000000000225e-06, 2.2220000000031104e-06, 2.2359999999957414e-06, 2.2219999999961715e-06]</msg>
<status status="PASS" starttime="20201115 22:04:14.264" endtime="20201115 22:04:14.269"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:14.252" endtime="20201115 22:04:14.271"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:14.278" endtime="20201115 22:04:14.280"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:14.286" endtime="20201115 22:04:14.308"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:14.282" endtime="20201115 22:04:14.310"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:14.273" endtime="20201115 22:04:14.311"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:13.744" endtime="20201115 22:04:14.312"></status>
</kw>
<msg timestamp="20201115 22:04:14.312" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:14.336" endtime="20201115 22:04:14.352"></status>
</kw>
<msg timestamp="20201115 22:04:14.353" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:14.332" endtime="20201115 22:04:14.353"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:14.359" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:14.355" endtime="20201115 22:04:14.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:14.361" endtime="20201115 22:04:14.365"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:14.325" endtime="20201115 22:04:14.367"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:14.319" endtime="20201115 22:04:14.368"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:14.385" endtime="20201115 22:04:14.727"></status>
</kw>
<msg timestamp="20201115 22:04:14.734" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041723819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041726056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:14.382" endtime="20201115 22:04:14.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:14.752" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041723819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041726056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:14.736" endtime="20201115 22:04:14.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:14.755" endtime="20201115 22:04:14.759"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:14.374" endtime="20201115 22:04:14.760"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:14.370" endtime="20201115 22:04:14.762"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:14.773" level="INFO">${RESULT} = [{'time': 0.041726056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.236999999995215e-06, 'source_diff': 2.236999999995215e-06}, {'time': 0.041843736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:14.763" endtime="20201115 22:04:14.774"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:14.805" level="INFO">${OVERHEAD} = {'time': [0.041726056, 0.041843736, 0.041964875, 0.042082264, 0.042203569, 0.042324208, 0.042445028, 0.042566167, 0.042686778, 0.042808014, 0.042930014, 0.04305075, 0.043171028, 0.043294847, 0.0434195...</msg>
<status status="PASS" starttime="20201115 22:04:14.775" endtime="20201115 22:04:14.805"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:14.816" level="INFO">NAME: 00-overhead-2-remove</msg>
<status status="PASS" starttime="20201115 22:04:14.813" endtime="20201115 22:04:14.816"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:14.821" level="INFO">VALUE: [2.236999999995215e-06, 2.2360000000026803e-06, 2.2359999999957414e-06, 2.2360000000026803e-06, 2.1940000000039706e-06, 2.1940000000039706e-06, 2.27800000000139e-06, 2.2360000000026803e-06, 2.25000000000225e-06, 2.2499999999953113e-06, 2.2360000000026803e-06, 2.2359999999957414e-06, 2.195000000003444e-06, 2.2359999999957414e-06, 2.2499999999953113e-06, 2.29200000000096e-06, 2.2499999999953113e-06, 2.2499999999953113e-06, 2.2359999999957414e-06, 2.2080000000035405e-06, 2.25000000000225e-06, 2.25000000000225e-06, 2.2219999999961715e-06, 2.2089999999960752e-06, 2.2359999999957414e-06, 2.2360000000026803e-06, 2.2639999999948812e-06, 2.2219999999961715e-06, 2.25000000000225e-06, 2.2220000000031104e-06, 2.25000000000225e-06, 2.2639999999948812e-06, 2.2079999999966016e-06, 2.2089999999960752e-06, 2.209000000003014e-06, 2.25000000000225e-06, 2.2359999999957414e-06, 2.222999999995645e-06, 2.25000000000225e-06, 2.2499999999953113e-06, 2.25000000000225e-06, 2.2360000000026803e-06, 2.305000000001056e-06, 2.2499999999953113e-06, 2.26400000000182e-06, 2.2359999999957414e-06, 2.2359999999957414e-06, 2.2360000000026803e-06, 2.2360000000026803e-06, 2.2220000000031104e-06]</msg>
<status status="PASS" starttime="20201115 22:04:14.818" endtime="20201115 22:04:14.822"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:14.806" endtime="20201115 22:04:14.824"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:14.830" endtime="20201115 22:04:14.834"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:14.840" endtime="20201115 22:04:14.862"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:14.836" endtime="20201115 22:04:14.864"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:14.826" endtime="20201115 22:04:14.865"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:14.313" endtime="20201115 22:04:14.866"></status>
</kw>
<msg timestamp="20201115 22:04:14.866" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:14.890" endtime="20201115 22:04:14.906"></status>
</kw>
<msg timestamp="20201115 22:04:14.907" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:14.887" endtime="20201115 22:04:14.907"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:14.913" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:14.909" endtime="20201115 22:04:14.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:14.915" endtime="20201115 22:04:14.919"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:14.879" endtime="20201115 22:04:14.921"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:14.873" endtime="20201115 22:04:14.922"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:14.939" endtime="20201115 22:04:15.283"></status>
</kw>
<msg timestamp="20201115 22:04:15.290" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041800181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041802444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:14.936" endtime="20201115 22:04:15.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:15.308" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041800181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041802444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:15.292" endtime="20201115 22:04:15.310"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:15.311" endtime="20201115 22:04:15.315"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:14.928" endtime="20201115 22:04:15.317"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:14.924" endtime="20201115 22:04:15.318"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:15.329" level="INFO">${RESULT} = [{'time': 0.041802444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2630000000023465e-06, 'source_diff': 2.2630000000023465e-06}, {'time': 0.041921764, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:04:15.320" endtime="20201115 22:04:15.330"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:15.361" level="INFO">${OVERHEAD} = {'time': [0.041802444, 0.041921764, 0.042042014, 0.042163167, 0.042285903, 0.042407417, 0.042526403, 0.042645319, 0.042769111, 0.042890681, 0.043014597, 0.043136986, 0.043260833, 0.043384611, 0.043508...</msg>
<status status="PASS" starttime="20201115 22:04:15.331" endtime="20201115 22:04:15.361"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:15.372" level="INFO">NAME: 00-overhead-2-remove</msg>
<status status="PASS" starttime="20201115 22:04:15.369" endtime="20201115 22:04:15.372"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:15.377" level="INFO">VALUE: [2.2630000000023465e-06, 2.26400000000182e-06, 2.25000000000225e-06, 2.1810000000038743e-06, 2.25000000000225e-06, 2.223000000002584e-06, 2.2499999999953113e-06, 2.2360000000026803e-06, 2.2359999999957414e-06, 2.223000000002584e-06, 2.2220000000031104e-06, 2.2360000000026803e-06, 2.305000000001056e-06, 2.2359999999957414e-06, 2.30600000000053e-06, 2.2359999999957414e-06, 2.2360000000026803e-06, 2.25000000000225e-06, 2.2499999999953113e-06, 2.30600000000053e-06, 2.2499999999953113e-06, 2.2360000000026803e-06, 2.2220000000031104e-06, 2.2359999999957414e-06, 2.222999999995645e-06, 2.165999999997892e-06, 2.2220000000031104e-06, 2.1949999999965053e-06, 2.2089999999960752e-06, 2.237000000002154e-06, 2.237000000002154e-06, 2.25000000000225e-06, 2.305000000001056e-06, 2.25000000000225e-06, 2.25000000000225e-06, 2.25000000000225e-06, 2.2770000000019164e-06, 2.2079999999966016e-06, 2.2360000000026803e-06, 2.1669999999973655e-06, 2.2219999999961715e-06, 2.25000000000225e-06, 2.25000000000225e-06, 2.237000000002154e-06, 2.2360000000026803e-06, 2.2220000000031104e-06, 2.2219999999961715e-06, 2.2360000000026803e-06, 2.2360000000026803e-06, 2.223000000002584e-06]</msg>
<status status="PASS" starttime="20201115 22:04:15.374" endtime="20201115 22:04:15.378"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:15.362" endtime="20201115 22:04:15.380"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:15.386" endtime="20201115 22:04:15.389"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:15.395" endtime="20201115 22:04:15.417"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:15.390" endtime="20201115 22:04:15.418"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:15.382" endtime="20201115 22:04:15.420"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:14.867" endtime="20201115 22:04:15.420"></status>
</kw>
<msg timestamp="20201115 22:04:15.421" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:15.446" endtime="20201115 22:04:15.462"></status>
</kw>
<msg timestamp="20201115 22:04:15.463" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:15.443" endtime="20201115 22:04:15.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:15.469" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:15.465" endtime="20201115 22:04:15.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:15.471" endtime="20201115 22:04:15.475"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:15.435" endtime="20201115 22:04:15.477"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:15.428" endtime="20201115 22:04:15.478"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:15.495" endtime="20201115 22:04:15.838"></status>
</kw>
<msg timestamp="20201115 22:04:15.845" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043239542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043241764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:15.492" endtime="20201115 22:04:15.846"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:15.864" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043239542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043241764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:15.848" endtime="20201115 22:04:15.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:15.866" endtime="20201115 22:04:15.870"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:15.485" endtime="20201115 22:04:15.872"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:15.480" endtime="20201115 22:04:15.873"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:15.884" level="INFO">${RESULT} = [{'time': 0.043241764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2220000000031104e-06, 'source_diff': 2.2220000000031104e-06}, {'time': 0.043363847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:04:15.875" endtime="20201115 22:04:15.885"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:15.917" level="INFO">${OVERHEAD} = {'time': [0.043241764, 0.043363847, 0.043484194, 0.043605597, 0.043724986, 0.043844903, 0.043970194, 0.044090944, 0.044213431, 0.044336375, 0.044460333, 0.044582333, 0.04470125, 0.044821944, 0.0449431...</msg>
<status status="PASS" starttime="20201115 22:04:15.886" endtime="20201115 22:04:15.918"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:15.928" level="INFO">NAME: 00-overhead-2-remove</msg>
<status status="PASS" starttime="20201115 22:04:15.926" endtime="20201115 22:04:15.929"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:15.934" level="INFO">VALUE: [2.2220000000031104e-06, 2.2499999999953113e-06, 2.2629999999954076e-06, 2.1940000000039706e-06, 2.305000000001056e-06, 2.2089999999960752e-06, 2.2219999999961715e-06, 2.25000000000225e-06, 2.222999999995645e-06, 2.2499999999953113e-06, 2.2219999999961715e-06, 2.2360000000026803e-06, 2.2359999999957414e-06, 2.2360000000026803e-06, 2.27800000000139e-06, 2.236999999995215e-06, 2.27800000000139e-06, 2.2359999999957414e-06, 2.2360000000026803e-06, 2.2360000000026803e-06, 2.2499999999953113e-06, 2.2220000000031104e-06, 2.2360000000026803e-06, 2.2220000000031104e-06, 2.2360000000026803e-06, 2.25000000000225e-06, 2.2499999999953113e-06, 2.1809999999969354e-06, 2.2360000000026803e-06, 2.25000000000225e-06, 2.25000000000225e-06, 2.2219999999961715e-06, 2.2360000000026803e-06, 2.26400000000182e-06, 2.25000000000225e-06, 2.2359999999957414e-06, 2.2360000000026803e-06, 2.2499999999953113e-06, 2.1939999999970317e-06, 2.2360000000026803e-06, 2.1809999999969354e-06, 2.2220000000031104e-06, 2.2360000000026803e-06, 2.25000000000225e-06, 2.2360000000026803e-06, 2.2360000000026803e-06, 2.2219999999961715e-06, 2.26400000000182e-06, 2.25000000000225e-06, 2.27800000000139e-06]</msg>
<status status="PASS" starttime="20201115 22:04:15.931" endtime="20201115 22:04:15.935"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:15.919" endtime="20201115 22:04:15.937"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:15.943" endtime="20201115 22:04:15.946"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:15.951" endtime="20201115 22:04:15.973"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:15.947" endtime="20201115 22:04:15.975"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:15.939" endtime="20201115 22:04:15.977"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:15.422" endtime="20201115 22:04:15.977"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:13.167" endtime="20201115 22:04:15.978"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:13.165" endtime="20201115 22:04:15.978"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:04:15.983" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:16.008" endtime="20201115 22:04:16.025"></status>
</kw>
<msg timestamp="20201115 22:04:16.026" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:16.004" endtime="20201115 22:04:16.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:16.033" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:16.029" endtime="20201115 22:04:16.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:16.035" endtime="20201115 22:04:16.040"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:15.996" endtime="20201115 22:04:16.041"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:15.990" endtime="20201115 22:04:16.043"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:16.060" endtime="20201115 22:04:16.404"></status>
</kw>
<msg timestamp="20201115 22:04:16.411" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049292778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049295208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:16.056" endtime="20201115 22:04:16.412"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:16.429" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049292778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049295208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:16.413" endtime="20201115 22:04:16.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:16.432" endtime="20201115 22:04:16.436"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:16.049" endtime="20201115 22:04:16.438"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:16.044" endtime="20201115 22:04:16.439"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:16.450" level="INFO">${RESULT} = [{'time': 0.049295208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4299999999977118e-06, 'source_diff': 2.4299999999977118e-06}, {'time': 0.049432361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:04:16.441" endtime="20201115 22:04:16.450"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:16.481" level="INFO">${OVERHEAD} = {'time': [0.049295208, 0.049432361, 0.049567333, 0.049700667, 0.049832667, 0.049965653, 0.050100514, 0.050239208, 0.050375458, 0.050511889, 0.050648361, 0.050782889, 0.050918333, 0.051057417, 0.051194...</msg>
<status status="PASS" starttime="20201115 22:04:16.452" endtime="20201115 22:04:16.482"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:16.493" level="INFO">NAME: 00-overhead-3-remove</msg>
<status status="PASS" starttime="20201115 22:04:16.490" endtime="20201115 22:04:16.493"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:16.498" level="INFO">VALUE: [2.4299999999977118e-06, 2.4440000000042206e-06, 2.4299999999977118e-06, 2.4449999999967553e-06, 2.4309999999971854e-06, 2.4309999999971854e-06, 2.4169999999976155e-06, 2.4439999999972817e-06, 2.4439999999972817e-06, 2.4449999999967553e-06, 2.4720000000033604e-06, 2.527999999994701e-06, 2.4580000000037905e-06, 2.4450000000036942e-06, 2.4030000000049845e-06, 2.4169999999976155e-06, 2.4299999999977118e-06, 2.4439999999972817e-06, 2.4299999999977118e-06, 2.4449999999967553e-06, 2.4029999999980456e-06, 2.4440000000042206e-06, 2.4029999999980456e-06, 2.4579999999968516e-06, 2.4589999999963252e-06, 2.4449999999967553e-06, 2.4450000000036942e-06, 2.4299999999977118e-06, 2.4439999999972817e-06, 2.4439999999972817e-06, 2.4440000000042206e-06, 2.4449999999967553e-06, 2.4439999999972817e-06, 2.472999999995895e-06, 2.4440000000042206e-06, 2.4439999999972817e-06, 2.4579999999968516e-06, 2.4449999999967553e-06, 2.4439999999972817e-06, 2.4439999999972817e-06, 2.4439999999972817e-06, 2.4719999999964215e-06, 2.4309999999971854e-06, 2.459000000003264e-06, 2.4449999999967553e-06, 2.4449999999967553e-06, 2.4450000000036942e-06, 2.4589999999963252e-06, 2.459000000003264e-06, 2.4169999999976155e-06]</msg>
<status status="PASS" starttime="20201115 22:04:16.495" endtime="20201115 22:04:16.499"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:16.483" endtime="20201115 22:04:16.501"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:16.507" endtime="20201115 22:04:16.510"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:16.515" endtime="20201115 22:04:16.537"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:16.511" endtime="20201115 22:04:16.539"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:16.502" endtime="20201115 22:04:16.541"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:15.984" endtime="20201115 22:04:16.541"></status>
</kw>
<msg timestamp="20201115 22:04:16.542" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:16.565" endtime="20201115 22:04:16.582"></status>
</kw>
<msg timestamp="20201115 22:04:16.583" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:16.562" endtime="20201115 22:04:16.589"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:16.596" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:16.591" endtime="20201115 22:04:16.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:16.598" endtime="20201115 22:04:16.602"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:16.555" endtime="20201115 22:04:16.603"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:16.549" endtime="20201115 22:04:16.605"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:16.623" endtime="20201115 22:04:16.967"></status>
</kw>
<msg timestamp="20201115 22:04:16.974" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041838167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041840694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:16.620" endtime="20201115 22:04:16.975"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:16.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041838167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041840694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:16.976" endtime="20201115 22:04:16.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:16.995" endtime="20201115 22:04:16.999"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:16.611" endtime="20201115 22:04:17.001"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:16.606" endtime="20201115 22:04:17.002"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:17.013" level="INFO">${RESULT} = [{'time': 0.041840694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5269999999952275e-06, 'source_diff': 2.5269999999952275e-06}, {'time': 0.041980556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:04:17.004" endtime="20201115 22:04:17.014"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:17.045" level="INFO">${OVERHEAD} = {'time': [0.041840694, 0.041980556, 0.042117014, 0.042251611, 0.042388458, 0.042522111, 0.042658889, 0.042793875, 0.042930889, 0.043064778, 0.043198944, 0.043332819, 0.043467778, 0.043603569, 0.043738...</msg>
<status status="PASS" starttime="20201115 22:04:17.015" endtime="20201115 22:04:17.045"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:17.056" level="INFO">NAME: 00-overhead-3-remove</msg>
<status status="PASS" starttime="20201115 22:04:17.053" endtime="20201115 22:04:17.056"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:17.061" level="INFO">VALUE: [2.5269999999952275e-06, 2.4450000000036942e-06, 2.4310000000041243e-06, 2.4029999999980456e-06, 2.4439999999972817e-06, 2.4580000000037905e-06, 2.4169999999976155e-06, 2.4580000000037905e-06, 2.4309999999971854e-06, 2.4719999999964215e-06, 2.4440000000042206e-06, 2.4440000000042206e-06, 2.4449999999967553e-06, 2.4440000000042206e-06, 2.4299999999977118e-06, 2.415999999998142e-06, 2.4580000000037905e-06, 2.4449999999967553e-06, 2.459000000003264e-06, 2.459000000003264e-06, 2.4579999999968516e-06, 2.4449999999967553e-06, 2.4449999999967553e-06, 2.360999999999336e-06, 2.4580000000037905e-06, 2.4309999999971854e-06, 2.4720000000033604e-06, 2.4440000000042206e-06, 2.4579999999968516e-06, 2.4580000000037905e-06, 2.473000000002834e-06, 2.4310000000041243e-06, 2.4309999999971854e-06, 2.4440000000042206e-06, 2.4299999999977118e-06, 2.4449999999967553e-06, 2.4310000000041243e-06, 2.4449999999967553e-06, 2.4440000000042206e-06, 2.4440000000042206e-06, 2.4450000000036942e-06, 2.4439999999972817e-06, 2.4580000000037905e-06, 2.4719999999964215e-06, 2.4439999999972817e-06, 2.4439999999972817e-06, 2.4589999999963252e-06, 2.4579999999968516e-06, 2.4449999999967553e-06, 2.4440000000042206e-06]</msg>
<status status="PASS" starttime="20201115 22:04:17.058" endtime="20201115 22:04:17.062"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:17.046" endtime="20201115 22:04:17.064"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:17.070" endtime="20201115 22:04:17.073"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:17.078" endtime="20201115 22:04:17.100"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:17.074" endtime="20201115 22:04:17.102"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:17.065" endtime="20201115 22:04:17.104"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:16.543" endtime="20201115 22:04:17.104"></status>
</kw>
<msg timestamp="20201115 22:04:17.105" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:17.129" endtime="20201115 22:04:17.145"></status>
</kw>
<msg timestamp="20201115 22:04:17.146" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:17.125" endtime="20201115 22:04:17.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:17.152" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:17.148" endtime="20201115 22:04:17.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:17.155" endtime="20201115 22:04:17.159"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:17.118" endtime="20201115 22:04:17.160"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:17.111" endtime="20201115 22:04:17.162"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:17.178" endtime="20201115 22:04:17.528"></status>
</kw>
<msg timestamp="20201115 22:04:17.535" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042165556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042168, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:04:17.175" endtime="20201115 22:04:17.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:17.554" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042165556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042168, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:04:17.538" endtime="20201115 22:04:17.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:17.556" endtime="20201115 22:04:17.560"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:17.168" endtime="20201115 22:04:17.562"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:17.163" endtime="20201115 22:04:17.564"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:17.575" level="INFO">${RESULT} = [{'time': 0.042168, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4439999999972817e-06, 'source_diff': 2.4439999999972817e-06}, {'time': 0.042307319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:04:17.565" endtime="20201115 22:04:17.575"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:17.606" level="INFO">${OVERHEAD} = {'time': [0.042168, 0.042307319, 0.042444625, 0.042580056, 0.042713708, 0.042852222, 0.042990597, 0.04312875, 0.043268389, 0.043405639, 0.043542083, 0.043679361, 0.043814931, 0.043947458, 0.044083958,...</msg>
<status status="PASS" starttime="20201115 22:04:17.577" endtime="20201115 22:04:17.607"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:17.617" level="INFO">NAME: 00-overhead-3-remove</msg>
<status status="PASS" starttime="20201115 22:04:17.615" endtime="20201115 22:04:17.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:17.623" level="INFO">VALUE: [2.4439999999972817e-06, 2.4580000000037905e-06, 2.4579999999968516e-06, 2.4449999999967553e-06, 2.4300000000046507e-06, 2.4580000000037905e-06, 2.4439999999972817e-06, 2.4439999999972817e-06, 2.4449999999967553e-06, 2.52800000000164e-06, 2.4580000000037905e-06, 2.4029999999980456e-06, 2.4450000000036942e-06, 2.4580000000037905e-06, 2.4439999999972817e-06, 2.3749999999989058e-06, 2.3750000000058447e-06, 2.4450000000036942e-06, 2.4580000000037905e-06, 2.3749999999989058e-06, 2.4450000000036942e-06, 2.401999999998572e-06, 2.5000000000025002e-06, 2.3889999999984757e-06, 2.4309999999971854e-06, 2.4440000000042206e-06, 2.4439999999972817e-06, 2.4299999999977118e-06, 2.4579999999968516e-06, 2.4450000000036942e-06, 2.4450000000036942e-06, 2.4589999999963252e-06, 2.4719999999964215e-06, 2.4310000000041243e-06, 2.4580000000037905e-06, 2.4449999999967553e-06, 2.4439999999972817e-06, 2.4450000000036942e-06, 2.4439999999972817e-06, 2.473000000002834e-06, 2.4299999999977118e-06, 2.4860000000029303e-06, 2.4719999999964215e-06, 2.4169999999976155e-06, 2.4579999999968516e-06, 2.4169999999976155e-06, 2.4029999999980456e-06, 2.459000000003264e-06, 2.4299999999977118e-06, 2.4579999999968516e-06]</msg>
<status status="PASS" starttime="20201115 22:04:17.620" endtime="20201115 22:04:17.624"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:17.608" endtime="20201115 22:04:17.626"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:17.632" endtime="20201115 22:04:17.635"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:17.642" endtime="20201115 22:04:17.664"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:17.636" endtime="20201115 22:04:17.666"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:17.627" endtime="20201115 22:04:17.667"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:17.106" endtime="20201115 22:04:17.668"></status>
</kw>
<msg timestamp="20201115 22:04:17.668" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:17.692" endtime="20201115 22:04:17.709"></status>
</kw>
<msg timestamp="20201115 22:04:17.710" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:17.689" endtime="20201115 22:04:17.711"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:17.717" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:17.713" endtime="20201115 22:04:17.718"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:17.719" endtime="20201115 22:04:17.723"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:17.681" endtime="20201115 22:04:17.725"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:17.675" endtime="20201115 22:04:17.727"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:17.746" endtime="20201115 22:04:18.103"></status>
</kw>
<msg timestamp="20201115 22:04:18.110" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042180639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042183083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:17.743" endtime="20201115 22:04:18.111"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:18.129" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042180639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042183083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:18.113" endtime="20201115 22:04:18.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:18.132" endtime="20201115 22:04:18.136"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:17.735" endtime="20201115 22:04:18.138"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:17.729" endtime="20201115 22:04:18.140"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:18.151" level="INFO">${RESULT} = [{'time': 0.042183083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4440000000042206e-06, 'source_diff': 2.4440000000042206e-06}, {'time': 0.042319972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:04:18.142" endtime="20201115 22:04:18.152"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:18.185" level="INFO">${OVERHEAD} = {'time': [0.042183083, 0.042319972, 0.042453292, 0.042589264, 0.042722958, 0.042856958, 0.042991028, 0.043126917, 0.043260764, 0.043397542, 0.043532694, 0.043665528, 0.043799292, 0.043936861, 0.044071...</msg>
<status status="PASS" starttime="20201115 22:04:18.153" endtime="20201115 22:04:18.186"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:18.197" level="INFO">NAME: 00-overhead-3-remove</msg>
<status status="PASS" starttime="20201115 22:04:18.194" endtime="20201115 22:04:18.197"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:18.202" level="INFO">VALUE: [2.4440000000042206e-06, 2.4439999999972817e-06, 2.527999999994701e-06, 2.4450000000036942e-06, 2.4439999999972817e-06, 2.4299999999977118e-06, 2.4169999999976155e-06, 2.4310000000041243e-06, 2.4449999999967553e-06, 2.4449999999967553e-06, 2.4299999999977118e-06, 2.4450000000036942e-06, 2.4589999999963252e-06, 2.4580000000037905e-06, 2.4439999999972817e-06, 2.4450000000036942e-06, 2.4589999999963252e-06, 2.4449999999967553e-06, 2.4719999999964215e-06, 2.5000000000025002e-06, 2.4439999999972817e-06, 2.459000000003264e-06, 2.4310000000041243e-06, 2.52800000000164e-06, 2.4439999999972817e-06, 2.4719999999964215e-06, 2.5000000000025002e-06, 2.4439999999972817e-06, 2.415999999998142e-06, 2.4170000000045544e-06, 2.4309999999971854e-06, 2.4299999999977118e-06, 2.4579999999968516e-06, 2.4439999999972817e-06, 2.4720000000033604e-06, 2.4589999999963252e-06, 2.4439999999972817e-06, 2.4450000000036942e-06, 2.4439999999972817e-06, 2.459000000003264e-06, 2.4310000000041243e-06, 2.4589999999963252e-06, 2.4589999999963252e-06, 2.4450000000036942e-06, 2.4309999999971854e-06, 2.4720000000033604e-06, 2.459000000003264e-06, 2.3889999999984757e-06, 2.4310000000041243e-06, 2.4589999999963252e-06]</msg>
<status status="PASS" starttime="20201115 22:04:18.199" endtime="20201115 22:04:18.204"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:18.187" endtime="20201115 22:04:18.206"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:18.212" endtime="20201115 22:04:18.215"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:18.220" endtime="20201115 22:04:18.242"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:18.216" endtime="20201115 22:04:18.244"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:18.207" endtime="20201115 22:04:18.246"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:17.669" endtime="20201115 22:04:18.247"></status>
</kw>
<msg timestamp="20201115 22:04:18.247" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:18.271" endtime="20201115 22:04:18.288"></status>
</kw>
<msg timestamp="20201115 22:04:18.289" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:18.267" endtime="20201115 22:04:18.289"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:18.295" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:18.291" endtime="20201115 22:04:18.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:18.298" endtime="20201115 22:04:18.301"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:18.260" endtime="20201115 22:04:18.303"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:18.254" endtime="20201115 22:04:18.305"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:18.322" endtime="20201115 22:04:18.679"></status>
</kw>
<msg timestamp="20201115 22:04:18.686" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042096944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042099389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:18.318" endtime="20201115 22:04:18.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:18.705" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042096944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042099389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:18.688" endtime="20201115 22:04:18.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:18.707" endtime="20201115 22:04:18.711"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:18.311" endtime="20201115 22:04:18.713"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:18.306" endtime="20201115 22:04:18.715"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:18.725" level="INFO">${RESULT} = [{'time': 0.042099389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4450000000036942e-06, 'source_diff': 2.4450000000036942e-06}, {'time': 0.042237472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:04:18.716" endtime="20201115 22:04:18.726"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:18.758" level="INFO">${OVERHEAD} = {'time': [0.042099389, 0.042237472, 0.042372139, 0.04250625, 0.042642306, 0.042781722, 0.042915236, 0.043048069, 0.043183958, 0.043321625, 0.043454194, 0.043593042, 0.043731597, 0.043865167, 0.0440047...</msg>
<status status="PASS" starttime="20201115 22:04:18.728" endtime="20201115 22:04:18.759"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:18.770" level="INFO">NAME: 00-overhead-3-remove</msg>
<status status="PASS" starttime="20201115 22:04:18.767" endtime="20201115 22:04:18.770"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:18.775" level="INFO">VALUE: [2.4450000000036942e-06, 2.4299999999977118e-06, 2.4310000000041243e-06, 2.4310000000041243e-06, 2.4449999999967553e-06, 2.4580000000037905e-06, 2.4580000000037905e-06, 2.4300000000046507e-06, 2.4440000000042206e-06, 2.4860000000029303e-06, 2.4440000000042206e-06, 2.4449999999967553e-06, 2.4439999999972817e-06, 2.4589999999963252e-06, 2.4440000000042206e-06, 2.4719999999964215e-06, 2.4859999999959914e-06, 2.3890000000054146e-06, 2.4450000000036942e-06, 2.4439999999972817e-06, 2.4579999999968516e-06, 2.4450000000036942e-06, 2.4579999999968516e-06, 2.4439999999972817e-06, 2.4719999999964215e-06, 2.4579999999968516e-06, 2.4439999999972817e-06, 2.4580000000037905e-06, 2.5000000000025002e-06, 2.4580000000037905e-06, 2.4449999999967553e-06, 2.4439999999972817e-06, 2.4439999999972817e-06, 2.4720000000033604e-06, 2.4579999999968516e-06, 2.4999999999955613e-06, 2.4300000000046507e-06, 2.4439999999972817e-06, 2.4439999999972817e-06, 2.4309999999971854e-06, 2.4579999999968516e-06, 2.4450000000036942e-06, 2.4579999999968516e-06, 2.4579999999968516e-06, 2.473000000002834e-06, 2.4300000000046507e-06, 2.52800000000164e-06, 2.4309999999971854e-06, 2.4450000000036942e-06, 2.4579999999968516e-06]</msg>
<status status="PASS" starttime="20201115 22:04:18.772" endtime="20201115 22:04:18.777"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:18.760" endtime="20201115 22:04:18.779"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:18.785" endtime="20201115 22:04:18.788"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:18.794" endtime="20201115 22:04:18.816"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:18.789" endtime="20201115 22:04:18.818"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:18.780" endtime="20201115 22:04:18.819"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:18.248" endtime="20201115 22:04:18.820"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:15.981" endtime="20201115 22:04:18.820"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:15.979" endtime="20201115 22:04:18.821"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:04:18.826" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:18.849" endtime="20201115 22:04:18.867"></status>
</kw>
<msg timestamp="20201115 22:04:18.869" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:18.846" endtime="20201115 22:04:18.869"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:18.875" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:18.871" endtime="20201115 22:04:18.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:18.877" endtime="20201115 22:04:18.881"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:18.838" endtime="20201115 22:04:18.883"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:18.832" endtime="20201115 22:04:18.884"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:18.901" endtime="20201115 22:04:19.252"></status>
</kw>
<msg timestamp="20201115 22:04:19.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047504847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0475075, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:04:18.898" endtime="20201115 22:04:19.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:19.278" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047504847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0475075, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:04:19.262" endtime="20201115 22:04:19.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:19.281" endtime="20201115 22:04:19.285"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:18.891" endtime="20201115 22:04:19.286"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:18.886" endtime="20201115 22:04:19.288"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:19.299" level="INFO">${RESULT} = [{'time': 0.0475075, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6529999999982956e-06, 'source_diff': 2.6529999999982956e-06}, {'time': 0.047659167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:19.289" endtime="20201115 22:04:19.299"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:19.332" level="INFO">${OVERHEAD} = {'time': [0.0475075, 0.047659167, 0.047813333, 0.047963972, 0.048115417, 0.048266736, 0.048419556, 0.048569222, 0.048724403, 0.048878306, 0.049029194, 0.049181458, 0.049330472, 0.049486125, 0.04963586...</msg>
<status status="PASS" starttime="20201115 22:04:19.301" endtime="20201115 22:04:19.332"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:19.343" level="INFO">NAME: 00-overhead-4-remove</msg>
<status status="PASS" starttime="20201115 22:04:19.341" endtime="20201115 22:04:19.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:19.350" level="INFO">VALUE: [2.6529999999982956e-06, 2.709000000003514e-06, 2.6389999999987257e-06, 2.6529999999982956e-06, 2.6249999999991558e-06, 2.6389999999987257e-06, 2.5979999999994896e-06, 2.597000000000016e-06, 2.6529999999982956e-06, 2.6950000000039442e-06, 2.665999999998392e-06, 2.651999999998822e-06, 2.597000000000016e-06, 2.6669999999978655e-06, 2.6530000000052345e-06, 2.6389999999987257e-06, 2.6529999999982956e-06, 2.6249999999991558e-06, 2.6669999999978655e-06, 2.6390000000056646e-06, 2.6529999999982956e-06, 2.679999999997962e-06, 2.6530000000052345e-06, 2.6249999999991558e-06, 2.6949999999970053e-06, 2.610999999999586e-06, 2.665999999998392e-06, 2.651999999998822e-06, 2.6389999999987257e-06, 2.651999999998822e-06, 2.651999999998822e-06, 2.6249999999991558e-06, 2.7080000000040405e-06, 2.6390000000056646e-06, 2.679999999997962e-06, 2.6530000000052345e-06, 2.6669999999978655e-06, 2.6389999999987257e-06, 2.6529999999982956e-06, 2.6669999999978655e-06, 2.6529999999982956e-06, 2.6660000000053308e-06, 2.6670000000048044e-06, 2.5979999999994896e-06, 2.6529999999982956e-06, 2.6389999999987257e-06, 2.665999999998392e-06, 2.6949999999970053e-06, 2.665999999998392e-06, 2.6810000000043743e-06]</msg>
<status status="PASS" starttime="20201115 22:04:19.346" endtime="20201115 22:04:19.351"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:19.334" endtime="20201115 22:04:19.352"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:19.359" endtime="20201115 22:04:19.361"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:19.368" endtime="20201115 22:04:19.390"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:19.363" endtime="20201115 22:04:19.392"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:19.354" endtime="20201115 22:04:19.394"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:18.827" endtime="20201115 22:04:19.395"></status>
</kw>
<msg timestamp="20201115 22:04:19.396" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:19.420" endtime="20201115 22:04:19.438"></status>
</kw>
<msg timestamp="20201115 22:04:19.439" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:19.417" endtime="20201115 22:04:19.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:19.446" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:19.442" endtime="20201115 22:04:19.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:19.448" endtime="20201115 22:04:19.452"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:19.409" endtime="20201115 22:04:19.454"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:19.403" endtime="20201115 22:04:19.455"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:19.473" endtime="20201115 22:04:19.826"></status>
</kw>
<msg timestamp="20201115 22:04:19.833" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043947972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043950625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:19.469" endtime="20201115 22:04:19.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:19.852" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043947972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043950625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:19.836" endtime="20201115 22:04:19.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:19.855" endtime="20201115 22:04:19.858"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:19.462" endtime="20201115 22:04:19.860"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:19.457" endtime="20201115 22:04:19.862"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:19.872" level="INFO">${RESULT} = [{'time': 0.043950625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6529999999982956e-06, 'source_diff': 2.6529999999982956e-06}, {'time': 0.044104028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:04:19.863" endtime="20201115 22:04:19.873"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:19.906" level="INFO">${OVERHEAD} = {'time': [0.043950625, 0.044104028, 0.044256069, 0.044410181, 0.04456, 0.044711569, 0.044864431, 0.045013875, 0.045167208, 0.045318292, 0.045473681, 0.045626264, 0.045778653, 0.045927528, 0.046078806,...</msg>
<status status="PASS" starttime="20201115 22:04:19.875" endtime="20201115 22:04:19.907"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:19.918" level="INFO">NAME: 00-overhead-4-remove</msg>
<status status="PASS" starttime="20201115 22:04:19.915" endtime="20201115 22:04:19.918"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:19.923" level="INFO">VALUE: [2.6529999999982956e-06, 2.6250000000060947e-06, 2.637999999999252e-06, 2.6949999999970053e-06, 2.6670000000048044e-06, 2.665999999998392e-06, 2.6530000000052345e-06, 2.6389999999987257e-06, 2.597000000000016e-06, 2.6250000000060947e-06, 2.6530000000052345e-06, 2.6389999999987257e-06, 2.6810000000043743e-06, 2.597000000000016e-06, 2.6949999999970053e-06, 2.6529999999982956e-06, 2.6529999999982956e-06, 2.651999999998822e-06, 2.6669999999978655e-06, 2.7360000000031803e-06, 2.6249999999991558e-06, 2.6669999999978655e-06, 2.6389999999987257e-06, 2.6669999999978655e-06, 2.665999999998392e-06, 2.6249999999991558e-06, 2.651999999998822e-06, 2.6800000000049007e-06, 2.6389999999987257e-06, 2.6529999999982956e-06, 2.6529999999982956e-06, 2.6530000000052345e-06, 2.6529999999982956e-06, 2.6669999999978655e-06, 2.6670000000048044e-06, 2.6530000000052345e-06, 2.6939999999975317e-06, 2.6660000000053308e-06, 2.651999999998822e-06, 2.6800000000049007e-06, 2.6660000000053308e-06, 2.6949999999970053e-06, 2.597000000000016e-06, 2.6249999999991558e-06, 2.637999999999252e-06, 2.652000000005761e-06, 2.6530000000052345e-06, 2.610999999999586e-06, 2.665999999998392e-06, 2.665999999998392e-06]</msg>
<status status="PASS" starttime="20201115 22:04:19.920" endtime="20201115 22:04:19.924"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:19.908" endtime="20201115 22:04:19.926"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:19.932" endtime="20201115 22:04:19.935"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:19.941" endtime="20201115 22:04:19.963"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:19.936" endtime="20201115 22:04:19.965"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:19.928" endtime="20201115 22:04:19.966"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:19.397" endtime="20201115 22:04:19.967"></status>
</kw>
<msg timestamp="20201115 22:04:19.967" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:19.991" endtime="20201115 22:04:20.009"></status>
</kw>
<msg timestamp="20201115 22:04:20.010" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:19.987" endtime="20201115 22:04:20.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:20.017" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:20.013" endtime="20201115 22:04:20.017"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:20.019" endtime="20201115 22:04:20.023"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:19.980" endtime="20201115 22:04:20.025"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:19.974" endtime="20201115 22:04:20.026"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:20.043" endtime="20201115 22:04:20.396"></status>
</kw>
<msg timestamp="20201115 22:04:20.403" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042224431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042227083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:20.040" endtime="20201115 22:04:20.404"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:20.422" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042224431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042227083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:20.405" endtime="20201115 22:04:20.423"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:20.425" endtime="20201115 22:04:20.429"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:20.032" endtime="20201115 22:04:20.431"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:20.027" endtime="20201115 22:04:20.432"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:20.445" level="INFO">${RESULT} = [{'time': 0.042227083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.651999999998822e-06, 'source_diff': 2.651999999998822e-06}, {'time': 0.042378764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:20.434" endtime="20201115 22:04:20.445"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:20.479" level="INFO">${OVERHEAD} = {'time': [0.042227083, 0.042378764, 0.042530514, 0.042682292, 0.042831694, 0.042981236, 0.043131819, 0.043285944, 0.043436431, 0.043586486, 0.043738583, 0.043888639, 0.044037875, 0.044192444, 0.044344...</msg>
<status status="PASS" starttime="20201115 22:04:20.447" endtime="20201115 22:04:20.480"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:20.491" level="INFO">NAME: 00-overhead-4-remove</msg>
<status status="PASS" starttime="20201115 22:04:20.488" endtime="20201115 22:04:20.491"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:20.496" level="INFO">VALUE: [2.651999999998822e-06, 2.6529999999982956e-06, 2.6669999999978655e-06, 2.6529999999982956e-06, 2.651999999998822e-06, 2.6669999999978655e-06, 2.637999999999252e-06, 2.679999999997962e-06, 2.6389999999987257e-06, 2.6529999999982956e-06, 2.651999999998822e-06, 2.6529999999982956e-06, 2.6389999999987257e-06, 2.637999999999252e-06, 2.6249999999991558e-06, 2.6809999999974354e-06, 2.6669999999978655e-06, 2.6529999999982956e-06, 2.665999999998392e-06, 2.6529999999982956e-06, 2.6529999999982956e-06, 2.6530000000052345e-06, 2.6529999999982956e-06, 2.6529999999982956e-06, 2.6389999999987257e-06, 2.7080000000040405e-06, 2.6249999999991558e-06, 2.6669999999978655e-06, 2.723000000003084e-06, 2.6939999999975317e-06, 2.6390000000056646e-06, 2.6529999999982956e-06, 2.652000000005761e-06, 2.6670000000048044e-06, 2.6939999999975317e-06, 2.6669999999978655e-06, 2.665999999998392e-06, 2.6809999999974354e-06, 2.6529999999982956e-06, 2.6389999999987257e-06, 2.6529999999982956e-06, 2.6810000000043743e-06, 2.665999999998392e-06, 2.651999999998822e-06, 2.652000000005761e-06, 2.6939999999975317e-06, 2.6669999999978655e-06, 2.6529999999982956e-06, 2.6389999999987257e-06, 2.6670000000048044e-06]</msg>
<status status="PASS" starttime="20201115 22:04:20.493" endtime="20201115 22:04:20.497"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:20.481" endtime="20201115 22:04:20.499"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:20.505" endtime="20201115 22:04:20.508"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:20.514" endtime="20201115 22:04:20.536"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:20.509" endtime="20201115 22:04:20.538"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:20.501" endtime="20201115 22:04:20.539"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:19.968" endtime="20201115 22:04:20.540"></status>
</kw>
<msg timestamp="20201115 22:04:20.541" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:20.564" endtime="20201115 22:04:20.582"></status>
</kw>
<msg timestamp="20201115 22:04:20.584" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:20.561" endtime="20201115 22:04:20.584"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:20.590" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:20.586" endtime="20201115 22:04:20.591"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:20.592" endtime="20201115 22:04:20.596"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:20.554" endtime="20201115 22:04:20.598"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:20.548" endtime="20201115 22:04:20.599"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:20.616" endtime="20201115 22:04:20.968"></status>
</kw>
<msg timestamp="20201115 22:04:20.975" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042494681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042497333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:20.613" endtime="20201115 22:04:20.976"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:20.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042494681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042497333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:20.977" endtime="20201115 22:04:20.995"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:20.997" endtime="20201115 22:04:21.001"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:20.605" endtime="20201115 22:04:21.003"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:20.601" endtime="20201115 22:04:21.005"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:21.016" level="INFO">${RESULT} = [{'time': 0.042497333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.651999999998822e-06, 'source_diff': 2.651999999998822e-06}, {'time': 0.04265025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:04:21.006" endtime="20201115 22:04:21.016"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:21.048" level="INFO">${OVERHEAD} = {'time': [0.042497333, 0.04265025, 0.042804056, 0.042957431, 0.043111458, 0.043264639, 0.043413111, 0.04356325, 0.043715292, 0.043870361, 0.04402225, 0.044175819, 0.044325889, 0.0444785, 0.044631875, ...</msg>
<status status="PASS" starttime="20201115 22:04:21.018" endtime="20201115 22:04:21.048"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:21.060" level="INFO">NAME: 00-overhead-4-remove</msg>
<status status="PASS" starttime="20201115 22:04:21.057" endtime="20201115 22:04:21.061"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:21.066" level="INFO">VALUE: [2.651999999998822e-06, 2.6389999999987257e-06, 2.6809999999974354e-06, 2.6669999999978655e-06, 2.651999999998822e-06, 2.6529999999982956e-06, 2.6529999999982956e-06, 2.6529999999982956e-06, 2.6390000000056646e-06, 2.6389999999987257e-06, 2.6669999999978655e-06, 2.651999999998822e-06, 2.6389999999987257e-06, 2.6249999999991558e-06, 2.6529999999982956e-06, 2.6800000000049007e-06, 2.6810000000043743e-06, 2.665999999998392e-06, 2.6669999999978655e-06, 2.6530000000052345e-06, 2.6529999999982956e-06, 2.637999999999252e-06, 2.651999999998822e-06, 2.6669999999978655e-06, 2.6389999999987257e-06, 2.665999999998392e-06, 2.6389999999987257e-06, 2.6529999999982956e-06, 2.7219999999966715e-06, 2.679999999997962e-06, 2.6669999999978655e-06, 2.6669999999978655e-06, 2.6529999999982956e-06, 2.6389999999987257e-06, 2.6529999999982956e-06, 2.6390000000056646e-06, 2.6529999999982956e-06, 2.6529999999982956e-06, 2.6389999999987257e-06, 2.6660000000053308e-06, 2.6530000000052345e-06, 2.7359999999962414e-06, 2.7219999999966715e-06, 2.637999999999252e-06, 2.6669999999978655e-06, 2.610999999999586e-06, 2.6529999999982956e-06, 2.6119999999990595e-06, 2.6660000000053308e-06, 2.6940000000044706e-06]</msg>
<status status="PASS" starttime="20201115 22:04:21.063" endtime="20201115 22:04:21.067"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:21.050" endtime="20201115 22:04:21.068"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:21.075" endtime="20201115 22:04:21.078"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:21.084" endtime="20201115 22:04:21.105"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:21.079" endtime="20201115 22:04:21.107"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:21.070" endtime="20201115 22:04:21.109"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:20.542" endtime="20201115 22:04:21.109"></status>
</kw>
<msg timestamp="20201115 22:04:21.110" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:21.134" endtime="20201115 22:04:21.152"></status>
</kw>
<msg timestamp="20201115 22:04:21.153" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:21.130" endtime="20201115 22:04:21.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:21.159" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:21.155" endtime="20201115 22:04:21.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:21.162" endtime="20201115 22:04:21.165"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:21.123" endtime="20201115 22:04:21.167"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:21.117" endtime="20201115 22:04:21.169"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:21.186" endtime="20201115 22:04:21.540"></status>
</kw>
<msg timestamp="20201115 22:04:21.548" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042106958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042109611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:21.182" endtime="20201115 22:04:21.548"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:21.567" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042106958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042109611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:21.550" endtime="20201115 22:04:21.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:21.569" endtime="20201115 22:04:21.573"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:21.175" endtime="20201115 22:04:21.575"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:21.170" endtime="20201115 22:04:21.577"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:21.587" level="INFO">${RESULT} = [{'time': 0.042109611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6529999999982956e-06, 'source_diff': 2.6529999999982956e-06}, {'time': 0.042264847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:04:21.578" endtime="20201115 22:04:21.588"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:21.620" level="INFO">${OVERHEAD} = {'time': [0.042109611, 0.042264847, 0.042418222, 0.042568611, 0.042720236, 0.042869472, 0.043022583, 0.043176861, 0.043329056, 0.043479444, 0.043631514, 0.043783208, 0.043938514, 0.044093819, 0.044247...</msg>
<status status="PASS" starttime="20201115 22:04:21.590" endtime="20201115 22:04:21.620"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:21.631" level="INFO">NAME: 00-overhead-4-remove</msg>
<status status="PASS" starttime="20201115 22:04:21.629" endtime="20201115 22:04:21.632"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:21.636" level="INFO">VALUE: [2.6529999999982956e-06, 2.6389999999987257e-06, 2.6529999999982956e-06, 2.6669999999978655e-06, 2.6670000000048044e-06, 2.6529999999982956e-06, 2.6800000000049007e-06, 2.582999999993507e-06, 2.6529999999982956e-06, 2.665999999998392e-06, 2.6530000000052345e-06, 2.651999999998822e-06, 2.6529999999982956e-06, 2.651999999998822e-06, 2.6529999999982956e-06, 2.610999999999586e-06, 2.6529999999982956e-06, 2.651999999998822e-06, 2.6529999999982956e-06, 2.651999999998822e-06, 2.6810000000043743e-06, 2.6669999999978655e-06, 2.6670000000048044e-06, 2.6529999999982956e-06, 2.6660000000053308e-06, 2.6390000000056646e-06, 2.6669999999978655e-06, 2.651999999998822e-06, 2.6529999999982956e-06, 2.610999999999586e-06, 2.652000000005761e-06, 2.6529999999982956e-06, 2.651999999998822e-06, 2.6529999999982956e-06, 2.6529999999982956e-06, 2.583000000000446e-06, 2.6529999999982956e-06, 2.651999999998822e-06, 2.665999999998392e-06, 2.6389999999987257e-06, 2.6529999999982956e-06, 2.6669999999978655e-06, 2.6809999999974354e-06, 2.569000000000876e-06, 2.637999999999252e-06, 2.6530000000052345e-06, 2.6949999999970053e-06, 2.6249999999991558e-06, 2.6529999999982956e-06, 2.6669999999978655e-06]</msg>
<status status="PASS" starttime="20201115 22:04:21.633" endtime="20201115 22:04:21.639"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:21.622" endtime="20201115 22:04:21.640"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:21.647" endtime="20201115 22:04:21.650"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:21.656" endtime="20201115 22:04:21.678"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:21.651" endtime="20201115 22:04:21.679"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:21.642" endtime="20201115 22:04:21.681"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:21.111" endtime="20201115 22:04:21.681"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:18.823" endtime="20201115 22:04:21.682"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:18.822" endtime="20201115 22:04:21.682"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:04:21.687" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:21.711" endtime="20201115 22:04:21.730"></status>
</kw>
<msg timestamp="20201115 22:04:21.731" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:21.708" endtime="20201115 22:04:21.732"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:21.738" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:21.734" endtime="20201115 22:04:21.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:21.740" endtime="20201115 22:04:21.749"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:21.700" endtime="20201115 22:04:21.751"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:21.694" endtime="20201115 22:04:21.752"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:21.769" endtime="20201115 22:04:22.122"></status>
</kw>
<msg timestamp="20201115 22:04:22.129" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047668681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047671556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:21.766" endtime="20201115 22:04:22.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:22.148" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047668681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047671556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:22.132" endtime="20201115 22:04:22.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:22.151" endtime="20201115 22:04:22.155"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:21.759" endtime="20201115 22:04:22.156"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:21.754" endtime="20201115 22:04:22.158"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:22.169" level="INFO">${RESULT} = [{'time': 0.047671556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.874999999999406e-06, 'source_diff': 2.874999999999406e-06}, {'time': 0.047844292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:22.159" endtime="20201115 22:04:22.169"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:22.200" level="INFO">${OVERHEAD} = {'time': [0.047671556, 0.047844292, 0.048015958, 0.048186125, 0.048356569, 0.048526458, 0.048697653, 0.048868361, 0.049034028, 0.049203972, 0.049374028, 0.049542056, 0.049714944, 0.049886208, 0.050055...</msg>
<status status="PASS" starttime="20201115 22:04:22.171" endtime="20201115 22:04:22.201"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:22.212" level="INFO">NAME: 00-overhead-5-remove</msg>
<status status="PASS" starttime="20201115 22:04:22.209" endtime="20201115 22:04:22.213"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:22.219" level="INFO">VALUE: [2.874999999999406e-06, 2.874999999999406e-06, 2.860999999999836e-06, 2.8750000000063447e-06, 2.9300000000051507e-06, 2.7910000000019863e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.8340000000001697e-06, 2.860999999999836e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.860999999999836e-06, 2.860999999999836e-06, 2.860999999999836e-06, 2.8750000000063447e-06, 2.860999999999836e-06, 2.874999999999406e-06, 2.860999999999836e-06, 2.7909999999950474e-06, 2.860999999999836e-06, 2.860999999999836e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.860999999999836e-06, 2.860999999999836e-06, 2.874999999999406e-06, 2.8750000000063447e-06, 2.874999999999406e-06, 2.8619999999993095e-06, 2.874999999999406e-06, 2.8479999999997396e-06, 2.8750000000063447e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.860999999999836e-06, 2.915999999998642e-06, 2.860999999999836e-06, 2.847000000000266e-06, 2.847000000000266e-06, 2.8890000000059146e-06, 2.9029999999985456e-06, 2.8620000000062484e-06, 2.847000000000266e-06, 2.874999999999406e-06, 2.847000000000266e-06, 2.8889999999989757e-06, 2.860999999999836e-06, 2.8619999999993095e-06, 2.77800000000189e-06]</msg>
<status status="PASS" starttime="20201115 22:04:22.214" endtime="20201115 22:04:22.220"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:22.202" endtime="20201115 22:04:22.221"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:22.228" endtime="20201115 22:04:22.231"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:22.236" endtime="20201115 22:04:22.258"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:22.232" endtime="20201115 22:04:22.260"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:22.223" endtime="20201115 22:04:22.262"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:21.689" endtime="20201115 22:04:22.262"></status>
</kw>
<msg timestamp="20201115 22:04:22.263" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:22.287" endtime="20201115 22:04:22.305"></status>
</kw>
<msg timestamp="20201115 22:04:22.307" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:22.283" endtime="20201115 22:04:22.308"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:22.314" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:22.310" endtime="20201115 22:04:22.314"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:22.316" endtime="20201115 22:04:22.320"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:22.276" endtime="20201115 22:04:22.322"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:22.270" endtime="20201115 22:04:22.323"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:22.340" endtime="20201115 22:04:22.693"></status>
</kw>
<msg timestamp="20201115 22:04:22.700" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042197375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04220025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:04:22.337" endtime="20201115 22:04:22.701"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:22.719" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042197375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04220025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:04:22.702" endtime="20201115 22:04:22.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:22.721" endtime="20201115 22:04:22.725"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:22.329" endtime="20201115 22:04:22.727"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:22.324" endtime="20201115 22:04:22.728"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:22.739" level="INFO">${RESULT} = [{'time': 0.04220025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.874999999999406e-06, 'source_diff': 2.874999999999406e-06}, {'time': 0.042370667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:04:22.730" endtime="20201115 22:04:22.740"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:22.771" level="INFO">${OVERHEAD} = {'time': [0.04220025, 0.042370667, 0.042543042, 0.042709194, 0.042874806, 0.043046903, 0.043215528, 0.043385972, 0.043556625, 0.043723431, 0.043890292, 0.044061042, 0.0442295, 0.044396028, 0.044564667...</msg>
<status status="PASS" starttime="20201115 22:04:22.741" endtime="20201115 22:04:22.771"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:22.782" level="INFO">NAME: 00-overhead-5-remove</msg>
<status status="PASS" starttime="20201115 22:04:22.780" endtime="20201115 22:04:22.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:22.788" level="INFO">VALUE: [2.874999999999406e-06, 2.874999999999406e-06, 2.9310000000046244e-06, 2.847000000000266e-06, 2.8479999999997396e-06, 2.847000000000266e-06, 2.847000000000266e-06, 2.860999999999836e-06, 2.847000000000266e-06, 2.9169999999981155e-06, 2.874999999999406e-06, 2.9029999999985456e-06, 2.847000000000266e-06, 2.874999999999406e-06, 2.860999999999836e-06, 2.860999999999836e-06, 2.9310000000046244e-06, 2.860999999999836e-06, 2.847000000000266e-06, 2.860999999999836e-06, 2.8200000000006e-06, 2.860999999999836e-06, 2.874999999999406e-06, 2.847000000000266e-06, 2.860999999999836e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.887999999999502e-06, 2.860999999999836e-06, 2.819000000001126e-06, 2.847000000000266e-06, 2.847000000000266e-06, 2.80600000000103e-06, 2.874999999999406e-06, 2.8479999999997396e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.79200000000146e-06, 2.860999999999836e-06, 2.8619999999993095e-06, 2.8049999999946174e-06, 2.8889999999989757e-06, 2.860999999999836e-06, 2.874999999999406e-06, 2.860999999999836e-06, 2.860999999999836e-06, 2.861000000006775e-06, 2.874999999999406e-06]</msg>
<status status="PASS" starttime="20201115 22:04:22.785" endtime="20201115 22:04:22.789"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:22.773" endtime="20201115 22:04:22.790"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:22.797" endtime="20201115 22:04:22.803"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:22.809" endtime="20201115 22:04:22.831"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:22.805" endtime="20201115 22:04:22.833"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:22.792" endtime="20201115 22:04:22.835"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:22.264" endtime="20201115 22:04:22.835"></status>
</kw>
<msg timestamp="20201115 22:04:22.836" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:22.860" endtime="20201115 22:04:22.879"></status>
</kw>
<msg timestamp="20201115 22:04:22.880" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:22.857" endtime="20201115 22:04:22.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:22.887" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:22.883" endtime="20201115 22:04:22.887"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:22.889" endtime="20201115 22:04:22.893"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:22.849" endtime="20201115 22:04:22.895"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:22.843" endtime="20201115 22:04:22.896"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:22.913" endtime="20201115 22:04:23.266"></status>
</kw>
<msg timestamp="20201115 22:04:23.274" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043024847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043027694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:22.910" endtime="20201115 22:04:23.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:23.292" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043024847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043027694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:23.276" endtime="20201115 22:04:23.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:23.295" endtime="20201115 22:04:23.299"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:22.902" endtime="20201115 22:04:23.300"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:22.897" endtime="20201115 22:04:23.302"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:23.313" level="INFO">${RESULT} = [{'time': 0.043027694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.847000000000266e-06, 'source_diff': 2.847000000000266e-06}, {'time': 0.043193361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:23.304" endtime="20201115 22:04:23.313"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:23.345" level="INFO">${OVERHEAD} = {'time': [0.043027694, 0.043193361, 0.043362806, 0.043532833, 0.043703667, 0.043869847, 0.044037722, 0.044203819, 0.044371792, 0.044543042, 0.044711764, 0.044883583, 0.045055931, 0.045223042, 0.045390...</msg>
<status status="PASS" starttime="20201115 22:04:23.315" endtime="20201115 22:04:23.345"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:23.356" level="INFO">NAME: 00-overhead-5-remove</msg>
<status status="PASS" starttime="20201115 22:04:23.354" endtime="20201115 22:04:23.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:23.362" level="INFO">VALUE: [2.847000000000266e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.8889999999989757e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.8050000000015562e-06, 2.915999999998642e-06, 2.8200000000006e-06, 2.860999999999836e-06, 2.9169999999981155e-06, 2.860999999999836e-06, 2.80600000000103e-06, 2.8479999999997396e-06, 2.860999999999836e-06, 2.8750000000063447e-06, 2.860999999999836e-06, 2.874999999999406e-06, 2.860999999999836e-06, 2.80600000000103e-06, 2.874999999999406e-06, 2.847000000000266e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.860999999999836e-06, 2.847000000000266e-06, 2.861000000006775e-06, 2.8619999999993095e-06, 2.860999999999836e-06, 2.860999999999836e-06, 2.8479999999997396e-06, 2.860999999999836e-06, 2.874999999999406e-06, 2.860999999999836e-06, 2.8200000000006e-06, 2.860999999999836e-06, 2.874999999999406e-06, 2.9029999999985456e-06, 2.860999999999836e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.860999999999836e-06, 2.860999999999836e-06, 2.847000000000266e-06, 2.874999999999406e-06, 2.860999999999836e-06, 2.860999999999836e-06, 2.8200000000006e-06, 2.860999999999836e-06, 2.860999999999836e-06]</msg>
<status status="PASS" starttime="20201115 22:04:23.358" endtime="20201115 22:04:23.362"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:23.347" endtime="20201115 22:04:23.364"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:23.371" endtime="20201115 22:04:23.373"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:23.379" endtime="20201115 22:04:23.401"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:23.375" endtime="20201115 22:04:23.404"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:23.366" endtime="20201115 22:04:23.405"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:22.837" endtime="20201115 22:04:23.406"></status>
</kw>
<msg timestamp="20201115 22:04:23.406" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:23.432" endtime="20201115 22:04:23.450"></status>
</kw>
<msg timestamp="20201115 22:04:23.451" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:23.428" endtime="20201115 22:04:23.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:23.458" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:23.454" endtime="20201115 22:04:23.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:23.460" endtime="20201115 22:04:23.464"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:23.421" endtime="20201115 22:04:23.466"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:23.413" endtime="20201115 22:04:23.467"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:23.485" endtime="20201115 22:04:23.838"></status>
</kw>
<msg timestamp="20201115 22:04:23.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044381153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044384069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:23.481" endtime="20201115 22:04:23.846"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:23.864" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044381153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044384069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:23.848" endtime="20201115 22:04:23.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:23.867" endtime="20201115 22:04:23.871"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:23.474" endtime="20201115 22:04:23.872"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:23.469" endtime="20201115 22:04:23.874"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:23.885" level="INFO">${RESULT} = [{'time': 0.044384069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.915999999998642e-06, 'source_diff': 2.915999999998642e-06}, {'time': 0.044551278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:23.875" endtime="20201115 22:04:23.885"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:23.916" level="INFO">${OVERHEAD} = {'time': [0.044384069, 0.044551278, 0.044717875, 0.044885556, 0.045051611, 0.045222806, 0.045390444, 0.045562792, 0.045733833, 0.045901403, 0.046068792, 0.046237069, 0.046407, 0.046577611, 0.046745444...</msg>
<status status="PASS" starttime="20201115 22:04:23.887" endtime="20201115 22:04:23.917"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:23.928" level="INFO">NAME: 00-overhead-5-remove</msg>
<status status="PASS" starttime="20201115 22:04:23.925" endtime="20201115 22:04:23.929"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:23.933" level="INFO">VALUE: [2.915999999998642e-06, 2.847000000000266e-06, 2.860999999999836e-06, 2.8479999999997396e-06, 2.9169999999981155e-06, 2.8619999999993095e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.860999999999836e-06, 2.860999999999836e-06, 2.860999999999836e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.860999999999836e-06, 2.8479999999997396e-06, 2.874999999999406e-06, 2.8049999999946174e-06, 2.860999999999836e-06, 2.8340000000001697e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.860999999999836e-06, 2.874999999999406e-06, 2.860999999999836e-06, 2.874999999999406e-06, 2.887999999999502e-06, 2.860999999999836e-06, 2.9169999999981155e-06, 2.861000000006775e-06, 2.860999999999836e-06, 2.847000000000266e-06, 2.9029999999985456e-06, 2.860999999999836e-06, 2.860999999999836e-06, 2.861000000006775e-06, 2.874999999999406e-06, 2.915999999998642e-06, 2.861000000006775e-06, 2.8479999999997396e-06, 2.860999999999836e-06, 2.8479999999997396e-06, 2.805999999994091e-06, 2.901999999999072e-06, 2.860999999999836e-06, 2.874999999999406e-06, 2.80600000000103e-06, 2.860999999999836e-06, 2.874999999999406e-06, 2.833000000000696e-06]</msg>
<status status="PASS" starttime="20201115 22:04:23.930" endtime="20201115 22:04:23.935"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:23.918" endtime="20201115 22:04:23.937"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:23.943" endtime="20201115 22:04:23.946"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:23.952" endtime="20201115 22:04:23.974"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:23.947" endtime="20201115 22:04:23.975"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:23.938" endtime="20201115 22:04:23.977"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:23.407" endtime="20201115 22:04:23.978"></status>
</kw>
<msg timestamp="20201115 22:04:23.978" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:24.002" endtime="20201115 22:04:24.021"></status>
</kw>
<msg timestamp="20201115 22:04:24.022" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:23.998" endtime="20201115 22:04:24.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:24.029" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:24.025" endtime="20201115 22:04:24.029"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:24.031" endtime="20201115 22:04:24.036"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:23.991" endtime="20201115 22:04:24.038"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:23.985" endtime="20201115 22:04:24.040"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:24.057" endtime="20201115 22:04:24.409"></status>
</kw>
<msg timestamp="20201115 22:04:24.417" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042459667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042462528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:24.053" endtime="20201115 22:04:24.417"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:24.435" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042459667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042462528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:24.419" endtime="20201115 22:04:24.436"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:24.438" endtime="20201115 22:04:24.441"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:24.046" endtime="20201115 22:04:24.443"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:24.041" endtime="20201115 22:04:24.445"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:24.456" level="INFO">${RESULT} = [{'time': 0.042462528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.860999999999836e-06, 'source_diff': 2.860999999999836e-06}, {'time': 0.042632597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:24.446" endtime="20201115 22:04:24.456"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:24.487" level="INFO">${OVERHEAD} = {'time': [0.042462528, 0.042632597, 0.042799014, 0.042966639, 0.043133, 0.043305347, 0.043472208, 0.043639583, 0.04380575, 0.043976917, 0.044143111, 0.044311292, 0.044478708, 0.044647875, 0.044817111,...</msg>
<status status="PASS" starttime="20201115 22:04:24.458" endtime="20201115 22:04:24.488"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:24.498" level="INFO">NAME: 00-overhead-5-remove</msg>
<status status="PASS" starttime="20201115 22:04:24.496" endtime="20201115 22:04:24.499"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:24.504" level="INFO">VALUE: [2.860999999999836e-06, 2.860999999999836e-06, 2.8750000000063447e-06, 2.860999999999836e-06, 2.847000000000266e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.860999999999836e-06, 2.874999999999406e-06, 2.860999999999836e-06, 2.847000000000266e-06, 2.8479999999997396e-06, 2.901999999999072e-06, 2.860999999999836e-06, 2.860999999999836e-06, 2.833000000000696e-06, 2.915999999998642e-06, 2.860999999999836e-06, 2.8479999999997396e-06, 2.847000000000266e-06, 2.7770000000024164e-06, 2.860999999999836e-06, 2.860999999999836e-06, 2.8200000000006e-06, 2.847000000000266e-06, 2.860999999999836e-06, 2.860999999999836e-06, 2.860999999999836e-06, 2.860999999999836e-06, 2.860999999999836e-06, 2.874999999999406e-06, 2.847000000000266e-06, 2.8619999999993095e-06, 2.847000000000266e-06, 2.8340000000001697e-06, 2.860999999999836e-06, 2.8889999999989757e-06, 2.860999999999836e-06, 2.860999999999836e-06, 2.874999999999406e-06, 2.805999999994091e-06, 2.860999999999836e-06, 2.915999999998642e-06, 2.901999999999072e-06, 2.847000000000266e-06, 2.8479999999997396e-06, 2.860999999999836e-06, 2.9169999999981155e-06, 2.9169999999981155e-06, 2.874999999999406e-06]</msg>
<status status="PASS" starttime="20201115 22:04:24.501" endtime="20201115 22:04:24.506"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:24.489" endtime="20201115 22:04:24.507"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:24.514" endtime="20201115 22:04:24.517"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:24.522" endtime="20201115 22:04:24.545"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:24.518" endtime="20201115 22:04:24.547"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:24.509" endtime="20201115 22:04:24.548"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:23.979" endtime="20201115 22:04:24.549"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:21.685" endtime="20201115 22:04:24.550"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:21.683" endtime="20201115 22:04:24.550"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:04:24.555" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:24.580" endtime="20201115 22:04:24.600"></status>
</kw>
<msg timestamp="20201115 22:04:24.601" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:24.577" endtime="20201115 22:04:24.602"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:24.608" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:24.604" endtime="20201115 22:04:24.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:24.610" endtime="20201115 22:04:24.614"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:24.569" endtime="20201115 22:04:24.616"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:24.562" endtime="20201115 22:04:24.617"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:24.636" endtime="20201115 22:04:24.988"></status>
</kw>
<msg timestamp="20201115 22:04:24.995" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049815889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049818944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:24.633" endtime="20201115 22:04:24.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:25.014" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049815889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049818944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:24.998" endtime="20201115 22:04:25.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:25.017" endtime="20201115 22:04:25.020"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:24.623" endtime="20201115 22:04:25.022"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:24.618" endtime="20201115 22:04:25.024"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:25.035" level="INFO">${RESULT} = [{'time': 0.049818944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0549999999948674e-06, 'source_diff': 3.0549999999948674e-06}, {'time': 0.050003375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:04:25.025" endtime="20201115 22:04:25.035"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:25.066" level="INFO">${OVERHEAD} = {'time': [0.049818944, 0.050003375, 0.050190722, 0.050378222, 0.050567458, 0.050757694, 0.050944069, 0.051129958, 0.051317986, 0.051501514, 0.051688583, 0.051878042, 0.052066403, 0.052250625, 0.052440...</msg>
<status status="PASS" starttime="20201115 22:04:25.037" endtime="20201115 22:04:25.067"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:25.077" level="INFO">NAME: 00-overhead-6-remove</msg>
<status status="PASS" starttime="20201115 22:04:25.075" endtime="20201115 22:04:25.078"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:25.084" level="INFO">VALUE: [3.0549999999948674e-06, 3.083000000000946e-06, 3.0000000000030003e-06, 3.083000000000946e-06, 3.0550000000018063e-06, 3.069000000001376e-06, 3.137999999999752e-06, 3.083000000000946e-06, 3.097000000000516e-06, 3.07000000000085e-06, 3.069000000001376e-06, 3.0840000000004197e-06, 3.0840000000004197e-06, 3.05600000000128e-06, 3.069000000001376e-06, 3.069000000001376e-06, 3.111000000000086e-06, 2.9860000000034304e-06, 3.069000000001376e-06, 3.07000000000085e-06, 3.07000000000085e-06, 3.083000000000946e-06, 3.069000000001376e-06, 3.0549999999948674e-06, 3.069000000001376e-06, 3.1389999999992257e-06, 3.02800000000214e-06, 3.069000000001376e-06, 3.04200000000171e-06, 3.07000000000085e-06, 3.097000000000516e-06, 3.0689999999944373e-06, 3.07000000000085e-06, 3.0139999999956313e-06, 3.096999999993577e-06, 3.027999999995201e-06, 3.055999999994341e-06, 3.0000000000030003e-06, 3.07000000000085e-06, 3.097000000000516e-06, 3.05600000000128e-06, 3.0550000000018063e-06, 3.097000000000516e-06, 3.097000000000516e-06, 3.07000000000085e-06, 3.0549999999948674e-06, 3.07000000000085e-06, 3.111000000000086e-06, 3.07000000000085e-06, 3.083000000000946e-06]</msg>
<status status="PASS" starttime="20201115 22:04:25.080" endtime="20201115 22:04:25.085"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:25.068" endtime="20201115 22:04:25.086"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:25.093" endtime="20201115 22:04:25.096"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:25.101" endtime="20201115 22:04:25.123"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:25.097" endtime="20201115 22:04:25.125"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:25.088" endtime="20201115 22:04:25.127"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:24.557" endtime="20201115 22:04:25.127"></status>
</kw>
<msg timestamp="20201115 22:04:25.128" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:25.152" endtime="20201115 22:04:25.171"></status>
</kw>
<msg timestamp="20201115 22:04:25.173" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:25.148" endtime="20201115 22:04:25.173"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:25.179" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:25.175" endtime="20201115 22:04:25.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:25.181" endtime="20201115 22:04:25.185"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:25.141" endtime="20201115 22:04:25.187"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:25.135" endtime="20201115 22:04:25.188"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:25.206" endtime="20201115 22:04:25.562"></status>
</kw>
<msg timestamp="20201115 22:04:25.569" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042278361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042281431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:25.202" endtime="20201115 22:04:25.570"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:25.588" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042278361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042281431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:25.571" endtime="20201115 22:04:25.589"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:25.591" endtime="20201115 22:04:25.595"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:25.195" endtime="20201115 22:04:25.597"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:25.190" endtime="20201115 22:04:25.598"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:25.609" level="INFO">${RESULT} = [{'time': 0.042281431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.07000000000085e-06, 'source_diff': 3.07000000000085e-06}, {'time': 0.042465083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:04:25.600" endtime="20201115 22:04:25.610"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:25.641" level="INFO">${OVERHEAD} = {'time': [0.042281431, 0.042465083, 0.042653889, 0.04284125, 0.043027917, 0.043217528, 0.043405847, 0.043589653, 0.043773972, 0.043964097, 0.044152125, 0.044340931, 0.044531097, 0.044716653, 0.0449034...</msg>
<status status="PASS" starttime="20201115 22:04:25.612" endtime="20201115 22:04:25.642"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:25.653" level="INFO">NAME: 00-overhead-6-remove</msg>
<status status="PASS" starttime="20201115 22:04:25.651" endtime="20201115 22:04:25.654"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:25.659" level="INFO">VALUE: [3.07000000000085e-06, 3.0550000000018063e-06, 3.07000000000085e-06, 3.082999999994007e-06, 3.0840000000004197e-06, 3.027999999995201e-06, 3.0409999999952975e-06, 3.05600000000128e-06, 3.0550000000018063e-06, 3.069000000001376e-06, 3.083000000000946e-06, 3.0840000000004197e-06, 3.069000000001376e-06, 3.05600000000128e-06, 3.07000000000085e-06, 3.083000000000946e-06, 3.069000000001376e-06, 3.069000000001376e-06, 3.05600000000128e-06, 3.0550000000018063e-06, 3.1389999999992257e-06, 3.0550000000018063e-06, 3.1389999999992257e-06, 3.0840000000004197e-06, 3.0410000000022364e-06, 3.02800000000214e-06, 3.069999999993911e-06, 3.07000000000085e-06, 3.069000000001376e-06, 3.0689999999944373e-06, 3.083000000000946e-06, 3.069000000001376e-06, 3.069000000001376e-06, 3.0550000000018063e-06, 3.0689999999944373e-06, 3.055999999994341e-06, 3.0840000000004197e-06, 3.069000000001376e-06, 3.05600000000128e-06, 3.069000000001376e-06, 3.02800000000214e-06, 3.083000000000946e-06, 3.0549999999948674e-06, 3.082999999994007e-06, 3.07000000000085e-06, 3.0840000000004197e-06, 3.083000000000946e-06, 3.097000000000516e-06, 3.07000000000085e-06, 3.0689999999944373e-06]</msg>
<status status="PASS" starttime="20201115 22:04:25.655" endtime="20201115 22:04:25.660"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:25.644" endtime="20201115 22:04:25.661"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:25.668" endtime="20201115 22:04:25.670"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:25.676" endtime="20201115 22:04:25.698"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:25.672" endtime="20201115 22:04:25.700"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:25.663" endtime="20201115 22:04:25.702"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:25.129" endtime="20201115 22:04:25.702"></status>
</kw>
<msg timestamp="20201115 22:04:25.703" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:25.726" endtime="20201115 22:04:25.746"></status>
</kw>
<msg timestamp="20201115 22:04:25.747" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:25.723" endtime="20201115 22:04:25.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:25.754" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:25.750" endtime="20201115 22:04:25.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:25.756" endtime="20201115 22:04:25.760"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:25.716" endtime="20201115 22:04:25.762"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:25.710" endtime="20201115 22:04:25.763"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:25.780" endtime="20201115 22:04:26.136"></status>
</kw>
<msg timestamp="20201115 22:04:26.143" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042147139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042150194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:25.777" endtime="20201115 22:04:26.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:26.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042147139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042150194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:26.146" endtime="20201115 22:04:26.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:26.164" endtime="20201115 22:04:26.168"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:25.769" endtime="20201115 22:04:26.170"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:25.764" endtime="20201115 22:04:26.171"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:26.182" level="INFO">${RESULT} = [{'time': 0.042150194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0550000000018063e-06, 'source_diff': 3.0550000000018063e-06}, {'time': 0.042334389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:04:26.173" endtime="20201115 22:04:26.183"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:26.214" level="INFO">${OVERHEAD} = {'time': [0.042150194, 0.042334389, 0.042518778, 0.042703681, 0.042890708, 0.043080167, 0.043262819, 0.043447597, 0.043634167, 0.043820167, 0.044005528, 0.044190986, 0.044377431, 0.044561083, 0.044746...</msg>
<status status="PASS" starttime="20201115 22:04:26.185" endtime="20201115 22:04:26.215"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:26.226" level="INFO">NAME: 00-overhead-6-remove</msg>
<status status="PASS" starttime="20201115 22:04:26.223" endtime="20201115 22:04:26.226"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:26.231" level="INFO">VALUE: [3.0550000000018063e-06, 3.05600000000128e-06, 3.07000000000085e-06, 3.07000000000085e-06, 3.083000000000946e-06, 3.07000000000085e-06, 3.124999999999656e-06, 3.097000000000516e-06, 3.07000000000085e-06, 3.0840000000004197e-06, 3.05600000000128e-06, 3.0550000000018063e-06, 3.07000000000085e-06, 3.069000000001376e-06, 3.055999999994341e-06, 3.069000000001376e-06, 3.07000000000085e-06, 3.07000000000085e-06, 3.05600000000128e-06, 3.0979999999999897e-06, 3.0000000000030003e-06, 3.0840000000004197e-06, 3.083000000000946e-06, 3.083000000000946e-06, 3.0840000000004197e-06, 3.069000000001376e-06, 3.05600000000128e-06, 3.0840000000004197e-06, 3.083000000000946e-06, 3.069000000001376e-06, 3.05600000000128e-06, 3.082999999994007e-06, 3.0840000000004197e-06, 3.083000000000946e-06, 3.07000000000085e-06, 3.05600000000128e-06, 3.0549999999948674e-06, 3.07000000000085e-06, 3.083000000000946e-06, 3.07000000000085e-06, 3.083000000000946e-06, 3.1529999999987957e-06, 3.069000000001376e-06, 3.069000000001376e-06, 3.069000000001376e-06, 3.05600000000128e-06, 3.07000000000085e-06, 3.05600000000128e-06, 3.0840000000004197e-06, 3.07000000000085e-06]</msg>
<status status="PASS" starttime="20201115 22:04:26.228" endtime="20201115 22:04:26.232"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:26.216" endtime="20201115 22:04:26.234"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:26.240" endtime="20201115 22:04:26.243"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:26.249" endtime="20201115 22:04:26.271"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:26.244" endtime="20201115 22:04:26.272"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:26.236" endtime="20201115 22:04:26.274"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:25.704" endtime="20201115 22:04:26.275"></status>
</kw>
<msg timestamp="20201115 22:04:26.275" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:26.299" endtime="20201115 22:04:26.318"></status>
</kw>
<msg timestamp="20201115 22:04:26.320" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:26.295" endtime="20201115 22:04:26.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:26.326" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:26.322" endtime="20201115 22:04:26.327"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:26.328" endtime="20201115 22:04:26.332"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:26.288" endtime="20201115 22:04:26.334"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:26.282" endtime="20201115 22:04:26.335"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:26.352" endtime="20201115 22:04:26.707"></status>
</kw>
<msg timestamp="20201115 22:04:26.715" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042020097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042023167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:26.349" endtime="20201115 22:04:26.715"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:26.733" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042020097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042023167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:26.717" endtime="20201115 22:04:26.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:26.741" endtime="20201115 22:04:26.746"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:26.341" endtime="20201115 22:04:26.748"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:26.337" endtime="20201115 22:04:26.750"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:26.760" level="INFO">${RESULT} = [{'time': 0.042023167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.07000000000085e-06, 'source_diff': 3.07000000000085e-06}, {'time': 0.04220925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 22:04:26.751" endtime="20201115 22:04:26.761"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:26.792" level="INFO">${OVERHEAD} = {'time': [0.042023167, 0.04220925, 0.042394931, 0.042583069, 0.042768556, 0.04295225, 0.043139222, 0.043328097, 0.043511611, 0.043701042, 0.043884222, 0.044070069, 0.044258611, 0.044444056, 0.04462886...</msg>
<status status="PASS" starttime="20201115 22:04:26.763" endtime="20201115 22:04:26.792"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:26.803" level="INFO">NAME: 00-overhead-6-remove</msg>
<status status="PASS" starttime="20201115 22:04:26.801" endtime="20201115 22:04:26.804"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:26.809" level="INFO">VALUE: [3.07000000000085e-06, 3.124999999999656e-06, 3.069999999993911e-06, 3.069000000001376e-06, 3.07000000000085e-06, 3.0689999999944373e-06, 3.083000000000946e-06, 3.0550000000018063e-06, 3.069000000001376e-06, 3.0840000000004197e-06, 3.083000000000946e-06, 3.069000000001376e-06, 3.069000000001376e-06, 3.07000000000085e-06, 3.069000000001376e-06, 3.04200000000171e-06, 3.05600000000128e-06, 3.097000000000516e-06, 3.069000000001376e-06, 3.069000000001376e-06, 3.01400000000257e-06, 3.069000000001376e-06, 3.07000000000085e-06, 3.1389999999992257e-06, 3.041999999994771e-06, 3.0000000000030003e-06, 3.0269999999957276e-06, 3.0550000000018063e-06, 3.0840000000004197e-06, 3.0840000000004197e-06, 3.055999999994341e-06, 3.083999999993481e-06, 3.069000000001376e-06, 3.069000000001376e-06, 3.069999999993911e-06, 3.083000000000946e-06, 3.069000000001376e-06, 3.0550000000018063e-06, 3.05600000000128e-06, 3.111000000000086e-06, 3.07000000000085e-06, 3.097000000000516e-06, 3.083000000000946e-06, 3.069000000001376e-06, 3.083000000000946e-06, 3.05600000000128e-06, 3.07000000000085e-06, 3.083000000000946e-06, 3.0689999999944373e-06, 3.04200000000171e-06]</msg>
<status status="PASS" starttime="20201115 22:04:26.805" endtime="20201115 22:04:26.809"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:26.794" endtime="20201115 22:04:26.811"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:26.818" endtime="20201115 22:04:26.820"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:26.826" endtime="20201115 22:04:26.848"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:26.822" endtime="20201115 22:04:26.850"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:26.813" endtime="20201115 22:04:26.852"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:26.276" endtime="20201115 22:04:26.852"></status>
</kw>
<msg timestamp="20201115 22:04:26.853" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:26.877" endtime="20201115 22:04:26.896"></status>
</kw>
<msg timestamp="20201115 22:04:26.898" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:26.873" endtime="20201115 22:04:26.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:26.904" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:26.900" endtime="20201115 22:04:26.905"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:26.906" endtime="20201115 22:04:26.910"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:26.866" endtime="20201115 22:04:26.912"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:26.860" endtime="20201115 22:04:26.913"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:26.930" endtime="20201115 22:04:27.283"></status>
</kw>
<msg timestamp="20201115 22:04:27.291" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042427528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042430597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:26.927" endtime="20201115 22:04:27.292"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:27.310" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042427528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042430597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:27.294" endtime="20201115 22:04:27.311"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:27.312" endtime="20201115 22:04:27.318"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:26.920" endtime="20201115 22:04:27.320"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:26.915" endtime="20201115 22:04:27.321"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:27.332" level="INFO">${RESULT} = [{'time': 0.042430597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.069000000001376e-06, 'source_diff': 3.069000000001376e-06}, {'time': 0.042617056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:27.323" endtime="20201115 22:04:27.332"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:27.363" level="INFO">${OVERHEAD} = {'time': [0.042430597, 0.042617056, 0.042800514, 0.042984764, 0.043167847, 0.043357472, 0.043541694, 0.043731028, 0.04391575, 0.044102486, 0.044287167, 0.044476722, 0.0446665, 0.044853306, 0.045038944...</msg>
<status status="PASS" starttime="20201115 22:04:27.334" endtime="20201115 22:04:27.364"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:27.374" level="INFO">NAME: 00-overhead-6-remove</msg>
<status status="PASS" starttime="20201115 22:04:27.372" endtime="20201115 22:04:27.375"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:27.380" level="INFO">VALUE: [3.069000000001376e-06, 3.0000000000030003e-06, 3.097000000000516e-06, 3.05600000000128e-06, 3.097000000000516e-06, 3.0410000000022364e-06, 3.083000000000946e-06, 3.041999999994771e-06, 3.05600000000128e-06, 3.0550000000018063e-06, 3.124999999999656e-06, 3.069000000001376e-06, 3.083000000000946e-06, 3.07000000000085e-06, 3.0549999999948674e-06, 3.0410000000022364e-06, 3.0550000000018063e-06, 3.05600000000128e-06, 3.07000000000085e-06, 3.083000000000946e-06, 3.0689999999944373e-06, 3.069000000001376e-06, 3.01400000000257e-06, 3.069999999993911e-06, 3.069000000001376e-06, 3.069000000001376e-06, 3.07000000000085e-06, 3.02800000000214e-06, 3.097000000000516e-06, 3.01400000000257e-06, 3.0689999999944373e-06, 3.069000000001376e-06, 3.04200000000171e-06, 3.083999999993481e-06, 3.07000000000085e-06, 3.05600000000128e-06, 3.0840000000004197e-06, 3.083000000000946e-06, 3.0689999999944373e-06, 3.069000000001376e-06, 3.097000000000516e-06, 3.111000000000086e-06, 3.111000000000086e-06, 3.0550000000018063e-06, 3.069000000001376e-06, 3.069000000001376e-06, 3.0549999999948674e-06, 3.069000000001376e-06, 3.0840000000004197e-06, 3.07000000000085e-06]</msg>
<status status="PASS" starttime="20201115 22:04:27.377" endtime="20201115 22:04:27.381"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:27.365" endtime="20201115 22:04:27.382"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:27.389" endtime="20201115 22:04:27.391"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:27.397" endtime="20201115 22:04:27.419"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:27.393" endtime="20201115 22:04:27.421"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:27.384" endtime="20201115 22:04:27.423"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:26.854" endtime="20201115 22:04:27.423"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:24.553" endtime="20201115 22:04:27.424"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:24.551" endtime="20201115 22:04:27.424"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:04:27.429" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:27.453" endtime="20201115 22:04:27.474"></status>
</kw>
<msg timestamp="20201115 22:04:27.475" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:27.449" endtime="20201115 22:04:27.475"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:27.481" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:27.477" endtime="20201115 22:04:27.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:27.484" endtime="20201115 22:04:27.488"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:27.442" endtime="20201115 22:04:27.489"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:27.436" endtime="20201115 22:04:27.491"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:27.508" endtime="20201115 22:04:27.866"></status>
</kw>
<msg timestamp="20201115 22:04:27.873" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047499153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047502444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:27.505" endtime="20201115 22:04:27.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:27.891" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047499153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047502444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:27.875" endtime="20201115 22:04:27.892"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:27.894" endtime="20201115 22:04:27.898"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:27.498" endtime="20201115 22:04:27.900"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:27.493" endtime="20201115 22:04:27.901"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:27.912" level="INFO">${RESULT} = [{'time': 0.047502444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.2909999999955475e-06, 'source_diff': 3.2909999999955475e-06}, {'time': 0.047710333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:04:27.903" endtime="20201115 22:04:27.913"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:27.944" level="INFO">${OVERHEAD} = {'time': [0.047502444, 0.047710333, 0.047917375, 0.04811925, 0.048325069, 0.048530931, 0.048735778, 0.048940472, 0.049145361, 0.049349361, 0.049554167, 0.049759278, 0.049965583, 0.050167181, 0.0503688...</msg>
<status status="PASS" starttime="20201115 22:04:27.914" endtime="20201115 22:04:27.944"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:27.955" level="INFO">NAME: 00-overhead-7-remove</msg>
<status status="PASS" starttime="20201115 22:04:27.952" endtime="20201115 22:04:27.956"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:27.960" level="INFO">VALUE: [3.2909999999955475e-06, 3.2770000000029165e-06, 3.291999999995021e-06, 3.27800000000239e-06, 3.2219999999971716e-06, 3.27800000000239e-06, 3.3340000000006698e-06, 3.2909999999955475e-06, 3.2779999999954512e-06, 3.26400000000282e-06, 3.26400000000282e-06, 3.2779999999954512e-06, 3.2500000000032503e-06, 3.2779999999954512e-06, 3.26400000000282e-06, 3.26400000000282e-06, 3.30600000000153e-06, 3.29200000000196e-06, 3.2630000000033466e-06, 3.2779999999954512e-06, 3.3049999999951174e-06, 3.27800000000239e-06, 3.29200000000196e-06, 3.2639999999958813e-06, 3.2769999999959776e-06, 3.3200000000011e-06, 3.2910000000024864e-06, 3.26400000000282e-06, 3.2909999999955475e-06, 3.2639999999958813e-06, 3.2779999999954512e-06, 3.2769999999959776e-06, 3.3050000000020563e-06, 3.29200000000196e-06, 3.27800000000239e-06, 3.305999999994591e-06, 3.29200000000196e-06, 3.29200000000196e-06, 3.3200000000011e-06, 3.27800000000239e-06, 3.2220000000041105e-06, 3.2770000000029165e-06, 3.27800000000239e-06, 3.2089999999970753e-06, 3.26400000000282e-06, 3.2769999999959776e-06, 3.360999999993397e-06, 3.2779999999954512e-06, 3.2639999999958813e-06, 3.27800000000239e-06]</msg>
<status status="PASS" starttime="20201115 22:04:27.957" endtime="20201115 22:04:27.961"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:27.945" endtime="20201115 22:04:27.963"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:27.969" endtime="20201115 22:04:27.972"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:27.978" endtime="20201115 22:04:28.000"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:27.973" endtime="20201115 22:04:28.002"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:27.965" endtime="20201115 22:04:28.003"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:27.430" endtime="20201115 22:04:28.004"></status>
</kw>
<msg timestamp="20201115 22:04:28.005" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:28.028" endtime="20201115 22:04:28.049"></status>
</kw>
<msg timestamp="20201115 22:04:28.050" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:28.025" endtime="20201115 22:04:28.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:28.057" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:28.052" endtime="20201115 22:04:28.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:28.059" endtime="20201115 22:04:28.063"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:28.017" endtime="20201115 22:04:28.065"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:28.011" endtime="20201115 22:04:28.066"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:28.083" endtime="20201115 22:04:28.435"></status>
</kw>
<msg timestamp="20201115 22:04:28.443" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042176847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042180139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:28.080" endtime="20201115 22:04:28.443"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:28.461" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042176847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042180139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:28.445" endtime="20201115 22:04:28.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:28.464" endtime="20201115 22:04:28.469"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:28.072" endtime="20201115 22:04:28.471"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:28.068" endtime="20201115 22:04:28.472"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:28.483" level="INFO">${RESULT} = [{'time': 0.042180139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.291999999995021e-06, 'source_diff': 3.291999999995021e-06}, {'time': 0.042385764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:28.474" endtime="20201115 22:04:28.484"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:28.515" level="INFO">${OVERHEAD} = {'time': [0.042180139, 0.042385764, 0.042594125, 0.042795764, 0.043001222, 0.043204361, 0.043407903, 0.043614944, 0.043819167, 0.044025708, 0.044227944, 0.044435333, 0.044640722, 0.044844528, 0.045050...</msg>
<status status="PASS" starttime="20201115 22:04:28.485" endtime="20201115 22:04:28.515"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:28.526" level="INFO">NAME: 00-overhead-7-remove</msg>
<status status="PASS" starttime="20201115 22:04:28.524" endtime="20201115 22:04:28.527"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:28.532" level="INFO">VALUE: [3.291999999995021e-06, 3.2219999999971716e-06, 3.291999999995021e-06, 3.27800000000239e-06, 3.2499999999963114e-06, 3.2779999999954512e-06, 3.2779999999954512e-06, 3.2770000000029165e-06, 3.30600000000153e-06, 3.2909999999955475e-06, 3.2769999999959776e-06, 3.3050000000020563e-06, 3.2910000000024864e-06, 3.30600000000153e-06, 3.2499999999963114e-06, 3.2779999999954512e-06, 3.3050000000020563e-06, 3.291999999995021e-06, 3.29200000000196e-06, 3.3049999999951174e-06, 3.2359999999967415e-06, 3.2779999999954512e-06, 3.2639999999958813e-06, 3.2770000000029165e-06, 3.26400000000282e-06, 3.27800000000239e-06, 3.291999999995021e-06, 3.27800000000239e-06, 3.27800000000239e-06, 3.26400000000282e-06, 3.27800000000239e-06, 3.26400000000282e-06, 3.29200000000196e-06, 3.27800000000239e-06, 3.26400000000282e-06, 3.305999999994591e-06, 3.2910000000024864e-06, 3.2910000000024864e-06, 3.27800000000239e-06, 3.319999999994161e-06, 3.2630000000033466e-06, 3.27800000000239e-06, 3.319000000001626e-06, 3.27800000000239e-06, 3.3340000000006698e-06, 3.2779999999954512e-06, 3.2639999999958813e-06, 3.27800000000239e-06, 3.291999999995021e-06, 3.27800000000239e-06]</msg>
<status status="PASS" starttime="20201115 22:04:28.529" endtime="20201115 22:04:28.533"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:28.517" endtime="20201115 22:04:28.535"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:28.541" endtime="20201115 22:04:28.545"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:28.551" endtime="20201115 22:04:28.573"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:28.546" endtime="20201115 22:04:28.575"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:28.537" endtime="20201115 22:04:28.576"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:28.006" endtime="20201115 22:04:28.577"></status>
</kw>
<msg timestamp="20201115 22:04:28.577" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:28.602" endtime="20201115 22:04:28.623"></status>
</kw>
<msg timestamp="20201115 22:04:28.624" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:28.598" endtime="20201115 22:04:28.624"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:28.630" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:28.626" endtime="20201115 22:04:28.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:28.632" endtime="20201115 22:04:28.636"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:28.590" endtime="20201115 22:04:28.638"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:28.584" endtime="20201115 22:04:28.639"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:28.656" endtime="20201115 22:04:29.010"></status>
</kw>
<msg timestamp="20201115 22:04:29.017" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043037847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043041125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:28.653" endtime="20201115 22:04:29.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:29.035" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043037847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043041125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:29.019" endtime="20201115 22:04:29.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:29.038" endtime="20201115 22:04:29.043"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:28.646" endtime="20201115 22:04:29.045"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:28.641" endtime="20201115 22:04:29.046"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:29.057" level="INFO">${RESULT} = [{'time': 0.043041125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.27800000000239e-06, 'source_diff': 3.27800000000239e-06}, {'time': 0.043247667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:04:29.048" endtime="20201115 22:04:29.058"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:29.089" level="INFO">${OVERHEAD} = {'time': [0.043041125, 0.043247667, 0.043454431, 0.043659014, 0.043864111, 0.044067417, 0.044274597, 0.044480319, 0.044683181, 0.044891472, 0.045094194, 0.045299, 0.045507208, 0.045711514, 0.045916194...</msg>
<status status="PASS" starttime="20201115 22:04:29.059" endtime="20201115 22:04:29.089"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:29.100" level="INFO">NAME: 00-overhead-7-remove</msg>
<status status="PASS" starttime="20201115 22:04:29.098" endtime="20201115 22:04:29.101"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:29.105" level="INFO">VALUE: [3.27800000000239e-06, 3.2639999999958813e-06, 3.27800000000239e-06, 3.30600000000153e-06, 3.291999999995021e-06, 3.291999999995021e-06, 3.2779999999954512e-06, 3.2769999999959776e-06, 3.27800000000239e-06, 3.27800000000239e-06, 3.2769999999959776e-06, 3.2639999999958813e-06, 3.2770000000029165e-06, 3.27800000000239e-06, 3.2630000000033466e-06, 3.29200000000196e-06, 3.2639999999958813e-06, 3.29200000000196e-06, 3.2779999999954512e-06, 3.291999999995021e-06, 3.27800000000239e-06, 3.2779999999954512e-06, 3.2639999999958813e-06, 3.2769999999959776e-06, 3.26400000000282e-06, 3.2769999999959776e-06, 3.237000000003154e-06, 3.27800000000239e-06, 3.291999999995021e-06, 3.26400000000282e-06, 3.2499999999963114e-06, 3.2359999999967415e-06, 3.27800000000239e-06, 3.2910000000024864e-06, 3.2909999999955475e-06, 3.27800000000239e-06, 3.27800000000239e-06, 3.2910000000024864e-06, 3.30600000000153e-06, 3.291999999995021e-06, 3.319000000001626e-06, 3.29200000000196e-06, 3.2639999999958813e-06, 3.3200000000011e-06, 3.27800000000239e-06, 3.26400000000282e-06, 3.27800000000239e-06, 3.2639999999958813e-06, 3.27800000000239e-06, 3.29200000000196e-06]</msg>
<status status="PASS" starttime="20201115 22:04:29.102" endtime="20201115 22:04:29.106"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:29.090" endtime="20201115 22:04:29.108"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:29.115" endtime="20201115 22:04:29.117"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:29.123" endtime="20201115 22:04:29.145"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:29.118" endtime="20201115 22:04:29.147"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:29.110" endtime="20201115 22:04:29.148"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:28.579" endtime="20201115 22:04:29.149"></status>
</kw>
<msg timestamp="20201115 22:04:29.150" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:29.174" endtime="20201115 22:04:29.195"></status>
</kw>
<msg timestamp="20201115 22:04:29.196" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:29.171" endtime="20201115 22:04:29.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:29.202" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:29.198" endtime="20201115 22:04:29.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:29.205" endtime="20201115 22:04:29.209"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:29.163" endtime="20201115 22:04:29.210"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:29.157" endtime="20201115 22:04:29.212"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:29.229" endtime="20201115 22:04:29.581"></status>
</kw>
<msg timestamp="20201115 22:04:29.588" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043040139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043043417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:29.225" endtime="20201115 22:04:29.589"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:29.607" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043040139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043043417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:29.590" endtime="20201115 22:04:29.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:29.609" endtime="20201115 22:04:29.615"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:29.218" endtime="20201115 22:04:29.616"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:29.213" endtime="20201115 22:04:29.618"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:29.629" level="INFO">${RESULT} = [{'time': 0.043043417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.27800000000239e-06, 'source_diff': 3.27800000000239e-06}, {'time': 0.043250486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:04:29.619" endtime="20201115 22:04:29.629"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:29.660" level="INFO">${OVERHEAD} = {'time': [0.043043417, 0.043250486, 0.043455986, 0.043661653, 0.043863153, 0.044068097, 0.044271514, 0.044473931, 0.044681208, 0.044884903, 0.045088431, 0.045294292, 0.045495819, 0.045698556, 0.045902...</msg>
<status status="PASS" starttime="20201115 22:04:29.631" endtime="20201115 22:04:29.660"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:29.671" level="INFO">NAME: 00-overhead-7-remove</msg>
<status status="PASS" starttime="20201115 22:04:29.669" endtime="20201115 22:04:29.672"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:29.677" level="INFO">VALUE: [3.27800000000239e-06, 3.3049999999951174e-06, 3.27800000000239e-06, 3.27800000000239e-06, 3.2500000000032503e-06, 3.27800000000239e-06, 3.291999999995021e-06, 3.26400000000282e-06, 3.2910000000024864e-06, 3.2639999999958813e-06, 3.291999999995021e-06, 3.27800000000239e-06, 3.2629999999964077e-06, 3.29200000000196e-06, 3.2079999999976017e-06, 3.26400000000282e-06, 3.29200000000196e-06, 3.26400000000282e-06, 3.319000000001626e-06, 3.2779999999954512e-06, 3.361000000000336e-06, 3.27800000000239e-06, 3.2779999999954512e-06, 3.29200000000196e-06, 3.27800000000239e-06, 3.26400000000282e-06, 3.27800000000239e-06, 3.3050000000020563e-06, 3.2639999999958813e-06, 3.319000000001626e-06, 3.2769999999959776e-06, 3.27800000000239e-06, 3.2220000000041105e-06, 3.26400000000282e-06, 3.2779999999954512e-06, 3.3189999999946873e-06, 3.2770000000029165e-06, 3.3050000000020563e-06, 3.27800000000239e-06, 3.26400000000282e-06, 3.2769999999959776e-06, 3.291999999995021e-06, 3.2779999999954512e-06, 3.26400000000282e-06, 3.27800000000239e-06, 3.26400000000282e-06, 3.27800000000239e-06, 3.27800000000239e-06, 3.2089999999970753e-06, 3.3200000000011e-06]</msg>
<status status="PASS" starttime="20201115 22:04:29.674" endtime="20201115 22:04:29.678"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:29.662" endtime="20201115 22:04:29.679"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:29.686" endtime="20201115 22:04:29.689"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:29.695" endtime="20201115 22:04:29.717"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:29.691" endtime="20201115 22:04:29.719"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:29.681" endtime="20201115 22:04:29.721"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:29.151" endtime="20201115 22:04:29.722"></status>
</kw>
<msg timestamp="20201115 22:04:29.722" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:29.747" endtime="20201115 22:04:29.768"></status>
</kw>
<msg timestamp="20201115 22:04:29.769" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:29.743" endtime="20201115 22:04:29.769"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:29.775" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:29.771" endtime="20201115 22:04:29.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:29.778" endtime="20201115 22:04:29.781"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:29.735" endtime="20201115 22:04:29.783"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:29.729" endtime="20201115 22:04:29.785"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:29.802" endtime="20201115 22:04:30.155"></status>
</kw>
<msg timestamp="20201115 22:04:30.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043883833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043887097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:29.798" endtime="20201115 22:04:30.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:30.180" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043883833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043887097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:30.164" endtime="20201115 22:04:30.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:30.183" endtime="20201115 22:04:30.190"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:29.791" endtime="20201115 22:04:30.192"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:29.786" endtime="20201115 22:04:30.193"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:30.204" level="INFO">${RESULT} = [{'time': 0.043887097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.26400000000282e-06, 'source_diff': 3.26400000000282e-06}, {'time': 0.044095069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:04:30.195" endtime="20201115 22:04:30.205"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:30.236" level="INFO">${OVERHEAD} = {'time': [0.043887097, 0.044095069, 0.044298958, 0.04450425, 0.044710722, 0.044919208, 0.045125903, 0.045331236, 0.045533806, 0.045736306, 0.045942417, 0.046146139, 0.046348875, 0.046556458, 0.0467640...</msg>
<status status="PASS" starttime="20201115 22:04:30.207" endtime="20201115 22:04:30.236"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:30.247" level="INFO">NAME: 00-overhead-7-remove</msg>
<status status="PASS" starttime="20201115 22:04:30.245" endtime="20201115 22:04:30.248"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:30.252" level="INFO">VALUE: [3.26400000000282e-06, 3.2770000000029165e-06, 3.2910000000024864e-06, 3.30600000000153e-06, 3.319000000001626e-06, 3.2910000000024864e-06, 3.26400000000282e-06, 3.2639999999958813e-06, 3.27800000000239e-06, 3.305999999994591e-06, 3.2639999999958813e-06, 3.333000000001196e-06, 3.2779999999954512e-06, 3.26400000000282e-06, 3.2779999999954512e-06, 3.27800000000239e-06, 3.319000000001626e-06, 3.27800000000239e-06, 3.291999999995021e-06, 3.3050000000020563e-06, 3.27800000000239e-06, 3.2089999999970753e-06, 3.2770000000029165e-06, 3.2500000000032503e-06, 3.291999999995021e-06, 3.2770000000029165e-06, 3.29200000000196e-06, 3.2909999999955475e-06, 3.26400000000282e-06, 3.26400000000282e-06, 3.2639999999958813e-06, 3.1939999999980317e-06, 3.27800000000239e-06, 3.2909999999955475e-06, 3.30600000000153e-06, 3.2779999999954512e-06, 3.2630000000033466e-06, 3.2770000000029165e-06, 3.26400000000282e-06, 3.27800000000239e-06, 3.291999999995021e-06, 3.2769999999959776e-06, 3.319000000001626e-06, 3.30600000000153e-06, 3.2909999999955475e-06, 3.27800000000239e-06, 3.2639999999958813e-06, 3.2909999999955475e-06, 3.27800000000239e-06, 3.27800000000239e-06]</msg>
<status status="PASS" starttime="20201115 22:04:30.249" endtime="20201115 22:04:30.254"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:30.238" endtime="20201115 22:04:30.256"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:30.262" endtime="20201115 22:04:30.265"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:30.271" endtime="20201115 22:04:30.293"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:30.266" endtime="20201115 22:04:30.295"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:30.257" endtime="20201115 22:04:30.296"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:29.723" endtime="20201115 22:04:30.297"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:27.427" endtime="20201115 22:04:30.297"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:27.425" endtime="20201115 22:04:30.298"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:04:30.303" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:30.326" endtime="20201115 22:04:30.348"></status>
</kw>
<msg timestamp="20201115 22:04:30.349" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:30.323" endtime="20201115 22:04:30.349"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:30.355" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:30.351" endtime="20201115 22:04:30.356"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:30.358" endtime="20201115 22:04:30.361"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:30.315" endtime="20201115 22:04:30.363"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:30.309" endtime="20201115 22:04:30.365"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:30.382" endtime="20201115 22:04:30.735"></status>
</kw>
<msg timestamp="20201115 22:04:30.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047489833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047493333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:30.378" endtime="20201115 22:04:30.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:30.762" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047489833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047493333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:30.745" endtime="20201115 22:04:30.763"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:30.765" endtime="20201115 22:04:30.769"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:30.371" endtime="20201115 22:04:30.771"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:30.366" endtime="20201115 22:04:30.772"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:30.784" level="INFO">${RESULT} = [{'time': 0.047493333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4999999999965614e-06, 'source_diff': 3.4999999999965614e-06}, {'time': 0.047716375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:04:30.774" endtime="20201115 22:04:30.784"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:30.815" level="INFO">${OVERHEAD} = {'time': [0.047493333, 0.047716375, 0.047939889, 0.048165361, 0.048391028, 0.048617667, 0.048841042, 0.049066611, 0.049291444, 0.049517694, 0.049741458, 0.049963611, 0.050186944, 0.050414236, 0.050638...</msg>
<status status="PASS" starttime="20201115 22:04:30.786" endtime="20201115 22:04:30.816"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:30.827" level="INFO">NAME: 00-overhead-8-remove</msg>
<status status="PASS" starttime="20201115 22:04:30.824" endtime="20201115 22:04:30.827"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:30.833" level="INFO">VALUE: [3.4999999999965614e-06, 3.5279999999957012e-06, 3.4859999999969915e-06, 3.4859999999969915e-06, 3.4860000000039304e-06, 3.5140000000030702e-06, 3.4449999999977554e-06, 3.4860000000039304e-06, 3.415999999999142e-06, 3.5130000000035966e-06, 3.4720000000043605e-06, 3.4859999999969915e-06, 3.4859999999969915e-06, 3.4439999999982818e-06, 3.4859999999969915e-06, 3.4860000000039304e-06, 3.4859999999969915e-06, 3.5000000000035003e-06, 3.5139999999961313e-06, 3.486999999996465e-06, 3.4860000000039304e-06, 3.486999999996465e-06, 3.4859999999969915e-06, 3.5000000000035003e-06, 3.4580000000047906e-06, 3.4999999999965614e-06, 3.487000000003404e-06, 3.4719999999974216e-06, 3.5000000000035003e-06, 3.473000000003834e-06, 3.4859999999969915e-06, 3.4579999999978517e-06, 3.4859999999969915e-06, 3.4859999999969915e-06, 3.486999999996465e-06, 3.4999999999965614e-06, 3.4859999999969915e-06, 3.5139999999961313e-06, 3.4859999999969915e-06, 3.4859999999969915e-06, 3.57000000000135e-06, 3.5000000000035003e-06, 3.5000000000035003e-06, 3.4859999999969915e-06, 3.4579999999978517e-06, 3.4719999999974216e-06, 3.4860000000039304e-06, 3.486999999996465e-06, 3.5279999999957012e-06, 3.4860000000039304e-06]</msg>
<status status="PASS" starttime="20201115 22:04:30.829" endtime="20201115 22:04:30.834"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:30.817" endtime="20201115 22:04:30.836"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:30.843" endtime="20201115 22:04:30.846"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:30.852" endtime="20201115 22:04:30.874"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:30.847" endtime="20201115 22:04:30.876"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:30.839" endtime="20201115 22:04:30.877"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:30.304" endtime="20201115 22:04:30.878"></status>
</kw>
<msg timestamp="20201115 22:04:30.879" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:30.902" endtime="20201115 22:04:30.924"></status>
</kw>
<msg timestamp="20201115 22:04:30.925" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:30.899" endtime="20201115 22:04:30.926"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:30.932" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:30.927" endtime="20201115 22:04:30.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:30.934" endtime="20201115 22:04:30.938"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:30.891" endtime="20201115 22:04:30.940"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:30.886" endtime="20201115 22:04:30.941"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:30.958" endtime="20201115 22:04:31.314"></status>
</kw>
<msg timestamp="20201115 22:04:31.321" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042412903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042416458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:30.955" endtime="20201115 22:04:31.321"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:31.340" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042412903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042416458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:31.323" endtime="20201115 22:04:31.340"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:31.342" endtime="20201115 22:04:31.347"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:30.947" endtime="20201115 22:04:31.349"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:30.942" endtime="20201115 22:04:31.351"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:31.362" level="INFO">${RESULT} = [{'time': 0.042416458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5549999999953674e-06, 'source_diff': 3.5549999999953674e-06}, {'time': 0.042643431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:04:31.352" endtime="20201115 22:04:31.362"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:31.393" level="INFO">${OVERHEAD} = {'time': [0.042416458, 0.042643431, 0.042869778, 0.043094917, 0.043318611, 0.043540472, 0.043767153, 0.043991694, 0.044214653, 0.044437153, 0.044660583, 0.044883375, 0.045105639, 0.045330028, 0.045554...</msg>
<status status="PASS" starttime="20201115 22:04:31.364" endtime="20201115 22:04:31.394"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:31.405" level="INFO">NAME: 00-overhead-8-remove</msg>
<status status="PASS" starttime="20201115 22:04:31.403" endtime="20201115 22:04:31.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:31.410" level="INFO">VALUE: [3.5549999999953674e-06, 3.487000000003404e-06, 3.4859999999969915e-06, 3.4860000000039304e-06, 3.4999999999965614e-06, 3.4859999999969915e-06, 3.4860000000039304e-06, 3.4859999999969915e-06, 3.4999999999965614e-06, 3.4859999999969915e-06, 3.5139999999961313e-06, 3.4860000000039304e-06, 3.4860000000039304e-06, 3.4590000000042642e-06, 3.5000000000035003e-06, 3.4859999999969915e-06, 3.4999999999965614e-06, 3.4860000000039304e-06, 3.4170000000055545e-06, 3.4859999999969915e-06, 3.4859999999969915e-06, 3.473000000003834e-06, 3.5139999999961313e-06, 3.4999999999965614e-06, 3.4859999999969915e-06, 3.4860000000039304e-06, 3.4999999999965614e-06, 3.4859999999969915e-06, 3.4860000000039304e-06, 3.5000000000035003e-06, 3.473000000003834e-06, 3.4860000000039304e-06, 3.487000000003404e-06, 3.4999999999965614e-06, 3.4999999999965614e-06, 3.4859999999969915e-06, 3.4859999999969915e-06, 3.5140000000030702e-06, 3.4860000000039304e-06, 3.5279999999957012e-06, 3.4309999999981855e-06, 3.4999999999965614e-06, 3.5140000000030702e-06, 3.4999999999965614e-06, 3.4859999999969915e-06, 3.4999999999965614e-06, 3.4999999999965614e-06, 3.4999999999965614e-06, 3.4719999999974216e-06, 3.4999999999965614e-06]</msg>
<status status="PASS" starttime="20201115 22:04:31.407" endtime="20201115 22:04:31.411"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:31.396" endtime="20201115 22:04:31.413"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:31.420" endtime="20201115 22:04:31.422"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:31.428" endtime="20201115 22:04:31.450"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:31.424" endtime="20201115 22:04:31.452"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:31.415" endtime="20201115 22:04:31.454"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:30.880" endtime="20201115 22:04:31.454"></status>
</kw>
<msg timestamp="20201115 22:04:31.455" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:31.479" endtime="20201115 22:04:31.500"></status>
</kw>
<msg timestamp="20201115 22:04:31.502" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:31.475" endtime="20201115 22:04:31.502"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:31.508" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:31.504" endtime="20201115 22:04:31.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:31.510" endtime="20201115 22:04:31.514"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:31.468" endtime="20201115 22:04:31.516"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:31.462" endtime="20201115 22:04:31.517"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:31.534" endtime="20201115 22:04:31.888"></status>
</kw>
<msg timestamp="20201115 22:04:31.895" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0423725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042375986, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:04:31.531" endtime="20201115 22:04:31.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:31.913" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0423725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042375986, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:04:31.897" endtime="20201115 22:04:31.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:31.916" endtime="20201115 22:04:31.921"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:31.523" endtime="20201115 22:04:31.923"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:31.519" endtime="20201115 22:04:31.925"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:31.941" level="INFO">${RESULT} = [{'time': 0.042375986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4859999999969915e-06, 'source_diff': 3.4859999999969915e-06}, {'time': 0.042599403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:04:31.926" endtime="20201115 22:04:31.942"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:31.973" level="INFO">${OVERHEAD} = {'time': [0.042375986, 0.042599403, 0.042820639, 0.043046611, 0.043271764, 0.043497417, 0.043723278, 0.043948319, 0.044175181, 0.044396861, 0.044623819, 0.04484575, 0.04506925, 0.045294694, 0.04551716...</msg>
<status status="PASS" starttime="20201115 22:04:31.944" endtime="20201115 22:04:31.973"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:31.984" level="INFO">NAME: 00-overhead-8-remove</msg>
<status status="PASS" starttime="20201115 22:04:31.982" endtime="20201115 22:04:31.985"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:31.990" level="INFO">VALUE: [3.4859999999969915e-06, 3.4860000000039304e-06, 3.54200000000221e-06, 3.4719999999974216e-06, 3.4579999999978517e-06, 3.4999999999965614e-06, 3.4719999999974216e-06, 3.4859999999969915e-06, 3.4449999999977554e-06, 3.4860000000039304e-06, 3.5000000000035003e-06, 3.4719999999974216e-06, 3.4859999999969915e-06, 3.4860000000039304e-06, 3.5139999999961313e-06, 3.5140000000030702e-06, 3.4719999999974216e-06, 3.4719999999974216e-06, 3.54200000000221e-06, 3.4439999999982818e-06, 3.5000000000035003e-06, 3.5140000000030702e-06, 3.5140000000030702e-06, 3.4860000000039304e-06, 3.4860000000039304e-06, 3.4999999999965614e-06, 3.5140000000030702e-06, 3.4860000000039304e-06, 3.4720000000043605e-06, 3.4999999999965614e-06, 3.4999999999965614e-06, 3.5000000000035003e-06, 3.4720000000043605e-06, 3.4860000000039304e-06, 3.4170000000055545e-06, 3.4859999999969915e-06, 3.4859999999969915e-06, 3.4439999999982818e-06, 3.4860000000039304e-06, 3.4859999999969915e-06, 3.429999999998712e-06, 3.4719999999974216e-06, 3.4590000000042642e-06, 3.4859999999969915e-06, 3.4860000000039304e-06, 3.4860000000039304e-06, 3.4859999999969915e-06, 3.5140000000030702e-06, 3.473000000003834e-06, 3.4719999999974216e-06]</msg>
<status status="PASS" starttime="20201115 22:04:31.986" endtime="20201115 22:04:31.990"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:31.975" endtime="20201115 22:04:31.992"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:31.999" endtime="20201115 22:04:32.002"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:32.007" endtime="20201115 22:04:32.029"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:32.003" endtime="20201115 22:04:32.031"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:31.994" endtime="20201115 22:04:32.033"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:31.456" endtime="20201115 22:04:32.033"></status>
</kw>
<msg timestamp="20201115 22:04:32.034" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:32.058" endtime="20201115 22:04:32.079"></status>
</kw>
<msg timestamp="20201115 22:04:32.080" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:32.054" endtime="20201115 22:04:32.081"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:32.087" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:32.083" endtime="20201115 22:04:32.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:32.089" endtime="20201115 22:04:32.093"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:32.047" endtime="20201115 22:04:32.095"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:32.041" endtime="20201115 22:04:32.096"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:32.113" endtime="20201115 22:04:32.465"></status>
</kw>
<msg timestamp="20201115 22:04:32.472" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042078528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042082083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:32.110" endtime="20201115 22:04:32.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:32.491" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042078528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042082083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:32.475" endtime="20201115 22:04:32.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:32.494" endtime="20201115 22:04:32.501"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:32.102" endtime="20201115 22:04:32.503"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:32.097" endtime="20201115 22:04:32.505"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:32.516" level="INFO">${RESULT} = [{'time': 0.042082083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5550000000023063e-06, 'source_diff': 3.5550000000023063e-06}, {'time': 0.042306139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:04:32.506" endtime="20201115 22:04:32.516"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:32.547" level="INFO">${OVERHEAD} = {'time': [0.042082083, 0.042306139, 0.042527069, 0.042748597, 0.042968486, 0.043190139, 0.043411944, 0.043637167, 0.043860792, 0.044082528, 0.044306667, 0.044529875, 0.044756306, 0.044982514, 0.045207...</msg>
<status status="PASS" starttime="20201115 22:04:32.518" endtime="20201115 22:04:32.548"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:32.558" level="INFO">NAME: 00-overhead-8-remove</msg>
<status status="PASS" starttime="20201115 22:04:32.556" endtime="20201115 22:04:32.559"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:32.564" level="INFO">VALUE: [3.5550000000023063e-06, 3.4999999999965614e-06, 3.5270000000031665e-06, 3.4999999999965614e-06, 3.4859999999969915e-06, 3.4860000000039304e-06, 3.4860000000039304e-06, 3.4859999999969915e-06, 3.5000000000035003e-06, 3.5000000000035003e-06, 3.5000000000035003e-06, 3.4859999999969915e-06, 3.487000000003404e-06, 3.5140000000030702e-06, 3.4859999999969915e-06, 3.473000000003834e-06, 3.4859999999969915e-06, 3.4719999999974216e-06, 3.4309999999981855e-06, 3.4859999999969915e-06, 3.4859999999969915e-06, 3.4859999999969915e-06, 3.4860000000039304e-06, 3.4860000000039304e-06, 3.4999999999965614e-06, 3.4719999999974216e-06, 3.5000000000035003e-06, 3.5000000000035003e-06, 3.4720000000043605e-06, 3.5139999999961313e-06, 3.486999999996465e-06, 3.4859999999969915e-06, 3.5139999999961313e-06, 3.4999999999965614e-06, 3.5139999999961313e-06, 3.4859999999969915e-06, 3.4860000000039304e-06, 3.4579999999978517e-06, 3.4999999999965614e-06, 3.4860000000039304e-06, 3.5140000000030702e-06, 3.4720000000043605e-06, 3.4999999999965614e-06, 3.4859999999969915e-06, 3.4860000000039304e-06, 3.4310000000051244e-06, 3.4860000000039304e-06, 3.4719999999974216e-06, 3.5000000000035003e-06, 3.5140000000030702e-06]</msg>
<status status="PASS" starttime="20201115 22:04:32.561" endtime="20201115 22:04:32.565"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:32.549" endtime="20201115 22:04:32.567"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:32.573" endtime="20201115 22:04:32.576"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:32.582" endtime="20201115 22:04:32.604"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:32.577" endtime="20201115 22:04:32.605"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:32.568" endtime="20201115 22:04:32.607"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:32.035" endtime="20201115 22:04:32.608"></status>
</kw>
<msg timestamp="20201115 22:04:32.608" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:32.632" endtime="20201115 22:04:32.653"></status>
</kw>
<msg timestamp="20201115 22:04:32.654" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:32.628" endtime="20201115 22:04:32.655"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:32.661" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:32.657" endtime="20201115 22:04:32.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:32.663" endtime="20201115 22:04:32.667"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:32.621" endtime="20201115 22:04:32.669"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:32.615" endtime="20201115 22:04:32.670"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:32.687" endtime="20201115 22:04:33.040"></status>
</kw>
<msg timestamp="20201115 22:04:33.048" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04201825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042021722, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:04:32.684" endtime="20201115 22:04:33.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:33.066" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04201825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042021722, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:04:33.050" endtime="20201115 22:04:33.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:33.069" endtime="20201115 22:04:33.074"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:32.676" endtime="20201115 22:04:33.076"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:32.671" endtime="20201115 22:04:33.078"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:33.089" level="INFO">${RESULT} = [{'time': 0.042021722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4719999999974216e-06, 'source_diff': 3.4719999999974216e-06}, {'time': 0.042242694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:04:33.079" endtime="20201115 22:04:33.089"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:33.120" level="INFO">${OVERHEAD} = {'time': [0.042021722, 0.042242694, 0.042463347, 0.042687208, 0.042908014, 0.043128306, 0.043351319, 0.043571972, 0.043798431, 0.044021125, 0.044244722, 0.044464806, 0.044687597, 0.044911556, 0.045138...</msg>
<status status="PASS" starttime="20201115 22:04:33.091" endtime="20201115 22:04:33.121"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:33.131" level="INFO">NAME: 00-overhead-8-remove</msg>
<status status="PASS" starttime="20201115 22:04:33.129" endtime="20201115 22:04:33.132"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:33.137" level="INFO">VALUE: [3.4719999999974216e-06, 3.4999999999965614e-06, 3.4859999999969915e-06, 3.4859999999969915e-06, 3.4720000000043605e-06, 3.4999999999965614e-06, 3.4859999999969915e-06, 3.4860000000039304e-06, 3.4999999999965614e-06, 3.5000000000035003e-06, 3.5410000000027364e-06, 3.473000000003834e-06, 3.4860000000039304e-06, 3.4999999999965614e-06, 3.4860000000039304e-06, 3.4719999999974216e-06, 3.4720000000043605e-06, 3.4860000000039304e-06, 3.4999999999965614e-06, 3.4999999999965614e-06, 3.4999999999965614e-06, 3.4729999999968952e-06, 3.4579999999978517e-06, 3.4859999999969915e-06, 3.4999999999965614e-06, 3.4999999999965614e-06, 3.5000000000035003e-06, 3.4720000000043605e-06, 3.4719999999974216e-06, 3.487000000003404e-06, 3.4859999999969915e-06, 3.4719999999974216e-06, 3.486999999996465e-06, 3.4859999999969915e-06, 3.4439999999982818e-06, 3.4719999999974216e-06, 3.4720000000043605e-06, 3.5000000000035003e-06, 3.4859999999969915e-06, 3.4859999999969915e-06, 3.5000000000035003e-06, 3.4859999999969915e-06, 3.4999999999965614e-06, 3.487000000003404e-06, 3.4859999999969915e-06, 3.4859999999969915e-06, 3.4999999999965614e-06, 3.4030000000059846e-06, 3.55600000000178e-06, 3.4860000000039304e-06]</msg>
<status status="PASS" starttime="20201115 22:04:33.134" endtime="20201115 22:04:33.138"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:33.122" endtime="20201115 22:04:33.139"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:33.146" endtime="20201115 22:04:33.149"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:33.155" endtime="20201115 22:04:33.177"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:33.150" endtime="20201115 22:04:33.179"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:33.141" endtime="20201115 22:04:33.180"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:32.609" endtime="20201115 22:04:33.181"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:30.300" endtime="20201115 22:04:33.181"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:30.299" endtime="20201115 22:04:33.182"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:04:33.187" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:33.210" endtime="20201115 22:04:33.233"></status>
</kw>
<msg timestamp="20201115 22:04:33.234" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:33.207" endtime="20201115 22:04:33.234"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:33.240" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:33.236" endtime="20201115 22:04:33.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:33.243" endtime="20201115 22:04:33.247"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:33.199" endtime="20201115 22:04:33.249"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:33.193" endtime="20201115 22:04:33.250"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:33.267" endtime="20201115 22:04:33.622"></status>
</kw>
<msg timestamp="20201115 22:04:33.629" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047483833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047487528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:33.264" endtime="20201115 22:04:33.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:33.648" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047483833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047487528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:33.632" endtime="20201115 22:04:33.649"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:33.651" endtime="20201115 22:04:33.655"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:33.257" endtime="20201115 22:04:33.656"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:33.252" endtime="20201115 22:04:33.658"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:33.669" level="INFO">${RESULT} = [{'time': 0.047487528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6949999999980054e-06, 'source_diff': 3.6949999999980054e-06}, {'time': 0.047730125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:04:33.659" endtime="20201115 22:04:33.669"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:33.700" level="INFO">${OVERHEAD} = {'time': [0.047487528, 0.047730125, 0.047976278, 0.048219986, 0.048460722, 0.048706972, 0.048950736, 0.049194181, 0.049438917, 0.049684986, 0.049931486, 0.050177125, 0.050422944, 0.050666417, 0.050909...</msg>
<status status="PASS" starttime="20201115 22:04:33.671" endtime="20201115 22:04:33.701"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:33.711" level="INFO">NAME: 00-overhead-9-remove</msg>
<status status="PASS" starttime="20201115 22:04:33.709" endtime="20201115 22:04:33.712"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:33.717" level="INFO">VALUE: [3.6949999999980054e-06, 3.7079999999981017e-06, 3.7089999999975753e-06, 3.7079999999981017e-06, 3.7219999999976716e-06, 3.7220000000046105e-06, 3.679999999998962e-06, 3.6669999999988656e-06, 3.6949999999980054e-06, 3.7219999999976716e-06, 3.7079999999981017e-06, 3.6940000000054707e-06, 3.693999999998532e-06, 3.7089999999975753e-06, 3.6949999999980054e-06, 3.6949999999980054e-06, 3.693999999998532e-06, 3.7080000000050406e-06, 3.6949999999980054e-06, 3.693999999998532e-06, 3.6949999999980054e-06, 3.7079999999981017e-06, 3.6940000000054707e-06, 3.6949999999980054e-06, 3.7089999999975753e-06, 3.6949999999980054e-06, 3.6809999999984355e-06, 3.693999999998532e-06, 3.625000000000156e-06, 3.6949999999980054e-06, 3.6950000000049443e-06, 3.7090000000045142e-06, 3.7089999999975753e-06, 3.6809999999984355e-06, 3.693999999998532e-06, 3.7089999999975753e-06, 3.6949999999980054e-06, 3.6529999999992957e-06, 3.6809999999984355e-06, 3.6529999999992957e-06, 3.693999999998532e-06, 3.6809999999984355e-06, 3.6529999999992957e-06, 3.737000000003654e-06, 3.7089999999975753e-06, 3.7080000000050406e-06, 3.7639999999963814e-06, 3.6809999999984355e-06, 3.6800000000059008e-06, 3.7089999999975753e-06]</msg>
<status status="PASS" starttime="20201115 22:04:33.714" endtime="20201115 22:04:33.718"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:33.702" endtime="20201115 22:04:33.720"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:33.726" endtime="20201115 22:04:33.729"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:33.735" endtime="20201115 22:04:33.757"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:33.730" endtime="20201115 22:04:33.759"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:33.721" endtime="20201115 22:04:33.760"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:33.188" endtime="20201115 22:04:33.761"></status>
</kw>
<msg timestamp="20201115 22:04:33.761" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:33.785" endtime="20201115 22:04:33.808"></status>
</kw>
<msg timestamp="20201115 22:04:33.809" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:33.782" endtime="20201115 22:04:33.810"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:33.816" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:33.812" endtime="20201115 22:04:33.817"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:33.818" endtime="20201115 22:04:33.822"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:33.774" endtime="20201115 22:04:33.824"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:33.768" endtime="20201115 22:04:33.826"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:33.843" endtime="20201115 22:04:34.197"></status>
</kw>
<msg timestamp="20201115 22:04:34.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042486319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042490028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:33.839" endtime="20201115 22:04:34.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:34.223" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042486319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042490028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:34.207" endtime="20201115 22:04:34.224"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:34.225" endtime="20201115 22:04:34.231"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:33.832" endtime="20201115 22:04:34.233"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:33.827" endtime="20201115 22:04:34.234"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:34.245" level="INFO">${RESULT} = [{'time': 0.042490028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7089999999975753e-06, 'source_diff': 3.7089999999975753e-06}, {'time': 0.042733903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:04:34.236" endtime="20201115 22:04:34.246"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:34.277" level="INFO">${OVERHEAD} = {'time': [0.042490028, 0.042733903, 0.042976389, 0.043219083, 0.043464222, 0.043705778, 0.043947569, 0.044187986, 0.044430625, 0.044671361, 0.044913861, 0.045159681, 0.045403778, 0.045649653, 0.045894...</msg>
<status status="PASS" starttime="20201115 22:04:34.247" endtime="20201115 22:04:34.277"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:34.288" level="INFO">NAME: 00-overhead-9-remove</msg>
<status status="PASS" starttime="20201115 22:04:34.286" endtime="20201115 22:04:34.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:34.294" level="INFO">VALUE: [3.7089999999975753e-06, 3.7219999999976716e-06, 3.7079999999981017e-06, 3.693999999998532e-06, 3.625000000000156e-06, 3.6949999999980054e-06, 3.7219999999976716e-06, 3.679999999998962e-06, 3.7079999999981017e-06, 3.693999999998532e-06, 3.7359999999972415e-06, 3.6949999999980054e-06, 3.7359999999972415e-06, 3.6949999999980054e-06, 3.7089999999975753e-06, 3.6940000000054707e-06, 3.6949999999980054e-06, 3.7639999999963814e-06, 3.7219999999976716e-06, 3.7089999999975753e-06, 3.6529999999992957e-06, 3.6949999999980054e-06, 3.6809999999984355e-06, 3.679999999998962e-06, 3.6809999999984355e-06, 3.6949999999980054e-06, 3.7219999999976716e-06, 3.7080000000050406e-06, 3.693999999998532e-06, 3.679999999998962e-06, 3.693999999998532e-06, 3.6949999999980054e-06, 3.7219999999976716e-06, 3.693999999998532e-06, 3.693999999998532e-06, 3.6949999999980054e-06, 3.693999999998532e-06, 3.7089999999975753e-06, 3.6950000000049443e-06, 3.6949999999980054e-06, 3.7219999999976716e-06, 3.693999999998532e-06, 3.7079999999981017e-06, 3.6809999999984355e-06, 3.7089999999975753e-06, 3.625000000000156e-06, 3.6800000000059008e-06, 3.6670000000058045e-06, 3.6809999999984355e-06, 3.7090000000045142e-06]</msg>
<status status="PASS" starttime="20201115 22:04:34.290" endtime="20201115 22:04:34.295"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:34.278" endtime="20201115 22:04:34.296"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:34.303" endtime="20201115 22:04:34.305"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:34.311" endtime="20201115 22:04:34.333"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:34.307" endtime="20201115 22:04:34.335"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:34.298" endtime="20201115 22:04:34.337"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:33.762" endtime="20201115 22:04:34.337"></status>
</kw>
<msg timestamp="20201115 22:04:34.338" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:34.362" endtime="20201115 22:04:34.385"></status>
</kw>
<msg timestamp="20201115 22:04:34.386" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:34.359" endtime="20201115 22:04:34.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:34.392" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:34.388" endtime="20201115 22:04:34.393"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:34.395" endtime="20201115 22:04:34.399"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:34.351" endtime="20201115 22:04:34.400"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:34.345" endtime="20201115 22:04:34.402"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:34.419" endtime="20201115 22:04:34.771"></status>
</kw>
<msg timestamp="20201115 22:04:34.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043007444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043011139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:34.416" endtime="20201115 22:04:34.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:34.797" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043007444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043011139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:34.780" endtime="20201115 22:04:34.798"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:34.799" endtime="20201115 22:04:34.807"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:34.408" endtime="20201115 22:04:34.808"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:34.403" endtime="20201115 22:04:34.810"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:34.821" level="INFO">${RESULT} = [{'time': 0.043011139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6949999999980054e-06, 'source_diff': 3.6949999999980054e-06}, {'time': 0.043253014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:04:34.812" endtime="20201115 22:04:34.821"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:34.852" level="INFO">${OVERHEAD} = {'time': [0.043011139, 0.043253014, 0.043498583, 0.043742153, 0.043988458, 0.044232944, 0.044476153, 0.04472225, 0.044967264, 0.045210111, 0.045455542, 0.045701667, 0.045946056, 0.046190569, 0.0464317...</msg>
<status status="PASS" starttime="20201115 22:04:34.823" endtime="20201115 22:04:34.853"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:34.864" level="INFO">NAME: 00-overhead-9-remove</msg>
<status status="PASS" starttime="20201115 22:04:34.861" endtime="20201115 22:04:34.864"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:34.869" level="INFO">VALUE: [3.6949999999980054e-06, 3.6809999999984355e-06, 3.7219999999976716e-06, 3.6809999999984355e-06, 3.7079999999981017e-06, 3.6800000000059008e-06, 3.6669999999988656e-06, 3.7079999999981017e-06, 3.6949999999980054e-06, 3.693999999998532e-06, 3.7090000000045142e-06, 3.6949999999980054e-06, 3.6949999999980054e-06, 3.693999999998532e-06, 3.7079999999981017e-06, 3.6809999999984355e-06, 3.6950000000049443e-06, 3.611000000000586e-06, 3.6950000000049443e-06, 3.6809999999984355e-06, 3.6810000000053744e-06, 3.6800000000059008e-06, 3.7229999999971453e-06, 3.679999999998962e-06, 3.693999999998532e-06, 3.7079999999981017e-06, 3.6809999999984355e-06, 3.7090000000045142e-06, 3.7220000000046105e-06, 3.6950000000049443e-06, 3.679999999998962e-06, 3.7079999999981017e-06, 3.6949999999980054e-06, 3.7229999999971453e-06, 3.6940000000054707e-06, 3.6529999999992957e-06, 3.6950000000049443e-06, 3.6810000000053744e-06, 3.693999999998532e-06, 3.6809999999984355e-06, 3.7079999999981017e-06, 3.7219999999976716e-06, 3.6940000000054707e-06, 3.7219999999976716e-06, 3.6810000000053744e-06, 3.693999999998532e-06, 3.79200000000246e-06, 3.6810000000053744e-06, 3.7359999999972415e-06, 3.6809999999984355e-06]</msg>
<status status="PASS" starttime="20201115 22:04:34.866" endtime="20201115 22:04:34.870"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:34.854" endtime="20201115 22:04:34.872"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:34.878" endtime="20201115 22:04:34.881"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:34.887" endtime="20201115 22:04:34.910"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:34.883" endtime="20201115 22:04:34.912"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:34.874" endtime="20201115 22:04:34.914"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:34.339" endtime="20201115 22:04:34.915"></status>
</kw>
<msg timestamp="20201115 22:04:34.915" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:34.939" endtime="20201115 22:04:34.961"></status>
</kw>
<msg timestamp="20201115 22:04:34.963" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:34.936" endtime="20201115 22:04:34.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:34.969" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:34.965" endtime="20201115 22:04:34.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:34.971" endtime="20201115 22:04:34.975"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:34.928" endtime="20201115 22:04:34.977"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:34.922" endtime="20201115 22:04:34.978"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:34.996" endtime="20201115 22:04:35.348"></status>
</kw>
<msg timestamp="20201115 22:04:35.355" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042656375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042660153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:34.992" endtime="20201115 22:04:35.356"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:35.374" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042656375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042660153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:35.358" endtime="20201115 22:04:35.375"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:35.376" endtime="20201115 22:04:35.382"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:34.985" endtime="20201115 22:04:35.384"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:34.980" endtime="20201115 22:04:35.385"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:35.396" level="INFO">${RESULT} = [{'time': 0.042660153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7779999999959513e-06, 'source_diff': 3.7779999999959513e-06}, {'time': 0.042906319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:04:35.387" endtime="20201115 22:04:35.397"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:35.427" level="INFO">${OVERHEAD} = {'time': [0.042660153, 0.042906319, 0.043147889, 0.043390806, 0.043634847, 0.043879431, 0.044122792, 0.044369861, 0.044617, 0.044863319, 0.045106611, 0.045349069, 0.045593208, 0.045836403, 0.046081181...</msg>
<status status="PASS" starttime="20201115 22:04:35.398" endtime="20201115 22:04:35.428"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:35.439" level="INFO">NAME: 00-overhead-9-remove</msg>
<status status="PASS" starttime="20201115 22:04:35.436" endtime="20201115 22:04:35.439"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:35.444" level="INFO">VALUE: [3.7779999999959513e-06, 3.7219999999976716e-06, 3.7220000000046105e-06, 3.7089999999975753e-06, 3.7079999999981017e-06, 3.6530000000062346e-06, 3.6949999999980054e-06, 3.6389999999997258e-06, 3.7079999999981017e-06, 3.7769999999964776e-06, 3.7079999999981017e-06, 3.7079999999981017e-06, 3.666000000006331e-06, 3.6949999999980054e-06, 3.7089999999975753e-06, 3.6810000000053744e-06, 3.6949999999980054e-06, 3.6950000000049443e-06, 3.6950000000049443e-06, 3.693999999998532e-06, 3.6809999999984355e-06, 3.6949999999980054e-06, 3.7359999999972415e-06, 3.6949999999980054e-06, 3.6949999999980054e-06, 3.693999999998532e-06, 3.6940000000054707e-06, 3.6809999999984355e-06, 3.7089999999975753e-06, 3.7090000000045142e-06, 3.6940000000054707e-06, 3.6530000000062346e-06, 3.7220000000046105e-06, 3.6940000000054707e-06, 3.679999999998962e-06, 3.6949999999980054e-06, 3.6949999999980054e-06, 3.693999999998532e-06, 3.7229999999971453e-06, 3.6530000000062346e-06, 3.679999999998962e-06, 3.6809999999984355e-06, 3.7079999999981017e-06, 3.679999999998962e-06, 3.7089999999975753e-06, 3.693999999998532e-06, 3.7080000000050406e-06, 3.6809999999984355e-06, 3.625000000000156e-06, 3.7079999999981017e-06]</msg>
<status status="PASS" starttime="20201115 22:04:35.441" endtime="20201115 22:04:35.446"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:35.429" endtime="20201115 22:04:35.448"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:35.454" endtime="20201115 22:04:35.457"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:35.463" endtime="20201115 22:04:35.485"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:35.458" endtime="20201115 22:04:35.487"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:35.449" endtime="20201115 22:04:35.488"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:34.916" endtime="20201115 22:04:35.489"></status>
</kw>
<msg timestamp="20201115 22:04:35.489" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:35.513" endtime="20201115 22:04:35.536"></status>
</kw>
<msg timestamp="20201115 22:04:35.537" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:35.510" endtime="20201115 22:04:35.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:35.543" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:35.539" endtime="20201115 22:04:35.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:35.546" endtime="20201115 22:04:35.549"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:35.502" endtime="20201115 22:04:35.551"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:35.496" endtime="20201115 22:04:35.552"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:35.569" endtime="20201115 22:04:35.925"></status>
</kw>
<msg timestamp="20201115 22:04:35.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042197361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042201069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:35.566" endtime="20201115 22:04:35.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:35.951" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042197361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042201069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:35.935" endtime="20201115 22:04:35.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:35.954" endtime="20201115 22:04:35.959"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:35.559" endtime="20201115 22:04:35.961"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:35.554" endtime="20201115 22:04:35.963"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:35.974" level="INFO">${RESULT} = [{'time': 0.042201069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7079999999981017e-06, 'source_diff': 3.7079999999981017e-06}, {'time': 0.042448083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:04:35.964" endtime="20201115 22:04:35.974"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:36.005" level="INFO">${OVERHEAD} = {'time': [0.042201069, 0.042448083, 0.042690694, 0.042935917, 0.04317775, 0.043419375, 0.043659958, 0.043902306, 0.044143903, 0.044387917, 0.044632111, 0.044873722, 0.045116, 0.045359222, 0.04560425, ...</msg>
<status status="PASS" starttime="20201115 22:04:35.976" endtime="20201115 22:04:36.006"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:36.017" level="INFO">NAME: 00-overhead-9-remove</msg>
<status status="PASS" starttime="20201115 22:04:36.014" endtime="20201115 22:04:36.017"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:36.022" level="INFO">VALUE: [3.7079999999981017e-06, 3.693999999998532e-06, 3.679999999998962e-06, 3.6389999999997258e-06, 3.6809999999984355e-06, 3.6810000000053744e-06, 3.693999999998532e-06, 3.7090000000045142e-06, 3.6529999999992957e-06, 3.7229999999971453e-06, 3.7080000000050406e-06, 3.693999999998532e-06, 3.6810000000053744e-06, 3.693999999998532e-06, 3.693999999998532e-06, 3.7639999999963814e-06, 3.7080000000050406e-06, 3.7219999999976716e-06, 3.679999999998962e-06, 3.7220000000046105e-06, 3.6800000000059008e-06, 3.693999999998532e-06, 3.693999999998532e-06, 3.679999999998962e-06, 3.6949999999980054e-06, 3.6950000000049443e-06, 3.7219999999976716e-06, 3.7079999999981017e-06, 3.638000000000252e-06, 3.693999999998532e-06, 3.7079999999981017e-06, 3.7079999999981017e-06, 3.7079999999981017e-06, 3.7219999999976716e-06, 3.7090000000045142e-06, 3.693999999998532e-06, 3.693999999998532e-06, 3.6949999999980054e-06, 3.7079999999981017e-06, 3.7629999999969077e-06, 3.693999999998532e-06, 3.6950000000049443e-06, 3.6949999999980054e-06, 3.6949999999980054e-06, 3.6809999999984355e-06, 3.693999999998532e-06, 3.6669999999988656e-06, 3.7360000000041804e-06, 3.7219999999976716e-06, 3.6950000000049443e-06]</msg>
<status status="PASS" starttime="20201115 22:04:36.019" endtime="20201115 22:04:36.024"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:36.007" endtime="20201115 22:04:36.025"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:36.032" endtime="20201115 22:04:36.035"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:36.041" endtime="20201115 22:04:36.062"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:36.036" endtime="20201115 22:04:36.064"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:36.027" endtime="20201115 22:04:36.066"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:35.490" endtime="20201115 22:04:36.066"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:33.184" endtime="20201115 22:04:36.067"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:33.183" endtime="20201115 22:04:36.067"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:04:36.072" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:36.096" endtime="20201115 22:04:36.120"></status>
</kw>
<msg timestamp="20201115 22:04:36.121" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:36.093" endtime="20201115 22:04:36.122"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:36.128" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:36.124" endtime="20201115 22:04:36.128"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:36.130" endtime="20201115 22:04:36.134"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:36.086" endtime="20201115 22:04:36.136"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:36.079" endtime="20201115 22:04:36.137"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:36.154" endtime="20201115 22:04:36.510"></status>
</kw>
<msg timestamp="20201115 22:04:36.518" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047926139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047930056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:36.151" endtime="20201115 22:04:36.518"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:36.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047926139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047930056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:36.520" endtime="20201115 22:04:36.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:36.539" endtime="20201115 22:04:36.543"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:36.143" endtime="20201115 22:04:36.545"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:36.138" endtime="20201115 22:04:36.546"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:36.557" level="INFO">${RESULT} = [{'time': 0.047930056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.916999999999116e-06, 'source_diff': 3.916999999999116e-06}, {'time': 0.048194153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:36.548" endtime="20201115 22:04:36.558"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:36.588" level="INFO">${OVERHEAD} = {'time': [0.047930056, 0.048194153, 0.048458333, 0.048723, 0.048990292, 0.049257375, 0.04952425, 0.049788819, 0.0500535, 0.050317542, 0.050584208, 0.050850167, 0.051118389, 0.051380528, 0.051643778, 0...</msg>
<status status="PASS" starttime="20201115 22:04:36.559" endtime="20201115 22:04:36.589"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:36.600" level="INFO">NAME: 00-overhead-10-remove</msg>
<status status="PASS" starttime="20201115 22:04:36.597" endtime="20201115 22:04:36.600"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:36.606" level="INFO">VALUE: [3.916999999999116e-06, 3.903000000006485e-06, 3.943999999998782e-06, 3.902999999999546e-06, 3.902999999999546e-06, 3.9309999999986855e-06, 3.9309999999986855e-06, 3.902000000000072e-06, 3.888999999999976e-06, 3.902999999999546e-06, 3.902000000000072e-06, 3.9309999999986855e-06, 3.902999999999546e-06, 3.902999999999546e-06, 3.902999999999546e-06, 3.915999999999642e-06, 3.957999999998352e-06, 3.916999999999116e-06, 3.915999999999642e-06, 3.888000000000502e-06, 3.944000000005721e-06, 3.902999999999546e-06, 3.9310000000056244e-06, 3.9449999999982555e-06, 3.916999999999116e-06, 3.929999999999212e-06, 3.929999999999212e-06, 3.84800000000074e-06, 3.902999999999546e-06, 3.916999999999116e-06, 3.888999999999976e-06, 3.9310000000056244e-06, 3.902999999999546e-06, 3.916999999999116e-06, 3.916999999999116e-06, 3.915999999999642e-06, 3.902999999999546e-06, 3.901999999993133e-06, 3.916999999999116e-06, 3.902999999999546e-06, 3.902999999999546e-06, 3.902000000000072e-06, 3.888999999999976e-06, 3.902000000000072e-06, 3.916999999999116e-06, 3.902999999999546e-06, 3.902999999999546e-06, 3.888999999999976e-06, 3.916999999999116e-06, 3.888999999999976e-06]</msg>
<status status="PASS" starttime="20201115 22:04:36.602" endtime="20201115 22:04:36.607"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:36.590" endtime="20201115 22:04:36.609"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:36.615" endtime="20201115 22:04:36.618"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:36.624" endtime="20201115 22:04:36.646"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:36.619" endtime="20201115 22:04:36.648"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:36.611" endtime="20201115 22:04:36.649"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:36.074" endtime="20201115 22:04:36.650"></status>
</kw>
<msg timestamp="20201115 22:04:36.650" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:36.674" endtime="20201115 22:04:36.698"></status>
</kw>
<msg timestamp="20201115 22:04:36.699" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:36.670" endtime="20201115 22:04:36.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:36.705" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:36.701" endtime="20201115 22:04:36.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:36.708" endtime="20201115 22:04:36.712"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:36.663" endtime="20201115 22:04:36.713"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:36.657" endtime="20201115 22:04:36.715"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:36.732" endtime="20201115 22:04:37.081"></status>
</kw>
<msg timestamp="20201115 22:04:37.088" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042423292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042427194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:36.728" endtime="20201115 22:04:37.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:37.106" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042423292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042427194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:37.090" endtime="20201115 22:04:37.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:37.109" endtime="20201115 22:04:37.116"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:36.721" endtime="20201115 22:04:37.118"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:36.716" endtime="20201115 22:04:37.119"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:37.130" level="INFO">${RESULT} = [{'time': 0.042427194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.902000000000072e-06, 'source_diff': 3.902000000000072e-06}, {'time': 0.042693014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:37.121" endtime="20201115 22:04:37.131"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:37.161" level="INFO">${OVERHEAD} = {'time': [0.042427194, 0.042693014, 0.042957125, 0.043221069, 0.043487681, 0.043753056, 0.044020931, 0.044285417, 0.044549014, 0.044814583, 0.045081514, 0.045343597, 0.045611875, 0.045877889, 0.046142...</msg>
<status status="PASS" starttime="20201115 22:04:37.132" endtime="20201115 22:04:37.166"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:37.177" level="INFO">NAME: 00-overhead-10-remove</msg>
<status status="PASS" starttime="20201115 22:04:37.175" endtime="20201115 22:04:37.178"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:37.182" level="INFO">VALUE: [3.902000000000072e-06, 3.971999999997922e-06, 3.9309999999986855e-06, 3.971999999997922e-06, 3.888999999999976e-06, 3.916999999999116e-06, 3.888999999999976e-06, 3.916999999999116e-06, 3.888999999999976e-06, 3.902000000000072e-06, 3.9310000000056244e-06, 3.888999999999976e-06, 3.903000000006485e-06, 3.916999999999116e-06, 3.972999999997395e-06, 3.902999999999546e-06, 3.902999999999546e-06, 3.902000000000072e-06, 3.916999999999116e-06, 3.916999999999116e-06, 3.930000000006151e-06, 3.902999999999546e-06, 3.943999999998782e-06, 3.902000000000072e-06, 3.902999999999546e-06, 3.902000000000072e-06, 3.902999999999546e-06, 3.916999999999116e-06, 3.902999999999546e-06, 3.916999999999116e-06, 3.902000000000072e-06, 3.903000000006485e-06, 3.915999999999642e-06, 3.929999999999212e-06, 3.902999999999546e-06, 3.929999999999212e-06, 3.916999999999116e-06, 3.902999999999546e-06, 3.915999999999642e-06, 3.957999999998352e-06, 3.902000000000072e-06, 3.902999999999546e-06, 3.902000000000072e-06, 3.916000000006581e-06, 3.888999999999976e-06, 3.902999999999546e-06, 3.9449999999982555e-06, 3.916999999999116e-06, 3.875000000000406e-06, 3.902000000000072e-06]</msg>
<status status="PASS" starttime="20201115 22:04:37.179" endtime="20201115 22:04:37.183"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:37.168" endtime="20201115 22:04:37.185"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:37.192" endtime="20201115 22:04:37.194"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:37.200" endtime="20201115 22:04:37.222"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:37.196" endtime="20201115 22:04:37.224"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:37.187" endtime="20201115 22:04:37.225"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:36.651" endtime="20201115 22:04:37.226"></status>
</kw>
<msg timestamp="20201115 22:04:37.226" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:37.250" endtime="20201115 22:04:37.273"></status>
</kw>
<msg timestamp="20201115 22:04:37.275" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:37.246" endtime="20201115 22:04:37.275"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:37.281" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:37.277" endtime="20201115 22:04:37.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:37.283" endtime="20201115 22:04:37.287"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:37.239" endtime="20201115 22:04:37.289"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:37.233" endtime="20201115 22:04:37.290"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:37.307" endtime="20201115 22:04:37.665"></status>
</kw>
<msg timestamp="20201115 22:04:37.672" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041952375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041956292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:37.304" endtime="20201115 22:04:37.673"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:37.691" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041952375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041956292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:37.674" endtime="20201115 22:04:37.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:37.693" endtime="20201115 22:04:37.699"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:37.296" endtime="20201115 22:04:37.700"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:37.292" endtime="20201115 22:04:37.702"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:37.713" level="INFO">${RESULT} = [{'time': 0.041956292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.916999999999116e-06, 'source_diff': 3.916999999999116e-06}, {'time': 0.042219847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:37.704" endtime="20201115 22:04:37.714"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:37.745" level="INFO">${OVERHEAD} = {'time': [0.041956292, 0.042219847, 0.042484611, 0.042746778, 0.043014, 0.043276931, 0.043541222, 0.043809361, 0.044076861, 0.044340167, 0.044605542, 0.044870514, 0.045135278, 0.045402333, 0.045663667...</msg>
<status status="PASS" starttime="20201115 22:04:37.716" endtime="20201115 22:04:37.746"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:37.756" level="INFO">NAME: 00-overhead-10-remove</msg>
<status status="PASS" starttime="20201115 22:04:37.754" endtime="20201115 22:04:37.757"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:37.762" level="INFO">VALUE: [3.916999999999116e-06, 3.902999999999546e-06, 3.902999999999546e-06, 3.916999999999116e-06, 3.902999999999546e-06, 3.902999999999546e-06, 3.861000000000836e-06, 3.902999999999546e-06, 3.958000000005291e-06, 3.902999999999546e-06, 3.916999999999116e-06, 3.902999999999546e-06, 3.847000000001266e-06, 3.902000000000072e-06, 3.888999999999976e-06, 3.915999999999642e-06, 3.902999999999546e-06, 3.902000000000072e-06, 3.916999999999116e-06, 3.902999999999546e-06, 3.902999999999546e-06, 3.902999999999546e-06, 3.943999999998782e-06, 3.957999999998352e-06, 3.916999999999116e-06, 3.888999999999976e-06, 3.9170000000060545e-06, 3.902999999999546e-06, 3.902999999999546e-06, 3.916999999999116e-06, 3.888000000000502e-06, 3.916999999999116e-06, 3.902999999999546e-06, 3.902999999999546e-06, 3.902999999999546e-06, 3.902999999999546e-06, 3.945000000005194e-06, 3.888999999999976e-06, 3.9309999999986855e-06, 3.916999999999116e-06, 3.916999999999116e-06, 3.902999999999546e-06, 3.902999999999546e-06, 3.916999999999116e-06, 3.916999999999116e-06, 3.902999999999546e-06, 3.916999999999116e-06, 3.916999999999116e-06, 3.943999999998782e-06, 3.902999999999546e-06]</msg>
<status status="PASS" starttime="20201115 22:04:37.759" endtime="20201115 22:04:37.763"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:37.747" endtime="20201115 22:04:37.765"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:37.771" endtime="20201115 22:04:37.774"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:37.780" endtime="20201115 22:04:37.802"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:37.775" endtime="20201115 22:04:37.804"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:37.767" endtime="20201115 22:04:37.806"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:37.227" endtime="20201115 22:04:37.806"></status>
</kw>
<msg timestamp="20201115 22:04:37.807" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:37.830" endtime="20201115 22:04:37.854"></status>
</kw>
<msg timestamp="20201115 22:04:37.856" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:37.827" endtime="20201115 22:04:37.856"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:37.862" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:37.858" endtime="20201115 22:04:37.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:37.864" endtime="20201115 22:04:37.868"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:37.820" endtime="20201115 22:04:37.870"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:37.814" endtime="20201115 22:04:37.871"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:37.888" endtime="20201115 22:04:38.241"></status>
</kw>
<msg timestamp="20201115 22:04:38.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042990556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042994514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:37.885" endtime="20201115 22:04:38.249"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:38.267" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042990556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042994514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:38.251" endtime="20201115 22:04:38.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:38.270" endtime="20201115 22:04:38.275"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:37.878" endtime="20201115 22:04:38.277"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:37.872" endtime="20201115 22:04:38.279"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:38.290" level="INFO">${RESULT} = [{'time': 0.042994514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.957999999998352e-06, 'source_diff': 3.957999999998352e-06}, {'time': 0.043259417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:38.280" endtime="20201115 22:04:38.290"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:38.321" level="INFO">${OVERHEAD} = {'time': [0.042994514, 0.043259417, 0.043520958, 0.043789417, 0.044051528, 0.044318208, 0.044583583, 0.044850069, 0.04511775, 0.045384556, 0.045650444, 0.045915319, 0.046180875, 0.046448278, 0.0467122...</msg>
<status status="PASS" starttime="20201115 22:04:38.292" endtime="20201115 22:04:38.321"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:38.332" level="INFO">NAME: 00-overhead-10-remove</msg>
<status status="PASS" starttime="20201115 22:04:38.330" endtime="20201115 22:04:38.333"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:38.338" level="INFO">VALUE: [3.957999999998352e-06, 3.916999999999116e-06, 3.929999999999212e-06, 3.902999999999546e-06, 3.888999999999976e-06, 3.902000000000072e-06, 3.888999999999976e-06, 3.902000000000072e-06, 3.902999999999546e-06, 3.916999999999116e-06, 3.915999999999642e-06, 3.902000000000072e-06, 3.903000000006485e-06, 3.902999999999546e-06, 3.888999999999976e-06, 3.915999999999642e-06, 3.902000000000072e-06, 3.902000000000072e-06, 3.846999999994327e-06, 3.902999999999546e-06, 3.916999999999116e-06, 3.916999999999116e-06, 3.916999999999116e-06, 3.902999999999546e-06, 3.902999999999546e-06, 3.902000000000072e-06, 3.902999999999546e-06, 3.916999999999116e-06, 3.902999999999546e-06, 3.888999999999976e-06, 3.860999999993897e-06, 3.916999999999116e-06, 3.875000000000406e-06, 3.915999999999642e-06, 3.847000000001266e-06, 3.9170000000060545e-06, 3.9310000000056244e-06, 3.915999999999642e-06, 3.9309999999986855e-06, 3.902999999999546e-06, 3.902000000000072e-06, 3.9449999999982555e-06, 3.916999999999116e-06, 3.915999999999642e-06, 3.902000000000072e-06, 3.902000000000072e-06, 3.902999999999546e-06, 3.902000000000072e-06, 3.902999999999546e-06, 3.915999999999642e-06]</msg>
<status status="PASS" starttime="20201115 22:04:38.335" endtime="20201115 22:04:38.339"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:38.323" endtime="20201115 22:04:38.341"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:38.347" endtime="20201115 22:04:38.350"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:38.356" endtime="20201115 22:04:38.378"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:38.351" endtime="20201115 22:04:38.379"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:38.342" endtime="20201115 22:04:38.381"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:37.808" endtime="20201115 22:04:38.382"></status>
</kw>
<msg timestamp="20201115 22:04:38.382" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:38.406" endtime="20201115 22:04:38.430"></status>
</kw>
<msg timestamp="20201115 22:04:38.431" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:38.403" endtime="20201115 22:04:38.432"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:38.438" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:38.433" endtime="20201115 22:04:38.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:38.440" endtime="20201115 22:04:38.444"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:38.395" endtime="20201115 22:04:38.446"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:38.389" endtime="20201115 22:04:38.447"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:38.464" endtime="20201115 22:04:38.820"></status>
</kw>
<msg timestamp="20201115 22:04:38.828" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042565736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042569653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:38.461" endtime="20201115 22:04:38.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:38.848" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042565736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042569653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:38.831" endtime="20201115 22:04:38.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:38.850" endtime="20201115 22:04:38.856"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:38.453" endtime="20201115 22:04:38.857"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:38.448" endtime="20201115 22:04:38.859"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:38.870" level="INFO">${RESULT} = [{'time': 0.042569653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.916999999999116e-06, 'source_diff': 3.916999999999116e-06}, {'time': 0.042833986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:38.861" endtime="20201115 22:04:38.870"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:38.901" level="INFO">${OVERHEAD} = {'time': [0.042569653, 0.042833986, 0.043098931, 0.043365069, 0.043629069, 0.043896431, 0.044159014, 0.044422375, 0.044684611, 0.044947639, 0.045212556, 0.045477806, 0.045744611, 0.046011764, 0.046279...</msg>
<status status="PASS" starttime="20201115 22:04:38.872" endtime="20201115 22:04:38.902"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:38.913" level="INFO">NAME: 00-overhead-10-remove</msg>
<status status="PASS" starttime="20201115 22:04:38.910" endtime="20201115 22:04:38.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:38.918" level="INFO">VALUE: [3.916999999999116e-06, 3.916999999999116e-06, 3.902999999999546e-06, 3.902000000000072e-06, 3.915999999999642e-06, 3.888999999999976e-06, 3.888999999999976e-06, 3.916999999999116e-06, 3.847000000001266e-06, 3.875000000000406e-06, 3.902999999999546e-06, 3.902999999999546e-06, 3.916999999999116e-06, 3.971999999997922e-06, 3.902999999999546e-06, 3.888999999999976e-06, 3.915999999999642e-06, 3.902999999999546e-06, 3.902999999999546e-06, 3.929999999999212e-06, 3.945000000005194e-06, 3.9309999999986855e-06, 3.875000000000406e-06, 3.9860000000044304e-06, 3.902000000000072e-06, 3.902999999999546e-06, 3.902000000000072e-06, 3.916999999999116e-06, 3.959000000004764e-06, 3.915999999999642e-06, 3.888999999999976e-06, 3.987000000003904e-06, 3.9309999999986855e-06, 3.944000000005721e-06, 3.888999999999976e-06, 3.9170000000060545e-06, 3.929999999999212e-06, 3.832999999994757e-06, 3.929999999999212e-06, 3.833000000001696e-06, 3.943999999998782e-06, 3.902999999999546e-06, 3.9309999999986855e-06, 3.888999999999976e-06, 3.916999999999116e-06, 3.929999999999212e-06, 3.959000000004764e-06, 3.916999999999116e-06, 3.929999999999212e-06, 3.902000000000072e-06]</msg>
<status status="PASS" starttime="20201115 22:04:38.915" endtime="20201115 22:04:38.919"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:38.903" endtime="20201115 22:04:38.921"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:38.927" endtime="20201115 22:04:38.930"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:38.936" endtime="20201115 22:04:38.958"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:38.931" endtime="20201115 22:04:38.960"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:38.923" endtime="20201115 22:04:38.961"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:38.383" endtime="20201115 22:04:38.962"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:36.070" endtime="20201115 22:04:38.963"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:36.068" endtime="20201115 22:04:38.963"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:04:38.968" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:38.991" endtime="20201115 22:04:39.017"></status>
</kw>
<msg timestamp="20201115 22:04:39.018" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:38.988" endtime="20201115 22:04:39.018"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:39.024" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:39.020" endtime="20201115 22:04:39.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:39.027" endtime="20201115 22:04:39.031"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:38.981" endtime="20201115 22:04:39.033"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:38.975" endtime="20201115 22:04:39.035"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:39.053" endtime="20201115 22:04:39.411"></status>
</kw>
<msg timestamp="20201115 22:04:39.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047713167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047717278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:39.050" endtime="20201115 22:04:39.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:39.436" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047713167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047717278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:39.420" endtime="20201115 22:04:39.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:39.439" endtime="20201115 22:04:39.444"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:39.042" endtime="20201115 22:04:39.446"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:39.037" endtime="20201115 22:04:39.448"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:39.459" level="INFO">${RESULT} = [{'time': 0.047717278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.111000000001086e-06, 'source_diff': 4.111000000001086e-06}, {'time': 0.048006, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 22:04:39.450" endtime="20201115 22:04:39.459"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:39.490" level="INFO">${OVERHEAD} = {'time': [0.047717278, 0.048006, 0.048296514, 0.048583986, 0.048868139, 0.049155208, 0.049442, 0.049727681, 0.050017083, 0.050303319, 0.050586861, 0.050875014, 0.051164222, 0.051450819, 0.05173875, 0....</msg>
<status status="PASS" starttime="20201115 22:04:39.461" endtime="20201115 22:04:39.491"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:39.502" level="INFO">NAME: 00-overhead-11-remove</msg>
<status status="PASS" starttime="20201115 22:04:39.499" endtime="20201115 22:04:39.502"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:39.507" level="INFO">VALUE: [4.111000000001086e-06, 4.111000000001086e-06, 4.111000000001086e-06, 4.139000000000226e-06, 4.041999999995771e-06, 4.139000000000226e-06, 4.111000000001086e-06, 4.09800000000099e-06, 4.110999999994147e-06, 4.097000000001516e-06, 4.110999999994147e-06, 4.125000000000656e-06, 4.069000000002376e-06, 4.111000000001086e-06, 4.097000000001516e-06, 4.11200000000056e-06, 4.111000000001086e-06, 4.097000000001516e-06, 4.139000000000226e-06, 4.096999999994577e-06, 4.111000000001086e-06, 4.125000000000656e-06, 4.125000000000656e-06, 4.111000000001086e-06, 4.097000000001516e-06, 4.097000000001516e-06, 4.1809999999989356e-06, 4.111000000001086e-06, 4.125000000000656e-06, 4.096999999994577e-06, 4.09800000000099e-06, 4.125000000000656e-06, 4.124999999993717e-06, 4.110999999994147e-06, 4.068999999995437e-06, 4.124999999993717e-06, 4.139000000000226e-06, 4.083000000001946e-06, 4.097000000001516e-06, 4.097000000001516e-06, 4.097000000001516e-06, 4.165999999999892e-06, 4.110999999994147e-06, 4.165999999999892e-06, 4.125000000000656e-06, 4.110999999994147e-06, 4.097000000001516e-06, 4.097000000001516e-06, 4.082999999995007e-06, 4.125000000000656e-06]</msg>
<status status="PASS" starttime="20201115 22:04:39.504" endtime="20201115 22:04:39.508"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:39.492" endtime="20201115 22:04:39.510"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:39.516" endtime="20201115 22:04:39.519"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:39.525" endtime="20201115 22:04:39.547"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:39.520" endtime="20201115 22:04:39.549"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:39.512" endtime="20201115 22:04:39.550"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:38.969" endtime="20201115 22:04:39.551"></status>
</kw>
<msg timestamp="20201115 22:04:39.551" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:39.575" endtime="20201115 22:04:39.600"></status>
</kw>
<msg timestamp="20201115 22:04:39.601" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:39.572" endtime="20201115 22:04:39.601"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:39.608" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:39.603" endtime="20201115 22:04:39.609"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:39.611" endtime="20201115 22:04:39.614"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:39.564" endtime="20201115 22:04:39.616"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:39.558" endtime="20201115 22:04:39.618"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:39.635" endtime="20201115 22:04:39.987"></status>
</kw>
<msg timestamp="20201115 22:04:39.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042481903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042485972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:39.631" endtime="20201115 22:04:39.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:40.012" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042481903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042485972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:39.996" endtime="20201115 22:04:40.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:40.015" endtime="20201115 22:04:40.020"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:39.624" endtime="20201115 22:04:40.022"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:39.619" endtime="20201115 22:04:40.024"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:40.034" level="INFO">${RESULT} = [{'time': 0.042485972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.068999999995437e-06, 'source_diff': 4.068999999995437e-06}, {'time': 0.042772069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:40.025" endtime="20201115 22:04:40.035"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:40.066" level="INFO">${OVERHEAD} = {'time': [0.042485972, 0.042772069, 0.043055625, 0.043341417, 0.043626792, 0.043915333, 0.044203667, 0.044487736, 0.044775153, 0.045060694, 0.045347625, 0.045634042, 0.045919569, 0.046205667, 0.046492...</msg>
<status status="PASS" starttime="20201115 22:04:40.037" endtime="20201115 22:04:40.067"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:40.078" level="INFO">NAME: 00-overhead-11-remove</msg>
<status status="PASS" starttime="20201115 22:04:40.075" endtime="20201115 22:04:40.079"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:40.084" level="INFO">VALUE: [4.068999999995437e-06, 4.111000000001086e-06, 4.125000000000656e-06, 4.111000000001086e-06, 4.208999999998075e-06, 4.139000000000226e-06, 4.125000000000656e-06, 4.083000000001946e-06, 4.139000000000226e-06, 4.111000000001086e-06, 4.083000000001946e-06, 4.05600000000228e-06, 4.165999999999892e-06, 4.125000000000656e-06, 4.0549999999958675e-06, 4.111000000001086e-06, 4.11200000000056e-06, 4.139000000000226e-06, 4.111000000001086e-06, 4.08400000000142e-06, 4.097999999994051e-06, 4.125000000000656e-06, 4.055999999995341e-06, 4.125000000000656e-06, 4.110999999994147e-06, 4.125000000000656e-06, 4.097000000001516e-06, 4.111000000001086e-06, 4.097000000001516e-06, 4.111000000001086e-06, 4.166999999999366e-06, 4.097000000001516e-06, 4.09800000000099e-06, 4.111000000001086e-06, 4.111000000001086e-06, 4.097000000001516e-06, 4.097000000001516e-06, 4.111000000001086e-06, 4.111000000001086e-06, 4.139000000000226e-06, 4.110999999994147e-06, 4.152000000000322e-06, 4.125000000000656e-06, 4.111000000001086e-06, 4.125000000000656e-06, 4.111000000001086e-06, 4.111000000001086e-06, 4.139000000000226e-06, 4.139000000000226e-06, 4.179999999999462e-06]</msg>
<status status="PASS" starttime="20201115 22:04:40.080" endtime="20201115 22:04:40.085"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:40.068" endtime="20201115 22:04:40.086"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:40.093" endtime="20201115 22:04:40.096"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:40.101" endtime="20201115 22:04:40.124"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:40.097" endtime="20201115 22:04:40.125"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:40.088" endtime="20201115 22:04:40.127"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:39.552" endtime="20201115 22:04:40.127"></status>
</kw>
<msg timestamp="20201115 22:04:40.128" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:40.153" endtime="20201115 22:04:40.177"></status>
</kw>
<msg timestamp="20201115 22:04:40.179" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:40.148" endtime="20201115 22:04:40.179"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:40.185" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:40.181" endtime="20201115 22:04:40.186"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:40.187" endtime="20201115 22:04:40.191"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:40.141" endtime="20201115 22:04:40.193"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:40.135" endtime="20201115 22:04:40.195"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:40.211" endtime="20201115 22:04:40.564"></status>
</kw>
<msg timestamp="20201115 22:04:40.571" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043293528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043297653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:40.208" endtime="20201115 22:04:40.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:40.590" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043293528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043297653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:40.574" endtime="20201115 22:04:40.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:40.592" endtime="20201115 22:04:40.598"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:40.201" endtime="20201115 22:04:40.599"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:40.196" endtime="20201115 22:04:40.601"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:40.611" level="INFO">${RESULT} = [{'time': 0.043297653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.125000000000656e-06, 'source_diff': 4.125000000000656e-06}, {'time': 0.043582319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:40.602" endtime="20201115 22:04:40.612"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:40.643" level="INFO">${OVERHEAD} = {'time': [0.043297653, 0.043582319, 0.043867792, 0.044154972, 0.044443181, 0.044731514, 0.045015069, 0.045303583, 0.045587458, 0.045877306, 0.046164542, 0.046453403, 0.046739458, 0.047025931, 0.047315...</msg>
<status status="PASS" starttime="20201115 22:04:40.614" endtime="20201115 22:04:40.643"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:40.654" level="INFO">NAME: 00-overhead-11-remove</msg>
<status status="PASS" starttime="20201115 22:04:40.652" endtime="20201115 22:04:40.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:40.660" level="INFO">VALUE: [4.125000000000656e-06, 4.152000000000322e-06, 4.139000000000226e-06, 4.125000000000656e-06, 4.125000000000656e-06, 4.152999999999796e-06, 4.125000000000656e-06, 4.083000000001946e-06, 4.110999999994147e-06, 4.125000000000656e-06, 4.111000000001086e-06, 4.110999999994147e-06, 4.139000000000226e-06, 4.125000000000656e-06, 4.152000000000322e-06, 4.138000000000752e-06, 4.111000000001086e-06, 4.111000000001086e-06, 4.111000000001086e-06, 4.083000000001946e-06, 4.05600000000228e-06, 4.125000000000656e-06, 4.111000000001086e-06, 4.097000000001516e-06, 4.138000000000752e-06, 4.125000000000656e-06, 4.097000000001516e-06, 4.097000000001516e-06, 4.139000000000226e-06, 4.11200000000056e-06, 4.111000000001086e-06, 4.125000000000656e-06, 4.111000000001086e-06, 4.125000000000656e-06, 4.139000000000226e-06, 4.125000000000656e-06, 4.04200000000271e-06, 4.111000000001086e-06, 4.139000000000226e-06, 4.111000000001086e-06, 4.111000000001086e-06, 4.096999999994577e-06, 4.111000000001086e-06, 4.124999999993717e-06, 4.138000000000752e-06, 4.111000000001086e-06, 4.166999999999366e-06, 4.125000000000656e-06, 4.111000000001086e-06, 4.097000000001516e-06]</msg>
<status status="PASS" starttime="20201115 22:04:40.656" endtime="20201115 22:04:40.660"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:40.645" endtime="20201115 22:04:40.662"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:40.669" endtime="20201115 22:04:40.671"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:40.677" endtime="20201115 22:04:40.699"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:40.673" endtime="20201115 22:04:40.701"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:40.664" endtime="20201115 22:04:40.703"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:40.129" endtime="20201115 22:04:40.704"></status>
</kw>
<msg timestamp="20201115 22:04:40.705" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:40.728" endtime="20201115 22:04:40.754"></status>
</kw>
<msg timestamp="20201115 22:04:40.755" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:40.725" endtime="20201115 22:04:40.755"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:40.761" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:40.757" endtime="20201115 22:04:40.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:40.763" endtime="20201115 22:04:40.767"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:40.717" endtime="20201115 22:04:40.769"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:40.711" endtime="20201115 22:04:40.770"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:40.787" endtime="20201115 22:04:41.143"></status>
</kw>
<msg timestamp="20201115 22:04:41.150" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043194431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043198569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:40.784" endtime="20201115 22:04:41.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:41.168" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043194431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043198569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:41.152" endtime="20201115 22:04:41.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:41.171" endtime="20201115 22:04:41.177"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:40.777" endtime="20201115 22:04:41.178"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:40.772" endtime="20201115 22:04:41.180"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:41.190" level="INFO">${RESULT} = [{'time': 0.043198569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.138000000000752e-06, 'source_diff': 4.138000000000752e-06}, {'time': 0.043485014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:41.181" endtime="20201115 22:04:41.191"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:41.222" level="INFO">${OVERHEAD} = {'time': [0.043198569, 0.043485014, 0.043769819, 0.044059028, 0.044344361, 0.044628792, 0.044918542, 0.045204625, 0.045493583, 0.045779833, 0.046067625, 0.046352056, 0.046640181, 0.046929181, 0.047217...</msg>
<status status="PASS" starttime="20201115 22:04:41.193" endtime="20201115 22:04:41.222"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:41.233" level="INFO">NAME: 00-overhead-11-remove</msg>
<status status="PASS" starttime="20201115 22:04:41.231" endtime="20201115 22:04:41.234"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:41.239" level="INFO">VALUE: [4.138000000000752e-06, 4.152999999999796e-06, 4.152000000000322e-06, 4.125000000000656e-06, 4.111000000001086e-06, 4.111000000001086e-06, 4.1809999999989356e-06, 4.097000000001516e-06, 4.110999999994147e-06, 4.152000000000322e-06, 4.139000000000226e-06, 4.166999999999366e-06, 4.1810000000058745e-06, 4.11200000000056e-06, 4.11200000000056e-06, 4.097000000001516e-06, 4.096999999994577e-06, 4.097000000001516e-06, 4.125000000000656e-06, 4.125000000000656e-06, 4.110999999994147e-06, 4.09800000000099e-06, 4.111000000001086e-06, 4.111000000001086e-06, 4.111000000001086e-06, 4.152999999999796e-06, 4.096999999994577e-06, 4.125000000000656e-06, 4.05600000000228e-06, 4.111000000001086e-06, 4.110999999994147e-06, 4.11200000000056e-06, 4.09800000000099e-06, 4.139000000000226e-06, 4.165999999999892e-06, 4.111000000001086e-06, 4.111000000001086e-06, 4.097999999994051e-06, 4.09800000000099e-06, 4.166999999999366e-06, 4.111000000001086e-06, 4.083000000001946e-06, 4.0409999999962976e-06, 4.1809999999989356e-06, 4.139000000000226e-06, 4.111000000001086e-06, 4.07000000000185e-06, 4.111000000001086e-06, 4.125000000000656e-06, 4.097000000001516e-06]</msg>
<status status="PASS" starttime="20201115 22:04:41.235" endtime="20201115 22:04:41.239"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:41.224" endtime="20201115 22:04:41.241"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:41.248" endtime="20201115 22:04:41.251"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:41.257" endtime="20201115 22:04:41.279"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:41.252" endtime="20201115 22:04:41.281"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:41.243" endtime="20201115 22:04:41.282"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:40.706" endtime="20201115 22:04:41.283"></status>
</kw>
<msg timestamp="20201115 22:04:41.283" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:41.307" endtime="20201115 22:04:41.332"></status>
</kw>
<msg timestamp="20201115 22:04:41.333" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:41.304" endtime="20201115 22:04:41.334"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:41.339" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:41.335" endtime="20201115 22:04:41.340"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:41.342" endtime="20201115 22:04:41.346"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:41.296" endtime="20201115 22:04:41.348"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:41.290" endtime="20201115 22:04:41.349"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:41.366" endtime="20201115 22:04:41.718"></status>
</kw>
<msg timestamp="20201115 22:04:41.725" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042281694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042285819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:41.363" endtime="20201115 22:04:41.726"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:41.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042281694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042285819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:41.727" endtime="20201115 22:04:41.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:41.746" endtime="20201115 22:04:41.753"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:41.355" endtime="20201115 22:04:41.755"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:41.350" endtime="20201115 22:04:41.757"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:41.767" level="INFO">${RESULT} = [{'time': 0.042285819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.125000000000656e-06, 'source_diff': 4.125000000000656e-06}, {'time': 0.042571708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:41.758" endtime="20201115 22:04:41.768"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:41.798" level="INFO">${OVERHEAD} = {'time': [0.042285819, 0.042571708, 0.042857306, 0.043145778, 0.043431542, 0.043715417, 0.044001569, 0.044287153, 0.044576722, 0.044860681, 0.045146097, 0.045432361, 0.045722083, 0.046009361, 0.046293...</msg>
<status status="PASS" starttime="20201115 22:04:41.770" endtime="20201115 22:04:41.799"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:41.810" level="INFO">NAME: 00-overhead-11-remove</msg>
<status status="PASS" starttime="20201115 22:04:41.807" endtime="20201115 22:04:41.810"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:41.815" level="INFO">VALUE: [4.125000000000656e-06, 4.125000000000656e-06, 4.125000000000656e-06, 4.111000000001086e-06, 4.124999999993717e-06, 4.125000000000656e-06, 4.125000000000656e-06, 4.125000000000656e-06, 4.083000000001946e-06, 4.11200000000056e-06, 4.111000000001086e-06, 4.166999999999366e-06, 4.096999999994577e-06, 4.125000000000656e-06, 4.097000000001516e-06, 4.125000000000656e-06, 4.111000000001086e-06, 4.125000000000656e-06, 4.097000000001516e-06, 4.166999999999366e-06, 4.097000000001516e-06, 4.152999999999796e-06, 4.097000000001516e-06, 4.125000000000656e-06, 4.125000000000656e-06, 4.083000000001946e-06, 4.111000000001086e-06, 4.125000000000656e-06, 4.110999999994147e-06, 4.111000000001086e-06, 4.097000000001516e-06, 4.083000000001946e-06, 4.097000000001516e-06, 4.097000000001516e-06, 4.04200000000271e-06, 4.110999999994147e-06, 4.111000000001086e-06, 4.111000000001086e-06, 4.111000000001086e-06, 4.125000000000656e-06, 4.125000000000656e-06, 4.111000000001086e-06, 4.125000000000656e-06, 4.07000000000185e-06, 4.125000000000656e-06, 4.179999999999462e-06, 4.125000000000656e-06, 4.137999999993813e-06, 4.125000000000656e-06, 4.097000000001516e-06]</msg>
<status status="PASS" starttime="20201115 22:04:41.812" endtime="20201115 22:04:41.817"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:41.800" endtime="20201115 22:04:41.818"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:41.825" endtime="20201115 22:04:41.828"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:41.833" endtime="20201115 22:04:41.855"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:41.829" endtime="20201115 22:04:41.857"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:41.820" endtime="20201115 22:04:41.859"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:41.285" endtime="20201115 22:04:41.859"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:38.966" endtime="20201115 22:04:41.860"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:38.964" endtime="20201115 22:04:41.860"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:04:41.865" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:41.889" endtime="20201115 22:04:41.915"></status>
</kw>
<msg timestamp="20201115 22:04:41.916" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:41.886" endtime="20201115 22:04:41.917"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:41.922" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:41.918" endtime="20201115 22:04:41.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:41.925" endtime="20201115 22:04:41.929"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:41.878" endtime="20201115 22:04:41.930"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:41.872" endtime="20201115 22:04:41.932"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:41.949" endtime="20201115 22:04:42.303"></status>
</kw>
<msg timestamp="20201115 22:04:42.310" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047647403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047651722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:41.945" endtime="20201115 22:04:42.310"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:42.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047647403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047651722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:42.312" endtime="20201115 22:04:42.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:42.331" endtime="20201115 22:04:42.335"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:41.938" endtime="20201115 22:04:42.336"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:41.933" endtime="20201115 22:04:42.338"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:42.349" level="INFO">${RESULT} = [{'time': 0.047651722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.319000000002626e-06, 'source_diff': 4.319000000002626e-06}, {'time': 0.047959611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:42.340" endtime="20201115 22:04:42.349"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:42.380" level="INFO">${OVERHEAD} = {'time': [0.047651722, 0.047959611, 0.048267319, 0.048578569, 0.048891458, 0.049203806, 0.049516389, 0.049828542, 0.050141514, 0.050454097, 0.050766861, 0.051079778, 0.051393236, 0.051701194, 0.052013...</msg>
<status status="PASS" starttime="20201115 22:04:42.351" endtime="20201115 22:04:42.381"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:42.391" level="INFO">NAME: 00-overhead-12-remove</msg>
<status status="PASS" starttime="20201115 22:04:42.389" endtime="20201115 22:04:42.392"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:42.403" level="INFO">VALUE: [4.319000000002626e-06, 4.319000000002626e-06, 4.319000000002626e-06, 4.305000000003056e-06, 4.3049999999961175e-06, 4.3200000000021e-06, 4.30600000000253e-06, 4.33400000000167e-06, 4.305999999995591e-06, 4.319000000002626e-06, 4.319000000002626e-06, 4.347000000001766e-06, 4.347000000001766e-06, 4.2909999999965476e-06, 4.33400000000167e-06, 4.34800000000124e-06, 4.318999999995687e-06, 4.333000000002196e-06, 4.319999999995161e-06, 4.291999999996021e-06, 4.318999999995687e-06, 4.333000000002196e-06, 4.3200000000021e-06, 4.333000000002196e-06, 4.319000000002626e-06, 4.333999999994731e-06, 4.3200000000021e-06, 4.347000000001766e-06, 4.319000000002626e-06, 4.332999999995257e-06, 4.3200000000021e-06, 4.319000000002626e-06, 4.347000000001766e-06, 4.319000000002626e-06, 4.333000000002196e-06, 4.3200000000021e-06, 4.333000000002196e-06, 4.3200000000021e-06, 4.33400000000167e-06, 4.3200000000021e-06, 4.319000000002626e-06, 4.319000000002626e-06, 4.319999999995161e-06, 4.34800000000124e-06, 4.305999999995591e-06, 4.3049999999961175e-06, 4.263999999996881e-06, 4.277999999996451e-06, 4.347000000001766e-06, 4.277999999996451e-06]</msg>
<status status="PASS" starttime="20201115 22:04:42.394" endtime="20201115 22:04:42.404"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:42.382" endtime="20201115 22:04:42.406"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:42.412" endtime="20201115 22:04:42.415"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:42.421" endtime="20201115 22:04:42.443"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:42.416" endtime="20201115 22:04:42.444"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:42.408" endtime="20201115 22:04:42.446"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:41.867" endtime="20201115 22:04:42.447"></status>
</kw>
<msg timestamp="20201115 22:04:42.447" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:42.471" endtime="20201115 22:04:42.497"></status>
</kw>
<msg timestamp="20201115 22:04:42.498" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:42.467" endtime="20201115 22:04:42.498"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:42.504" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:42.500" endtime="20201115 22:04:42.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:42.507" endtime="20201115 22:04:42.510"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:42.460" endtime="20201115 22:04:42.512"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:42.454" endtime="20201115 22:04:42.514"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:42.531" endtime="20201115 22:04:42.882"></status>
</kw>
<msg timestamp="20201115 22:04:42.890" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042431361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042435681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:42.527" endtime="20201115 22:04:42.890"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:42.908" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042431361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042435681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:42.892" endtime="20201115 22:04:42.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:42.910" endtime="20201115 22:04:42.916"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:42.520" endtime="20201115 22:04:42.918"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:42.515" endtime="20201115 22:04:42.919"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:42.930" level="INFO">${RESULT} = [{'time': 0.042435681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.3200000000021e-06, 'source_diff': 4.3200000000021e-06}, {'time': 0.042744083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4...</msg>
<status status="PASS" starttime="20201115 22:04:42.921" endtime="20201115 22:04:42.930"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:42.961" level="INFO">${OVERHEAD} = {'time': [0.042435681, 0.042744083, 0.043052903, 0.043359458, 0.043669431, 0.043982694, 0.044292917, 0.044602639, 0.044914917, 0.045221875, 0.045530444, 0.045838097, 0.046146125, 0.04645425, 0.0467641...</msg>
<status status="PASS" starttime="20201115 22:04:42.932" endtime="20201115 22:04:42.962"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:42.973" level="INFO">NAME: 00-overhead-12-remove</msg>
<status status="PASS" starttime="20201115 22:04:42.971" endtime="20201115 22:04:42.974"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:42.979" level="INFO">VALUE: [4.3200000000021e-06, 4.26400000000382e-06, 4.333999999994731e-06, 4.332999999995257e-06, 4.33400000000167e-06, 4.333000000002196e-06, 4.33400000000167e-06, 4.3200000000021e-06, 4.305999999995591e-06, 4.389000000000476e-06, 4.319000000002626e-06, 4.333000000002196e-06, 4.333000000002196e-06, 4.361000000001336e-06, 4.3200000000021e-06, 4.277999999996451e-06, 4.3200000000021e-06, 4.389000000000476e-06, 4.332999999995257e-06, 4.319000000002626e-06, 4.319000000002626e-06, 4.3200000000021e-06, 4.3200000000021e-06, 4.25000000000425e-06, 4.361000000001336e-06, 4.318999999995687e-06, 4.347000000001766e-06, 4.361000000001336e-06, 4.318999999995687e-06, 4.332999999995257e-06, 4.30600000000253e-06, 4.347999999994301e-06, 4.33400000000167e-06, 4.319000000002626e-06, 4.3200000000021e-06, 4.319000000002626e-06, 4.3049999999961175e-06, 4.305000000003056e-06, 4.3200000000021e-06, 4.33400000000167e-06, 4.29200000000296e-06, 4.346999999994827e-06, 4.3049999999961175e-06, 4.3200000000021e-06, 4.3200000000021e-06, 4.319000000002626e-06, 4.305000000003056e-06, 4.3200000000021e-06, 4.347000000001766e-06, 4.319000000002626e-06]</msg>
<status status="PASS" starttime="20201115 22:04:42.975" endtime="20201115 22:04:42.979"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:42.964" endtime="20201115 22:04:42.981"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:42.988" endtime="20201115 22:04:42.990"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:42.996" endtime="20201115 22:04:43.018"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:42.992" endtime="20201115 22:04:43.020"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:42.983" endtime="20201115 22:04:43.022"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:42.448" endtime="20201115 22:04:43.022"></status>
</kw>
<msg timestamp="20201115 22:04:43.023" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:43.047" endtime="20201115 22:04:43.073"></status>
</kw>
<msg timestamp="20201115 22:04:43.074" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:43.043" endtime="20201115 22:04:43.075"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:43.080" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:43.076" endtime="20201115 22:04:43.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:43.083" endtime="20201115 22:04:43.087"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:43.036" endtime="20201115 22:04:43.088"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:43.030" endtime="20201115 22:04:43.090"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:43.107" endtime="20201115 22:04:43.460"></status>
</kw>
<msg timestamp="20201115 22:04:43.467" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042727125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042731444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:43.103" endtime="20201115 22:04:43.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:43.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042727125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042731444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:43.470" endtime="20201115 22:04:43.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:43.489" endtime="20201115 22:04:43.494"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:43.096" endtime="20201115 22:04:43.496"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:43.091" endtime="20201115 22:04:43.497"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:43.508" level="INFO">${RESULT} = [{'time': 0.042731444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.319000000002626e-06, 'source_diff': 4.319000000002626e-06}, {'time': 0.043041681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:43.499" endtime="20201115 22:04:43.509"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:43.540" level="INFO">${OVERHEAD} = {'time': [0.042731444, 0.043041681, 0.043352458, 0.043660417, 0.043969778, 0.044279236, 0.044590208, 0.044896806, 0.045207833, 0.045518722, 0.045832139, 0.046142333, 0.046452278, 0.046759736, 0.047068...</msg>
<status status="PASS" starttime="20201115 22:04:43.511" endtime="20201115 22:04:43.541"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:43.551" level="INFO">NAME: 00-overhead-12-remove</msg>
<status status="PASS" starttime="20201115 22:04:43.549" endtime="20201115 22:04:43.552"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:43.557" level="INFO">VALUE: [4.319000000002626e-06, 4.33400000000167e-06, 4.319000000002626e-06, 4.361000000001336e-06, 4.3200000000021e-06, 4.333000000002196e-06, 4.3049999999961175e-06, 4.319999999995161e-06, 4.319000000002626e-06, 4.3049999999961175e-06, 4.333000000002196e-06, 4.319000000002626e-06, 4.30600000000253e-06, 4.319000000002626e-06, 4.319999999995161e-06, 4.33400000000167e-06, 4.3200000000021e-06, 4.3200000000021e-06, 4.305999999995591e-06, 4.319000000002626e-06, 4.3200000000021e-06, 4.3200000000021e-06, 4.319000000002626e-06, 4.332999999995257e-06, 4.333000000002196e-06, 4.27800000000339e-06, 4.3200000000021e-06, 4.319000000002626e-06, 4.33400000000167e-06, 4.347000000001766e-06, 4.318999999995687e-06, 4.319000000002626e-06, 4.403000000000046e-06, 4.319999999995161e-06, 4.332999999995257e-06, 4.305000000003056e-06, 4.318999999995687e-06, 4.3200000000021e-06, 4.332999999995257e-06, 4.360999999994397e-06, 4.319000000002626e-06, 4.30600000000253e-06, 4.305000000003056e-06, 4.29200000000296e-06, 4.319000000002626e-06, 4.333000000002196e-06, 4.333999999994731e-06, 4.3200000000021e-06, 4.333000000002196e-06, 4.3200000000021e-06]</msg>
<status status="PASS" starttime="20201115 22:04:43.554" endtime="20201115 22:04:43.558"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:43.542" endtime="20201115 22:04:43.560"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:43.566" endtime="20201115 22:04:43.569"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:43.575" endtime="20201115 22:04:43.597"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:43.570" endtime="20201115 22:04:43.598"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:43.561" endtime="20201115 22:04:43.600"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:43.024" endtime="20201115 22:04:43.601"></status>
</kw>
<msg timestamp="20201115 22:04:43.601" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:43.625" endtime="20201115 22:04:43.651"></status>
</kw>
<msg timestamp="20201115 22:04:43.652" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:43.621" endtime="20201115 22:04:43.652"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:43.659" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:43.654" endtime="20201115 22:04:43.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:43.661" endtime="20201115 22:04:43.665"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:43.614" endtime="20201115 22:04:43.666"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:43.608" endtime="20201115 22:04:43.668"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:43.685" endtime="20201115 22:04:44.036"></status>
</kw>
<msg timestamp="20201115 22:04:44.043" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042334417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04233875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:04:43.681" endtime="20201115 22:04:44.044"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:44.062" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042334417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04233875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:04:44.046" endtime="20201115 22:04:44.062"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:44.065" endtime="20201115 22:04:44.072"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:43.674" endtime="20201115 22:04:44.074"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:43.669" endtime="20201115 22:04:44.076"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:44.087" level="INFO">${RESULT} = [{'time': 0.04233875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.333000000002196e-06, 'source_diff': 4.333000000002196e-06}, {'time': 0.042649389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:04:44.077" endtime="20201115 22:04:44.087"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:44.118" level="INFO">${OVERHEAD} = {'time': [0.04233875, 0.042649389, 0.042956556, 0.043269417, 0.043576889, 0.043886625, 0.044196778, 0.044509792, 0.044821667, 0.04512875, 0.045440694, 0.045749417, 0.046060222, 0.046371681, 0.04668320...</msg>
<status status="PASS" starttime="20201115 22:04:44.089" endtime="20201115 22:04:44.118"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:44.129" level="INFO">NAME: 00-overhead-12-remove</msg>
<status status="PASS" starttime="20201115 22:04:44.127" endtime="20201115 22:04:44.130"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:44.135" level="INFO">VALUE: [4.333000000002196e-06, 4.333000000002196e-06, 4.34800000000124e-06, 4.333999999994731e-06, 4.29200000000296e-06, 4.332999999995257e-06, 4.33400000000167e-06, 4.3200000000021e-06, 4.33400000000167e-06, 4.347000000001766e-06, 4.332999999995257e-06, 4.33400000000167e-06, 4.3049999999961175e-06, 4.36200000000081e-06, 4.318999999995687e-06, 4.3200000000021e-06, 4.27800000000339e-06, 4.319000000002626e-06, 4.319000000002626e-06, 4.333000000002196e-06, 4.346999999994827e-06, 4.333000000002196e-06, 4.319000000002626e-06, 4.3200000000021e-06, 4.33400000000167e-06, 4.33400000000167e-06, 4.333000000002196e-06, 4.332999999995257e-06, 4.3049999999961175e-06, 4.277999999996451e-06, 4.3200000000021e-06, 4.36200000000081e-06, 4.319000000002626e-06, 4.333999999994731e-06, 4.318999999995687e-06, 4.333000000002196e-06, 4.318999999995687e-06, 4.319000000002626e-06, 4.333000000002196e-06, 4.332999999995257e-06, 4.333000000002196e-06, 4.305999999995591e-06, 4.333000000002196e-06, 4.319999999995161e-06, 4.30600000000253e-06, 4.2499999999973115e-06, 4.33400000000167e-06, 4.30600000000253e-06, 4.333000000002196e-06, 4.333000000002196e-06]</msg>
<status status="PASS" starttime="20201115 22:04:44.131" endtime="20201115 22:04:44.135"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:44.120" endtime="20201115 22:04:44.137"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:44.144" endtime="20201115 22:04:44.146"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:44.152" endtime="20201115 22:04:44.174"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:44.147" endtime="20201115 22:04:44.176"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:44.139" endtime="20201115 22:04:44.177"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:43.602" endtime="20201115 22:04:44.178"></status>
</kw>
<msg timestamp="20201115 22:04:44.178" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:44.203" endtime="20201115 22:04:44.230"></status>
</kw>
<msg timestamp="20201115 22:04:44.231" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:44.200" endtime="20201115 22:04:44.231"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:44.237" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:44.233" endtime="20201115 22:04:44.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:44.240" endtime="20201115 22:04:44.244"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:44.192" endtime="20201115 22:04:44.245"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:44.186" endtime="20201115 22:04:44.247"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:44.264" endtime="20201115 22:04:44.617"></status>
</kw>
<msg timestamp="20201115 22:04:44.624" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043594778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043599083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:44.260" endtime="20201115 22:04:44.625"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:44.643" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043594778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043599083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:44.627" endtime="20201115 22:04:44.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:44.646" endtime="20201115 22:04:44.651"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:44.253" endtime="20201115 22:04:44.653"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:44.248" endtime="20201115 22:04:44.654"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:44.665" level="INFO">${RESULT} = [{'time': 0.043599083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.3049999999961175e-06, 'source_diff': 4.3049999999961175e-06}, {'time': 0.043907444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:04:44.656" endtime="20201115 22:04:44.666"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:44.696" level="INFO">${OVERHEAD} = {'time': [0.043599083, 0.043907444, 0.044220236, 0.044527486, 0.044835486, 0.045147583, 0.045459056, 0.045770708, 0.046080403, 0.046391569, 0.046700653, 0.047008278, 0.047317181, 0.047625653, 0.047936...</msg>
<status status="PASS" starttime="20201115 22:04:44.667" endtime="20201115 22:04:44.697"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:44.708" level="INFO">NAME: 00-overhead-12-remove</msg>
<status status="PASS" starttime="20201115 22:04:44.705" endtime="20201115 22:04:44.708"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:44.713" level="INFO">VALUE: [4.3049999999961175e-06, 4.346999999994827e-06, 4.27800000000339e-06, 4.318999999995687e-06, 4.305000000003056e-06, 4.332999999995257e-06, 4.305999999995591e-06, 4.305000000003056e-06, 4.2499999999973115e-06, 4.319000000002626e-06, 4.30600000000253e-06, 4.3200000000021e-06, 4.33400000000167e-06, 4.333999999994731e-06, 4.3200000000021e-06, 4.3200000000021e-06, 4.333000000002196e-06, 4.319999999995161e-06, 4.3200000000021e-06, 4.3200000000021e-06, 4.347000000001766e-06, 4.3200000000021e-06, 4.30600000000253e-06, 4.333000000002196e-06, 4.333000000002196e-06, 4.33400000000167e-06, 4.33400000000167e-06, 4.33400000000167e-06, 4.3200000000021e-06, 4.33400000000167e-06, 4.319000000002626e-06, 4.27800000000339e-06, 4.333000000002196e-06, 4.333000000002196e-06, 4.319000000002626e-06, 4.318999999995687e-06, 4.305999999995591e-06, 4.33400000000167e-06, 4.333000000002196e-06, 4.3200000000021e-06, 4.33400000000167e-06, 4.27800000000339e-06, 4.346999999994827e-06, 4.305999999995591e-06, 4.332999999995257e-06, 4.333000000002196e-06, 4.3200000000021e-06, 4.333000000002196e-06, 4.2909999999965476e-06, 4.318999999995687e-06]</msg>
<status status="PASS" starttime="20201115 22:04:44.710" endtime="20201115 22:04:44.714"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:44.698" endtime="20201115 22:04:44.716"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:44.722" endtime="20201115 22:04:44.725"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:44.731" endtime="20201115 22:04:44.753"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:44.726" endtime="20201115 22:04:44.754"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:44.718" endtime="20201115 22:04:44.756"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:44.180" endtime="20201115 22:04:44.757"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:41.863" endtime="20201115 22:04:44.757"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:41.861" endtime="20201115 22:04:44.758"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:04:44.763" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:44.786" endtime="20201115 22:04:44.813"></status>
</kw>
<msg timestamp="20201115 22:04:44.815" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:44.783" endtime="20201115 22:04:44.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:44.821" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:44.817" endtime="20201115 22:04:44.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:44.823" endtime="20201115 22:04:44.827"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:44.775" endtime="20201115 22:04:44.829"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:44.769" endtime="20201115 22:04:44.830"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:44.848" endtime="20201115 22:04:45.202"></status>
</kw>
<msg timestamp="20201115 22:04:45.209" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047790778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047795333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:44.845" endtime="20201115 22:04:45.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:45.228" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047790778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047795333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:45.212" endtime="20201115 22:04:45.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:45.231" endtime="20201115 22:04:45.235"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:44.837" endtime="20201115 22:04:45.236"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:44.832" endtime="20201115 22:04:45.238"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:45.249" level="INFO">${RESULT} = [{'time': 0.047795333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.555000000003306e-06, 'source_diff': 4.555000000003306e-06}, {'time': 0.048125417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:45.240" endtime="20201115 22:04:45.250"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:45.281" level="INFO">${OVERHEAD} = {'time': [0.047795333, 0.048125417, 0.048460389, 0.048795639, 0.049131236, 0.049468458, 0.049803236, 0.050136153, 0.050468583, 0.050802917, 0.051136139, 0.051469833, 0.051805153, 0.052140014, 0.052472...</msg>
<status status="PASS" starttime="20201115 22:04:45.252" endtime="20201115 22:04:45.282"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:45.292" level="INFO">NAME: 00-overhead-13-remove</msg>
<status status="PASS" starttime="20201115 22:04:45.290" endtime="20201115 22:04:45.293"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:45.298" level="INFO">VALUE: [4.555000000003306e-06, 4.527999999996701e-06, 4.527999999996701e-06, 4.54200000000321e-06, 4.555000000003306e-06, 4.485999999997992e-06, 4.52800000000364e-06, 4.55600000000278e-06, 4.526999999997228e-06, 4.55600000000278e-06, 4.541999999996271e-06, 4.540999999996798e-06, 4.527999999996701e-06, 4.513999999997131e-06, 4.471999999998422e-06, 4.485999999997992e-06, 4.54200000000321e-06, 4.51400000000407e-06, 4.54200000000321e-06, 4.54200000000321e-06, 4.569999999995411e-06, 4.52800000000364e-06, 4.541999999996271e-06, 4.52800000000364e-06, 4.527999999996701e-06, 4.4860000000049305e-06, 4.54200000000321e-06, 4.54200000000321e-06, 4.52800000000364e-06, 4.527999999996701e-06, 4.52800000000364e-06, 4.527999999996701e-06, 4.54200000000321e-06, 4.527999999996701e-06, 4.513999999997131e-06, 4.513999999997131e-06, 4.527999999996701e-06, 4.540999999996798e-06, 4.540999999996798e-06, 4.541999999996271e-06, 4.52800000000364e-06, 4.513999999997131e-06, 4.541999999996271e-06, 4.4999999999975615e-06, 4.513999999997131e-06, 4.540999999996798e-06, 4.55600000000278e-06, 4.485999999997992e-06, 4.527000000004167e-06, 4.513999999997131e-06]</msg>
<status status="PASS" starttime="20201115 22:04:45.295" endtime="20201115 22:04:45.299"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:45.283" endtime="20201115 22:04:45.301"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:45.307" endtime="20201115 22:04:45.310"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:45.316" endtime="20201115 22:04:45.338"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:45.311" endtime="20201115 22:04:45.340"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:45.302" endtime="20201115 22:04:45.341"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:44.764" endtime="20201115 22:04:45.342"></status>
</kw>
<msg timestamp="20201115 22:04:45.342" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:45.366" endtime="20201115 22:04:45.393"></status>
</kw>
<msg timestamp="20201115 22:04:45.395" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:45.363" endtime="20201115 22:04:45.395"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:45.402" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:45.397" endtime="20201115 22:04:45.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:45.404" endtime="20201115 22:04:45.408"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:45.355" endtime="20201115 22:04:45.410"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:45.349" endtime="20201115 22:04:45.411"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:45.428" endtime="20201115 22:04:45.780"></status>
</kw>
<msg timestamp="20201115 22:04:45.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042521639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042526111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:45.425" endtime="20201115 22:04:45.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:45.806" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042521639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042526111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:45.789" endtime="20201115 22:04:45.807"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:45.808" endtime="20201115 22:04:45.814"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:45.417" endtime="20201115 22:04:45.816"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:45.412" endtime="20201115 22:04:45.817"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:45.828" level="INFO">${RESULT} = [{'time': 0.042526111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.471999999998422e-06, 'source_diff': 4.471999999998422e-06}, {'time': 0.042857486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:45.819" endtime="20201115 22:04:45.828"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:45.859" level="INFO">${OVERHEAD} = {'time': [0.042526111, 0.042857486, 0.043189542, 0.043523486, 0.043859486, 0.044191597, 0.044522097, 0.044852417, 0.045184347, 0.045519681, 0.045855556, 0.046187194, 0.046519444, 0.046855097, 0.047188...</msg>
<status status="PASS" starttime="20201115 22:04:45.830" endtime="20201115 22:04:45.860"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:45.870" level="INFO">NAME: 00-overhead-13-remove</msg>
<status status="PASS" starttime="20201115 22:04:45.868" endtime="20201115 22:04:45.871"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:45.876" level="INFO">VALUE: [4.471999999998422e-06, 4.52800000000364e-06, 4.527999999996701e-06, 4.54200000000321e-06, 4.54200000000321e-06, 4.540999999996798e-06, 4.527999999996701e-06, 4.527999999996701e-06, 4.540999999996798e-06, 4.527999999996701e-06, 4.541999999996271e-06, 4.512999999997658e-06, 4.526999999997228e-06, 4.527999999996701e-06, 4.541999999996271e-06, 4.541999999996271e-06, 4.569999999995411e-06, 4.527999999996701e-06, 4.513999999997131e-06, 4.51400000000407e-06, 4.52800000000364e-06, 4.527999999996701e-06, 4.54200000000321e-06, 4.51400000000407e-06, 4.583000000002446e-06, 4.513999999997131e-06, 4.51400000000407e-06, 4.527999999996701e-06, 4.541999999996271e-06, 4.5410000000037365e-06, 4.52800000000364e-06, 4.526999999997228e-06, 4.55600000000278e-06, 4.526999999997228e-06, 4.526999999997228e-06, 4.527999999996701e-06, 4.526999999997228e-06, 4.51400000000407e-06, 4.52800000000364e-06, 4.527999999996701e-06, 4.512999999997658e-06, 4.527999999996701e-06, 4.513999999997131e-06, 4.527999999996701e-06, 4.51400000000407e-06, 4.527999999996701e-06, 4.540999999996798e-06, 4.555000000003306e-06, 4.527999999996701e-06, 4.541999999996271e-06]</msg>
<status status="PASS" starttime="20201115 22:04:45.873" endtime="20201115 22:04:45.877"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:45.861" endtime="20201115 22:04:45.879"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:45.885" endtime="20201115 22:04:45.888"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:45.894" endtime="20201115 22:04:45.916"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:45.889" endtime="20201115 22:04:45.918"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:45.881" endtime="20201115 22:04:45.919"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:45.344" endtime="20201115 22:04:45.920"></status>
</kw>
<msg timestamp="20201115 22:04:45.920" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:45.945" endtime="20201115 22:04:45.972"></status>
</kw>
<msg timestamp="20201115 22:04:45.974" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:45.941" endtime="20201115 22:04:45.974"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:45.980" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:45.976" endtime="20201115 22:04:45.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:45.982" endtime="20201115 22:04:45.986"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:45.933" endtime="20201115 22:04:45.988"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:45.927" endtime="20201115 22:04:45.989"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:46.006" endtime="20201115 22:04:46.360"></status>
</kw>
<msg timestamp="20201115 22:04:46.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043230194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043234722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:46.003" endtime="20201115 22:04:46.367"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:46.385" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043230194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043234722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:46.369" endtime="20201115 22:04:46.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:46.387" endtime="20201115 22:04:46.395"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:45.995" endtime="20201115 22:04:46.397"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:45.990" endtime="20201115 22:04:46.398"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:46.409" level="INFO">${RESULT} = [{'time': 0.043234722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.52800000000364e-06, 'source_diff': 4.52800000000364e-06}, {'time': 0.043566806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:04:46.400" endtime="20201115 22:04:46.410"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:46.440" level="INFO">${OVERHEAD} = {'time': [0.043234722, 0.043566806, 0.043901389, 0.044239208, 0.044573486, 0.044905403, 0.045241264, 0.045577847, 0.045913736, 0.046246403, 0.046583736, 0.046915403, 0.047249972, 0.047584431, 0.047916...</msg>
<status status="PASS" starttime="20201115 22:04:46.411" endtime="20201115 22:04:46.441"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:46.452" level="INFO">NAME: 00-overhead-13-remove</msg>
<status status="PASS" starttime="20201115 22:04:46.449" endtime="20201115 22:04:46.452"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:46.457" level="INFO">VALUE: [4.52800000000364e-06, 4.527999999996701e-06, 4.541999999996271e-06, 4.527000000004167e-06, 4.54200000000321e-06, 4.55600000000278e-06, 4.597000000002016e-06, 4.540999999996798e-06, 4.541999999996271e-06, 4.527999999996701e-06, 4.555000000003306e-06, 4.51400000000407e-06, 4.485999999997992e-06, 4.59800000000149e-06, 4.4860000000049305e-06, 4.54200000000321e-06, 4.527999999996701e-06, 4.610999999994647e-06, 4.51400000000407e-06, 4.57000000000235e-06, 4.527999999996701e-06, 4.597000000002016e-06, 4.527999999996701e-06, 4.526999999997228e-06, 4.512999999997658e-06, 4.541999999996271e-06, 4.52800000000364e-06, 4.526999999997228e-06, 4.5549999999963675e-06, 4.527999999996701e-06, 4.5000000000045e-06, 4.541999999996271e-06, 4.52800000000364e-06, 4.5410000000037365e-06, 4.541999999996271e-06, 4.513999999997131e-06, 4.541999999996271e-06, 4.527000000004167e-06, 4.5549999999963675e-06, 4.541999999996271e-06, 4.54200000000321e-06, 4.513999999997131e-06, 4.527000000004167e-06, 4.471999999998422e-06, 4.5410000000037365e-06, 4.4860000000049305e-06, 4.541999999996271e-06, 4.52800000000364e-06, 4.4999999999975615e-06, 4.443999999999282e-06]</msg>
<status status="PASS" starttime="20201115 22:04:46.454" endtime="20201115 22:04:46.458"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:46.442" endtime="20201115 22:04:46.460"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:46.466" endtime="20201115 22:04:46.469"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:46.475" endtime="20201115 22:04:46.497"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:46.470" endtime="20201115 22:04:46.499"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:46.462" endtime="20201115 22:04:46.500"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:45.921" endtime="20201115 22:04:46.501"></status>
</kw>
<msg timestamp="20201115 22:04:46.502" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:46.526" endtime="20201115 22:04:46.553"></status>
</kw>
<msg timestamp="20201115 22:04:46.554" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:46.522" endtime="20201115 22:04:46.555"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:46.561" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:46.556" endtime="20201115 22:04:46.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:46.563" endtime="20201115 22:04:46.567"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:46.515" endtime="20201115 22:04:46.568"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:46.509" endtime="20201115 22:04:46.570"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:46.587" endtime="20201115 22:04:46.940"></status>
</kw>
<msg timestamp="20201115 22:04:46.947" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043171792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043176361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:46.584" endtime="20201115 22:04:46.947"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:46.965" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043171792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043176361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:46.949" endtime="20201115 22:04:46.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:46.968" endtime="20201115 22:04:46.973"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:46.576" endtime="20201115 22:04:46.975"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:46.571" endtime="20201115 22:04:46.977"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:46.987" level="INFO">${RESULT} = [{'time': 0.043176361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.569000000002876e-06, 'source_diff': 4.569000000002876e-06}, {'time': 0.043513819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:46.978" endtime="20201115 22:04:46.988"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:47.019" level="INFO">${OVERHEAD} = {'time': [0.043176361, 0.043513819, 0.043849, 0.044181903, 0.044517222, 0.044851389, 0.045187306, 0.045520319, 0.045854972, 0.046189333, 0.046522792, 0.046858208, 0.047188833, 0.047525569, 0.047856653...</msg>
<status status="PASS" starttime="20201115 22:04:46.989" endtime="20201115 22:04:47.020"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:47.030" level="INFO">NAME: 00-overhead-13-remove</msg>
<status status="PASS" starttime="20201115 22:04:47.028" endtime="20201115 22:04:47.031"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:47.036" level="INFO">VALUE: [4.569000000002876e-06, 4.5410000000037365e-06, 4.527999999996701e-06, 4.54200000000321e-06, 4.4720000000053606e-06, 4.582999999995507e-06, 4.541999999996271e-06, 4.540999999996798e-06, 4.5410000000037365e-06, 4.526999999997228e-06, 4.513999999997131e-06, 4.582999999995507e-06, 4.513999999997131e-06, 4.457999999998852e-06, 4.513999999997131e-06, 4.5410000000037365e-06, 4.5000000000045e-06, 4.54200000000321e-06, 4.4999999999975615e-06, 4.541999999996271e-06, 4.527999999996701e-06, 4.5000000000045e-06, 4.52800000000364e-06, 4.527999999996701e-06, 4.513999999997131e-06, 4.526999999997228e-06, 4.527999999996701e-06, 4.527999999996701e-06, 4.54200000000321e-06, 4.52800000000364e-06, 4.51400000000407e-06, 4.541999999996271e-06, 4.527999999996701e-06, 4.527000000004167e-06, 4.52800000000364e-06, 4.54200000000321e-06, 4.52800000000364e-06, 4.527999999996701e-06, 4.52800000000364e-06, 4.485999999997992e-06, 4.541999999996271e-06, 4.52800000000364e-06, 4.541999999996271e-06, 4.526999999997228e-06, 4.611000000001586e-06, 4.527999999996701e-06, 4.52800000000364e-06, 4.540999999996798e-06, 4.541999999996271e-06, 4.513999999997131e-06]</msg>
<status status="PASS" starttime="20201115 22:04:47.033" endtime="20201115 22:04:47.037"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:47.021" endtime="20201115 22:04:47.038"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:47.045" endtime="20201115 22:04:47.049"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:47.054" endtime="20201115 22:04:47.076"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:47.050" endtime="20201115 22:04:47.078"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:47.040" endtime="20201115 22:04:47.080"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:46.503" endtime="20201115 22:04:47.080"></status>
</kw>
<msg timestamp="20201115 22:04:47.081" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:47.105" endtime="20201115 22:04:47.132"></status>
</kw>
<msg timestamp="20201115 22:04:47.133" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:47.101" endtime="20201115 22:04:47.133"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:47.139" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:47.135" endtime="20201115 22:04:47.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:47.142" endtime="20201115 22:04:47.145"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:47.094" endtime="20201115 22:04:47.147"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:47.088" endtime="20201115 22:04:47.149"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:47.166" endtime="20201115 22:04:47.520"></status>
</kw>
<msg timestamp="20201115 22:04:47.527" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042380458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042385, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:04:47.162" endtime="20201115 22:04:47.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:47.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042380458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042385, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:04:47.529" endtime="20201115 22:04:47.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:47.548" endtime="20201115 22:04:47.553"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:47.155" endtime="20201115 22:04:47.555"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:47.150" endtime="20201115 22:04:47.557"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:47.568" level="INFO">${RESULT} = [{'time': 0.042385, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.541999999996271e-06, 'source_diff': 4.541999999996271e-06}, {'time': 0.042719875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 22:04:47.558" endtime="20201115 22:04:47.568"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:47.599" level="INFO">${OVERHEAD} = {'time': [0.042385, 0.042719875, 0.043055014, 0.043390931, 0.043725028, 0.044059028, 0.044390917, 0.044723486, 0.045059347, 0.045394528, 0.045731792, 0.046066028, 0.046403486, 0.046739875, 0.047075875...</msg>
<status status="PASS" starttime="20201115 22:04:47.570" endtime="20201115 22:04:47.599"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:47.610" level="INFO">NAME: 00-overhead-13-remove</msg>
<status status="PASS" starttime="20201115 22:04:47.608" endtime="20201115 22:04:47.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:47.616" level="INFO">VALUE: [4.541999999996271e-06, 4.527999999996701e-06, 4.52800000000364e-06, 4.51400000000407e-06, 4.555999999995841e-06, 4.513999999997131e-06, 4.51400000000407e-06, 4.527999999996701e-06, 4.540999999996798e-06, 4.52800000000364e-06, 4.54200000000321e-06, 4.51400000000407e-06, 4.52800000000364e-06, 4.54200000000321e-06, 4.4720000000053606e-06, 4.555000000003306e-06, 4.540999999996798e-06, 4.527999999996701e-06, 4.527000000004167e-06, 4.513999999997131e-06, 4.52800000000364e-06, 4.526999999997228e-06, 4.527000000004167e-06, 4.52800000000364e-06, 4.527999999996701e-06, 4.51400000000407e-06, 4.513999999997131e-06, 4.526999999997228e-06, 4.471999999998422e-06, 4.513999999997131e-06, 4.52800000000364e-06, 4.485999999997992e-06, 4.540999999996798e-06, 4.458000000005791e-06, 4.527999999996701e-06, 4.52800000000364e-06, 4.513999999997131e-06, 4.527000000004167e-06, 4.540999999996798e-06, 4.527999999996701e-06, 4.54200000000321e-06, 4.512999999997658e-06, 4.52800000000364e-06, 4.527999999996701e-06, 4.512999999997658e-06, 4.54200000000321e-06, 4.527999999996701e-06, 4.527999999996701e-06, 4.513999999997131e-06, 4.5410000000037365e-06]</msg>
<status status="PASS" starttime="20201115 22:04:47.613" endtime="20201115 22:04:47.621"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:47.601" endtime="20201115 22:04:47.623"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:47.630" endtime="20201115 22:04:47.633"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:47.639" endtime="20201115 22:04:47.660"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:47.634" endtime="20201115 22:04:47.662"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:47.625" endtime="20201115 22:04:47.664"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:47.082" endtime="20201115 22:04:47.665"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:44.760" endtime="20201115 22:04:47.665"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:44.759" endtime="20201115 22:04:47.665"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:04:47.670" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:47.694" endtime="20201115 22:04:47.722"></status>
</kw>
<msg timestamp="20201115 22:04:47.724" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:47.691" endtime="20201115 22:04:47.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:47.730" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:47.726" endtime="20201115 22:04:47.731"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:47.732" endtime="20201115 22:04:47.736"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:47.683" endtime="20201115 22:04:47.738"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:47.677" endtime="20201115 22:04:47.739"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:47.756" endtime="20201115 22:04:48.111"></status>
</kw>
<msg timestamp="20201115 22:04:48.118" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047800028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047804778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:47.753" endtime="20201115 22:04:48.119"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:48.137" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047800028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047804778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:48.120" endtime="20201115 22:04:48.137"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:48.139" endtime="20201115 22:04:48.143"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:47.745" endtime="20201115 22:04:48.145"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:47.741" endtime="20201115 22:04:48.146"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:48.157" level="INFO">${RESULT} = [{'time': 0.047804778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7499999999978115e-06, 'source_diff': 4.7499999999978115e-06}, {'time': 0.048161653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:04:48.148" endtime="20201115 22:04:48.158"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:48.189" level="INFO">${OVERHEAD} = {'time': [0.047804778, 0.048161653, 0.0485205, 0.048878764, 0.049236292, 0.049596597, 0.049951306, 0.05030925, 0.050666792, 0.051024639, 0.051381125, 0.051738653, 0.0520935, 0.052451736, 0.052808972, ...</msg>
<status status="PASS" starttime="20201115 22:04:48.159" endtime="20201115 22:04:48.189"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:48.200" level="INFO">NAME: 00-overhead-14-remove</msg>
<status status="PASS" starttime="20201115 22:04:48.198" endtime="20201115 22:04:48.201"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:48.206" level="INFO">VALUE: [4.7499999999978115e-06, 4.7089999999985754e-06, 4.735999999998242e-06, 4.735999999998242e-06, 4.735999999998242e-06, 4.7499999999978115e-06, 4.7499999999978115e-06, 4.7639999999973814e-06, 4.680999999999436e-06, 4.777999999996951e-06, 4.735999999998242e-06, 4.77800000000389e-06, 4.7499999999978115e-06, 4.735999999998242e-06, 4.722000000005611e-06, 4.735999999998242e-06, 4.735999999998242e-06, 4.7360000000051805e-06, 4.7499999999978115e-06, 4.721999999998672e-06, 4.735999999998242e-06, 4.735999999998242e-06, 4.7499999999978115e-06, 4.721999999998672e-06, 4.75000000000475e-06, 4.763000000004847e-06, 4.735999999998242e-06, 4.805999999996091e-06, 4.776999999997478e-06, 4.7499999999978115e-06, 4.7639999999973814e-06, 4.735999999998242e-06, 4.7639999999973814e-06, 4.75000000000475e-06, 4.735999999998242e-06, 4.7499999999978115e-06, 4.735999999998242e-06, 4.7360000000051805e-06, 4.7499999999978115e-06, 4.7499999999978115e-06, 4.735999999998242e-06, 4.721999999998672e-06, 4.737000000004654e-06, 4.707999999992163e-06, 4.750000000011689e-06, 4.721999999998672e-06, 4.735999999991303e-06, 4.76400000000432e-06, 4.7499999999978115e-06, 4.7639999999904425e-06]</msg>
<status status="PASS" starttime="20201115 22:04:48.202" endtime="20201115 22:04:48.207"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:48.190" endtime="20201115 22:04:48.209"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:48.215" endtime="20201115 22:04:48.218"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:48.224" endtime="20201115 22:04:48.246"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:48.219" endtime="20201115 22:04:48.248"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:48.211" endtime="20201115 22:04:48.249"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:47.672" endtime="20201115 22:04:48.250"></status>
</kw>
<msg timestamp="20201115 22:04:48.250" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:48.274" endtime="20201115 22:04:48.303"></status>
</kw>
<msg timestamp="20201115 22:04:48.304" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:48.271" endtime="20201115 22:04:48.304"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:48.310" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:48.306" endtime="20201115 22:04:48.311"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:48.313" endtime="20201115 22:04:48.316"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:48.263" endtime="20201115 22:04:48.318"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:48.257" endtime="20201115 22:04:48.320"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:48.338" endtime="20201115 22:04:48.690"></status>
</kw>
<msg timestamp="20201115 22:04:48.697" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042695889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042700681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:48.334" endtime="20201115 22:04:48.698"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:48.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042695889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042700681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:48.699" endtime="20201115 22:04:48.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:48.718" endtime="20201115 22:04:48.726"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:48.327" endtime="20201115 22:04:48.727"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:48.321" endtime="20201115 22:04:48.729"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:48.740" level="INFO">${RESULT} = [{'time': 0.042700681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.791999999996521e-06, 'source_diff': 4.791999999996521e-06}, {'time': 0.043057069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:48.730" endtime="20201115 22:04:48.740"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:48.771" level="INFO">${OVERHEAD} = {'time': [0.042700681, 0.043057069, 0.043417806, 0.043776597, 0.044133972, 0.044489069, 0.044847903, 0.045204236, 0.045561764, 0.045918181, 0.046278819, 0.046640181, 0.046998833, 0.047354583, 0.047710...</msg>
<status status="PASS" starttime="20201115 22:04:48.742" endtime="20201115 22:04:48.772"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:48.783" level="INFO">NAME: 00-overhead-14-remove</msg>
<status status="PASS" starttime="20201115 22:04:48.781" endtime="20201115 22:04:48.784"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:48.789" level="INFO">VALUE: [4.791999999996521e-06, 4.7360000000051805e-06, 4.75000000000475e-06, 4.735999999998242e-06, 4.735999999998242e-06, 4.707999999999102e-06, 4.76400000000432e-06, 4.679999999999962e-06, 4.735999999998242e-06, 4.737000000004654e-06, 4.7499999999978115e-06, 4.653000000000296e-06, 4.790999999997048e-06, 4.735999999998242e-06, 4.7639999999973814e-06, 4.7499999999978115e-06, 4.736999999997715e-06, 4.707999999999102e-06, 4.8050000000035564e-06, 4.722999999998145e-06, 4.7499999999978115e-06, 4.7499999999978115e-06, 4.735999999998242e-06, 4.7639999999973814e-06, 4.7639999999973814e-06, 4.735999999998242e-06, 4.735999999998242e-06, 4.7639999999973814e-06, 4.721999999998672e-06, 4.777999999996951e-06, 4.7089999999985754e-06, 4.735999999998242e-06, 4.722000000005611e-06, 4.7360000000051805e-06, 4.7360000000051805e-06, 4.7499999999978115e-06, 4.7499999999978115e-06, 4.735999999998242e-06, 4.7499999999978115e-06, 4.7499999999978115e-06, 4.735999999998242e-06, 4.75000000000475e-06, 4.721999999998672e-06, 4.75000000000475e-06, 4.76400000000432e-06, 4.735999999998242e-06, 4.735999999998242e-06, 4.735999999998242e-06, 4.735999999998242e-06, 4.735999999998242e-06]</msg>
<status status="PASS" starttime="20201115 22:04:48.785" endtime="20201115 22:04:48.789"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:48.774" endtime="20201115 22:04:48.791"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:48.798" endtime="20201115 22:04:48.800"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:48.806" endtime="20201115 22:04:48.828"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:48.802" endtime="20201115 22:04:48.830"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:48.793" endtime="20201115 22:04:48.831"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:48.252" endtime="20201115 22:04:48.832"></status>
</kw>
<msg timestamp="20201115 22:04:48.833" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:48.856" endtime="20201115 22:04:48.885"></status>
</kw>
<msg timestamp="20201115 22:04:48.886" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:48.853" endtime="20201115 22:04:48.886"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:48.892" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:48.888" endtime="20201115 22:04:48.893"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:48.895" endtime="20201115 22:04:48.898"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:48.845" endtime="20201115 22:04:48.900"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:48.839" endtime="20201115 22:04:48.902"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:48.919" endtime="20201115 22:04:49.273"></status>
</kw>
<msg timestamp="20201115 22:04:49.280" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042405625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042410375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:48.915" endtime="20201115 22:04:49.280"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:49.298" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042405625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042410375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:49.282" endtime="20201115 22:04:49.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:49.301" endtime="20201115 22:04:49.306"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:48.908" endtime="20201115 22:04:49.308"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:48.903" endtime="20201115 22:04:49.309"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:49.320" level="INFO">${RESULT} = [{'time': 0.042410375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7499999999978115e-06, 'source_diff': 4.7499999999978115e-06}, {'time': 0.042769958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:04:49.311" endtime="20201115 22:04:49.321"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:49.353" level="INFO">${OVERHEAD} = {'time': [0.042410375, 0.042769958, 0.043130375, 0.043489292, 0.043848153, 0.044207292, 0.044562847, 0.044919611, 0.045275708, 0.045633806, 0.045987972, 0.046347236, 0.046702653, 0.047059375, 0.047415...</msg>
<status status="PASS" starttime="20201115 22:04:49.323" endtime="20201115 22:04:49.353"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:49.365" level="INFO">NAME: 00-overhead-14-remove</msg>
<status status="PASS" starttime="20201115 22:04:49.362" endtime="20201115 22:04:49.365"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:49.370" level="INFO">VALUE: [4.7499999999978115e-06, 4.7639999999973814e-06, 4.693999999999532e-06, 4.7089999999985754e-06, 4.735999999998242e-06, 4.75000000000475e-06, 4.708000000006041e-06, 4.735999999998242e-06, 4.735999999998242e-06, 4.736999999997715e-06, 4.76400000000432e-06, 4.679999999999962e-06, 4.721999999998672e-06, 4.666999999999866e-06, 4.7360000000051805e-06, 4.693999999999532e-06, 4.7499999999978115e-06, 4.75000000000475e-06, 4.777999999996951e-06, 4.7639999999973814e-06, 4.721999999998672e-06, 4.7499999999978115e-06, 4.737000000004654e-06, 4.7499999999978115e-06, 4.7360000000051805e-06, 4.735999999998242e-06, 4.790999999997048e-06, 4.721999999998672e-06, 4.721999999998672e-06, 4.709000000005514e-06, 4.735999999998242e-06, 4.7360000000051805e-06, 4.735999999998242e-06, 4.7360000000051805e-06, 4.722999999998145e-06, 4.735999999998242e-06, 4.7499999999978115e-06, 4.723000000005084e-06, 4.693999999999532e-06, 4.7639999999973814e-06, 4.7639999999973814e-06, 4.735999999998242e-06, 4.75000000000475e-06, 4.7360000000051805e-06, 4.7910000000039865e-06, 4.721999999998672e-06, 4.735999999998242e-06, 4.7360000000051805e-06, 4.7499999999978115e-06, 4.7360000000051805e-06]</msg>
<status status="PASS" starttime="20201115 22:04:49.367" endtime="20201115 22:04:49.371"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:49.355" endtime="20201115 22:04:49.373"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:49.380" endtime="20201115 22:04:49.383"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:49.389" endtime="20201115 22:04:49.411"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:49.385" endtime="20201115 22:04:49.413"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:49.375" endtime="20201115 22:04:49.415"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:48.834" endtime="20201115 22:04:49.415"></status>
</kw>
<msg timestamp="20201115 22:04:49.416" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:49.440" endtime="20201115 22:04:49.468"></status>
</kw>
<msg timestamp="20201115 22:04:49.469" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:49.436" endtime="20201115 22:04:49.470"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:49.476" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:49.471" endtime="20201115 22:04:49.476"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:49.478" endtime="20201115 22:04:49.482"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:49.429" endtime="20201115 22:04:49.484"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:49.423" endtime="20201115 22:04:49.485"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:49.502" endtime="20201115 22:04:49.853"></status>
</kw>
<msg timestamp="20201115 22:04:49.860" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042442083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042446806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:49.499" endtime="20201115 22:04:49.861"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:49.879" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042442083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042446806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:49.863" endtime="20201115 22:04:49.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:49.882" endtime="20201115 22:04:49.888"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:49.491" endtime="20201115 22:04:49.889"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:49.486" endtime="20201115 22:04:49.891"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:49.902" level="INFO">${RESULT} = [{'time': 0.042446806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.722999999998145e-06, 'source_diff': 4.722999999998145e-06}, {'time': 0.042801681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:49.892" endtime="20201115 22:04:49.902"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:49.933" level="INFO">${OVERHEAD} = {'time': [0.042446806, 0.042801681, 0.043158306, 0.043513736, 0.043870778, 0.044227014, 0.044581375, 0.044940333, 0.045301917, 0.045662125, 0.046021097, 0.046377556, 0.046731917, 0.047089806, 0.047447...</msg>
<status status="PASS" starttime="20201115 22:04:49.904" endtime="20201115 22:04:49.934"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:49.945" level="INFO">NAME: 00-overhead-14-remove</msg>
<status status="PASS" starttime="20201115 22:04:49.942" endtime="20201115 22:04:49.945"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:49.950" level="INFO">VALUE: [4.722999999998145e-06, 4.6949999999990055e-06, 4.7499999999978115e-06, 4.7639999999973814e-06, 4.735999999998242e-06, 4.721999999998672e-06, 4.777999999996951e-06, 4.735999999998242e-06, 4.735999999998242e-06, 4.777999999996951e-06, 4.7499999999978115e-06, 4.736999999997715e-06, 4.7499999999978115e-06, 4.736999999997715e-06, 4.693999999999532e-06, 4.735999999998242e-06, 4.7499999999978115e-06, 4.7639999999973814e-06, 4.7499999999978115e-06, 4.735999999998242e-06, 4.707999999999102e-06, 4.7499999999978115e-06, 4.679999999999962e-06, 4.736999999997715e-06, 4.7499999999978115e-06, 4.7499999999978115e-06, 4.735999999998242e-06, 4.708000000006041e-06, 4.735999999998242e-06, 4.735999999998242e-06, 4.735999999998242e-06, 4.7499999999978115e-06, 4.7639999999973814e-06, 4.7360000000051805e-06, 4.737000000004654e-06, 4.735999999998242e-06, 4.665999999993453e-06, 4.75000000000475e-06, 4.735999999998242e-06, 4.7360000000051805e-06, 4.8050000000035564e-06, 4.762999999997908e-06, 4.75000000000475e-06, 4.735999999998242e-06, 4.7499999999978115e-06, 4.707999999999102e-06, 4.693999999999532e-06, 4.76400000000432e-06, 4.7639999999973814e-06, 4.7499999999978115e-06]</msg>
<status status="PASS" starttime="20201115 22:04:49.947" endtime="20201115 22:04:49.951"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:49.935" endtime="20201115 22:04:49.953"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:49.959" endtime="20201115 22:04:49.962"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:49.968" endtime="20201115 22:04:49.990"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:49.963" endtime="20201115 22:04:49.992"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:49.955" endtime="20201115 22:04:49.993"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:49.417" endtime="20201115 22:04:49.994"></status>
</kw>
<msg timestamp="20201115 22:04:49.994" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:50.018" endtime="20201115 22:04:50.047"></status>
</kw>
<msg timestamp="20201115 22:04:50.048" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:50.015" endtime="20201115 22:04:50.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:50.055" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:50.050" endtime="20201115 22:04:50.055"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:50.057" endtime="20201115 22:04:50.061"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:50.007" endtime="20201115 22:04:50.062"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:50.001" endtime="20201115 22:04:50.064"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:50.081" endtime="20201115 22:04:50.433"></status>
</kw>
<msg timestamp="20201115 22:04:50.441" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042709708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042714444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:50.078" endtime="20201115 22:04:50.442"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:50.460" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042709708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042714444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:50.444" endtime="20201115 22:04:50.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:50.463" endtime="20201115 22:04:50.468"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:50.070" endtime="20201115 22:04:50.470"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:50.065" endtime="20201115 22:04:50.472"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:50.482" level="INFO">${RESULT} = [{'time': 0.042714444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.735999999998242e-06, 'source_diff': 4.735999999998242e-06}, {'time': 0.043075569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:50.473" endtime="20201115 22:04:50.483"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:50.514" level="INFO">${OVERHEAD} = {'time': [0.042714444, 0.043075569, 0.043432708, 0.043789417, 0.044145847, 0.044500764, 0.044861403, 0.045222083, 0.045576903, 0.045932097, 0.046292819, 0.046650569, 0.047007306, 0.047364014, 0.047721...</msg>
<status status="PASS" starttime="20201115 22:04:50.485" endtime="20201115 22:04:50.514"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:50.526" level="INFO">NAME: 00-overhead-14-remove</msg>
<status status="PASS" starttime="20201115 22:04:50.523" endtime="20201115 22:04:50.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:50.531" level="INFO">VALUE: [4.735999999998242e-06, 4.693999999999532e-06, 4.735999999998242e-06, 4.7499999999978115e-06, 4.7360000000051805e-06, 4.721999999998672e-06, 4.735999999998242e-06, 4.7360000000051805e-06, 4.75000000000475e-06, 4.735999999998242e-06, 4.721999999998672e-06, 4.679999999999962e-06, 4.736999999997715e-06, 4.80600000000303e-06, 4.8049999999966175e-06, 4.7360000000051805e-06, 4.75000000000475e-06, 4.7639999999973814e-06, 4.721999999998672e-06, 4.7499999999978115e-06, 4.722999999998145e-06, 4.80600000000303e-06, 4.736999999997715e-06, 4.735999999998242e-06, 4.735999999998242e-06, 4.735999999998242e-06, 4.735999999998242e-06, 4.762999999997908e-06, 4.707999999999102e-06, 4.7360000000051805e-06, 4.721999999998672e-06, 4.707999999999102e-06, 4.7499999999978115e-06, 4.735999999998242e-06, 4.735999999998242e-06, 4.721999999998672e-06, 4.722999999998145e-06, 4.722999999998145e-06, 4.735999999998242e-06, 4.735999999998242e-06, 4.6949999999990055e-06, 4.76400000000432e-06, 4.7360000000051805e-06, 4.7499999999978115e-06, 4.7499999999978115e-06, 4.7639999999973814e-06, 4.7499999999978115e-06, 4.735999999998242e-06, 4.735999999998242e-06, 4.735999999998242e-06]</msg>
<status status="PASS" starttime="20201115 22:04:50.528" endtime="20201115 22:04:50.532"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:50.516" endtime="20201115 22:04:50.534"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:50.540" endtime="20201115 22:04:50.543"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:50.549" endtime="20201115 22:04:50.571"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:50.544" endtime="20201115 22:04:50.572"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:50.536" endtime="20201115 22:04:50.574"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:49.996" endtime="20201115 22:04:50.575"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:47.668" endtime="20201115 22:04:50.575"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:47.666" endtime="20201115 22:04:50.576"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:04:50.581" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:50.604" endtime="20201115 22:04:50.634"></status>
</kw>
<msg timestamp="20201115 22:04:50.635" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:50.601" endtime="20201115 22:04:50.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:50.642" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:50.638" endtime="20201115 22:04:50.642"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:50.644" endtime="20201115 22:04:50.648"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:50.594" endtime="20201115 22:04:50.649"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:50.587" endtime="20201115 22:04:50.652"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:50.669" endtime="20201115 22:04:51.026"></status>
</kw>
<msg timestamp="20201115 22:04:51.033" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048065292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04807025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:04:50.665" endtime="20201115 22:04:51.034"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:51.052" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048065292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04807025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:04:51.035" endtime="20201115 22:04:51.053"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:51.054" endtime="20201115 22:04:51.058"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:50.658" endtime="20201115 22:04:51.060"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:50.653" endtime="20201115 22:04:51.061"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:51.072" level="INFO">${RESULT} = [{'time': 0.04807025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.957999999999352e-06, 'source_diff': 4.957999999999352e-06}, {'time': 0.048455667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:04:51.063" endtime="20201115 22:04:51.072"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:51.104" level="INFO">${OVERHEAD} = {'time': [0.04807025, 0.048455667, 0.048841972, 0.049221681, 0.049604139, 0.049986931, 0.050367167, 0.050746597, 0.051130889, 0.051511278, 0.051896028, 0.052276722, 0.052657181, 0.053041431, 0.0534274...</msg>
<status status="PASS" starttime="20201115 22:04:51.074" endtime="20201115 22:04:51.104"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:51.116" level="INFO">NAME: 00-overhead-15-remove</msg>
<status status="PASS" starttime="20201115 22:04:51.113" endtime="20201115 22:04:51.116"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:51.121" level="INFO">VALUE: [4.957999999999352e-06, 4.889000000000976e-06, 4.943999999999782e-06, 4.973000000005334e-06, 4.957999999999352e-06, 4.930999999999686e-06, 4.9449999999992555e-06, 4.943999999999782e-06, 4.957999999999352e-06, 4.9589999999988255e-06, 4.9449999999992555e-06, 4.930000000000212e-06, 4.917000000000116e-06, 4.9589999999988255e-06, 4.9589999999988255e-06, 4.9449999999992555e-06, 4.9589999999988255e-06, 4.957999999999352e-06, 4.943999999999782e-06, 4.930000000000212e-06, 4.971999999998922e-06, 4.9589999999988255e-06, 4.973000000005334e-06, 4.930999999999686e-06, 4.957999999999352e-06, 4.943999999999782e-06, 4.889000000000976e-06, 4.930999999999686e-06, 4.9449999999992555e-06, 4.943999999999782e-06, 4.9449999999992555e-06, 4.943999999999782e-06, 4.958000000006291e-06, 4.9449999999992555e-06, 4.943999999999782e-06, 4.9449999999992555e-06, 4.957999999999352e-06, 4.957999999999352e-06, 4.930000000000212e-06, 4.889000000007915e-06, 4.9450000000061944e-06, 4.971999999991983e-06, 4.957999999999352e-06, 4.930999999999686e-06, 4.915999999993703e-06, 4.9450000000061944e-06, 4.985999999998492e-06, 4.930000000000212e-06, 4.959000000012703e-06, 4.944999999992317e-06]</msg>
<status status="PASS" starttime="20201115 22:04:51.118" endtime="20201115 22:04:51.122"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:51.106" endtime="20201115 22:04:51.124"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:51.131" endtime="20201115 22:04:51.133"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:51.139" endtime="20201115 22:04:51.161"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:51.135" endtime="20201115 22:04:51.163"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:51.126" endtime="20201115 22:04:51.164"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:50.582" endtime="20201115 22:04:51.165"></status>
</kw>
<msg timestamp="20201115 22:04:51.166" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:51.189" endtime="20201115 22:04:51.219"></status>
</kw>
<msg timestamp="20201115 22:04:51.220" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:51.186" endtime="20201115 22:04:51.220"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:51.227" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:51.222" endtime="20201115 22:04:51.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:51.229" endtime="20201115 22:04:51.233"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:51.178" endtime="20201115 22:04:51.235"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:51.172" endtime="20201115 22:04:51.236"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:51.253" endtime="20201115 22:04:51.607"></status>
</kw>
<msg timestamp="20201115 22:04:51.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042375306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042380278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:51.250" endtime="20201115 22:04:51.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:51.633" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042375306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042380278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:51.617" endtime="20201115 22:04:51.634"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:51.635" endtime="20201115 22:04:51.641"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:51.243" endtime="20201115 22:04:51.642"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:51.238" endtime="20201115 22:04:51.644"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:51.655" level="INFO">${RESULT} = [{'time': 0.042380278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.971999999998922e-06, 'source_diff': 4.971999999998922e-06}, {'time': 0.042763569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:51.646" endtime="20201115 22:04:51.656"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:51.687" level="INFO">${OVERHEAD} = {'time': [0.042380278, 0.042763569, 0.043147431, 0.043533778, 0.043914194, 0.044297583, 0.044683722, 0.045066417, 0.045449653, 0.045834139, 0.046217333, 0.046596694, 0.046983556, 0.047365083, 0.047748...</msg>
<status status="PASS" starttime="20201115 22:04:51.657" endtime="20201115 22:04:51.687"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:51.698" level="INFO">NAME: 00-overhead-15-remove</msg>
<status status="PASS" starttime="20201115 22:04:51.696" endtime="20201115 22:04:51.699"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:51.703" level="INFO">VALUE: [4.971999999998922e-06, 4.930000000000212e-06, 4.9589999999988255e-06, 5.0000000000050004e-06, 4.929999999993273e-06, 4.930000000000212e-06, 4.957999999999352e-06, 4.9589999999988255e-06, 4.9589999999988255e-06, 4.958000000006291e-06, 4.943999999999782e-06, 4.943999999999782e-06, 4.9449999999992555e-06, 4.957999999999352e-06, 4.9589999999988255e-06, 4.930999999999686e-06, 4.9449999999992555e-06, 4.930000000000212e-06, 4.972999999998395e-06, 4.973000000005334e-06, 4.943999999999782e-06, 4.9449999999992555e-06, 4.930999999999686e-06, 4.957999999999352e-06, 4.943999999999782e-06, 4.943999999999782e-06, 4.986999999997965e-06, 4.957999999999352e-06, 4.957999999999352e-06, 4.9589999999988255e-06, 4.972999999998395e-06, 4.943999999999782e-06, 5.0000000000050004e-06, 4.930000000000212e-06, 4.959000000005764e-06, 4.943999999999782e-06, 4.957999999999352e-06, 4.943999999999782e-06, 4.930000000000212e-06, 4.9999999999980616e-06, 4.957999999999352e-06, 4.916000000000642e-06, 4.943999999999782e-06, 4.943999999999782e-06, 4.930999999999686e-06, 4.957999999999352e-06, 4.930999999999686e-06, 4.971999999998922e-06, 4.9449999999992555e-06, 4.985999999998492e-06]</msg>
<status status="PASS" starttime="20201115 22:04:51.700" endtime="20201115 22:04:51.704"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:51.688" endtime="20201115 22:04:51.706"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:51.712" endtime="20201115 22:04:51.715"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:51.721" endtime="20201115 22:04:51.743"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:51.717" endtime="20201115 22:04:51.745"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:51.708" endtime="20201115 22:04:51.746"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:51.167" endtime="20201115 22:04:51.747"></status>
</kw>
<msg timestamp="20201115 22:04:51.748" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:51.772" endtime="20201115 22:04:51.802"></status>
</kw>
<msg timestamp="20201115 22:04:51.803" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:51.768" endtime="20201115 22:04:51.803"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:51.809" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:51.805" endtime="20201115 22:04:51.810"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:51.812" endtime="20201115 22:04:51.815"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:51.760" endtime="20201115 22:04:51.817"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:51.754" endtime="20201115 22:04:51.819"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:51.836" endtime="20201115 22:04:52.188"></status>
</kw>
<msg timestamp="20201115 22:04:52.196" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043190486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043195431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:51.832" endtime="20201115 22:04:52.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:52.214" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043190486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043195431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:52.198" endtime="20201115 22:04:52.215"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:52.217" endtime="20201115 22:04:52.222"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:51.825" endtime="20201115 22:04:52.224"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:51.820" endtime="20201115 22:04:52.225"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:52.236" level="INFO">${RESULT} = [{'time': 0.043195431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.9449999999992555e-06, 'source_diff': 4.9449999999992555e-06}, {'time': 0.043576, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:04:52.227" endtime="20201115 22:04:52.237"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:52.268" level="INFO">${OVERHEAD} = {'time': [0.043195431, 0.043576, 0.043960583, 0.044343153, 0.044724, 0.045104611, 0.045485361, 0.045866861, 0.046248208, 0.046631167, 0.047014014, 0.047394861, 0.047778111, 0.048159042, 0.048541028, 0...</msg>
<status status="PASS" starttime="20201115 22:04:52.238" endtime="20201115 22:04:52.268"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:52.279" level="INFO">NAME: 00-overhead-15-remove</msg>
<status status="PASS" starttime="20201115 22:04:52.277" endtime="20201115 22:04:52.280"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:52.285" level="INFO">VALUE: [4.9449999999992555e-06, 4.943999999999782e-06, 4.889000000000976e-06, 4.972000000005861e-06, 4.930999999999686e-06, 4.943999999999782e-06, 4.957999999999352e-06, 4.930000000000212e-06, 4.957999999999352e-06, 4.9449999999992555e-06, 4.9449999999992555e-06, 4.930000000000212e-06, 4.943999999999782e-06, 4.9589999999988255e-06, 4.9589999999988255e-06, 4.9449999999992555e-06, 4.930000000000212e-06, 4.903000000000546e-06, 4.9449999999992555e-06, 4.9450000000061944e-06, 4.957999999999352e-06, 4.930999999999686e-06, 4.930999999999686e-06, 4.957999999999352e-06, 4.957999999999352e-06, 4.9449999999992555e-06, 4.943999999999782e-06, 4.957999999999352e-06, 4.957999999999352e-06, 4.943999999999782e-06, 4.9449999999992555e-06, 4.9310000000066245e-06, 4.971999999998922e-06, 4.957999999999352e-06, 4.9449999999992555e-06, 4.917000000000116e-06, 4.957999999999352e-06, 4.957999999999352e-06, 4.943999999999782e-06, 4.9449999999992555e-06, 4.9449999999992555e-06, 4.9450000000061944e-06, 4.9589999999988255e-06, 4.9999999999980616e-06, 4.9449999999992555e-06, 4.9999999999980616e-06, 4.943999999999782e-06, 4.9589999999988255e-06, 4.889000000000976e-06, 4.9450000000061944e-06]</msg>
<status status="PASS" starttime="20201115 22:04:52.282" endtime="20201115 22:04:52.286"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:52.270" endtime="20201115 22:04:52.287"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:52.294" endtime="20201115 22:04:52.297"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:52.302" endtime="20201115 22:04:52.324"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:52.298" endtime="20201115 22:04:52.326"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:52.289" endtime="20201115 22:04:52.328"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:51.749" endtime="20201115 22:04:52.329"></status>
</kw>
<msg timestamp="20201115 22:04:52.330" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:52.353" endtime="20201115 22:04:52.383"></status>
</kw>
<msg timestamp="20201115 22:04:52.384" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:52.350" endtime="20201115 22:04:52.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:52.390" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:52.386" endtime="20201115 22:04:52.391"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:52.393" endtime="20201115 22:04:52.397"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:52.342" endtime="20201115 22:04:52.398"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:52.336" endtime="20201115 22:04:52.400"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:52.417" endtime="20201115 22:04:52.770"></status>
</kw>
<msg timestamp="20201115 22:04:52.777" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043136542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043141486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:52.413" endtime="20201115 22:04:52.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:52.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043136542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043141486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:52.779" endtime="20201115 22:04:52.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:52.798" endtime="20201115 22:04:52.803"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:52.406" endtime="20201115 22:04:52.805"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:52.401" endtime="20201115 22:04:52.807"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:52.817" level="INFO">${RESULT} = [{'time': 0.043141486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.943999999999782e-06, 'source_diff': 4.943999999999782e-06}, {'time': 0.043525569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:52.808" endtime="20201115 22:04:52.818"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:52.849" level="INFO">${OVERHEAD} = {'time': [0.043141486, 0.043525569, 0.0439095, 0.044290347, 0.044674028, 0.045058722, 0.045439806, 0.04582125, 0.046203167, 0.046588375, 0.046973708, 0.047359333, 0.047743333, 0.048125194, 0.048508111...</msg>
<status status="PASS" starttime="20201115 22:04:52.820" endtime="20201115 22:04:52.849"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:52.860" level="INFO">NAME: 00-overhead-15-remove</msg>
<status status="PASS" starttime="20201115 22:04:52.858" endtime="20201115 22:04:52.861"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:52.866" level="INFO">VALUE: [4.943999999999782e-06, 4.943999999999782e-06, 4.957999999999352e-06, 4.930000000000212e-06, 4.9449999999992555e-06, 5.01400000000457e-06, 4.917000000000116e-06, 4.971999999998922e-06, 4.959000000005764e-06, 4.971999999998922e-06, 4.916000000000642e-06, 4.944000000006721e-06, 4.943999999999782e-06, 4.958000000006291e-06, 4.875000000001406e-06, 4.943999999999782e-06, 4.971999999998922e-06, 4.888999999994037e-06, 4.972999999998395e-06, 4.9449999999992555e-06, 4.957999999999352e-06, 4.916000000000642e-06, 4.9589999999988255e-06, 4.9999999999980616e-06, 5.01400000000457e-06, 4.943999999999782e-06, 4.930999999999686e-06, 4.9589999999988255e-06, 4.9449999999992555e-06, 4.944000000006721e-06, 4.9449999999992555e-06, 4.957999999999352e-06, 4.9449999999992555e-06, 4.957999999999352e-06, 4.902000000001072e-06, 4.957999999999352e-06, 4.959000000005764e-06, 4.957999999999352e-06, 4.943999999999782e-06, 5.0139999999976315e-06, 4.943999999999782e-06, 4.930999999999686e-06, 4.917000000000116e-06, 4.943999999999782e-06, 4.943999999999782e-06, 4.957999999999352e-06, 4.930999999999686e-06, 4.958000000006291e-06, 4.9589999999988255e-06, 4.957999999999352e-06]</msg>
<status status="PASS" starttime="20201115 22:04:52.862" endtime="20201115 22:04:52.867"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:52.851" endtime="20201115 22:04:52.868"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:52.881" endtime="20201115 22:04:52.883"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:52.889" endtime="20201115 22:04:52.911"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:52.885" endtime="20201115 22:04:52.913"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:52.875" endtime="20201115 22:04:52.915"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:52.331" endtime="20201115 22:04:52.915"></status>
</kw>
<msg timestamp="20201115 22:04:52.916" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:52.940" endtime="20201115 22:04:52.969"></status>
</kw>
<msg timestamp="20201115 22:04:52.970" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:52.936" endtime="20201115 22:04:52.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:52.977" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:52.973" endtime="20201115 22:04:52.977"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:52.979" endtime="20201115 22:04:52.983"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:52.929" endtime="20201115 22:04:52.985"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:52.923" endtime="20201115 22:04:52.986"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:53.003" endtime="20201115 22:04:53.356"></status>
</kw>
<msg timestamp="20201115 22:04:53.363" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042516917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042521861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:53.000" endtime="20201115 22:04:53.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:53.381" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042516917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042521861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:53.365" endtime="20201115 22:04:53.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:53.384" endtime="20201115 22:04:53.391"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:52.992" endtime="20201115 22:04:53.393"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:52.987" endtime="20201115 22:04:53.394"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:53.405" level="INFO">${RESULT} = [{'time': 0.042521861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.943999999999782e-06, 'source_diff': 4.943999999999782e-06}, {'time': 0.042903694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:53.396" endtime="20201115 22:04:53.406"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:53.437" level="INFO">${OVERHEAD} = {'time': [0.042521861, 0.042903694, 0.043286444, 0.043671069, 0.04405675, 0.044436264, 0.044816819, 0.045200153, 0.045584722, 0.045970653, 0.046355347, 0.046740236, 0.04712125, 0.047506542, 0.04789219...</msg>
<status status="PASS" starttime="20201115 22:04:53.407" endtime="20201115 22:04:53.437"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:53.448" level="INFO">NAME: 00-overhead-15-remove</msg>
<status status="PASS" starttime="20201115 22:04:53.446" endtime="20201115 22:04:53.449"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:53.454" level="INFO">VALUE: [4.943999999999782e-06, 4.943999999999782e-06, 4.943999999999782e-06, 4.943999999999782e-06, 4.930999999999686e-06, 4.9450000000061944e-06, 4.930000000000212e-06, 4.9449999999992555e-06, 4.943999999999782e-06, 4.9999999999980616e-06, 4.957999999999352e-06, 4.943999999999782e-06, 4.944000000006721e-06, 4.9449999999992555e-06, 4.9999999999980616e-06, 4.943999999999782e-06, 4.957999999999352e-06, 4.943999999999782e-06, 4.930000000000212e-06, 4.9449999999992555e-06, 4.875000000001406e-06, 4.959000000005764e-06, 4.930000000000212e-06, 4.943999999999782e-06, 4.9449999999992555e-06, 4.943999999999782e-06, 5.027999999997201e-06, 4.9999999999980616e-06, 4.943999999999782e-06, 5.012999999998158e-06, 4.957999999999352e-06, 5.0000000000050004e-06, 4.957999999999352e-06, 4.9449999999992555e-06, 4.9589999999988255e-06, 4.957999999999352e-06, 4.943999999999782e-06, 4.943999999999782e-06, 4.9589999999988255e-06, 4.958000000006291e-06, 4.889000000000976e-06, 4.943999999999782e-06, 4.957999999999352e-06, 4.903000000000546e-06, 4.957999999999352e-06, 4.943999999999782e-06, 4.943999999999782e-06, 4.943999999999782e-06, 4.943999999999782e-06, 5.01400000000457e-06]</msg>
<status status="PASS" starttime="20201115 22:04:53.450" endtime="20201115 22:04:53.455"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:53.439" endtime="20201115 22:04:53.457"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:53.464" endtime="20201115 22:04:53.466"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:53.472" endtime="20201115 22:04:53.494"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:53.467" endtime="20201115 22:04:53.496"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:53.459" endtime="20201115 22:04:53.498"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:52.917" endtime="20201115 22:04:53.498"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:50.578" endtime="20201115 22:04:53.499"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:50.576" endtime="20201115 22:04:53.499"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:04:53.505" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:53.529" endtime="20201115 22:04:53.560"></status>
</kw>
<msg timestamp="20201115 22:04:53.561" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:53.526" endtime="20201115 22:04:53.562"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:53.568" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:53.564" endtime="20201115 22:04:53.569"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:53.570" endtime="20201115 22:04:53.574"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:53.518" endtime="20201115 22:04:53.576"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:53.512" endtime="20201115 22:04:53.577"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:53.594" endtime="20201115 22:04:53.948"></status>
</kw>
<msg timestamp="20201115 22:04:53.955" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049692417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049697597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:53.591" endtime="20201115 22:04:53.956"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:53.974" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049692417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049697597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:53.958" endtime="20201115 22:04:53.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:53.976" endtime="20201115 22:04:53.980"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:53.583" endtime="20201115 22:04:53.982"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:53.579" endtime="20201115 22:04:53.984"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:53.994" level="INFO">${RESULT} = [{'time': 0.049697597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.180000000000462e-06, 'source_diff': 5.180000000000462e-06}, {'time': 0.050108014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:53.985" endtime="20201115 22:04:53.995"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:54.026" level="INFO">${OVERHEAD} = {'time': [0.049697597, 0.050108014, 0.050516833, 0.050928917, 0.051336431, 0.051741306, 0.052148083, 0.052558389, 0.052969375, 0.053379708, 0.053790861, 0.054198083, 0.054605042, 0.055010583, 0.055419...</msg>
<status status="PASS" starttime="20201115 22:04:53.997" endtime="20201115 22:04:54.027"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:54.037" level="INFO">NAME: 00-overhead-16-remove</msg>
<status status="PASS" starttime="20201115 22:04:54.035" endtime="20201115 22:04:54.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:54.044" level="INFO">VALUE: [5.180000000000462e-06, 5.167000000000366e-06, 5.138999999994287e-06, 5.180999999999936e-06, 5.1949999999995056e-06, 5.139000000001226e-06, 5.166000000000892e-06, 5.152999999993857e-06, 5.167000000000366e-06, 5.152000000001322e-06, 5.2360000000056806e-06, 5.139000000001226e-06, 5.153000000000796e-06, 5.139000000001226e-06, 5.153000000000796e-06, 5.153000000000796e-06, 5.153000000000796e-06, 5.153000000000796e-06, 5.152999999993857e-06, 5.152999999993857e-06, 5.153000000000796e-06, 5.167000000000366e-06, 5.153000000000796e-06, 5.166000000000892e-06, 5.166000000000892e-06, 5.167000000000366e-06, 5.152999999993857e-06, 5.167000000000366e-06, 5.153000000000796e-06, 5.166000000000892e-06, 5.180999999999936e-06, 5.165999999993953e-06, 5.167000000000366e-06, 5.167000000000366e-06, 5.167000000000366e-06, 5.153000000007735e-06, 5.1810000000068746e-06, 5.111000000002086e-06, 5.152999999993857e-06, 5.153000000007735e-06, 5.111000000002086e-06, 5.139000000001226e-06, 5.167000000000366e-06, 5.208000000006541e-06, 5.207999999992663e-06, 5.153000000007735e-06, 5.167000000000366e-06, 5.152999999993857e-06, 5.151999999994383e-06, 5.153000000007735e-06]</msg>
<status status="PASS" starttime="20201115 22:04:54.040" endtime="20201115 22:04:54.045"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:54.028" endtime="20201115 22:04:54.046"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:54.053" endtime="20201115 22:04:54.055"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:54.061" endtime="20201115 22:04:54.083"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:54.057" endtime="20201115 22:04:54.085"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:54.048" endtime="20201115 22:04:54.087"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:53.506" endtime="20201115 22:04:54.087"></status>
</kw>
<msg timestamp="20201115 22:04:54.088" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:54.111" endtime="20201115 22:04:54.142"></status>
</kw>
<msg timestamp="20201115 22:04:54.144" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:54.108" endtime="20201115 22:04:54.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:54.150" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:54.146" endtime="20201115 22:04:54.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:54.152" endtime="20201115 22:04:54.156"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:54.100" endtime="20201115 22:04:54.158"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:54.094" endtime="20201115 22:04:54.159"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:54.176" endtime="20201115 22:04:54.530"></status>
</kw>
<msg timestamp="20201115 22:04:54.537" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042348111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042353347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:54.173" endtime="20201115 22:04:54.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:54.556" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042348111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042353347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:54.539" endtime="20201115 22:04:54.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:54.558" endtime="20201115 22:04:54.564"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:54.166" endtime="20201115 22:04:54.566"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:54.161" endtime="20201115 22:04:54.567"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:54.578" level="INFO">${RESULT} = [{'time': 0.042353347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.235999999998742e-06, 'source_diff': 5.235999999998742e-06}, {'time': 0.042763278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:54.569" endtime="20201115 22:04:54.579"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:54.609" level="INFO">${OVERHEAD} = {'time': [0.042353347, 0.042763278, 0.043171222, 0.043581583, 0.043988653, 0.044400083, 0.044807347, 0.045218431, 0.045627153, 0.046037153, 0.046448833, 0.046856861, 0.047268597, 0.047677556, 0.048088...</msg>
<status status="PASS" starttime="20201115 22:04:54.580" endtime="20201115 22:04:54.611"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:54.621" level="INFO">NAME: 00-overhead-16-remove</msg>
<status status="PASS" starttime="20201115 22:04:54.619" endtime="20201115 22:04:54.622"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:54.627" level="INFO">VALUE: [5.235999999998742e-06, 5.153000000000796e-06, 5.166000000000892e-06, 5.152000000001322e-06, 5.167000000000366e-06, 5.152000000001322e-06, 5.124999999994717e-06, 5.153000000000796e-06, 5.152999999993857e-06, 5.153000000000796e-06, 5.194000000000032e-06, 5.153000000000796e-06, 5.153000000000796e-06, 5.180999999999936e-06, 5.125000000001656e-06, 5.194000000000032e-06, 5.151999999994383e-06, 5.151999999994383e-06, 5.153000000000796e-06, 5.180999999999936e-06, 5.152000000001322e-06, 5.152999999993857e-06, 5.152000000001322e-06, 5.235999999998742e-06, 5.167000000000366e-06, 5.138000000001752e-06, 5.166000000000892e-06, 5.138000000001752e-06, 5.167000000000366e-06, 5.180999999999936e-06, 5.207999999999602e-06, 5.139000000001226e-06, 5.139000000001226e-06, 5.153000000000796e-06, 5.221999999999172e-06, 5.153000000000796e-06, 5.167000000000366e-06, 5.167000000000366e-06, 5.209000000006014e-06, 5.153000000000796e-06, 5.180999999999936e-06, 5.139000000001226e-06, 5.167000000000366e-06, 5.167000000000366e-06, 5.167000000000366e-06, 5.125000000001656e-06, 5.153000000000796e-06, 5.152000000001322e-06, 5.167000000000366e-06, 5.167000000000366e-06]</msg>
<status status="PASS" starttime="20201115 22:04:54.624" endtime="20201115 22:04:54.628"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:54.612" endtime="20201115 22:04:54.630"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:54.636" endtime="20201115 22:04:54.639"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:54.645" endtime="20201115 22:04:54.667"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:54.640" endtime="20201115 22:04:54.668"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:54.631" endtime="20201115 22:04:54.670"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:54.089" endtime="20201115 22:04:54.671"></status>
</kw>
<msg timestamp="20201115 22:04:54.671" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:54.695" endtime="20201115 22:04:54.726"></status>
</kw>
<msg timestamp="20201115 22:04:54.727" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:54.691" endtime="20201115 22:04:54.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:54.734" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:54.729" endtime="20201115 22:04:54.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:54.736" endtime="20201115 22:04:54.740"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:54.684" endtime="20201115 22:04:54.741"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:54.678" endtime="20201115 22:04:54.743"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:54.760" endtime="20201115 22:04:55.113"></status>
</kw>
<msg timestamp="20201115 22:04:55.120" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042568181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042573347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:54.756" endtime="20201115 22:04:55.120"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:55.138" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042568181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042573347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:55.122" endtime="20201115 22:04:55.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:55.141" endtime="20201115 22:04:55.146"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:54.749" endtime="20201115 22:04:55.148"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:54.744" endtime="20201115 22:04:55.149"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:55.160" level="INFO">${RESULT} = [{'time': 0.042573347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.166000000000892e-06, 'source_diff': 5.166000000000892e-06}, {'time': 0.042978972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:55.151" endtime="20201115 22:04:55.161"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:55.192" level="INFO">${OVERHEAD} = {'time': [0.042573347, 0.042978972, 0.043389944, 0.043797222, 0.044204958, 0.044615222, 0.045026125, 0.045435792, 0.045842125, 0.046249722, 0.046656903, 0.047064639, 0.047471444, 0.047881014, 0.048291...</msg>
<status status="PASS" starttime="20201115 22:04:55.163" endtime="20201115 22:04:55.193"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:55.203" level="INFO">NAME: 00-overhead-16-remove</msg>
<status status="PASS" starttime="20201115 22:04:55.201" endtime="20201115 22:04:55.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:55.209" level="INFO">VALUE: [5.166000000000892e-06, 5.152999999993857e-06, 5.152000000001322e-06, 5.152999999993857e-06, 5.139000000001226e-06, 5.139000000001226e-06, 5.167000000000366e-06, 5.167000000000366e-06, 5.110999999995147e-06, 5.139000000001226e-06, 5.111000000002086e-06, 5.139000000001226e-06, 5.166000000000892e-06, 5.139000000001226e-06, 5.166000000000892e-06, 5.152999999993857e-06, 5.180999999999936e-06, 5.153000000000796e-06, 5.180999999999936e-06, 5.139000000001226e-06, 5.08400000000242e-06, 5.153000000000796e-06, 5.221999999999172e-06, 5.096999999995577e-06, 5.139000000001226e-06, 5.167000000000366e-06, 5.139000000001226e-06, 5.152000000001322e-06, 5.207999999999602e-06, 5.167000000000366e-06, 5.139000000001226e-06, 5.166000000000892e-06, 5.138999999994287e-06, 5.166000000000892e-06, 5.180000000000462e-06, 5.166000000000892e-06, 5.110999999995147e-06, 5.151999999994383e-06, 5.139000000001226e-06, 5.167000000000366e-06, 5.222999999998645e-06, 5.166000000000892e-06, 5.207999999999602e-06, 5.167000000000366e-06, 5.139000000001226e-06, 5.153000000000796e-06, 5.125000000001656e-06, 5.153000000000796e-06, 5.153000000000796e-06, 5.139000000001226e-06]</msg>
<status status="PASS" starttime="20201115 22:04:55.206" endtime="20201115 22:04:55.210"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:55.194" endtime="20201115 22:04:55.212"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:55.218" endtime="20201115 22:04:55.221"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:55.227" endtime="20201115 22:04:55.249"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:55.222" endtime="20201115 22:04:55.250"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:55.213" endtime="20201115 22:04:55.252"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:54.672" endtime="20201115 22:04:55.253"></status>
</kw>
<msg timestamp="20201115 22:04:55.253" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:55.277" endtime="20201115 22:04:55.308"></status>
</kw>
<msg timestamp="20201115 22:04:55.309" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:55.273" endtime="20201115 22:04:55.309"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:55.315" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:55.311" endtime="20201115 22:04:55.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:55.318" endtime="20201115 22:04:55.322"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:55.266" endtime="20201115 22:04:55.323"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:55.260" endtime="20201115 22:04:55.325"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:55.342" endtime="20201115 22:04:55.694"></status>
</kw>
<msg timestamp="20201115 22:04:55.701" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042512431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042517583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:55.338" endtime="20201115 22:04:55.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:55.719" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042512431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042517583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:55.704" endtime="20201115 22:04:55.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:55.723" endtime="20201115 22:04:55.730"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:55.331" endtime="20201115 22:04:55.732"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:55.326" endtime="20201115 22:04:55.733"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:55.744" level="INFO">${RESULT} = [{'time': 0.042517583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.151999999994383e-06, 'source_diff': 5.151999999994383e-06}, {'time': 0.042928556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:55.735" endtime="20201115 22:04:55.745"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:55.775" level="INFO">${OVERHEAD} = {'time': [0.042517583, 0.042928556, 0.043338111, 0.0437485, 0.044155722, 0.044566236, 0.044973653, 0.045381958, 0.045793236, 0.046206014, 0.046614958, 0.047026556, 0.047433931, 0.047842347, 0.04825326...</msg>
<status status="PASS" starttime="20201115 22:04:55.746" endtime="20201115 22:04:55.776"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:55.787" level="INFO">NAME: 00-overhead-16-remove</msg>
<status status="PASS" starttime="20201115 22:04:55.784" endtime="20201115 22:04:55.787"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:55.792" level="INFO">VALUE: [5.151999999994383e-06, 5.167000000000366e-06, 5.139000000001226e-06, 5.153000000000796e-06, 5.166000000000892e-06, 5.153000000000796e-06, 5.180999999999936e-06, 5.180000000000462e-06, 5.153000000000796e-06, 5.207999999999602e-06, 5.180000000000462e-06, 5.138999999994287e-06, 5.222999999998645e-06, 5.166000000000892e-06, 5.152999999993857e-06, 5.153000000000796e-06, 5.097000000002516e-06, 5.153000000000796e-06, 5.097000000002516e-06, 5.166000000000892e-06, 5.153000000000796e-06, 5.139000000001226e-06, 5.152000000001322e-06, 5.180999999999936e-06, 5.153000000000796e-06, 5.180999999999936e-06, 5.180999999999936e-06, 5.166000000000892e-06, 5.221999999999172e-06, 5.180000000000462e-06, 5.153000000000796e-06, 5.180000000000462e-06, 5.097000000002516e-06, 5.166000000000892e-06, 5.166000000000892e-06, 5.125000000001656e-06, 5.153000000000796e-06, 5.111000000002086e-06, 5.152999999993857e-06, 5.180999999999936e-06, 5.096999999995577e-06, 5.153000000000796e-06, 5.166000000000892e-06, 5.167000000000366e-06, 5.167000000000366e-06, 5.166000000000892e-06, 5.152000000001322e-06, 5.152000000001322e-06, 5.180999999999936e-06, 5.152999999993857e-06]</msg>
<status status="PASS" starttime="20201115 22:04:55.789" endtime="20201115 22:04:55.793"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:55.777" endtime="20201115 22:04:55.795"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:55.801" endtime="20201115 22:04:55.804"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:55.810" endtime="20201115 22:04:55.832"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:55.805" endtime="20201115 22:04:55.834"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:55.796" endtime="20201115 22:04:55.835"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:55.254" endtime="20201115 22:04:55.836"></status>
</kw>
<msg timestamp="20201115 22:04:55.836" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:55.860" endtime="20201115 22:04:55.891"></status>
</kw>
<msg timestamp="20201115 22:04:55.892" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:55.856" endtime="20201115 22:04:55.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:55.898" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:55.894" endtime="20201115 22:04:55.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:55.901" endtime="20201115 22:04:55.905"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:55.849" endtime="20201115 22:04:55.906"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:55.843" endtime="20201115 22:04:55.908"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:55.925" endtime="20201115 22:04:56.277"></status>
</kw>
<msg timestamp="20201115 22:04:56.284" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042562333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042567514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:55.921" endtime="20201115 22:04:56.286"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:56.304" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042562333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042567514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:56.287" endtime="20201115 22:04:56.305"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:56.306" endtime="20201115 22:04:56.312"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:55.914" endtime="20201115 22:04:56.313"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:55.909" endtime="20201115 22:04:56.315"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:56.326" level="INFO">${RESULT} = [{'time': 0.042567514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.180999999999936e-06, 'source_diff': 5.180999999999936e-06}, {'time': 0.042979542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:56.317" endtime="20201115 22:04:56.326"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:56.357" level="INFO">${OVERHEAD} = {'time': [0.042567514, 0.042979542, 0.043389181, 0.043796694, 0.044202542, 0.044611403, 0.045021083, 0.045429903, 0.045840653, 0.046249208, 0.046655528, 0.047063083, 0.047470903, 0.047882431, 0.048293...</msg>
<status status="PASS" starttime="20201115 22:04:56.328" endtime="20201115 22:04:56.358"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:56.368" level="INFO">NAME: 00-overhead-16-remove</msg>
<status status="PASS" starttime="20201115 22:04:56.366" endtime="20201115 22:04:56.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:56.374" level="INFO">VALUE: [5.180999999999936e-06, 5.111000000002086e-06, 5.139000000001226e-06, 5.137999999994813e-06, 5.138999999994287e-06, 5.153000000000796e-06, 5.125000000001656e-06, 5.180999999999936e-06, 5.2089999999990755e-06, 5.152000000001322e-06, 5.167000000000366e-06, 5.139000000001226e-06, 5.153000000000796e-06, 5.139000000001226e-06, 5.139000000001226e-06, 5.167000000000366e-06, 5.167000000000366e-06, 5.194000000000032e-06, 5.152999999993857e-06, 5.167000000000366e-06, 5.167000000000366e-06, 5.167000000000366e-06, 5.124999999994717e-06, 5.152000000001322e-06, 5.166000000000892e-06, 5.180000000000462e-06, 5.153000000000796e-06, 5.139000000001226e-06, 5.167000000000366e-06, 5.153000000000796e-06, 5.153000000000796e-06, 5.221999999999172e-06, 5.153000000000796e-06, 5.166999999993427e-06, 5.180999999999936e-06, 5.153000000000796e-06, 5.139000000001226e-06, 5.139000000001226e-06, 5.167000000000366e-06, 5.166000000000892e-06, 5.167000000000366e-06, 5.138000000001752e-06, 5.180999999999936e-06, 5.139000000001226e-06, 5.138999999994287e-06, 5.153000000000796e-06, 5.153000000000796e-06, 5.167000000000366e-06, 5.153000000000796e-06, 5.180000000007401e-06]</msg>
<status status="PASS" starttime="20201115 22:04:56.371" endtime="20201115 22:04:56.375"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:56.359" endtime="20201115 22:04:56.376"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:56.383" endtime="20201115 22:04:56.386"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:56.391" endtime="20201115 22:04:56.413"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:56.387" endtime="20201115 22:04:56.415"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:56.378" endtime="20201115 22:04:56.417"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:55.837" endtime="20201115 22:04:56.417"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:53.502" endtime="20201115 22:04:56.418"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:53.500" endtime="20201115 22:04:56.418"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:04:56.423" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:56.447" endtime="20201115 22:04:56.479"></status>
</kw>
<msg timestamp="20201115 22:04:56.480" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:56.444" endtime="20201115 22:04:56.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:56.487" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:56.483" endtime="20201115 22:04:56.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:56.489" endtime="20201115 22:04:56.493"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:56.436" endtime="20201115 22:04:56.495"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:56.430" endtime="20201115 22:04:56.497"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:56.514" endtime="20201115 22:04:56.870"></status>
</kw>
<msg timestamp="20201115 22:04:56.877" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047793472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047798778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:56.510" endtime="20201115 22:04:56.877"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:56.895" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047793472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047798778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:56.879" endtime="20201115 22:04:56.896"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:56.898" endtime="20201115 22:04:56.902"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:56.503" endtime="20201115 22:04:56.903"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:56.498" endtime="20201115 22:04:56.905"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:56.916" level="INFO">${RESULT} = [{'time': 0.047798778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.30600000000353e-06, 'source_diff': 5.30600000000353e-06}, {'time': 0.048236944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:04:56.907" endtime="20201115 22:04:56.916"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:56.947" level="INFO">${OVERHEAD} = {'time': [0.047798778, 0.048236944, 0.048671514, 0.049106014, 0.049540361, 0.049977597, 0.050415986, 0.050853486, 0.051288861, 0.051723806, 0.052160653, 0.052596444, 0.053033167, 0.053466056, 0.053903...</msg>
<status status="PASS" starttime="20201115 22:04:56.918" endtime="20201115 22:04:56.948"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:56.958" level="INFO">NAME: 00-overhead-17-remove</msg>
<status status="PASS" starttime="20201115 22:04:56.956" endtime="20201115 22:04:56.959"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:56.964" level="INFO">VALUE: [5.30600000000353e-06, 5.374999999994967e-06, 5.291999999997021e-06, 5.375000000001906e-06, 5.389000000001476e-06, 5.360999999995397e-06, 5.361000000002336e-06, 5.347000000002766e-06, 5.291999999997021e-06, 5.388999999994537e-06, 5.33400000000267e-06, 5.361000000002336e-06, 5.389000000001476e-06, 5.333999999995731e-06, 5.319999999996161e-06, 5.429999999993773e-06, 5.360999999995397e-06, 5.374999999994967e-06, 5.346999999995827e-06, 5.347000000002766e-06, 5.346999999995827e-06, 5.361000000002336e-06, 5.375000000001906e-06, 5.375000000001906e-06, 5.290999999997548e-06, 5.346999999995827e-06, 5.374999999994967e-06, 5.346999999995827e-06, 5.360999999995397e-06, 5.375000000001906e-06, 5.389000000001476e-06, 5.34800000000224e-06, 5.360999999995397e-06, 5.361000000002336e-06, 5.375000000001906e-06, 5.361000000009275e-06, 5.362000000008749e-06, 5.360999999995397e-06, 5.319000000003626e-06, 5.375000000001906e-06, 5.362000000008749e-06, 5.332999999996257e-06, 5.388999999994537e-06, 5.375000000001906e-06, 5.360999999995397e-06, 5.375000000001906e-06, 5.319000000003626e-06, 5.375000000001906e-06, 5.360999999995397e-06, 5.375000000001906e-06]</msg>
<status status="PASS" starttime="20201115 22:04:56.961" endtime="20201115 22:04:56.965"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:56.949" endtime="20201115 22:04:56.966"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:56.973" endtime="20201115 22:04:56.976"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:56.981" endtime="20201115 22:04:57.004"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:56.977" endtime="20201115 22:04:57.006"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:56.968" endtime="20201115 22:04:57.008"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:56.425" endtime="20201115 22:04:57.008"></status>
</kw>
<msg timestamp="20201115 22:04:57.009" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:57.033" endtime="20201115 22:04:57.065"></status>
</kw>
<msg timestamp="20201115 22:04:57.066" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:57.029" endtime="20201115 22:04:57.067"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:57.073" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:57.068" endtime="20201115 22:04:57.074"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:57.076" endtime="20201115 22:04:57.080"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:57.021" endtime="20201115 22:04:57.081"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:57.016" endtime="20201115 22:04:57.083"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:57.100" endtime="20201115 22:04:57.453"></status>
</kw>
<msg timestamp="20201115 22:04:57.460" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043242319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043247667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:57.097" endtime="20201115 22:04:57.461"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:57.479" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043242319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043247667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:57.463" endtime="20201115 22:04:57.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:57.481" endtime="20201115 22:04:57.487"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:57.089" endtime="20201115 22:04:57.489"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:57.084" endtime="20201115 22:04:57.490"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:57.501" level="INFO">${RESULT} = [{'time': 0.043247667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.347999999995301e-06, 'source_diff': 5.347999999995301e-06}, {'time': 0.043684889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:57.492" endtime="20201115 22:04:57.501"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:57.533" level="INFO">${OVERHEAD} = {'time': [0.043247667, 0.043684889, 0.044123472, 0.044562139, 0.045000917, 0.045437194, 0.045875556, 0.046310125, 0.046748583, 0.047188208, 0.047622861, 0.048061569, 0.048494361, 0.048926708, 0.049365...</msg>
<status status="PASS" starttime="20201115 22:04:57.503" endtime="20201115 22:04:57.534"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:57.545" level="INFO">NAME: 00-overhead-17-remove</msg>
<status status="PASS" starttime="20201115 22:04:57.542" endtime="20201115 22:04:57.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:57.550" level="INFO">VALUE: [5.347999999995301e-06, 5.388999999994537e-06, 5.360999999995397e-06, 5.375000000001906e-06, 5.375000000001906e-06, 5.375000000001906e-06, 5.374999999994967e-06, 5.375000000001906e-06, 5.361000000002336e-06, 5.375000000001906e-06, 5.347000000002766e-06, 5.387999999995063e-06, 5.361000000002336e-06, 5.304999999997118e-06, 5.388000000002002e-06, 5.375000000001906e-06, 5.374999999994967e-06, 5.389000000001476e-06, 5.374999999994967e-06, 5.34800000000224e-06, 5.347000000002766e-06, 5.360999999995397e-06, 5.332999999996257e-06, 5.375000000001906e-06, 5.375000000001906e-06, 5.417000000000616e-06, 5.374999999994967e-06, 5.291999999997021e-06, 5.333000000003196e-06, 5.3189999999966875e-06, 5.374999999994967e-06, 5.333000000003196e-06, 5.375000000001906e-06, 5.360999999995397e-06, 5.333000000003196e-06, 5.361000000002336e-06, 5.388999999994537e-06, 5.374999999994967e-06, 5.360999999995397e-06, 5.375000000001906e-06, 5.387999999995063e-06, 5.403000000001046e-06, 5.374999999994967e-06, 5.388999999994537e-06, 5.375000000001906e-06, 5.318999999989749e-06, 5.347000000002766e-06, 5.375000000001906e-06, 5.304999999997118e-06, 5.375000000001906e-06]</msg>
<status status="PASS" starttime="20201115 22:04:57.547" endtime="20201115 22:04:57.551"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:57.535" endtime="20201115 22:04:57.553"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:57.559" endtime="20201115 22:04:57.562"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:57.568" endtime="20201115 22:04:57.590"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:57.563" endtime="20201115 22:04:57.591"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:57.554" endtime="20201115 22:04:57.593"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:57.010" endtime="20201115 22:04:57.594"></status>
</kw>
<msg timestamp="20201115 22:04:57.594" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:57.619" endtime="20201115 22:04:57.652"></status>
</kw>
<msg timestamp="20201115 22:04:57.653" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:57.615" endtime="20201115 22:04:57.653"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:57.659" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:57.655" endtime="20201115 22:04:57.660"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:57.662" endtime="20201115 22:04:57.666"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:57.607" endtime="20201115 22:04:57.667"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:57.601" endtime="20201115 22:04:57.669"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:57.688" endtime="20201115 22:04:58.041"></status>
</kw>
<msg timestamp="20201115 22:04:58.048" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043699417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043704833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:57.685" endtime="20201115 22:04:58.049"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:58.067" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043699417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043704833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:58.051" endtime="20201115 22:04:58.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:58.069" endtime="20201115 22:04:58.077"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:57.677" endtime="20201115 22:04:58.078"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:57.671" endtime="20201115 22:04:58.080"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:58.091" level="INFO">${RESULT} = [{'time': 0.043704833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.416000000001142e-06, 'source_diff': 5.416000000001142e-06}, {'time': 0.044139806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:58.082" endtime="20201115 22:04:58.091"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:58.122" level="INFO">${OVERHEAD} = {'time': [0.043704833, 0.044139806, 0.044576431, 0.045015125, 0.045454292, 0.045887444, 0.046324903, 0.046759528, 0.047196389, 0.047630042, 0.0480665, 0.048501528, 0.048938111, 0.049371319, 0.04980623...</msg>
<status status="PASS" starttime="20201115 22:04:58.093" endtime="20201115 22:04:58.123"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:58.133" level="INFO">NAME: 00-overhead-17-remove</msg>
<status status="PASS" starttime="20201115 22:04:58.131" endtime="20201115 22:04:58.134"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:58.139" level="INFO">VALUE: [5.416000000001142e-06, 5.347999999995301e-06, 5.375000000001906e-06, 5.333000000003196e-06, 5.375000000001906e-06, 5.375000000001906e-06, 5.361000000002336e-06, 5.347000000002766e-06, 5.374999999994967e-06, 5.374999999994967e-06, 5.374999999994967e-06, 5.347000000002766e-06, 5.375000000001906e-06, 5.387999999995063e-06, 5.360999999995397e-06, 5.375000000001906e-06, 5.360999999995397e-06, 5.389000000001476e-06, 5.361000000002336e-06, 5.319000000003626e-06, 5.360999999995397e-06, 5.375000000001906e-06, 5.361000000002336e-06, 5.375000000001906e-06, 5.389000000001476e-06, 5.374999999994967e-06, 5.389000000001476e-06, 5.374999999994967e-06, 5.375000000001906e-06, 5.374999999994967e-06, 5.389000000001476e-06, 5.388000000002002e-06, 5.388999999994537e-06, 5.360999999995397e-06, 5.374999999994967e-06, 5.375000000001906e-06, 5.3189999999966875e-06, 5.375000000001906e-06, 5.290999999997548e-06, 5.361000000002336e-06, 5.347999999995301e-06, 5.304999999997118e-06, 5.346999999995827e-06, 5.333000000003196e-06, 5.361000000009275e-06, 5.360999999995397e-06, 5.360999999995397e-06, 5.360999999995397e-06, 5.361000000009275e-06, 5.375000000001906e-06]</msg>
<status status="PASS" starttime="20201115 22:04:58.136" endtime="20201115 22:04:58.140"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:58.124" endtime="20201115 22:04:58.141"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:58.148" endtime="20201115 22:04:58.151"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:58.157" endtime="20201115 22:04:58.179"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:58.152" endtime="20201115 22:04:58.180"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:58.143" endtime="20201115 22:04:58.182"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:57.595" endtime="20201115 22:04:58.188"></status>
</kw>
<msg timestamp="20201115 22:04:58.188" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:58.212" endtime="20201115 22:04:58.245"></status>
</kw>
<msg timestamp="20201115 22:04:58.246" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:58.209" endtime="20201115 22:04:58.246"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:58.252" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:58.248" endtime="20201115 22:04:58.253"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:58.255" endtime="20201115 22:04:58.258"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:58.201" endtime="20201115 22:04:58.260"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:58.195" endtime="20201115 22:04:58.262"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:58.279" endtime="20201115 22:04:58.635"></status>
</kw>
<msg timestamp="20201115 22:04:58.642" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048072542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048077917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:58.275" endtime="20201115 22:04:58.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:58.661" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048072542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048077917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:58.644" endtime="20201115 22:04:58.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:58.663" endtime="20201115 22:04:58.669"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:58.268" endtime="20201115 22:04:58.671"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:58.263" endtime="20201115 22:04:58.672"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:58.684" level="INFO">${RESULT} = [{'time': 0.048077917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.374999999994967e-06, 'source_diff': 5.374999999994967e-06}, {'time': 0.048514681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:58.674" endtime="20201115 22:04:58.684"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:58.715" level="INFO">${OVERHEAD} = {'time': [0.048077917, 0.048514681, 0.048953458, 0.049387264, 0.049821167, 0.050256375, 0.050691458, 0.051131194, 0.051566153, 0.052001542, 0.052440681, 0.052879403, 0.053314681, 0.053748194, 0.054183...</msg>
<status status="PASS" starttime="20201115 22:04:58.686" endtime="20201115 22:04:58.716"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:58.727" level="INFO">NAME: 00-overhead-17-remove</msg>
<status status="PASS" starttime="20201115 22:04:58.724" endtime="20201115 22:04:58.727"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:58.732" level="INFO">VALUE: [5.374999999994967e-06, 5.374999999994967e-06, 5.346999999995827e-06, 5.361000000002336e-06, 5.361000000002336e-06, 5.346999999995827e-06, 5.361000000002336e-06, 5.360999999995397e-06, 5.361000000002336e-06, 5.374999999994967e-06, 5.36200000000181e-06, 5.374999999994967e-06, 5.30600000000353e-06, 5.346999999995827e-06, 5.361000000002336e-06, 5.33400000000267e-06, 5.361000000002336e-06, 5.403000000001046e-06, 5.374999999994967e-06, 5.444000000000282e-06, 5.346999999995827e-06, 5.36200000000181e-06, 5.375000000001906e-06, 5.30600000000353e-06, 5.361000000002336e-06, 5.388999999994537e-06, 5.360999999995397e-06, 5.3050000000040565e-06, 5.375000000001906e-06, 5.401999999994633e-06, 5.374999999994967e-06, 5.375000000001906e-06, 5.347000000002766e-06, 5.375000000001906e-06, 5.375000000001906e-06, 5.360999999995397e-06, 5.360999999995397e-06, 5.333999999995731e-06, 5.388999999994537e-06, 5.361000000009275e-06, 5.346999999988888e-06, 5.375000000001906e-06, 5.403000000001046e-06, 5.374999999988028e-06, 5.360999999995397e-06, 5.375000000001906e-06, 5.34800000000224e-06, 5.375000000001906e-06, 5.361000000009275e-06, 5.360999999995397e-06]</msg>
<status status="PASS" starttime="20201115 22:04:58.729" endtime="20201115 22:04:58.733"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:58.717" endtime="20201115 22:04:58.735"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:58.742" endtime="20201115 22:04:58.745"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:58.751" endtime="20201115 22:04:58.772"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:58.746" endtime="20201115 22:04:58.774"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:58.737" endtime="20201115 22:04:58.776"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:58.190" endtime="20201115 22:04:58.777"></status>
</kw>
<msg timestamp="20201115 22:04:58.777" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:58.801" endtime="20201115 22:04:58.833"></status>
</kw>
<msg timestamp="20201115 22:04:58.834" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:58.797" endtime="20201115 22:04:58.835"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:58.841" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:58.837" endtime="20201115 22:04:58.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:58.843" endtime="20201115 22:04:58.847"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:58.790" endtime="20201115 22:04:58.849"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:58.784" endtime="20201115 22:04:58.851"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:58.868" endtime="20201115 22:04:59.222"></status>
</kw>
<msg timestamp="20201115 22:04:59.229" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042711917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042717278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:58.864" endtime="20201115 22:04:59.230"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:59.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042711917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042717278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:59.232" endtime="20201115 22:04:59.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:59.250" endtime="20201115 22:04:59.256"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:58.857" endtime="20201115 22:04:59.258"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:58.852" endtime="20201115 22:04:59.259"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:59.270" level="INFO">${RESULT} = [{'time': 0.042717278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.360999999995397e-06, 'source_diff': 5.360999999995397e-06}, {'time': 0.043154694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:59.261" endtime="20201115 22:04:59.270"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:59.303" level="INFO">${OVERHEAD} = {'time': [0.042717278, 0.043154694, 0.04359425, 0.044029181, 0.044463861, 0.044901167, 0.045340417, 0.045774875, 0.046208347, 0.046643208, 0.047080333, 0.047513819, 0.047952139, 0.048386194, 0.0488252...</msg>
<status status="PASS" starttime="20201115 22:04:59.272" endtime="20201115 22:04:59.303"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:59.315" level="INFO">NAME: 00-overhead-17-remove</msg>
<status status="PASS" starttime="20201115 22:04:59.313" endtime="20201115 22:04:59.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:59.320" level="INFO">VALUE: [5.360999999995397e-06, 5.361000000002336e-06, 5.361000000002336e-06, 5.36200000000181e-06, 5.375000000001906e-06, 5.34800000000224e-06, 5.277999999997451e-06, 5.361000000002336e-06, 5.360999999995397e-06, 5.375000000001906e-06, 5.361000000002336e-06, 5.388000000002002e-06, 5.431000000000186e-06, 5.319000000003626e-06, 5.30600000000353e-06, 5.34800000000224e-06, 5.304999999997118e-06, 5.375000000001906e-06, 5.332999999996257e-06, 5.374999999994967e-06, 5.361000000002336e-06, 5.389000000001476e-06, 5.361000000002336e-06, 5.361000000002336e-06, 5.361000000002336e-06, 5.360999999995397e-06, 5.375000000001906e-06, 5.361000000002336e-06, 5.403000000001046e-06, 5.361000000002336e-06, 5.360999999995397e-06, 5.360999999995397e-06, 5.375000000001906e-06, 5.375000000001906e-06, 5.374999999994967e-06, 5.375000000001906e-06, 5.361000000002336e-06, 5.375000000001906e-06, 5.389000000001476e-06, 5.361000000002336e-06, 5.360999999995397e-06, 5.290999999997548e-06, 5.346999999995827e-06, 5.360999999995397e-06, 5.347000000002766e-06, 5.319999999996161e-06, 5.361000000009275e-06, 5.403000000001046e-06, 5.360999999995397e-06, 5.375000000001906e-06]</msg>
<status status="PASS" starttime="20201115 22:04:59.317" endtime="20201115 22:04:59.322"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:59.305" endtime="20201115 22:04:59.324"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:59.330" endtime="20201115 22:04:59.333"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:59.339" endtime="20201115 22:04:59.361"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:59.335" endtime="20201115 22:04:59.363"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:59.326" endtime="20201115 22:04:59.364"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:58.778" endtime="20201115 22:04:59.365"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:56.421" endtime="20201115 22:04:59.366"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:56.419" endtime="20201115 22:04:59.366"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:04:59.371" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:59.395" endtime="20201115 22:04:59.429"></status>
</kw>
<msg timestamp="20201115 22:04:59.430" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:59.391" endtime="20201115 22:04:59.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:59.436" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:59.432" endtime="20201115 22:04:59.437"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:59.439" endtime="20201115 22:04:59.442"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:59.384" endtime="20201115 22:04:59.444"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:59.378" endtime="20201115 22:04:59.446"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:59.463" endtime="20201115 22:04:59.817"></status>
</kw>
<msg timestamp="20201115 22:04:59.824" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04825825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048263833, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:04:59.459" endtime="20201115 22:04:59.825"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:59.843" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04825825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048263833, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:04:59.826" endtime="20201115 22:04:59.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:59.845" endtime="20201115 22:04:59.849"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:59.452" endtime="20201115 22:04:59.851"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:59.447" endtime="20201115 22:04:59.852"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:59.863" level="INFO">${RESULT} = [{'time': 0.048263833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.582999999996507e-06, 'source_diff': 5.582999999996507e-06}, {'time': 0.048731667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:59.854" endtime="20201115 22:04:59.864"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:59.895" level="INFO">${OVERHEAD} = {'time': [0.048263833, 0.048731667, 0.049193319, 0.049657958, 0.050124542, 0.050591333, 0.051054083, 0.051518486, 0.051982764, 0.052449778, 0.052917514, 0.053380542, 0.053847056, 0.054309, 0.054774681...</msg>
<status status="PASS" starttime="20201115 22:04:59.865" endtime="20201115 22:04:59.895"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:59.906" level="INFO">NAME: 00-overhead-18-remove</msg>
<status status="PASS" starttime="20201115 22:04:59.904" endtime="20201115 22:04:59.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:59.912" level="INFO">VALUE: [5.582999999996507e-06, 5.569999999996411e-06, 5.554999999997368e-06, 5.5550000000043065e-06, 5.58400000000292e-06, 5.569000000003876e-06, 5.583000000003446e-06, 5.583000000003446e-06, 5.55600000000378e-06, 5.597000000003016e-06, 5.582999999996507e-06, 5.653000000001296e-06, 5.597999999995551e-06, 5.583000000003446e-06, 5.639000000001726e-06, 5.583999999995981e-06, 5.569000000003876e-06, 5.54200000000421e-06, 5.583999999995981e-06, 5.57000000000335e-06, 5.541999999997271e-06, 5.569999999996411e-06, 5.555999999996841e-06, 5.569999999996411e-06, 5.55600000000378e-06, 5.57000000000335e-06, 5.582999999996507e-06, 5.569000000003876e-06, 5.58400000000292e-06, 5.583000000003446e-06, 5.583999999995981e-06, 5.527000000005167e-06, 5.583000000003446e-06, 5.5689999999969375e-06, 5.624999999995217e-06, 5.5550000000043065e-06, 5.58400000000292e-06, 5.555999999989902e-06, 5.583000000003446e-06, 5.583000000003446e-06, 5.570000000010289e-06, 5.583000000003446e-06, 5.58400000000292e-06, 5.5139999999981315e-06, 5.583000000003446e-06, 5.5689999999969375e-06, 5.55600000000378e-06, 5.5279999999907625e-06, 5.583000000003446e-06, 5.569999999996411e-06]</msg>
<status status="PASS" starttime="20201115 22:04:59.908" endtime="20201115 22:04:59.913"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:59.897" endtime="20201115 22:04:59.915"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:59.921" endtime="20201115 22:04:59.924"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:59.930" endtime="20201115 22:04:59.952"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:59.925" endtime="20201115 22:04:59.954"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:59.917" endtime="20201115 22:04:59.955"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:59.372" endtime="20201115 22:04:59.956"></status>
</kw>
<msg timestamp="20201115 22:04:59.956" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:59.980" endtime="20201115 22:05:00.014"></status>
</kw>
<msg timestamp="20201115 22:05:00.015" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:59.977" endtime="20201115 22:05:00.016"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:05:00.022" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:05:00.018" endtime="20201115 22:05:00.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:00.024" endtime="20201115 22:05:00.028"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:59.969" endtime="20201115 22:05:00.029"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:59.963" endtime="20201115 22:05:00.031"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:00.048" endtime="20201115 22:05:00.401"></status>
</kw>
<msg timestamp="20201115 22:05:00.408" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04262075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042626319, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:05:00.045" endtime="20201115 22:05:00.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:05:00.427" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04262075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042626319, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:05:00.411" endtime="20201115 22:05:00.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:00.429" endtime="20201115 22:05:00.437"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:00.037" endtime="20201115 22:05:00.439"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:00.032" endtime="20201115 22:05:00.440"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:05:00.451" level="INFO">${RESULT} = [{'time': 0.042626319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.569000000003876e-06, 'source_diff': 5.569000000003876e-06}, {'time': 0.043088889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:05:00.442" endtime="20201115 22:05:00.452"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:05:00.483" level="INFO">${OVERHEAD} = {'time': [0.042626319, 0.043088889, 0.0435525, 0.044019389, 0.044480736, 0.044944903, 0.045407111, 0.045868639, 0.04633575, 0.046798611, 0.047260625, 0.047723972, 0.048189625, 0.04865675, 0.049120958,...</msg>
<status status="PASS" starttime="20201115 22:05:00.454" endtime="20201115 22:05:00.484"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:05:00.495" level="INFO">NAME: 00-overhead-18-remove</msg>
<status status="PASS" starttime="20201115 22:05:00.492" endtime="20201115 22:05:00.496"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:05:00.500" level="INFO">VALUE: [5.569000000003876e-06, 5.541999999997271e-06, 5.653000000001296e-06, 5.582999999996507e-06, 5.582999999996507e-06, 5.57000000000335e-06, 5.5689999999969375e-06, 5.583000000003446e-06, 5.569000000003876e-06, 5.582999999996507e-06, 5.55600000000378e-06, 5.569000000003876e-06, 5.582999999996507e-06, 5.582999999996507e-06, 5.582999999996507e-06, 5.5550000000043065e-06, 5.653000000001296e-06, 5.5550000000043065e-06, 5.583000000003446e-06, 5.582999999996507e-06, 5.583999999995981e-06, 5.527999999997701e-06, 5.569999999996411e-06, 5.5689999999969375e-06, 5.555999999996841e-06, 5.5689999999969375e-06, 5.5689999999969375e-06, 5.569999999996411e-06, 5.582999999996507e-06, 5.582999999996507e-06, 5.569999999996411e-06, 5.555999999996841e-06, 5.639000000001726e-06, 5.57000000000335e-06, 5.58400000000292e-06, 5.55600000000378e-06, 5.583000000003446e-06, 5.5689999999969375e-06, 5.582999999996507e-06, 5.5550000000043065e-06, 5.5689999999969375e-06, 5.569000000003876e-06, 5.583000000003446e-06, 5.583000000003446e-06, 5.596999999996077e-06, 5.5279999999907625e-06, 5.652999999994357e-06, 5.569999999996411e-06, 5.583000000003446e-06, 5.5829999999895685e-06]</msg>
<status status="PASS" starttime="20201115 22:05:00.497" endtime="20201115 22:05:00.501"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:00.485" endtime="20201115 22:05:00.503"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:00.509" endtime="20201115 22:05:00.512"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:05:00.518" endtime="20201115 22:05:00.540"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:00.514" endtime="20201115 22:05:00.542"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:00.505" endtime="20201115 22:05:00.543"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:59.958" endtime="20201115 22:05:00.544"></status>
</kw>
<msg timestamp="20201115 22:05:00.545" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:00.568" endtime="20201115 22:05:00.602"></status>
</kw>
<msg timestamp="20201115 22:05:00.603" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:05:00.565" endtime="20201115 22:05:00.604"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:05:00.610" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:05:00.605" endtime="20201115 22:05:00.610"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:00.612" endtime="20201115 22:05:00.616"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:00.557" endtime="20201115 22:05:00.617"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:00.551" endtime="20201115 22:05:00.619"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:00.636" endtime="20201115 22:05:00.988"></status>
</kw>
<msg timestamp="20201115 22:05:00.995" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042617625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042623208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:05:00.633" endtime="20201115 22:05:00.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:05:01.014" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042617625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042623208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:05:00.998" endtime="20201115 22:05:01.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:01.017" endtime="20201115 22:05:01.022"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:00.625" endtime="20201115 22:05:01.024"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:00.620" endtime="20201115 22:05:01.025"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:05:01.036" level="INFO">${RESULT} = [{'time': 0.042623208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.583000000003446e-06, 'source_diff': 5.583000000003446e-06}, {'time': 0.043089208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:05:01.027" endtime="20201115 22:05:01.037"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:05:01.068" level="INFO">${OVERHEAD} = {'time': [0.042623208, 0.043089208, 0.0435515, 0.044013569, 0.044480764, 0.044943139, 0.045404111, 0.045865667, 0.046329819, 0.046790542, 0.047257153, 0.047720944, 0.048187514, 0.048651556, 0.04911294...</msg>
<status status="PASS" starttime="20201115 22:05:01.039" endtime="20201115 22:05:01.069"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:05:01.079" level="INFO">NAME: 00-overhead-18-remove</msg>
<status status="PASS" starttime="20201115 22:05:01.077" endtime="20201115 22:05:01.080"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:05:01.085" level="INFO">VALUE: [5.583000000003446e-06, 5.5689999999969375e-06, 5.5689999999969375e-06, 5.569000000003876e-06, 5.596999999996077e-06, 5.583000000003446e-06, 5.554999999997368e-06, 5.597999999995551e-06, 5.569000000003876e-06, 5.555999999996841e-06, 5.55600000000378e-06, 5.583000000003446e-06, 5.611000000002586e-06, 5.583999999995981e-06, 5.5689999999969375e-06, 5.569000000003876e-06, 5.583000000003446e-06, 5.554999999997368e-06, 5.554999999997368e-06, 5.59800000000249e-06, 5.583000000003446e-06, 5.625000000002156e-06, 5.583000000003446e-06, 5.57000000000335e-06, 5.569000000003876e-06, 5.583000000003446e-06, 5.611000000002586e-06, 5.583000000003446e-06, 5.59800000000249e-06, 5.597000000003016e-06, 5.583000000003446e-06, 5.597000000003016e-06, 5.57000000000335e-06, 5.58400000000292e-06, 5.569999999996411e-06, 5.57000000000335e-06, 5.55600000000378e-06, 5.527000000005167e-06, 5.58400000000292e-06, 5.583000000003446e-06, 5.569000000003876e-06, 5.554999999997368e-06, 5.5689999999969375e-06, 5.52800000000464e-06, 5.5689999999969375e-06, 5.570000000010289e-06, 5.583000000003446e-06, 5.569999999996411e-06, 5.569999999996411e-06, 5.597000000009955e-06]</msg>
<status status="PASS" starttime="20201115 22:05:01.082" endtime="20201115 22:05:01.086"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:01.070" endtime="20201115 22:05:01.088"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:01.094" endtime="20201115 22:05:01.097"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:05:01.103" endtime="20201115 22:05:01.125"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:01.098" endtime="20201115 22:05:01.127"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:01.089" endtime="20201115 22:05:01.128"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:00.546" endtime="20201115 22:05:01.129"></status>
</kw>
<msg timestamp="20201115 22:05:01.129" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:01.153" endtime="20201115 22:05:01.187"></status>
</kw>
<msg timestamp="20201115 22:05:01.188" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:05:01.150" endtime="20201115 22:05:01.188"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:05:01.194" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:05:01.190" endtime="20201115 22:05:01.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:01.197" endtime="20201115 22:05:01.200"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:01.142" endtime="20201115 22:05:01.202"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:01.136" endtime="20201115 22:05:01.204"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:01.220" endtime="20201115 22:05:01.586"></status>
</kw>
<msg timestamp="20201115 22:05:01.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042537125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042542694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:05:01.217" endtime="20201115 22:05:01.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:05:01.611" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042537125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042542694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:05:01.595" endtime="20201115 22:05:01.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:01.614" endtime="20201115 22:05:01.620"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:01.210" endtime="20201115 22:05:01.622"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:01.205" endtime="20201115 22:05:01.623"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:05:01.634" level="INFO">${RESULT} = [{'time': 0.042542694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.5689999999969375e-06, 'source_diff': 5.5689999999969375e-06}, {'time': 0.043005833, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:05:01.625" endtime="20201115 22:05:01.634"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:05:01.665" level="INFO">${OVERHEAD} = {'time': [0.042542694, 0.043005833, 0.043469056, 0.043934847, 0.044397972, 0.044862444, 0.045329931, 0.045793903, 0.046260736, 0.046726194, 0.047190569, 0.047651597, 0.048117986, 0.048581028, 0.049042...</msg>
<status status="PASS" starttime="20201115 22:05:01.636" endtime="20201115 22:05:01.666"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:05:01.677" level="INFO">NAME: 00-overhead-18-remove</msg>
<status status="PASS" starttime="20201115 22:05:01.674" endtime="20201115 22:05:01.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:05:01.682" level="INFO">VALUE: [5.5689999999969375e-06, 5.5689999999969375e-06, 5.569999999996411e-06, 5.610999999995647e-06, 5.540999999997798e-06, 5.583000000003446e-06, 5.569999999996411e-06, 5.583999999995981e-06, 5.582999999996507e-06, 5.582999999996507e-06, 5.5550000000043065e-06, 5.5689999999969375e-06, 5.583000000003446e-06, 5.583999999995981e-06, 5.611000000002586e-06, 5.583000000003446e-06, 5.583000000003446e-06, 5.611000000002586e-06, 5.582999999996507e-06, 5.58400000000292e-06, 5.583000000003446e-06, 5.583000000003446e-06, 5.58400000000292e-06, 5.582999999996507e-06, 5.5689999999969375e-06, 5.583999999995981e-06, 5.569999999996411e-06, 5.638000000002252e-06, 5.582999999996507e-06, 5.5689999999969375e-06, 5.57000000000335e-06, 5.583000000003446e-06, 5.57000000000335e-06, 5.5689999999969375e-06, 5.582999999996507e-06, 5.583999999995981e-06, 5.57000000000335e-06, 5.582999999996507e-06, 5.5139999999981315e-06, 5.57000000000335e-06, 5.625000000002156e-06, 5.582999999996507e-06, 5.583000000003446e-06, 5.569999999996411e-06, 5.624999999995217e-06, 5.596999999996077e-06, 5.5829999999895685e-06, 5.5689999999969375e-06, 5.5689999999969375e-06, 5.583000000003446e-06]</msg>
<status status="PASS" starttime="20201115 22:05:01.679" endtime="20201115 22:05:01.683"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:01.667" endtime="20201115 22:05:01.685"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:01.691" endtime="20201115 22:05:01.694"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:05:01.700" endtime="20201115 22:05:01.722"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:01.696" endtime="20201115 22:05:01.724"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:01.687" endtime="20201115 22:05:01.725"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:01.130" endtime="20201115 22:05:01.726"></status>
</kw>
<msg timestamp="20201115 22:05:01.726" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:01.750" endtime="20201115 22:05:01.784"></status>
</kw>
<msg timestamp="20201115 22:05:01.786" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:05:01.747" endtime="20201115 22:05:01.786"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:05:01.792" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:05:01.788" endtime="20201115 22:05:01.793"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:01.794" endtime="20201115 22:05:01.798"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:01.739" endtime="20201115 22:05:01.800"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:01.733" endtime="20201115 22:05:01.801"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:01.818" endtime="20201115 22:05:02.171"></status>
</kw>
<msg timestamp="20201115 22:05:02.178" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042769153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042774722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:05:01.815" endtime="20201115 22:05:02.179"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:05:02.197" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042769153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042774722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:05:02.181" endtime="20201115 22:05:02.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:02.200" endtime="20201115 22:05:02.205"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:01.808" endtime="20201115 22:05:02.207"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:01.803" endtime="20201115 22:05:02.208"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:05:02.219" level="INFO">${RESULT} = [{'time': 0.042774722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.569000000003876e-06, 'source_diff': 5.569000000003876e-06}, {'time': 0.043236042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:05:02.210" endtime="20201115 22:05:02.220"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:05:02.250" level="INFO">${OVERHEAD} = {'time': [0.042774722, 0.043236042, 0.043697847, 0.044161333, 0.044628486, 0.045095167, 0.045557153, 0.04602075, 0.04648475, 0.046947069, 0.047410903, 0.047871014, 0.0483325, 0.048799264, 0.049264903,...</msg>
<status status="PASS" starttime="20201115 22:05:02.221" endtime="20201115 22:05:02.251"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:05:02.262" level="INFO">NAME: 00-overhead-18-remove</msg>
<status status="PASS" starttime="20201115 22:05:02.259" endtime="20201115 22:05:02.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:05:02.267" level="INFO">VALUE: [5.569000000003876e-06, 5.57000000000335e-06, 5.499999999998562e-06, 5.582999999996507e-06, 5.5550000000043065e-06, 5.583999999995981e-06, 5.597000000003016e-06, 5.5689999999969375e-06, 5.5689999999969375e-06, 5.5550000000043065e-06, 5.555999999996841e-06, 5.57000000000335e-06, 5.597000000003016e-06, 5.611000000002586e-06, 5.583999999995981e-06, 5.55600000000378e-06, 5.569000000003876e-06, 5.597999999995551e-06, 5.569000000003876e-06, 5.582999999996507e-06, 5.569000000003876e-06, 5.583999999995981e-06, 5.569999999996411e-06, 5.569000000003876e-06, 5.540999999997798e-06, 5.569999999996411e-06, 5.569999999996411e-06, 5.610999999995647e-06, 5.611000000002586e-06, 5.583000000003446e-06, 5.582999999996507e-06, 5.57000000000335e-06, 5.583000000003446e-06, 5.57000000000335e-06, 5.555999999996841e-06, 5.583000000003446e-06, 5.5689999999969375e-06, 5.51400000000507e-06, 5.610999999995647e-06, 5.541999999997271e-06, 5.569999999996411e-06, 5.569999999996411e-06, 5.5139999999981315e-06, 5.583999999989042e-06, 5.583000000003446e-06, 5.583000000003446e-06, 5.596999999996077e-06, 5.583000000003446e-06, 5.569999999996411e-06, 5.52800000000464e-06]</msg>
<status status="PASS" starttime="20201115 22:05:02.264" endtime="20201115 22:05:02.268"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:02.252" endtime="20201115 22:05:02.270"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:02.276" endtime="20201115 22:05:02.279"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:05:02.285" endtime="20201115 22:05:02.307"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:02.280" endtime="20201115 22:05:02.309"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:02.271" endtime="20201115 22:05:02.310"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:01.728" endtime="20201115 22:05:02.311"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:59.369" endtime="20201115 22:05:02.311"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:59.367" endtime="20201115 22:05:02.312"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:05:02.317" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:02.340" endtime="20201115 22:05:02.376"></status>
</kw>
<msg timestamp="20201115 22:05:02.377" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:05:02.337" endtime="20201115 22:05:02.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:05:02.383" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:05:02.379" endtime="20201115 22:05:02.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:02.385" endtime="20201115 22:05:02.389"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:02.329" endtime="20201115 22:05:02.391"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:02.323" endtime="20201115 22:05:02.392"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:02.410" endtime="20201115 22:05:02.765"></status>
</kw>
<msg timestamp="20201115 22:05:02.772" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048021556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048027347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:05:02.407" endtime="20201115 22:05:02.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:05:02.791" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048021556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048027347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:05:02.775" endtime="20201115 22:05:02.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:02.794" endtime="20201115 22:05:02.798"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:02.399" endtime="20201115 22:05:02.799"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:02.394" endtime="20201115 22:05:02.801"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:05:02.812" level="INFO">${RESULT} = [{'time': 0.048027347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.790999999998048e-06, 'source_diff': 5.790999999998048e-06}, {'time': 0.048520625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:05:02.803" endtime="20201115 22:05:02.813"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:05:02.916" level="INFO">${OVERHEAD} = {'time': [0.048027347, 0.048520625, 0.049014542, 0.049505125, 0.050000875, 0.050495153, 0.0509885, 0.051480417, 0.051976472, 0.052470097, 0.052966056, 0.053458889, 0.053954486, 0.054449944, 0.05494690...</msg>
<status status="PASS" starttime="20201115 22:05:02.814" endtime="20201115 22:05:02.917"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:05:02.927" level="INFO">NAME: 00-overhead-19-remove</msg>
<status status="PASS" starttime="20201115 22:05:02.925" endtime="20201115 22:05:02.928"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:05:02.933" level="INFO">VALUE: [5.790999999998048e-06, 5.7779999999979514e-06, 5.7779999999979514e-06, 5.7779999999979514e-06, 5.805999999997091e-06, 5.83400000000317e-06, 5.805999999997091e-06, 5.791999999997521e-06, 5.8050000000045565e-06, 5.790999999998048e-06, 5.7639999999983815e-06, 5.79200000000446e-06, 5.77800000000489e-06, 5.749999999998812e-06, 5.735999999999242e-06, 5.805999999997091e-06, 5.791000000004987e-06, 5.791999999997521e-06, 5.7779999999979514e-06, 5.7639999999983815e-06, 5.791999999997521e-06, 5.790999999998048e-06, 5.790999999998048e-06, 5.8329999999967574e-06, 5.7779999999979514e-06, 5.77800000000489e-06, 5.80600000000403e-06, 5.76400000000532e-06, 5.77800000000489e-06, 5.7639999999983815e-06, 5.805999999997091e-06, 5.7779999999979514e-06, 5.79200000000446e-06, 5.875000000002406e-06, 5.790999999991109e-06, 5.805999999997091e-06, 5.7779999999979514e-06, 5.79200000000446e-06, 5.763000000005847e-06, 5.776999999998478e-06, 5.805999999997091e-06, 5.776999999998478e-06, 5.763999999991443e-06, 5.79200000000446e-06, 5.790999999991109e-06, 5.860999999995897e-06, 5.778000000011829e-06, 5.790999999991109e-06, 5.79200000000446e-06, 5.791000000004987e-06]</msg>
<status status="PASS" starttime="20201115 22:05:02.930" endtime="20201115 22:05:02.934"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:02.918" endtime="20201115 22:05:02.935"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:02.942" endtime="20201115 22:05:02.945"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:05:02.950" endtime="20201115 22:05:02.972"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:02.946" endtime="20201115 22:05:02.974"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:02.937" endtime="20201115 22:05:02.976"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:02.318" endtime="20201115 22:05:02.976"></status>
</kw>
<msg timestamp="20201115 22:05:02.977" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:03.002" endtime="20201115 22:05:03.037"></status>
</kw>
<msg timestamp="20201115 22:05:03.038" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:05:02.997" endtime="20201115 22:05:03.039"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:05:03.046" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:05:03.041" endtime="20201115 22:05:03.046"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:03.048" endtime="20201115 22:05:03.052"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:02.990" endtime="20201115 22:05:03.054"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:02.984" endtime="20201115 22:05:03.055"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:03.072" endtime="20201115 22:05:03.425"></status>
</kw>
<msg timestamp="20201115 22:05:03.432" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044111347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044117125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:05:03.069" endtime="20201115 22:05:03.432"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:05:03.450" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044111347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044117125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:05:03.434" endtime="20201115 22:05:03.451"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:03.453" endtime="20201115 22:05:03.457"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:03.061" endtime="20201115 22:05:03.458"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:03.056" endtime="20201115 22:05:03.460"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:05:03.471" level="INFO">${RESULT} = [{'time': 0.044117125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7779999999979514e-06, 'source_diff': 5.7779999999979514e-06}, {'time': 0.044614333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:05:03.461" endtime="20201115 22:05:03.471"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:05:03.502" level="INFO">${OVERHEAD} = {'time': [0.044117125, 0.044614333, 0.045109542, 0.045602403, 0.046096806, 0.046589722, 0.047081222, 0.047573014, 0.048066028, 0.048562917, 0.049057042, 0.049550764, 0.05004425, 0.050535417, 0.0510308...</msg>
<status status="PASS" starttime="20201115 22:05:03.473" endtime="20201115 22:05:03.503"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:05:03.514" level="INFO">NAME: 00-overhead-19-remove</msg>
<status status="PASS" starttime="20201115 22:05:03.511" endtime="20201115 22:05:03.514"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:05:03.519" level="INFO">VALUE: [5.7779999999979514e-06, 5.790999999998048e-06, 5.79200000000446e-06, 5.7779999999979514e-06, 5.749999999998812e-06, 5.790999999998048e-06, 5.790999999998048e-06, 5.805999999997091e-06, 5.7639999999983815e-06, 5.7779999999979514e-06, 5.80600000000403e-06, 5.7779999999979514e-06, 5.7779999999979514e-06, 5.791999999997521e-06, 5.77800000000489e-06, 5.7639999999983815e-06, 5.7089999999995755e-06, 5.77800000000489e-06, 5.7779999999979514e-06, 5.7779999999979514e-06, 5.804999999997618e-06, 5.735999999999242e-06, 5.791999999997521e-06, 5.805999999997091e-06, 5.762999999998908e-06, 5.735999999999242e-06, 5.7639999999983815e-06, 5.762999999998908e-06, 5.791999999997521e-06, 5.791000000004987e-06, 5.708000000000102e-06, 5.7639999999983815e-06, 5.791999999997521e-06, 5.79200000000446e-06, 5.7639999999983815e-06, 5.7779999999979514e-06, 5.7779999999979514e-06, 5.749999999998812e-06, 5.709000000006514e-06, 5.763999999991443e-06, 5.7779999999979514e-06, 5.736000000006181e-06, 5.861000000009775e-06, 5.805999999997091e-06, 5.762999999991969e-06, 5.749999999998812e-06, 5.76400000000532e-06, 5.805999999997091e-06, 5.7919999999905825e-06, 5.790999999991109e-06]</msg>
<status status="PASS" starttime="20201115 22:05:03.516" endtime="20201115 22:05:03.520"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:03.504" endtime="20201115 22:05:03.521"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:03.528" endtime="20201115 22:05:03.531"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:05:03.537" endtime="20201115 22:05:03.559"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:03.532" endtime="20201115 22:05:03.560"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:03.523" endtime="20201115 22:05:03.562"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:02.978" endtime="20201115 22:05:03.563"></status>
</kw>
<msg timestamp="20201115 22:05:03.563" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:03.594" endtime="20201115 22:05:03.632"></status>
</kw>
<msg timestamp="20201115 22:05:03.633" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:05:03.583" endtime="20201115 22:05:03.633"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:05:03.639" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:05:03.635" endtime="20201115 22:05:03.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:03.642" endtime="20201115 22:05:03.646"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:03.576" endtime="20201115 22:05:03.647"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:03.570" endtime="20201115 22:05:03.649"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:03.666" endtime="20201115 22:05:04.031"></status>
</kw>
<msg timestamp="20201115 22:05:04.038" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.051881681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.051887458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:05:03.662" endtime="20201115 22:05:04.039"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:05:04.057" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.051881681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.051887458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:05:04.041" endtime="20201115 22:05:04.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:04.059" endtime="20201115 22:05:04.063"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:03.655" endtime="20201115 22:05:04.065"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:03.650" endtime="20201115 22:05:04.067"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:05:04.077" level="INFO">${RESULT} = [{'time': 0.051887458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.776999999998478e-06, 'source_diff': 5.776999999998478e-06}, {'time': 0.052382764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:05:04.068" endtime="20201115 22:05:04.078"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:05:04.109" level="INFO">${OVERHEAD} = {'time': [0.051887458, 0.052382764, 0.052878306, 0.053369333, 0.053864319, 0.054357819, 0.054853292, 0.055349931, 0.055844097, 0.056335056, 0.056831403, 0.057323028, 0.057814083, 0.058307111, 0.058796...</msg>
<status status="PASS" starttime="20201115 22:05:04.080" endtime="20201115 22:05:04.109"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:05:04.120" level="INFO">NAME: 00-overhead-19-remove</msg>
<status status="PASS" starttime="20201115 22:05:04.118" endtime="20201115 22:05:04.121"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:05:04.126" level="INFO">VALUE: [5.776999999998478e-06, 5.791999999997521e-06, 5.7779999999979514e-06, 5.804999999997618e-06, 5.804999999997618e-06, 5.791000000004987e-06, 5.7639999999983815e-06, 5.791999999997521e-06, 5.847000000003266e-06, 5.7229999999991454e-06, 5.77800000000489e-06, 5.7779999999979514e-06, 5.791000000004987e-06, 5.749999999998812e-06, 5.79200000000446e-06, 5.7639999999983815e-06, 5.79200000000446e-06, 5.749999999998812e-06, 5.76400000000532e-06, 5.790999999998048e-06, 5.790999999998048e-06, 5.7639999999983815e-06, 5.804999999997618e-06, 5.8329999999967574e-06, 5.7779999999979514e-06, 5.8329999999967574e-06, 5.763999999991443e-06, 5.791000000004987e-06, 5.79200000000446e-06, 5.804999999997618e-06, 5.7919999999905825e-06, 5.7919999999905825e-06, 5.791000000004987e-06, 5.790999999991109e-06, 5.79200000000446e-06, 5.791000000004987e-06, 5.7779999999979514e-06, 5.7779999999979514e-06, 5.7779999999979514e-06, 5.778000000011829e-06, 5.7779999999979514e-06, 5.736000000006181e-06, 5.847999999988862e-06, 5.805999999997091e-06, 5.721999999999672e-06, 5.7779999999979514e-06, 5.7779999999979514e-06, 5.804999999997618e-06, 5.7779999999979514e-06, 5.791000000004987e-06]</msg>
<status status="PASS" starttime="20201115 22:05:04.123" endtime="20201115 22:05:04.127"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:04.111" endtime="20201115 22:05:04.128"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:04.135" endtime="20201115 22:05:04.138"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:05:04.143" endtime="20201115 22:05:04.165"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:04.139" endtime="20201115 22:05:04.167"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:04.130" endtime="20201115 22:05:04.169"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:03.564" endtime="20201115 22:05:04.169"></status>
</kw>
<msg timestamp="20201115 22:05:04.170" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:04.194" endtime="20201115 22:05:04.229"></status>
</kw>
<msg timestamp="20201115 22:05:04.231" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:05:04.191" endtime="20201115 22:05:04.231"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:05:04.237" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:05:04.233" endtime="20201115 22:05:04.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:04.239" endtime="20201115 22:05:04.243"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:04.183" endtime="20201115 22:05:04.245"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:04.177" endtime="20201115 22:05:04.246"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:04.265" endtime="20201115 22:05:04.627"></status>
</kw>
<msg timestamp="20201115 22:05:04.634" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043439028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043444875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:05:04.262" endtime="20201115 22:05:04.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:05:04.652" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043439028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043444875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:05:04.636" endtime="20201115 22:05:04.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:04.655" endtime="20201115 22:05:04.659"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:04.253" endtime="20201115 22:05:04.661"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:04.248" endtime="20201115 22:05:04.662"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:05:04.673" level="INFO">${RESULT} = [{'time': 0.043444875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.847000000003266e-06, 'source_diff': 5.847000000003266e-06}, {'time': 0.0439365, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:05:04.664" endtime="20201115 22:05:04.673"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:05:04.705" level="INFO">${OVERHEAD} = {'time': [0.043444875, 0.0439365, 0.044432875, 0.044924583, 0.045416472, 0.045910667, 0.046403542, 0.046897917, 0.047391264, 0.047884875, 0.048379375, 0.048873486, 0.049365889, 0.049860597, 0.05035179...</msg>
<status status="PASS" starttime="20201115 22:05:04.675" endtime="20201115 22:05:04.705"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:05:04.716" level="INFO">NAME: 00-overhead-19-remove</msg>
<status status="PASS" starttime="20201115 22:05:04.714" endtime="20201115 22:05:04.717"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:05:04.721" level="INFO">VALUE: [5.847000000003266e-06, 5.77800000000489e-06, 5.7779999999979514e-06, 5.790999999998048e-06, 5.7779999999979514e-06, 5.79200000000446e-06, 5.819999999996661e-06, 5.7779999999979514e-06, 5.79200000000446e-06, 5.7639999999983815e-06, 5.77800000000489e-06, 5.804999999997618e-06, 5.7500000000057505e-06, 5.7779999999979514e-06, 5.749999999998812e-06, 5.76400000000532e-06, 5.790999999998048e-06, 5.791999999997521e-06, 5.721999999999672e-06, 5.79200000000446e-06, 5.791999999997521e-06, 5.791999999997521e-06, 5.84800000000274e-06, 5.80600000000403e-06, 5.7779999999979514e-06, 5.7779999999979514e-06, 5.7639999999983815e-06, 5.7639999999983815e-06, 5.7639999999983815e-06, 5.7639999999983815e-06, 5.790999999998048e-06, 5.776999999998478e-06, 5.791999999997521e-06, 5.7639999999983815e-06, 5.77800000000489e-06, 5.735999999999242e-06, 5.7639999999983815e-06, 5.8200000000036e-06, 5.791999999997521e-06, 5.804999999997618e-06, 5.76400000000532e-06, 5.721999999999672e-06, 5.7919999999905825e-06, 5.736000000006181e-06, 5.763999999991443e-06, 5.7779999999979514e-06, 5.7779999999979514e-06, 5.7779999999979514e-06, 5.7779999999979514e-06, 5.7919999999905825e-06]</msg>
<status status="PASS" starttime="20201115 22:05:04.718" endtime="20201115 22:05:04.722"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:04.707" endtime="20201115 22:05:04.724"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:04.731" endtime="20201115 22:05:04.734"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:05:04.740" endtime="20201115 22:05:04.762"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:04.735" endtime="20201115 22:05:04.764"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:04.726" endtime="20201115 22:05:04.765"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:04.172" endtime="20201115 22:05:04.766"></status>
</kw>
<msg timestamp="20201115 22:05:04.767" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:04.790" endtime="20201115 22:05:04.826"></status>
</kw>
<msg timestamp="20201115 22:05:04.827" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:05:04.787" endtime="20201115 22:05:04.828"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:05:04.833" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:05:04.829" endtime="20201115 22:05:04.834"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:04.836" endtime="20201115 22:05:04.840"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:04.779" endtime="20201115 22:05:04.841"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:04.773" endtime="20201115 22:05:04.843"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:04.860" endtime="20201115 22:05:05.215"></status>
</kw>
<msg timestamp="20201115 22:05:05.222" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042821806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042827639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:05:04.857" endtime="20201115 22:05:05.223"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:05:05.241" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042821806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042827639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:05:05.224" endtime="20201115 22:05:05.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:05.243" endtime="20201115 22:05:05.247"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:04.849" endtime="20201115 22:05:05.249"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:04.844" endtime="20201115 22:05:05.250"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:05:05.261" level="INFO">${RESULT} = [{'time': 0.042827639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.833000000003696e-06, 'source_diff': 5.833000000003696e-06}, {'time': 0.043323417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:05:05.252" endtime="20201115 22:05:05.261"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:05:05.295" level="INFO">${OVERHEAD} = {'time': [0.042827639, 0.043323417, 0.043815917, 0.044308625, 0.044803847, 0.045294833, 0.045788236, 0.046278319, 0.046772792, 0.047269597, 0.047763028, 0.048256514, 0.048750694, 0.049244125, 0.049739...</msg>
<status status="PASS" starttime="20201115 22:05:05.263" endtime="20201115 22:05:05.295"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:05:05.306" level="INFO">NAME: 00-overhead-19-remove</msg>
<status status="PASS" starttime="20201115 22:05:05.304" endtime="20201115 22:05:05.307"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:05:05.311" level="INFO">VALUE: [5.833000000003696e-06, 5.79200000000446e-06, 5.77800000000489e-06, 5.749999999998812e-06, 5.721999999999672e-06, 5.776999999998478e-06, 5.77800000000489e-06, 5.776999999998478e-06, 5.7779999999979514e-06, 5.7779999999979514e-06, 5.791999999997521e-06, 5.791999999997521e-06, 5.735999999999242e-06, 5.7639999999983815e-06, 5.791999999997521e-06, 5.7779999999979514e-06, 5.791999999997521e-06, 5.749999999998812e-06, 5.7639999999983815e-06, 5.8190000000041264e-06, 5.776999999998478e-06, 5.77800000000489e-06, 5.791999999997521e-06, 5.7229999999991454e-06, 5.804999999997618e-06, 5.7639999999983815e-06, 5.7779999999979514e-06, 5.7779999999979514e-06, 5.805999999997091e-06, 5.735999999999242e-06, 5.776999999998478e-06, 5.7779999999979514e-06, 5.7639999999983815e-06, 5.80600000000403e-06, 5.77800000000489e-06, 5.791999999997521e-06, 5.8050000000045565e-06, 5.77800000000489e-06, 5.776999999998478e-06, 5.79200000000446e-06, 5.763999999991443e-06, 5.79200000000446e-06, 5.79200000000446e-06, 5.7779999999979514e-06, 5.735999999992303e-06, 5.8329999999967574e-06, 5.847000000003266e-06, 5.8329999999967574e-06, 5.778000000011829e-06, 5.7779999999979514e-06]</msg>
<status status="PASS" starttime="20201115 22:05:05.308" endtime="20201115 22:05:05.313"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:05.296" endtime="20201115 22:05:05.315"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:05.321" endtime="20201115 22:05:05.324"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:05:05.329" endtime="20201115 22:05:05.351"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:05.325" endtime="20201115 22:05:05.353"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:05.316" endtime="20201115 22:05:05.355"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:04.768" endtime="20201115 22:05:05.355"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:02.314" endtime="20201115 22:05:05.356"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:02.313" endtime="20201115 22:05:05.356"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:05:05.361" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:05.385" endtime="20201115 22:05:05.422"></status>
</kw>
<msg timestamp="20201115 22:05:05.423" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:05:05.382" endtime="20201115 22:05:05.423"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:05:05.429" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:05:05.425" endtime="20201115 22:05:05.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:05.432" endtime="20201115 22:05:05.435"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:05.374" endtime="20201115 22:05:05.437"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:05.368" endtime="20201115 22:05:05.439"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:05.456" endtime="20201115 22:05:05.810"></status>
</kw>
<msg timestamp="20201115 22:05:05.817" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047946528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047952569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:05:05.452" endtime="20201115 22:05:05.818"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:05:05.835" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047946528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047952569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:05:05.819" endtime="20201115 22:05:05.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:05.838" endtime="20201115 22:05:05.842"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:05.445" endtime="20201115 22:05:05.843"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:05.440" endtime="20201115 22:05:05.845"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:05:05.856" level="INFO">${RESULT} = [{'time': 0.047952569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.040999999998298e-06, 'source_diff': 6.040999999998298e-06}, {'time': 0.048475681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:05:05.847" endtime="20201115 22:05:05.856"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:05:05.887" level="INFO">${OVERHEAD} = {'time': [0.047952569, 0.048475681, 0.049001083, 0.049524208, 0.050045028, 0.050568597, 0.051092806, 0.051618903, 0.052145417, 0.052666236, 0.053193014, 0.053716125, 0.054237472, 0.054761458, 0.055281...</msg>
<status status="PASS" starttime="20201115 22:05:05.858" endtime="20201115 22:05:05.888"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:05:05.899" level="INFO">NAME: 00-overhead-20-remove</msg>
<status status="PASS" starttime="20201115 22:05:05.897" endtime="20201115 22:05:05.900"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:05:05.906" level="INFO">VALUE: [6.040999999998298e-06, 6.0279999999982015e-06, 5.930000000001212e-06, 5.985999999999492e-06, 5.999999999999062e-06, 5.930000000001212e-06, 5.986999999998965e-06, 6.0139999999986316e-06, 6.0279999999982015e-06, 5.971999999999922e-06, 5.999999999999062e-06, 5.986000000006431e-06, 5.985999999999492e-06, 5.985999999999492e-06, 5.985999999999492e-06, 5.916000000001642e-06, 5.999999999999062e-06, 6.0139999999986316e-06, 5.985999999999492e-06, 5.999999999999062e-06, 5.945000000000256e-06, 6.054999999997868e-06, 5.999999999999062e-06, 6.0139999999986316e-06, 5.985999999999492e-06, 5.986000000006431e-06, 5.971999999999922e-06, 5.9729999999993955e-06, 6.0000000000060005e-06, 5.930000000001212e-06, 6.012999999999158e-06, 5.985999999999492e-06, 5.985999999999492e-06, 6.040999999998298e-06, 5.986999999998965e-06, 5.986999999998965e-06, 6.0139999999986316e-06, 6.0139999999986316e-06, 5.999999999992123e-06, 5.985999999999492e-06, 5.986999999998965e-06, 6.02800000000514e-06, 6.0000000000060005e-06, 5.971999999992983e-06, 5.999999999992123e-06, 5.985999999999492e-06, 5.972000000006861e-06, 5.985999999999492e-06, 5.985999999999492e-06, 5.999999999992123e-06]</msg>
<status status="PASS" starttime="20201115 22:05:05.902" endtime="20201115 22:05:05.907"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:05.889" endtime="20201115 22:05:05.909"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:05.916" endtime="20201115 22:05:05.919"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:05:05.925" endtime="20201115 22:05:05.947"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:05.920" endtime="20201115 22:05:05.948"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:05.911" endtime="20201115 22:05:05.950"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:05.362" endtime="20201115 22:05:05.951"></status>
</kw>
<msg timestamp="20201115 22:05:05.951" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:05.975" endtime="20201115 22:05:06.012"></status>
</kw>
<msg timestamp="20201115 22:05:06.013" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:05:05.971" endtime="20201115 22:05:06.014"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:05:06.019" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:05:06.015" endtime="20201115 22:05:06.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:06.022" endtime="20201115 22:05:06.026"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:05.964" endtime="20201115 22:05:06.027"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:05.958" endtime="20201115 22:05:06.029"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:06.046" endtime="20201115 22:05:06.398"></status>
</kw>
<msg timestamp="20201115 22:05:06.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042681083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042687069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:05:06.042" endtime="20201115 22:05:06.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:05:06.424" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042681083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042687069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:05:06.408" endtime="20201115 22:05:06.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:06.426" endtime="20201115 22:05:06.432"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:06.035" endtime="20201115 22:05:06.433"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:06.030" endtime="20201115 22:05:06.435"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:05:06.446" level="INFO">${RESULT} = [{'time': 0.042687069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.985999999999492e-06, 'source_diff': 5.985999999999492e-06}, {'time': 0.043209875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:05:06.437" endtime="20201115 22:05:06.446"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:05:06.477" level="INFO">${OVERHEAD} = {'time': [0.042687069, 0.043209875, 0.043734292, 0.044254236, 0.044780306, 0.045306097, 0.045827014, 0.046351653, 0.046874361, 0.047400861, 0.047923931, 0.048445167, 0.048971597, 0.049493708, 0.050013...</msg>
<status status="PASS" starttime="20201115 22:05:06.448" endtime="20201115 22:05:06.478"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:05:06.489" level="INFO">NAME: 00-overhead-20-remove</msg>
<status status="PASS" starttime="20201115 22:05:06.487" endtime="20201115 22:05:06.490"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:05:06.495" level="INFO">VALUE: [5.985999999999492e-06, 6.0139999999986316e-06, 5.985999999999492e-06, 5.999999999999062e-06, 5.9729999999993955e-06, 5.999999999999062e-06, 5.985999999999492e-06, 5.999999999999062e-06, 6.0000000000060005e-06, 5.971999999999922e-06, 6.0000000000060005e-06, 5.985999999999492e-06, 6.0689999999974376e-06, 5.971999999999922e-06, 5.999999999999062e-06, 6.0000000000060005e-06, 5.985999999999492e-06, 5.999999999999062e-06, 5.999999999999062e-06, 5.985999999999492e-06, 5.930000000001212e-06, 5.985999999999492e-06, 5.9589999999998255e-06, 5.999999999999062e-06, 5.985999999999492e-06, 5.929999999994273e-06, 5.971999999999922e-06, 5.999999999999062e-06, 5.999999999999062e-06, 5.999999999999062e-06, 5.985999999999492e-06, 5.999999999999062e-06, 5.986000000006431e-06, 5.9589999999998255e-06, 5.999999999999062e-06, 5.971999999999922e-06, 5.985999999999492e-06, 6.040999999998298e-06, 6.0000000000060005e-06, 5.999999999992123e-06, 5.9860000000133695e-06, 5.986999999998965e-06, 6.0000000000060005e-06, 5.972000000006861e-06, 5.999999999992123e-06, 5.999999999992123e-06, 6.0000000000060005e-06, 6.0000000000060005e-06, 5.999999999992123e-06, 6.0000000000060005e-06]</msg>
<status status="PASS" starttime="20201115 22:05:06.491" endtime="20201115 22:05:06.496"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:06.480" endtime="20201115 22:05:06.497"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:06.504" endtime="20201115 22:05:06.507"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:05:06.512" endtime="20201115 22:05:06.534"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:06.508" endtime="20201115 22:05:06.536"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:06.499" endtime="20201115 22:05:06.538"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:05.952" endtime="20201115 22:05:06.538"></status>
</kw>
<msg timestamp="20201115 22:05:06.539" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:06.563" endtime="20201115 22:05:06.599"></status>
</kw>
<msg timestamp="20201115 22:05:06.601" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:05:06.559" endtime="20201115 22:05:06.601"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:05:06.607" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:05:06.603" endtime="20201115 22:05:06.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:06.609" endtime="20201115 22:05:06.613"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:06.552" endtime="20201115 22:05:06.615"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:06.546" endtime="20201115 22:05:06.617"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:06.633" endtime="20201115 22:05:06.988"></status>
</kw>
<msg timestamp="20201115 22:05:06.995" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042976139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042982097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:05:06.630" endtime="20201115 22:05:06.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:05:07.014" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042976139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042982097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:05:06.998" endtime="20201115 22:05:07.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:07.016" endtime="20201115 22:05:07.022"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:06.623" endtime="20201115 22:05:07.024"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:06.618" endtime="20201115 22:05:07.025"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:05:07.036" level="INFO">${RESULT} = [{'time': 0.042982097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.958000000000352e-06, 'source_diff': 5.958000000000352e-06}, {'time': 0.043505278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:05:07.027" endtime="20201115 22:05:07.037"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:05:07.068" level="INFO">${OVERHEAD} = {'time': [0.042982097, 0.043505278, 0.044026681, 0.044547764, 0.045070792, 0.045592097, 0.046117181, 0.046637722, 0.047160236, 0.047686639, 0.048211903, 0.048736236, 0.049262069, 0.049786486, 0.050311...</msg>
<status status="PASS" starttime="20201115 22:05:07.039" endtime="20201115 22:05:07.068"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:05:07.079" level="INFO">NAME: 00-overhead-20-remove</msg>
<status status="PASS" starttime="20201115 22:05:07.077" endtime="20201115 22:05:07.080"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:05:07.085" level="INFO">VALUE: [5.958000000000352e-06, 5.985999999999492e-06, 5.986999999998965e-06, 6.0279999999982015e-06, 5.985999999999492e-06, 6.054999999997868e-06, 5.999999999999062e-06, 5.971999999999922e-06, 5.999999999999062e-06, 5.971999999999922e-06, 5.985999999999492e-06, 5.958000000000352e-06, 6.054999999997868e-06, 5.985999999999492e-06, 5.999999999999062e-06, 5.971999999999922e-06, 5.985999999999492e-06, 5.944000000000782e-06, 5.971999999999922e-06, 5.971999999999922e-06, 5.957999999993413e-06, 5.986000000006431e-06, 5.985999999999492e-06, 5.985999999999492e-06, 5.958000000000352e-06, 6.0279999999982015e-06, 5.999999999999062e-06, 5.971999999999922e-06, 5.9589999999998255e-06, 5.985999999999492e-06, 6.05600000000428e-06, 5.985999999999492e-06, 5.985999999999492e-06, 5.999999999999062e-06, 5.986000000006431e-06, 5.971999999999922e-06, 5.9729999999993955e-06, 6.012999999999158e-06, 6.0000000000060005e-06, 5.9729999999924566e-06, 6.0139999999986316e-06, 5.985999999999492e-06, 5.9860000000133695e-06, 5.985999999999492e-06, 6.0139999999986316e-06, 5.985999999999492e-06, 5.971999999992983e-06, 6.0000000000060005e-06, 5.999999999992123e-06, 6.027000000005667e-06]</msg>
<status status="PASS" starttime="20201115 22:05:07.082" endtime="20201115 22:05:07.086"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:07.070" endtime="20201115 22:05:07.087"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:07.094" endtime="20201115 22:05:07.097"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:05:07.102" endtime="20201115 22:05:07.124"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:07.098" endtime="20201115 22:05:07.126"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:07.089" endtime="20201115 22:05:07.128"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:06.540" endtime="20201115 22:05:07.128"></status>
</kw>
<msg timestamp="20201115 22:05:07.129" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:07.152" endtime="20201115 22:05:07.190"></status>
</kw>
<msg timestamp="20201115 22:05:07.191" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:05:07.149" endtime="20201115 22:05:07.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:05:07.197" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:05:07.193" endtime="20201115 22:05:07.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:07.200" endtime="20201115 22:05:07.203"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:07.142" endtime="20201115 22:05:07.205"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:07.136" endtime="20201115 22:05:07.207"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:07.224" endtime="20201115 22:05:07.588"></status>
</kw>
<msg timestamp="20201115 22:05:07.595" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042665139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042671125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:05:07.220" endtime="20201115 22:05:07.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:05:07.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042665139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042671125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:05:07.597" endtime="20201115 22:05:07.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:07.617" endtime="20201115 22:05:07.622"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:07.213" endtime="20201115 22:05:07.624"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:07.208" endtime="20201115 22:05:07.625"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:05:07.636" level="INFO">${RESULT} = [{'time': 0.042671125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.985999999999492e-06, 'source_diff': 5.985999999999492e-06}, {'time': 0.043194097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:05:07.627" endtime="20201115 22:05:07.636"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:05:07.670" level="INFO">${OVERHEAD} = {'time': [0.042671125, 0.043194097, 0.043719403, 0.044241361, 0.044767486, 0.045293528, 0.045813833, 0.046336806, 0.046858833, 0.047381597, 0.047905958, 0.048428611, 0.048949444, 0.049471153, 0.049992...</msg>
<status status="PASS" starttime="20201115 22:05:07.638" endtime="20201115 22:05:07.670"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:05:07.681" level="INFO">NAME: 00-overhead-20-remove</msg>
<status status="PASS" starttime="20201115 22:05:07.679" endtime="20201115 22:05:07.682"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:05:07.686" level="INFO">VALUE: [5.985999999999492e-06, 5.985999999999492e-06, 5.916999999994177e-06, 6.0279999999982015e-06, 5.985999999999492e-06, 5.945000000000256e-06, 6.054999999997868e-06, 5.986999999998965e-06, 5.985999999999492e-06, 5.971999999999922e-06, 5.999999999999062e-06, 6.0000000000060005e-06, 5.971999999999922e-06, 5.985999999999492e-06, 5.999999999999062e-06, 5.931000000000686e-06, 6.02800000000514e-06, 6.041999999997771e-06, 5.999999999999062e-06, 5.985999999999492e-06, 5.986999999998965e-06, 5.999999999999062e-06, 6.0139999999986316e-06, 5.971999999999922e-06, 5.999999999999062e-06, 5.999999999999062e-06, 5.944000000000782e-06, 5.999999999999062e-06, 5.971999999999922e-06, 6.054999999997868e-06, 5.985999999999492e-06, 5.985999999999492e-06, 5.999999999999062e-06, 6.0279999999982015e-06, 5.999999999999062e-06, 5.915999999994703e-06, 5.999999999999062e-06, 5.9729999999993955e-06, 6.0550000000048065e-06, 5.985999999999492e-06, 6.0000000000060005e-06, 5.971999999992983e-06, 6.0000000000060005e-06, 6.041999999997771e-06, 5.985999999999492e-06, 6.0139999999986316e-06, 5.985999999999492e-06, 5.971999999992983e-06, 5.985999999999492e-06, 6.0000000000060005e-06]</msg>
<status status="PASS" starttime="20201115 22:05:07.683" endtime="20201115 22:05:07.687"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:07.671" endtime="20201115 22:05:07.689"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:07.696" endtime="20201115 22:05:07.698"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:05:07.704" endtime="20201115 22:05:07.726"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:07.699" endtime="20201115 22:05:07.728"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:07.691" endtime="20201115 22:05:07.730"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:07.130" endtime="20201115 22:05:07.730"></status>
</kw>
<msg timestamp="20201115 22:05:07.731" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:07.754" endtime="20201115 22:05:07.792"></status>
</kw>
<msg timestamp="20201115 22:05:07.793" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:05:07.751" endtime="20201115 22:05:07.793"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:05:07.799" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:05:07.795" endtime="20201115 22:05:07.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:07.801" endtime="20201115 22:05:07.805"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:07.744" endtime="20201115 22:05:07.807"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:07.738" endtime="20201115 22:05:07.809"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:07.826" endtime="20201115 22:05:08.189"></status>
</kw>
<msg timestamp="20201115 22:05:08.196" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042716736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042722722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:05:07.822" endtime="20201115 22:05:08.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:05:08.216" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042716736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042722722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:05:08.199" endtime="20201115 22:05:08.216"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:08.218" endtime="20201115 22:05:08.222"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:07.815" endtime="20201115 22:05:08.224"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:07.810" endtime="20201115 22:05:08.225"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:05:08.236" level="INFO">${RESULT} = [{'time': 0.042722722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.985999999999492e-06, 'source_diff': 5.985999999999492e-06}, {'time': 0.043244472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:05:08.227" endtime="20201115 22:05:08.237"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:05:08.269" level="INFO">${OVERHEAD} = {'time': [0.042722722, 0.043244472, 0.043768167, 0.044289972, 0.044811681, 0.045337208, 0.045860083, 0.046387292, 0.046913097, 0.047433944, 0.047953569, 0.048478833, 0.049005292, 0.049528153, 0.050049...</msg>
<status status="PASS" starttime="20201115 22:05:08.238" endtime="20201115 22:05:08.269"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:05:08.280" level="INFO">NAME: 00-overhead-20-remove</msg>
<status status="PASS" starttime="20201115 22:05:08.278" endtime="20201115 22:05:08.281"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:05:08.286" level="INFO">VALUE: [5.985999999999492e-06, 5.999999999999062e-06, 5.9729999999993955e-06, 5.999999999999062e-06, 5.999999999999062e-06, 5.985999999999492e-06, 5.971999999999922e-06, 5.999999999999062e-06, 5.999999999999062e-06, 6.012999999999158e-06, 6.026999999998728e-06, 6.026999999998728e-06, 6.069999999996911e-06, 5.985999999999492e-06, 5.971999999999922e-06, 5.985999999999492e-06, 5.999999999999062e-06, 5.999999999999062e-06, 5.999999999999062e-06, 5.985999999999492e-06, 5.999999999999062e-06, 5.985999999999492e-06, 6.02800000000514e-06, 5.971999999999922e-06, 5.999999999999062e-06, 5.971999999999922e-06, 5.999999999999062e-06, 5.985999999999492e-06, 5.985999999999492e-06, 5.985999999999492e-06, 5.945000000000256e-06, 6.0000000000060005e-06, 5.999999999999062e-06, 5.999999999999062e-06, 6.0140000000055704e-06, 5.999999999999062e-06, 6.054999999997868e-06, 6.0139999999986316e-06, 5.985999999999492e-06, 6.0000000000060005e-06, 6.0279999999912626e-06, 5.985999999999492e-06, 5.999999999992123e-06, 5.999999999992123e-06, 6.0000000000060005e-06, 6.014000000012509e-06, 6.0000000000060005e-06, 5.985999999999492e-06, 5.985999999999492e-06, 5.985999999999492e-06]</msg>
<status status="PASS" starttime="20201115 22:05:08.282" endtime="20201115 22:05:08.287"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:08.271" endtime="20201115 22:05:08.288"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:08.295" endtime="20201115 22:05:08.298"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:05:08.303" endtime="20201115 22:05:08.326"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:08.299" endtime="20201115 22:05:08.327"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:08.290" endtime="20201115 22:05:08.329"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:07.732" endtime="20201115 22:05:08.330"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:05.359" endtime="20201115 22:05:08.330"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:05.357" endtime="20201115 22:05:08.331"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:05:08.336" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:08.359" endtime="20201115 22:05:08.398"></status>
</kw>
<msg timestamp="20201115 22:05:08.399" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:05:08.356" endtime="20201115 22:05:08.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:05:08.405" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:05:08.401" endtime="20201115 22:05:08.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:08.408" endtime="20201115 22:05:08.412"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:08.348" endtime="20201115 22:05:08.413"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:08.342" endtime="20201115 22:05:08.415"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:08.432" endtime="20201115 22:05:08.797"></status>
</kw>
<msg timestamp="20201115 22:05:08.804" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048195236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048201431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:05:08.429" endtime="20201115 22:05:08.804"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:05:08.822" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048195236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048201431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:05:08.806" endtime="20201115 22:05:08.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:08.825" endtime="20201115 22:05:08.828"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:08.422" endtime="20201115 22:05:08.830"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:08.417" endtime="20201115 22:05:08.832"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:05:08.842" level="INFO">${RESULT} = [{'time': 0.048201431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.195000000000506e-06, 'source_diff': 6.195000000000506e-06}, {'time': 0.048756819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:05:08.833" endtime="20201115 22:05:08.843"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:05:08.875" level="INFO">${OVERHEAD} = {'time': [0.048201431, 0.048756819, 0.049313847, 0.049864736, 0.050420069, 0.050973486, 0.051529514, 0.052082403, 0.052634153, 0.053185931, 0.053739389, 0.054294736, 0.054847153, 0.055397625, 0.055950...</msg>
<status status="PASS" starttime="20201115 22:05:08.845" endtime="20201115 22:05:08.876"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:05:08.887" level="INFO">NAME: 00-overhead-21-remove</msg>
<status status="PASS" starttime="20201115 22:05:08.884" endtime="20201115 22:05:08.887"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:05:08.892" level="INFO">VALUE: [6.195000000000506e-06, 6.290999999998548e-06, 6.139000000002226e-06, 6.2639999999988816e-06, 6.194000000001032e-06, 6.180000000001462e-06, 6.181000000000936e-06, 6.2090000000000756e-06, 6.181000000000936e-06, 6.195000000000506e-06, 6.208000000000602e-06, 6.208000000000602e-06, 6.27800000000539e-06, 6.194000000001032e-06, 6.207999999993663e-06, 6.166999999994427e-06, 6.193999999994093e-06, 6.222000000000172e-06, 6.193999999994093e-06, 6.208000000000602e-06, 6.208000000000602e-06, 6.208000000000602e-06, 6.208000000000602e-06, 6.2639999999988816e-06, 6.208000000000602e-06, 6.207999999993663e-06, 6.181000000007875e-06, 6.166000000001892e-06, 6.194000000001032e-06, 6.207999999993663e-06, 6.222000000000172e-06, 6.222000000000172e-06, 6.208000000007541e-06, 6.2090000000070145e-06, 6.137999999988875e-06, 6.166999999987488e-06, 6.194000000001032e-06, 6.208000000007541e-06, 6.194000000001032e-06, 6.180000000008401e-06, 6.194000000001032e-06, 6.2090000000070145e-06, 6.194000000001032e-06, 6.249999999999312e-06, 6.207999999993663e-06, 6.195000000000506e-06, 6.180000000008401e-06, 6.195000000000506e-06, 6.193999999987154e-06, 6.180000000008401e-06]</msg>
<status status="PASS" starttime="20201115 22:05:08.889" endtime="20201115 22:05:08.893"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:08.877" endtime="20201115 22:05:08.895"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:08.901" endtime="20201115 22:05:08.904"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:05:08.910" endtime="20201115 22:05:08.933"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:08.905" endtime="20201115 22:05:08.934"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:08.896" endtime="20201115 22:05:08.936"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:08.337" endtime="20201115 22:05:08.937"></status>
</kw>
<msg timestamp="20201115 22:05:08.937" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:08.961" endtime="20201115 22:05:09.000"></status>
</kw>
<msg timestamp="20201115 22:05:09.001" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:05:08.957" endtime="20201115 22:05:09.002"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:05:09.009" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:05:09.004" endtime="20201115 22:05:09.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:09.011" endtime="20201115 22:05:09.015"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:08.950" endtime="20201115 22:05:09.017"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:08.944" endtime="20201115 22:05:09.019"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:09.036" endtime="20201115 22:05:09.400"></status>
</kw>
<msg timestamp="20201115 22:05:09.407" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043801653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043807861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:05:09.033" endtime="20201115 22:05:09.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:05:09.425" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043801653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043807861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:05:09.409" endtime="20201115 22:05:09.426"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:09.428" endtime="20201115 22:05:09.432"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:09.025" endtime="20201115 22:05:09.434"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:09.020" endtime="20201115 22:05:09.435"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:05:09.446" level="INFO">${RESULT} = [{'time': 0.043807861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.207999999993663e-06, 'source_diff': 6.207999999993663e-06}, {'time': 0.044364833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:05:09.437" endtime="20201115 22:05:09.446"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:05:09.479" level="INFO">${OVERHEAD} = {'time': [0.043807861, 0.044364833, 0.044916694, 0.045473125, 0.046028917, 0.046580806, 0.047133389, 0.047689056, 0.048240722, 0.048797403, 0.049349, 0.049905583, 0.0504585, 0.051012819, 0.051568069, ...</msg>
<status status="PASS" starttime="20201115 22:05:09.448" endtime="20201115 22:05:09.479"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:05:09.490" level="INFO">NAME: 00-overhead-21-remove</msg>
<status status="PASS" starttime="20201115 22:05:09.488" endtime="20201115 22:05:09.491"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:05:09.495" level="INFO">VALUE: [6.207999999993663e-06, 6.208000000000602e-06, 6.208000000000602e-06, 6.194000000001032e-06, 6.195000000000506e-06, 6.2640000000058205e-06, 6.181000000000936e-06, 6.181000000000936e-06, 6.194000000001032e-06, 6.2090000000000756e-06, 6.193999999994093e-06, 6.222000000000172e-06, 6.208000000000602e-06, 6.180000000001462e-06, 6.166000000001892e-06, 6.2090000000000756e-06, 6.194000000001032e-06, 6.236999999999215e-06, 6.180000000001462e-06, 6.208000000000602e-06, 6.181000000000936e-06, 6.181000000000936e-06, 6.2090000000000756e-06, 6.207999999993663e-06, 6.2229999999996455e-06, 6.208000000000602e-06, 6.195000000000506e-06, 6.194000000001032e-06, 6.194000000001032e-06, 6.2229999999996455e-06, 6.195000000000506e-06, 6.208000000000602e-06, 6.208000000000602e-06, 6.208000000000602e-06, 6.194000000001032e-06, 6.153000000008735e-06, 6.208999999993137e-06, 6.207999999993663e-06, 6.166000000001892e-06, 6.208999999993137e-06, 6.207999999993663e-06, 6.139000000002226e-06, 6.167000000001366e-06, 6.181000000007875e-06, 6.195000000000506e-06, 6.2090000000070145e-06, 6.181000000007875e-06, 6.167000000001366e-06, 6.194000000001032e-06, 6.208999999993137e-06]</msg>
<status status="PASS" starttime="20201115 22:05:09.492" endtime="20201115 22:05:09.496"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:09.480" endtime="20201115 22:05:09.498"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:09.505" endtime="20201115 22:05:09.507"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:05:09.513" endtime="20201115 22:05:09.535"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:09.508" endtime="20201115 22:05:09.537"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:09.500" endtime="20201115 22:05:09.539"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:08.938" endtime="20201115 22:05:09.539"></status>
</kw>
<msg timestamp="20201115 22:05:09.540" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:09.564" endtime="20201115 22:05:09.603"></status>
</kw>
<msg timestamp="20201115 22:05:09.604" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:05:09.560" endtime="20201115 22:05:09.605"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:05:09.610" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:05:09.606" endtime="20201115 22:05:09.611"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:09.613" endtime="20201115 22:05:09.617"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:09.553" endtime="20201115 22:05:09.618"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:09.547" endtime="20201115 22:05:09.620"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:09.637" endtime="20201115 22:05:09.995"></status>
</kw>
<msg timestamp="20201115 22:05:10.002" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043639097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043645292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:05:09.634" endtime="20201115 22:05:10.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:05:10.021" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043639097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043645292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:05:10.005" endtime="20201115 22:05:10.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:10.024" endtime="20201115 22:05:10.028"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:09.626" endtime="20201115 22:05:10.030"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:09.621" endtime="20201115 22:05:10.031"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:05:10.043" level="INFO">${RESULT} = [{'time': 0.043645292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.195000000000506e-06, 'source_diff': 6.195000000000506e-06}, {'time': 0.044198806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:05:10.033" endtime="20201115 22:05:10.043"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:05:10.077" level="INFO">${OVERHEAD} = {'time': [0.043645292, 0.044198806, 0.044753181, 0.045308222, 0.045861292, 0.046413292, 0.046966167, 0.047519958, 0.048074028, 0.048626333, 0.049180181, 0.049736681, 0.050287431, 0.050837528, 0.051388...</msg>
<status status="PASS" starttime="20201115 22:05:10.045" endtime="20201115 22:05:10.078"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:05:10.088" level="INFO">NAME: 00-overhead-21-remove</msg>
<status status="PASS" starttime="20201115 22:05:10.086" endtime="20201115 22:05:10.089"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:05:10.094" level="INFO">VALUE: [6.195000000000506e-06, 6.195000000000506e-06, 6.2229999999996455e-06, 6.194000000001032e-06, 6.2090000000000756e-06, 6.2090000000000756e-06, 6.2090000000000756e-06, 6.125000000002656e-06, 6.195000000000506e-06, 6.208000000000602e-06, 6.2090000000000756e-06, 6.181000000000936e-06, 6.249999999999312e-06, 6.195000000000506e-06, 6.2090000000000756e-06, 6.195000000000506e-06, 6.181000000000936e-06, 6.2640000000058205e-06, 6.167000000001366e-06, 6.194000000001032e-06, 6.208000000000602e-06, 6.208000000000602e-06, 6.195000000000506e-06, 6.2090000000000756e-06, 6.249999999999312e-06, 6.222000000000172e-06, 6.194000000001032e-06, 6.194000000001032e-06, 6.2090000000000756e-06, 6.291999999998021e-06, 6.208000000000602e-06, 6.208000000000602e-06, 6.2090000000000756e-06, 6.222000000000172e-06, 6.208000000000602e-06, 6.208999999993137e-06, 6.249999999999312e-06, 6.2090000000070145e-06, 6.249999999999312e-06, 6.193999999987154e-06, 6.2090000000070145e-06, 6.208000000007541e-06, 6.181000000007875e-06, 6.180000000008401e-06, 6.208000000007541e-06, 6.208000000007541e-06, 6.2229999999996455e-06, 6.208000000007541e-06, 6.181000000007875e-06, 6.207999999993663e-06]</msg>
<status status="PASS" starttime="20201115 22:05:10.091" endtime="20201115 22:05:10.095"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:10.079" endtime="20201115 22:05:10.097"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:10.103" endtime="20201115 22:05:10.106"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:05:10.111" endtime="20201115 22:05:10.134"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:10.107" endtime="20201115 22:05:10.135"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:10.098" endtime="20201115 22:05:10.137"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:09.541" endtime="20201115 22:05:10.138"></status>
</kw>
<msg timestamp="20201115 22:05:10.139" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:10.162" endtime="20201115 22:05:10.200"></status>
</kw>
<msg timestamp="20201115 22:05:10.202" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:05:10.159" endtime="20201115 22:05:10.202"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:05:10.208" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:05:10.204" endtime="20201115 22:05:10.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:10.210" endtime="20201115 22:05:10.214"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:10.152" endtime="20201115 22:05:10.216"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:10.146" endtime="20201115 22:05:10.217"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:10.234" endtime="20201115 22:05:10.586"></status>
</kw>
<msg timestamp="20201115 22:05:10.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043215222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043221431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:05:10.231" endtime="20201115 22:05:10.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:05:10.611" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043215222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043221431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:05:10.595" endtime="20201115 22:05:10.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:10.614" endtime="20201115 22:05:10.618"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:10.224" endtime="20201115 22:05:10.620"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:10.219" endtime="20201115 22:05:10.621"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:05:10.632" level="INFO">${RESULT} = [{'time': 0.043221431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.2090000000000756e-06, 'source_diff': 6.2090000000000756e-06}, {'time': 0.043774139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:05:10.623" endtime="20201115 22:05:10.632"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:05:10.664" level="INFO">${OVERHEAD} = {'time': [0.043221431, 0.043774139, 0.044329736, 0.044884736, 0.045441403, 0.045996167, 0.046550931, 0.047106, 0.047656347, 0.048207931, 0.048758944, 0.049310083, 0.049863375, 0.050419042, 0.050973028...</msg>
<status status="PASS" starttime="20201115 22:05:10.634" endtime="20201115 22:05:10.664"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:05:10.676" level="INFO">NAME: 00-overhead-21-remove</msg>
<status status="PASS" starttime="20201115 22:05:10.673" endtime="20201115 22:05:10.677"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:05:10.682" level="INFO">VALUE: [6.2090000000000756e-06, 6.166999999994427e-06, 6.208000000000602e-06, 6.249999999999312e-06, 6.195000000000506e-06, 6.195000000000506e-06, 6.194999999993567e-06, 6.194000000001032e-06, 6.208000000000602e-06, 6.181000000000936e-06, 6.194000000001032e-06, 6.194000000001032e-06, 6.194000000001032e-06, 6.2090000000000756e-06, 6.2090000000000756e-06, 6.167000000001366e-06, 6.167000000001366e-06, 6.2090000000000756e-06, 6.2090000000000756e-06, 6.195000000000506e-06, 6.2090000000000756e-06, 6.208000000000602e-06, 6.222000000000172e-06, 6.2090000000000756e-06, 6.208000000000602e-06, 6.222000000000172e-06, 6.2090000000000756e-06, 6.195000000000506e-06, 6.222000000000172e-06, 6.2090000000000756e-06, 6.222000000000172e-06, 6.181000000000936e-06, 6.222000000000172e-06, 6.208000000000602e-06, 6.208000000000602e-06, 6.249999999999312e-06, 6.207999999993663e-06, 6.2640000000058205e-06, 6.2090000000070145e-06, 6.194000000001032e-06, 6.195000000000506e-06, 6.166000000001892e-06, 6.180999999993997e-06, 6.179999999994523e-06, 6.208000000007541e-06, 6.181000000007875e-06, 6.166000000001892e-06, 6.194000000001032e-06, 6.2640000000058205e-06, 6.180999999993997e-06]</msg>
<status status="PASS" starttime="20201115 22:05:10.679" endtime="20201115 22:05:10.683"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:10.666" endtime="20201115 22:05:10.685"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:10.692" endtime="20201115 22:05:10.695"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:05:10.700" endtime="20201115 22:05:10.722"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:10.696" endtime="20201115 22:05:10.724"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:10.687" endtime="20201115 22:05:10.725"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:10.140" endtime="20201115 22:05:10.726"></status>
</kw>
<msg timestamp="20201115 22:05:10.727" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:10.750" endtime="20201115 22:05:10.788"></status>
</kw>
<msg timestamp="20201115 22:05:10.790" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:05:10.747" endtime="20201115 22:05:10.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:05:10.796" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:05:10.792" endtime="20201115 22:05:10.797"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:10.798" endtime="20201115 22:05:10.802"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:10.739" endtime="20201115 22:05:10.804"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:10.733" endtime="20201115 22:05:10.805"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:10.822" endtime="20201115 22:05:11.177"></status>
</kw>
<msg timestamp="20201115 22:05:11.185" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042606819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042613028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:05:10.819" endtime="20201115 22:05:11.185"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:05:11.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042606819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042613028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:05:11.187" endtime="20201115 22:05:11.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:11.206" endtime="20201115 22:05:11.210"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:10.812" endtime="20201115 22:05:11.212"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:10.807" endtime="20201115 22:05:11.213"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:05:11.224" level="INFO">${RESULT} = [{'time': 0.042613028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.2090000000000756e-06, 'source_diff': 6.2090000000000756e-06}, {'time': 0.043167431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:05:11.215" endtime="20201115 22:05:11.225"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:05:11.256" level="INFO">${OVERHEAD} = {'time': [0.042613028, 0.043167431, 0.043723042, 0.044278347, 0.044829833, 0.045380639, 0.045934736, 0.04649, 0.04704075, 0.047591514, 0.048146292, 0.048701542, 0.049253889, 0.049808431, 0.050364764, ...</msg>
<status status="PASS" starttime="20201115 22:05:11.226" endtime="20201115 22:05:11.257"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:05:11.267" level="INFO">NAME: 00-overhead-21-remove</msg>
<status status="PASS" starttime="20201115 22:05:11.265" endtime="20201115 22:05:11.268"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:05:11.273" level="INFO">VALUE: [6.2090000000000756e-06, 6.2090000000000756e-06, 6.152999999994857e-06, 6.2640000000058205e-06, 6.208000000000602e-06, 6.222000000000172e-06, 6.207999999993663e-06, 6.207999999993663e-06, 6.181000000000936e-06, 6.195000000000506e-06, 6.2090000000000756e-06, 6.195000000000506e-06, 6.195000000000506e-06, 6.2090000000000756e-06, 6.208000000000602e-06, 6.195000000000506e-06, 6.180000000001462e-06, 6.208000000000602e-06, 6.222000000000172e-06, 6.208000000000602e-06, 6.193999999994093e-06, 6.195000000000506e-06, 6.208000000000602e-06, 6.207999999993663e-06, 6.194000000001032e-06, 6.195000000000506e-06, 6.208000000000602e-06, 6.194000000001032e-06, 6.208000000000602e-06, 6.208000000000602e-06, 6.208000000000602e-06, 6.195000000000506e-06, 6.2090000000000756e-06, 6.152999999994857e-06, 6.181000000000936e-06, 6.2090000000000756e-06, 6.179999999994523e-06, 6.195000000000506e-06, 6.139000000002226e-06, 6.195000000000506e-06, 6.263999999991943e-06, 6.195000000000506e-06, 6.208000000007541e-06, 6.208000000007541e-06, 6.180999999993997e-06, 6.2090000000070145e-06, 6.208000000007541e-06, 6.195000000000506e-06, 6.194000000001032e-06, 6.195000000000506e-06]</msg>
<status status="PASS" starttime="20201115 22:05:11.270" endtime="20201115 22:05:11.276"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:11.258" endtime="20201115 22:05:11.277"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:11.284" endtime="20201115 22:05:11.287"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:05:11.293" endtime="20201115 22:05:11.315"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:11.288" endtime="20201115 22:05:11.316"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:11.279" endtime="20201115 22:05:11.318"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:10.728" endtime="20201115 22:05:11.319"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:08.333" endtime="20201115 22:05:11.319"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:08.331" endtime="20201115 22:05:11.320"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:05:11.325" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:11.348" endtime="20201115 22:05:11.388"></status>
</kw>
<msg timestamp="20201115 22:05:11.389" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:05:11.345" endtime="20201115 22:05:11.389"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:05:11.395" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:05:11.391" endtime="20201115 22:05:11.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:11.398" endtime="20201115 22:05:11.401"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:11.337" endtime="20201115 22:05:11.403"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:11.331" endtime="20201115 22:05:11.405"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:11.422" endtime="20201115 22:05:11.774"></status>
</kw>
<msg timestamp="20201115 22:05:11.781" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047831514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047837931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:05:11.418" endtime="20201115 22:05:11.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:05:11.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047831514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047837931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:05:11.784" endtime="20201115 22:05:11.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:11.802" endtime="20201115 22:05:11.806"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:11.411" endtime="20201115 22:05:11.808"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:11.406" endtime="20201115 22:05:11.809"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:05:11.820" level="INFO">${RESULT} = [{'time': 0.047837931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.417000000001616e-06, 'source_diff': 6.417000000001616e-06}, {'time': 0.048422181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:05:11.811" endtime="20201115 22:05:11.821"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:05:11.852" level="INFO">${OVERHEAD} = {'time': [0.047837931, 0.048422181, 0.049005972, 0.049587167, 0.050169139, 0.050752292, 0.051339375, 0.051923458, 0.052511903, 0.053096167, 0.053681639, 0.054267125, 0.054853722, 0.055440236, 0.056022...</msg>
<status status="PASS" starttime="20201115 22:05:11.822" endtime="20201115 22:05:11.852"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:05:11.863" level="INFO">NAME: 00-overhead-22-remove</msg>
<status status="PASS" starttime="20201115 22:05:11.861" endtime="20201115 22:05:11.864"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:05:11.871" level="INFO">VALUE: [6.417000000001616e-06, 6.403000000002046e-06, 6.416000000002142e-06, 6.431000000001186e-06, 6.417000000001616e-06, 6.402999999995107e-06, 6.417000000001616e-06, 6.388999999995537e-06, 6.417000000001616e-06, 6.389000000002476e-06, 6.417000000001616e-06, 6.403000000002046e-06, 6.403000000002046e-06, 6.346999999996827e-06, 6.388999999995537e-06, 6.444000000001282e-06, 6.403000000002046e-06, 6.416000000002142e-06, 6.417000000001616e-06, 6.417000000001616e-06, 6.403000000002046e-06, 6.417000000001616e-06, 6.388000000003002e-06, 6.3329999999972575e-06, 6.401999999995633e-06, 6.416999999994677e-06, 6.431000000001186e-06, 6.444000000008221e-06, 6.431000000001186e-06, 6.402000000002572e-06, 6.416999999994677e-06, 6.388999999995537e-06, 6.431000000001186e-06, 6.416999999994677e-06, 6.417000000008555e-06, 6.389000000009415e-06, 6.402000000002572e-06, 6.459000000000326e-06, 6.403000000002046e-06, 6.415999999995203e-06, 6.417000000008555e-06, 6.416999999994677e-06, 6.403000000002046e-06, 6.402000000002572e-06, 6.431000000001186e-06, 6.402000000002572e-06, 6.361000000010275e-06, 6.417000000008555e-06, 6.430000000001712e-06, 6.375000000002906e-06]</msg>
<status status="PASS" starttime="20201115 22:05:11.865" endtime="20201115 22:05:11.872"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:11.854" endtime="20201115 22:05:11.873"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:11.880" endtime="20201115 22:05:11.883"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:05:11.888" endtime="20201115 22:05:11.910"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:11.884" endtime="20201115 22:05:11.912"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:11.875" endtime="20201115 22:05:11.914"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:11.326" endtime="20201115 22:05:11.914"></status>
</kw>
<msg timestamp="20201115 22:05:11.915" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:11.939" endtime="20201115 22:05:11.979"></status>
</kw>
<msg timestamp="20201115 22:05:11.980" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:05:11.935" endtime="20201115 22:05:11.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:05:11.986" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:05:11.982" endtime="20201115 22:05:11.987"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:11.989" endtime="20201115 22:05:11.993"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:11.928" endtime="20201115 22:05:11.994"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:11.922" endtime="20201115 22:05:11.996"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:12.013" endtime="20201115 22:05:12.377"></status>
</kw>
<msg timestamp="20201115 22:05:12.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042595403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042601806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:05:12.010" endtime="20201115 22:05:12.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:05:12.402" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042595403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042601806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:05:12.386" endtime="20201115 22:05:12.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:12.404" endtime="20201115 22:05:12.408"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:12.002" endtime="20201115 22:05:12.410"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:11.997" endtime="20201115 22:05:12.411"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:05:12.422" level="INFO">${RESULT} = [{'time': 0.042601806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.403000000002046e-06, 'source_diff': 6.403000000002046e-06}, {'time': 0.043185875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:05:12.413" endtime="20201115 22:05:12.423"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:05:12.456" level="INFO">${OVERHEAD} = {'time': [0.042601806, 0.043185875, 0.043769222, 0.044353278, 0.044938042, 0.045522111, 0.046104847, 0.046687556, 0.047269347, 0.047852833, 0.048438278, 0.049025194, 0.049607847, 0.050195472, 0.050780...</msg>
<status status="PASS" starttime="20201115 22:05:12.425" endtime="20201115 22:05:12.457"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:05:12.468" level="INFO">NAME: 00-overhead-22-remove</msg>
<status status="PASS" starttime="20201115 22:05:12.466" endtime="20201115 22:05:12.469"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:05:12.474" level="INFO">VALUE: [6.403000000002046e-06, 6.417000000001616e-06, 6.403000000002046e-06, 6.417000000001616e-06, 6.485999999999992e-06, 6.374999999995967e-06, 6.402999999995107e-06, 6.416999999994677e-06, 6.444000000001282e-06, 6.415999999995203e-06, 6.431000000001186e-06, 6.402000000002572e-06, 6.415999999995203e-06, 6.415999999995203e-06, 6.431000000001186e-06, 6.416000000002142e-06, 6.403000000002046e-06, 6.415999999995203e-06, 6.360999999996397e-06, 6.403000000002046e-06, 6.403000000002046e-06, 6.403000000002046e-06, 6.485999999999992e-06, 6.403000000002046e-06, 6.375000000002906e-06, 6.402999999995107e-06, 6.402999999995107e-06, 6.416999999994677e-06, 6.403000000002046e-06, 6.415999999995203e-06, 6.458000000000852e-06, 6.389000000002476e-06, 6.444000000001282e-06, 6.374999999995967e-06, 6.401999999995633e-06, 6.417000000008555e-06, 6.402000000002572e-06, 6.3469999999898885e-06, 6.403000000002046e-06, 6.417000000008555e-06, 6.403000000002046e-06, 6.402000000002572e-06, 6.403000000002046e-06, 6.388999999995537e-06, 6.444999999993817e-06, 6.416999999994677e-06, 6.403000000002046e-06, 6.403000000002046e-06, 6.388999999995537e-06, 6.388999999995537e-06]</msg>
<status status="PASS" starttime="20201115 22:05:12.471" endtime="20201115 22:05:12.475"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:12.459" endtime="20201115 22:05:12.476"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:12.483" endtime="20201115 22:05:12.487"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:05:12.493" endtime="20201115 22:05:12.515"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:12.488" endtime="20201115 22:05:12.517"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:12.478" endtime="20201115 22:05:12.518"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:11.916" endtime="20201115 22:05:12.519"></status>
</kw>
<msg timestamp="20201115 22:05:12.519" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:12.543" endtime="20201115 22:05:12.584"></status>
</kw>
<msg timestamp="20201115 22:05:12.585" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:05:12.540" endtime="20201115 22:05:12.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:05:12.591" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:05:12.587" endtime="20201115 22:05:12.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:12.593" endtime="20201115 22:05:12.597"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:12.532" endtime="20201115 22:05:12.599"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:12.526" endtime="20201115 22:05:12.600"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:12.617" endtime="20201115 22:05:12.982"></status>
</kw>
<msg timestamp="20201115 22:05:12.989" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042971472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042977889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:05:12.614" endtime="20201115 22:05:12.989"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:05:13.007" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042971472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042977889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:05:12.991" endtime="20201115 22:05:13.008"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:13.010" endtime="20201115 22:05:13.014"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:12.606" endtime="20201115 22:05:13.015"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:12.602" endtime="20201115 22:05:13.017"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:05:13.028" level="INFO">${RESULT} = [{'time': 0.042977889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.417000000001616e-06, 'source_diff': 6.417000000001616e-06}, {'time': 0.043563625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:05:13.019" endtime="20201115 22:05:13.029"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:05:13.060" level="INFO">${OVERHEAD} = {'time': [0.042977889, 0.043563625, 0.044148333, 0.044734861, 0.045323083, 0.045910444, 0.046494569, 0.047077917, 0.047662, 0.048244194, 0.048830181, 0.049417694, 0.050002389, 0.050590139, 0.051176556...</msg>
<status status="PASS" starttime="20201115 22:05:13.031" endtime="20201115 22:05:13.061"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:05:13.071" level="INFO">NAME: 00-overhead-22-remove</msg>
<status status="PASS" starttime="20201115 22:05:13.069" endtime="20201115 22:05:13.072"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:05:13.077" level="INFO">VALUE: [6.417000000001616e-06, 6.389000000002476e-06, 6.401999999995633e-06, 6.375000000002906e-06, 6.430000000001712e-06, 6.430000000001712e-06, 6.416000000002142e-06, 6.402999999995107e-06, 6.417000000001616e-06, 6.429999999994773e-06, 6.417000000001616e-06, 6.415999999995203e-06, 6.417000000001616e-06, 6.403000000002046e-06, 6.402999999995107e-06, 6.458000000000852e-06, 6.403000000002046e-06, 6.403000000002046e-06, 6.388999999995537e-06, 6.403000000002046e-06, 6.403000000002046e-06, 6.416000000002142e-06, 6.417000000001616e-06, 6.431000000001186e-06, 6.416000000002142e-06, 6.416999999994677e-06, 6.389000000002476e-06, 6.415999999995203e-06, 6.431000000001186e-06, 6.389000000002476e-06, 6.417000000001616e-06, 6.417000000001616e-06, 6.445000000000756e-06, 6.417000000001616e-06, 6.389000000009415e-06, 6.403000000002046e-06, 6.431000000001186e-06, 6.403000000002046e-06, 6.430000000001712e-06, 6.430000000001712e-06, 6.431000000001186e-06, 6.402000000002572e-06, 6.417000000008555e-06, 6.388999999995537e-06, 6.402999999988168e-06, 6.416999999994677e-06, 6.417000000008555e-06, 6.416999999994677e-06, 6.416999999994677e-06, 6.403000000002046e-06]</msg>
<status status="PASS" starttime="20201115 22:05:13.074" endtime="20201115 22:05:13.078"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:13.062" endtime="20201115 22:05:13.080"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:13.086" endtime="20201115 22:05:13.089"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:05:13.095" endtime="20201115 22:05:13.118"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:13.090" endtime="20201115 22:05:13.120"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:13.081" endtime="20201115 22:05:13.122"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:12.521" endtime="20201115 22:05:13.122"></status>
</kw>
<msg timestamp="20201115 22:05:13.123" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:13.148" endtime="20201115 22:05:13.188"></status>
</kw>
<msg timestamp="20201115 22:05:13.189" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:05:13.144" endtime="20201115 22:05:13.190"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:05:13.195" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:05:13.191" endtime="20201115 22:05:13.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:13.198" endtime="20201115 22:05:13.202"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:13.136" endtime="20201115 22:05:13.203"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:13.130" endtime="20201115 22:05:13.205"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:13.222" endtime="20201115 22:05:13.573"></status>
</kw>
<msg timestamp="20201115 22:05:13.580" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044628958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044635375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:05:13.219" endtime="20201115 22:05:13.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:05:13.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044628958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044635375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:05:13.582" endtime="20201115 22:05:13.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:13.602" endtime="20201115 22:05:13.606"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:13.211" endtime="20201115 22:05:13.607"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:13.206" endtime="20201115 22:05:13.609"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:05:13.620" level="INFO">${RESULT} = [{'time': 0.044635375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.416999999994677e-06, 'source_diff': 6.416999999994677e-06}, {'time': 0.04521725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:05:13.610" endtime="20201115 22:05:13.620"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:05:13.651" level="INFO">${OVERHEAD} = {'time': [0.044635375, 0.04521725, 0.045800417, 0.046387278, 0.046971319, 0.047557389, 0.048141625, 0.048729472, 0.049316528, 0.049898542, 0.050480847, 0.051063028, 0.051645556, 0.052232111, 0.0528199...</msg>
<status status="PASS" starttime="20201115 22:05:13.622" endtime="20201115 22:05:13.652"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:05:13.662" level="INFO">NAME: 00-overhead-22-remove</msg>
<status status="PASS" starttime="20201115 22:05:13.660" endtime="20201115 22:05:13.663"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:05:13.668" level="INFO">VALUE: [6.416999999994677e-06, 6.389000000002476e-06, 6.417000000001616e-06, 6.402999999995107e-06, 6.401999999995633e-06, 6.417000000001616e-06, 6.417000000001616e-06, 6.416000000002142e-06, 6.417000000001616e-06, 6.416999999994677e-06, 6.389000000002476e-06, 6.403000000002046e-06, 6.403000000002046e-06, 6.402999999995107e-06, 6.417000000001616e-06, 6.402999999995107e-06, 6.458000000000852e-06, 6.431000000001186e-06, 6.346999999996827e-06, 6.417000000001616e-06, 6.389000000002476e-06, 6.402999999995107e-06, 6.416000000002142e-06, 6.403000000002046e-06, 6.430000000001712e-06, 6.403000000002046e-06, 6.416000000002142e-06, 6.374999999995967e-06, 6.402000000002572e-06, 6.416999999994677e-06, 6.431000000001186e-06, 6.375000000002906e-06, 6.4019999999886945e-06, 6.417000000008555e-06, 6.333999999996731e-06, 6.444999999993817e-06, 6.4450000000076946e-06, 6.431000000001186e-06, 6.403000000002046e-06, 6.415999999995203e-06, 6.417000000008555e-06, 6.416999999994677e-06, 6.458000000000852e-06, 6.402000000002572e-06, 6.459000000000326e-06, 6.361000000010275e-06, 6.416999999994677e-06, 6.416000000009081e-06, 6.403000000002046e-06, 6.417000000008555e-06]</msg>
<status status="PASS" starttime="20201115 22:05:13.665" endtime="20201115 22:05:13.669"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:13.653" endtime="20201115 22:05:13.671"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:13.677" endtime="20201115 22:05:13.680"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:05:13.686" endtime="20201115 22:05:13.708"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:13.681" endtime="20201115 22:05:13.710"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:13.672" endtime="20201115 22:05:13.711"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:13.124" endtime="20201115 22:05:13.712"></status>
</kw>
<msg timestamp="20201115 22:05:13.712" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:13.738" endtime="20201115 22:05:13.777"></status>
</kw>
<msg timestamp="20201115 22:05:13.779" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:05:13.734" endtime="20201115 22:05:13.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:05:13.785" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:05:13.781" endtime="20201115 22:05:13.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:13.787" endtime="20201115 22:05:13.791"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:13.727" endtime="20201115 22:05:13.793"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:13.719" endtime="20201115 22:05:13.794"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:13.811" endtime="20201115 22:05:14.164"></status>
</kw>
<msg timestamp="20201115 22:05:14.171" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044219319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044225806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:05:13.808" endtime="20201115 22:05:14.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:05:14.196" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044219319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044225806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:05:14.179" endtime="20201115 22:05:14.197"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:14.199" endtime="20201115 22:05:14.203"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:13.801" endtime="20201115 22:05:14.204"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:13.796" endtime="20201115 22:05:14.206"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:05:14.217" level="INFO">${RESULT} = [{'time': 0.044225806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.486999999999465e-06, 'source_diff': 6.486999999999465e-06}, {'time': 0.044810736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:05:14.207" endtime="20201115 22:05:14.217"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:05:14.248" level="INFO">${OVERHEAD} = {'time': [0.044225806, 0.044810736, 0.045396264, 0.045981486, 0.046567556, 0.047154333, 0.047741778, 0.048324111, 0.048908375, 0.049490958, 0.050078222, 0.050660486, 0.051244444, 0.051826542, 0.052413...</msg>
<status status="PASS" starttime="20201115 22:05:14.219" endtime="20201115 22:05:14.249"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:05:14.260" level="INFO">NAME: 00-overhead-22-remove</msg>
<status status="PASS" starttime="20201115 22:05:14.257" endtime="20201115 22:05:14.260"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:05:14.265" level="INFO">VALUE: [6.486999999999465e-06, 6.402999999995107e-06, 6.417000000001616e-06, 6.403000000002046e-06, 6.459000000000326e-06, 6.402000000002572e-06, 6.403000000002046e-06, 6.389000000002476e-06, 6.374999999995967e-06, 6.416000000002142e-06, 6.415999999995203e-06, 6.416999999994677e-06, 6.402000000002572e-06, 6.403000000002046e-06, 6.417000000001616e-06, 6.417000000001616e-06, 6.485999999999992e-06, 6.415999999995203e-06, 6.403000000002046e-06, 6.403000000002046e-06, 6.431000000001186e-06, 6.403000000002046e-06, 6.431000000001186e-06, 6.403000000002046e-06, 6.403000000002046e-06, 6.458000000000852e-06, 6.402999999995107e-06, 6.458000000000852e-06, 6.375000000002906e-06, 6.403000000002046e-06, 6.389000000002476e-06, 6.403000000002046e-06, 6.403000000002046e-06, 6.430000000001712e-06, 6.416000000009081e-06, 6.361000000010275e-06, 6.416999999994677e-06, 6.416999999994677e-06, 6.388999999995537e-06, 6.443999999994343e-06, 6.415999999995203e-06, 6.416999999994677e-06, 6.402999999988168e-06, 6.403000000002046e-06, 6.431000000001186e-06, 6.417000000008555e-06, 6.416999999994677e-06, 6.417000000008555e-06, 6.417000000008555e-06, 6.444999999993817e-06]</msg>
<status status="PASS" starttime="20201115 22:05:14.262" endtime="20201115 22:05:14.266"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:14.250" endtime="20201115 22:05:14.268"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:14.274" endtime="20201115 22:05:14.277"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:05:14.283" endtime="20201115 22:05:14.305"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:14.278" endtime="20201115 22:05:14.307"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:14.269" endtime="20201115 22:05:14.308"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:13.713" endtime="20201115 22:05:14.309"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:11.322" endtime="20201115 22:05:14.310"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:11.321" endtime="20201115 22:05:14.310"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:05:14.315" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:14.339" endtime="20201115 22:05:14.381"></status>
</kw>
<msg timestamp="20201115 22:05:14.383" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:05:14.335" endtime="20201115 22:05:14.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:05:14.389" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:05:14.385" endtime="20201115 22:05:14.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:14.392" endtime="20201115 22:05:14.395"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:14.328" endtime="20201115 22:05:14.397"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:14.322" endtime="20201115 22:05:14.399"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:14.416" endtime="20201115 22:05:14.768"></status>
</kw>
<msg timestamp="20201115 22:05:14.775" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049835944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049842542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:05:14.413" endtime="20201115 22:05:14.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:05:14.793" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049835944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049842542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:05:14.777" endtime="20201115 22:05:14.794"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:14.796" endtime="20201115 22:05:14.799"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:14.406" endtime="20201115 22:05:14.801"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:14.401" endtime="20201115 22:05:14.803"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:05:14.814" level="INFO">${RESULT} = [{'time': 0.049842542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.597999999996551e-06, 'source_diff': 6.597999999996551e-06}, {'time': 0.050461333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:05:14.804" endtime="20201115 22:05:14.814"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:05:14.847" level="INFO">${OVERHEAD} = {'time': [0.049842542, 0.050461333, 0.051076306, 0.051691, 0.052304625, 0.052921819, 0.053540361, 0.054158, 0.054777333, 0.055395375, 0.056011597, 0.056629111, 0.057244, 0.057860639, 0.058478069, 0.05...</msg>
<status status="PASS" starttime="20201115 22:05:14.816" endtime="20201115 22:05:14.848"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:05:14.859" level="INFO">NAME: 00-overhead-23-remove</msg>
<status status="PASS" starttime="20201115 22:05:14.856" endtime="20201115 22:05:14.859"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:05:14.864" level="INFO">VALUE: [6.597999999996551e-06, 6.6519999999958834e-06, 6.61200000000306e-06, 6.639000000002726e-06, 6.611000000003586e-06, 6.611000000003586e-06, 6.611000000003586e-06, 6.624999999996217e-06, 6.5969999999970774e-06, 6.638999999995787e-06, 6.625000000003156e-06, 6.625000000003156e-06, 6.597000000004016e-06, 6.652999999995357e-06, 6.625000000003156e-06, 6.624999999996217e-06, 6.610999999996647e-06, 6.568999999997938e-06, 6.55600000000478e-06, 6.611000000003586e-06, 6.624999999996217e-06, 6.625000000010095e-06, 6.611000000003586e-06, 6.624999999996217e-06, 6.569999999997411e-06, 6.624999999996217e-06, 6.624999999996217e-06, 6.667000000001866e-06, 6.597000000010955e-06, 6.611000000003586e-06, 6.5969999999970774e-06, 6.695000000001006e-06, 6.652999999995357e-06, 6.625000000010095e-06, 6.680999999994497e-06, 6.639000000002726e-06, 6.61200000000306e-06, 6.624999999996217e-06, 6.624999999996217e-06, 6.624999999996217e-06, 6.624999999996217e-06, 6.624999999996217e-06, 6.624999999996217e-06, 6.611000000003586e-06, 6.639000000002726e-06, 6.52800000000564e-06, 6.55600000000478e-06, 6.597000000010955e-06, 6.568999999997938e-06, 6.6109999999897084e-06]</msg>
<status status="PASS" starttime="20201115 22:05:14.861" endtime="20201115 22:05:14.865"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:14.849" endtime="20201115 22:05:14.867"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:14.873" endtime="20201115 22:05:14.876"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:05:14.882" endtime="20201115 22:05:14.904"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:14.877" endtime="20201115 22:05:14.906"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:14.868" endtime="20201115 22:05:14.907"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:14.316" endtime="20201115 22:05:14.908"></status>
</kw>
<msg timestamp="20201115 22:05:14.908" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:14.932" endtime="20201115 22:05:14.973"></status>
</kw>
<msg timestamp="20201115 22:05:14.974" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:05:14.928" endtime="20201115 22:05:14.975"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:05:14.981" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:05:14.977" endtime="20201115 22:05:14.982"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:14.984" endtime="20201115 22:05:14.988"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:14.921" endtime="20201115 22:05:14.989"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:14.915" endtime="20201115 22:05:14.991"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:15.010" endtime="20201115 22:05:15.368"></status>
</kw>
<msg timestamp="20201115 22:05:15.375" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042606056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042612681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:05:15.006" endtime="20201115 22:05:15.376"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:05:15.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042606056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042612681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:05:15.378" endtime="20201115 22:05:15.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:15.396" endtime="20201115 22:05:15.400"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:14.997" endtime="20201115 22:05:15.402"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:14.992" endtime="20201115 22:05:15.403"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:05:15.414" level="INFO">${RESULT} = [{'time': 0.042612681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.624999999996217e-06, 'source_diff': 6.624999999996217e-06}, {'time': 0.043232514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:05:15.405" endtime="20201115 22:05:15.415"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:05:15.445" level="INFO">${OVERHEAD} = {'time': [0.042612681, 0.043232514, 0.043850847, 0.044467069, 0.045084903, 0.045702514, 0.046317861, 0.046934569, 0.047548347, 0.048163806, 0.048780667, 0.0494005, 0.050020194, 0.050633903, 0.05125045...</msg>
<status status="PASS" starttime="20201115 22:05:15.416" endtime="20201115 22:05:15.446"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:05:15.457" level="INFO">NAME: 00-overhead-23-remove</msg>
<status status="PASS" starttime="20201115 22:05:15.454" endtime="20201115 22:05:15.458"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:05:15.462" level="INFO">VALUE: [6.624999999996217e-06, 6.624999999996217e-06, 6.610999999996647e-06, 6.540999999998798e-06, 6.709000000000576e-06, 6.624999999996217e-06, 6.554999999998368e-06, 6.638000000003252e-06, 6.638999999995787e-06, 6.58400000000392e-06, 6.597999999996551e-06, 6.639000000002726e-06, 6.624999999996217e-06, 6.625000000003156e-06, 6.638999999995787e-06, 6.611000000003586e-06, 6.624999999996217e-06, 6.638000000003252e-06, 6.653000000002296e-06, 6.638999999995787e-06, 6.624999999996217e-06, 6.625000000003156e-06, 6.6519999999958834e-06, 6.624999999996217e-06, 6.5969999999970774e-06, 6.610999999996647e-06, 6.5969999999970774e-06, 6.610999999996647e-06, 6.597000000004016e-06, 6.625000000003156e-06, 6.625000000003156e-06, 6.597000000004016e-06, 6.611999999996121e-06, 6.639000000002726e-06, 6.624999999996217e-06, 6.611000000003586e-06, 6.597999999996551e-06, 6.611000000003586e-06, 6.611000000003586e-06, 6.624999999996217e-06, 6.625000000010095e-06, 6.624999999996217e-06, 6.611000000003586e-06, 6.681000000008375e-06, 6.597000000010955e-06, 6.638000000003252e-06, 6.625000000010095e-06, 6.624999999996217e-06, 6.624999999996217e-06, 6.653000000009235e-06]</msg>
<status status="PASS" starttime="20201115 22:05:15.459" endtime="20201115 22:05:15.463"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:15.447" endtime="20201115 22:05:15.465"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:15.471" endtime="20201115 22:05:15.474"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:05:15.480" endtime="20201115 22:05:15.502"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:15.476" endtime="20201115 22:05:15.504"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:15.467" endtime="20201115 22:05:15.506"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:14.909" endtime="20201115 22:05:15.506"></status>
</kw>
<msg timestamp="20201115 22:05:15.507" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:15.531" endtime="20201115 22:05:15.573"></status>
</kw>
<msg timestamp="20201115 22:05:15.574" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:05:15.527" endtime="20201115 22:05:15.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:05:15.581" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:05:15.577" endtime="20201115 22:05:15.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:15.583" endtime="20201115 22:05:15.587"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:15.520" endtime="20201115 22:05:15.589"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:15.514" endtime="20201115 22:05:15.590"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:15.607" endtime="20201115 22:05:15.972"></status>
</kw>
<msg timestamp="20201115 22:05:15.979" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043805847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043812458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:05:15.604" endtime="20201115 22:05:15.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:05:15.998" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043805847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043812458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:05:15.982" endtime="20201115 22:05:15.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:16.001" endtime="20201115 22:05:16.005"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:15.596" endtime="20201115 22:05:16.007"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:15.591" endtime="20201115 22:05:16.008"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:05:16.019" level="INFO">${RESULT} = [{'time': 0.043812458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.610999999996647e-06, 'source_diff': 6.610999999996647e-06}, {'time': 0.044427986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:05:16.010" endtime="20201115 22:05:16.019"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:05:16.050" level="INFO">${OVERHEAD} = {'time': [0.043812458, 0.044427986, 0.045045333, 0.045665319, 0.046280917, 0.046899319, 0.047517083, 0.048131333, 0.048750736, 0.049368083, 0.049984722, 0.050598319, 0.051214208, 0.051828889, 0.052446...</msg>
<status status="PASS" starttime="20201115 22:05:16.021" endtime="20201115 22:05:16.051"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:05:16.062" level="INFO">NAME: 00-overhead-23-remove</msg>
<status status="PASS" starttime="20201115 22:05:16.059" endtime="20201115 22:05:16.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:05:16.067" level="INFO">VALUE: [6.610999999996647e-06, 6.653000000002296e-06, 6.639000000002726e-06, 6.625000000003156e-06, 6.597999999996551e-06, 6.611000000003586e-06, 6.597000000004016e-06, 6.5969999999970774e-06, 6.625000000003156e-06, 6.625000000003156e-06, 6.5690000000048765e-06, 6.666000000002392e-06, 6.679999999995023e-06, 6.611000000003586e-06, 6.610999999996647e-06, 6.625000000003156e-06, 6.611999999996121e-06, 6.5969999999970774e-06, 6.554999999998368e-06, 6.680999999994497e-06, 6.624999999996217e-06, 6.652999999995357e-06, 6.611000000003586e-06, 6.624999999996217e-06, 6.639000000002726e-06, 6.624999999996217e-06, 6.638999999995787e-06, 6.624999999996217e-06, 6.5969999999970774e-06, 6.61200000000306e-06, 6.625000000003156e-06, 6.624999999996217e-06, 6.611999999989182e-06, 6.611000000003586e-06, 6.6519999999958834e-06, 6.624999999996217e-06, 6.611000000003586e-06, 6.583000000004446e-06, 6.639000000002726e-06, 6.639000000002726e-06, 6.6519999999958834e-06, 6.694000000001532e-06, 6.624999999996217e-06, 6.639000000002726e-06, 6.625000000010095e-06, 6.611000000003586e-06, 6.611000000003586e-06, 6.597999999996551e-06, 6.611000000003586e-06, 6.639000000002726e-06]</msg>
<status status="PASS" starttime="20201115 22:05:16.064" endtime="20201115 22:05:16.068"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:16.052" endtime="20201115 22:05:16.070"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:16.076" endtime="20201115 22:05:16.079"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:05:16.085" endtime="20201115 22:05:16.107"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:16.080" endtime="20201115 22:05:16.109"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:16.072" endtime="20201115 22:05:16.111"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:15.508" endtime="20201115 22:05:16.112"></status>
</kw>
<msg timestamp="20201115 22:05:16.112" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:16.136" endtime="20201115 22:05:16.178"></status>
</kw>
<msg timestamp="20201115 22:05:16.179" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:05:16.133" endtime="20201115 22:05:16.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:05:16.186" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:05:16.181" endtime="20201115 22:05:16.186"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:16.188" endtime="20201115 22:05:16.192"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:16.125" endtime="20201115 22:05:16.193"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:16.119" endtime="20201115 22:05:16.195"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:16.212" endtime="20201115 22:05:16.578"></status>
</kw>
<msg timestamp="20201115 22:05:16.585" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043596903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043603528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:05:16.209" endtime="20201115 22:05:16.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:05:16.603" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043596903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043603528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:05:16.587" endtime="20201115 22:05:16.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:16.606" endtime="20201115 22:05:16.610"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:16.201" endtime="20201115 22:05:16.611"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:16.196" endtime="20201115 22:05:16.613"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:05:16.624" level="INFO">${RESULT} = [{'time': 0.043603528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.625000000003156e-06, 'source_diff': 6.625000000003156e-06}, {'time': 0.044219097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:05:16.615" endtime="20201115 22:05:16.624"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:05:16.655" level="INFO">${OVERHEAD} = {'time': [0.043603528, 0.044219097, 0.044836833, 0.045454625, 0.046072194, 0.046691139, 0.047310347, 0.047926986, 0.048544917, 0.049160986, 0.049777167, 0.050396208, 0.051015014, 0.051635069, 0.052250...</msg>
<status status="PASS" starttime="20201115 22:05:16.626" endtime="20201115 22:05:16.656"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:05:16.667" level="INFO">NAME: 00-overhead-23-remove</msg>
<status status="PASS" starttime="20201115 22:05:16.664" endtime="20201115 22:05:16.667"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:05:16.672" level="INFO">VALUE: [6.625000000003156e-06, 6.638999999995787e-06, 6.610999999996647e-06, 6.638999999995787e-06, 6.610999999996647e-06, 6.667000000001866e-06, 6.5690000000048765e-06, 6.5969999999970774e-06, 6.681000000001436e-06, 6.638999999995787e-06, 6.624999999996217e-06, 6.624999999996217e-06, 6.624999999996217e-06, 6.624999999996217e-06, 6.610999999996647e-06, 6.624999999996217e-06, 6.610999999996647e-06, 6.610999999996647e-06, 6.625000000003156e-06, 6.5969999999970774e-06, 6.583999999996981e-06, 6.625000000003156e-06, 6.625000000003156e-06, 6.611000000003586e-06, 6.625000000003156e-06, 6.625000000003156e-06, 6.638999999995787e-06, 6.583999999996981e-06, 6.625000000003156e-06, 6.624999999996217e-06, 6.625000000003156e-06, 6.597000000010955e-06, 6.625000000010095e-06, 6.611000000003586e-06, 6.5969999999970774e-06, 6.624999999996217e-06, 6.624999999996217e-06, 6.6109999999897084e-06, 6.666000000002392e-06, 6.611000000003586e-06, 6.611000000003586e-06, 6.625000000010095e-06, 6.624999999996217e-06, 6.639000000002726e-06, 6.597999999996551e-06, 6.639000000002726e-06, 6.624999999996217e-06, 6.639000000002726e-06, 6.624999999996217e-06, 6.611000000003586e-06]</msg>
<status status="PASS" starttime="20201115 22:05:16.669" endtime="20201115 22:05:16.673"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:16.657" endtime="20201115 22:05:16.675"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:16.682" endtime="20201115 22:05:16.685"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:05:16.690" endtime="20201115 22:05:16.713"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:16.686" endtime="20201115 22:05:16.714"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:16.677" endtime="20201115 22:05:16.716"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:16.114" endtime="20201115 22:05:16.717"></status>
</kw>
<msg timestamp="20201115 22:05:16.717" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:16.741" endtime="20201115 22:05:16.783"></status>
</kw>
<msg timestamp="20201115 22:05:16.784" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:05:16.737" endtime="20201115 22:05:16.785"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:05:16.790" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:05:16.786" endtime="20201115 22:05:16.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:16.793" endtime="20201115 22:05:16.797"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:16.730" endtime="20201115 22:05:16.798"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:16.724" endtime="20201115 22:05:16.800"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:16.817" endtime="20201115 22:05:17.180"></status>
</kw>
<msg timestamp="20201115 22:05:17.187" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043044486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043051125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:05:16.814" endtime="20201115 22:05:17.188"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:05:17.206" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043044486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043051125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:05:17.190" endtime="20201115 22:05:17.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:17.208" endtime="20201115 22:05:17.214"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:16.806" endtime="20201115 22:05:17.215"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:16.801" endtime="20201115 22:05:17.217"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:05:17.228" level="INFO">${RESULT} = [{'time': 0.043051125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.639000000002726e-06, 'source_diff': 6.639000000002726e-06}, {'time': 0.043664944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:05:17.218" endtime="20201115 22:05:17.228"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:05:17.262" level="INFO">${OVERHEAD} = {'time': [0.043051125, 0.043664944, 0.04427725, 0.044895292, 0.045509708, 0.046124694, 0.046741806, 0.047358125, 0.047974889, 0.048590931, 0.049206806, 0.049824625, 0.050439, 0.051054097, 0.051674139,...</msg>
<status status="PASS" starttime="20201115 22:05:17.230" endtime="20201115 22:05:17.263"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:05:17.274" level="INFO">NAME: 00-overhead-23-remove</msg>
<status status="PASS" starttime="20201115 22:05:17.271" endtime="20201115 22:05:17.275"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:05:17.280" level="INFO">VALUE: [6.639000000002726e-06, 6.624999999996217e-06, 6.568999999997938e-06, 6.625000000003156e-06, 6.639000000002726e-06, 6.625000000003156e-06, 6.638999999995787e-06, 6.611000000003586e-06, 6.5969999999970774e-06, 6.624999999996217e-06, 6.624999999996217e-06, 6.5969999999970774e-06, 6.610999999996647e-06, 6.610999999996647e-06, 6.639000000002726e-06, 6.610999999996647e-06, 6.610999999996647e-06, 6.625000000003156e-06, 6.624999999996217e-06, 6.610999999996647e-06, 6.5829999999975075e-06, 6.611000000003586e-06, 6.625000000003156e-06, 6.624999999996217e-06, 6.610999999996647e-06, 6.611000000003586e-06, 6.624999999996217e-06, 6.625000000003156e-06, 6.625000000003156e-06, 6.639000000002726e-06, 6.611000000003586e-06, 6.5969999999970774e-06, 6.611000000003586e-06, 6.61200000000306e-06, 6.624999999996217e-06, 6.624999999996217e-06, 6.597000000010955e-06, 6.653000000009235e-06, 6.597999999996551e-06, 6.624999999996217e-06, 6.625000000010095e-06, 6.6519999999958834e-06, 6.639000000002726e-06, 6.6109999999897084e-06, 6.611000000003586e-06, 6.624999999996217e-06, 6.624999999996217e-06, 6.638999999988848e-06, 6.611000000003586e-06, 6.5969999999970774e-06]</msg>
<status status="PASS" starttime="20201115 22:05:17.277" endtime="20201115 22:05:17.282"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:17.264" endtime="20201115 22:05:17.283"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:17.290" endtime="20201115 22:05:17.293"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:05:17.299" endtime="20201115 22:05:17.321"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:17.294" endtime="20201115 22:05:17.323"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:17.286" endtime="20201115 22:05:17.324"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:16.718" endtime="20201115 22:05:17.325"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:14.313" endtime="20201115 22:05:17.326"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:14.311" endtime="20201115 22:05:17.326"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:05:17.331" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:17.355" endtime="20201115 22:05:17.398"></status>
</kw>
<msg timestamp="20201115 22:05:17.399" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:05:17.351" endtime="20201115 22:05:17.400"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:05:17.406" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:05:17.401" endtime="20201115 22:05:17.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:17.408" endtime="20201115 22:05:17.412"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:17.344" endtime="20201115 22:05:17.413"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:17.338" endtime="20201115 22:05:17.415"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:17.432" endtime="20201115 22:05:17.798"></status>
</kw>
<msg timestamp="20201115 22:05:17.805" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048233264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048240097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:05:17.428" endtime="20201115 22:05:17.806"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:05:17.824" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048233264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048240097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:05:17.807" endtime="20201115 22:05:17.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:17.826" endtime="20201115 22:05:17.832"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:17.421" endtime="20201115 22:05:17.834"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:17.416" endtime="20201115 22:05:17.835"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:05:17.846" level="INFO">${RESULT} = [{'time': 0.048240097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.8330000000046964e-06, 'source_diff': 6.8330000000046964e-06}, {'time': 0.048890014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:05:17.837" endtime="20201115 22:05:17.847"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:05:17.878" level="INFO">${OVERHEAD} = {'time': [0.048240097, 0.048890014, 0.049539125, 0.050190347, 0.050841458, 0.051490736, 0.052140722, 0.052788889, 0.053436111, 0.054088111, 0.054738625, 0.055388764, 0.056040528, 0.056691583, 0.057341...</msg>
<status status="PASS" starttime="20201115 22:05:17.848" endtime="20201115 22:05:17.878"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:05:17.889" level="INFO">NAME: 00-overhead-24-remove</msg>
<status status="PASS" starttime="20201115 22:05:17.887" endtime="20201115 22:05:17.890"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:05:17.895" level="INFO">VALUE: [6.8330000000046964e-06, 6.903000000002546e-06, 6.8330000000046964e-06, 6.8190000000051265e-06, 6.776999999999478e-06, 6.861000000003836e-06, 6.8469999999973274e-06, 6.8329999999977575e-06, 6.818999999998188e-06, 6.818999999998188e-06, 6.749999999999812e-06, 6.860999999996897e-06, 6.833999999997231e-06, 6.8469999999973274e-06, 6.847999999996801e-06, 6.819999999997661e-06, 6.8329999999977575e-06, 6.8329999999977575e-06, 6.818999999998188e-06, 6.804999999998618e-06, 6.8330000000046964e-06, 6.83400000000417e-06, 6.833999999997231e-06, 6.834000000011109e-06, 6.8329999999977575e-06, 6.8190000000051265e-06, 6.818999999991249e-06, 6.833999999997231e-06, 6.8190000000051265e-06, 6.847999999989862e-06, 6.805999999998091e-06, 6.7779999999989515e-06, 6.818999999991249e-06, 6.875000000003406e-06, 6.805999999998091e-06, 6.889000000009915e-06, 6.8190000000051265e-06, 6.819999999990722e-06, 6.79200000000546e-06, 6.847000000004266e-06, 6.8200000000046e-06, 6.8200000000046e-06, 6.805999999998091e-06, 6.8190000000051265e-06, 6.8190000000051265e-06, 6.847000000004266e-06, 6.8329999999977575e-06, 6.8200000000046e-06, 6.805999999998091e-06, 6.749999999999812e-06]</msg>
<status status="PASS" starttime="20201115 22:05:17.891" endtime="20201115 22:05:17.896"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:17.879" endtime="20201115 22:05:17.898"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:17.904" endtime="20201115 22:05:17.907"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:05:17.913" endtime="20201115 22:05:17.935"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:17.908" endtime="20201115 22:05:17.937"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:17.900" endtime="20201115 22:05:17.939"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:17.332" endtime="20201115 22:05:17.940"></status>
</kw>
<msg timestamp="20201115 22:05:17.941" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:17.970" endtime="20201115 22:05:18.013"></status>
</kw>
<msg timestamp="20201115 22:05:18.014" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:05:17.966" endtime="20201115 22:05:18.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:05:18.021" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:05:18.017" endtime="20201115 22:05:18.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:18.023" endtime="20201115 22:05:18.027"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:17.957" endtime="20201115 22:05:18.029"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:17.949" endtime="20201115 22:05:18.030"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:18.047" endtime="20201115 22:05:18.412"></status>
</kw>
<msg timestamp="20201115 22:05:18.419" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049153583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049160403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:05:18.044" endtime="20201115 22:05:18.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:05:18.437" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049153583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049160403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:05:18.421" endtime="20201115 22:05:18.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:18.440" endtime="20201115 22:05:18.445"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:18.036" endtime="20201115 22:05:18.447"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:18.031" endtime="20201115 22:05:18.448"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:05:18.459" level="INFO">${RESULT} = [{'time': 0.049160403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.819999999997661e-06, 'source_diff': 6.819999999997661e-06}, {'time': 0.049808694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:05:18.450" endtime="20201115 22:05:18.459"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:05:18.490" level="INFO">${OVERHEAD} = {'time': [0.049160403, 0.049808694, 0.050454403, 0.051103597, 0.051751444, 0.052402403, 0.053050917, 0.053699472, 0.054345986, 0.054997056, 0.055643722, 0.056294083, 0.056946931, 0.057593833, 0.058246...</msg>
<status status="PASS" starttime="20201115 22:05:18.461" endtime="20201115 22:05:18.491"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:05:18.502" level="INFO">NAME: 00-overhead-24-remove</msg>
<status status="PASS" starttime="20201115 22:05:18.500" endtime="20201115 22:05:18.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:05:18.507" level="INFO">VALUE: [6.819999999997661e-06, 6.902000000003072e-06, 6.861000000003836e-06, 6.818999999998188e-06, 6.8329999999977575e-06, 6.819999999997661e-06, 6.83400000000417e-06, 6.818999999998188e-06, 6.8329999999977575e-06, 6.80600000000503e-06, 6.8469999999973274e-06, 6.8330000000046964e-06, 6.819999999997661e-06, 6.8329999999977575e-06, 6.818999999998188e-06, 6.818999999998188e-06, 6.804999999998618e-06, 6.7919999999985214e-06, 6.818999999998188e-06, 6.83400000000417e-06, 6.833999999997231e-06, 6.804999999998618e-06, 6.833000000011635e-06, 6.8329999999977575e-06, 6.8329999999977575e-06, 6.8190000000051265e-06, 6.8469999999903886e-06, 6.819999999990722e-06, 6.8329999999977575e-06, 6.8329999999977575e-06, 6.8050000000124955e-06, 6.818999999991249e-06, 6.8190000000051265e-06, 6.8329999999977575e-06, 6.833999999997231e-06, 6.8050000000124955e-06, 6.8200000000046e-06, 6.762999999992969e-06, 6.889000000009915e-06, 6.736000000007181e-06, 6.8190000000051265e-06, 6.805999999998091e-06, 6.84800000000374e-06, 6.833999999997231e-06, 6.833000000011635e-06, 6.8469999999903886e-06, 6.8329999999977575e-06, 6.8329999999977575e-06, 6.819999999990722e-06, 6.818999999991249e-06]</msg>
<status status="PASS" starttime="20201115 22:05:18.504" endtime="20201115 22:05:18.508"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:18.493" endtime="20201115 22:05:18.510"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:18.516" endtime="20201115 22:05:18.519"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:05:18.524" endtime="20201115 22:05:18.546"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:18.520" endtime="20201115 22:05:18.548"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:18.512" endtime="20201115 22:05:18.549"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:17.942" endtime="20201115 22:05:18.550"></status>
</kw>
<msg timestamp="20201115 22:05:18.550" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:18.577" endtime="20201115 22:05:18.619"></status>
</kw>
<msg timestamp="20201115 22:05:18.620" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:05:18.573" endtime="20201115 22:05:18.620"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:05:18.626" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:05:18.622" endtime="20201115 22:05:18.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:18.628" endtime="20201115 22:05:18.632"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:18.565" endtime="20201115 22:05:18.634"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:18.558" endtime="20201115 22:05:18.636"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:18.652" endtime="20201115 22:05:19.006"></status>
</kw>
<msg timestamp="20201115 22:05:19.013" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044891667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044898472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:05:18.649" endtime="20201115 22:05:19.014"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:05:19.032" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044891667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044898472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:05:19.015" endtime="20201115 22:05:19.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:19.034" endtime="20201115 22:05:19.040"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:18.641" endtime="20201115 22:05:19.041"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:18.637" endtime="20201115 22:05:19.043"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:05:19.054" level="INFO">${RESULT} = [{'time': 0.044898472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.804999999998618e-06, 'source_diff': 6.804999999998618e-06}, {'time': 0.045550208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:05:19.045" endtime="20201115 22:05:19.055"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:05:19.086" level="INFO">${OVERHEAD} = {'time': [0.044898472, 0.045550208, 0.046197861, 0.046849194, 0.047499403, 0.048151889, 0.048802194, 0.049449917, 0.050098153, 0.050748028, 0.051395764, 0.052046042, 0.052697958, 0.053346917, 0.053997...</msg>
<status status="PASS" starttime="20201115 22:05:19.057" endtime="20201115 22:05:19.087"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:05:19.097" level="INFO">NAME: 00-overhead-24-remove</msg>
<status status="PASS" starttime="20201115 22:05:19.095" endtime="20201115 22:05:19.098"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:05:19.103" level="INFO">VALUE: [6.804999999998618e-06, 6.8190000000051265e-06, 6.804999999998618e-06, 6.818999999998188e-06, 6.8200000000046e-06, 6.80600000000503e-06, 6.8329999999977575e-06, 6.83400000000417e-06, 6.819999999997661e-06, 6.819999999997661e-06, 6.8469999999973274e-06, 6.819999999997661e-06, 6.847000000004266e-06, 6.819999999997661e-06, 6.83400000000417e-06, 6.847000000004266e-06, 6.847000000004266e-06, 6.83400000000417e-06, 6.8469999999973274e-06, 6.8329999999977575e-06, 6.818999999998188e-06, 6.847000000004266e-06, 6.818999999998188e-06, 6.805999999998091e-06, 6.8190000000051265e-06, 6.8330000000046964e-06, 6.818999999998188e-06, 6.819999999997661e-06, 6.736000000007181e-06, 6.8190000000051265e-06, 6.7640000000063205e-06, 6.818999999991249e-06, 6.8469999999903886e-06, 6.888999999996037e-06, 6.8190000000051265e-06, 6.819999999990722e-06, 6.861000000010775e-06, 6.8050000000124955e-06, 6.819999999990722e-06, 6.8190000000051265e-06, 6.8329999999977575e-06, 6.8329999999977575e-06, 6.804999999998618e-06, 6.8050000000124955e-06, 6.806000000011969e-06, 6.833999999997231e-06, 6.8190000000051265e-06, 6.805999999998091e-06, 6.778000000012829e-06, 6.804999999998618e-06]</msg>
<status status="PASS" starttime="20201115 22:05:19.100" endtime="20201115 22:05:19.104"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:19.088" endtime="20201115 22:05:19.106"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:19.112" endtime="20201115 22:05:19.115"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:05:19.120" endtime="20201115 22:05:19.142"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:19.116" endtime="20201115 22:05:19.144"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:19.107" endtime="20201115 22:05:19.146"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:18.552" endtime="20201115 22:05:19.147"></status>
</kw>
<msg timestamp="20201115 22:05:19.147" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:19.172" endtime="20201115 22:05:19.215"></status>
</kw>
<msg timestamp="20201115 22:05:19.216" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:05:19.168" endtime="20201115 22:05:19.216"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:05:19.222" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:05:19.218" endtime="20201115 22:05:19.223"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:19.225" endtime="20201115 22:05:19.229"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:19.160" endtime="20201115 22:05:19.230"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:19.154" endtime="20201115 22:05:19.232"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:19.249" endtime="20201115 22:05:19.609"></status>
</kw>
<msg timestamp="20201115 22:05:19.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043828833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043835653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:05:19.246" endtime="20201115 22:05:19.617"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:05:19.635" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043828833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043835653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:05:19.619" endtime="20201115 22:05:19.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:19.643" endtime="20201115 22:05:19.649"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:19.238" endtime="20201115 22:05:19.651"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:19.233" endtime="20201115 22:05:19.652"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:05:19.663" level="INFO">${RESULT} = [{'time': 0.043835653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.8200000000046e-06, 'source_diff': 6.8200000000046e-06}, {'time': 0.044486083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6...</msg>
<status status="PASS" starttime="20201115 22:05:19.654" endtime="20201115 22:05:19.664"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:05:19.697" level="INFO">${OVERHEAD} = {'time': [0.043835653, 0.044486083, 0.045136861, 0.045789139, 0.046441569, 0.047092583, 0.047740889, 0.048393167, 0.049039278, 0.049689708, 0.050337958, 0.050986681, 0.051638708, 0.052292083, 0.052941...</msg>
<status status="PASS" starttime="20201115 22:05:19.665" endtime="20201115 22:05:19.697"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:05:19.708" level="INFO">NAME: 00-overhead-24-remove</msg>
<status status="PASS" starttime="20201115 22:05:19.706" endtime="20201115 22:05:19.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:05:19.714" level="INFO">VALUE: [6.8200000000046e-06, 6.805000000005557e-06, 6.818999999998188e-06, 6.819999999997661e-06, 6.8190000000051265e-06, 6.818999999998188e-06, 6.80600000000503e-06, 6.7779999999989515e-06, 6.833999999997231e-06, 6.818999999998188e-06, 6.8190000000051265e-06, 6.833999999997231e-06, 6.818999999998188e-06, 6.791000000005987e-06, 6.8329999999977575e-06, 6.84800000000374e-06, 6.847000000004266e-06, 6.818999999998188e-06, 6.804999999998618e-06, 6.8329999999977575e-06, 6.874999999996467e-06, 6.819999999997661e-06, 6.818999999998188e-06, 6.8330000000046964e-06, 6.7919999999985214e-06, 6.80600000000503e-06, 6.847999999996801e-06, 6.804999999998618e-06, 6.818999999998188e-06, 6.804999999998618e-06, 6.8190000000051265e-06, 6.860999999996897e-06, 6.8329999999977575e-06, 6.833000000011635e-06, 6.8329999999977575e-06, 6.805999999998091e-06, 6.8200000000046e-06, 6.8329999999977575e-06, 6.875000000003406e-06, 6.805999999998091e-06, 6.8329999999977575e-06, 6.8200000000046e-06, 6.847000000004266e-06, 6.833999999997231e-06, 6.818999999991249e-06, 6.861000000010775e-06, 6.8329999999977575e-06, 6.847000000004266e-06, 6.819999999990722e-06, 6.847000000004266e-06]</msg>
<status status="PASS" starttime="20201115 22:05:19.710" endtime="20201115 22:05:19.715"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:19.699" endtime="20201115 22:05:19.716"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:19.723" endtime="20201115 22:05:19.726"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:05:19.731" endtime="20201115 22:05:19.754"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:19.727" endtime="20201115 22:05:19.755"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:19.718" endtime="20201115 22:05:19.757"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:19.148" endtime="20201115 22:05:19.758"></status>
</kw>
<msg timestamp="20201115 22:05:19.758" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:19.782" endtime="20201115 22:05:19.825"></status>
</kw>
<msg timestamp="20201115 22:05:19.826" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:05:19.778" endtime="20201115 22:05:19.826"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:05:19.832" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:05:19.828" endtime="20201115 22:05:19.833"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:19.835" endtime="20201115 22:05:19.839"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:19.771" endtime="20201115 22:05:19.840"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:19.765" endtime="20201115 22:05:19.842"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:19.859" endtime="20201115 22:05:20.212"></status>
</kw>
<msg timestamp="20201115 22:05:20.219" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042998333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043005153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:05:19.855" endtime="20201115 22:05:20.220"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:05:20.238" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042998333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043005153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:05:20.222" endtime="20201115 22:05:20.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:20.241" endtime="20201115 22:05:20.245"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:19.848" endtime="20201115 22:05:20.247"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:19.843" endtime="20201115 22:05:20.248"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:05:20.259" level="INFO">${RESULT} = [{'time': 0.043005153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.819999999997661e-06, 'source_diff': 6.819999999997661e-06}, {'time': 0.043657208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:05:20.250" endtime="20201115 22:05:20.259"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:05:20.292" level="INFO">${OVERHEAD} = {'time': [0.043005153, 0.043657208, 0.04430475, 0.044953833, 0.045602903, 0.046251458, 0.046903847, 0.047551861, 0.048203153, 0.048851944, 0.049499444, 0.050149778, 0.05079575, 0.051446778, 0.05209622...</msg>
<status status="PASS" starttime="20201115 22:05:20.261" endtime="20201115 22:05:20.292"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:05:20.303" level="INFO">NAME: 00-overhead-24-remove</msg>
<status status="PASS" starttime="20201115 22:05:20.301" endtime="20201115 22:05:20.304"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:05:20.309" level="INFO">VALUE: [6.819999999997661e-06, 6.8330000000046964e-06, 6.763999999999382e-06, 6.8329999999977575e-06, 6.860999999996897e-06, 6.8330000000046964e-06, 6.818999999998188e-06, 6.818999999998188e-06, 6.8469999999973274e-06, 6.847000000004266e-06, 6.790999999999048e-06, 6.833999999997231e-06, 6.818999999998188e-06, 6.805999999998091e-06, 6.8469999999973274e-06, 6.8469999999973274e-06, 6.8329999999977575e-06, 6.847000000004266e-06, 6.84800000000374e-06, 6.83400000000417e-06, 6.8330000000046964e-06, 6.8329999999977575e-06, 6.8330000000046964e-06, 6.749999999999812e-06, 6.818999999998188e-06, 6.860999999996897e-06, 6.8469999999973274e-06, 6.818999999998188e-06, 6.847999999996801e-06, 6.83400000000417e-06, 6.805999999998091e-06, 6.805999999998091e-06, 6.8190000000051265e-06, 6.860999999996897e-06, 6.79200000000546e-06, 6.8190000000051265e-06, 6.8329999999977575e-06, 6.778000000012829e-06, 6.819999999990722e-06, 6.8190000000051265e-06, 6.804999999998618e-06, 6.8200000000046e-06, 6.847000000004266e-06, 6.819999999990722e-06, 6.8190000000051265e-06, 6.818999999991249e-06, 6.888999999996037e-06, 6.8200000000046e-06, 6.8200000000046e-06, 6.847000000004266e-06]</msg>
<status status="PASS" starttime="20201115 22:05:20.306" endtime="20201115 22:05:20.310"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:20.294" endtime="20201115 22:05:20.311"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:20.318" endtime="20201115 22:05:20.321"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:05:20.326" endtime="20201115 22:05:20.348"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:20.322" endtime="20201115 22:05:20.350"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:20.313" endtime="20201115 22:05:20.352"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:19.759" endtime="20201115 22:05:20.353"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:17.329" endtime="20201115 22:05:20.353"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:17.327" endtime="20201115 22:05:20.354"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:05:20.359" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:20.384" endtime="20201115 22:05:20.429"></status>
</kw>
<msg timestamp="20201115 22:05:20.430" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:05:20.380" endtime="20201115 22:05:20.431"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:05:20.437" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:05:20.432" endtime="20201115 22:05:20.437"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:20.439" endtime="20201115 22:05:20.443"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:20.372" endtime="20201115 22:05:20.445"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:20.366" endtime="20201115 22:05:20.447"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:20.464" endtime="20201115 22:05:20.816"></status>
</kw>
<msg timestamp="20201115 22:05:20.823" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050338681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050345722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:05:20.461" endtime="20201115 22:05:20.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:05:20.842" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050338681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050345722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:05:20.825" endtime="20201115 22:05:20.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:20.844" endtime="20201115 22:05:20.848"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:20.453" endtime="20201115 22:05:20.850"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:20.448" endtime="20201115 22:05:20.851"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:05:20.862" level="INFO">${RESULT} = [{'time': 0.050345722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.040999999999298e-06, 'source_diff': 7.040999999999298e-06}, {'time': 0.051027069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:05:20.853" endtime="20201115 22:05:20.863"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:05:20.895" level="INFO">${OVERHEAD} = {'time': [0.050345722, 0.051027069, 0.05170775, 0.052392528, 0.053076014, 0.053758986, 0.054441069, 0.055126347, 0.055805903, 0.056488542, 0.057172208, 0.057859069, 0.058544222, 0.059230208, 0.0599114...</msg>
<status status="PASS" starttime="20201115 22:05:20.864" endtime="20201115 22:05:20.896"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:05:20.907" level="INFO">NAME: 00-overhead-25-remove</msg>
<status status="PASS" starttime="20201115 22:05:20.904" endtime="20201115 22:05:20.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:05:20.912" level="INFO">VALUE: [7.040999999999298e-06, 7.026999999999728e-06, 7.0279999999992016e-06, 7.0279999999992016e-06, 7.0419999999987715e-06, 7.054999999998868e-06, 7.026999999999728e-06, 7.068999999998438e-06, 7.013999999999632e-06, 7.07000000000485e-06, 7.026999999999728e-06, 7.040999999999298e-06, 7.013999999999632e-06, 7.026999999999728e-06, 7.0279999999992016e-06, 7.068999999998438e-06, 7.026999999999728e-06, 7.0279999999992016e-06, 7.027000000006667e-06, 7.0280000000061404e-06, 7.0419999999987715e-06, 7.040999999999298e-06, 7.013999999999632e-06, 7.013000000000158e-06, 7.040999999999298e-06, 7.0419999999987715e-06, 7.0280000000061404e-06, 7.0419999999987715e-06, 7.05600000000528e-06, 7.013999999999632e-06, 7.013999999999632e-06, 7.0559999999914025e-06, 7.069999999997911e-06, 7.040999999999298e-06, 7.027999999992263e-06, 7.0559999999914025e-06, 7.013999999999632e-06, 7.0280000000061404e-06, 7.026999999992789e-06, 7.069999999997911e-06, 7.026999999992789e-06, 7.040999999999298e-06, 7.0690000000123154e-06, 7.0419999999987715e-06, 7.040999999999298e-06, 7.0419999999987715e-06, 7.040999999999298e-06, 7.0419999999987715e-06, 7.0280000000061404e-06, 7.05600000000528e-06]</msg>
<status status="PASS" starttime="20201115 22:05:20.909" endtime="20201115 22:05:20.913"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:20.897" endtime="20201115 22:05:20.915"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:20.921" endtime="20201115 22:05:20.924"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:05:20.930" endtime="20201115 22:05:20.951"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:20.925" endtime="20201115 22:05:20.953"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:20.916" endtime="20201115 22:05:20.955"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:20.360" endtime="20201115 22:05:20.956"></status>
</kw>
<msg timestamp="20201115 22:05:20.956" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:20.980" endtime="20201115 22:05:21.025"></status>
</kw>
<msg timestamp="20201115 22:05:21.026" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:05:20.976" endtime="20201115 22:05:21.026"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:05:21.033" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:05:21.028" endtime="20201115 22:05:21.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:21.035" endtime="20201115 22:05:21.039"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:20.969" endtime="20201115 22:05:21.041"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:20.963" endtime="20201115 22:05:21.042"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:21.059" endtime="20201115 22:05:21.414"></status>
</kw>
<msg timestamp="20201115 22:05:21.421" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042650944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042657917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:05:21.056" endtime="20201115 22:05:21.422"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:05:21.440" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042650944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042657917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:05:21.424" endtime="20201115 22:05:21.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:21.442" endtime="20201115 22:05:21.446"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:21.049" endtime="20201115 22:05:21.448"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:21.044" endtime="20201115 22:05:21.449"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:05:21.460" level="INFO">${RESULT} = [{'time': 0.042657917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.972999999993457e-06, 'source_diff': 6.972999999993457e-06}, {'time': 0.043342972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:05:21.451" endtime="20201115 22:05:21.461"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:05:21.494" level="INFO">${OVERHEAD} = {'time': [0.042657917, 0.043342972, 0.044025722, 0.044709611, 0.045394403, 0.046075333, 0.046757847, 0.047441306, 0.048124528, 0.048808736, 0.049495458, 0.050181514, 0.050867806, 0.051554042, 0.052237...</msg>
<status status="PASS" starttime="20201115 22:05:21.463" endtime="20201115 22:05:21.494"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:05:21.505" level="INFO">NAME: 00-overhead-25-remove</msg>
<status status="PASS" starttime="20201115 22:05:21.502" endtime="20201115 22:05:21.506"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:05:21.510" level="INFO">VALUE: [6.972999999993457e-06, 7.040999999999298e-06, 7.041000000006237e-06, 7.04200000000571e-06, 7.0279999999992016e-06, 7.041000000006237e-06, 7.054999999998868e-06, 7.09800000000399e-06, 7.0419999999987715e-06, 7.068999999998438e-06, 7.026999999999728e-06, 7.04200000000571e-06, 7.055999999998341e-06, 7.055999999998341e-06, 7.0279999999992016e-06, 7.054999999998868e-06, 7.0419999999987715e-06, 7.0279999999992016e-06, 7.0279999999992016e-06, 7.026999999999728e-06, 7.0279999999992016e-06, 7.026999999999728e-06, 7.0279999999992016e-06, 7.125000000003656e-06, 7.0829999999980076e-06, 7.040999999999298e-06, 7.0419999999987715e-06, 7.000000000000062e-06, 7.055999999998341e-06, 7.0419999999987715e-06, 7.040999999999298e-06, 7.068999999998438e-06, 7.111000000004086e-06, 7.013999999999632e-06, 7.040999999999298e-06, 7.0419999999987715e-06, 7.027999999992263e-06, 7.027999999992263e-06, 7.0419999999987715e-06, 7.111000000004086e-06, 7.027999999992263e-06, 7.026999999992789e-06, 7.0280000000061404e-06, 7.068999999998438e-06, 7.0280000000061404e-06, 7.0419999999987715e-06, 7.040999999999298e-06, 7.041000000013176e-06, 6.999999999993123e-06, 7.041000000013176e-06]</msg>
<status status="PASS" starttime="20201115 22:05:21.507" endtime="20201115 22:05:21.511"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:21.495" endtime="20201115 22:05:21.513"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:21.519" endtime="20201115 22:05:21.522"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:05:21.528" endtime="20201115 22:05:21.550"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:21.523" endtime="20201115 22:05:21.551"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:21.515" endtime="20201115 22:05:21.553"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:20.957" endtime="20201115 22:05:21.554"></status>
</kw>
<msg timestamp="20201115 22:05:21.554" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:21.579" endtime="20201115 22:05:21.623"></status>
</kw>
<msg timestamp="20201115 22:05:21.625" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:05:21.574" endtime="20201115 22:05:21.625"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:05:21.631" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:05:21.627" endtime="20201115 22:05:21.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:21.633" endtime="20201115 22:05:21.637"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:21.567" endtime="20201115 22:05:21.639"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:21.561" endtime="20201115 22:05:21.640"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:21.657" endtime="20201115 22:05:22.012"></status>
</kw>
<msg timestamp="20201115 22:05:22.019" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043396222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043403264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:05:21.654" endtime="20201115 22:05:22.019"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:05:22.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043396222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043403264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:05:22.021" endtime="20201115 22:05:22.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:22.040" endtime="20201115 22:05:22.044"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:21.646" endtime="20201115 22:05:22.045"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:21.641" endtime="20201115 22:05:22.047"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:05:22.058" level="INFO">${RESULT} = [{'time': 0.043403264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.0419999999987715e-06, 'source_diff': 7.0419999999987715e-06}, {'time': 0.044088, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:05:22.049" endtime="20201115 22:05:22.058"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:05:22.092" level="INFO">${OVERHEAD} = {'time': [0.043403264, 0.044088, 0.044773097, 0.045458431, 0.046142806, 0.046824181, 0.047504972, 0.048185875, 0.048868556, 0.049550278, 0.050231806, 0.050917014, 0.051598431, 0.052285153, 0.052966167...</msg>
<status status="PASS" starttime="20201115 22:05:22.060" endtime="20201115 22:05:22.093"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:05:22.104" level="INFO">NAME: 00-overhead-25-remove</msg>
<status status="PASS" starttime="20201115 22:05:22.101" endtime="20201115 22:05:22.105"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:05:22.109" level="INFO">VALUE: [7.0419999999987715e-06, 7.0279999999992016e-06, 7.013999999999632e-06, 7.0419999999987715e-06, 7.0419999999987715e-06, 7.0419999999987715e-06, 7.0279999999992016e-06, 7.05600000000528e-06, 7.0279999999992016e-06, 7.0280000000061404e-06, 7.0279999999992016e-06, 7.0279999999992016e-06, 7.000000000000062e-06, 7.0419999999987715e-06, 7.0279999999992016e-06, 7.0419999999987715e-06, 7.055999999998341e-06, 7.08400000000442e-06, 7.040999999999298e-06, 7.0279999999992016e-06, 7.041000000006237e-06, 7.04200000000571e-06, 7.068999999998438e-06, 7.0279999999992016e-06, 7.04200000000571e-06, 7.026999999999728e-06, 7.0419999999987715e-06, 6.957999999994413e-06, 7.013999999999632e-06, 7.027999999992263e-06, 7.0419999999987715e-06, 7.027000000006667e-06, 7.0419999999987715e-06, 7.040999999999298e-06, 7.040999999999298e-06, 7.0419999999987715e-06, 7.0419999999987715e-06, 7.0280000000061404e-06, 7.042000000012649e-06, 7.0280000000061404e-06, 7.0280000000061404e-06, 7.013999999999632e-06, 7.0419999999987715e-06, 7.054999999991929e-06, 7.0830000000049465e-06, 7.026999999992789e-06, 7.026999999992789e-06, 7.0280000000061404e-06, 7.013999999999632e-06, 7.069999999997911e-06]</msg>
<status status="PASS" starttime="20201115 22:05:22.106" endtime="20201115 22:05:22.110"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:22.094" endtime="20201115 22:05:22.112"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:22.118" endtime="20201115 22:05:22.121"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:05:22.127" endtime="20201115 22:05:22.149"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:22.122" endtime="20201115 22:05:22.151"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:22.114" endtime="20201115 22:05:22.152"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:21.555" endtime="20201115 22:05:22.154"></status>
</kw>
<msg timestamp="20201115 22:05:22.154" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:22.178" endtime="20201115 22:05:22.223"></status>
</kw>
<msg timestamp="20201115 22:05:22.224" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:05:22.174" endtime="20201115 22:05:22.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:05:22.230" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:05:22.226" endtime="20201115 22:05:22.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:22.232" endtime="20201115 22:05:22.236"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:22.167" endtime="20201115 22:05:22.238"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:22.161" endtime="20201115 22:05:22.239"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:22.256" endtime="20201115 22:05:22.608"></status>
</kw>
<msg timestamp="20201115 22:05:22.616" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043282042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043289069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:05:22.253" endtime="20201115 22:05:22.616"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:05:22.634" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043282042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043289069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:05:22.618" endtime="20201115 22:05:22.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:22.637" endtime="20201115 22:05:22.640"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:22.246" endtime="20201115 22:05:22.642"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:22.241" endtime="20201115 22:05:22.644"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:05:22.655" level="INFO">${RESULT} = [{'time': 0.043289069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.026999999999728e-06, 'source_diff': 7.026999999999728e-06}, {'time': 0.043970014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:05:22.645" endtime="20201115 22:05:22.655"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:05:22.686" level="INFO">${OVERHEAD} = {'time': [0.043289069, 0.043970014, 0.044652181, 0.045337708, 0.046022847, 0.046704139, 0.047385444, 0.048067597, 0.048752167, 0.049433417, 0.050120708, 0.050807764, 0.051489625, 0.052176319, 0.052860...</msg>
<status status="PASS" starttime="20201115 22:05:22.657" endtime="20201115 22:05:22.687"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:05:22.699" level="INFO">NAME: 00-overhead-25-remove</msg>
<status status="PASS" starttime="20201115 22:05:22.695" endtime="20201115 22:05:22.700"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:05:22.705" level="INFO">VALUE: [7.026999999999728e-06, 7.0279999999992016e-06, 7.0279999999992016e-06, 7.026999999999728e-06, 7.054999999998868e-06, 7.0279999999992016e-06, 7.110999999997147e-06, 7.013999999999632e-06, 7.0279999999992016e-06, 7.0279999999992016e-06, 7.040999999999298e-06, 7.055999999998341e-06, 7.055999999998341e-06, 7.026999999999728e-06, 7.05600000000528e-06, 7.04200000000571e-06, 7.0419999999987715e-06, 7.013999999999632e-06, 7.0419999999987715e-06, 7.040999999999298e-06, 7.0419999999987715e-06, 7.08400000000442e-06, 7.0279999999992016e-06, 7.054999999998868e-06, 7.0419999999987715e-06, 7.0280000000061404e-06, 7.013999999999632e-06, 7.0279999999992016e-06, 7.055000000005807e-06, 7.0280000000061404e-06, 7.013000000000158e-06, 7.0419999999987715e-06, 7.027999999992263e-06, 7.027999999992263e-06, 7.05600000000528e-06, 7.013999999999632e-06, 7.0280000000061404e-06, 7.040999999999298e-06, 7.026999999992789e-06, 7.013999999999632e-06, 7.0280000000061404e-06, 7.040999999999298e-06, 7.055000000005807e-06, 6.972999999993457e-06, 7.068999999998438e-06, 7.0280000000061404e-06, 7.040999999999298e-06, 7.027000000006667e-06, 7.0559999999914025e-06, 7.040999999999298e-06]</msg>
<status status="PASS" starttime="20201115 22:05:22.701" endtime="20201115 22:05:22.705"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:22.688" endtime="20201115 22:05:22.707"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:22.715" endtime="20201115 22:05:22.717"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:05:22.723" endtime="20201115 22:05:22.745"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:22.719" endtime="20201115 22:05:22.747"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:22.710" endtime="20201115 22:05:22.748"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:22.155" endtime="20201115 22:05:22.749"></status>
</kw>
<msg timestamp="20201115 22:05:22.750" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:22.773" endtime="20201115 22:05:22.818"></status>
</kw>
<msg timestamp="20201115 22:05:22.819" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:05:22.770" endtime="20201115 22:05:22.820"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:05:22.826" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:05:22.821" endtime="20201115 22:05:22.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:22.828" endtime="20201115 22:05:22.832"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:22.762" endtime="20201115 22:05:22.833"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:22.756" endtime="20201115 22:05:22.835"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:22.852" endtime="20201115 22:05:23.204"></status>
</kw>
<msg timestamp="20201115 22:05:23.211" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042807681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042814722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:05:22.849" endtime="20201115 22:05:23.212"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:05:23.230" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042807681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042814722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:05:23.214" endtime="20201115 22:05:23.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:23.232" endtime="20201115 22:05:23.236"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:22.841" endtime="20201115 22:05:23.238"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:22.836" endtime="20201115 22:05:23.240"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:05:23.250" level="INFO">${RESULT} = [{'time': 0.042814722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.040999999999298e-06, 'source_diff': 7.040999999999298e-06}, {'time': 0.043496708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:05:23.241" endtime="20201115 22:05:23.251"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:05:23.282" level="INFO">${OVERHEAD} = {'time': [0.042814722, 0.043496708, 0.044179403, 0.044859986, 0.045542458, 0.046227667, 0.046911583, 0.047593292, 0.048277792, 0.048960472, 0.049641986, 0.050324542, 0.051011097, 0.051692611, 0.052377...</msg>
<status status="PASS" starttime="20201115 22:05:23.253" endtime="20201115 22:05:23.283"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:05:23.294" level="INFO">NAME: 00-overhead-25-remove</msg>
<status status="PASS" starttime="20201115 22:05:23.292" endtime="20201115 22:05:23.295"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:05:23.299" level="INFO">VALUE: [7.040999999999298e-06, 7.054999999998868e-06, 7.0419999999987715e-06, 7.0279999999992016e-06, 7.040999999999298e-06, 7.0419999999987715e-06, 7.040999999999298e-06, 7.04200000000571e-06, 7.0419999999987715e-06, 7.0279999999992016e-06, 7.013999999999632e-06, 7.0279999999992016e-06, 7.040999999999298e-06, 7.0419999999987715e-06, 7.026999999999728e-06, 7.068999999998438e-06, 7.026999999999728e-06, 7.04200000000571e-06, 7.026999999999728e-06, 7.040999999999298e-06, 6.986000000000492e-06, 7.0419999999987715e-06, 7.0419999999987715e-06, 7.0419999999987715e-06, 7.068999999998438e-06, 7.0419999999987715e-06, 7.097000000004516e-06, 7.013999999999632e-06, 7.0279999999992016e-06, 7.055000000005807e-06, 7.0419999999987715e-06, 7.069999999997911e-06, 7.111000000004086e-06, 7.0419999999987715e-06, 7.040999999999298e-06, 7.0419999999987715e-06, 7.0419999999987715e-06, 7.0419999999987715e-06, 7.05600000000528e-06, 7.027000000006667e-06, 7.0419999999987715e-06, 7.082999999991069e-06, 7.013999999999632e-06, 7.013999999999632e-06, 7.0419999999987715e-06, 7.082999999991069e-06, 7.027999999992263e-06, 7.0419999999987715e-06, 7.040999999999298e-06, 7.0280000000061404e-06]</msg>
<status status="PASS" starttime="20201115 22:05:23.296" endtime="20201115 22:05:23.302"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:23.284" endtime="20201115 22:05:23.304"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:23.311" endtime="20201115 22:05:23.313"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:05:23.319" endtime="20201115 22:05:23.341"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:23.315" endtime="20201115 22:05:23.343"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:23.306" endtime="20201115 22:05:23.345"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:22.751" endtime="20201115 22:05:23.345"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:20.356" endtime="20201115 22:05:23.346"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:20.355" endtime="20201115 22:05:23.346"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:10.323" endtime="20201115 22:05:23.347"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="teardown">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:05:23.358" endtime="20201115 22:05:23.380"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:23.353" endtime="20201115 22:05:23.382"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:23.351" endtime="20201115 22:05:23.382"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:04:10.195" endtime="20201115 22:05:23.384" critical="yes"></status>
</test>
<status status="PASS" starttime="20201115 22:02:48.849" endtime="20201115 22:05:23.400"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">samr21-xpro</item>
<item name="RIOT-Version">2020.10</item>
</metadata>
<status status="PASS" starttime="20201115 22:02:44.991" endtime="20201115 22:05:23.451"></status>
</suite>
<statistics>
<total>
<stat pass="5" fail="0">Critical Tests</stat>
<stat pass="5" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="5" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="5" fail="0">BOARD_samr21-xpro</stat>
<stat pass="5" fail="0">dev</stat>
</tag>
<suite>
<stat pass="5" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="4" fail="0" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
