<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2 (Python 3.7.3 on linux)" generated="20201115 21:59:54.267" rpa="false">
<suite id="s1" name="tests_ztimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201115 21:59:55.489" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201115 21:59:55.505" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201115 21:59:57.425" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201115 21:59:55.485" endtime="20201115 21:59:57.427"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201115 21:59:57.432" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201115 21:59:57.429" endtime="20201115 21:59:57.433"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:55.482" endtime="20201115 21:59:57.435"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:57.439" endtime="20201115 21:59:57.770"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.436" endtime="20201115 21:59:57.771"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:57.802" endtime="20201115 21:59:57.821"></status>
</kw>
<msg timestamp="20201115 21:59:57.822" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:57.799" endtime="20201115 21:59:57.822"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:57.828" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:57.824" endtime="20201115 21:59:57.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 21:59:57.835" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 21:59:57.830" endtime="20201115 21:59:57.836"></status>
</kw>
<status status="FAIL" starttime="20201115 21:59:57.792" endtime="20201115 21:59:57.838"></status>
</kw>
<status status="FAIL" starttime="20201115 21:59:57.786" endtime="20201115 21:59:57.839"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.783" endtime="20201115 21:59:57.840"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 21:59:57.848" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 21:59:57.847" endtime="20201115 21:59:57.849"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.842" endtime="20201115 21:59:57.849"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.782" endtime="20201115 21:59:57.850"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.780" endtime="20201115 21:59:57.850"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:57.852" endtime="20201115 21:59:57.855"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.776" endtime="20201115 21:59:57.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:57.858" endtime="20201115 21:59:57.862"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.773" endtime="20201115 21:59:57.864"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:55.479" endtime="20201115 21:59:57.864"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:57.881" endtime="20201115 21:59:57.903"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.878" endtime="20201115 21:59:57.905"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:57.947" endtime="20201115 21:59:57.965"></status>
</kw>
<msg timestamp="20201115 21:59:57.966" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:57.944" endtime="20201115 21:59:57.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:57.973" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:57.969" endtime="20201115 21:59:57.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 21:59:57.979" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 21:59:57.975" endtime="20201115 21:59:57.980"></status>
</kw>
<status status="FAIL" starttime="20201115 21:59:57.936" endtime="20201115 21:59:57.982"></status>
</kw>
<status status="FAIL" starttime="20201115 21:59:57.929" endtime="20201115 21:59:57.983"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.918" endtime="20201115 21:59:57.984"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 21:59:57.992" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 21:59:57.990" endtime="20201115 21:59:57.992"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.986" endtime="20201115 21:59:57.993"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.916" endtime="20201115 21:59:57.993"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.915" endtime="20201115 21:59:57.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:57.996" endtime="20201115 21:59:57.999"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.910" endtime="20201115 21:59:58.001"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.906" endtime="20201115 21:59:58.002"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.874" endtime="20201115 21:59:58.003"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:58.021" endtime="20201115 21:59:58.033"></status>
</kw>
<msg timestamp="20201115 21:59:58.034" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:58.018" endtime="20201115 21:59:58.034"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:58.040" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:58.036" endtime="20201115 21:59:58.041"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:58.042" endtime="20201115 21:59:58.048"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.010" endtime="20201115 21:59:58.049"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.005" endtime="20201115 21:59:58.051"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:58.062" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201115 21:59:58.059" endtime="20201115 21:59:58.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:58.066" level="INFO">VALUE: ztimer</msg>
<status status="PASS" starttime="20201115 21:59:58.064" endtime="20201115 21:59:58.067"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.053" endtime="20201115 21:59:58.069"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 21:59:57.866" endtime="20201115 21:59:58.071" critical="yes"></status>
</test>
<status status="PASS" starttime="20201115 21:59:54.526" endtime="20201115 21:59:58.081"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201115 21:59:58.224" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201115 21:59:58.239" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201115 22:00:00.186" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201115 21:59:58.220" endtime="20201115 22:00:00.188"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201115 22:00:00.193" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201115 22:00:00.190" endtime="20201115 22:00:00.194"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.218" endtime="20201115 22:00:00.195"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:00.200" endtime="20201115 22:00:00.524"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.197" endtime="20201115 22:00:00.526"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:00.555" endtime="20201115 22:00:00.573"></status>
</kw>
<msg timestamp="20201115 22:00:00.574" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:00.551" endtime="20201115 22:00:00.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:00.580" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:00.576" endtime="20201115 22:00:00.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:00:00.587" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:00:00.582" endtime="20201115 22:00:00.589"></status>
</kw>
<status status="FAIL" starttime="20201115 22:00:00.545" endtime="20201115 22:00:00.591"></status>
</kw>
<status status="FAIL" starttime="20201115 22:00:00.540" endtime="20201115 22:00:00.592"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.537" endtime="20201115 22:00:00.593"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:00:00.601" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:00:00.599" endtime="20201115 22:00:00.602"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.595" endtime="20201115 22:00:00.602"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.535" endtime="20201115 22:00:00.602"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.534" endtime="20201115 22:00:00.603"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:00.604" endtime="20201115 22:00:00.608"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.530" endtime="20201115 22:00:00.609"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:00.611" endtime="20201115 22:00:00.615"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.527" endtime="20201115 22:00:00.616"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.215" endtime="20201115 22:00:00.617"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO/">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:00.631" endtime="20201115 22:00:00.652"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.627" endtime="20201115 22:00:00.654"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:00.687" endtime="20201115 22:00:00.702"></status>
</kw>
<msg timestamp="20201115 22:00:00.703" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:00.683" endtime="20201115 22:00:00.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:00.710" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:00.706" endtime="20201115 22:00:00.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:00:00.717" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:00:00.713" endtime="20201115 22:00:00.718"></status>
</kw>
<status status="FAIL" starttime="20201115 22:00:00.676" endtime="20201115 22:00:00.719"></status>
</kw>
<status status="FAIL" starttime="20201115 22:00:00.670" endtime="20201115 22:00:00.721"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.667" endtime="20201115 22:00:00.722"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:00:00.729" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:00:00.728" endtime="20201115 22:00:00.730"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.723" endtime="20201115 22:00:00.730"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.665" endtime="20201115 22:00:00.792"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.664" endtime="20201115 22:00:00.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:00.794" endtime="20201115 22:00:00.797"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.660" endtime="20201115 22:00:00.799"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.655" endtime="20201115 22:00:00.800"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.624" endtime="20201115 22:00:00.801"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure GPIO Overhead</arg>
</arguments>
<msg timestamp="20201115 22:00:00.806" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:00.826" endtime="20201115 22:00:00.836"></status>
</kw>
<msg timestamp="20201115 22:00:00.837" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:00.822" endtime="20201115 22:00:00.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:00.843" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:00.840" endtime="20201115 22:00:00.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:00.846" endtime="20201115 22:00:00.849"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.815" endtime="20201115 22:00:00.851"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.810" endtime="20201115 22:00:00.852"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:00.869" endtime="20201115 22:00:01.224"></status>
</kw>
<msg timestamp="20201115 22:00:01.231" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.18508975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.185090222, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:00:00.865" endtime="20201115 22:00:01.231"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:01.250" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.18508975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.185090222, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:00:01.233" endtime="20201115 22:00:01.251"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:01.252" endtime="20201115 22:00:01.256"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.858" endtime="20201115 22:00:01.258"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.854" endtime="20201115 22:00:01.260"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:01.271" level="INFO">${RESULT} = [{'time': 0.185090222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.185100194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:01.261" endtime="20201115 22:00:01.271"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:01.303" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 5.409999999927972e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.72...</msg>
<status status="PASS" starttime="20201115 22:00:01.273" endtime="20201115 22:00:01.303"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:01.313" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201115 22:00:01.311" endtime="20201115 22:00:01.314"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:01.318" level="INFO">VALUE: [4.720000000013602e-07, 5.409999999927972e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 5.419999999922709e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.410000000205528e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 5.410000000205528e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201115 22:00:01.315" endtime="20201115 22:00:01.319"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.305" endtime="20201115 22:00:01.321"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:01.327" endtime="20201115 22:00:01.330"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:01.335" endtime="20201115 22:00:01.357"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.331" endtime="20201115 22:00:01.359"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.323" endtime="20201115 22:00:01.360"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.807" endtime="20201115 22:00:01.361"></status>
</kw>
<msg timestamp="20201115 22:00:01.361" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:01.381" endtime="20201115 22:00:01.392"></status>
</kw>
<msg timestamp="20201115 22:00:01.393" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:01.378" endtime="20201115 22:00:01.393"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:01.399" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:01.395" endtime="20201115 22:00:01.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:01.401" endtime="20201115 22:00:01.405"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.370" endtime="20201115 22:00:01.407"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.366" endtime="20201115 22:00:01.408"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:01.424" endtime="20201115 22:00:01.774"></status>
</kw>
<msg timestamp="20201115 22:00:01.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036016389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036016861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:01.421" endtime="20201115 22:00:01.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:01.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036016389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036016861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:01.784" endtime="20201115 22:00:01.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:01.802" endtime="20201115 22:00:01.806"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.414" endtime="20201115 22:00:01.808"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.409" endtime="20201115 22:00:01.809"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:01.821" level="INFO">${RESULT} = [{'time': 0.036016861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036026417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:01.811" endtime="20201115 22:00:01.821"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:01.851" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999999442133e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4...</msg>
<status status="PASS" starttime="20201115 22:00:01.823" endtime="20201115 22:00:01.851"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:01.861" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201115 22:00:01.859" endtime="20201115 22:00:01.862"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:01.866" level="INFO">VALUE: [4.7199999999442133e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201115 22:00:01.863" endtime="20201115 22:00:01.867"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.852" endtime="20201115 22:00:01.869"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:01.875" endtime="20201115 22:00:01.878"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:01.883" endtime="20201115 22:00:01.905"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.879" endtime="20201115 22:00:01.907"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.870" endtime="20201115 22:00:01.908"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.363" endtime="20201115 22:00:01.909"></status>
</kw>
<msg timestamp="20201115 22:00:01.909" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:01.929" endtime="20201115 22:00:01.940"></status>
</kw>
<msg timestamp="20201115 22:00:01.941" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:01.925" endtime="20201115 22:00:01.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:01.947" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:01.943" endtime="20201115 22:00:01.948"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:01.950" endtime="20201115 22:00:01.954"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.918" endtime="20201115 22:00:01.955"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.914" endtime="20201115 22:00:01.957"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:01.974" endtime="20201115 22:00:02.310"></status>
</kw>
<msg timestamp="20201115 22:00:02.317" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036243153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036243694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:01.970" endtime="20201115 22:00:02.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:02.336" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036243153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036243694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:02.319" endtime="20201115 22:00:02.336"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:02.339" endtime="20201115 22:00:02.342"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.963" endtime="20201115 22:00:02.344"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.958" endtime="20201115 22:00:02.346"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:02.356" level="INFO">${RESULT} = [{'time': 0.036243694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.036252847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:02.347" endtime="20201115 22:00:02.357"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:02.386" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.409999999997361e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4....</msg>
<status status="PASS" starttime="20201115 22:00:02.358" endtime="20201115 22:00:02.387"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:02.396" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201115 22:00:02.394" endtime="20201115 22:00:02.397"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:02.401" level="INFO">VALUE: [5.409999999997361e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7299999999389497e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201115 22:00:02.398" endtime="20201115 22:00:02.402"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.388" endtime="20201115 22:00:02.404"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:02.410" endtime="20201115 22:00:02.413"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:02.418" endtime="20201115 22:00:02.440"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.414" endtime="20201115 22:00:02.442"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.406" endtime="20201115 22:00:02.443"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.910" endtime="20201115 22:00:02.444"></status>
</kw>
<msg timestamp="20201115 22:00:02.445" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:02.464" endtime="20201115 22:00:02.475"></status>
</kw>
<msg timestamp="20201115 22:00:02.476" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:02.461" endtime="20201115 22:00:02.476"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:02.482" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:02.478" endtime="20201115 22:00:02.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:02.484" endtime="20201115 22:00:02.488"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.454" endtime="20201115 22:00:02.490"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.449" endtime="20201115 22:00:02.491"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:02.507" endtime="20201115 22:00:02.844"></status>
</kw>
<msg timestamp="20201115 22:00:02.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036111486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036112028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:02.504" endtime="20201115 22:00:02.852"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:02.870" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036111486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036112028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:02.854" endtime="20201115 22:00:02.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:02.873" endtime="20201115 22:00:02.878"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.497" endtime="20201115 22:00:02.879"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.492" endtime="20201115 22:00:02.881"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:02.891" level="INFO">${RESULT} = [{'time': 0.036112028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.03612, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4...</msg>
<status status="PASS" starttime="20201115 22:00:02.882" endtime="20201115 22:00:02.892"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:02.923" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.419999999992098e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7200...</msg>
<status status="PASS" starttime="20201115 22:00:02.893" endtime="20201115 22:00:02.924"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:02.933" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201115 22:00:02.931" endtime="20201115 22:00:02.934"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:02.938" level="INFO">VALUE: [5.419999999992098e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.409999999997361e-07, 4.7300000000083386e-07]</msg>
<status status="PASS" starttime="20201115 22:00:02.935" endtime="20201115 22:00:02.939"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.925" endtime="20201115 22:00:02.941"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:02.947" endtime="20201115 22:00:02.950"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:02.955" endtime="20201115 22:00:02.977"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.951" endtime="20201115 22:00:02.979"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.943" endtime="20201115 22:00:02.981"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.446" endtime="20201115 22:00:02.981"></status>
</kw>
<msg timestamp="20201115 22:00:02.982" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:03.003" endtime="20201115 22:00:03.014"></status>
</kw>
<msg timestamp="20201115 22:00:03.015" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:02.999" endtime="20201115 22:00:03.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:03.021" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:03.017" endtime="20201115 22:00:03.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:03.023" endtime="20201115 22:00:03.027"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.992" endtime="20201115 22:00:03.028"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.987" endtime="20201115 22:00:03.030"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:03.058" endtime="20201115 22:00:03.397"></status>
</kw>
<msg timestamp="20201115 22:00:03.405" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037827431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037827903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:03.043" endtime="20201115 22:00:03.405"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:03.423" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037827431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037827903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:03.407" endtime="20201115 22:00:03.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:03.426" endtime="20201115 22:00:03.431"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.036" endtime="20201115 22:00:03.432"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.031" endtime="20201115 22:00:03.434"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:03.444" level="INFO">${RESULT} = [{'time': 0.037827903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037834333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:03.436" endtime="20201115 22:00:03.445"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:03.474" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.720000000013602e-07, 4....</msg>
<status status="PASS" starttime="20201115 22:00:03.446" endtime="20201115 22:00:03.475"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:03.485" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201115 22:00:03.482" endtime="20201115 22:00:03.485"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:03.490" level="INFO">VALUE: [4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.409999999997361e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07]</msg>
<status status="PASS" starttime="20201115 22:00:03.487" endtime="20201115 22:00:03.491"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.476" endtime="20201115 22:00:03.492"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:03.498" endtime="20201115 22:00:03.501"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:03.507" endtime="20201115 22:00:03.528"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.502" endtime="20201115 22:00:03.530"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.494" endtime="20201115 22:00:03.531"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.983" endtime="20201115 22:00:03.532"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.804" endtime="20201115 22:00:03.533"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:03.543" endtime="20201115 22:00:03.565"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.539" endtime="20201115 22:00:03.566"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.536" endtime="20201115 22:00:03.567"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:00:00.618" endtime="20201115 22:00:03.568" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:03.586" endtime="20201115 22:00:03.608"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.582" endtime="20201115 22:00:03.609"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:03.644" endtime="20201115 22:00:03.660"></status>
</kw>
<msg timestamp="20201115 22:00:03.661" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:03.640" endtime="20201115 22:00:03.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:03.667" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:03.663" endtime="20201115 22:00:03.668"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:00:03.674" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:00:03.670" endtime="20201115 22:00:03.675"></status>
</kw>
<status status="FAIL" starttime="20201115 22:00:03.632" endtime="20201115 22:00:03.676"></status>
</kw>
<status status="FAIL" starttime="20201115 22:00:03.626" endtime="20201115 22:00:03.678"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.623" endtime="20201115 22:00:03.679"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:00:03.686" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:00:03.685" endtime="20201115 22:00:03.687"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.680" endtime="20201115 22:00:03.688"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.621" endtime="20201115 22:00:03.688"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.619" endtime="20201115 22:00:03.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:03.690" endtime="20201115 22:00:03.693"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.615" endtime="20201115 22:00:03.695"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.611" endtime="20201115 22:00:03.696"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.580" endtime="20201115 22:00:03.697"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer Now Overhead</arg>
</arguments>
<msg timestamp="20201115 22:00:03.702" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:03.721" endtime="20201115 22:00:03.733"></status>
</kw>
<msg timestamp="20201115 22:00:03.735" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:03.718" endtime="20201115 22:00:03.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:03.741" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:03.737" endtime="20201115 22:00:03.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:03.743" endtime="20201115 22:00:03.747"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.711" endtime="20201115 22:00:03.748"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.706" endtime="20201115 22:00:03.750"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:03.766" endtime="20201115 22:00:04.112"></status>
</kw>
<msg timestamp="20201115 22:00:04.119" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.126038986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.126048181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:03.762" endtime="20201115 22:00:04.119"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:04.137" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.126038986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.126048181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:04.121" endtime="20201115 22:00:04.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:04.140" endtime="20201115 22:00:04.144"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.755" endtime="20201115 22:00:04.146"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.751" endtime="20201115 22:00:04.147"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:04.158" level="INFO">${RESULT} = [{'time': 0.126048181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.195000000017384e-06, 'source_diff': 9.195000000017384e-06}, {'time': 0.126062167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:04.149" endtime="20201115 22:00:04.158"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:04.189" level="INFO">${OVERHEAD} = {'diff': [9.195000000017384e-06, 8.806000000000092e-06, 8.83299999998588e-06, 8.819000000021004e-06, 8.819999999992723e-06, 9.611000000020464e-06, 9.473000000009835e-06, 9.263999999981065e-06, 9.65299...</msg>
<status status="PASS" starttime="20201115 22:00:04.160" endtime="20201115 22:00:04.190"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:04.199" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201115 22:00:04.197" endtime="20201115 22:00:04.200"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:04.204" level="INFO">VALUE: [9.195000000017384e-06, 8.806000000000092e-06, 8.83299999998588e-06, 8.819000000021004e-06, 8.819999999992723e-06, 9.611000000020464e-06, 9.473000000009835e-06, 9.263999999981065e-06, 9.652999999998357e-06, 9.487000000002466e-06, 9.3200000000071e-06, 9.3200000000071e-06, 9.487000000002466e-06, 9.138999999991348e-06, 8.985999999988614e-06, 8.805000000000618e-06, 8.806000000000092e-06, 9.639000000005726e-06, 8.805000000000618e-06, 9.695000000004006e-06, 8.818999999993249e-06, 8.971999999995983e-06, 9.707999999997163e-06, 9.486000000002992e-06, 9.15299999998398e-06, 8.819999999992723e-06, 8.805000000000618e-06, 9.443999999997343e-06, 9.652999999998357e-06, 9.499999999995623e-06, 9.652999999998357e-06, 8.806000000000092e-06, 9.652999999998357e-06, 9.472000000010361e-06, 8.834000000013109e-06, 9.319000000007627e-06, 8.971999999995983e-06, 9.555000000022185e-06, 8.971999999995983e-06, 8.791999999979705e-06, 8.777999999987074e-06, 9.541000000001798e-06, 9.471999999982605e-06, 9.305999999986714e-06, 9.305999999986714e-06, 8.971999999995983e-06, 9.236000000023559e-06, 9.652999999998357e-06, 9.055000000007807e-06, 8.971999999995983e-06]</msg>
<status status="PASS" starttime="20201115 22:00:04.201" endtime="20201115 22:00:04.205"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.191" endtime="20201115 22:00:04.207"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:04.213" endtime="20201115 22:00:04.216"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:04.221" endtime="20201115 22:00:04.243"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.217" endtime="20201115 22:00:04.245"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.209" endtime="20201115 22:00:04.246"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.703" endtime="20201115 22:00:04.247"></status>
</kw>
<msg timestamp="20201115 22:00:04.247" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:04.267" endtime="20201115 22:00:04.279"></status>
</kw>
<msg timestamp="20201115 22:00:04.280" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:04.264" endtime="20201115 22:00:04.280"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:04.286" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:04.282" endtime="20201115 22:00:04.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:04.288" endtime="20201115 22:00:04.292"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.256" endtime="20201115 22:00:04.294"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.252" endtime="20201115 22:00:04.295"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:04.311" endtime="20201115 22:00:04.647"></status>
</kw>
<msg timestamp="20201115 22:00:04.654" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036189375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036198708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:04.308" endtime="20201115 22:00:04.655"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:04.673" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036189375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036198708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:04.657" endtime="20201115 22:00:04.674"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:04.675" endtime="20201115 22:00:04.679"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.301" endtime="20201115 22:00:04.681"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.296" endtime="20201115 22:00:04.682"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:04.693" level="INFO">${RESULT} = [{'time': 0.036198708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.333000000000258e-06, 'source_diff': 9.333000000000258e-06}, {'time': 0.036218833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:04.684" endtime="20201115 22:00:04.693"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:04.723" level="INFO">${OVERHEAD} = {'diff': [9.333000000000258e-06, 9.165999999997954e-06, 8.805000000000618e-06, 9.681000000004436e-06, 8.999999999995123e-06, 9.306000000000592e-06, 8.819999999999661e-06, 8.971999999995983e-06, 9.1529...</msg>
<status status="PASS" starttime="20201115 22:00:04.695" endtime="20201115 22:00:04.724"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:04.734" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201115 22:00:04.732" endtime="20201115 22:00:04.735"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:04.740" level="INFO">VALUE: [9.333000000000258e-06, 9.165999999997954e-06, 8.805000000000618e-06, 9.681000000004436e-06, 8.999999999995123e-06, 9.306000000000592e-06, 8.819999999999661e-06, 8.971999999995983e-06, 9.152999999997857e-06, 8.819999999999661e-06, 9.597000000000078e-06, 9.458000000003852e-06, 9.124999999998717e-06, 9.306000000000592e-06, 9.305000000001118e-06, 8.986000000002492e-06, 8.986000000002492e-06, 9.667000000004866e-06, 9.665999999998454e-06, 9.137999999998814e-06, 9.166000000004892e-06, 9.637999999999314e-06, 9.638999999998787e-06, 9.139000000005226e-06, 8.819000000000188e-06, 9.485999999996053e-06, 9.486000000002992e-06, 9.457999999996913e-06, 8.972000000002922e-06, 8.819999999999661e-06, 9.485999999996053e-06, 9.153000000004796e-06, 9.651999999998884e-06, 9.472000000003422e-06, 9.708000000004102e-06, 8.999999999995123e-06, 9.139000000005226e-06, 8.999999999995123e-06, 8.929999999997273e-06, 8.971999999995983e-06, 9.333000000000258e-06, 9.138999999998287e-06, 9.306000000000592e-06, 9.319000000000688e-06, 8.805000000000618e-06, 9.485999999996053e-06, 9.306000000000592e-06, 9.320000000000161e-06, 9.139000000005226e-06, 9.486000000002992e-06]</msg>
<status status="PASS" starttime="20201115 22:00:04.737" endtime="20201115 22:00:04.741"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.725" endtime="20201115 22:00:04.742"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:04.748" endtime="20201115 22:00:04.751"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:04.757" endtime="20201115 22:00:04.778"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.752" endtime="20201115 22:00:04.780"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.744" endtime="20201115 22:00:04.781"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.248" endtime="20201115 22:00:04.782"></status>
</kw>
<msg timestamp="20201115 22:00:04.782" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:04.802" endtime="20201115 22:00:04.814"></status>
</kw>
<msg timestamp="20201115 22:00:04.815" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:04.799" endtime="20201115 22:00:04.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:04.821" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:04.817" endtime="20201115 22:00:04.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:04.823" endtime="20201115 22:00:04.827"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.791" endtime="20201115 22:00:04.829"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.787" endtime="20201115 22:00:04.830"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:04.847" endtime="20201115 22:00:05.183"></status>
</kw>
<msg timestamp="20201115 22:00:05.190" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036170681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036179667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:04.843" endtime="20201115 22:00:05.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:05.209" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036170681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036179667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:05.192" endtime="20201115 22:00:05.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:05.211" endtime="20201115 22:00:05.215"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.836" endtime="20201115 22:00:05.216"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.831" endtime="20201115 22:00:05.218"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:05.228" level="INFO">${RESULT} = [{'time': 0.036179667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.985999999995553e-06, 'source_diff': 8.985999999995553e-06}, {'time': 0.036195542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:05.219" endtime="20201115 22:00:05.229"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:05.261" level="INFO">${OVERHEAD} = {'diff': [8.985999999995553e-06, 8.944999999996317e-06, 9.653000000005296e-06, 8.986000000002492e-06, 9.306000000000592e-06, 8.986000000002492e-06, 9.264000000001882e-06, 9.610999999999648e-06, 9.3050...</msg>
<status status="PASS" starttime="20201115 22:00:05.230" endtime="20201115 22:00:05.262"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:05.272" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201115 22:00:05.269" endtime="20201115 22:00:05.273"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:05.278" level="INFO">VALUE: [8.985999999995553e-06, 8.944999999996317e-06, 9.653000000005296e-06, 8.986000000002492e-06, 9.306000000000592e-06, 8.986000000002492e-06, 9.264000000001882e-06, 9.610999999999648e-06, 9.305000000001118e-06, 8.985999999995553e-06, 9.458000000003852e-06, 8.791000000001048e-06, 9.638000000006253e-06, 9.166000000004892e-06, 9.291999999994083e-06, 8.972999999995457e-06, 8.832999999999758e-06, 9.486000000002992e-06, 9.153000000004796e-06, 9.583000000000508e-06, 8.806000000000092e-06, 9.485999999996053e-06, 9.333000000000258e-06, 8.971999999995983e-06, 8.806000000000092e-06, 9.000000000002062e-06, 9.667000000004866e-06, 9.486000000002992e-06, 9.291000000001548e-06, 9.514000000002132e-06, 9.471999999996483e-06, 8.791000000001048e-06, 8.819000000000188e-06, 9.638999999998787e-06, 9.624999999999218e-06, 8.805000000000618e-06, 8.833999999999231e-06, 8.819999999999661e-06, 9.473000000002896e-06, 9.610999999999648e-06, 9.222999999995707e-06, 8.833999999999231e-06, 8.972000000002922e-06, 9.138999999998287e-06, 9.306000000000592e-06, 9.333000000000258e-06, 8.972000000002922e-06, 9.292000000001022e-06, 9.292000000001022e-06, 9.472000000003422e-06]</msg>
<status status="PASS" starttime="20201115 22:00:05.275" endtime="20201115 22:00:05.279"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.263" endtime="20201115 22:00:05.280"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:05.287" endtime="20201115 22:00:05.289"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:05.295" endtime="20201115 22:00:05.316"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.290" endtime="20201115 22:00:05.318"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.282" endtime="20201115 22:00:05.320"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.784" endtime="20201115 22:00:05.320"></status>
</kw>
<msg timestamp="20201115 22:00:05.321" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:05.340" endtime="20201115 22:00:05.352"></status>
</kw>
<msg timestamp="20201115 22:00:05.353" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:05.337" endtime="20201115 22:00:05.354"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:05.360" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:05.356" endtime="20201115 22:00:05.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:05.362" endtime="20201115 22:00:05.366"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.330" endtime="20201115 22:00:05.367"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.325" endtime="20201115 22:00:05.369"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:05.386" endtime="20201115 22:00:05.721"></status>
</kw>
<msg timestamp="20201115 22:00:05.728" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036203653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036213292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:05.382" endtime="20201115 22:00:05.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:05.747" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036203653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036213292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:05.731" endtime="20201115 22:00:05.748"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:05.749" endtime="20201115 22:00:05.753"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.375" endtime="20201115 22:00:05.755"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.370" endtime="20201115 22:00:05.756"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:05.767" level="INFO">${RESULT} = [{'time': 0.036213292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.638999999998787e-06, 'source_diff': 9.638999999998787e-06}, {'time': 0.036227361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:05.758" endtime="20201115 22:00:05.767"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:05.797" level="INFO">${OVERHEAD} = {'diff': [9.638999999998787e-06, 9.693999999997593e-06, 8.958000000003352e-06, 9.000000000002062e-06, 8.819000000000188e-06, 8.972000000002922e-06, 8.819000000000188e-06, 9.153000000004796e-06, 9.4439...</msg>
<status status="PASS" starttime="20201115 22:00:05.769" endtime="20201115 22:00:05.798"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:05.807" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201115 22:00:05.805" endtime="20201115 22:00:05.808"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:05.812" level="INFO">VALUE: [9.638999999998787e-06, 9.693999999997593e-06, 8.958000000003352e-06, 9.000000000002062e-06, 8.819000000000188e-06, 8.972000000002922e-06, 8.819000000000188e-06, 9.153000000004796e-06, 9.443999999997343e-06, 8.985999999995553e-06, 8.86200000000531e-06, 9.305000000001118e-06, 9.278000000001452e-06, 9.457999999996913e-06, 8.792000000000522e-06, 9.651999999998884e-06, 9.652999999998357e-06, 9.652999999998357e-06, 9.486000000002992e-06, 9.292000000001022e-06, 9.166999999997427e-06, 9.624999999999218e-06, 8.819000000000188e-06, 9.638999999998787e-06, 9.166999999997427e-06, 9.138999999998287e-06, 8.972000000002922e-06, 9.639000000005726e-06, 9.305000000001118e-06, 8.972000000002922e-06, 9.458000000003852e-06, 9.319999999993223e-06, 8.985999999995553e-06, 9.138999999998287e-06, 9.320000000000161e-06, 8.819999999999661e-06, 8.973000000002396e-06, 8.806000000000092e-06, 8.958000000003352e-06, 9.124999999998717e-06, 9.361999999998871e-06, 9.290999999994609e-06, 8.985999999995553e-06, 9.138999999998287e-06, 9.638999999998787e-06, 9.624999999999218e-06, 9.637999999999314e-06, 9.292000000001022e-06, 9.124999999998717e-06, 9.665999999998454e-06]</msg>
<status status="PASS" starttime="20201115 22:00:05.809" endtime="20201115 22:00:05.813"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.799" endtime="20201115 22:00:05.815"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:05.821" endtime="20201115 22:00:05.825"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:05.831" endtime="20201115 22:00:05.852"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.826" endtime="20201115 22:00:05.854"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.817" endtime="20201115 22:00:05.855"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.322" endtime="20201115 22:00:05.856"></status>
</kw>
<msg timestamp="20201115 22:00:05.856" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:05.876" endtime="20201115 22:00:05.888"></status>
</kw>
<msg timestamp="20201115 22:00:05.889" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:05.873" endtime="20201115 22:00:05.889"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:05.896" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:05.891" endtime="20201115 22:00:05.896"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:05.898" endtime="20201115 22:00:05.902"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.866" endtime="20201115 22:00:05.903"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.861" endtime="20201115 22:00:05.905"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:05.921" endtime="20201115 22:00:06.258"></status>
</kw>
<msg timestamp="20201115 22:00:06.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036089222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036098708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:05.918" endtime="20201115 22:00:06.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:06.283" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036089222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036098708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:06.267" endtime="20201115 22:00:06.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:06.286" endtime="20201115 22:00:06.289"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.911" endtime="20201115 22:00:06.291"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.906" endtime="20201115 22:00:06.292"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:06.303" level="INFO">${RESULT} = [{'time': 0.036098708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.486000000002992e-06, 'source_diff': 9.486000000002992e-06}, {'time': 0.036113681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:06.294" endtime="20201115 22:00:06.303"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:06.333" level="INFO">${OVERHEAD} = {'diff': [9.486000000002992e-06, 9.597999999999551e-06, 8.972000000002922e-06, 9.305999999993653e-06, 9.666999999997927e-06, 8.971999999995983e-06, 8.987000000001966e-06, 9.651999999998884e-06, 9.1799...</msg>
<status status="PASS" starttime="20201115 22:00:06.305" endtime="20201115 22:00:06.334"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:06.343" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201115 22:00:06.341" endtime="20201115 22:00:06.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:06.349" level="INFO">VALUE: [9.486000000002992e-06, 9.597999999999551e-06, 8.972000000002922e-06, 9.305999999993653e-06, 9.666999999997927e-06, 8.971999999995983e-06, 8.987000000001966e-06, 9.651999999998884e-06, 9.179999999997523e-06, 8.985999999995553e-06, 9.152999999997857e-06, 8.986000000002492e-06, 8.804999999993679e-06, 8.987000000001966e-06, 9.165999999997954e-06, 9.651999999998884e-06, 9.651999999998884e-06, 9.152999999997857e-06, 8.986000000002492e-06, 9.486000000002992e-06, 9.652999999998357e-06, 8.791000000001048e-06, 9.250000000002312e-06, 9.152999999997857e-06, 9.471999999996483e-06, 9.486000000002992e-06, 9.597000000000078e-06, 9.165999999997954e-06, 9.333999999999731e-06, 9.320000000000161e-06, 9.000000000002062e-06, 9.487000000002466e-06, 8.792000000000522e-06, 9.305000000001118e-06, 9.056000000000342e-06, 9.499999999995623e-06, 8.806000000000092e-06, 9.320000000000161e-06, 9.652999999998357e-06, 9.305000000001118e-06, 9.138999999998287e-06, 9.306000000000592e-06, 9.651999999998884e-06, 9.638999999998787e-06, 9.138999999998287e-06, 8.832999999999758e-06, 9.124999999998717e-06, 9.473000000002896e-06, 9.305000000001118e-06, 9.000000000002062e-06]</msg>
<status status="PASS" starttime="20201115 22:00:06.346" endtime="20201115 22:00:06.350"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.335" endtime="20201115 22:00:06.351"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:06.358" endtime="20201115 22:00:06.360"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:06.366" endtime="20201115 22:00:06.387"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.361" endtime="20201115 22:00:06.389"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.353" endtime="20201115 22:00:06.391"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.858" endtime="20201115 22:00:06.391"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.699" endtime="20201115 22:00:06.392"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:06.402" endtime="20201115 22:00:06.425"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.398" endtime="20201115 22:00:06.427"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.395" endtime="20201115 22:00:06.428"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:00:03.573" endtime="20201115 22:00:06.428" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set List">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:06.447" endtime="20201115 22:00:06.468"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.443" endtime="20201115 22:00:06.470"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:06.503" endtime="20201115 22:00:06.518"></status>
</kw>
<msg timestamp="20201115 22:00:06.519" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:06.499" endtime="20201115 22:00:06.519"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:06.525" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:06.521" endtime="20201115 22:00:06.526"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:00:06.532" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:00:06.528" endtime="20201115 22:00:06.533"></status>
</kw>
<status status="FAIL" starttime="20201115 22:00:06.492" endtime="20201115 22:00:06.534"></status>
</kw>
<status status="FAIL" starttime="20201115 22:00:06.486" endtime="20201115 22:00:06.536"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.483" endtime="20201115 22:00:06.537"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:00:06.544" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:00:06.543" endtime="20201115 22:00:06.545"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.539" endtime="20201115 22:00:06.546"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.482" endtime="20201115 22:00:06.546"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.480" endtime="20201115 22:00:06.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:06.548" endtime="20201115 22:00:06.551"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.476" endtime="20201115 22:00:06.553"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.471" endtime="20201115 22:00:06.554"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.440" endtime="20201115 22:00:06.555"></status>
</kw>
<kw name="${n} IN RANGE [ 25 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:06.562" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:06.587" endtime="20201115 22:00:06.602"></status>
</kw>
<msg timestamp="20201115 22:00:06.603" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:06.584" endtime="20201115 22:00:06.603"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:06.609" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:06.605" endtime="20201115 22:00:06.610"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:06.611" endtime="20201115 22:00:06.615"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.575" endtime="20201115 22:00:06.617"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.569" endtime="20201115 22:00:06.618"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:06.635" endtime="20201115 22:00:06.991"></status>
</kw>
<msg timestamp="20201115 22:00:06.999" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.131898111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.131919917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:06.632" endtime="20201115 22:00:06.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:07.017" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.131898111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.131919917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:07.001" endtime="20201115 22:00:07.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:07.020" endtime="20201115 22:00:07.023"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.624" endtime="20201115 22:00:07.025"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.619" endtime="20201115 22:00:07.027"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:07.037" level="INFO">${RESULT} = [{'time': 0.131919917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1805999999985337e-05, 'source_diff': 2.1805999999985337e-05}, {'time': 0.132024, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:00:07.028" endtime="20201115 22:00:07.037"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:07.067" level="INFO">${OVERHEAD} = {'diff': [2.1805999999985337e-05, 2.1943999999995967e-05, 2.2625000000026096e-05, 2.245900000000245e-05, 2.261100000000571e-05, 2.2305999999999715e-05, 2.2458000000002976e-05, 2.1972000000008984e-05, ...</msg>
<status status="PASS" starttime="20201115 22:00:07.039" endtime="20201115 22:00:07.068"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:07.078" level="INFO">NAME: 00-overhead-1-set</msg>
<status status="PASS" starttime="20201115 22:00:07.076" endtime="20201115 22:00:07.079"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:07.083" level="INFO">VALUE: [2.1805999999985337e-05, 2.1943999999995967e-05, 2.2625000000026096e-05, 2.245900000000245e-05, 2.261100000000571e-05, 2.2305999999999715e-05, 2.2458000000002976e-05, 2.1972000000008984e-05, 2.1790999999993232e-05, 2.1778000000000075e-05, 2.2652999999983603e-05, 2.1902000000018074e-05, 2.1806000000013093e-05, 2.268099999999662e-05, 2.230500000000024e-05, 2.2791000000021988e-05, 2.1805999999985337e-05, 2.1778000000000075e-05, 2.23200000000201e-05, 2.2444000000010345e-05, 2.2458000000002976e-05, 2.262499999999834e-05, 2.2625000000026096e-05, 2.262499999999834e-05, 2.262499999999834e-05, 2.212500000001172e-05, 2.1959000000015827e-05, 2.197199999998123e-05, 2.213900000000435e-05, 2.1957999999988598e-05, 2.2292000000007084e-05, 2.2194000000003156e-05, 2.2415999999997327e-05, 2.3500000000009624e-05, 2.268099999999662e-05, 2.313900000000535e-05, 2.1778000000000075e-05, 2.245900000000245e-05, 2.212500000001172e-05, 2.1791999999992706e-05, 2.262499999999834e-05, 2.2305999999999715e-05, 2.2486000000015993e-05, 2.2292000000007084e-05, 2.3458000000003976e-05, 2.3292000000008084e-05, 2.243099999998943e-05, 2.1776999999972846e-05, 2.230500000000024e-05, 2.2556000000006904e-05]</msg>
<status status="PASS" starttime="20201115 22:00:07.080" endtime="20201115 22:00:07.084"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.069" endtime="20201115 22:00:07.086"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:07.093" endtime="20201115 22:00:07.095"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:07.101" endtime="20201115 22:00:07.123"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.097" endtime="20201115 22:00:07.125"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.088" endtime="20201115 22:00:07.127"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.563" endtime="20201115 22:00:07.127"></status>
</kw>
<msg timestamp="20201115 22:00:07.128" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:07.151" endtime="20201115 22:00:07.166"></status>
</kw>
<msg timestamp="20201115 22:00:07.168" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:07.147" endtime="20201115 22:00:07.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:07.175" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:07.170" endtime="20201115 22:00:07.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:07.177" endtime="20201115 22:00:07.183"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.140" endtime="20201115 22:00:07.187"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.134" endtime="20201115 22:00:07.189"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:07.207" endtime="20201115 22:00:07.557"></status>
</kw>
<msg timestamp="20201115 22:00:07.564" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040832917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040855361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:07.204" endtime="20201115 22:00:07.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:07.583" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040832917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040855361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:07.567" endtime="20201115 22:00:07.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:07.585" endtime="20201115 22:00:07.590"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.196" endtime="20201115 22:00:07.593"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.191" endtime="20201115 22:00:07.595"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:07.608" level="INFO">${RESULT} = [{'time': 0.040855361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2443999999996467e-05, 'source_diff': 2.2443999999996467e-05}, {'time': 0.040958528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:07.597" endtime="20201115 22:00:07.609"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:07.641" level="INFO">${OVERHEAD} = {'diff': [2.2443999999996467e-05, 2.2278000000000575e-05, 2.212499999999784e-05, 2.1805999999999215e-05, 2.1958000000002476e-05, 2.262499999999834e-05, 2.2165999999997077e-05, 2.243100000000331e-05, 2...</msg>
<status status="PASS" starttime="20201115 22:00:07.610" endtime="20201115 22:00:07.642"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:07.652" level="INFO">NAME: 00-overhead-1-set</msg>
<status status="PASS" starttime="20201115 22:00:07.650" endtime="20201115 22:00:07.653"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:07.658" level="INFO">VALUE: [2.2443999999996467e-05, 2.2278000000000575e-05, 2.212499999999784e-05, 2.1805999999999215e-05, 2.1958000000002476e-05, 2.262499999999834e-05, 2.2165999999997077e-05, 2.243100000000331e-05, 2.1805999999999215e-05, 2.1764000000000505e-05, 2.2444000000003406e-05, 2.1958000000002476e-05, 2.1944000000002906e-05, 2.2304999999993302e-05, 2.2458000000002976e-05, 2.2277999999993636e-05, 2.261099999999877e-05, 2.1792000000006584e-05, 2.19169999999963e-05, 2.1944000000002906e-05, 2.2041999999999895e-05, 2.2457999999996037e-05, 2.261100000000571e-05, 2.237500000000503e-05, 2.262499999999834e-05, 2.1930000000003336e-05, 2.1722000000001795e-05, 2.3236000000002865e-05, 2.230500000000024e-05, 2.261099999999877e-05, 2.2472000000002545e-05, 2.229100000000067e-05, 2.279100000000117e-05, 2.1972000000002045e-05, 2.180499999999974e-05, 2.2193999999996217e-05, 2.211099999999827e-05, 2.212499999999784e-05, 2.2444000000003406e-05, 2.261100000000571e-05, 2.262499999999834e-05, 2.211099999999827e-05, 2.240299999999723e-05, 2.2806000000000215e-05, 2.2305999999999715e-05, 2.2278000000000575e-05, 2.2458000000002976e-05, 2.2137999999997937e-05, 2.261099999999877e-05, 2.266699999999705e-05]</msg>
<status status="PASS" starttime="20201115 22:00:07.655" endtime="20201115 22:00:07.659"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.643" endtime="20201115 22:00:07.660"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:07.667" endtime="20201115 22:00:07.669"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:07.675" endtime="20201115 22:00:07.697"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.671" endtime="20201115 22:00:07.699"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.662" endtime="20201115 22:00:07.700"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.129" endtime="20201115 22:00:07.701"></status>
</kw>
<msg timestamp="20201115 22:00:07.701" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:07.724" endtime="20201115 22:00:07.738"></status>
</kw>
<msg timestamp="20201115 22:00:07.740" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:07.720" endtime="20201115 22:00:07.741"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:07.747" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:07.743" endtime="20201115 22:00:07.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:07.749" endtime="20201115 22:00:07.752"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.713" endtime="20201115 22:00:07.754"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.708" endtime="20201115 22:00:07.756"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:07.774" endtime="20201115 22:00:08.120"></status>
</kw>
<msg timestamp="20201115 22:00:08.128" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040259333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040281139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:07.770" endtime="20201115 22:00:08.128"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:08.147" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040259333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040281139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:08.130" endtime="20201115 22:00:08.148"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:08.149" endtime="20201115 22:00:08.153"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.761" endtime="20201115 22:00:08.155"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.757" endtime="20201115 22:00:08.157"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:08.167" level="INFO">${RESULT} = [{'time': 0.040281139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1805999999999215e-05, 'source_diff': 2.1805999999999215e-05}, {'time': 0.040379319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:08.158" endtime="20201115 22:00:08.168"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:08.197" level="INFO">${OVERHEAD} = {'diff': [2.1805999999999215e-05, 2.1985999999994676e-05, 2.30969999999997e-05, 2.1778000000000075e-05, 2.311099999999927e-05, 2.258299999999963e-05, 2.2263999999994066e-05, 2.212499999999784e-05, 2.2...</msg>
<status status="PASS" starttime="20201115 22:00:08.169" endtime="20201115 22:00:08.198"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:08.208" level="INFO">NAME: 00-overhead-1-set</msg>
<status status="PASS" starttime="20201115 22:00:08.206" endtime="20201115 22:00:08.209"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:08.214" level="INFO">VALUE: [2.1805999999999215e-05, 2.1985999999994676e-05, 2.30969999999997e-05, 2.1778000000000075e-05, 2.311099999999927e-05, 2.258299999999963e-05, 2.2263999999994066e-05, 2.212499999999784e-05, 2.2665999999997577e-05, 2.212499999999784e-05, 2.1957999999995537e-05, 2.213899999999741e-05, 2.2055999999999465e-05, 2.211099999999827e-05, 2.2278000000000575e-05, 2.265299999999748e-05, 2.252700000000135e-05, 2.2583999999999105e-05, 2.218100000000306e-05, 2.2597999999998675e-05, 2.1778000000000075e-05, 2.2471999999995607e-05, 2.243099999999637e-05, 2.1944000000002906e-05, 2.261099999999877e-05, 2.245900000000245e-05, 2.1972000000002045e-05, 2.2612000000005184e-05, 2.2486000000002115e-05, 2.180499999999974e-05, 2.245900000000245e-05, 2.3457999999997037e-05, 2.1764000000000505e-05, 2.293099999999687e-05, 2.261099999999877e-05, 2.2500000000001685e-05, 2.261100000000571e-05, 2.262499999999834e-05, 2.212499999999784e-05, 2.1764000000000505e-05, 2.261099999999877e-05, 2.230500000000024e-05, 2.25969999999992e-05, 2.1778000000000075e-05, 2.212500000000478e-05, 2.3472000000003546e-05, 2.1929999999996397e-05, 2.1944000000002906e-05, 2.261099999999877e-05, 2.2292000000000145e-05]</msg>
<status status="PASS" starttime="20201115 22:00:08.210" endtime="20201115 22:00:08.214"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.199" endtime="20201115 22:00:08.216"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:08.222" endtime="20201115 22:00:08.225"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:08.230" endtime="20201115 22:00:08.252"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.226" endtime="20201115 22:00:08.254"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.218" endtime="20201115 22:00:08.255"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.702" endtime="20201115 22:00:08.256"></status>
</kw>
<msg timestamp="20201115 22:00:08.256" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:08.284" endtime="20201115 22:00:08.298"></status>
</kw>
<msg timestamp="20201115 22:00:08.300" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:08.281" endtime="20201115 22:00:08.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:08.306" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:08.302" endtime="20201115 22:00:08.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:08.308" endtime="20201115 22:00:08.312"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.273" endtime="20201115 22:00:08.313"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.263" endtime="20201115 22:00:08.315"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:08.331" endtime="20201115 22:00:08.680"></status>
</kw>
<msg timestamp="20201115 22:00:08.687" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045156833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045179139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:08.328" endtime="20201115 22:00:08.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:08.706" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045156833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045179139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:08.690" endtime="20201115 22:00:08.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:08.708" endtime="20201115 22:00:08.712"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.321" endtime="20201115 22:00:08.714"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.316" endtime="20201115 22:00:08.715"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:08.726" level="INFO">${RESULT} = [{'time': 0.045179139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2305999999999715e-05, 'source_diff': 2.2305999999999715e-05}, {'time': 0.045282292, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:08.717" endtime="20201115 22:00:08.726"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:08.756" level="INFO">${OVERHEAD} = {'diff': [2.2305999999999715e-05, 2.266700000000399e-05, 2.212499999999784e-05, 2.1791999999999645e-05, 2.1930000000003336e-05, 2.2292000000000145e-05, 2.2278000000000575e-05, 2.184700000000539e-05, 2...</msg>
<status status="PASS" starttime="20201115 22:00:08.728" endtime="20201115 22:00:08.756"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:08.766" level="INFO">NAME: 00-overhead-1-set</msg>
<status status="PASS" starttime="20201115 22:00:08.764" endtime="20201115 22:00:08.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:08.772" level="INFO">VALUE: [2.2305999999999715e-05, 2.266700000000399e-05, 2.212499999999784e-05, 2.1791999999999645e-05, 2.1930000000003336e-05, 2.2292000000000145e-05, 2.2278000000000575e-05, 2.184700000000539e-05, 2.262500000000528e-05, 2.195899999999501e-05, 2.3457999999997037e-05, 2.194500000000238e-05, 2.2457999999996037e-05, 2.245899999999551e-05, 2.2292000000000145e-05, 2.211099999999827e-05, 2.212500000000478e-05, 2.212499999999784e-05, 2.1792000000006584e-05, 2.211099999999827e-05, 2.197299999999458e-05, 2.230500000000024e-05, 2.263899999999791e-05, 2.2777999999994136e-05, 2.1791999999999645e-05, 2.212499999999784e-05, 2.3457999999997037e-05, 2.2652000000004946e-05, 2.1791999999999645e-05, 2.231899999999981e-05, 2.262499999999834e-05, 2.2542000000000395e-05, 2.263899999999791e-05, 2.1834000000005294e-05, 2.1750000000000935e-05, 2.231899999999981e-05, 2.1944000000002906e-05, 2.262499999999834e-05, 2.2444000000003406e-05, 2.1930000000003336e-05, 2.262499999999834e-05, 2.2236000000001865e-05, 2.215300000000392e-05, 2.2055999999999465e-05, 2.212500000000478e-05, 2.212499999999784e-05, 2.2443999999996467e-05, 2.1958000000002476e-05, 2.265299999999748e-05, 2.193100000000281e-05]</msg>
<status status="PASS" starttime="20201115 22:00:08.769" endtime="20201115 22:00:08.773"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.757" endtime="20201115 22:00:08.774"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:08.780" endtime="20201115 22:00:08.783"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:08.789" endtime="20201115 22:00:08.811"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.784" endtime="20201115 22:00:08.813"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.776" endtime="20201115 22:00:08.814"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.258" endtime="20201115 22:00:08.815"></status>
</kw>
<msg timestamp="20201115 22:00:08.815" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:08.838" endtime="20201115 22:00:08.853"></status>
</kw>
<msg timestamp="20201115 22:00:08.854" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:08.835" endtime="20201115 22:00:08.854"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:08.860" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:08.856" endtime="20201115 22:00:08.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:08.862" endtime="20201115 22:00:08.866"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.828" endtime="20201115 22:00:08.868"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.822" endtime="20201115 22:00:08.869"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:08.886" endtime="20201115 22:00:09.235"></status>
</kw>
<msg timestamp="20201115 22:00:09.243" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040383139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04040575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:00:08.882" endtime="20201115 22:00:09.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:09.261" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040383139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04040575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:00:09.245" endtime="20201115 22:00:09.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:09.264" endtime="20201115 22:00:09.268"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.875" endtime="20201115 22:00:09.269"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.870" endtime="20201115 22:00:09.271"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:09.281" level="INFO">${RESULT} = [{'time': 0.04040575, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.261099999999877e-05, 'source_diff': 2.261099999999877e-05}, {'time': 0.040506778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:00:09.272" endtime="20201115 22:00:09.282"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:09.311" level="INFO">${OVERHEAD} = {'diff': [2.261099999999877e-05, 2.2806000000000215e-05, 2.261099999999877e-05, 2.212499999999784e-05, 2.194500000000238e-05, 2.2542000000000395e-05, 2.230500000000024e-05, 2.2277999999993636e-05, 2.2...</msg>
<status status="PASS" starttime="20201115 22:00:09.283" endtime="20201115 22:00:09.312"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:09.322" level="INFO">NAME: 00-overhead-1-set</msg>
<status status="PASS" starttime="20201115 22:00:09.320" endtime="20201115 22:00:09.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:09.327" level="INFO">VALUE: [2.261099999999877e-05, 2.2806000000000215e-05, 2.261099999999877e-05, 2.212499999999784e-05, 2.194500000000238e-05, 2.2542000000000395e-05, 2.230500000000024e-05, 2.2277999999993636e-05, 2.213900000000435e-05, 2.2457999999996037e-05, 2.2305999999999715e-05, 2.262499999999834e-05, 2.280500000000074e-05, 2.311099999999927e-05, 2.179100000000017e-05, 2.1764000000000505e-05, 2.2278000000000575e-05, 2.1902000000004196e-05, 2.19169999999963e-05, 2.258299999999963e-05, 2.261099999999877e-05, 2.191700000000324e-05, 2.213899999999741e-05, 2.212499999999784e-05, 2.194500000000238e-05, 2.1958000000002476e-05, 2.247300000000202e-05, 2.194500000000238e-05, 2.19169999999963e-05, 2.2292000000000145e-05, 2.2457999999996037e-05, 2.212500000000478e-05, 2.2792000000000645e-05, 2.247300000000202e-05, 2.2806000000000215e-05, 2.261099999999877e-05, 2.248700000000159e-05, 2.263899999999791e-05, 2.2292000000000145e-05, 2.194500000000238e-05, 2.229100000000067e-05, 2.17770000000006e-05, 2.243100000000331e-05, 2.20969999999987e-05, 2.213900000000435e-05, 2.1791999999999645e-05, 2.2500000000001685e-05, 2.2443999999996467e-05, 2.2264000000001005e-05, 2.261100000000571e-05]</msg>
<status status="PASS" starttime="20201115 22:00:09.324" endtime="20201115 22:00:09.329"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.313" endtime="20201115 22:00:09.330"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:09.337" endtime="20201115 22:00:09.339"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:09.345" endtime="20201115 22:00:09.367"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.341" endtime="20201115 22:00:09.369"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.332" endtime="20201115 22:00:09.370"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.817" endtime="20201115 22:00:09.371"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.560" endtime="20201115 22:00:09.371"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.558" endtime="20201115 22:00:09.372"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:09.377" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:09.399" endtime="20201115 22:00:09.416"></status>
</kw>
<msg timestamp="20201115 22:00:09.417" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:09.396" endtime="20201115 22:00:09.417"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:09.423" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:09.419" endtime="20201115 22:00:09.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:09.425" endtime="20201115 22:00:09.429"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.389" endtime="20201115 22:00:09.430"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.383" endtime="20201115 22:00:09.432"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:09.448" endtime="20201115 22:00:09.790"></status>
</kw>
<msg timestamp="20201115 22:00:09.797" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045502653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04551575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:00:09.445" endtime="20201115 22:00:09.797"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:09.815" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045502653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04551575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:00:09.799" endtime="20201115 22:00:09.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:09.817" endtime="20201115 22:00:09.822"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.438" endtime="20201115 22:00:09.824"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.433" endtime="20201115 22:00:09.825"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:09.836" level="INFO">${RESULT} = [{'time': 0.04551575, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3097000000003578e-05, 'source_diff': 1.3097000000003578e-05}, {'time': 0.045650861, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 22:00:09.827" endtime="20201115 22:00:09.836"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:09.868" level="INFO">${OVERHEAD} = {'diff': [1.3097000000003578e-05, 1.3097000000003578e-05, 1.3110999999996209e-05, 1.3111000000003148e-05, 1.2431000000000247e-05, 1.280499999999768e-05, 1.2277999999997513e-05, 1.3125000000002718e-05,...</msg>
<status status="PASS" starttime="20201115 22:00:09.838" endtime="20201115 22:00:09.869"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:09.879" level="INFO">NAME: 00-overhead-2-set</msg>
<status status="PASS" starttime="20201115 22:00:09.877" endtime="20201115 22:00:09.880"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:09.885" level="INFO">VALUE: [1.3097000000003578e-05, 1.3097000000003578e-05, 1.3110999999996209e-05, 1.3111000000003148e-05, 1.2431000000000247e-05, 1.280499999999768e-05, 1.2277999999997513e-05, 1.3125000000002718e-05, 1.2444000000000344e-05, 1.2291999999997083e-05, 1.2971999999999984e-05, 1.3125000000002718e-05, 1.2777999999998013e-05, 1.2944000000000844e-05, 1.2444999999999817e-05, 1.2624999999995279e-05, 1.2389000000001538e-05, 1.2957999999993475e-05, 1.2430000000000774e-05, 1.2278000000004452e-05, 1.3125000000002718e-05, 1.2667000000000928e-05, 1.2777999999998013e-05, 1.3111000000003148e-05, 1.2653000000001358e-05, 1.2958000000000414e-05, 1.2610999999995709e-05, 1.2444999999999817e-05, 1.2375000000001968e-05, 1.2749999999998873e-05, 1.2611000000002648e-05, 1.2958000000000414e-05, 1.2610999999995709e-05, 1.2791000000005048e-05, 1.2457999999999914e-05, 1.2930000000001274e-05, 1.2430000000000774e-05, 1.2931000000000747e-05, 1.2958000000000414e-05, 1.3125000000002718e-05, 1.2277999999997513e-05, 1.2277999999997513e-05, 1.2777999999998013e-05, 1.2263999999997943e-05, 1.2444999999999817e-05, 1.2263999999997943e-05, 1.2944000000000844e-05, 1.2945000000000317e-05, 1.2457999999999914e-05, 1.2931000000000747e-05]</msg>
<status status="PASS" starttime="20201115 22:00:09.881" endtime="20201115 22:00:09.886"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.870" endtime="20201115 22:00:09.887"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:09.894" endtime="20201115 22:00:09.896"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:09.902" endtime="20201115 22:00:09.924"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.898" endtime="20201115 22:00:09.925"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.889" endtime="20201115 22:00:09.927"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.378" endtime="20201115 22:00:09.928"></status>
</kw>
<msg timestamp="20201115 22:00:09.928" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:09.951" endtime="20201115 22:00:09.967"></status>
</kw>
<msg timestamp="20201115 22:00:09.968" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:09.947" endtime="20201115 22:00:09.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:09.975" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:09.971" endtime="20201115 22:00:09.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:09.977" endtime="20201115 22:00:09.980"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.940" endtime="20201115 22:00:09.982"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.935" endtime="20201115 22:00:09.983"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:10.000" endtime="20201115 22:00:10.347"></status>
</kw>
<msg timestamp="20201115 22:00:10.354" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040397042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040409458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:09.997" endtime="20201115 22:00:10.354"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:10.372" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040397042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040409458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:10.356" endtime="20201115 22:00:10.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:10.374" endtime="20201115 22:00:10.378"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.989" endtime="20201115 22:00:10.380"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.985" endtime="20201115 22:00:10.381"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:10.392" level="INFO">${RESULT} = [{'time': 0.040409458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2416000000001204e-05, 'source_diff': 1.2416000000001204e-05}, {'time': 0.040545667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:10.383" endtime="20201115 22:00:10.392"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:10.423" level="INFO">${OVERHEAD} = {'diff': [1.2416000000001204e-05, 1.2625000000002218e-05, 1.2277999999997513e-05, 1.2444000000000344e-05, 1.2583999999996043e-05, 1.2596999999996139e-05, 1.2430000000000774e-05, 1.3167000000001428e-05...</msg>
<status status="PASS" starttime="20201115 22:00:10.394" endtime="20201115 22:00:10.424"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:10.435" level="INFO">NAME: 00-overhead-2-set</msg>
<status status="PASS" starttime="20201115 22:00:10.432" endtime="20201115 22:00:10.435"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:10.440" level="INFO">VALUE: [1.2416000000001204e-05, 1.2625000000002218e-05, 1.2277999999997513e-05, 1.2444000000000344e-05, 1.2583999999996043e-05, 1.2596999999996139e-05, 1.2430000000000774e-05, 1.3167000000001428e-05, 1.2278000000004452e-05, 1.2945000000000317e-05, 1.2944000000000844e-05, 1.3110999999996209e-05, 1.2444999999999817e-05, 1.2931000000000747e-05, 1.3027999999998263e-05, 1.2944000000000844e-05, 1.2610999999995709e-05, 1.2611000000002648e-05, 1.2263999999997943e-05, 1.2931000000000747e-05, 1.227699999999804e-05, 1.2930000000001274e-05, 1.2611999999995183e-05, 1.2444000000000344e-05, 1.2680999999993559e-05, 1.2791000000005048e-05, 1.2458999999999387e-05, 1.2277999999997513e-05, 1.2347000000002828e-05, 1.2457999999999914e-05, 1.2597000000003078e-05, 1.2388000000002064e-05, 1.2820000000003662e-05, 1.2597000000003078e-05, 1.2194999999999567e-05, 1.2277999999997513e-05, 1.2777999999998013e-05, 1.2277999999997513e-05, 1.2792000000004522e-05, 1.2945000000000317e-05, 1.2458999999999387e-05, 1.2277999999997513e-05, 1.2444000000000344e-05, 1.2820000000003662e-05, 1.2916000000001704e-05, 1.2444999999999817e-05, 1.2610999999995709e-05, 1.2305999999996653e-05, 1.2985999999999553e-05, 1.2582999999996569e-05]</msg>
<status status="PASS" starttime="20201115 22:00:10.437" endtime="20201115 22:00:10.441"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.426" endtime="20201115 22:00:10.443"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:10.449" endtime="20201115 22:00:10.452"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:10.457" endtime="20201115 22:00:10.479"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.453" endtime="20201115 22:00:10.481"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.445" endtime="20201115 22:00:10.482"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.929" endtime="20201115 22:00:10.483"></status>
</kw>
<msg timestamp="20201115 22:00:10.484" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:10.506" endtime="20201115 22:00:10.523"></status>
</kw>
<msg timestamp="20201115 22:00:10.524" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:10.503" endtime="20201115 22:00:10.524"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:10.530" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:10.526" endtime="20201115 22:00:10.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:10.532" endtime="20201115 22:00:10.536"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.496" endtime="20201115 22:00:10.538"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.490" endtime="20201115 22:00:10.539"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:10.555" endtime="20201115 22:00:10.902"></status>
</kw>
<msg timestamp="20201115 22:00:10.909" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040380139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040392569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:10.552" endtime="20201115 22:00:10.910"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:10.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040380139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040392569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:10.911" endtime="20201115 22:00:10.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:10.930" endtime="20201115 22:00:10.933"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.545" endtime="20201115 22:00:10.935"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.540" endtime="20201115 22:00:10.936"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:10.950" level="INFO">${RESULT} = [{'time': 0.040392569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2430000000000774e-05, 'source_diff': 1.2430000000000774e-05}, {'time': 0.040527875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:10.938" endtime="20201115 22:00:10.950"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:10.981" level="INFO">${OVERHEAD} = {'diff': [1.2430000000000774e-05, 1.2263999999997943e-05, 1.3110999999996209e-05, 1.3125000000002718e-05, 1.2624999999995279e-05, 1.2624999999995279e-05, 1.2402999999994169e-05, 1.2263999999997943e-05...</msg>
<status status="PASS" starttime="20201115 22:00:10.952" endtime="20201115 22:00:10.982"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:10.992" level="INFO">NAME: 00-overhead-2-set</msg>
<status status="PASS" starttime="20201115 22:00:10.990" endtime="20201115 22:00:10.993"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:10.998" level="INFO">VALUE: [1.2430000000000774e-05, 1.2263999999997943e-05, 1.3110999999996209e-05, 1.3125000000002718e-05, 1.2624999999995279e-05, 1.2624999999995279e-05, 1.2402999999994169e-05, 1.2263999999997943e-05, 1.2444000000000344e-05, 1.2611000000002648e-05, 1.2401999999994695e-05, 1.3110999999996209e-05, 1.2430000000000774e-05, 1.3124999999995779e-05, 1.3125000000002718e-05, 1.2625000000002218e-05, 1.3097000000003578e-05, 1.2444999999999817e-05, 1.30689999999975e-05, 1.2430000000000774e-05, 1.2930000000001274e-05, 1.2457999999999914e-05, 1.2945000000000317e-05, 1.2444000000000344e-05, 1.2945000000000317e-05, 1.227699999999804e-05, 1.3096999999996639e-05, 1.2944000000000844e-05, 1.3181000000000997e-05, 1.2431000000000247e-05, 1.2444999999999817e-05, 1.2777999999998013e-05, 1.229099999999761e-05, 1.3111999999995683e-05, 1.2777999999998013e-05, 1.2444999999999817e-05, 1.2277000000004978e-05, 1.2985999999999553e-05, 1.3110999999996209e-05, 1.2971999999999984e-05, 1.2277999999997513e-05, 1.2611000000002648e-05, 1.2902000000002134e-05, 1.2986999999999027e-05, 1.2986000000006492e-05, 1.2417000000000677e-05, 1.2277999999997513e-05, 1.3096999999996639e-05, 1.2667000000000928e-05, 1.2499999999998623e-05]</msg>
<status status="PASS" starttime="20201115 22:00:10.995" endtime="20201115 22:00:10.999"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.983" endtime="20201115 22:00:11.001"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:11.007" endtime="20201115 22:00:11.009"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:11.015" endtime="20201115 22:00:11.037"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.011" endtime="20201115 22:00:11.039"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.002" endtime="20201115 22:00:11.040"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.485" endtime="20201115 22:00:11.041"></status>
</kw>
<msg timestamp="20201115 22:00:11.041" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:11.064" endtime="20201115 22:00:11.081"></status>
</kw>
<msg timestamp="20201115 22:00:11.082" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:11.061" endtime="20201115 22:00:11.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:11.088" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:11.084" endtime="20201115 22:00:11.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:11.090" endtime="20201115 22:00:11.094"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.054" endtime="20201115 22:00:11.096"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.048" endtime="20201115 22:00:11.097"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:11.113" endtime="20201115 22:00:11.461"></status>
</kw>
<msg timestamp="20201115 22:00:11.468" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040680097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040692556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:11.110" endtime="20201115 22:00:11.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:11.487" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040680097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040692556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:11.471" endtime="20201115 22:00:11.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:11.490" endtime="20201115 22:00:11.493"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.103" endtime="20201115 22:00:11.495"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.098" endtime="20201115 22:00:11.497"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:11.507" level="INFO">${RESULT} = [{'time': 0.040692556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2458999999999387e-05, 'source_diff': 1.2458999999999387e-05}, {'time': 0.04083275, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 22:00:11.498" endtime="20201115 22:00:11.508"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:11.538" level="INFO">${OVERHEAD} = {'diff': [1.2458999999999387e-05, 1.2207999999999664e-05, 1.2944000000000844e-05, 1.3110999999996209e-05, 1.3055999999997403e-05, 1.2403000000001108e-05, 1.3069000000004438e-05, 1.2930000000001274e-05...</msg>
<status status="PASS" starttime="20201115 22:00:11.509" endtime="20201115 22:00:11.539"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:11.549" level="INFO">NAME: 00-overhead-2-set</msg>
<status status="PASS" starttime="20201115 22:00:11.547" endtime="20201115 22:00:11.550"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:11.555" level="INFO">VALUE: [1.2458999999999387e-05, 1.2207999999999664e-05, 1.2944000000000844e-05, 1.3110999999996209e-05, 1.3055999999997403e-05, 1.2403000000001108e-05, 1.3069000000004438e-05, 1.2930000000001274e-05, 1.3110999999996209e-05, 1.2430000000000774e-05, 1.2444999999999817e-05, 1.2236000000005742e-05, 1.2444000000000344e-05, 1.2278000000004452e-05, 1.3124999999995779e-05, 1.2944000000000844e-05, 1.2277999999997513e-05, 1.2944000000000844e-05, 1.2805999999997153e-05, 1.3125000000002718e-05, 1.3111000000003148e-05, 1.3111000000003148e-05, 1.3096999999996639e-05, 1.2597000000003078e-05, 1.2597000000003078e-05, 1.2958000000000414e-05, 1.2458999999999387e-05, 1.2944000000000844e-05, 1.2931000000000747e-05, 1.3096999999996639e-05, 1.2277000000004978e-05, 1.2612000000002122e-05, 1.3125000000002718e-05, 1.2444000000000344e-05, 1.3055999999997403e-05, 1.2598000000002552e-05, 1.2444000000000344e-05, 1.3096999999996639e-05, 1.2457999999999914e-05, 1.2624999999995279e-05, 1.2305999999996653e-05, 1.2430999999993309e-05, 1.2902999999994669e-05, 1.279099999999811e-05, 1.2403000000001108e-05, 1.2611000000002648e-05, 1.2611000000002648e-05, 1.3110999999996209e-05, 1.2444000000000344e-05, 1.3111000000003148e-05]</msg>
<status status="PASS" starttime="20201115 22:00:11.551" endtime="20201115 22:00:11.555"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.540" endtime="20201115 22:00:11.557"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:11.563" endtime="20201115 22:00:11.566"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:11.571" endtime="20201115 22:00:11.593"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.567" endtime="20201115 22:00:11.595"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.559" endtime="20201115 22:00:11.596"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.042" endtime="20201115 22:00:11.597"></status>
</kw>
<msg timestamp="20201115 22:00:11.597" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:11.620" endtime="20201115 22:00:11.637"></status>
</kw>
<msg timestamp="20201115 22:00:11.638" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:11.617" endtime="20201115 22:00:11.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:11.644" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:11.640" endtime="20201115 22:00:11.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:11.646" endtime="20201115 22:00:11.650"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.610" endtime="20201115 22:00:11.652"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.604" endtime="20201115 22:00:11.653"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:11.669" endtime="20201115 22:00:12.017"></status>
</kw>
<msg timestamp="20201115 22:00:12.025" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040503944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040516417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:11.666" endtime="20201115 22:00:12.025"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:12.043" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040503944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040516417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:12.027" endtime="20201115 22:00:12.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:12.046" endtime="20201115 22:00:12.050"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.659" endtime="20201115 22:00:12.051"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.654" endtime="20201115 22:00:12.053"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:12.063" level="INFO">${RESULT} = [{'time': 0.040516417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2472999999998957e-05, 'source_diff': 1.2472999999998957e-05}, {'time': 0.040653653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:12.054" endtime="20201115 22:00:12.064"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:12.096" level="INFO">${OVERHEAD} = {'diff': [1.2472999999998957e-05, 1.2444999999999817e-05, 1.2763999999998443e-05, 1.2944999999993378e-05, 1.2444999999999817e-05, 1.2944000000000844e-05, 1.2625000000002218e-05, 1.2263999999997943e-05...</msg>
<status status="PASS" starttime="20201115 22:00:12.065" endtime="20201115 22:00:12.096"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:12.107" level="INFO">NAME: 00-overhead-2-set</msg>
<status status="PASS" starttime="20201115 22:00:12.104" endtime="20201115 22:00:12.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:12.112" level="INFO">VALUE: [1.2472999999998957e-05, 1.2444999999999817e-05, 1.2763999999998443e-05, 1.2944999999993378e-05, 1.2444999999999817e-05, 1.2944000000000844e-05, 1.2625000000002218e-05, 1.2263999999997943e-05, 1.2278000000004452e-05, 1.2500000000005562e-05, 1.2444999999999817e-05, 1.2639000000001788e-05, 1.2792000000004522e-05, 1.2277999999997513e-05, 1.2848000000002802e-05, 1.3112000000002622e-05, 1.2472999999998957e-05, 1.2444000000000344e-05, 1.2958000000000414e-05, 1.2444000000000344e-05, 1.2444999999999817e-05, 1.3111999999995683e-05, 1.2611000000002648e-05, 1.2458999999999387e-05, 1.2375000000001968e-05, 1.2777999999998013e-05, 1.3125000000002718e-05, 1.2777999999998013e-05, 1.3111000000003148e-05, 1.2277999999997513e-05, 1.2652999999994419e-05, 1.3125000000002718e-05, 1.2444000000000344e-05, 1.2319000000003688e-05, 1.3110999999996209e-05, 1.304099999999836e-05, 1.3124999999995779e-05, 1.3125000000002718e-05, 1.2611000000002648e-05, 1.2625000000002218e-05, 1.277699999999854e-05, 1.3111000000003148e-05, 1.2611000000002648e-05, 1.2444000000000344e-05, 1.231899999999675e-05, 1.2625000000002218e-05, 1.3167000000001428e-05, 1.2431000000000247e-05, 1.30689999999975e-05, 1.2791999999997583e-05]</msg>
<status status="PASS" starttime="20201115 22:00:12.109" endtime="20201115 22:00:12.113"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.098" endtime="20201115 22:00:12.114"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:12.121" endtime="20201115 22:00:12.123"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:12.129" endtime="20201115 22:00:12.150"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.124" endtime="20201115 22:00:12.152"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.116" endtime="20201115 22:00:12.154"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.599" endtime="20201115 22:00:12.154"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.374" endtime="20201115 22:00:12.155"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.373" endtime="20201115 22:00:12.155"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:12.160" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:12.182" endtime="20201115 22:00:12.201"></status>
</kw>
<msg timestamp="20201115 22:00:12.202" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:12.179" endtime="20201115 22:00:12.202"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:12.208" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:12.204" endtime="20201115 22:00:12.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:12.211" endtime="20201115 22:00:12.215"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.172" endtime="20201115 22:00:12.217"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.166" endtime="20201115 22:00:12.218"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:12.234" endtime="20201115 22:00:12.582"></status>
</kw>
<msg timestamp="20201115 22:00:12.589" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045385153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045397847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:12.231" endtime="20201115 22:00:12.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:12.607" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045385153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045397847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:12.591" endtime="20201115 22:00:12.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:12.610" endtime="20201115 22:00:12.614"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.224" endtime="20201115 22:00:12.615"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.219" endtime="20201115 22:00:12.617"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:12.627" level="INFO">${RESULT} = [{'time': 0.045397847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2694000000000594e-05, 'source_diff': 1.2694000000000594e-05}, {'time': 0.045570208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:12.618" endtime="20201115 22:00:12.628"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:12.659" level="INFO">${OVERHEAD} = {'diff': [1.2694000000000594e-05, 1.2694000000000594e-05, 1.2985999999999553e-05, 1.3374999999996029e-05, 1.3195000000000567e-05, 1.2528000000004702e-05, 1.2708000000000164e-05, 1.3041999999997833e-05...</msg>
<status status="PASS" starttime="20201115 22:00:12.629" endtime="20201115 22:00:12.659"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:12.669" level="INFO">NAME: 00-overhead-3-set</msg>
<status status="PASS" starttime="20201115 22:00:12.667" endtime="20201115 22:00:12.670"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:12.675" level="INFO">VALUE: [1.2694000000000594e-05, 1.2694000000000594e-05, 1.2985999999999553e-05, 1.3374999999996029e-05, 1.3195000000000567e-05, 1.2528000000004702e-05, 1.2708000000000164e-05, 1.3041999999997833e-05, 1.2528000000004702e-05, 1.2695000000000067e-05, 1.3013999999998693e-05, 1.2625000000002218e-05, 1.2708000000000164e-05, 1.3263999999998943e-05, 1.3208000000000664e-05, 1.2875000000002468e-05, 1.3194000000001094e-05, 1.3374999999996029e-05, 1.2681000000000497e-05, 1.3362000000002872e-05, 1.2541999999997333e-05, 1.2471999999999483e-05, 1.2861000000002898e-05, 1.2513999999998193e-05, 1.2846999999996389e-05, 1.2695000000000067e-05, 1.2860999999995959e-05, 1.2861000000002898e-05, 1.3027999999998263e-05, 1.2874999999995529e-05, 1.3181000000000997e-05, 1.2846999999996389e-05, 1.2721999999999734e-05, 1.2541999999997333e-05, 1.2875000000002468e-05, 1.2861000000002898e-05, 1.3193999999994155e-05, 1.3374999999996029e-05, 1.2681000000000497e-05, 1.2694000000000594e-05, 1.3195000000000567e-05, 1.254099999999786e-05, 1.2721999999999734e-05, 1.3194000000001094e-05, 1.2874999999995529e-05, 1.2861000000002898e-05, 1.2680000000001024e-05, 1.3028000000005202e-05, 1.2875000000002468e-05, 1.3346999999996889e-05]</msg>
<status status="PASS" starttime="20201115 22:00:12.672" endtime="20201115 22:00:12.676"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.660" endtime="20201115 22:00:12.677"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:12.684" endtime="20201115 22:00:12.686"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:12.692" endtime="20201115 22:00:12.713"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.687" endtime="20201115 22:00:12.715"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.679" endtime="20201115 22:00:12.717"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.161" endtime="20201115 22:00:12.717"></status>
</kw>
<msg timestamp="20201115 22:00:12.718" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:12.740" endtime="20201115 22:00:12.759"></status>
</kw>
<msg timestamp="20201115 22:00:12.760" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:12.737" endtime="20201115 22:00:12.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:12.767" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:12.763" endtime="20201115 22:00:12.767"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:12.769" endtime="20201115 22:00:12.773"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.730" endtime="20201115 22:00:12.774"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.724" endtime="20201115 22:00:12.776"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:12.792" endtime="20201115 22:00:13.139"></status>
</kw>
<msg timestamp="20201115 22:00:13.146" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040200958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040214319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:12.789" endtime="20201115 22:00:13.146"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:13.164" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040200958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040214319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:13.148" endtime="20201115 22:00:13.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:13.166" endtime="20201115 22:00:13.170"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.782" endtime="20201115 22:00:13.171"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.777" endtime="20201115 22:00:13.173"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:13.183" level="INFO">${RESULT} = [{'time': 0.040214319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3360999999996459e-05, 'source_diff': 1.3360999999996459e-05}, {'time': 0.040392458, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:13.174" endtime="20201115 22:00:13.184"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:13.214" level="INFO">${OVERHEAD} = {'diff': [1.3360999999996459e-05, 1.302699999999879e-05, 1.3333000000004258e-05, 1.2861000000002898e-05, 1.3167000000001428e-05, 1.2473000000005896e-05, 1.305499999999793e-05, 1.3166000000001954e-05, ...</msg>
<status status="PASS" starttime="20201115 22:00:13.185" endtime="20201115 22:00:13.214"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:13.226" level="INFO">NAME: 00-overhead-3-set</msg>
<status status="PASS" starttime="20201115 22:00:13.222" endtime="20201115 22:00:13.227"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:13.231" level="INFO">VALUE: [1.3360999999996459e-05, 1.302699999999879e-05, 1.3333000000004258e-05, 1.2861000000002898e-05, 1.3167000000001428e-05, 1.2473000000005896e-05, 1.305499999999793e-05, 1.3166000000001954e-05, 1.2834000000003232e-05, 1.2874999999995529e-05, 1.2528000000004702e-05, 1.3125000000002718e-05, 1.302699999999879e-05, 1.3069999999996973e-05, 1.2694000000000594e-05, 1.2513999999998193e-05, 1.3027999999998263e-05, 1.2695000000000067e-05, 1.2667000000000928e-05, 1.3208000000000664e-05, 1.3375000000002968e-05, 1.3360999999996459e-05, 1.3167000000001428e-05, 1.2847000000003328e-05, 1.3013999999998693e-05, 1.3194000000001094e-05, 1.2861000000002898e-05, 1.3346999999996889e-05, 1.3014000000005632e-05, 1.2861000000002898e-05, 1.3180000000001524e-05, 1.2846999999996389e-05, 1.2862000000002372e-05, 1.2486000000005992e-05, 1.2666000000001454e-05, 1.3166999999994489e-05, 1.2665999999994515e-05, 1.2681000000000497e-05, 1.3194000000001094e-05, 1.3167000000001428e-05, 1.279099999999811e-05, 1.2499999999998623e-05, 1.3347000000003828e-05, 1.2513999999998193e-05, 1.3180000000001524e-05, 1.2834000000003232e-05, 1.2819000000004188e-05, 1.2666000000001454e-05, 1.3374999999996029e-05, 1.3222000000000234e-05]</msg>
<status status="PASS" starttime="20201115 22:00:13.228" endtime="20201115 22:00:13.232"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.216" endtime="20201115 22:00:13.234"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:13.240" endtime="20201115 22:00:13.243"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:13.248" endtime="20201115 22:00:13.270"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.244" endtime="20201115 22:00:13.272"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.236" endtime="20201115 22:00:13.273"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.719" endtime="20201115 22:00:13.274"></status>
</kw>
<msg timestamp="20201115 22:00:13.274" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:13.302" endtime="20201115 22:00:13.321"></status>
</kw>
<msg timestamp="20201115 22:00:13.322" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:13.299" endtime="20201115 22:00:13.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:13.329" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:13.325" endtime="20201115 22:00:13.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:13.331" endtime="20201115 22:00:13.335"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.291" endtime="20201115 22:00:13.336"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.281" endtime="20201115 22:00:13.338"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:13.354" endtime="20201115 22:00:13.703"></status>
</kw>
<msg timestamp="20201115 22:00:13.710" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045837167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045849653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:13.351" endtime="20201115 22:00:13.710"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:13.728" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045837167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045849653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:13.712" endtime="20201115 22:00:13.728"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:13.730" endtime="20201115 22:00:13.734"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.343" endtime="20201115 22:00:13.735"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.339" endtime="20201115 22:00:13.737"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:13.747" level="INFO">${RESULT} = [{'time': 0.045849653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2485999999999053e-05, 'source_diff': 1.2485999999999053e-05}, {'time': 0.046027917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:13.738" endtime="20201115 22:00:13.748"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:13.778" level="INFO">${OVERHEAD} = {'diff': [1.2485999999999053e-05, 1.2708999999999637e-05, 1.2846999999996389e-05, 1.3181000000000997e-05, 1.2569999999996473e-05, 1.2985999999999553e-05, 1.3180999999994059e-05, 1.3402000000002634e-05...</msg>
<status status="PASS" starttime="20201115 22:00:13.749" endtime="20201115 22:00:13.778"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:13.789" level="INFO">NAME: 00-overhead-3-set</msg>
<status status="PASS" starttime="20201115 22:00:13.786" endtime="20201115 22:00:13.789"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:13.794" level="INFO">VALUE: [1.2485999999999053e-05, 1.2708999999999637e-05, 1.2846999999996389e-05, 1.3181000000000997e-05, 1.2569999999996473e-05, 1.2985999999999553e-05, 1.3180999999994059e-05, 1.3402000000002634e-05, 1.3179999999994585e-05, 1.2695000000000067e-05, 1.2527999999997763e-05, 1.2833000000003758e-05, 1.2679999999994085e-05, 1.2694000000000594e-05, 1.2874999999995529e-05, 1.3013999999998693e-05, 1.2695000000000067e-05, 1.3013999999998693e-05, 1.2874999999995529e-05, 1.3195000000000567e-05, 1.302699999999879e-05, 1.3027999999998263e-05, 1.3374999999996029e-05, 1.2666999999993989e-05, 1.2694000000000594e-05, 1.2833999999996293e-05, 1.2653000000001358e-05, 1.2681000000000497e-05, 1.2708999999999637e-05, 1.2513999999998193e-05, 1.3027999999998263e-05, 1.283299999999682e-05, 1.3360999999996459e-05, 1.3278000000005452e-05, 1.2541999999997333e-05, 1.3375000000002968e-05, 1.301299999999922e-05, 1.2861000000002898e-05, 1.3027999999998263e-05, 1.2903000000001608e-05, 1.2514000000005132e-05, 1.3402000000002634e-05, 1.2708000000000164e-05, 1.2915999999994765e-05, 1.2861000000002898e-05, 1.2721999999999734e-05, 1.3235999999999803e-05, 1.2875000000002468e-05, 1.2958000000000414e-05, 1.2695000000000067e-05]</msg>
<status status="PASS" starttime="20201115 22:00:13.791" endtime="20201115 22:00:13.796"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.780" endtime="20201115 22:00:13.798"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:13.804" endtime="20201115 22:00:13.807"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:13.813" endtime="20201115 22:00:13.835"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.808" endtime="20201115 22:00:13.836"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.800" endtime="20201115 22:00:13.838"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.275" endtime="20201115 22:00:13.838"></status>
</kw>
<msg timestamp="20201115 22:00:13.839" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:13.862" endtime="20201115 22:00:13.880"></status>
</kw>
<msg timestamp="20201115 22:00:13.881" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:13.858" endtime="20201115 22:00:13.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:13.887" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:13.883" endtime="20201115 22:00:13.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:13.889" endtime="20201115 22:00:13.893"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.851" endtime="20201115 22:00:13.895"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.846" endtime="20201115 22:00:13.896"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:13.912" endtime="20201115 22:00:14.248"></status>
</kw>
<msg timestamp="20201115 22:00:14.255" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040195972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040208667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:13.909" endtime="20201115 22:00:14.256"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:14.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040195972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040208667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:14.257" endtime="20201115 22:00:14.274"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:14.276" endtime="20201115 22:00:14.279"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.902" endtime="20201115 22:00:14.281"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.897" endtime="20201115 22:00:14.282"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:14.293" level="INFO">${RESULT} = [{'time': 0.040208667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2694999999993128e-05, 'source_diff': 1.2694999999993128e-05}, {'time': 0.040381917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:14.284" endtime="20201115 22:00:14.294"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:14.326" level="INFO">${OVERHEAD} = {'diff': [1.2694999999993128e-05, 1.2848000000002802e-05, 1.2861000000002898e-05, 1.2694000000000594e-05, 1.3249999999999373e-05, 1.2653000000001358e-05, 1.3208000000000664e-05, 1.2527999999997763e-05...</msg>
<status status="PASS" starttime="20201115 22:00:14.295" endtime="20201115 22:00:14.326"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:14.337" level="INFO">NAME: 00-overhead-3-set</msg>
<status status="PASS" starttime="20201115 22:00:14.335" endtime="20201115 22:00:14.338"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:14.343" level="INFO">VALUE: [1.2694999999993128e-05, 1.2848000000002802e-05, 1.2861000000002898e-05, 1.2694000000000594e-05, 1.3249999999999373e-05, 1.2653000000001358e-05, 1.3208000000000664e-05, 1.2527999999997763e-05, 1.2888999999995099e-05, 1.2708000000000164e-05, 1.3055000000004868e-05, 1.2848000000002802e-05, 1.3070000000003912e-05, 1.3374999999996029e-05, 1.2847999999995863e-05, 1.2860999999995959e-05, 1.3333000000004258e-05, 1.3361000000003398e-05, 1.304099999999836e-05, 1.2528000000004702e-05, 1.2861000000002898e-05, 1.2889000000002038e-05, 1.2694000000000594e-05, 1.2861000000002898e-05, 1.2861000000002898e-05, 1.3430999999994309e-05, 1.30689999999975e-05, 1.3375000000002968e-05, 1.3028000000005202e-05, 1.3013999999998693e-05, 1.2985999999999553e-05, 1.2945000000000317e-05, 1.3375000000002968e-05, 1.3167000000001428e-05, 1.3194000000001094e-05, 1.254099999999786e-05, 1.2542000000004272e-05, 1.2514000000005132e-05, 1.3181000000000997e-05, 1.331899999999775e-05, 1.3027999999998263e-05, 1.2833999999996293e-05, 1.3375000000002968e-05, 1.302699999999879e-05, 1.2972999999999457e-05, 1.2889000000002038e-05, 1.3013999999998693e-05, 1.2860999999995959e-05, 1.3027999999998263e-05, 1.3346999999996889e-05]</msg>
<status status="PASS" starttime="20201115 22:00:14.339" endtime="20201115 22:00:14.344"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.328" endtime="20201115 22:00:14.346"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:14.352" endtime="20201115 22:00:14.357"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:14.362" endtime="20201115 22:00:14.384"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.358" endtime="20201115 22:00:14.386"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.348" endtime="20201115 22:00:14.387"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.840" endtime="20201115 22:00:14.388"></status>
</kw>
<msg timestamp="20201115 22:00:14.388" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:14.411" endtime="20201115 22:00:14.429"></status>
</kw>
<msg timestamp="20201115 22:00:14.430" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:14.408" endtime="20201115 22:00:14.431"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:14.436" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:14.432" endtime="20201115 22:00:14.437"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:14.439" endtime="20201115 22:00:14.442"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.401" endtime="20201115 22:00:14.444"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.395" endtime="20201115 22:00:14.446"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:14.462" endtime="20201115 22:00:14.798"></status>
</kw>
<msg timestamp="20201115 22:00:14.805" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040226986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040239819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:14.459" endtime="20201115 22:00:14.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:14.823" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040226986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040239819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:14.807" endtime="20201115 22:00:14.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:14.825" endtime="20201115 22:00:14.829"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.451" endtime="20201115 22:00:14.831"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.447" endtime="20201115 22:00:14.832"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:14.843" level="INFO">${RESULT} = [{'time': 0.040239819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2833000000003758e-05, 'source_diff': 1.2833000000003758e-05}, {'time': 0.040414111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:14.834" endtime="20201115 22:00:14.843"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:14.873" level="INFO">${OVERHEAD} = {'diff': [1.2833000000003758e-05, 1.2694000000000594e-05, 1.2889000000002038e-05, 1.3013999999998693e-05, 1.2499999999998623e-05, 1.2875000000002468e-05, 1.2834000000003232e-05, 1.2847000000003328e-05...</msg>
<status status="PASS" starttime="20201115 22:00:14.845" endtime="20201115 22:00:14.873"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:14.884" level="INFO">NAME: 00-overhead-3-set</msg>
<status status="PASS" starttime="20201115 22:00:14.881" endtime="20201115 22:00:14.885"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:14.889" level="INFO">VALUE: [1.2833000000003758e-05, 1.2694000000000594e-05, 1.2889000000002038e-05, 1.3013999999998693e-05, 1.2499999999998623e-05, 1.2875000000002468e-05, 1.2834000000003232e-05, 1.2847000000003328e-05, 1.2542000000004272e-05, 1.2541999999997333e-05, 1.2708000000000164e-05, 1.254099999999786e-05, 1.2695000000000067e-05, 1.3027000000005728e-05, 1.2667000000000928e-05, 1.2528000000004702e-05, 1.3374999999996029e-05, 1.252699999999829e-05, 1.3194000000001094e-05, 1.2875000000002468e-05, 1.2499999999998623e-05, 1.2721999999999734e-05, 1.2805000000004618e-05, 1.3375000000002968e-05, 1.2527999999997763e-05, 1.2527999999997763e-05, 1.2513999999998193e-05, 1.3208000000000664e-05, 1.2708000000000164e-05, 1.3181000000000997e-05, 1.3361000000003398e-05, 1.3375000000002968e-05, 1.2846999999996389e-05, 1.2527999999997763e-05, 1.2848000000002802e-05, 1.3236000000006742e-05, 1.2527999999997763e-05, 1.304099999999836e-05, 1.2527999999997763e-05, 1.3375000000002968e-05, 1.3222999999999707e-05, 1.3195000000000567e-05, 1.2846999999996389e-05, 1.2527999999997763e-05, 1.305499999999793e-05, 1.3347000000003828e-05, 1.2528000000004702e-05, 1.2695000000000067e-05, 1.2680000000001024e-05, 1.2695000000000067e-05]</msg>
<status status="PASS" starttime="20201115 22:00:14.886" endtime="20201115 22:00:14.891"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.875" endtime="20201115 22:00:14.892"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:14.899" endtime="20201115 22:00:14.901"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:14.907" endtime="20201115 22:00:14.930"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.902" endtime="20201115 22:00:14.931"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.894" endtime="20201115 22:00:14.933"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.389" endtime="20201115 22:00:14.934"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.158" endtime="20201115 22:00:14.934"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.156" endtime="20201115 22:00:14.935"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:14.939" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:14.962" endtime="20201115 22:00:14.982"></status>
</kw>
<msg timestamp="20201115 22:00:14.983" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:14.959" endtime="20201115 22:00:14.984"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:14.989" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:14.985" endtime="20201115 22:00:14.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:14.991" endtime="20201115 22:00:14.995"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.951" endtime="20201115 22:00:14.997"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.946" endtime="20201115 22:00:14.998"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:15.015" endtime="20201115 22:00:15.349"></status>
</kw>
<msg timestamp="20201115 22:00:15.356" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045674167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045687097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:15.012" endtime="20201115 22:00:15.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:15.375" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045674167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045687097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:15.359" endtime="20201115 22:00:15.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:15.377" endtime="20201115 22:00:15.381"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.005" endtime="20201115 22:00:15.383"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.000" endtime="20201115 22:00:15.385"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:15.396" level="INFO">${RESULT} = [{'time': 0.045687097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2930000000001274e-05, 'source_diff': 1.2930000000001274e-05}, {'time': 0.045901431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:15.386" endtime="20201115 22:00:15.396"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:15.426" level="INFO">${OVERHEAD} = {'diff': [1.2930000000001274e-05, 1.3125000000002718e-05, 1.3665999999995515e-05, 1.2999999999999123e-05, 1.3125000000002718e-05, 1.2944000000000844e-05, 1.2944000000000844e-05, 1.2944000000000844e-05...</msg>
<status status="PASS" starttime="20201115 22:00:15.398" endtime="20201115 22:00:15.426"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:15.437" level="INFO">NAME: 00-overhead-4-set</msg>
<status status="PASS" starttime="20201115 22:00:15.435" endtime="20201115 22:00:15.437"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:15.443" level="INFO">VALUE: [1.2930000000001274e-05, 1.3125000000002718e-05, 1.3665999999995515e-05, 1.2999999999999123e-05, 1.3125000000002718e-05, 1.2944000000000844e-05, 1.2944000000000844e-05, 1.2944000000000844e-05, 1.2806000000004092e-05, 1.3263999999998943e-05, 1.3652000000002884e-05, 1.2791999999997583e-05, 1.3598000000003552e-05, 1.3611000000003648e-05, 1.3263999999998943e-05, 1.3443999999994405e-05, 1.3584000000003982e-05, 1.3429999999994835e-05, 1.2763999999998443e-05, 1.2764000000005382e-05, 1.2708000000000164e-05, 1.3597000000004078e-05, 1.2791000000005048e-05, 1.3431000000001247e-05, 1.3374999999996029e-05, 1.2958000000000414e-05, 1.2958000000000414e-05, 1.3472000000000484e-05, 1.2764000000005382e-05, 1.3041999999997833e-05, 1.3083000000004008e-05, 1.3445000000000817e-05, 1.2792000000004522e-05, 1.3610999999996709e-05, 1.3166000000001954e-05, 1.3125000000002718e-05, 1.3596999999997139e-05, 1.3598000000003552e-05, 1.2778000000004952e-05, 1.2763000000005909e-05, 1.2777999999998013e-05, 1.2764000000005382e-05, 1.2901999999995195e-05, 1.2806000000004092e-05, 1.3096999999996639e-05, 1.3458000000000914e-05, 1.281899999999725e-05, 1.3499999999999623e-05, 1.358299999999757e-05, 1.3624999999996279e-05]</msg>
<status status="PASS" starttime="20201115 22:00:15.439" endtime="20201115 22:00:15.444"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.428" endtime="20201115 22:00:15.445"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:15.452" endtime="20201115 22:00:15.454"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:15.461" endtime="20201115 22:00:15.483"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.456" endtime="20201115 22:00:15.485"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.447" endtime="20201115 22:00:15.486"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.940" endtime="20201115 22:00:15.487"></status>
</kw>
<msg timestamp="20201115 22:00:15.487" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:15.510" endtime="20201115 22:00:15.530"></status>
</kw>
<msg timestamp="20201115 22:00:15.531" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:15.507" endtime="20201115 22:00:15.531"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:15.537" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:15.533" endtime="20201115 22:00:15.538"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:15.539" endtime="20201115 22:00:15.543"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.500" endtime="20201115 22:00:15.545"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.494" endtime="20201115 22:00:15.546"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:15.562" endtime="20201115 22:00:15.897"></status>
</kw>
<msg timestamp="20201115 22:00:15.904" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040296958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040309722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:15.559" endtime="20201115 22:00:15.905"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:15.922" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040296958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040309722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:15.907" endtime="20201115 22:00:15.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:15.925" endtime="20201115 22:00:15.929"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.552" endtime="20201115 22:00:15.930"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.547" endtime="20201115 22:00:15.932"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:15.942" level="INFO">${RESULT} = [{'time': 0.040309722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2763999999998443e-05, 'source_diff': 1.2763999999998443e-05}, {'time': 0.040519, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:00:15.933" endtime="20201115 22:00:15.943"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:15.972" level="INFO">${OVERHEAD} = {'diff': [1.2763999999998443e-05, 1.3096999999996639e-05, 1.2945000000000317e-05, 1.3277999999998513e-05, 1.2791999999997583e-05, 1.3125000000002718e-05, 1.2778000000004952e-05, 1.2874999999995529e-05...</msg>
<status status="PASS" starttime="20201115 22:00:15.944" endtime="20201115 22:00:15.973"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:15.984" level="INFO">NAME: 00-overhead-4-set</msg>
<status status="PASS" starttime="20201115 22:00:15.981" endtime="20201115 22:00:15.985"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:15.989" level="INFO">VALUE: [1.2763999999998443e-05, 1.3096999999996639e-05, 1.2945000000000317e-05, 1.3277999999998513e-05, 1.2791999999997583e-05, 1.3125000000002718e-05, 1.2778000000004952e-05, 1.2874999999995529e-05, 1.3596999999997139e-05, 1.3263999999998943e-05, 1.2958000000000414e-05, 1.3624999999996279e-05, 1.3570000000004412e-05, 1.2971999999999984e-05, 1.3263999999998943e-05, 1.327699999999904e-05, 1.2945000000000317e-05, 1.3263999999998943e-05, 1.3625000000003218e-05, 1.3611000000003648e-05, 1.2846999999996389e-05, 1.3443999999994405e-05, 1.2763999999998443e-05, 1.2764000000005382e-05, 1.3263999999998943e-05, 1.3111000000003148e-05, 1.358299999999757e-05, 1.2763999999998443e-05, 1.3195000000000567e-05, 1.2916999999994239e-05, 1.3277999999998513e-05, 1.2917000000001178e-05, 1.3277999999998513e-05, 1.2958999999999887e-05, 1.3125000000002718e-05, 1.3611000000003648e-05, 1.2763999999998443e-05, 1.3430999999994309e-05, 1.2763999999998443e-05, 1.2930999999993809e-05, 1.3291999999998083e-05, 1.2735999999999303e-05, 1.3111000000003148e-05, 1.3445000000000817e-05, 1.3431000000001247e-05, 1.277699999999854e-05, 1.3125000000002718e-05, 1.3083000000004008e-05, 1.3417000000001678e-05, 1.3139000000002288e-05]</msg>
<status status="PASS" starttime="20201115 22:00:15.986" endtime="20201115 22:00:15.990"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.975" endtime="20201115 22:00:15.991"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:15.998" endtime="20201115 22:00:16.001"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:16.007" endtime="20201115 22:00:16.028"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.002" endtime="20201115 22:00:16.030"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.993" endtime="20201115 22:00:16.031"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.488" endtime="20201115 22:00:16.032"></status>
</kw>
<msg timestamp="20201115 22:00:16.032" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:16.057" endtime="20201115 22:00:16.076"></status>
</kw>
<msg timestamp="20201115 22:00:16.078" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:16.053" endtime="20201115 22:00:16.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:16.084" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:16.080" endtime="20201115 22:00:16.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:16.086" endtime="20201115 22:00:16.090"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.046" endtime="20201115 22:00:16.091"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.039" endtime="20201115 22:00:16.093"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:16.109" endtime="20201115 22:00:16.445"></status>
</kw>
<msg timestamp="20201115 22:00:16.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041874472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041887583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:16.106" endtime="20201115 22:00:16.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:16.470" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041874472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041887583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:16.454" endtime="20201115 22:00:16.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:16.472" endtime="20201115 22:00:16.476"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.099" endtime="20201115 22:00:16.477"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.094" endtime="20201115 22:00:16.479"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:16.490" level="INFO">${RESULT} = [{'time': 0.041887583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3110999999996209e-05, 'source_diff': 1.3110999999996209e-05}, {'time': 0.042095778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:16.480" endtime="20201115 22:00:16.490"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:16.522" level="INFO">${OVERHEAD} = {'diff': [1.3110999999996209e-05, 1.2805999999997153e-05, 1.2930000000001274e-05, 1.3583999999997043e-05, 1.2929999999994335e-05, 1.3430999999994309e-05, 1.2763999999998443e-05, 1.2958999999999887e-05...</msg>
<status status="PASS" starttime="20201115 22:00:16.492" endtime="20201115 22:00:16.523"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:16.534" level="INFO">NAME: 00-overhead-4-set</msg>
<status status="PASS" starttime="20201115 22:00:16.531" endtime="20201115 22:00:16.534"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:16.539" level="INFO">VALUE: [1.3110999999996209e-05, 1.2805999999997153e-05, 1.2930000000001274e-05, 1.3583999999997043e-05, 1.2929999999994335e-05, 1.3430999999994309e-05, 1.2763999999998443e-05, 1.2958999999999887e-05, 1.329099999999861e-05, 1.3125000000002718e-05, 1.3597000000004078e-05, 1.3403000000002108e-05, 1.3444000000001344e-05, 1.3096999999996639e-05, 1.3056000000004342e-05, 1.3277999999998513e-05, 1.3277999999998513e-05, 1.3097999999996113e-05, 1.3625000000003218e-05, 1.3111000000003148e-05, 1.3569999999997473e-05, 1.3431000000001247e-05, 1.2915999999994765e-05, 1.2917000000001178e-05, 1.2777999999998013e-05, 1.277699999999854e-05, 1.2931000000000747e-05, 1.2777999999998013e-05, 1.3430999999994309e-05, 1.3611000000003648e-05, 1.326299999999947e-05, 1.2902999999994669e-05, 1.3125000000002718e-05, 1.2778000000004952e-05, 1.3445000000000817e-05, 1.3458000000000914e-05, 1.3597000000004078e-05, 1.3610999999996709e-05, 1.3112000000002622e-05, 1.3249999999999373e-05, 1.3431000000001247e-05, 1.2931000000000747e-05, 1.3555999999997903e-05, 1.2943999999993905e-05, 1.3445000000000817e-05, 1.3277999999998513e-05, 1.3292000000005022e-05, 1.3445000000000817e-05, 1.3568999999998e-05, 1.3596999999997139e-05]</msg>
<status status="PASS" starttime="20201115 22:00:16.536" endtime="20201115 22:00:16.540"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.525" endtime="20201115 22:00:16.541"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:16.548" endtime="20201115 22:00:16.550"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:16.556" endtime="20201115 22:00:16.577"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.551" endtime="20201115 22:00:16.579"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.543" endtime="20201115 22:00:16.581"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.034" endtime="20201115 22:00:16.581"></status>
</kw>
<msg timestamp="20201115 22:00:16.582" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:16.604" endtime="20201115 22:00:16.624"></status>
</kw>
<msg timestamp="20201115 22:00:16.625" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:16.601" endtime="20201115 22:00:16.626"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:16.632" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:16.628" endtime="20201115 22:00:16.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:16.634" endtime="20201115 22:00:16.638"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.594" endtime="20201115 22:00:16.639"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.588" endtime="20201115 22:00:16.641"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:16.657" endtime="20201115 22:00:16.991"></status>
</kw>
<msg timestamp="20201115 22:00:16.999" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040307875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040321306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:16.654" endtime="20201115 22:00:16.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:17.017" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040307875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040321306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:17.001" endtime="20201115 22:00:17.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:17.020" endtime="20201115 22:00:17.024"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.647" endtime="20201115 22:00:17.026"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.642" endtime="20201115 22:00:17.027"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:17.037" level="INFO">${RESULT} = [{'time': 0.040321306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3431000000001247e-05, 'source_diff': 1.3431000000001247e-05}, {'time': 0.040531681, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:17.028" endtime="20201115 22:00:17.038"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:17.068" level="INFO">${OVERHEAD} = {'diff': [1.3431000000001247e-05, 1.3445000000000817e-05, 1.2778000000004952e-05, 1.2792000000004522e-05, 1.3110999999996209e-05, 1.3431000000001247e-05, 1.2958000000000414e-05, 1.2971999999999984e-05...</msg>
<status status="PASS" starttime="20201115 22:00:17.039" endtime="20201115 22:00:17.068"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:17.078" level="INFO">NAME: 00-overhead-4-set</msg>
<status status="PASS" starttime="20201115 22:00:17.076" endtime="20201115 22:00:17.079"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:17.084" level="INFO">VALUE: [1.3431000000001247e-05, 1.3445000000000817e-05, 1.2778000000004952e-05, 1.2792000000004522e-05, 1.3110999999996209e-05, 1.3431000000001247e-05, 1.2958000000000414e-05, 1.2971999999999984e-05, 1.2958999999999887e-05, 1.3444000000001344e-05, 1.3277999999998513e-05, 1.2903000000001608e-05, 1.3111000000003148e-05, 1.3292000000005022e-05, 1.3596999999997139e-05, 1.2903000000001608e-05, 1.2958999999999887e-05, 1.3277999999998513e-05, 1.3097000000003578e-05, 1.3694000000001594e-05, 1.3263999999998943e-05, 1.3431000000001247e-05, 1.2945000000000317e-05, 1.3277999999998513e-05, 1.3458000000000914e-05, 1.3639000000002788e-05, 1.3416000000002204e-05, 1.2958000000000414e-05, 1.3125000000002718e-05, 1.3624999999996279e-05, 1.3596999999997139e-05, 1.2944000000000844e-05, 1.3027999999998263e-05, 1.3111000000003148e-05, 1.3444000000001344e-05, 1.3472999999999957e-05, 1.2958000000000414e-05, 1.2958000000000414e-05, 1.3277999999998513e-05, 1.3624999999996279e-05, 1.2777999999998013e-05, 1.3638999999995849e-05, 1.277699999999854e-05, 1.3417000000001678e-05, 1.3597999999996613e-05, 1.358299999999757e-05, 1.3431000000001247e-05, 1.2763999999998443e-05, 1.3278000000005452e-05, 1.2958000000000414e-05]</msg>
<status status="PASS" starttime="20201115 22:00:17.081" endtime="20201115 22:00:17.085"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.070" endtime="20201115 22:00:17.086"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:17.093" endtime="20201115 22:00:17.095"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:17.101" endtime="20201115 22:00:17.122"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.096" endtime="20201115 22:00:17.124"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.088" endtime="20201115 22:00:17.125"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.583" endtime="20201115 22:00:17.126"></status>
</kw>
<msg timestamp="20201115 22:00:17.127" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:17.149" endtime="20201115 22:00:17.169"></status>
</kw>
<msg timestamp="20201115 22:00:17.170" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:17.146" endtime="20201115 22:00:17.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:17.176" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:17.172" endtime="20201115 22:00:17.177"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:17.179" endtime="20201115 22:00:17.182"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.139" endtime="20201115 22:00:17.184"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.133" endtime="20201115 22:00:17.185"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:17.203" endtime="20201115 22:00:17.538"></status>
</kw>
<msg timestamp="20201115 22:00:17.546" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040080542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0400935, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:00:17.200" endtime="20201115 22:00:17.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:17.565" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040080542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0400935, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:00:17.548" endtime="20201115 22:00:17.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:17.567" endtime="20201115 22:00:17.571"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.191" endtime="20201115 22:00:17.572"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.187" endtime="20201115 22:00:17.574"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:17.585" level="INFO">${RESULT} = [{'time': 0.0400935, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2958000000000414e-05, 'source_diff': 1.2958000000000414e-05}, {'time': 0.040303694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:17.576" endtime="20201115 22:00:17.585"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:17.615" level="INFO">${OVERHEAD} = {'diff': [1.2958000000000414e-05, 1.3430000000001774e-05, 1.3249999999999373e-05, 1.3264000000005882e-05, 1.3347000000003828e-05, 1.2763999999998443e-05, 1.3277999999998513e-05, 1.2888000000002564e-05...</msg>
<status status="PASS" starttime="20201115 22:00:17.587" endtime="20201115 22:00:17.615"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:17.626" level="INFO">NAME: 00-overhead-4-set</msg>
<status status="PASS" starttime="20201115 22:00:17.623" endtime="20201115 22:00:17.626"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:17.631" level="INFO">VALUE: [1.2958000000000414e-05, 1.3430000000001774e-05, 1.3249999999999373e-05, 1.3264000000005882e-05, 1.3347000000003828e-05, 1.2763999999998443e-05, 1.3277999999998513e-05, 1.2888000000002564e-05, 1.2763999999998443e-05, 1.3513999999999193e-05, 1.3583999999997043e-05, 1.3110999999996209e-05, 1.3459000000000387e-05, 1.3597000000004078e-05, 1.2792000000004522e-05, 1.3195000000000567e-05, 1.3277999999998513e-05, 1.2805999999997153e-05, 1.3277999999998513e-05, 1.3306000000004592e-05, 1.2917000000001178e-05, 1.3263999999998943e-05, 1.2958000000000414e-05, 1.3431000000001247e-05, 1.3596999999997139e-05, 1.3096999999996639e-05, 1.3139000000002288e-05, 1.2958999999999887e-05, 1.3444000000001344e-05, 1.2916000000001704e-05, 1.3597000000004078e-05, 1.3625000000003218e-05, 1.3110999999996209e-05, 1.3111000000003148e-05, 1.3110999999996209e-05, 1.3431000000001247e-05, 1.2917000000001178e-05, 1.3264000000005882e-05, 1.2777999999998013e-05, 1.3111000000003148e-05, 1.2930000000001274e-05, 1.2958000000000414e-05, 1.2985999999999553e-05, 1.3125000000002718e-05, 1.2874999999995529e-05, 1.3277999999998513e-05, 1.2763999999998443e-05, 1.2917000000001178e-05, 1.2930000000001274e-05, 1.3111000000003148e-05]</msg>
<status status="PASS" starttime="20201115 22:00:17.628" endtime="20201115 22:00:17.632"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.617" endtime="20201115 22:00:17.633"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:17.640" endtime="20201115 22:00:17.642"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:17.648" endtime="20201115 22:00:17.669"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.644" endtime="20201115 22:00:17.671"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.635" endtime="20201115 22:00:17.673"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.128" endtime="20201115 22:00:17.673"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.937" endtime="20201115 22:00:17.674"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.935" endtime="20201115 22:00:17.674"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:17.679" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:17.702" endtime="20201115 22:00:17.724"></status>
</kw>
<msg timestamp="20201115 22:00:17.725" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:17.699" endtime="20201115 22:00:17.726"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:17.732" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:17.728" endtime="20201115 22:00:17.732"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:17.734" endtime="20201115 22:00:17.738"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.691" endtime="20201115 22:00:17.740"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.686" endtime="20201115 22:00:17.741"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:17.758" endtime="20201115 22:00:18.093"></status>
</kw>
<msg timestamp="20201115 22:00:18.100" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046414722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046428403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:17.754" endtime="20201115 22:00:18.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:18.119" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046414722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046428403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:18.102" endtime="20201115 22:00:18.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:18.121" endtime="20201115 22:00:18.125"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.747" endtime="20201115 22:00:18.127"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.742" endtime="20201115 22:00:18.128"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:18.138" level="INFO">${RESULT} = [{'time': 0.046428403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3681000000001498e-05, 'source_diff': 1.3681000000001498e-05}, {'time': 0.046673847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:18.130" endtime="20201115 22:00:18.139"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:18.169" level="INFO">${OVERHEAD} = {'diff': [1.3681000000001498e-05, 1.2971999999999984e-05, 1.3291000000005548e-05, 1.3694000000001594e-05, 1.3874999999996529e-05, 1.3181000000000997e-05, 1.329099999999861e-05, 1.3847000000004328e-05,...</msg>
<status status="PASS" starttime="20201115 22:00:18.140" endtime="20201115 22:00:18.169"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:18.179" level="INFO">NAME: 00-overhead-5-set</msg>
<status status="PASS" starttime="20201115 22:00:18.177" endtime="20201115 22:00:18.180"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:18.185" level="INFO">VALUE: [1.3681000000001498e-05, 1.2971999999999984e-05, 1.3291000000005548e-05, 1.3694000000001594e-05, 1.3874999999996529e-05, 1.3181000000000997e-05, 1.329099999999861e-05, 1.3847000000004328e-05, 1.3723000000000207e-05, 1.3875000000003468e-05, 1.3514000000006132e-05, 1.3389000000002538e-05, 1.352699999999929e-05, 1.3013999999998693e-05, 1.2999999999999123e-05, 1.3195000000000567e-05, 1.3694000000001594e-05, 1.3708000000001164e-05, 1.3152999999994919e-05, 1.3041999999997833e-05, 1.3527999999998763e-05, 1.3874999999996529e-05, 1.3777999999999013e-05, 1.302699999999879e-05, 1.3847000000004328e-05, 1.3374999999996029e-05, 1.3165999999995015e-05, 1.3348000000003302e-05, 1.3347000000003828e-05, 1.3374999999996029e-05, 1.3027999999998263e-05, 1.3056000000004342e-05, 1.3860999999996959e-05, 1.3861999999996433e-05, 1.3402999999995169e-05, 1.2999999999999123e-05, 1.3069999999996973e-05, 1.3360999999996459e-05, 1.3042000000004772e-05, 1.3694999999994129e-05, 1.3861999999996433e-05, 1.3680000000002024e-05, 1.3861000000003898e-05, 1.3374999999996029e-05, 1.3847000000004328e-05, 1.3013999999998693e-05, 1.3347000000003828e-05, 1.354099999999886e-05, 1.3028000000005202e-05, 1.3208000000000664e-05]</msg>
<status status="PASS" starttime="20201115 22:00:18.182" endtime="20201115 22:00:18.186"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.170" endtime="20201115 22:00:18.187"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:18.193" endtime="20201115 22:00:18.196"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:18.202" endtime="20201115 22:00:18.223"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.197" endtime="20201115 22:00:18.225"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.189" endtime="20201115 22:00:18.227"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.680" endtime="20201115 22:00:18.227"></status>
</kw>
<msg timestamp="20201115 22:00:18.228" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:18.251" endtime="20201115 22:00:18.272"></status>
</kw>
<msg timestamp="20201115 22:00:18.273" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:18.247" endtime="20201115 22:00:18.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:18.284" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:18.280" endtime="20201115 22:00:18.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:18.287" endtime="20201115 22:00:18.290"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.240" endtime="20201115 22:00:18.292"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.234" endtime="20201115 22:00:18.293"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:18.310" endtime="20201115 22:00:18.653"></status>
</kw>
<msg timestamp="20201115 22:00:18.660" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040362681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040376569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:18.306" endtime="20201115 22:00:18.660"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:18.678" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040362681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040376569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:18.662" endtime="20201115 22:00:18.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:18.680" endtime="20201115 22:00:18.684"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.299" endtime="20201115 22:00:18.686"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.295" endtime="20201115 22:00:18.687"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:18.698" level="INFO">${RESULT} = [{'time': 0.040376569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3888000000003564e-05, 'source_diff': 1.3888000000003564e-05}, {'time': 0.040626056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:18.689" endtime="20201115 22:00:18.698"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:18.730" level="INFO">${OVERHEAD} = {'diff': [1.3888000000003564e-05, 1.3527999999998763e-05, 1.3860999999996959e-05, 1.3513999999999193e-05, 1.3013999999998693e-05, 1.3360999999996459e-05, 1.3514000000006132e-05, 1.3361000000003398e-05...</msg>
<status status="PASS" starttime="20201115 22:00:18.700" endtime="20201115 22:00:18.731"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:18.741" level="INFO">NAME: 00-overhead-5-set</msg>
<status status="PASS" starttime="20201115 22:00:18.739" endtime="20201115 22:00:18.742"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:18.747" level="INFO">VALUE: [1.3888000000003564e-05, 1.3527999999998763e-05, 1.3860999999996959e-05, 1.3513999999999193e-05, 1.3013999999998693e-05, 1.3360999999996459e-05, 1.3514000000006132e-05, 1.3361000000003398e-05, 1.3209000000000137e-05, 1.3874999999996529e-05, 1.352699999999929e-05, 1.3027999999998263e-05, 1.3193999999994155e-05, 1.3860999999996959e-05, 1.2958000000000414e-05, 1.3861000000003898e-05, 1.3695000000001067e-05, 1.3819999999997723e-05, 1.3639000000002788e-05, 1.3722000000000734e-05, 1.3179999999994585e-05, 1.3389000000002538e-05, 1.3013999999998693e-05, 1.3195000000000567e-05, 1.2999999999999123e-05, 1.3528000000005702e-05, 1.3179999999994585e-05, 1.3429999999994835e-05, 1.3694999999994129e-05, 1.3805999999998153e-05, 1.3694000000001594e-05, 1.3195000000000567e-05, 1.3194000000001094e-05, 1.308299999999707e-05, 1.3194000000001094e-05, 1.3861999999996433e-05, 1.3860999999996959e-05, 1.3541999999998333e-05, 1.3847000000004328e-05, 1.3235999999999803e-05, 1.3374999999996029e-05, 1.302699999999879e-05, 1.3181000000000997e-05, 1.3208000000000664e-05, 1.3708000000001164e-05, 1.3555999999997903e-05, 1.3346999999996889e-05, 1.3346999999996889e-05, 1.3874999999996529e-05, 1.3195000000000567e-05]</msg>
<status status="PASS" starttime="20201115 22:00:18.744" endtime="20201115 22:00:18.748"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.732" endtime="20201115 22:00:18.749"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:18.756" endtime="20201115 22:00:18.758"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:18.764" endtime="20201115 22:00:18.785"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.759" endtime="20201115 22:00:18.787"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.751" endtime="20201115 22:00:18.789"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.229" endtime="20201115 22:00:18.789"></status>
</kw>
<msg timestamp="20201115 22:00:18.790" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:18.813" endtime="20201115 22:00:18.835"></status>
</kw>
<msg timestamp="20201115 22:00:18.836" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:18.810" endtime="20201115 22:00:18.836"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:18.842" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:18.838" endtime="20201115 22:00:18.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:18.844" endtime="20201115 22:00:18.848"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.803" endtime="20201115 22:00:18.849"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.796" endtime="20201115 22:00:18.851"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:18.867" endtime="20201115 22:00:19.202"></status>
</kw>
<msg timestamp="20201115 22:00:19.209" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0410705, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041083583, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:00:18.864" endtime="20201115 22:00:19.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:19.227" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0410705, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041083583, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:00:19.211" endtime="20201115 22:00:19.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:19.229" endtime="20201115 22:00:19.233"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.857" endtime="20201115 22:00:19.235"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.852" endtime="20201115 22:00:19.236"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:19.247" level="INFO">${RESULT} = [{'time': 0.041083583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.308299999999707e-05, 'source_diff': 1.308299999999707e-05}, {'time': 0.041327806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:19.238" endtime="20201115 22:00:19.247"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:19.278" level="INFO">${OVERHEAD} = {'diff': [1.308299999999707e-05, 1.3195000000000567e-05, 1.3472000000000484e-05, 1.3861000000003898e-05, 1.3694000000001594e-05, 1.3028000000005202e-05, 1.3528000000005702e-05, 1.3527999999998763e-05,...</msg>
<status status="PASS" starttime="20201115 22:00:19.249" endtime="20201115 22:00:19.279"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:19.289" level="INFO">NAME: 00-overhead-5-set</msg>
<status status="PASS" starttime="20201115 22:00:19.287" endtime="20201115 22:00:19.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:19.294" level="INFO">VALUE: [1.308299999999707e-05, 1.3195000000000567e-05, 1.3472000000000484e-05, 1.3861000000003898e-05, 1.3694000000001594e-05, 1.3028000000005202e-05, 1.3528000000005702e-05, 1.3527999999998763e-05, 1.3195000000000567e-05, 1.3361000000003398e-05, 1.3180000000001524e-05, 1.2971999999999984e-05, 1.352699999999929e-05, 1.383299999999782e-05, 1.3847999999996863e-05, 1.3915999999995765e-05, 1.3361000000003398e-05, 1.3694000000001594e-05, 1.3027999999998263e-05, 1.3181000000000997e-05, 1.3694000000001594e-05, 1.3041999999997833e-05, 1.3209000000000137e-05, 1.379099999999911e-05, 1.304099999999836e-05, 1.3194000000001094e-05, 1.3361000000003398e-05, 1.3389000000002538e-05, 1.3861000000003898e-05, 1.3861999999996433e-05, 1.3681000000001498e-05, 1.3513999999999193e-05, 1.3875000000003468e-05, 1.3681000000001498e-05, 1.3346999999996889e-05, 1.3695000000001067e-05, 1.3639000000002788e-05, 1.3181000000000997e-05, 1.3348000000003302e-05, 1.3625000000003218e-05, 1.3568999999998e-05, 1.3695000000001067e-05, 1.352699999999929e-05, 1.3041999999997833e-05, 1.3125000000002718e-05, 1.301299999999922e-05, 1.3013999999998693e-05, 1.3874999999996529e-05, 1.3707999999994225e-05, 1.3028000000005202e-05]</msg>
<status status="PASS" starttime="20201115 22:00:19.291" endtime="20201115 22:00:19.295"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.280" endtime="20201115 22:00:19.297"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:19.303" endtime="20201115 22:00:19.306"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:19.311" endtime="20201115 22:00:19.334"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.307" endtime="20201115 22:00:19.335"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.299" endtime="20201115 22:00:19.337"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.791" endtime="20201115 22:00:19.338"></status>
</kw>
<msg timestamp="20201115 22:00:19.338" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:19.361" endtime="20201115 22:00:19.383"></status>
</kw>
<msg timestamp="20201115 22:00:19.384" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:19.358" endtime="20201115 22:00:19.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:19.390" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:19.386" endtime="20201115 22:00:19.391"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:19.392" endtime="20201115 22:00:19.396"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.351" endtime="20201115 22:00:19.398"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.345" endtime="20201115 22:00:19.399"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:19.415" endtime="20201115 22:00:19.750"></status>
</kw>
<msg timestamp="20201115 22:00:19.757" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040761778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040775639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:19.412" endtime="20201115 22:00:19.758"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:19.776" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040761778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040775639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:19.760" endtime="20201115 22:00:19.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:19.778" endtime="20201115 22:00:19.782"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.405" endtime="20201115 22:00:19.783"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.400" endtime="20201115 22:00:19.785"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:19.795" level="INFO">${RESULT} = [{'time': 0.040775639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3861000000003898e-05, 'source_diff': 1.3861000000003898e-05}, {'time': 0.041020125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:19.786" endtime="20201115 22:00:19.796"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:19.827" level="INFO">${OVERHEAD} = {'diff': [1.3861000000003898e-05, 1.3193999999994155e-05, 1.3695000000001067e-05, 1.3695000000001067e-05, 1.3389000000002538e-05, 1.3208000000000664e-05, 1.3208000000000664e-05, 1.3861000000003898e-05...</msg>
<status status="PASS" starttime="20201115 22:00:19.797" endtime="20201115 22:00:19.827"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:19.838" level="INFO">NAME: 00-overhead-5-set</msg>
<status status="PASS" starttime="20201115 22:00:19.836" endtime="20201115 22:00:19.839"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:19.843" level="INFO">VALUE: [1.3861000000003898e-05, 1.3193999999994155e-05, 1.3695000000001067e-05, 1.3695000000001067e-05, 1.3389000000002538e-05, 1.3208000000000664e-05, 1.3208000000000664e-05, 1.3861000000003898e-05, 1.3694000000001594e-05, 1.3000000000006062e-05, 1.3209000000000137e-05, 1.3708000000001164e-05, 1.3084000000003482e-05, 1.3041999999997833e-05, 1.3861000000003898e-05, 1.3041999999997833e-05, 1.3708000000001164e-05, 1.3708000000001164e-05, 1.3709000000000637e-05, 1.3875000000003468e-05, 1.3194000000001094e-05, 1.3167000000001428e-05, 1.3791999999998583e-05, 1.352699999999929e-05, 1.3179999999994585e-05, 1.384699999999739e-05, 1.381899999999825e-05, 1.354099999999886e-05, 1.3361999999995933e-05, 1.3708000000001164e-05, 1.3027999999998263e-05, 1.3679999999995085e-05, 1.3027999999998263e-05, 1.3860999999996959e-05, 1.354099999999886e-05, 1.3347000000003828e-05, 1.3013999999998693e-05, 1.3180000000001524e-05, 1.355499999999843e-05, 1.3861000000003898e-05, 1.3527999999998763e-05, 1.3360999999996459e-05, 1.3181000000000997e-05, 1.3875000000003468e-05, 1.3861999999996433e-05, 1.3375000000002968e-05, 1.3527999999998763e-05, 1.3208000000000664e-05, 1.3860999999996959e-05, 1.3181000000000997e-05]</msg>
<status status="PASS" starttime="20201115 22:00:19.840" endtime="20201115 22:00:19.845"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.829" endtime="20201115 22:00:19.846"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:19.853" endtime="20201115 22:00:19.855"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:19.861" endtime="20201115 22:00:19.882"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.857" endtime="20201115 22:00:19.884"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.848" endtime="20201115 22:00:19.886"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.339" endtime="20201115 22:00:19.886"></status>
</kw>
<msg timestamp="20201115 22:00:19.887" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:19.909" endtime="20201115 22:00:19.931"></status>
</kw>
<msg timestamp="20201115 22:00:19.932" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:19.906" endtime="20201115 22:00:19.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:19.938" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:19.934" endtime="20201115 22:00:19.939"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:19.940" endtime="20201115 22:00:19.944"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.899" endtime="20201115 22:00:19.946"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.893" endtime="20201115 22:00:19.947"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:19.963" endtime="20201115 22:00:20.297"></status>
</kw>
<msg timestamp="20201115 22:00:20.304" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039965639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039979333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:19.960" endtime="20201115 22:00:20.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:20.323" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039965639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039979333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:20.307" endtime="20201115 22:00:20.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:20.325" endtime="20201115 22:00:20.329"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.953" endtime="20201115 22:00:20.330"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.948" endtime="20201115 22:00:20.332"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:20.342" level="INFO">${RESULT} = [{'time': 0.039979333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3694000000001594e-05, 'source_diff': 1.3694000000001594e-05}, {'time': 0.040227667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:20.333" endtime="20201115 22:00:20.343"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:20.374" level="INFO">${OVERHEAD} = {'diff': [1.3694000000001594e-05, 1.3348000000003302e-05, 1.3694000000001594e-05, 1.3888000000003564e-05, 1.3667000000001928e-05, 1.333299999999732e-05, 1.3527999999998763e-05, 1.3360999999996459e-05,...</msg>
<status status="PASS" starttime="20201115 22:00:20.344" endtime="20201115 22:00:20.374"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:20.385" level="INFO">NAME: 00-overhead-5-set</msg>
<status status="PASS" starttime="20201115 22:00:20.382" endtime="20201115 22:00:20.385"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:20.390" level="INFO">VALUE: [1.3694000000001594e-05, 1.3348000000003302e-05, 1.3694000000001594e-05, 1.3888000000003564e-05, 1.3667000000001928e-05, 1.333299999999732e-05, 1.3527999999998763e-05, 1.3360999999996459e-05, 1.3861000000003898e-05, 1.3708000000001164e-05, 1.352699999999929e-05, 1.3834000000004232e-05, 1.3167000000001428e-05, 1.3194000000001094e-05, 1.304099999999836e-05, 1.3013999999998693e-05, 1.384699999999739e-05, 1.3042000000004772e-05, 1.3180000000001524e-05, 1.3194000000001094e-05, 1.3167000000001428e-05, 1.3694000000001594e-05, 1.384699999999739e-05, 1.3195000000000567e-05, 1.3333000000004258e-05, 1.3013999999998693e-05, 1.3180000000001524e-05, 1.3805999999998153e-05, 1.3041999999997833e-05, 1.3680999999994559e-05, 1.3860999999996959e-05, 1.3346999999996889e-05, 1.3709000000000637e-05, 1.3527999999998763e-05, 1.3181000000000997e-05, 1.3374999999996029e-05, 1.3153000000001858e-05, 1.3361000000003398e-05, 1.3195000000000567e-05, 1.3681000000001498e-05, 1.3874999999996529e-05, 1.3139000000002288e-05, 1.3055000000004868e-05, 1.3695000000001067e-05, 1.3027999999998263e-05, 1.3694999999994129e-05, 1.3667000000001928e-05, 1.3013999999998693e-05, 1.3874999999996529e-05, 1.3360999999996459e-05]</msg>
<status status="PASS" starttime="20201115 22:00:20.387" endtime="20201115 22:00:20.391"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.376" endtime="20201115 22:00:20.393"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:20.399" endtime="20201115 22:00:20.402"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:20.407" endtime="20201115 22:00:20.429"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.403" endtime="20201115 22:00:20.431"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.395" endtime="20201115 22:00:20.432"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.888" endtime="20201115 22:00:20.433"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.677" endtime="20201115 22:00:20.434"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.675" endtime="20201115 22:00:20.434"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:20.439" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:20.462" endtime="20201115 22:00:20.485"></status>
</kw>
<msg timestamp="20201115 22:00:20.486" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:20.458" endtime="20201115 22:00:20.487"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:20.492" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:20.489" endtime="20201115 22:00:20.493"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:20.495" endtime="20201115 22:00:20.498"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.451" endtime="20201115 22:00:20.500"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.446" endtime="20201115 22:00:20.501"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:20.518" endtime="20201115 22:00:20.852"></status>
</kw>
<msg timestamp="20201115 22:00:20.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045974528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045988625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:20.514" endtime="20201115 22:00:20.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:20.877" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045974528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045988625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:20.861" endtime="20201115 22:00:20.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:20.879" endtime="20201115 22:00:20.883"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.507" endtime="20201115 22:00:20.885"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.503" endtime="20201115 22:00:20.886"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:20.896" level="INFO">${RESULT} = [{'time': 0.045988625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.409699999999764e-05, 'source_diff': 1.409699999999764e-05}, {'time': 0.046272903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:20.888" endtime="20201115 22:00:20.897"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:20.929" level="INFO">${OVERHEAD} = {'diff': [1.409699999999764e-05, 1.3610999999996709e-05, 1.3277999999998513e-05, 1.3777999999999013e-05, 1.4110999999997209e-05, 1.3486000000000054e-05, 1.3445000000000817e-05, 1.3917000000002178e-05,...</msg>
<status status="PASS" starttime="20201115 22:00:20.899" endtime="20201115 22:00:20.930"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:20.940" level="INFO">NAME: 00-overhead-6-set</msg>
<status status="PASS" starttime="20201115 22:00:20.938" endtime="20201115 22:00:20.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:20.946" level="INFO">VALUE: [1.409699999999764e-05, 1.3610999999996709e-05, 1.3277999999998513e-05, 1.3777999999999013e-05, 1.4110999999997209e-05, 1.3486000000000054e-05, 1.3445000000000817e-05, 1.3917000000002178e-05, 1.3958000000001414e-05, 1.4055999999998403e-05, 1.3791999999998583e-05, 1.3931000000001748e-05, 1.3429999999994835e-05, 1.3944000000001844e-05, 1.3805999999998153e-05, 1.4056000000005342e-05, 1.3611000000003648e-05, 1.3791999999998583e-05, 1.3263999999998943e-05, 1.3791999999998583e-05, 1.377699999999954e-05, 1.3611999999996183e-05, 1.4111000000004148e-05, 1.3430000000001774e-05, 1.3805999999998153e-05, 1.376299999999997e-05, 1.3624999999996279e-05, 1.3458000000000914e-05, 1.3472000000000484e-05, 1.326299999999947e-05, 1.3945000000001317e-05, 1.3763999999999443e-05, 1.4124999999996779e-05, 1.3957999999994475e-05, 1.4110999999997209e-05, 1.3277999999998513e-05, 1.3944000000001844e-05, 1.3431000000001247e-05, 1.3597999999996613e-05, 1.3625000000003218e-05, 1.327699999999904e-05, 1.4138999999996349e-05, 1.3596999999997139e-05, 1.3430000000001774e-05, 1.4111000000004148e-05, 1.3596999999997139e-05, 1.3610999999996709e-05, 1.3611000000003648e-05, 1.4112000000003622e-05, 1.3901999999996195e-05]</msg>
<status status="PASS" starttime="20201115 22:00:20.942" endtime="20201115 22:00:20.947"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.931" endtime="20201115 22:00:20.949"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:20.955" endtime="20201115 22:00:20.958"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:20.963" endtime="20201115 22:00:20.985"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.959" endtime="20201115 22:00:20.987"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.951" endtime="20201115 22:00:20.988"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.440" endtime="20201115 22:00:20.989"></status>
</kw>
<msg timestamp="20201115 22:00:20.989" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:21.012" endtime="20201115 22:00:21.035"></status>
</kw>
<msg timestamp="20201115 22:00:21.037" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:21.009" endtime="20201115 22:00:21.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:21.043" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:21.039" endtime="20201115 22:00:21.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:21.045" endtime="20201115 22:00:21.049"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.002" endtime="20201115 22:00:21.050"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.996" endtime="20201115 22:00:21.052"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:21.068" endtime="20201115 22:00:21.404"></status>
</kw>
<msg timestamp="20201115 22:00:21.411" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040554653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04056825, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:00:21.065" endtime="20201115 22:00:21.411"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:21.429" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040554653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04056825, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:00:21.413" endtime="20201115 22:00:21.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:21.431" endtime="20201115 22:00:21.435"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.058" endtime="20201115 22:00:21.436"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.053" endtime="20201115 22:00:21.438"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:21.448" level="INFO">${RESULT} = [{'time': 0.04056825, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3596999999997139e-05, 'source_diff': 1.3596999999997139e-05}, {'time': 0.040849722, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 22:00:21.439" endtime="20201115 22:00:21.449"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:21.479" level="INFO">${OVERHEAD} = {'diff': [1.3596999999997139e-05, 1.329099999999861e-05, 1.4110999999997209e-05, 1.379099999999911e-05, 1.3443999999994405e-05, 1.4111000000004148e-05, 1.329099999999861e-05, 1.3763999999999443e-05, 1...</msg>
<status status="PASS" starttime="20201115 22:00:21.450" endtime="20201115 22:00:21.480"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:21.492" level="INFO">NAME: 00-overhead-6-set</msg>
<status status="PASS" starttime="20201115 22:00:21.489" endtime="20201115 22:00:21.493"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:21.497" level="INFO">VALUE: [1.3596999999997139e-05, 1.329099999999861e-05, 1.4110999999997209e-05, 1.379099999999911e-05, 1.3443999999994405e-05, 1.4111000000004148e-05, 1.329099999999861e-05, 1.3763999999999443e-05, 1.3625000000003218e-05, 1.3291999999998083e-05, 1.3278000000005452e-05, 1.3291999999998083e-05, 1.3972000000000984e-05, 1.377699999999954e-05, 1.3778000000005952e-05, 1.4110999999997209e-05, 1.379099999999911e-05, 1.377699999999954e-05, 1.4125000000003718e-05, 1.384699999999739e-05, 1.3889000000003038e-05, 1.3263999999998943e-05, 1.3931000000001748e-05, 1.3277999999998513e-05, 1.3693999999994655e-05, 1.405499999999893e-05, 1.3944000000001844e-05, 1.4110999999997209e-05, 1.4111000000004148e-05, 1.3943999999994905e-05, 1.3319999999997223e-05, 1.3445000000000817e-05, 1.3596999999997139e-05, 1.3777999999999013e-05, 1.3639000000002788e-05, 1.3959000000000887e-05, 1.327699999999904e-05, 1.381899999999825e-05, 1.3944000000001844e-05, 1.3596999999997139e-05, 1.4181000000001998e-05, 1.3959000000000887e-05, 1.405499999999893e-05, 1.3610999999996709e-05, 1.3709000000000637e-05, 1.3805999999998153e-05, 1.3777999999999013e-05, 1.3472000000000484e-05, 1.3263999999998943e-05, 1.379099999999911e-05]</msg>
<status status="PASS" starttime="20201115 22:00:21.494" endtime="20201115 22:00:21.498"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.482" endtime="20201115 22:00:21.500"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:21.506" endtime="20201115 22:00:21.509"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:21.514" endtime="20201115 22:00:21.536"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.510" endtime="20201115 22:00:21.538"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.502" endtime="20201115 22:00:21.539"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.990" endtime="20201115 22:00:21.540"></status>
</kw>
<msg timestamp="20201115 22:00:21.540" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:21.563" endtime="20201115 22:00:21.587"></status>
</kw>
<msg timestamp="20201115 22:00:21.588" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:21.560" endtime="20201115 22:00:21.589"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:21.595" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:21.591" endtime="20201115 22:00:21.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:21.597" endtime="20201115 22:00:21.601"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.552" endtime="20201115 22:00:21.602"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.547" endtime="20201115 22:00:21.604"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:21.620" endtime="20201115 22:00:21.955"></status>
</kw>
<msg timestamp="20201115 22:00:21.961" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040978278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040992375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:21.617" endtime="20201115 22:00:21.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:21.979" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040978278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040992375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:21.964" endtime="20201115 22:00:21.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:21.982" endtime="20201115 22:00:21.986"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.610" endtime="20201115 22:00:21.987"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.605" endtime="20201115 22:00:21.989"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:21.999" level="INFO">${RESULT} = [{'time': 0.040992375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.409699999999764e-05, 'source_diff': 1.409699999999764e-05}, {'time': 0.041275694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:21.990" endtime="20201115 22:00:22.001"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:22.031" level="INFO">${OVERHEAD} = {'diff': [1.409699999999764e-05, 1.377699999999954e-05, 1.3291999999998083e-05, 1.3763999999999443e-05, 1.3445000000000817e-05, 1.3263999999998943e-05, 1.326299999999947e-05, 1.3930000000002274e-05, 1...</msg>
<status status="PASS" starttime="20201115 22:00:22.002" endtime="20201115 22:00:22.031"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:22.042" level="INFO">NAME: 00-overhead-6-set</msg>
<status status="PASS" starttime="20201115 22:00:22.039" endtime="20201115 22:00:22.042"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:22.047" level="INFO">VALUE: [1.409699999999764e-05, 1.377699999999954e-05, 1.3291999999998083e-05, 1.3763999999999443e-05, 1.3445000000000817e-05, 1.3263999999998943e-05, 1.326299999999947e-05, 1.3930000000002274e-05, 1.3459000000000387e-05, 1.377699999999954e-05, 1.3430000000001774e-05, 1.3431000000001247e-05, 1.3986000000000554e-05, 1.327699999999904e-05, 1.3777999999999013e-05, 1.4125000000003718e-05, 1.3763999999999443e-05, 1.329099999999861e-05, 1.3610999999996709e-05, 1.3444000000001344e-05, 1.3915999999995765e-05, 1.4125000000003718e-05, 1.3292000000005022e-05, 1.4111000000004148e-05, 1.3888999999996099e-05, 1.3443999999994405e-05, 1.4125000000003718e-05, 1.4110999999997209e-05, 1.3736000000000304e-05, 1.4124999999996779e-05, 1.3443999999994405e-05, 1.3944000000001844e-05, 1.3277999999998513e-05, 1.3445000000000817e-05, 1.3777999999999013e-05, 1.3957999999994475e-05, 1.3458000000000914e-05, 1.3499999999999623e-05, 1.4138999999996349e-05, 1.4110999999997209e-05, 1.3624999999996279e-05, 1.3306000000004592e-05, 1.3708000000001164e-05, 1.3263999999998943e-05, 1.379099999999911e-05, 1.3277999999998513e-05, 1.3444000000001344e-05, 1.376299999999997e-05, 1.3625000000003218e-05, 1.3791999999998583e-05]</msg>
<status status="PASS" starttime="20201115 22:00:22.044" endtime="20201115 22:00:22.049"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.033" endtime="20201115 22:00:22.051"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:22.057" endtime="20201115 22:00:22.060"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:22.065" endtime="20201115 22:00:22.087"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.061" endtime="20201115 22:00:22.089"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.052" endtime="20201115 22:00:22.090"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.541" endtime="20201115 22:00:22.091"></status>
</kw>
<msg timestamp="20201115 22:00:22.091" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:22.114" endtime="20201115 22:00:22.137"></status>
</kw>
<msg timestamp="20201115 22:00:22.138" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:22.110" endtime="20201115 22:00:22.139"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:22.144" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:22.140" endtime="20201115 22:00:22.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:22.147" endtime="20201115 22:00:22.150"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.103" endtime="20201115 22:00:22.152"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.098" endtime="20201115 22:00:22.154"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:22.170" endtime="20201115 22:00:22.504"></status>
</kw>
<msg timestamp="20201115 22:00:22.511" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040250264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040263708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:22.166" endtime="20201115 22:00:22.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:22.529" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040250264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040263708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:22.513" endtime="20201115 22:00:22.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:22.532" endtime="20201115 22:00:22.536"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.159" endtime="20201115 22:00:22.537"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.155" endtime="20201115 22:00:22.539"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:22.549" level="INFO">${RESULT} = [{'time': 0.040263708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3444000000001344e-05, 'source_diff': 1.3444000000001344e-05}, {'time': 0.040548181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:22.540" endtime="20201115 22:00:22.550"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:22.580" level="INFO">${OVERHEAD} = {'diff': [1.3444000000001344e-05, 1.3445000000000817e-05, 1.3277999999998513e-05, 1.3415999999995265e-05, 1.4110999999997209e-05, 1.3958000000001414e-05, 1.381899999999825e-05, 1.3292000000005022e-05,...</msg>
<status status="PASS" starttime="20201115 22:00:22.551" endtime="20201115 22:00:22.580"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:22.591" level="INFO">NAME: 00-overhead-6-set</msg>
<status status="PASS" starttime="20201115 22:00:22.588" endtime="20201115 22:00:22.591"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:22.596" level="INFO">VALUE: [1.3444000000001344e-05, 1.3445000000000817e-05, 1.3277999999998513e-05, 1.3415999999995265e-05, 1.4110999999997209e-05, 1.3958000000001414e-05, 1.381899999999825e-05, 1.3292000000005022e-05, 1.3597000000004078e-05, 1.3263999999998943e-05, 1.3777999999999013e-05, 1.3458000000000914e-05, 1.329099999999861e-05, 1.3958000000001414e-05, 1.4110999999997209e-05, 1.3444000000001344e-05, 1.3777999999999013e-05, 1.3278000000005452e-05, 1.3445000000000817e-05, 1.3638999999995849e-05, 1.3901999999996195e-05, 1.3249999999999373e-05, 1.329099999999861e-05, 1.3263999999998943e-05, 1.4111000000004148e-05, 1.4097000000004578e-05, 1.4110999999997209e-05, 1.3777999999999013e-05, 1.4110999999997209e-05, 1.3763999999999443e-05, 1.3945000000001317e-05, 1.3958000000001414e-05, 1.3513999999999193e-05, 1.3431000000001247e-05, 1.4097000000004578e-05, 1.4110999999997209e-05, 1.3624999999996279e-05, 1.3945000000001317e-05, 1.3458000000000914e-05, 1.3277999999998513e-05, 1.3291999999998083e-05, 1.3625000000003218e-05, 1.3277999999998513e-05, 1.3778000000005952e-05, 1.4098000000004052e-05, 1.3945000000001317e-05, 1.3458000000000914e-05, 1.4110999999997209e-05, 1.4110999999997209e-05, 1.3694000000001594e-05]</msg>
<status status="PASS" starttime="20201115 22:00:22.593" endtime="20201115 22:00:22.597"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.581" endtime="20201115 22:00:22.599"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:22.606" endtime="20201115 22:00:22.610"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:22.616" endtime="20201115 22:00:22.638"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.611" endtime="20201115 22:00:22.640"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.601" endtime="20201115 22:00:22.641"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.092" endtime="20201115 22:00:22.642"></status>
</kw>
<msg timestamp="20201115 22:00:22.642" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:22.665" endtime="20201115 22:00:22.688"></status>
</kw>
<msg timestamp="20201115 22:00:22.690" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:22.662" endtime="20201115 22:00:22.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:22.696" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:22.692" endtime="20201115 22:00:22.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:22.698" endtime="20201115 22:00:22.702"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.655" endtime="20201115 22:00:22.703"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.649" endtime="20201115 22:00:22.705"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:22.721" endtime="20201115 22:00:23.055"></status>
</kw>
<msg timestamp="20201115 22:00:23.062" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040637097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040650403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:22.718" endtime="20201115 22:00:23.063"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:23.081" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040637097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040650403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:23.065" endtime="20201115 22:00:23.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:23.083" endtime="20201115 22:00:23.087"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.711" endtime="20201115 22:00:23.089"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.706" endtime="20201115 22:00:23.090"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:23.100" level="INFO">${RESULT} = [{'time': 0.040650403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3306000000004592e-05, 'source_diff': 1.3306000000004592e-05}, {'time': 0.040936014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:23.092" endtime="20201115 22:00:23.101"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:23.131" level="INFO">${OVERHEAD} = {'diff': [1.3306000000004592e-05, 1.3610999999996709e-05, 1.3638000000003314e-05, 1.3791999999998583e-05, 1.3263999999998943e-05, 1.4125000000003718e-05, 1.3472000000000484e-05, 1.3263999999998943e-05...</msg>
<status status="PASS" starttime="20201115 22:00:23.102" endtime="20201115 22:00:23.131"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:23.142" level="INFO">NAME: 00-overhead-6-set</msg>
<status status="PASS" starttime="20201115 22:00:23.139" endtime="20201115 22:00:23.142"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:23.147" level="INFO">VALUE: [1.3306000000004592e-05, 1.3610999999996709e-05, 1.3638000000003314e-05, 1.3791999999998583e-05, 1.3263999999998943e-05, 1.4125000000003718e-05, 1.3472000000000484e-05, 1.3263999999998943e-05, 1.3277999999998513e-05, 1.4097000000004578e-05, 1.3653000000002358e-05, 1.3778000000005952e-05, 1.3930000000002274e-05, 1.3610999999996709e-05, 1.3791999999998583e-05, 1.3986000000000554e-05, 1.3277999999998513e-05, 1.3277999999998513e-05, 1.377699999999954e-05, 1.3597000000004078e-05, 1.3458000000000914e-05, 1.4110999999997209e-05, 1.3277999999998513e-05, 1.3486000000000054e-05, 1.3944000000001844e-05, 1.3597000000004078e-05, 1.3763999999999443e-05, 1.3292000000005022e-05, 1.3388000000003064e-05, 1.3597000000004078e-05, 1.3598000000003552e-05, 1.3611000000003648e-05, 1.4124999999996779e-05, 1.4124999999996779e-05, 1.376299999999997e-05, 1.4110999999997209e-05, 1.379099999999911e-05, 1.3931000000001748e-05, 1.3959000000000887e-05, 1.3278000000005452e-05, 1.3777999999999013e-05, 1.3930000000002274e-05, 1.3249999999999373e-05, 1.3389000000002538e-05, 1.3791999999998583e-05, 1.3610999999996709e-05, 1.3943999999994905e-05, 1.4125000000003718e-05, 1.327699999999904e-05, 1.3791999999998583e-05]</msg>
<status status="PASS" starttime="20201115 22:00:23.144" endtime="20201115 22:00:23.148"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.133" endtime="20201115 22:00:23.149"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:23.156" endtime="20201115 22:00:23.158"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:23.164" endtime="20201115 22:00:23.189"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.160" endtime="20201115 22:00:23.191"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.151" endtime="20201115 22:00:23.192"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.643" endtime="20201115 22:00:23.193"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.436" endtime="20201115 22:00:23.193"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.435" endtime="20201115 22:00:23.194"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:23.198" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:23.221" endtime="20201115 22:00:23.246"></status>
</kw>
<msg timestamp="20201115 22:00:23.247" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:23.218" endtime="20201115 22:00:23.248"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:23.254" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:23.250" endtime="20201115 22:00:23.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:23.256" endtime="20201115 22:00:23.259"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.211" endtime="20201115 22:00:23.261"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.205" endtime="20201115 22:00:23.263"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:23.280" endtime="20201115 22:00:23.614"></status>
</kw>
<msg timestamp="20201115 22:00:23.621" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045556167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045570569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:23.276" endtime="20201115 22:00:23.621"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:23.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045556167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045570569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:23.623" endtime="20201115 22:00:23.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:23.642" endtime="20201115 22:00:23.646"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.269" endtime="20201115 22:00:23.647"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.265" endtime="20201115 22:00:23.649"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:23.660" level="INFO">${RESULT} = [{'time': 0.045570569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4401999999996695e-05, 'source_diff': 1.4401999999996695e-05}, {'time': 0.045894028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:23.650" endtime="20201115 22:00:23.660"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:23.690" level="INFO">${OVERHEAD} = {'diff': [1.4401999999996695e-05, 1.3681000000001498e-05, 1.4181000000001998e-05, 1.3694000000001594e-05, 1.4360999999997459e-05, 1.4250000000000373e-05, 1.4388999999996599e-05, 1.3541999999998333e-05...</msg>
<status status="PASS" starttime="20201115 22:00:23.662" endtime="20201115 22:00:23.691"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:23.701" level="INFO">NAME: 00-overhead-7-set</msg>
<status status="PASS" starttime="20201115 22:00:23.699" endtime="20201115 22:00:23.702"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:23.707" level="INFO">VALUE: [1.4401999999996695e-05, 1.3681000000001498e-05, 1.4181000000001998e-05, 1.3694000000001594e-05, 1.4360999999997459e-05, 1.4250000000000373e-05, 1.4388999999996599e-05, 1.3541999999998333e-05, 1.4000000000000123e-05, 1.3901999999996195e-05, 1.4374999999997029e-05, 1.4194000000002094e-05, 1.4375000000003968e-05, 1.4374999999997029e-05, 1.3847000000004328e-05, 1.4360999999997459e-05, 1.4167000000002428e-05, 1.4194000000002094e-05, 1.3528000000005702e-05, 1.4195000000001567e-05, 1.3861000000003898e-05, 1.4027999999999263e-05, 1.3680000000002024e-05, 1.3860999999996959e-05, 1.402699999999979e-05, 1.383299999999782e-05, 1.3709000000000637e-05, 1.3861000000003898e-05, 1.3860999999996959e-05, 1.3679999999995085e-05, 1.3679999999995085e-05, 1.4055999999998403e-05, 1.3541999999998333e-05, 1.3695000000001067e-05, 1.404099999999936e-05, 1.4360999999997459e-05, 1.3722000000000734e-05, 1.431899999999875e-05, 1.3708000000001164e-05, 1.3680000000002024e-05, 1.384699999999739e-05, 1.4027999999999263e-05, 1.4041999999998833e-05, 1.3805999999998153e-05, 1.3527999999998763e-05, 1.402699999999979e-05, 1.4027999999999263e-05, 1.4027999999999263e-05, 1.3903000000002608e-05, 1.3695000000001067e-05]</msg>
<status status="PASS" starttime="20201115 22:00:23.704" endtime="20201115 22:00:23.708"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.692" endtime="20201115 22:00:23.709"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:23.715" endtime="20201115 22:00:23.718"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:23.725" endtime="20201115 22:00:23.747"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.719" endtime="20201115 22:00:23.748"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.711" endtime="20201115 22:00:23.750"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.200" endtime="20201115 22:00:23.750"></status>
</kw>
<msg timestamp="20201115 22:00:23.751" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:23.774" endtime="20201115 22:00:23.799"></status>
</kw>
<msg timestamp="20201115 22:00:23.800" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:23.770" endtime="20201115 22:00:23.800"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:23.807" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:23.802" endtime="20201115 22:00:23.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:23.810" endtime="20201115 22:00:23.813"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.763" endtime="20201115 22:00:23.815"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.758" endtime="20201115 22:00:23.816"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:23.832" endtime="20201115 22:00:24.167"></status>
</kw>
<msg timestamp="20201115 22:00:24.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040284639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040298347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:23.829" endtime="20201115 22:00:24.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:24.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040284639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040298347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:24.176" endtime="20201115 22:00:24.192"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:24.194" endtime="20201115 22:00:24.198"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.822" endtime="20201115 22:00:24.199"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.818" endtime="20201115 22:00:24.201"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:24.211" level="INFO">${RESULT} = [{'time': 0.040298347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3708000000001164e-05, 'source_diff': 1.3708000000001164e-05}, {'time': 0.040621847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:24.202" endtime="20201115 22:00:24.212"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:24.241" level="INFO">${OVERHEAD} = {'diff': [1.3708000000001164e-05, 1.3666000000002454e-05, 1.4402000000003634e-05, 1.4027999999999263e-05, 1.402699999999979e-05, 1.3694000000001594e-05, 1.4431000000002248e-05, 1.4014000000006632e-05,...</msg>
<status status="PASS" starttime="20201115 22:00:24.213" endtime="20201115 22:00:24.242"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:24.252" level="INFO">NAME: 00-overhead-7-set</msg>
<status status="PASS" starttime="20201115 22:00:24.250" endtime="20201115 22:00:24.253"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:24.258" level="INFO">VALUE: [1.3708000000001164e-05, 1.3666000000002454e-05, 1.4402000000003634e-05, 1.4027999999999263e-05, 1.402699999999979e-05, 1.3694000000001594e-05, 1.4431000000002248e-05, 1.4014000000006632e-05, 1.3860999999996959e-05, 1.3972000000000984e-05, 1.4014000000006632e-05, 1.3722000000000734e-05, 1.4165999999996015e-05, 1.4388999999996599e-05, 1.4027999999999263e-05, 1.4041999999998833e-05, 1.4013999999999693e-05, 1.4194000000002094e-05, 1.4041999999998833e-05, 1.4389000000003538e-05, 1.3527999999998763e-05, 1.3694000000001594e-05, 1.3875000000003468e-05, 1.4027999999999263e-05, 1.4027999999999263e-05, 1.3680000000002024e-05, 1.3707999999994225e-05, 1.3847999999996863e-05, 1.4360999999997459e-05, 1.4348000000004302e-05, 1.3513999999999193e-05, 1.3986000000000554e-05, 1.352699999999929e-05, 1.354099999999886e-05, 1.4360999999997459e-05, 1.3861999999996433e-05, 1.4208000000001664e-05, 1.3874999999996529e-05, 1.4028000000006202e-05, 1.4194000000002094e-05, 1.3513999999999193e-05, 1.383299999999782e-05, 1.4360999999997459e-05, 1.4195000000001567e-05, 1.3929999999995335e-05, 1.3500000000006562e-05, 1.3542000000005272e-05, 1.3861000000003898e-05, 1.4208000000001664e-05, 1.4194999999994629e-05]</msg>
<status status="PASS" starttime="20201115 22:00:24.255" endtime="20201115 22:00:24.259"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.243" endtime="20201115 22:00:24.260"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:24.266" endtime="20201115 22:00:24.269"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:24.275" endtime="20201115 22:00:24.296"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.270" endtime="20201115 22:00:24.298"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.262" endtime="20201115 22:00:24.299"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.752" endtime="20201115 22:00:24.300"></status>
</kw>
<msg timestamp="20201115 22:00:24.300" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:24.326" endtime="20201115 22:00:24.351"></status>
</kw>
<msg timestamp="20201115 22:00:24.352" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:24.322" endtime="20201115 22:00:24.352"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:24.358" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:24.354" endtime="20201115 22:00:24.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:24.360" endtime="20201115 22:00:24.364"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.314" endtime="20201115 22:00:24.366"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.307" endtime="20201115 22:00:24.367"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:24.384" endtime="20201115 22:00:24.717"></status>
</kw>
<msg timestamp="20201115 22:00:24.724" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042619028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042632889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:24.380" endtime="20201115 22:00:24.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:24.742" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042619028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042632889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:24.726" endtime="20201115 22:00:24.742"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:24.744" endtime="20201115 22:00:24.748"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.373" endtime="20201115 22:00:24.749"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.368" endtime="20201115 22:00:24.751"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:24.761" level="INFO">${RESULT} = [{'time': 0.042632889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3860999999996959e-05, 'source_diff': 1.3860999999996959e-05}, {'time': 0.042952431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:24.752" endtime="20201115 22:00:24.762"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:24.792" level="INFO">${OVERHEAD} = {'diff': [1.3860999999996959e-05, 1.3653000000002358e-05, 1.3708000000001164e-05, 1.3875000000003468e-05, 1.4374999999997029e-05, 1.354099999999886e-05, 1.434699999999789e-05, 1.3860999999996959e-05, ...</msg>
<status status="PASS" starttime="20201115 22:00:24.763" endtime="20201115 22:00:24.792"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:24.802" level="INFO">NAME: 00-overhead-7-set</msg>
<status status="PASS" starttime="20201115 22:00:24.800" endtime="20201115 22:00:24.803"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:24.808" level="INFO">VALUE: [1.3860999999996959e-05, 1.3653000000002358e-05, 1.3708000000001164e-05, 1.3875000000003468e-05, 1.4374999999997029e-05, 1.354099999999886e-05, 1.434699999999789e-05, 1.3860999999996959e-05, 1.3556000000004842e-05, 1.3695000000001067e-05, 1.3791000000006048e-05, 1.4027999999999263e-05, 1.4362000000003872e-05, 1.4181000000001998e-05, 1.3874999999996529e-05, 1.3708000000001164e-05, 1.4027999999999263e-05, 1.4181000000001998e-05, 1.4194000000002094e-05, 1.404099999999936e-05, 1.3680000000002024e-05, 1.3680000000002024e-05, 1.4027999999999263e-05, 1.3541999999998333e-05, 1.4041000000006298e-05, 1.4375000000003968e-05, 1.3514000000006132e-05, 1.384699999999739e-05, 1.358299999999757e-05, 1.3874999999996529e-05, 1.404099999999936e-05, 1.4208000000001664e-05, 1.4042000000005772e-05, 1.4193999999995155e-05, 1.3889000000003038e-05, 1.3721999999993795e-05, 1.3652000000002884e-05, 1.4207999999994725e-05, 1.3833999999997293e-05, 1.4361000000004398e-05, 1.3860999999996959e-05, 1.4098000000004052e-05, 1.4209000000001137e-05, 1.3694000000001594e-05, 1.4027999999999263e-05, 1.434699999999789e-05, 1.4027999999999263e-05, 1.4375000000003968e-05, 1.4374999999997029e-05, 1.3848000000003802e-05]</msg>
<status status="PASS" starttime="20201115 22:00:24.805" endtime="20201115 22:00:24.809"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.794" endtime="20201115 22:00:24.810"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:24.817" endtime="20201115 22:00:24.819"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:24.825" endtime="20201115 22:00:24.846"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.820" endtime="20201115 22:00:24.848"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.812" endtime="20201115 22:00:24.850"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.302" endtime="20201115 22:00:24.851"></status>
</kw>
<msg timestamp="20201115 22:00:24.851" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:24.874" endtime="20201115 22:00:24.901"></status>
</kw>
<msg timestamp="20201115 22:00:24.902" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:24.871" endtime="20201115 22:00:24.902"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:24.908" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:24.904" endtime="20201115 22:00:24.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:24.910" endtime="20201115 22:00:24.914"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.864" endtime="20201115 22:00:24.916"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.858" endtime="20201115 22:00:24.917"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:24.934" endtime="20201115 22:00:25.267"></status>
</kw>
<msg timestamp="20201115 22:00:25.274" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042493403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042507431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:24.930" endtime="20201115 22:00:25.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:25.292" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042493403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042507431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:25.276" endtime="20201115 22:00:25.292"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:25.294" endtime="20201115 22:00:25.298"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.923" endtime="20201115 22:00:25.299"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.918" endtime="20201115 22:00:25.301"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:25.311" level="INFO">${RESULT} = [{'time': 0.042507431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4027999999999263e-05, 'source_diff': 1.4027999999999263e-05}, {'time': 0.042827097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:25.302" endtime="20201115 22:00:25.312"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:25.341" level="INFO">${OVERHEAD} = {'diff': [1.4027999999999263e-05, 1.3694000000001594e-05, 1.4124999999996779e-05, 1.3541999999998333e-05, 1.434699999999789e-05, 1.4180000000002524e-05, 1.4374999999997029e-05, 1.409699999999764e-05, ...</msg>
<status status="PASS" starttime="20201115 22:00:25.313" endtime="20201115 22:00:25.342"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:25.352" level="INFO">NAME: 00-overhead-7-set</msg>
<status status="PASS" starttime="20201115 22:00:25.350" endtime="20201115 22:00:25.353"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:25.358" level="INFO">VALUE: [1.4027999999999263e-05, 1.3694000000001594e-05, 1.4124999999996779e-05, 1.3541999999998333e-05, 1.434699999999789e-05, 1.4180000000002524e-05, 1.4374999999997029e-05, 1.409699999999764e-05, 1.3707999999994225e-05, 1.3861000000003898e-05, 1.4041999999998833e-05, 1.4209000000001137e-05, 1.4195000000001567e-05, 1.4360999999997459e-05, 1.3874999999996529e-05, 1.4181000000001998e-05, 1.3568999999998e-05, 1.4360999999997459e-05, 1.3875000000003468e-05, 1.3513999999999193e-05, 1.4179999999995585e-05, 1.3874999999996529e-05, 1.4181000000001998e-05, 1.3721999999993795e-05, 1.4208000000001664e-05, 1.3889000000003038e-05, 1.4375000000003968e-05, 1.3860999999996959e-05, 1.3667000000001928e-05, 1.3694000000001594e-05, 1.3681000000001498e-05, 1.3513999999999193e-05, 1.352699999999929e-05, 1.404099999999936e-05, 1.3848000000003802e-05, 1.3653000000002358e-05, 1.4195000000001567e-05, 1.3860999999996959e-05, 1.4360999999997459e-05, 1.4041999999998833e-05, 1.4041999999998833e-05, 1.3708999999993698e-05, 1.4360999999997459e-05, 1.4374999999997029e-05, 1.4027999999999263e-05, 1.3513999999999193e-05, 1.4194000000002094e-05, 1.3708000000001164e-05, 1.3568999999998e-05, 1.4195000000001567e-05]</msg>
<status status="PASS" starttime="20201115 22:00:25.355" endtime="20201115 22:00:25.358"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.343" endtime="20201115 22:00:25.360"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:25.367" endtime="20201115 22:00:25.370"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:25.375" endtime="20201115 22:00:25.397"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.371" endtime="20201115 22:00:25.398"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.362" endtime="20201115 22:00:25.400"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.853" endtime="20201115 22:00:25.400"></status>
</kw>
<msg timestamp="20201115 22:00:25.401" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:25.424" endtime="20201115 22:00:25.449"></status>
</kw>
<msg timestamp="20201115 22:00:25.450" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:25.420" endtime="20201115 22:00:25.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:25.456" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:25.452" endtime="20201115 22:00:25.457"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:25.458" endtime="20201115 22:00:25.462"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.413" endtime="20201115 22:00:25.464"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.408" endtime="20201115 22:00:25.465"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:25.485" endtime="20201115 22:00:25.817"></status>
</kw>
<msg timestamp="20201115 22:00:25.824" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040069792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040083986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:25.482" endtime="20201115 22:00:25.825"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:25.842" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040069792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040083986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:25.827" endtime="20201115 22:00:25.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:25.845" endtime="20201115 22:00:25.849"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.471" endtime="20201115 22:00:25.850"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.466" endtime="20201115 22:00:25.852"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:25.862" level="INFO">${RESULT} = [{'time': 0.040083986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4194000000002094e-05, 'source_diff': 1.4194000000002094e-05}, {'time': 0.040404403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:25.853" endtime="20201115 22:00:25.863"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:25.892" level="INFO">${OVERHEAD} = {'diff': [1.4194000000002094e-05, 1.4195000000001567e-05, 1.3861000000003898e-05, 1.352699999999929e-05, 1.3514000000006132e-05, 1.3944999999994379e-05, 1.3972000000000984e-05, 1.4139000000003288e-05,...</msg>
<status status="PASS" starttime="20201115 22:00:25.864" endtime="20201115 22:00:25.893"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:25.903" level="INFO">NAME: 00-overhead-7-set</msg>
<status status="PASS" starttime="20201115 22:00:25.901" endtime="20201115 22:00:25.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:25.909" level="INFO">VALUE: [1.4194000000002094e-05, 1.4195000000001567e-05, 1.3861000000003898e-05, 1.352699999999929e-05, 1.3514000000006132e-05, 1.3944999999994379e-05, 1.3972000000000984e-05, 1.4139000000003288e-05, 1.3875000000003468e-05, 1.383299999999782e-05, 1.4195000000001567e-05, 1.3681000000001498e-05, 1.354099999999886e-05, 1.4402999999996169e-05, 1.3777999999999013e-05, 1.4416000000003204e-05, 1.3695000000001067e-05, 1.3527999999998763e-05, 1.3931000000001748e-05, 1.4028000000006202e-05, 1.4361000000004398e-05, 1.3847000000004328e-05, 1.404099999999936e-05, 1.4111999999996683e-05, 1.3541000000005798e-05, 1.4014000000006632e-05, 1.384699999999739e-05, 1.384699999999739e-05, 1.4222000000001234e-05, 1.4347000000004828e-05, 1.3555999999997903e-05, 1.4042000000005772e-05, 1.4375000000003968e-05, 1.3472999999999957e-05, 1.3486000000000054e-05, 1.3709000000000637e-05, 1.3542000000005272e-05, 1.4027999999999263e-05, 1.3680999999994559e-05, 1.3929999999995335e-05, 1.408299999999807e-05, 1.431899999999875e-05, 1.4027999999999263e-05, 1.4193999999995155e-05, 1.4153000000002858e-05, 1.4347000000004828e-05, 1.3708000000001164e-05, 1.4181000000001998e-05, 1.402699999999979e-05, 1.3874999999996529e-05]</msg>
<status status="PASS" starttime="20201115 22:00:25.906" endtime="20201115 22:00:25.910"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.894" endtime="20201115 22:00:25.912"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:25.918" endtime="20201115 22:00:25.921"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:25.926" endtime="20201115 22:00:25.948"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.922" endtime="20201115 22:00:25.950"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.914" endtime="20201115 22:00:25.951"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.402" endtime="20201115 22:00:25.952"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.196" endtime="20201115 22:00:25.952"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.195" endtime="20201115 22:00:25.953"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:25.957" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:25.980" endtime="20201115 22:00:26.007"></status>
</kw>
<msg timestamp="20201115 22:00:26.008" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:25.977" endtime="20201115 22:00:26.009"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:26.014" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:26.010" endtime="20201115 22:00:26.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:26.017" endtime="20201115 22:00:26.020"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.970" endtime="20201115 22:00:26.022"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.964" endtime="20201115 22:00:26.024"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:26.040" endtime="20201115 22:00:26.375"></status>
</kw>
<msg timestamp="20201115 22:00:26.381" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04543325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045447028, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:00:26.036" endtime="20201115 22:00:26.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:26.400" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04543325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045447028, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:00:26.384" endtime="20201115 22:00:26.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:26.402" endtime="20201115 22:00:26.406"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.029" endtime="20201115 22:00:26.407"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.025" endtime="20201115 22:00:26.409"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:26.419" level="INFO">${RESULT} = [{'time': 0.045447028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3777999999999013e-05, 'source_diff': 1.3777999999999013e-05}, {'time': 0.045805736, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:26.410" endtime="20201115 22:00:26.420"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:26.449" level="INFO">${OVERHEAD} = {'diff': [1.3777999999999013e-05, 1.4360999999997459e-05, 1.4111000000004148e-05, 1.427700000000004e-05, 1.4319999999998223e-05, 1.4445000000001817e-05, 1.3777999999999013e-05, 1.4625000000004218e-05,...</msg>
<status status="PASS" starttime="20201115 22:00:26.421" endtime="20201115 22:00:26.450"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:26.460" level="INFO">NAME: 00-overhead-8-set</msg>
<status status="PASS" starttime="20201115 22:00:26.458" endtime="20201115 22:00:26.461"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:26.467" level="INFO">VALUE: [1.3777999999999013e-05, 1.4360999999997459e-05, 1.4111000000004148e-05, 1.427700000000004e-05, 1.4319999999998223e-05, 1.4445000000001817e-05, 1.3777999999999013e-05, 1.4625000000004218e-05, 1.3721999999993795e-05, 1.3972000000000984e-05, 1.3777999999999013e-05, 1.3944999999994379e-05, 1.4624999999997279e-05, 1.4625000000004218e-05, 1.3945000000001317e-05, 1.3944000000001844e-05, 1.461099999999771e-05, 1.3736000000000304e-05, 1.4445000000001817e-05, 1.4458999999994449e-05, 1.4110999999997209e-05, 1.3903000000002608e-05, 1.459699999999814e-05, 1.429099999999961e-05, 1.461099999999771e-05, 1.3957999999994475e-05, 1.409699999999764e-05, 1.3860999999996959e-05, 1.4430000000002774e-05, 1.409699999999764e-05, 1.3958000000001414e-05, 1.4277999999999513e-05, 1.461099999999771e-05, 1.430499999999918e-05, 1.4444999999994879e-05, 1.3791999999998583e-05, 1.4195000000001567e-05, 1.461099999999771e-05, 1.4598000000004552e-05, 1.4486000000001054e-05, 1.3709000000000637e-05, 1.4277999999999513e-05, 1.3958000000001414e-05, 1.4110999999997209e-05, 1.4110999999997209e-05, 1.3902000000003134e-05, 1.377699999999954e-05, 1.4611000000004648e-05, 1.408299999999807e-05, 1.3903000000009547e-05]</msg>
<status status="PASS" starttime="20201115 22:00:26.463" endtime="20201115 22:00:26.467"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.451" endtime="20201115 22:00:26.469"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:26.475" endtime="20201115 22:00:26.478"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:26.484" endtime="20201115 22:00:26.505"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.479" endtime="20201115 22:00:26.507"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.471" endtime="20201115 22:00:26.508"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.959" endtime="20201115 22:00:26.509"></status>
</kw>
<msg timestamp="20201115 22:00:26.509" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:26.532" endtime="20201115 22:00:26.559"></status>
</kw>
<msg timestamp="20201115 22:00:26.560" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:26.529" endtime="20201115 22:00:26.561"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:26.567" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:26.563" endtime="20201115 22:00:26.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:26.569" endtime="20201115 22:00:26.572"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.522" endtime="20201115 22:00:26.574"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.516" endtime="20201115 22:00:26.576"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:26.592" endtime="20201115 22:00:26.927"></status>
</kw>
<msg timestamp="20201115 22:00:26.934" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040330792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040344722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:26.589" endtime="20201115 22:00:26.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:26.952" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040330792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040344722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:26.937" endtime="20201115 22:00:26.953"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:26.955" endtime="20201115 22:00:26.959"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.581" endtime="20201115 22:00:26.960"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.577" endtime="20201115 22:00:26.962"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:26.972" level="INFO">${RESULT} = [{'time': 0.040344722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3930000000002274e-05, 'source_diff': 1.3930000000002274e-05}, {'time': 0.040704278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:26.963" endtime="20201115 22:00:26.972"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:27.002" level="INFO">${OVERHEAD} = {'diff': [1.3930000000002274e-05, 1.3945000000001317e-05, 1.4263999999999943e-05, 1.4429999999995835e-05, 1.3707999999994225e-05, 1.3736000000000304e-05, 1.3777999999999013e-05, 1.3931000000001748e-05...</msg>
<status status="PASS" starttime="20201115 22:00:26.974" endtime="20201115 22:00:27.004"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:27.014" level="INFO">NAME: 00-overhead-8-set</msg>
<status status="PASS" starttime="20201115 22:00:27.012" endtime="20201115 22:00:27.015"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:27.019" level="INFO">VALUE: [1.3930000000002274e-05, 1.3945000000001317e-05, 1.4263999999999943e-05, 1.4429999999995835e-05, 1.3707999999994225e-05, 1.3736000000000304e-05, 1.3777999999999013e-05, 1.3931000000001748e-05, 1.4277999999999513e-05, 1.4110999999997209e-05, 1.377699999999954e-05, 1.3916999999995239e-05, 1.3805999999998153e-05, 1.4110999999997209e-05, 1.459699999999814e-05, 1.4125000000003718e-05, 1.4277999999999513e-05, 1.4625000000004218e-05, 1.4277999999999513e-05, 1.4459000000001387e-05, 1.4292000000006022e-05, 1.4110999999997209e-05, 1.409699999999764e-05, 1.3777999999999013e-05, 1.4166999999995489e-05, 1.4625000000004218e-05, 1.4458000000001914e-05, 1.3944000000001844e-05, 1.3763999999999443e-05, 1.4416999999995739e-05, 1.4125000000003718e-05, 1.461099999999771e-05, 1.3943999999994905e-05, 1.3930000000002274e-05, 1.4277999999999513e-05, 1.4291999999999083e-05, 1.4277999999999513e-05, 1.4625000000004218e-05, 1.4277999999999513e-05, 1.4624999999997279e-05, 1.4291999999999083e-05, 1.3777999999999013e-05, 1.3930999999994809e-05, 1.4583000000005508e-05, 1.3874999999996529e-05, 1.380499999999868e-05, 1.3777999999999013e-05, 1.427700000000004e-05, 1.461099999999771e-05, 1.3763999999999443e-05]</msg>
<status status="PASS" starttime="20201115 22:00:27.016" endtime="20201115 22:00:27.020"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.005" endtime="20201115 22:00:27.022"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:27.028" endtime="20201115 22:00:27.031"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:27.036" endtime="20201115 22:00:27.058"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.032" endtime="20201115 22:00:27.060"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.024" endtime="20201115 22:00:27.061"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.511" endtime="20201115 22:00:27.062"></status>
</kw>
<msg timestamp="20201115 22:00:27.062" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:27.085" endtime="20201115 22:00:27.112"></status>
</kw>
<msg timestamp="20201115 22:00:27.113" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:27.081" endtime="20201115 22:00:27.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:27.119" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:27.115" endtime="20201115 22:00:27.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:27.121" endtime="20201115 22:00:27.125"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.075" endtime="20201115 22:00:27.127"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.069" endtime="20201115 22:00:27.128"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:27.145" endtime="20201115 22:00:27.478"></status>
</kw>
<msg timestamp="20201115 22:00:27.485" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040244028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040258167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:27.141" endtime="20201115 22:00:27.485"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:27.503" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040244028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040258167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:27.487" endtime="20201115 22:00:27.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:27.505" endtime="20201115 22:00:27.510"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.134" endtime="20201115 22:00:27.512"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.129" endtime="20201115 22:00:27.514"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:27.524" level="INFO">${RESULT} = [{'time': 0.040258167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4138999999996349e-05, 'source_diff': 1.4138999999996349e-05}, {'time': 0.040619722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:27.515" endtime="20201115 22:00:27.525"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:27.555" level="INFO">${OVERHEAD} = {'diff': [1.4138999999996349e-05, 1.4000000000000123e-05, 1.3959000000000887e-05, 1.377699999999954e-05, 1.4431000000002248e-05, 1.3958000000001414e-05, 1.4443999999995405e-05, 1.4277999999999513e-05,...</msg>
<status status="PASS" starttime="20201115 22:00:27.527" endtime="20201115 22:00:27.555"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:27.565" level="INFO">NAME: 00-overhead-8-set</msg>
<status status="PASS" starttime="20201115 22:00:27.563" endtime="20201115 22:00:27.566"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:27.571" level="INFO">VALUE: [1.4138999999996349e-05, 1.4000000000000123e-05, 1.3959000000000887e-05, 1.377699999999954e-05, 1.4431000000002248e-05, 1.3958000000001414e-05, 1.4443999999995405e-05, 1.4277999999999513e-05, 1.4277999999999513e-05, 1.4624999999997279e-05, 1.4473000000000957e-05, 1.377699999999954e-05, 1.4167000000002428e-05, 1.459699999999814e-05, 1.4443999999995405e-05, 1.3763999999999443e-05, 1.3945000000001317e-05, 1.431899999999875e-05, 1.461099999999771e-05, 1.3944000000001844e-05, 1.4666000000003454e-05, 1.4195000000001567e-05, 1.4277999999999513e-05, 1.4445000000001817e-05, 1.3791999999998583e-05, 1.4111000000004148e-05, 1.3930000000002274e-05, 1.4097000000004578e-05, 1.4110999999997209e-05, 1.3777000000006479e-05, 1.3791999999998583e-05, 1.4500000000000624e-05, 1.3778000000005952e-05, 1.409699999999764e-05, 1.408299999999807e-05, 1.3959000000000887e-05, 1.4430000000002774e-05, 1.3777999999999013e-05, 1.4110999999997209e-05, 1.458299999999857e-05, 1.3958999999993948e-05, 1.4445000000001817e-05, 1.4277999999999513e-05, 1.3805999999998153e-05, 1.4624999999997279e-05, 1.4638999999996849e-05, 1.4124999999996779e-05, 1.3958999999993948e-05, 1.4445000000001817e-05, 1.4263999999999943e-05]</msg>
<status status="PASS" starttime="20201115 22:00:27.568" endtime="20201115 22:00:27.572"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.556" endtime="20201115 22:00:27.573"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:27.580" endtime="20201115 22:00:27.582"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:27.588" endtime="20201115 22:00:27.609"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.583" endtime="20201115 22:00:27.611"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.575" endtime="20201115 22:00:27.612"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.063" endtime="20201115 22:00:27.613"></status>
</kw>
<msg timestamp="20201115 22:00:27.614" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:27.636" endtime="20201115 22:00:27.663"></status>
</kw>
<msg timestamp="20201115 22:00:27.665" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:27.633" endtime="20201115 22:00:27.665"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:27.671" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:27.667" endtime="20201115 22:00:27.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:27.673" endtime="20201115 22:00:27.677"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.626" endtime="20201115 22:00:27.678"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.620" endtime="20201115 22:00:27.680"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:27.697" endtime="20201115 22:00:28.029"></status>
</kw>
<msg timestamp="20201115 22:00:28.036" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040176611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040190542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:27.693" endtime="20201115 22:00:28.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:28.054" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040176611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040190542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:28.038" endtime="20201115 22:00:28.055"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:28.057" endtime="20201115 22:00:28.064"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.686" endtime="20201115 22:00:28.066"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.681" endtime="20201115 22:00:28.067"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:28.078" level="INFO">${RESULT} = [{'time': 0.040190542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3931000000001748e-05, 'source_diff': 1.3931000000001748e-05}, {'time': 0.040550056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:28.069" endtime="20201115 22:00:28.078"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:28.108" level="INFO">${OVERHEAD} = {'diff': [1.3931000000001748e-05, 1.4112000000003622e-05, 1.3958000000001414e-05, 1.409699999999764e-05, 1.3929999999995335e-05, 1.3944000000001844e-05, 1.4444000000002344e-05, 1.4110999999997209e-05,...</msg>
<status status="PASS" starttime="20201115 22:00:28.080" endtime="20201115 22:00:28.108"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:28.118" level="INFO">NAME: 00-overhead-8-set</msg>
<status status="PASS" starttime="20201115 22:00:28.116" endtime="20201115 22:00:28.119"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:28.124" level="INFO">VALUE: [1.3931000000001748e-05, 1.4112000000003622e-05, 1.3958000000001414e-05, 1.409699999999764e-05, 1.3929999999995335e-05, 1.3944000000001844e-05, 1.4444000000002344e-05, 1.4110999999997209e-05, 1.3930999999994809e-05, 1.4457999999994975e-05, 1.3777999999999013e-05, 1.3805999999998153e-05, 1.3945000000001317e-05, 1.409699999999764e-05, 1.3903000000002608e-05, 1.4403000000003108e-05, 1.4277999999999513e-05, 1.377699999999954e-05, 1.3777999999999013e-05, 1.3749999999999873e-05, 1.3777999999999013e-05, 1.4458000000001914e-05, 1.4443999999995405e-05, 1.4444000000002344e-05, 1.4263999999999943e-05, 1.3943999999994905e-05, 1.4625000000004218e-05, 1.3722000000000734e-05, 1.3930000000002274e-05, 1.427700000000004e-05, 1.4458000000001914e-05, 1.4139000000003288e-05, 1.459699999999814e-05, 1.4152999999995919e-05, 1.4430999999995309e-05, 1.3931000000001748e-05, 1.3791999999998583e-05, 1.4569999999998473e-05, 1.3944999999994379e-05, 1.461099999999771e-05, 1.429099999999961e-05, 1.4291999999999083e-05, 1.3945000000001317e-05, 1.4291999999999083e-05, 1.4110999999997209e-05, 1.427700000000004e-05, 1.4472000000001484e-05, 1.4291999999999083e-05, 1.409699999999764e-05, 1.4263999999999943e-05]</msg>
<status status="PASS" starttime="20201115 22:00:28.121" endtime="20201115 22:00:28.125"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.110" endtime="20201115 22:00:28.126"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:28.132" endtime="20201115 22:00:28.135"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:28.141" endtime="20201115 22:00:28.162"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.136" endtime="20201115 22:00:28.164"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.128" endtime="20201115 22:00:28.165"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.615" endtime="20201115 22:00:28.166"></status>
</kw>
<msg timestamp="20201115 22:00:28.167" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:28.189" endtime="20201115 22:00:28.216"></status>
</kw>
<msg timestamp="20201115 22:00:28.217" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:28.186" endtime="20201115 22:00:28.218"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:28.223" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:28.219" endtime="20201115 22:00:28.224"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:28.226" endtime="20201115 22:00:28.229"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.179" endtime="20201115 22:00:28.231"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.173" endtime="20201115 22:00:28.232"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:28.249" endtime="20201115 22:00:28.583"></status>
</kw>
<msg timestamp="20201115 22:00:28.590" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040075444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040089889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:28.245" endtime="20201115 22:00:28.591"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:28.609" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040075444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040089889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:28.593" endtime="20201115 22:00:28.610"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:28.611" endtime="20201115 22:00:28.617"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.238" endtime="20201115 22:00:28.618"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.234" endtime="20201115 22:00:28.620"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:28.630" level="INFO">${RESULT} = [{'time': 0.040089889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4444999999994879e-05, 'source_diff': 1.4444999999994879e-05}, {'time': 0.040452319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:28.621" endtime="20201115 22:00:28.631"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:28.660" level="INFO">${OVERHEAD} = {'diff': [1.4444999999994879e-05, 1.427700000000004e-05, 1.461099999999771e-05, 1.4431000000002248e-05, 1.4236000000000804e-05, 1.4416000000003204e-05, 1.3958000000001414e-05, 1.4263999999999943e-05, ...</msg>
<status status="PASS" starttime="20201115 22:00:28.632" endtime="20201115 22:00:28.661"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:28.671" level="INFO">NAME: 00-overhead-8-set</msg>
<status status="PASS" starttime="20201115 22:00:28.669" endtime="20201115 22:00:28.672"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:28.677" level="INFO">VALUE: [1.4444999999994879e-05, 1.427700000000004e-05, 1.461099999999771e-05, 1.4431000000002248e-05, 1.4236000000000804e-05, 1.4416000000003204e-05, 1.3958000000001414e-05, 1.4263999999999943e-05, 1.4277999999999513e-05, 1.461099999999771e-05, 1.3945000000001317e-05, 1.405499999999893e-05, 1.3917000000002178e-05, 1.461099999999771e-05, 1.3777999999999013e-05, 1.4444000000002344e-05, 1.3931000000001748e-05, 1.4374999999997029e-05, 1.3778000000005952e-05, 1.461099999999771e-05, 1.4569999999998473e-05, 1.4444000000002344e-05, 1.4292000000006022e-05, 1.4111000000004148e-05, 1.4291999999999083e-05, 1.404099999999936e-05, 1.4430999999995309e-05, 1.4277999999999513e-05, 1.4443999999995405e-05, 1.4263999999999943e-05, 1.4457999999994975e-05, 1.4263999999999943e-05, 1.3931000000001748e-05, 1.4013999999999693e-05, 1.4443999999995405e-05, 1.4110999999997209e-05, 1.377699999999954e-05, 1.4111000000004148e-05, 1.4250000000000373e-05, 1.3708000000001164e-05, 1.4360999999997459e-05, 1.4111000000004148e-05, 1.4431000000002248e-05, 1.4138000000003814e-05, 1.3763999999999443e-05, 1.4277999999999513e-05, 1.4098000000004052e-05, 1.4624999999997279e-05, 1.3944000000001844e-05, 1.4111999999996683e-05]</msg>
<status status="PASS" starttime="20201115 22:00:28.674" endtime="20201115 22:00:28.677"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.662" endtime="20201115 22:00:28.679"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:28.685" endtime="20201115 22:00:28.688"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:28.693" endtime="20201115 22:00:28.715"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.689" endtime="20201115 22:00:28.717"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.681" endtime="20201115 22:00:28.718"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.168" endtime="20201115 22:00:28.719"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.955" endtime="20201115 22:00:28.719"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.954" endtime="20201115 22:00:28.720"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:28.725" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:28.747" endtime="20201115 22:00:28.776"></status>
</kw>
<msg timestamp="20201115 22:00:28.777" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:28.744" endtime="20201115 22:00:28.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:28.783" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:28.779" endtime="20201115 22:00:28.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:28.786" endtime="20201115 22:00:28.789"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.737" endtime="20201115 22:00:28.791"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.731" endtime="20201115 22:00:28.793"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:28.810" endtime="20201115 22:00:29.148"></status>
</kw>
<msg timestamp="20201115 22:00:29.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045269708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045284236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:28.807" endtime="20201115 22:00:29.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:29.173" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045269708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045284236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:29.157" endtime="20201115 22:00:29.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:29.175" endtime="20201115 22:00:29.179"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.799" endtime="20201115 22:00:29.180"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.795" endtime="20201115 22:00:29.182"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:29.192" level="INFO">${RESULT} = [{'time': 0.045284236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4527999999999763e-05, 'source_diff': 1.4527999999999763e-05}, {'time': 0.045681861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:29.183" endtime="20201115 22:00:29.193"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:29.222" level="INFO">${OVERHEAD} = {'diff': [1.4527999999999763e-05, 1.4193999999995155e-05, 1.4527999999999763e-05, 1.4152999999995919e-05, 1.4722000000001734e-05, 1.402699999999979e-05, 1.4360999999997459e-05, 1.4333000000005258e-05,...</msg>
<status status="PASS" starttime="20201115 22:00:29.194" endtime="20201115 22:00:29.223"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:29.233" level="INFO">NAME: 00-overhead-9-set</msg>
<status status="PASS" starttime="20201115 22:00:29.231" endtime="20201115 22:00:29.234"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:29.239" level="INFO">VALUE: [1.4527999999999763e-05, 1.4193999999995155e-05, 1.4527999999999763e-05, 1.4152999999995919e-05, 1.4722000000001734e-05, 1.402699999999979e-05, 1.4360999999997459e-05, 1.4333000000005258e-05, 1.4027999999999263e-05, 1.4861000000004898e-05, 1.4861000000004898e-05, 1.452700000000029e-05, 1.4875000000004468e-05, 1.4360999999997459e-05, 1.3944000000001844e-05, 1.4861000000004898e-05, 1.455499999999943e-05, 1.4041999999998833e-05, 1.404099999999936e-05, 1.4930000000003274e-05, 1.486099999999796e-05, 1.4486000000001054e-05, 1.4874999999997529e-05, 1.4708000000002164e-05, 1.452700000000029e-05, 1.4750000000000874e-05, 1.4694000000002594e-05, 1.484699999999839e-05, 1.4709000000001637e-05, 1.4500000000000624e-05, 1.4360999999997459e-05, 1.4527999999999763e-05, 1.4000000000000123e-05, 1.4709000000001637e-05, 1.4695000000002068e-05, 1.401300000000022e-05, 1.4861000000004898e-05, 1.434699999999789e-05, 1.4694000000002594e-05, 1.4027999999999263e-05, 1.4194999999994629e-05, 1.434699999999789e-05, 1.4874999999997529e-05, 1.4027999999999263e-05, 1.4000000000000123e-05, 1.4014000000006632e-05, 1.4027999999999263e-05, 1.4027999999999263e-05, 1.452700000000029e-05, 1.4347999999997363e-05]</msg>
<status status="PASS" starttime="20201115 22:00:29.236" endtime="20201115 22:00:29.240"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.224" endtime="20201115 22:00:29.241"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:29.247" endtime="20201115 22:00:29.250"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:29.256" endtime="20201115 22:00:29.277"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.251" endtime="20201115 22:00:29.279"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.243" endtime="20201115 22:00:29.280"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.726" endtime="20201115 22:00:29.281"></status>
</kw>
<msg timestamp="20201115 22:00:29.282" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:29.304" endtime="20201115 22:00:29.333"></status>
</kw>
<msg timestamp="20201115 22:00:29.334" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:29.301" endtime="20201115 22:00:29.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:29.341" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:29.337" endtime="20201115 22:00:29.342"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:29.344" endtime="20201115 22:00:29.347"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.294" endtime="20201115 22:00:29.349"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.288" endtime="20201115 22:00:29.350"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:29.367" endtime="20201115 22:00:29.701"></status>
</kw>
<msg timestamp="20201115 22:00:29.708" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040421236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040435597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:29.363" endtime="20201115 22:00:29.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:29.726" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040421236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040435597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:29.711" endtime="20201115 22:00:29.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:29.729" endtime="20201115 22:00:29.734"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.356" endtime="20201115 22:00:29.736"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.352" endtime="20201115 22:00:29.737"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:29.748" level="INFO">${RESULT} = [{'time': 0.040435597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4360999999997459e-05, 'source_diff': 1.4360999999997459e-05}, {'time': 0.040834194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:29.739" endtime="20201115 22:00:29.748"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:29.777" level="INFO">${OVERHEAD} = {'diff': [1.4360999999997459e-05, 1.404099999999936e-05, 1.4361000000004398e-05, 1.434699999999789e-05, 1.4694000000002594e-05, 1.4695000000002068e-05, 1.4527999999999763e-05, 1.4527999999999763e-05, ...</msg>
<status status="PASS" starttime="20201115 22:00:29.750" endtime="20201115 22:00:29.778"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:29.788" level="INFO">NAME: 00-overhead-9-set</msg>
<status status="PASS" starttime="20201115 22:00:29.786" endtime="20201115 22:00:29.789"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:29.794" level="INFO">VALUE: [1.4360999999997459e-05, 1.404099999999936e-05, 1.4361000000004398e-05, 1.434699999999789e-05, 1.4694000000002594e-05, 1.4695000000002068e-05, 1.4527999999999763e-05, 1.4527999999999763e-05, 1.4555000000006368e-05, 1.4666000000003454e-05, 1.4041999999998833e-05, 1.4027999999999263e-05, 1.4888999999997099e-05, 1.4638999999996849e-05, 1.4208999999994198e-05, 1.4193999999995155e-05, 1.4709000000001637e-05, 1.4110999999997209e-05, 1.458299999999857e-05, 1.477700000000054e-05, 1.4874999999997529e-05, 1.4430999999995309e-05, 1.4680000000003024e-05, 1.4208000000001664e-05, 1.402699999999979e-05, 1.4680000000003024e-05, 1.4708000000002164e-05, 1.4209000000001137e-05, 1.4208000000001664e-05, 1.404099999999936e-05, 1.4013999999999693e-05, 1.4348000000004302e-05, 1.4195000000001567e-05, 1.4194000000002094e-05, 1.4874999999997529e-05, 1.4208000000001664e-05, 1.4861000000004898e-05, 1.484699999999839e-05, 1.4527999999999763e-05, 1.4194000000002094e-05, 1.4541999999999333e-05, 1.4680000000003024e-05, 1.4027999999999263e-05, 1.4195000000001567e-05, 1.4708000000002164e-05, 1.4902999999996669e-05, 1.4165999999996015e-05, 1.486099999999796e-05, 1.486099999999796e-05, 1.4472000000001484e-05]</msg>
<status status="PASS" starttime="20201115 22:00:29.790" endtime="20201115 22:00:29.794"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.779" endtime="20201115 22:00:29.796"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:29.802" endtime="20201115 22:00:29.805"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:29.810" endtime="20201115 22:00:29.832"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.806" endtime="20201115 22:00:29.834"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.798" endtime="20201115 22:00:29.836"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.283" endtime="20201115 22:00:29.836"></status>
</kw>
<msg timestamp="20201115 22:00:29.837" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:29.861" endtime="20201115 22:00:29.890"></status>
</kw>
<msg timestamp="20201115 22:00:29.892" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:29.858" endtime="20201115 22:00:29.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:29.898" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:29.894" endtime="20201115 22:00:29.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:29.900" endtime="20201115 22:00:29.904"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.850" endtime="20201115 22:00:29.905"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.844" endtime="20201115 22:00:29.907"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:29.923" endtime="20201115 22:00:30.258"></status>
</kw>
<msg timestamp="20201115 22:00:30.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042788917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042803069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:29.920" endtime="20201115 22:00:30.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:30.282" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042788917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042803069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:30.267" endtime="20201115 22:00:30.283"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:30.285" endtime="20201115 22:00:30.292"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.913" endtime="20201115 22:00:30.294"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.908" endtime="20201115 22:00:30.295"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:30.306" level="INFO">${RESULT} = [{'time': 0.042803069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4151999999996445e-05, 'source_diff': 1.4151999999996445e-05}, {'time': 0.043196597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:30.297" endtime="20201115 22:00:30.306"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:30.336" level="INFO">${OVERHEAD} = {'diff': [1.4151999999996445e-05, 1.4583000000005508e-05, 1.483299999999882e-05, 1.4193999999995155e-05, 1.486099999999796e-05, 1.4735999999994365e-05, 1.4222000000001234e-05, 1.402699999999979e-05, 1...</msg>
<status status="PASS" starttime="20201115 22:00:30.308" endtime="20201115 22:00:30.336"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:30.346" level="INFO">NAME: 00-overhead-9-set</msg>
<status status="PASS" starttime="20201115 22:00:30.344" endtime="20201115 22:00:30.347"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:30.352" level="INFO">VALUE: [1.4151999999996445e-05, 1.4583000000005508e-05, 1.483299999999882e-05, 1.4193999999995155e-05, 1.486099999999796e-05, 1.4735999999994365e-05, 1.4222000000001234e-05, 1.402699999999979e-05, 1.4360999999997459e-05, 1.4361000000004398e-05, 1.4194000000002094e-05, 1.4694000000002594e-05, 1.4180000000002524e-05, 1.4679999999996085e-05, 1.4527999999999763e-05, 1.434699999999789e-05, 1.4722000000001734e-05, 1.4139000000003288e-05, 1.4389000000003538e-05, 1.434699999999789e-05, 1.402699999999979e-05, 1.4472000000001484e-05, 1.4195000000001567e-05, 1.4693999999995655e-05, 1.4694000000002594e-05, 1.4527999999999763e-05, 1.4695000000002068e-05, 1.4139000000003288e-05, 1.486099999999796e-05, 1.452700000000029e-05, 1.4875000000004468e-05, 1.4514000000000193e-05, 1.4361000000004398e-05, 1.4667000000002928e-05, 1.4027999999999263e-05, 1.401299999999328e-05, 1.4361000000004398e-05, 1.4013999999999693e-05, 1.4861000000004898e-05, 1.433299999999832e-05, 1.4514000000000193e-05, 1.4237000000000277e-05, 1.4514000000000193e-05, 1.4181000000001998e-05, 1.4514000000000193e-05, 1.4778000000000013e-05, 1.4875000000004468e-05, 1.4917000000003178e-05, 1.4167000000002428e-05, 1.4695000000002068e-05]</msg>
<status status="PASS" starttime="20201115 22:00:30.349" endtime="20201115 22:00:30.353"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.337" endtime="20201115 22:00:30.354"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:30.360" endtime="20201115 22:00:30.363"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:30.368" endtime="20201115 22:00:30.390"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.364" endtime="20201115 22:00:30.392"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.356" endtime="20201115 22:00:30.393"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.838" endtime="20201115 22:00:30.394"></status>
</kw>
<msg timestamp="20201115 22:00:30.395" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:30.418" endtime="20201115 22:00:30.447"></status>
</kw>
<msg timestamp="20201115 22:00:30.448" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:30.414" endtime="20201115 22:00:30.448"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:30.454" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:30.450" endtime="20201115 22:00:30.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:30.456" endtime="20201115 22:00:30.460"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.407" endtime="20201115 22:00:30.461"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.402" endtime="20201115 22:00:30.463"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:30.479" endtime="20201115 22:00:30.814"></status>
</kw>
<msg timestamp="20201115 22:00:30.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040924042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040938889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:30.476" endtime="20201115 22:00:30.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:30.839" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040924042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040938889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:30.823" endtime="20201115 22:00:30.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:30.841" endtime="20201115 22:00:30.846"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.469" endtime="20201115 22:00:30.848"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.464" endtime="20201115 22:00:30.849"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:30.860" level="INFO">${RESULT} = [{'time': 0.040938889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.484699999999839e-05, 'source_diff': 1.484699999999839e-05}, {'time': 0.041334486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:30.851" endtime="20201115 22:00:30.861"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:30.891" level="INFO">${OVERHEAD} = {'diff': [1.484699999999839e-05, 1.4193999999995155e-05, 1.484699999999839e-05, 1.4374999999997029e-05, 1.4041999999998833e-05, 1.4847999999997863e-05, 1.4223000000000707e-05, 1.4693999999995655e-05, ...</msg>
<status status="PASS" starttime="20201115 22:00:30.862" endtime="20201115 22:00:30.891"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:30.902" level="INFO">NAME: 00-overhead-9-set</msg>
<status status="PASS" starttime="20201115 22:00:30.900" endtime="20201115 22:00:30.903"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:30.907" level="INFO">VALUE: [1.484699999999839e-05, 1.4193999999995155e-05, 1.484699999999839e-05, 1.4374999999997029e-05, 1.4041999999998833e-05, 1.4847999999997863e-05, 1.4223000000000707e-05, 1.4693999999995655e-05, 1.4348000000004302e-05, 1.4042000000005772e-05, 1.4653000000003358e-05, 1.4695000000002068e-05, 1.4374999999997029e-05, 1.484699999999839e-05, 1.4375000000003968e-05, 1.4541999999999333e-05, 1.4041999999998833e-05, 1.484699999999839e-05, 1.4194999999994629e-05, 1.4361999999996933e-05, 1.484699999999839e-05, 1.4514000000000193e-05, 1.4056000000005342e-05, 1.452700000000029e-05, 1.409699999999764e-05, 1.4694000000002594e-05, 1.484699999999839e-05, 1.4568999999999e-05, 1.4041999999998833e-05, 1.4013999999999693e-05, 1.4166999999995489e-05, 1.486099999999796e-05, 1.4527999999999763e-05, 1.4027999999999263e-05, 1.4027999999999263e-05, 1.4847000000005328e-05, 1.4888999999997099e-05, 1.4778000000000013e-05, 1.426300000000047e-05, 1.480499999999968e-05, 1.4471999999994545e-05, 1.4348000000004302e-05, 1.4695000000002068e-05, 1.4874999999997529e-05, 1.484699999999839e-05, 1.4097000000004578e-05, 1.4514000000000193e-05, 1.4681000000002498e-05, 1.4360999999997459e-05, 1.4360999999997459e-05]</msg>
<status status="PASS" starttime="20201115 22:00:30.904" endtime="20201115 22:00:30.908"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.893" endtime="20201115 22:00:30.910"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:30.917" endtime="20201115 22:00:30.920"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:30.925" endtime="20201115 22:00:30.947"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.921" endtime="20201115 22:00:30.949"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.912" endtime="20201115 22:00:30.950"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.396" endtime="20201115 22:00:30.951"></status>
</kw>
<msg timestamp="20201115 22:00:30.951" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:30.974" endtime="20201115 22:00:31.003"></status>
</kw>
<msg timestamp="20201115 22:00:31.005" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:30.971" endtime="20201115 22:00:31.005"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:31.011" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:31.007" endtime="20201115 22:00:31.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:31.013" endtime="20201115 22:00:31.018"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.964" endtime="20201115 22:00:31.019"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.958" endtime="20201115 22:00:31.021"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:31.037" endtime="20201115 22:00:31.370"></status>
</kw>
<msg timestamp="20201115 22:00:31.377" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040568639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040583028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:31.034" endtime="20201115 22:00:31.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:31.395" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040568639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040583028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:31.379" endtime="20201115 22:00:31.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:31.397" endtime="20201115 22:00:31.403"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.027" endtime="20201115 22:00:31.404"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.022" endtime="20201115 22:00:31.406"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:31.416" level="INFO">${RESULT} = [{'time': 0.040583028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4389000000003538e-05, 'source_diff': 1.4389000000003538e-05}, {'time': 0.040980583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:31.407" endtime="20201115 22:00:31.417"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:31.446" level="INFO">${OVERHEAD} = {'diff': [1.4389000000003538e-05, 1.4680000000003024e-05, 1.4833999999998293e-05, 1.4694999999995129e-05, 1.4360999999997459e-05, 1.409699999999764e-05, 1.4902999999996669e-05, 1.483299999999882e-05, ...</msg>
<status status="PASS" starttime="20201115 22:00:31.418" endtime="20201115 22:00:31.447"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:31.457" level="INFO">NAME: 00-overhead-9-set</msg>
<status status="PASS" starttime="20201115 22:00:31.455" endtime="20201115 22:00:31.458"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:31.462" level="INFO">VALUE: [1.4389000000003538e-05, 1.4680000000003024e-05, 1.4833999999998293e-05, 1.4694999999995129e-05, 1.4360999999997459e-05, 1.409699999999764e-05, 1.4902999999996669e-05, 1.483299999999882e-05, 1.4027999999999263e-05, 1.4055000000005868e-05, 1.4360999999997459e-05, 1.4527999999999763e-05, 1.434699999999789e-05, 1.4374999999997029e-05, 1.4361000000004398e-05, 1.4695000000002068e-05, 1.4374999999997029e-05, 1.4666999999995989e-05, 1.4181000000001998e-05, 1.480499999999968e-05, 1.4013999999999693e-05, 1.4194000000002094e-05, 1.4694000000002594e-05, 1.4443999999995405e-05, 1.452700000000029e-05, 1.4305999999998653e-05, 1.4500000000000624e-05, 1.4360999999997459e-05, 1.434699999999789e-05, 1.4889000000004038e-05, 1.4027999999999263e-05, 1.4209000000001137e-05, 1.4347999999997363e-05, 1.4208000000001664e-05, 1.4347000000004828e-05, 1.4624999999997279e-05, 1.4514000000000193e-05, 1.434699999999789e-05, 1.4181000000001998e-05, 1.4028000000006202e-05, 1.4500000000000624e-05, 1.4360999999997459e-05, 1.4041999999998833e-05, 1.454099999999986e-05, 1.4389000000003538e-05, 1.4723000000001207e-05, 1.4541999999999333e-05, 1.4708999999994699e-05, 1.4179999999995585e-05, 1.4848000000004802e-05]</msg>
<status status="PASS" starttime="20201115 22:00:31.459" endtime="20201115 22:00:31.464"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.448" endtime="20201115 22:00:31.465"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:31.472" endtime="20201115 22:00:31.474"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:31.480" endtime="20201115 22:00:31.502"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.476" endtime="20201115 22:00:31.503"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.467" endtime="20201115 22:00:31.505"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.952" endtime="20201115 22:00:31.506"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.722" endtime="20201115 22:00:31.506"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.721" endtime="20201115 22:00:31.506"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:31.511" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:31.534" endtime="20201115 22:00:31.565"></status>
</kw>
<msg timestamp="20201115 22:00:31.566" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:31.531" endtime="20201115 22:00:31.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:31.572" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:31.568" endtime="20201115 22:00:31.573"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:31.575" endtime="20201115 22:00:31.578"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.524" endtime="20201115 22:00:31.580"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.518" endtime="20201115 22:00:31.581"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:31.598" endtime="20201115 22:00:31.934"></status>
</kw>
<msg timestamp="20201115 22:00:31.941" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046123028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046138139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:31.594" endtime="20201115 22:00:31.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:31.959" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046123028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046138139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:31.943" endtime="20201115 22:00:31.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:31.962" endtime="20201115 22:00:31.966"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.587" endtime="20201115 22:00:31.967"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.583" endtime="20201115 22:00:31.969"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:31.979" level="INFO">${RESULT} = [{'time': 0.046138139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.511099999999821e-05, 'source_diff': 1.511099999999821e-05}, {'time': 0.046572847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:31.970" endtime="20201115 22:00:31.980"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:32.010" level="INFO">${OVERHEAD} = {'diff': [1.511099999999821e-05, 1.461099999999771e-05, 1.4791999999999583e-05, 1.4459000000001387e-05, 1.4972000000001984e-05, 1.4764000000000443e-05, 1.4958000000002414e-05, 1.4764000000000443e-05, ...</msg>
<status status="PASS" starttime="20201115 22:00:31.981" endtime="20201115 22:00:32.010"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:32.020" level="INFO">NAME: 00-overhead-10-set</msg>
<status status="PASS" starttime="20201115 22:00:32.018" endtime="20201115 22:00:32.021"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:32.026" level="INFO">VALUE: [1.511099999999821e-05, 1.461099999999771e-05, 1.4791999999999583e-05, 1.4459000000001387e-05, 1.4972000000001984e-05, 1.4764000000000443e-05, 1.4958000000002414e-05, 1.4764000000000443e-05, 1.4931000000002748e-05, 1.4929999999996335e-05, 1.4666000000003454e-05, 1.4958000000002414e-05, 1.5165999999997015e-05, 1.4611000000004648e-05, 1.4277999999999513e-05, 1.4444000000002344e-05, 1.4944000000002844e-05, 1.5124999999997779e-05, 1.4597999999997613e-05, 1.4291999999999083e-05, 1.4778000000000013e-05, 1.511099999999821e-05, 1.4943999999995905e-05, 1.4457999999994975e-05, 1.4263999999999943e-05, 1.4292000000006022e-05, 1.4986000000001554e-05, 1.4458000000001914e-05, 1.4348000000004302e-05, 1.4708000000002164e-05, 1.5111999999997683e-05, 1.4486000000001054e-05, 1.4388000000004064e-05, 1.5124999999997779e-05, 1.459699999999814e-05, 1.4958000000002414e-05, 1.4778000000000013e-05, 1.4611000000004648e-05, 1.4459000000008326e-05, 1.511099999999821e-05, 1.4375000000010907e-05, 1.4945000000002318e-05, 1.429099999999961e-05, 1.5028000000000263e-05, 1.461099999999771e-05, 1.4945000000002318e-05, 1.4278000000006452e-05, 1.426300000000047e-05, 1.4430000000009713e-05, 1.511099999999821e-05]</msg>
<status status="PASS" starttime="20201115 22:00:32.023" endtime="20201115 22:00:32.027"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.011" endtime="20201115 22:00:32.029"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:32.035" endtime="20201115 22:00:32.038"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:32.043" endtime="20201115 22:00:32.065"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.039" endtime="20201115 22:00:32.067"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.031" endtime="20201115 22:00:32.068"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.512" endtime="20201115 22:00:32.069"></status>
</kw>
<msg timestamp="20201115 22:00:32.069" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:32.092" endtime="20201115 22:00:32.123"></status>
</kw>
<msg timestamp="20201115 22:00:32.124" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:32.089" endtime="20201115 22:00:32.125"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:32.130" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:32.126" endtime="20201115 22:00:32.131"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:32.133" endtime="20201115 22:00:32.136"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.082" endtime="20201115 22:00:32.138"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.076" endtime="20201115 22:00:32.139"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:32.156" endtime="20201115 22:00:32.489"></status>
</kw>
<msg timestamp="20201115 22:00:32.496" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040338194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040352556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:32.152" endtime="20201115 22:00:32.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:32.514" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040338194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040352556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:32.499" endtime="20201115 22:00:32.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:32.517" endtime="20201115 22:00:32.524"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.145" endtime="20201115 22:00:32.526"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.141" endtime="20201115 22:00:32.527"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:32.538" level="INFO">${RESULT} = [{'time': 0.040352556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4361999999996933e-05, 'source_diff': 1.4361999999996933e-05}, {'time': 0.040790083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:32.529" endtime="20201115 22:00:32.538"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:32.567" level="INFO">${OVERHEAD} = {'diff': [1.4361999999996933e-05, 1.477700000000054e-05, 1.4430999999995309e-05, 1.477700000000054e-05, 1.5125000000004718e-05, 1.461099999999771e-05, 1.4764000000000443e-05, 1.4778000000000013e-05, 1...</msg>
<status status="PASS" starttime="20201115 22:00:32.540" endtime="20201115 22:00:32.568"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:32.579" level="INFO">NAME: 00-overhead-10-set</msg>
<status status="PASS" starttime="20201115 22:00:32.577" endtime="20201115 22:00:32.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:32.584" level="INFO">VALUE: [1.4361999999996933e-05, 1.477700000000054e-05, 1.4430999999995309e-05, 1.477700000000054e-05, 1.5125000000004718e-05, 1.461099999999771e-05, 1.4764000000000443e-05, 1.4778000000000013e-05, 1.4791999999999583e-05, 1.4764000000000443e-05, 1.476300000000097e-05, 1.4443999999995405e-05, 1.4277999999999513e-05, 1.459699999999814e-05, 1.4430000000002774e-05, 1.4624999999997279e-05, 1.4430999999995309e-05, 1.4250000000000373e-05, 1.4222999999993768e-05, 1.477700000000054e-05, 1.481899999999925e-05, 1.4263999999999943e-05, 1.4459000000001387e-05, 1.461099999999771e-05, 1.5139000000004288e-05, 1.4723000000001207e-05, 1.5152999999996919e-05, 1.4291999999999083e-05, 1.4541999999999333e-05, 1.4277999999999513e-05, 1.479100000000011e-05, 1.4612000000004122e-05, 1.4445000000001817e-05, 1.4263999999999943e-05, 1.4263999999999943e-05, 1.5124999999997779e-05, 1.4778000000000013e-05, 1.4277999999999513e-05, 1.4277999999999513e-05, 1.5125000000004718e-05, 1.5111000000005148e-05, 1.4597000000005078e-05, 1.4611000000004648e-05, 1.4306000000005592e-05, 1.5125000000004718e-05, 1.4778000000000013e-05, 1.4901999999997195e-05, 1.429099999999961e-05, 1.5138999999997349e-05, 1.4263999999999943e-05]</msg>
<status status="PASS" starttime="20201115 22:00:32.581" endtime="20201115 22:00:32.585"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.570" endtime="20201115 22:00:32.587"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:32.593" endtime="20201115 22:00:32.595"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:32.601" endtime="20201115 22:00:32.623"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.597" endtime="20201115 22:00:32.624"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.588" endtime="20201115 22:00:32.626"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.070" endtime="20201115 22:00:32.627"></status>
</kw>
<msg timestamp="20201115 22:00:32.627" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:32.650" endtime="20201115 22:00:32.681"></status>
</kw>
<msg timestamp="20201115 22:00:32.682" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:32.646" endtime="20201115 22:00:32.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:32.688" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:32.684" endtime="20201115 22:00:32.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:32.690" endtime="20201115 22:00:32.694"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.639" endtime="20201115 22:00:32.696"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.634" endtime="20201115 22:00:32.697"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:32.713" endtime="20201115 22:00:33.048"></status>
</kw>
<msg timestamp="20201115 22:00:33.055" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040399056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0404135, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:00:32.710" endtime="20201115 22:00:33.056"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:33.074" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040399056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0404135, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:00:33.058" endtime="20201115 22:00:33.074"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:33.076" endtime="20201115 22:00:33.081"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.703" endtime="20201115 22:00:33.083"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.698" endtime="20201115 22:00:33.084"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:33.095" level="INFO">${RESULT} = [{'time': 0.0404135, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4443999999995405e-05, 'source_diff': 1.4443999999995405e-05}, {'time': 0.040849264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:33.086" endtime="20201115 22:00:33.096"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:33.125" level="INFO">${OVERHEAD} = {'diff': [1.4443999999995405e-05, 1.4236000000000804e-05, 1.4791999999999583e-05, 1.458299999999857e-05, 1.429099999999961e-05, 1.4291999999999083e-05, 1.4735999999994365e-05, 1.427700000000004e-05, 1...</msg>
<status status="PASS" starttime="20201115 22:00:33.098" endtime="20201115 22:00:33.126"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:33.136" level="INFO">NAME: 00-overhead-10-set</msg>
<status status="PASS" starttime="20201115 22:00:33.134" endtime="20201115 22:00:33.137"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:33.141" level="INFO">VALUE: [1.4443999999995405e-05, 1.4236000000000804e-05, 1.4791999999999583e-05, 1.458299999999857e-05, 1.429099999999961e-05, 1.4291999999999083e-05, 1.4735999999994365e-05, 1.427700000000004e-05, 1.4681000000002498e-05, 1.4430999999995309e-05, 1.4750000000000874e-05, 1.4277999999999513e-05, 1.4277999999999513e-05, 1.4791999999999583e-05, 1.4958000000002414e-05, 1.4625000000004218e-05, 1.427700000000004e-05, 1.4291000000006548e-05, 1.459699999999814e-05, 1.461099999999771e-05, 1.484699999999839e-05, 1.4973000000001457e-05, 1.4431000000002248e-05, 1.4611000000004648e-05, 1.4945000000002318e-05, 1.4277999999999513e-05, 1.5124999999997779e-05, 1.461099999999771e-05, 1.4638999999996849e-05, 1.4944000000002844e-05, 1.4791999999999583e-05, 1.50689999999995e-05, 1.458299999999857e-05, 1.4930999999995809e-05, 1.4944000000002844e-05, 1.4598000000004552e-05, 1.4263999999999943e-05, 1.4958000000002414e-05, 1.5055999999999403e-05, 1.429099999999961e-05, 1.4458000000001914e-05, 1.5097000000005578e-05, 1.5111000000005148e-05, 1.429099999999961e-05, 1.4958000000002414e-05, 1.4958000000002414e-05, 1.4457999999994975e-05, 1.429099999999961e-05, 1.4750000000000874e-05, 1.4959000000001887e-05]</msg>
<status status="PASS" starttime="20201115 22:00:33.138" endtime="20201115 22:00:33.142"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.127" endtime="20201115 22:00:33.144"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:33.150" endtime="20201115 22:00:33.153"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:33.158" endtime="20201115 22:00:33.180"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.154" endtime="20201115 22:00:33.181"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.146" endtime="20201115 22:00:33.183"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.628" endtime="20201115 22:00:33.184"></status>
</kw>
<msg timestamp="20201115 22:00:33.184" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:33.207" endtime="20201115 22:00:33.238"></status>
</kw>
<msg timestamp="20201115 22:00:33.239" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:33.204" endtime="20201115 22:00:33.239"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:33.245" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:33.241" endtime="20201115 22:00:33.246"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:33.247" endtime="20201115 22:00:33.251"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.196" endtime="20201115 22:00:33.253"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.191" endtime="20201115 22:00:33.254"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:33.270" endtime="20201115 22:00:33.604"></status>
</kw>
<msg timestamp="20201115 22:00:33.611" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040398292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040412903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:33.267" endtime="20201115 22:00:33.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:33.629" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040398292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040412903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:33.614" endtime="20201115 22:00:33.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:33.632" endtime="20201115 22:00:33.638"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.260" endtime="20201115 22:00:33.639"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.255" endtime="20201115 22:00:33.641"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:33.651" level="INFO">${RESULT} = [{'time': 0.040412903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.461099999999771e-05, 'source_diff': 1.461099999999771e-05}, {'time': 0.040845514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:33.642" endtime="20201115 22:00:33.652"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:33.681" level="INFO">${OVERHEAD} = {'diff': [1.461099999999771e-05, 1.4263999999999943e-05, 1.4903000000003608e-05, 1.511099999999821e-05, 1.459699999999814e-05, 1.4915999999996765e-05, 1.4263999999999943e-05, 1.4944000000002844e-05, 1...</msg>
<status status="PASS" starttime="20201115 22:00:33.653" endtime="20201115 22:00:33.682"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:33.692" level="INFO">NAME: 00-overhead-10-set</msg>
<status status="PASS" starttime="20201115 22:00:33.690" endtime="20201115 22:00:33.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:33.698" level="INFO">VALUE: [1.461099999999771e-05, 1.4263999999999943e-05, 1.4903000000003608e-05, 1.511099999999821e-05, 1.459699999999814e-05, 1.4915999999996765e-05, 1.4263999999999943e-05, 1.4944000000002844e-05, 1.4931000000002748e-05, 1.4584000000004982e-05, 1.4445000000001817e-05, 1.5111000000005148e-05, 1.4445000000001817e-05, 1.480499999999968e-05, 1.5124999999997779e-05, 1.4653000000003358e-05, 1.4943999999995905e-05, 1.4959000000001887e-05, 1.4263999999999943e-05, 1.511099999999821e-05, 1.429099999999961e-05, 1.4277999999999513e-05, 1.4459000000001387e-05, 1.480499999999968e-05, 1.4444000000002344e-05, 1.4625000000004218e-05, 1.509699999999864e-05, 1.459699999999814e-05, 1.4945000000002318e-05, 1.461099999999771e-05, 1.4958000000002414e-05, 1.4443999999995405e-05, 1.4778000000000013e-05, 1.4957999999995475e-05, 1.511099999999821e-05, 1.5124999999997779e-05, 1.461099999999771e-05, 1.4611000000004648e-05, 1.511099999999821e-05, 1.4931000000002748e-05, 1.477700000000054e-05, 1.4945000000002318e-05, 1.4263999999999943e-05, 1.4805999999999153e-05, 1.4944000000002844e-05, 1.429099999999961e-05, 1.4277999999999513e-05, 1.4764000000000443e-05, 1.4611000000004648e-05, 1.4958000000002414e-05]</msg>
<status status="PASS" starttime="20201115 22:00:33.695" endtime="20201115 22:00:33.698"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.683" endtime="20201115 22:00:33.700"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:33.706" endtime="20201115 22:00:33.709"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:33.715" endtime="20201115 22:00:33.736"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.710" endtime="20201115 22:00:33.738"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.702" endtime="20201115 22:00:33.739"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.185" endtime="20201115 22:00:33.740"></status>
</kw>
<msg timestamp="20201115 22:00:33.740" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:33.763" endtime="20201115 22:00:33.794"></status>
</kw>
<msg timestamp="20201115 22:00:33.795" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:33.760" endtime="20201115 22:00:33.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:33.801" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:33.798" endtime="20201115 22:00:33.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:33.804" endtime="20201115 22:00:33.807"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.753" endtime="20201115 22:00:33.809"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.747" endtime="20201115 22:00:33.810"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:33.827" endtime="20201115 22:00:34.163"></status>
</kw>
<msg timestamp="20201115 22:00:34.170" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040472375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040486833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:33.823" endtime="20201115 22:00:34.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:34.189" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040472375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040486833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:34.173" endtime="20201115 22:00:34.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:34.191" endtime="20201115 22:00:34.196"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.816" endtime="20201115 22:00:34.198"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.812" endtime="20201115 22:00:34.199"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:34.210" level="INFO">${RESULT} = [{'time': 0.040486833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4458000000001914e-05, 'source_diff': 1.4458000000001914e-05}, {'time': 0.040918472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:34.201" endtime="20201115 22:00:34.211"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:34.240" level="INFO">${OVERHEAD} = {'diff': [1.4458000000001914e-05, 1.4957999999995475e-05, 1.5111000000005148e-05, 1.4722999999994268e-05, 1.4736000000001304e-05, 1.511099999999821e-05, 1.459699999999814e-05, 1.5111000000005148e-05, ...</msg>
<status status="PASS" starttime="20201115 22:00:34.212" endtime="20201115 22:00:34.241"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:34.251" level="INFO">NAME: 00-overhead-10-set</msg>
<status status="PASS" starttime="20201115 22:00:34.249" endtime="20201115 22:00:34.252"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:34.256" level="INFO">VALUE: [1.4458000000001914e-05, 1.4957999999995475e-05, 1.5111000000005148e-05, 1.4722999999994268e-05, 1.4736000000001304e-05, 1.511099999999821e-05, 1.459699999999814e-05, 1.5111000000005148e-05, 1.4263999999999943e-05, 1.4639000000003788e-05, 1.4236000000000804e-05, 1.4277999999999513e-05, 1.4957999999995475e-05, 1.479100000000011e-05, 1.459699999999814e-05, 1.477700000000054e-05, 1.511099999999821e-05, 1.5125000000004718e-05, 1.4598000000004552e-05, 1.511099999999821e-05, 1.4651999999996945e-05, 1.4944000000002844e-05, 1.4958000000002414e-05, 1.4735999999994365e-05, 1.511099999999821e-05, 1.4805999999999153e-05, 1.4750000000000874e-05, 1.4930999999995809e-05, 1.5112000000004622e-05, 1.4277999999999513e-05, 1.4778000000000013e-05, 1.509699999999864e-05, 1.509699999999864e-05, 1.461099999999771e-05, 1.4277999999999513e-05, 1.4430999999995309e-05, 1.4791999999999583e-05, 1.4945000000002318e-05, 1.4444999999994879e-05, 1.4443999999995405e-05, 1.5138000000004814e-05, 1.5125000000004718e-05, 1.5124999999997779e-05, 1.4943999999995905e-05, 1.4791999999999583e-05, 1.4429999999995835e-05, 1.4429999999995835e-05, 1.5111999999997683e-05, 1.426300000000047e-05, 1.4597999999997613e-05]</msg>
<status status="PASS" starttime="20201115 22:00:34.253" endtime="20201115 22:00:34.257"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.242" endtime="20201115 22:00:34.259"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:34.265" endtime="20201115 22:00:34.268"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:34.273" endtime="20201115 22:00:34.295"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.269" endtime="20201115 22:00:34.297"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.261" endtime="20201115 22:00:34.298"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.742" endtime="20201115 22:00:34.299"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.509" endtime="20201115 22:00:34.299"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.507" endtime="20201115 22:00:34.300"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:34.305" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:34.327" endtime="20201115 22:00:34.360"></status>
</kw>
<msg timestamp="20201115 22:00:34.361" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:34.324" endtime="20201115 22:00:34.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:34.367" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:34.363" endtime="20201115 22:00:34.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:34.369" endtime="20201115 22:00:34.383"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.317" endtime="20201115 22:00:34.385"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.311" endtime="20201115 22:00:34.386"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:34.402" endtime="20201115 22:00:34.740"></status>
</kw>
<msg timestamp="20201115 22:00:34.747" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045499319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045514194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:34.399" endtime="20201115 22:00:34.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:34.765" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045499319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045514194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:34.749" endtime="20201115 22:00:34.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:34.768" endtime="20201115 22:00:34.771"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.392" endtime="20201115 22:00:34.773"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.387" endtime="20201115 22:00:34.774"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:34.785" level="INFO">${RESULT} = [{'time': 0.045514194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4874999999997529e-05, 'source_diff': 1.4874999999997529e-05}, {'time': 0.045982972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:34.776" endtime="20201115 22:00:34.785"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:34.815" level="INFO">${OVERHEAD} = {'diff': [1.4874999999997529e-05, 1.4693999999995655e-05, 1.4500000000000624e-05, 1.5055999999999403e-05, 1.5361000000005398e-05, 1.4861000000004898e-05, 1.4527999999999763e-05, 1.4653000000003358e-05...</msg>
<status status="PASS" starttime="20201115 22:00:34.787" endtime="20201115 22:00:34.815"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:34.826" level="INFO">NAME: 00-overhead-11-set</msg>
<status status="PASS" starttime="20201115 22:00:34.823" endtime="20201115 22:00:34.826"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:34.831" level="INFO">VALUE: [1.4874999999997529e-05, 1.4693999999995655e-05, 1.4500000000000624e-05, 1.5055999999999403e-05, 1.5361000000005398e-05, 1.4861000000004898e-05, 1.4527999999999763e-05, 1.4653000000003358e-05, 1.484699999999839e-05, 1.4889000000004038e-05, 1.5193999999996155e-05, 1.4888999999997099e-05, 1.451300000000072e-05, 1.4638999999996849e-05, 1.4861000000004898e-05, 1.4694999999995129e-05, 1.5000000000001124e-05, 1.4875000000004468e-05, 1.5194999999995629e-05, 1.5292000000000083e-05, 1.4708000000002164e-05, 1.4527999999999763e-05, 1.486099999999796e-05, 1.5208000000002664e-05, 1.4833999999998293e-05, 1.452700000000029e-05, 1.5195000000002568e-05, 1.4874999999997529e-05, 1.5347999999998363e-05, 1.4541999999999333e-05, 1.5209000000002137e-05, 1.5028000000000263e-05, 1.5167000000003428e-05, 1.534699999999889e-05, 1.486099999999796e-05, 1.5195000000002568e-05, 1.486099999999796e-05, 1.536099999999152e-05, 1.4695000000009006e-05, 1.5041000000007299e-05, 1.4861000000004898e-05, 1.4709000000001637e-05, 1.5041999999992894e-05, 1.4861000000004898e-05, 1.4458000000008853e-05, 1.5361000000005398e-05, 1.5264000000000943e-05, 1.4527999999999763e-05, 1.4542000000006272e-05, 1.5194999999995629e-05]</msg>
<status status="PASS" starttime="20201115 22:00:34.828" endtime="20201115 22:00:34.832"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.817" endtime="20201115 22:00:34.833"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:34.840" endtime="20201115 22:00:34.842"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:34.848" endtime="20201115 22:00:34.869"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.843" endtime="20201115 22:00:34.871"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.835" endtime="20201115 22:00:34.872"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.306" endtime="20201115 22:00:34.873"></status>
</kw>
<msg timestamp="20201115 22:00:34.874" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:34.896" endtime="20201115 22:00:34.929"></status>
</kw>
<msg timestamp="20201115 22:00:34.930" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:34.893" endtime="20201115 22:00:34.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:34.937" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:34.933" endtime="20201115 22:00:34.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:34.939" endtime="20201115 22:00:34.943"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.886" endtime="20201115 22:00:34.945"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.880" endtime="20201115 22:00:34.946"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:34.962" endtime="20201115 22:00:35.298"></status>
</kw>
<msg timestamp="20201115 22:00:35.304" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040123361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040138542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:34.959" endtime="20201115 22:00:35.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:35.322" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040123361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040138542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:35.307" endtime="20201115 22:00:35.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:35.325" endtime="20201115 22:00:35.330"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.952" endtime="20201115 22:00:35.331"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.947" endtime="20201115 22:00:35.333"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:35.343" level="INFO">${RESULT} = [{'time': 0.040138542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5180999999996059e-05, 'source_diff': 1.5180999999996059e-05}, {'time': 0.040608236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:35.335" endtime="20201115 22:00:35.344"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:35.373" level="INFO">${OVERHEAD} = {'diff': [1.5180999999996059e-05, 1.530500000000018e-05, 1.452700000000029e-05, 1.4875000000004468e-05, 1.5000000000001124e-05, 1.4527999999999763e-05, 1.5180000000003524e-05, 1.4708999999994699e-05, ...</msg>
<status status="PASS" starttime="20201115 22:00:35.346" endtime="20201115 22:00:35.374"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:35.384" level="INFO">NAME: 00-overhead-11-set</msg>
<status status="PASS" starttime="20201115 22:00:35.382" endtime="20201115 22:00:35.385"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:35.390" level="INFO">VALUE: [1.5180999999996059e-05, 1.530500000000018e-05, 1.452700000000029e-05, 1.4875000000004468e-05, 1.5000000000001124e-05, 1.4527999999999763e-05, 1.5180000000003524e-05, 1.4708999999994699e-05, 1.4527999999999763e-05, 1.5028000000000263e-05, 1.537499999999803e-05, 1.536099999999846e-05, 1.4875000000004468e-05, 1.5389000000004538e-05, 1.504100000000036e-05, 1.4694000000002594e-05, 1.4694999999995129e-05, 1.536099999999846e-05, 1.502700000000079e-05, 1.5014000000000693e-05, 1.4707999999995225e-05, 1.502700000000079e-05, 1.4681000000002498e-05, 1.4514000000000193e-05, 1.4874999999997529e-05, 1.5151999999997445e-05, 1.5028000000000263e-05, 1.4861999999997433e-05, 1.4874999999997529e-05, 1.4514000000000193e-05, 1.4695000000002068e-05, 1.4902999999996669e-05, 1.5292000000000083e-05, 1.5194000000003094e-05, 1.5193999999996155e-05, 1.4500000000000624e-05, 1.486099999999796e-05, 1.5028000000000263e-05, 1.4693999999995655e-05, 1.5208999999995199e-05, 1.486099999999796e-05, 1.4874999999997529e-05, 1.452700000000029e-05, 1.5028000000000263e-05, 1.455499999999943e-05, 1.4861000000004898e-05, 1.4874999999997529e-05, 1.4874999999997529e-05, 1.5193999999996155e-05, 1.5209000000002137e-05]</msg>
<status status="PASS" starttime="20201115 22:00:35.387" endtime="20201115 22:00:35.390"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.375" endtime="20201115 22:00:35.392"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:35.398" endtime="20201115 22:00:35.401"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:35.407" endtime="20201115 22:00:35.428"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.402" endtime="20201115 22:00:35.430"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.394" endtime="20201115 22:00:35.431"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.875" endtime="20201115 22:00:35.432"></status>
</kw>
<msg timestamp="20201115 22:00:35.432" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:35.456" endtime="20201115 22:00:35.489"></status>
</kw>
<msg timestamp="20201115 22:00:35.490" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:35.452" endtime="20201115 22:00:35.490"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:35.496" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:35.492" endtime="20201115 22:00:35.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:35.498" endtime="20201115 22:00:35.502"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.445" endtime="20201115 22:00:35.504"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.439" endtime="20201115 22:00:35.505"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:35.521" endtime="20201115 22:00:35.855"></status>
</kw>
<msg timestamp="20201115 22:00:35.862" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041117486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041132167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:35.518" endtime="20201115 22:00:35.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:35.880" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041117486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041132167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:35.865" endtime="20201115 22:00:35.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:35.883" endtime="20201115 22:00:35.888"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.511" endtime="20201115 22:00:35.890"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.506" endtime="20201115 22:00:35.891"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:35.902" level="INFO">${RESULT} = [{'time': 0.041132167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4680999999995559e-05, 'source_diff': 1.4680999999995559e-05}, {'time': 0.041602167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:35.893" endtime="20201115 22:00:35.902"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:35.931" level="INFO">${OVERHEAD} = {'diff': [1.4680999999995559e-05, 1.5014000000000693e-05, 1.4861000000004898e-05, 1.486099999999796e-05, 1.4903000000003608e-05, 1.5181000000002998e-05, 1.5028000000000263e-05, 1.4541999999999333e-05,...</msg>
<status status="PASS" starttime="20201115 22:00:35.904" endtime="20201115 22:00:35.932"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:35.942" level="INFO">NAME: 00-overhead-11-set</msg>
<status status="PASS" starttime="20201115 22:00:35.940" endtime="20201115 22:00:35.943"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:35.948" level="INFO">VALUE: [1.4680999999995559e-05, 1.5014000000000693e-05, 1.4861000000004898e-05, 1.486099999999796e-05, 1.4903000000003608e-05, 1.5181000000002998e-05, 1.5028000000000263e-05, 1.4541999999999333e-05, 1.5041999999999833e-05, 1.4681000000002498e-05, 1.4861000000004898e-05, 1.5028000000000263e-05, 1.486099999999796e-05, 1.5028000000000263e-05, 1.5207999999995725e-05, 1.537499999999803e-05, 1.530500000000018e-05, 1.4709000000001637e-05, 1.4931000000002748e-05, 1.5028000000000263e-05, 1.5028000000000263e-05, 1.4681000000002498e-05, 1.5207999999995725e-05, 1.536099999999846e-05, 1.5028000000000263e-05, 1.484699999999839e-05, 1.5013999999993755e-05, 1.484699999999839e-05, 1.486099999999796e-05, 1.4874999999997529e-05, 1.486099999999796e-05, 1.4638999999996849e-05, 1.5180000000003524e-05, 1.4694000000002594e-05, 1.4541999999999333e-05, 1.4679999999996085e-05, 1.5207999999995725e-05, 1.5250000000001374e-05, 1.4708999999994699e-05, 1.5028000000000263e-05, 1.5193999999996155e-05, 1.5027999999993324e-05, 1.4679999999996085e-05, 1.5041999999999833e-05, 1.5014000000000693e-05, 1.534699999999889e-05, 1.484699999999839e-05, 1.5181000000002998e-05, 1.4861000000004898e-05, 1.4874999999997529e-05]</msg>
<status status="PASS" starttime="20201115 22:00:35.945" endtime="20201115 22:00:35.948"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.933" endtime="20201115 22:00:35.950"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:35.956" endtime="20201115 22:00:35.959"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:35.965" endtime="20201115 22:00:35.987"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.960" endtime="20201115 22:00:35.989"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.952" endtime="20201115 22:00:35.990"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.434" endtime="20201115 22:00:35.991"></status>
</kw>
<msg timestamp="20201115 22:00:35.991" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:36.015" endtime="20201115 22:00:36.048"></status>
</kw>
<msg timestamp="20201115 22:00:36.049" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:36.011" endtime="20201115 22:00:36.049"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:36.055" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:36.051" endtime="20201115 22:00:36.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:36.058" endtime="20201115 22:00:36.062"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.004" endtime="20201115 22:00:36.064"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.998" endtime="20201115 22:00:36.065"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:36.081" endtime="20201115 22:00:36.416"></status>
</kw>
<msg timestamp="20201115 22:00:36.423" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041078111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041093097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:36.078" endtime="20201115 22:00:36.423"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:36.440" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041078111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041093097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:36.425" endtime="20201115 22:00:36.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:36.443" endtime="20201115 22:00:36.448"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.071" endtime="20201115 22:00:36.450"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.066" endtime="20201115 22:00:36.451"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:36.462" level="INFO">${RESULT} = [{'time': 0.041093097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4986000000001554e-05, 'source_diff': 1.4986000000001554e-05}, {'time': 0.041563847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:36.453" endtime="20201115 22:00:36.462"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:36.492" level="INFO">${OVERHEAD} = {'diff': [1.4986000000001554e-05, 1.5208000000002664e-05, 1.4875000000004468e-05, 1.479100000000011e-05, 1.452700000000029e-05, 1.4874999999997529e-05, 1.502700000000079e-05, 1.4874999999997529e-05, 1...</msg>
<status status="PASS" starttime="20201115 22:00:36.464" endtime="20201115 22:00:36.492"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:36.503" level="INFO">NAME: 00-overhead-11-set</msg>
<status status="PASS" starttime="20201115 22:00:36.500" endtime="20201115 22:00:36.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:36.508" level="INFO">VALUE: [1.4986000000001554e-05, 1.5208000000002664e-05, 1.4875000000004468e-05, 1.479100000000011e-05, 1.452700000000029e-05, 1.4874999999997529e-05, 1.502700000000079e-05, 1.4874999999997529e-05, 1.5208999999995199e-05, 1.504100000000036e-05, 1.5180999999996059e-05, 1.4833000000005758e-05, 1.5041999999999833e-05, 1.4889000000004038e-05, 1.5207999999995725e-05, 1.5208999999995199e-05, 1.4874999999997529e-05, 1.5347000000005828e-05, 1.4528000000006702e-05, 1.537499999999803e-05, 1.4500000000000624e-05, 1.4680000000003024e-05, 1.5195000000002568e-05, 1.5415999999997265e-05, 1.5179999999996585e-05, 1.5193999999996155e-05, 1.5195000000002568e-05, 1.504100000000036e-05, 1.458299999999857e-05, 1.4500000000000624e-05, 1.4541999999999333e-05, 1.5194000000003094e-05, 1.4527999999999763e-05, 1.5193999999996155e-05, 1.4472000000001484e-05, 1.53889999999976e-05, 1.5124999999997779e-05, 1.5125000000004718e-05, 1.4874999999997529e-05, 1.4861000000004898e-05, 1.4667000000002928e-05, 1.5165999999997015e-05, 1.484699999999839e-05, 1.5347999999998363e-05, 1.5028000000000263e-05, 1.4694000000002594e-05, 1.534699999999889e-05, 1.5041000000007299e-05, 1.4693999999995655e-05, 1.484699999999839e-05]</msg>
<status status="PASS" starttime="20201115 22:00:36.505" endtime="20201115 22:00:36.509"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.494" endtime="20201115 22:00:36.511"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:36.517" endtime="20201115 22:00:36.520"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:36.526" endtime="20201115 22:00:36.548"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.521" endtime="20201115 22:00:36.550"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.513" endtime="20201115 22:00:36.551"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.992" endtime="20201115 22:00:36.552"></status>
</kw>
<msg timestamp="20201115 22:00:36.552" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:36.576" endtime="20201115 22:00:36.608"></status>
</kw>
<msg timestamp="20201115 22:00:36.609" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:36.572" endtime="20201115 22:00:36.610"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:36.616" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:36.612" endtime="20201115 22:00:36.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:36.618" endtime="20201115 22:00:36.622"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.565" endtime="20201115 22:00:36.623"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.559" endtime="20201115 22:00:36.625"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:36.641" endtime="20201115 22:00:36.976"></status>
</kw>
<msg timestamp="20201115 22:00:36.983" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041157403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041172111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:36.638" endtime="20201115 22:00:36.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:37.001" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041157403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041172111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:36.985" endtime="20201115 22:00:37.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:37.003" endtime="20201115 22:00:37.011"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.631" endtime="20201115 22:00:37.012"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.626" endtime="20201115 22:00:37.014"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:37.024" level="INFO">${RESULT} = [{'time': 0.041172111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4707999999995225e-05, 'source_diff': 1.4707999999995225e-05}, {'time': 0.041644792, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:37.015" endtime="20201115 22:00:37.025"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:37.054" level="INFO">${OVERHEAD} = {'diff': [1.4707999999995225e-05, 1.4847999999997863e-05, 1.4694000000002594e-05, 1.461099999999771e-05, 1.4487000000000527e-05, 1.5375000000004968e-05, 1.4527999999999763e-05, 1.5347000000005828e-05,...</msg>
<status status="PASS" starttime="20201115 22:00:37.026" endtime="20201115 22:00:37.054"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:37.065" level="INFO">NAME: 00-overhead-11-set</msg>
<status status="PASS" starttime="20201115 22:00:37.063" endtime="20201115 22:00:37.066"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:37.071" level="INFO">VALUE: [1.4707999999995225e-05, 1.4847999999997863e-05, 1.4694000000002594e-05, 1.461099999999771e-05, 1.4487000000000527e-05, 1.5375000000004968e-05, 1.4527999999999763e-05, 1.5347000000005828e-05, 1.536099999999846e-05, 1.4695000000002068e-05, 1.4874999999997529e-05, 1.536099999999846e-05, 1.534699999999889e-05, 1.4861000000004898e-05, 1.5208000000002664e-05, 1.5222000000002234e-05, 1.5375000000004968e-05, 1.4694000000002594e-05, 1.5041999999999833e-05, 1.5069999999998973e-05, 1.5028000000000263e-05, 1.537499999999803e-05, 1.4458000000001914e-05, 1.5208000000002664e-05, 1.5041999999999833e-05, 1.5193999999996155e-05, 1.4847000000005328e-05, 1.4973000000001457e-05, 1.5167000000003428e-05, 1.454099999999986e-05, 1.5055999999999403e-05, 1.4695000000002068e-05, 1.4750000000000874e-05, 1.4875000000004468e-05, 1.4527999999999763e-05, 1.536099999999846e-05, 1.4874999999997529e-05, 1.5375000000004968e-05, 1.4861999999997433e-05, 1.502700000000079e-05, 1.4514000000000193e-05, 1.484699999999839e-05, 1.5194000000003094e-05, 1.486099999999796e-05, 1.537499999999803e-05, 1.4861000000004898e-05, 1.4598000000004552e-05, 1.4874999999997529e-05, 1.452700000000029e-05, 1.4694999999995129e-05]</msg>
<status status="PASS" starttime="20201115 22:00:37.068" endtime="20201115 22:00:37.072"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.056" endtime="20201115 22:00:37.074"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:37.081" endtime="20201115 22:00:37.083"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:37.089" endtime="20201115 22:00:37.111"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.085" endtime="20201115 22:00:37.113"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.076" endtime="20201115 22:00:37.115"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.554" endtime="20201115 22:00:37.115"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.302" endtime="20201115 22:00:37.116"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.301" endtime="20201115 22:00:37.116"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:37.121" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:37.143" endtime="20201115 22:00:37.178"></status>
</kw>
<msg timestamp="20201115 22:00:37.179" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:37.140" endtime="20201115 22:00:37.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:37.186" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:37.182" endtime="20201115 22:00:37.186"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:37.188" endtime="20201115 22:00:37.192"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.133" endtime="20201115 22:00:37.193"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.127" endtime="20201115 22:00:37.195"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:37.211" endtime="20201115 22:00:37.548"></status>
</kw>
<msg timestamp="20201115 22:00:37.555" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045813778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045829389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:37.208" endtime="20201115 22:00:37.556"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:37.573" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045813778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045829389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:37.558" endtime="20201115 22:00:37.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:37.576" endtime="20201115 22:00:37.579"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.200" endtime="20201115 22:00:37.581"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.196" endtime="20201115 22:00:37.582"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:37.593" level="INFO">${RESULT} = [{'time': 0.045829389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.561099999999871e-05, 'source_diff': 1.561099999999871e-05}, {'time': 0.046338111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:37.584" endtime="20201115 22:00:37.593"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:37.623" level="INFO">${OVERHEAD} = {'diff': [1.561099999999871e-05, 1.5125000000004718e-05, 1.5124999999997779e-05, 1.479100000000011e-05, 1.4957999999995475e-05, 1.4929999999996335e-05, 1.5000000000001124e-05, 1.511099999999821e-05, 1...</msg>
<status status="PASS" starttime="20201115 22:00:37.595" endtime="20201115 22:00:37.623"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:37.634" level="INFO">NAME: 00-overhead-12-set</msg>
<status status="PASS" starttime="20201115 22:00:37.631" endtime="20201115 22:00:37.635"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:37.640" level="INFO">VALUE: [1.561099999999871e-05, 1.5125000000004718e-05, 1.5124999999997779e-05, 1.479100000000011e-05, 1.4957999999995475e-05, 1.4929999999996335e-05, 1.5000000000001124e-05, 1.511099999999821e-05, 1.559699999999914e-05, 1.479100000000011e-05, 1.5124999999997779e-05, 1.4916999999996239e-05, 1.5292000000000083e-05, 1.4930000000003274e-05, 1.4944999999995379e-05, 1.4805999999999153e-05, 1.5681000000003498e-05, 1.4944000000002844e-05, 1.5625000000005218e-05, 1.5111999999997683e-05, 1.5431000000003248e-05, 1.5278000000000513e-05, 1.5444000000003344e-05, 1.5569e-05, 1.5111000000005148e-05, 1.5443999999996405e-05, 1.544499999999588e-05, 1.4778000000000013e-05, 1.547299999999502e-05, 1.4929999999996335e-05, 1.558299999999957e-05, 1.540299999999717e-05, 1.5459000000002387e-05, 1.5430000000010713e-05, 1.4736000000001304e-05, 1.5625000000005218e-05, 1.5292000000000083e-05, 1.5152000000004384e-05, 1.5625000000005218e-05, 1.556900000000694e-05, 1.544499999998894e-05, 1.5277999999993574e-05, 1.5264000000000943e-05, 1.5292000000000083e-05, 1.5138999999997349e-05, 1.5485999999995115e-05, 1.4973000000001457e-05, 1.4972000000001984e-05, 1.5152000000004384e-05, 1.5597000000006078e-05]</msg>
<status status="PASS" starttime="20201115 22:00:37.636" endtime="20201115 22:00:37.641"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.625" endtime="20201115 22:00:37.642"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:37.649" endtime="20201115 22:00:37.651"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:37.657" endtime="20201115 22:00:37.679"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.652" endtime="20201115 22:00:37.680"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.644" endtime="20201115 22:00:37.682"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.122" endtime="20201115 22:00:37.683"></status>
</kw>
<msg timestamp="20201115 22:00:37.683" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:37.706" endtime="20201115 22:00:37.741"></status>
</kw>
<msg timestamp="20201115 22:00:37.742" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:37.702" endtime="20201115 22:00:37.742"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:37.748" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:37.744" endtime="20201115 22:00:37.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:37.750" endtime="20201115 22:00:37.754"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.695" endtime="20201115 22:00:37.756"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.690" endtime="20201115 22:00:37.757"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:37.775" endtime="20201115 22:00:38.110"></status>
</kw>
<msg timestamp="20201115 22:00:38.117" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040669653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040684403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:37.771" endtime="20201115 22:00:38.118"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:38.136" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040669653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040684403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:38.120" endtime="20201115 22:00:38.137"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:38.139" endtime="20201115 22:00:38.144"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.763" endtime="20201115 22:00:38.146"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.758" endtime="20201115 22:00:38.147"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:38.157" level="INFO">${RESULT} = [{'time': 0.040684403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4750000000000874e-05, 'source_diff': 1.4750000000000874e-05}, {'time': 0.041198194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:38.149" endtime="20201115 22:00:38.158"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:38.188" level="INFO">${OVERHEAD} = {'diff': [1.4750000000000874e-05, 1.527700000000104e-05, 1.5278000000000513e-05, 1.509699999999864e-05, 1.561099999999871e-05, 1.5429999999996835e-05, 1.511099999999821e-05, 1.5264000000000943e-05, 1....</msg>
<status status="PASS" starttime="20201115 22:00:38.159" endtime="20201115 22:00:38.189"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:38.199" level="INFO">NAME: 00-overhead-12-set</msg>
<status status="PASS" starttime="20201115 22:00:38.197" endtime="20201115 22:00:38.200"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:38.205" level="INFO">VALUE: [1.4750000000000874e-05, 1.527700000000104e-05, 1.5278000000000513e-05, 1.509699999999864e-05, 1.561099999999871e-05, 1.5429999999996835e-05, 1.511099999999821e-05, 1.5264000000000943e-05, 1.5292000000000083e-05, 1.530500000000018e-05, 1.5278000000000513e-05, 1.5625000000005218e-05, 1.561099999999871e-05, 1.5611000000005648e-05, 1.4764000000000443e-05, 1.5207999999995725e-05, 1.544499999999588e-05, 1.5097999999998113e-05, 1.5431000000003248e-05, 1.543099999999631e-05, 1.5264000000000943e-05, 1.5278000000000513e-05, 1.5319999999999223e-05, 1.5444000000003344e-05, 1.4791999999999583e-05, 1.5278000000000513e-05, 1.5457999999995975e-05, 1.4778000000000013e-05, 1.5431000000003248e-05, 1.5292000000000083e-05, 1.559699999999914e-05, 1.5611999999998183e-05, 1.481899999999925e-05, 1.5611999999998183e-05, 1.5292000000000083e-05, 1.5179999999996585e-05, 1.5153000000003858e-05, 1.511099999999821e-05, 1.4945000000002318e-05, 1.5278000000000513e-05, 1.5625000000005218e-05, 1.4944999999995379e-05, 1.4958000000002414e-05, 1.5457999999995975e-05, 1.5389000000004538e-05, 1.561099999999871e-05, 1.5500000000001624e-05, 1.5138999999997349e-05, 1.4945000000002318e-05, 1.5429999999996835e-05]</msg>
<status status="PASS" starttime="20201115 22:00:38.201" endtime="20201115 22:00:38.206"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.190" endtime="20201115 22:00:38.207"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:38.213" endtime="20201115 22:00:38.216"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:38.222" endtime="20201115 22:00:38.243"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.217" endtime="20201115 22:00:38.245"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.209" endtime="20201115 22:00:38.246"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.684" endtime="20201115 22:00:38.247"></status>
</kw>
<msg timestamp="20201115 22:00:38.248" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:38.270" endtime="20201115 22:00:38.305"></status>
</kw>
<msg timestamp="20201115 22:00:38.306" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:38.267" endtime="20201115 22:00:38.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:38.312" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:38.308" endtime="20201115 22:00:38.313"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:38.315" endtime="20201115 22:00:38.318"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.260" endtime="20201115 22:00:38.320"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.254" endtime="20201115 22:00:38.321"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:38.338" endtime="20201115 22:00:38.683"></status>
</kw>
<msg timestamp="20201115 22:00:38.689" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040447458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040462167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:38.334" endtime="20201115 22:00:38.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:38.707" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040447458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040462167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:38.692" endtime="20201115 22:00:38.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:38.710" endtime="20201115 22:00:38.715"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.327" endtime="20201115 22:00:38.717"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.323" endtime="20201115 22:00:38.718"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:38.729" level="INFO">${RESULT} = [{'time': 0.040462167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4709000000001637e-05, 'source_diff': 1.4709000000001637e-05}, {'time': 0.040974972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:38.720" endtime="20201115 22:00:38.730"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:38.759" level="INFO">${OVERHEAD} = {'diff': [1.4709000000001637e-05, 1.562499999999828e-05, 1.4958000000002414e-05, 1.4917000000003178e-05, 1.5278000000000513e-05, 1.4764000000000443e-05, 1.5416000000004204e-05, 1.5444000000003344e-05,...</msg>
<status status="PASS" starttime="20201115 22:00:38.731" endtime="20201115 22:00:38.760"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:38.770" level="INFO">NAME: 00-overhead-12-set</msg>
<status status="PASS" starttime="20201115 22:00:38.768" endtime="20201115 22:00:38.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:38.776" level="INFO">VALUE: [1.4709000000001637e-05, 1.562499999999828e-05, 1.4958000000002414e-05, 1.4917000000003178e-05, 1.5278000000000513e-05, 1.4764000000000443e-05, 1.5416000000004204e-05, 1.5444000000003344e-05, 1.526300000000147e-05, 1.562499999999828e-05, 1.561099999999871e-05, 1.530500000000018e-05, 1.559699999999914e-05, 1.5264000000000943e-05, 1.4929999999996335e-05, 1.562499999999828e-05, 1.5485999999995115e-05, 1.561099999999871e-05, 1.5138999999997349e-05, 1.561099999999871e-05, 1.4916000000003704e-05, 1.4944000000002844e-05, 1.5625000000005218e-05, 1.5138999999997349e-05, 1.5250000000001374e-05, 1.5431000000003248e-05, 1.4944000000002844e-05, 1.5443999999996405e-05, 1.5124999999997779e-05, 1.562499999999828e-05, 1.5278000000000513e-05, 1.5430000000003774e-05, 1.5443999999996405e-05, 1.509699999999864e-05, 1.511099999999821e-05, 1.4764000000000443e-05, 1.5124999999997779e-05, 1.562499999999828e-05, 1.5292000000000083e-05, 1.559699999999914e-05, 1.5278000000000513e-05, 1.5305999999999653e-05, 1.529100000000061e-05, 1.4958999999994949e-05, 1.5097000000005578e-05, 1.561099999999871e-05, 1.561099999999871e-05, 1.4929999999996335e-05, 1.5625000000005218e-05, 1.5443999999989466e-05]</msg>
<status status="PASS" starttime="20201115 22:00:38.772" endtime="20201115 22:00:38.776"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.761" endtime="20201115 22:00:38.778"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:38.784" endtime="20201115 22:00:38.787"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:38.793" endtime="20201115 22:00:38.815"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.788" endtime="20201115 22:00:38.817"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.780" endtime="20201115 22:00:38.818"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.249" endtime="20201115 22:00:38.819"></status>
</kw>
<msg timestamp="20201115 22:00:38.820" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:38.842" endtime="20201115 22:00:38.878"></status>
</kw>
<msg timestamp="20201115 22:00:38.879" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:38.839" endtime="20201115 22:00:38.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:38.885" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:38.881" endtime="20201115 22:00:38.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:38.887" endtime="20201115 22:00:38.891"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.832" endtime="20201115 22:00:38.893"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.826" endtime="20201115 22:00:38.894"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:38.910" endtime="20201115 22:00:39.259"></status>
</kw>
<msg timestamp="20201115 22:00:39.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040841986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040856931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:38.907" endtime="20201115 22:00:39.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:39.283" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040841986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040856931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:39.268" endtime="20201115 22:00:39.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:39.286" endtime="20201115 22:00:39.294"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.900" endtime="20201115 22:00:39.295"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.896" endtime="20201115 22:00:39.297"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:39.307" level="INFO">${RESULT} = [{'time': 0.040856931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4945000000002318e-05, 'source_diff': 1.4945000000002318e-05}, {'time': 0.041368708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:39.298" endtime="20201115 22:00:39.308"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:39.337" level="INFO">${OVERHEAD} = {'diff': [1.4945000000002318e-05, 1.4929999999996335e-05, 1.5111000000005148e-05, 1.5277999999993574e-05, 1.5459000000002387e-05, 1.529100000000061e-05, 1.4944000000002844e-05, 1.4903000000003608e-05,...</msg>
<status status="PASS" starttime="20201115 22:00:39.309" endtime="20201115 22:00:39.337"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:39.348" level="INFO">NAME: 00-overhead-12-set</msg>
<status status="PASS" starttime="20201115 22:00:39.346" endtime="20201115 22:00:39.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:39.353" level="INFO">VALUE: [1.4945000000002318e-05, 1.4929999999996335e-05, 1.5111000000005148e-05, 1.5277999999993574e-05, 1.5459000000002387e-05, 1.529100000000061e-05, 1.4944000000002844e-05, 1.4903000000003608e-05, 1.4943999999995905e-05, 1.562499999999828e-05, 1.4764000000000443e-05, 1.529100000000061e-05, 1.561099999999871e-05, 1.543099999999631e-05, 1.559699999999914e-05, 1.508299999999907e-05, 1.5431000000003248e-05, 1.5124999999997779e-05, 1.4944000000002844e-05, 1.5278000000000513e-05, 1.5277999999993574e-05, 1.527700000000104e-05, 1.527700000000104e-05, 1.5278000000000513e-05, 1.561099999999871e-05, 1.561099999999871e-05, 1.5429999999996835e-05, 1.511099999999821e-05, 1.5445000000002818e-05, 1.5486000000002054e-05, 1.483299999999882e-05, 1.5291999999993144e-05, 1.5459000000002387e-05, 1.5583999999999043e-05, 1.5124999999997779e-05, 1.4778000000000013e-05, 1.540299999999717e-05, 1.5236000000001804e-05, 1.509699999999864e-05, 1.476300000000097e-05, 1.5292000000000083e-05, 1.4929999999996335e-05, 1.5221999999995295e-05, 1.4777999999993074e-05, 1.4944000000002844e-05, 1.5485999999995115e-05, 1.545899999999545e-05, 1.508299999999907e-05, 1.5264000000000943e-05, 1.4945000000002318e-05]</msg>
<status status="PASS" starttime="20201115 22:00:39.350" endtime="20201115 22:00:39.354"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.339" endtime="20201115 22:00:39.356"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:39.362" endtime="20201115 22:00:39.364"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:39.370" endtime="20201115 22:00:39.392"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.366" endtime="20201115 22:00:39.393"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.357" endtime="20201115 22:00:39.395"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.821" endtime="20201115 22:00:39.396"></status>
</kw>
<msg timestamp="20201115 22:00:39.396" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:39.420" endtime="20201115 22:00:39.456"></status>
</kw>
<msg timestamp="20201115 22:00:39.457" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:39.417" endtime="20201115 22:00:39.457"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:39.463" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:39.459" endtime="20201115 22:00:39.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:39.465" endtime="20201115 22:00:39.469"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.410" endtime="20201115 22:00:39.471"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.402" endtime="20201115 22:00:39.472"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:39.488" endtime="20201115 22:00:39.826"></status>
</kw>
<msg timestamp="20201115 22:00:39.833" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042470125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042485569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:39.485" endtime="20201115 22:00:39.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:39.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042470125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042485569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:39.836" endtime="20201115 22:00:39.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:39.854" endtime="20201115 22:00:39.859"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.478" endtime="20201115 22:00:39.861"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.473" endtime="20201115 22:00:39.862"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:39.873" level="INFO">${RESULT} = [{'time': 0.042485569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5444000000003344e-05, 'source_diff': 1.5444000000003344e-05}, {'time': 0.042995417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:39.864" endtime="20201115 22:00:39.873"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:39.903" level="INFO">${OVERHEAD} = {'diff': [1.5444000000003344e-05, 1.5124999999997779e-05, 1.4763999999993505e-05, 1.4944999999995379e-05, 1.4931000000002748e-05, 1.5069999999998973e-05, 1.5611000000005648e-05, 1.5124999999997779e-05...</msg>
<status status="PASS" starttime="20201115 22:00:39.875" endtime="20201115 22:00:39.903"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:39.913" level="INFO">NAME: 00-overhead-12-set</msg>
<status status="PASS" starttime="20201115 22:00:39.911" endtime="20201115 22:00:39.914"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:39.919" level="INFO">VALUE: [1.5444000000003344e-05, 1.5124999999997779e-05, 1.4763999999993505e-05, 1.4944999999995379e-05, 1.4931000000002748e-05, 1.5069999999998973e-05, 1.5611000000005648e-05, 1.5124999999997779e-05, 1.5000000000001124e-05, 1.5625000000005218e-05, 1.4764000000000443e-05, 1.5152999999996919e-05, 1.5443999999996405e-05, 1.4930999999995809e-05, 1.4861999999997433e-05, 1.5625000000005218e-05, 1.5569e-05, 1.4945000000002318e-05, 1.5431000000003248e-05, 1.5444000000003344e-05, 1.536099999999846e-05, 1.5278000000000513e-05, 1.5125000000004718e-05, 1.5125000000004718e-05, 1.4945000000002318e-05, 1.562499999999828e-05, 1.479100000000011e-05, 1.5041999999999833e-05, 1.5445000000002818e-05, 1.5000000000001124e-05, 1.5458000000002914e-05, 1.5347999999998363e-05, 1.4708000000002164e-05, 1.4931000000002748e-05, 1.5125000000004718e-05, 1.4972999999994518e-05, 1.5665999999997515e-05, 1.509699999999864e-05, 1.4930999999995809e-05, 1.5292000000000083e-05, 1.4778000000006952e-05, 1.4945000000002318e-05, 1.5098000000005052e-05, 1.5443999999989466e-05, 1.4736000000001304e-05, 1.4944000000002844e-05, 1.5665999999997515e-05, 1.562499999999134e-05, 1.479100000000011e-05, 1.512499999999084e-05]</msg>
<status status="PASS" starttime="20201115 22:00:39.916" endtime="20201115 22:00:39.920"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.905" endtime="20201115 22:00:39.921"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:39.928" endtime="20201115 22:00:39.930"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:39.936" endtime="20201115 22:00:39.957"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.931" endtime="20201115 22:00:39.959"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.923" endtime="20201115 22:00:39.960"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.397" endtime="20201115 22:00:39.961"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.119" endtime="20201115 22:00:39.962"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.117" endtime="20201115 22:00:39.962"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:39.967" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:39.990" endtime="20201115 22:00:40.026"></status>
</kw>
<msg timestamp="20201115 22:00:40.027" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:39.986" endtime="20201115 22:00:40.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:40.033" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:40.029" endtime="20201115 22:00:40.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:40.036" endtime="20201115 22:00:40.039"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.979" endtime="20201115 22:00:40.041"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.974" endtime="20201115 22:00:40.043"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:40.060" endtime="20201115 22:00:40.396"></status>
</kw>
<msg timestamp="20201115 22:00:40.403" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045564375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045579583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:40.056" endtime="20201115 22:00:40.403"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:40.421" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045564375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045579583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:40.405" endtime="20201115 22:00:40.422"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:40.424" endtime="20201115 22:00:40.427"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.049" endtime="20201115 22:00:40.429"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.045" endtime="20201115 22:00:40.430"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:40.441" level="INFO">${RESULT} = [{'time': 0.045579583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5208000000002664e-05, 'source_diff': 1.5208000000002664e-05}, {'time': 0.046126306, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:40.432" endtime="20201115 22:00:40.441"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:40.471" level="INFO">${OVERHEAD} = {'diff': [1.5208000000002664e-05, 1.5041999999999833e-05, 1.5707999999996225e-05, 1.5194000000003094e-05, 1.5680000000004024e-05, 1.5041999999999833e-05, 1.533299999999932e-05, 1.5000000000001124e-05,...</msg>
<status status="PASS" starttime="20201115 22:00:40.443" endtime="20201115 22:00:40.472"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:40.482" level="INFO">NAME: 00-overhead-13-set</msg>
<status status="PASS" starttime="20201115 22:00:40.480" endtime="20201115 22:00:40.483"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:40.488" level="INFO">VALUE: [1.5208000000002664e-05, 1.5041999999999833e-05, 1.5707999999996225e-05, 1.5194000000003094e-05, 1.5680000000004024e-05, 1.5041999999999833e-05, 1.533299999999932e-05, 1.5000000000001124e-05, 1.5833999999999293e-05, 1.5223000000001707e-05, 1.5680000000004024e-05, 1.5514000000001194e-05, 1.5514000000001194e-05, 1.5693999999996655e-05, 1.5471999999995545e-05, 1.5693999999996655e-05, 1.5194000000003094e-05, 1.502700000000079e-05, 1.5681000000003498e-05, 1.536099999999846e-05, 1.5665999999997515e-05, 1.5528000000000763e-05, 1.4943999999995905e-05, 1.5680000000004024e-05, 1.586099999999896e-05, 1.587499999999853e-05, 1.531899999999975e-05, 1.5194999999995629e-05, 1.5736000000002304e-05, 1.584699999999939e-05, 1.536099999999846e-05, 1.536099999999152e-05, 1.5193999999996155e-05, 1.5028000000000263e-05, 1.587499999999853e-05, 1.5485999999995115e-05, 1.5000000000001124e-05, 1.5513999999994255e-05, 1.587499999999853e-05, 1.5693999999996655e-05, 1.5012999999994281e-05, 1.5181000000002998e-05, 1.5513999999994255e-05, 1.5347999999998363e-05, 1.5528000000000763e-05, 1.583299999999288e-05, 1.5514000000008132e-05, 1.5195000000009506e-05, 1.536099999999152e-05, 1.5528000000000763e-05]</msg>
<status status="PASS" starttime="20201115 22:00:40.485" endtime="20201115 22:00:40.488"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.473" endtime="20201115 22:00:40.490"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:40.496" endtime="20201115 22:00:40.499"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:40.504" endtime="20201115 22:00:40.526"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.500" endtime="20201115 22:00:40.528"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.492" endtime="20201115 22:00:40.529"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.968" endtime="20201115 22:00:40.530"></status>
</kw>
<msg timestamp="20201115 22:00:40.530" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:40.553" endtime="20201115 22:00:40.590"></status>
</kw>
<msg timestamp="20201115 22:00:40.591" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:40.550" endtime="20201115 22:00:40.591"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:40.598" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:40.593" endtime="20201115 22:00:40.598"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:40.600" endtime="20201115 22:00:40.604"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.543" endtime="20201115 22:00:40.605"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.537" endtime="20201115 22:00:40.607"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:40.623" endtime="20201115 22:00:40.956"></status>
</kw>
<msg timestamp="20201115 22:00:40.963" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040405625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040421347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:40.620" endtime="20201115 22:00:40.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:40.980" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040405625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040421347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:40.965" endtime="20201115 22:00:40.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:40.983" endtime="20201115 22:00:40.988"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.613" endtime="20201115 22:00:40.990"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.608" endtime="20201115 22:00:40.991"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:41.002" level="INFO">${RESULT} = [{'time': 0.040421347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5722000000002734e-05, 'source_diff': 1.5722000000002734e-05}, {'time': 0.040971167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:40.993" endtime="20201115 22:00:41.003"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:41.032" level="INFO">${OVERHEAD} = {'diff': [1.5722000000002734e-05, 1.5875000000005468e-05, 1.5528000000000763e-05, 1.5180999999996059e-05, 1.554100000000086e-05, 1.531899999999975e-05, 1.534699999999889e-05, 1.5499999999994685e-05, 1...</msg>
<status status="PASS" starttime="20201115 22:00:41.004" endtime="20201115 22:00:41.033"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:41.043" level="INFO">NAME: 00-overhead-13-set</msg>
<status status="PASS" starttime="20201115 22:00:41.041" endtime="20201115 22:00:41.044"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:41.048" level="INFO">VALUE: [1.5722000000002734e-05, 1.5875000000005468e-05, 1.5528000000000763e-05, 1.5180999999996059e-05, 1.554100000000086e-05, 1.531899999999975e-05, 1.534699999999889e-05, 1.5499999999994685e-05, 1.552700000000129e-05, 1.5528000000000763e-05, 1.5207999999995725e-05, 1.584699999999939e-05, 1.5542000000000333e-05, 1.566699999999699e-05, 1.5667000000003928e-05, 1.536099999999846e-05, 1.5694000000003594e-05, 1.5028000000000263e-05, 1.502700000000079e-05, 1.537499999999803e-05, 1.537499999999803e-05, 1.5181000000002998e-05, 1.5362000000004872e-05, 1.5014000000000693e-05, 1.5208000000002664e-05, 1.5708000000003164e-05, 1.5679999999997085e-05, 1.551300000000172e-05, 1.536099999999846e-05, 1.534699999999889e-05, 1.537499999999803e-05, 1.536099999999846e-05, 1.5528000000000763e-05, 1.5180000000003524e-05, 1.534699999999889e-05, 1.5179999999996585e-05, 1.502700000000079e-05, 1.586099999999896e-05, 1.5193999999996155e-05, 1.50689999999995e-05, 1.5707999999996225e-05, 1.5680000000004024e-05, 1.587499999999853e-05, 1.5193999999996155e-05, 1.584699999999939e-05, 1.587499999999853e-05, 1.5694000000010533e-05, 1.5901999999998195e-05, 1.537499999999803e-05, 1.5861000000005898e-05]</msg>
<status status="PASS" starttime="20201115 22:00:41.045" endtime="20201115 22:00:41.049"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.034" endtime="20201115 22:00:41.051"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:41.057" endtime="20201115 22:00:41.060"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:41.065" endtime="20201115 22:00:41.087"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.061" endtime="20201115 22:00:41.089"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.052" endtime="20201115 22:00:41.090"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.531" endtime="20201115 22:00:41.091"></status>
</kw>
<msg timestamp="20201115 22:00:41.091" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:41.115" endtime="20201115 22:00:41.151"></status>
</kw>
<msg timestamp="20201115 22:00:41.153" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:41.111" endtime="20201115 22:00:41.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:41.159" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:41.155" endtime="20201115 22:00:41.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:41.161" endtime="20201115 22:00:41.165"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.104" endtime="20201115 22:00:41.166"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.098" endtime="20201115 22:00:41.168"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:41.184" endtime="20201115 22:00:41.520"></status>
</kw>
<msg timestamp="20201115 22:00:41.527" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041225667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041241542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:41.181" endtime="20201115 22:00:41.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:41.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041225667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041241542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:41.529" endtime="20201115 22:00:41.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:41.547" endtime="20201115 22:00:41.555"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.174" endtime="20201115 22:00:41.556"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.169" endtime="20201115 22:00:41.558"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:41.568" level="INFO">${RESULT} = [{'time': 0.041241542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.587499999999853e-05, 'source_diff': 1.587499999999853e-05}, {'time': 0.041787333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:41.559" endtime="20201115 22:00:41.569"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:41.598" level="INFO">${OVERHEAD} = {'diff': [1.587499999999853e-05, 1.5180000000003524e-05, 1.5194999999995629e-05, 1.5014000000000693e-05, 1.502700000000079e-05, 1.5236000000001804e-05, 1.5514000000001194e-05, 1.586099999999896e-05, 1...</msg>
<status status="PASS" starttime="20201115 22:00:41.570" endtime="20201115 22:00:41.598"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:41.609" level="INFO">NAME: 00-overhead-13-set</msg>
<status status="PASS" starttime="20201115 22:00:41.607" endtime="20201115 22:00:41.610"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:41.614" level="INFO">VALUE: [1.587499999999853e-05, 1.5180000000003524e-05, 1.5194999999995629e-05, 1.5014000000000693e-05, 1.502700000000079e-05, 1.5236000000001804e-05, 1.5514000000001194e-05, 1.586099999999896e-05, 1.5513999999994255e-05, 1.5194000000003094e-05, 1.5028000000000263e-05, 1.568099999999656e-05, 1.5528000000000763e-05, 1.5207999999995725e-05, 1.551300000000172e-05, 1.5028000000000263e-05, 1.584699999999939e-05, 1.5195000000002568e-05, 1.5264000000000943e-05, 1.5041999999999833e-05, 1.5207999999995725e-05, 1.5500000000001624e-05, 1.5861000000005898e-05, 1.5195000000002568e-05, 1.5362000000004872e-05, 1.5513999999994255e-05, 1.5513999999994255e-05, 1.569499999999613e-05, 1.57089999999957e-05, 1.534699999999889e-05, 1.5861000000005898e-05, 1.586099999999896e-05, 1.5500000000001624e-05, 1.536099999999846e-05, 1.5194000000003094e-05, 1.586099999999896e-05, 1.587499999999853e-05, 1.5167000000003428e-05, 1.561099999999871e-05, 1.506899999999256e-05, 1.5707999999989286e-05, 1.587499999999853e-05, 1.5861000000005898e-05, 1.5180000000003524e-05, 1.534699999999889e-05, 1.5514000000008132e-05, 1.5694000000010533e-05, 1.5361000000005398e-05, 1.5055999999999403e-05, 1.5528000000000763e-05]</msg>
<status status="PASS" starttime="20201115 22:00:41.611" endtime="20201115 22:00:41.615"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.600" endtime="20201115 22:00:41.617"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:41.623" endtime="20201115 22:00:41.625"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:41.631" endtime="20201115 22:00:41.652"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.627" endtime="20201115 22:00:41.654"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.618" endtime="20201115 22:00:41.656"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.092" endtime="20201115 22:00:41.657"></status>
</kw>
<msg timestamp="20201115 22:00:41.657" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:41.680" endtime="20201115 22:00:41.717"></status>
</kw>
<msg timestamp="20201115 22:00:41.718" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:41.677" endtime="20201115 22:00:41.718"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:41.724" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:41.720" endtime="20201115 22:00:41.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:41.727" endtime="20201115 22:00:41.730"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.670" endtime="20201115 22:00:41.732"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.664" endtime="20201115 22:00:41.733"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:41.749" endtime="20201115 22:00:42.084"></status>
</kw>
<msg timestamp="20201115 22:00:42.091" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041197611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041213153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:41.746" endtime="20201115 22:00:42.091"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:42.108" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041197611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041213153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:42.093" endtime="20201115 22:00:42.109"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:42.111" endtime="20201115 22:00:42.116"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.739" endtime="20201115 22:00:42.118"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.735" endtime="20201115 22:00:42.119"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:42.130" level="INFO">${RESULT} = [{'time': 0.041213153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5542000000000333e-05, 'source_diff': 1.5542000000000333e-05}, {'time': 0.041765167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:42.121" endtime="20201115 22:00:42.130"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:42.159" level="INFO">${OVERHEAD} = {'diff': [1.5542000000000333e-05, 1.5847999999998863e-05, 1.5193999999996155e-05, 1.5513999999994255e-05, 1.584699999999939e-05, 1.5014000000000693e-05, 1.5945000000003318e-05, 1.534699999999889e-05, ...</msg>
<status status="PASS" starttime="20201115 22:00:42.132" endtime="20201115 22:00:42.160"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:42.170" level="INFO">NAME: 00-overhead-13-set</msg>
<status status="PASS" starttime="20201115 22:00:42.168" endtime="20201115 22:00:42.171"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:42.176" level="INFO">VALUE: [1.5542000000000333e-05, 1.5847999999998863e-05, 1.5193999999996155e-05, 1.5513999999994255e-05, 1.584699999999939e-05, 1.5014000000000693e-05, 1.5945000000003318e-05, 1.534699999999889e-05, 1.536099999999846e-05, 1.5194999999995629e-05, 1.552699999999435e-05, 1.5041999999999833e-05, 1.537499999999803e-05, 1.5500000000001624e-05, 1.5693999999996655e-05, 1.552700000000129e-05, 1.586099999999896e-05, 1.509699999999864e-05, 1.5917000000004178e-05, 1.5027999999993324e-05, 1.537499999999803e-05, 1.587499999999853e-05, 1.5028000000000263e-05, 1.5193999999996155e-05, 1.5195000000002568e-05, 1.5528000000000763e-05, 1.540299999999717e-05, 1.5708000000003164e-05, 1.572299999999527e-05, 1.53889999999976e-05, 1.5722000000002734e-05, 1.5194000000003094e-05, 1.536099999999846e-05, 1.584699999999939e-05, 1.555500000000043e-05, 1.5500000000001624e-05, 1.5514000000001194e-05, 1.5514000000001194e-05, 1.5000000000001124e-05, 1.5013999999993755e-05, 1.5209000000002137e-05, 1.5026999999986912e-05, 1.502700000000079e-05, 1.5861000000005898e-05, 1.5694000000010533e-05, 1.5194999999995629e-05, 1.526300000000147e-05, 1.586099999999202e-05, 1.587499999999853e-05, 1.5028000000000263e-05]</msg>
<status status="PASS" starttime="20201115 22:00:42.172" endtime="20201115 22:00:42.176"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.161" endtime="20201115 22:00:42.178"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:42.185" endtime="20201115 22:00:42.188"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:42.193" endtime="20201115 22:00:42.215"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.189" endtime="20201115 22:00:42.217"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.180" endtime="20201115 22:00:42.218"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.659" endtime="20201115 22:00:42.219"></status>
</kw>
<msg timestamp="20201115 22:00:42.219" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:42.243" endtime="20201115 22:00:42.280"></status>
</kw>
<msg timestamp="20201115 22:00:42.281" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:42.239" endtime="20201115 22:00:42.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:42.287" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:42.283" endtime="20201115 22:00:42.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:42.289" endtime="20201115 22:00:42.293"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.232" endtime="20201115 22:00:42.295"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.226" endtime="20201115 22:00:42.296"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:42.312" endtime="20201115 22:00:42.647"></status>
</kw>
<msg timestamp="20201115 22:00:42.653" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041420931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041436792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:42.309" endtime="20201115 22:00:42.654"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:42.671" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041420931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041436792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:42.656" endtime="20201115 22:00:42.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:42.674" endtime="20201115 22:00:42.679"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.302" endtime="20201115 22:00:42.681"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.297" endtime="20201115 22:00:42.682"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:42.693" level="INFO">${RESULT} = [{'time': 0.041436792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.586099999999896e-05, 'source_diff': 1.586099999999896e-05}, {'time': 0.041982611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:42.684" endtime="20201115 22:00:42.693"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:42.722" level="INFO">${OVERHEAD} = {'diff': [1.586099999999896e-05, 1.5528000000000763e-05, 1.586099999999896e-05, 1.554100000000086e-05, 1.552700000000129e-05, 1.5707999999996225e-05, 1.5708000000003164e-05, 1.5861999999998433e-05, 1....</msg>
<status status="PASS" starttime="20201115 22:00:42.695" endtime="20201115 22:00:42.723"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:42.733" level="INFO">NAME: 00-overhead-13-set</msg>
<status status="PASS" starttime="20201115 22:00:42.731" endtime="20201115 22:00:42.734"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:42.739" level="INFO">VALUE: [1.586099999999896e-05, 1.5528000000000763e-05, 1.586099999999896e-05, 1.554100000000086e-05, 1.552700000000129e-05, 1.5707999999996225e-05, 1.5708000000003164e-05, 1.5861999999998433e-05, 1.5028000000000263e-05, 1.534699999999889e-05, 1.5209000000002137e-05, 1.5014000000000693e-05, 1.5180999999996059e-05, 1.5014000000000693e-05, 1.586099999999896e-05, 1.5861000000005898e-05, 1.5694000000003594e-05, 1.583299999999982e-05, 1.552700000000129e-05, 1.5194000000003094e-05, 1.58889999999981e-05, 1.5195000000002568e-05, 1.5416000000004204e-05, 1.5708000000003164e-05, 1.5167000000003428e-05, 1.5028000000000263e-05, 1.552700000000129e-05, 1.5387999999998125e-05, 1.5569999999999473e-05, 1.581900000000025e-05, 1.5347000000005828e-05, 1.504100000000036e-05, 1.5514000000001194e-05, 1.5375000000004968e-05, 1.5679999999997085e-05, 1.5180999999996059e-05, 1.5041999999999833e-05, 1.58889999999981e-05, 1.5013999999993755e-05, 1.537499999999803e-05, 1.5014000000007632e-05, 1.5555999999999903e-05, 1.502700000000079e-05, 1.5166999999996489e-05, 1.5137999999997875e-05, 1.5263999999987066e-05, 1.587499999999853e-05, 1.5237000000001277e-05, 1.5041000000007299e-05, 1.5693999999996655e-05]</msg>
<status status="PASS" starttime="20201115 22:00:42.736" endtime="20201115 22:00:42.740"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.724" endtime="20201115 22:00:42.742"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:42.748" endtime="20201115 22:00:42.751"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:42.756" endtime="20201115 22:00:42.778"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.752" endtime="20201115 22:00:42.780"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.744" endtime="20201115 22:00:42.781"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.220" endtime="20201115 22:00:42.782"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.965" endtime="20201115 22:00:42.782"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.963" endtime="20201115 22:00:42.783"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:42.787" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:42.810" endtime="20201115 22:00:42.849"></status>
</kw>
<msg timestamp="20201115 22:00:42.850" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:42.807" endtime="20201115 22:00:42.850"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:42.856" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:42.852" endtime="20201115 22:00:42.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:42.858" endtime="20201115 22:00:42.862"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.800" endtime="20201115 22:00:42.864"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.794" endtime="20201115 22:00:42.865"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:42.881" endtime="20201115 22:00:43.217"></status>
</kw>
<msg timestamp="20201115 22:00:43.224" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045629028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045644306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:42.878" endtime="20201115 22:00:43.225"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:43.242" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045629028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045644306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:43.226" endtime="20201115 22:00:43.243"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:43.244" endtime="20201115 22:00:43.248"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.871" endtime="20201115 22:00:43.250"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.866" endtime="20201115 22:00:43.251"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:43.261" level="INFO">${RESULT} = [{'time': 0.045644306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5278000000000513e-05, 'source_diff': 1.5278000000000513e-05}, {'time': 0.046230181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:43.253" endtime="20201115 22:00:43.262"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:43.292" level="INFO">${OVERHEAD} = {'diff': [1.5278000000000513e-05, 1.5778000000001013e-05, 1.561099999999871e-05, 1.5611999999998183e-05, 1.561099999999871e-05, 1.561099999999871e-05, 1.612499999999878e-05, 1.5901999999998195e-05, 1....</msg>
<status status="PASS" starttime="20201115 22:00:43.264" endtime="20201115 22:00:43.293"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:43.303" level="INFO">NAME: 00-overhead-14-set</msg>
<status status="PASS" starttime="20201115 22:00:43.301" endtime="20201115 22:00:43.304"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:43.310" level="INFO">VALUE: [1.5278000000000513e-05, 1.5778000000001013e-05, 1.561099999999871e-05, 1.5611999999998183e-05, 1.561099999999871e-05, 1.561099999999871e-05, 1.612499999999878e-05, 1.5901999999998195e-05, 1.5611000000005648e-05, 1.52769999999941e-05, 1.5806000000000153e-05, 1.612499999999878e-05, 1.558299999999957e-05, 1.593099999999681e-05, 1.5625000000005218e-05, 1.5777999999994075e-05, 1.5555999999999903e-05, 1.5415999999997265e-05, 1.5778000000001013e-05, 1.561099999999871e-05, 1.5945000000003318e-05, 1.5945000000003318e-05, 1.5305999999999653e-05, 1.6042000000000833e-05, 1.608300000000007e-05, 1.591699999999724e-05, 1.612499999999878e-05, 1.5278000000000513e-05, 1.5945000000003318e-05, 1.5249999999994435e-05, 1.5929999999997335e-05, 1.561099999999871e-05, 1.530500000000712e-05, 1.561099999999871e-05, 1.5777999999994075e-05, 1.5611000000012587e-05, 1.5625000000005218e-05, 1.5985999999995615e-05, 1.5945000000003318e-05, 1.5457999999995975e-05, 1.5431000000010187e-05, 1.608300000000007e-05, 1.577700000000848e-05, 1.5277999999993574e-05, 1.5264000000000943e-05, 1.5236000000001804e-05, 1.594499999998944e-05, 1.5764000000001444e-05, 1.5306000000006592e-05, 1.5944000000003844e-05]</msg>
<status status="PASS" starttime="20201115 22:00:43.306" endtime="20201115 22:00:43.310"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.294" endtime="20201115 22:00:43.312"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:43.318" endtime="20201115 22:00:43.321"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:43.327" endtime="20201115 22:00:43.348"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.322" endtime="20201115 22:00:43.350"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.314" endtime="20201115 22:00:43.351"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.789" endtime="20201115 22:00:43.352"></status>
</kw>
<msg timestamp="20201115 22:00:43.352" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:43.375" endtime="20201115 22:00:43.414"></status>
</kw>
<msg timestamp="20201115 22:00:43.415" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:43.372" endtime="20201115 22:00:43.416"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:43.421" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:43.417" endtime="20201115 22:00:43.422"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:43.424" endtime="20201115 22:00:43.427"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.365" endtime="20201115 22:00:43.429"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.359" endtime="20201115 22:00:43.430"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:43.447" endtime="20201115 22:00:43.780"></status>
</kw>
<msg timestamp="20201115 22:00:43.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040564486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040580278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:43.443" endtime="20201115 22:00:43.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:43.805" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040564486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040580278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:43.789" endtime="20201115 22:00:43.806"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:43.807" endtime="20201115 22:00:43.814"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.436" endtime="20201115 22:00:43.816"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.432" endtime="20201115 22:00:43.818"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:43.828" level="INFO">${RESULT} = [{'time': 0.040580278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5792000000000583e-05, 'source_diff': 1.5792000000000583e-05}, {'time': 0.041166986, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:43.819" endtime="20201115 22:00:43.828"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:43.858" level="INFO">${OVERHEAD} = {'diff': [1.5792000000000583e-05, 1.5278000000000513e-05, 1.584699999999939e-05, 1.579100000000111e-05, 1.561099999999871e-05, 1.577700000000154e-05, 1.611099999999921e-05, 1.5444000000003344e-05, 1.5...</msg>
<status status="PASS" starttime="20201115 22:00:43.830" endtime="20201115 22:00:43.859"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:43.869" level="INFO">NAME: 00-overhead-14-set</msg>
<status status="PASS" starttime="20201115 22:00:43.867" endtime="20201115 22:00:43.870"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:43.875" level="INFO">VALUE: [1.5792000000000583e-05, 1.5278000000000513e-05, 1.584699999999939e-05, 1.579100000000111e-05, 1.561099999999871e-05, 1.577700000000154e-05, 1.611099999999921e-05, 1.5444000000003344e-05, 1.5444000000003344e-05, 1.5249999999994435e-05, 1.6083999999999543e-05, 1.543099999999631e-05, 1.547299999999502e-05, 1.5945000000003318e-05, 1.6138000000005814e-05, 1.5486000000002054e-05, 1.5542000000000333e-05, 1.562499999999828e-05, 1.5931000000003748e-05, 1.611099999999921e-05, 1.6111999999998683e-05, 1.611099999999921e-05, 1.562499999999828e-05, 1.5514000000001194e-05, 1.577700000000154e-05, 1.526299999999453e-05, 1.5958000000003414e-05, 1.612499999999878e-05, 1.612499999999878e-05, 1.612499999999878e-05, 1.565299999999742e-05, 1.5611000000005648e-05, 1.5431000000003248e-05, 1.5597999999998613e-05, 1.579099999999417e-05, 1.612499999999878e-05, 1.5444000000003344e-05, 1.5445000000002818e-05, 1.5333000000006258e-05, 1.5943999999989966e-05, 1.59169999999903e-05, 1.5777999999994075e-05, 1.5597000000006078e-05, 1.611099999999921e-05, 1.5777999999994075e-05, 1.558299999999957e-05, 1.5445000000002818e-05, 1.5389000000004538e-05, 1.5957999999996475e-05, 1.6125000000005718e-05]</msg>
<status status="PASS" starttime="20201115 22:00:43.871" endtime="20201115 22:00:43.876"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.860" endtime="20201115 22:00:43.877"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:43.883" endtime="20201115 22:00:43.886"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:43.892" endtime="20201115 22:00:43.913"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.887" endtime="20201115 22:00:43.915"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.879" endtime="20201115 22:00:43.916"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.354" endtime="20201115 22:00:43.917"></status>
</kw>
<msg timestamp="20201115 22:00:43.917" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:43.940" endtime="20201115 22:00:43.979"></status>
</kw>
<msg timestamp="20201115 22:00:43.980" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:43.937" endtime="20201115 22:00:43.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:43.986" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:43.982" endtime="20201115 22:00:43.987"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:43.988" endtime="20201115 22:00:43.992"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.930" endtime="20201115 22:00:43.994"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.924" endtime="20201115 22:00:43.996"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:44.012" endtime="20201115 22:00:44.347"></status>
</kw>
<msg timestamp="20201115 22:00:44.354" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040499486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040515097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:44.009" endtime="20201115 22:00:44.354"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:44.371" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040499486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040515097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:44.356" endtime="20201115 22:00:44.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:44.374" endtime="20201115 22:00:44.379"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.002" endtime="20201115 22:00:44.381"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.997" endtime="20201115 22:00:44.382"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:44.393" level="INFO">${RESULT} = [{'time': 0.040515097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.561099999999871e-05, 'source_diff': 1.561099999999871e-05}, {'time': 0.041103736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:44.384" endtime="20201115 22:00:44.394"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:44.423" level="INFO">${OVERHEAD} = {'diff': [1.561099999999871e-05, 1.5889000000005038e-05, 1.608300000000007e-05, 1.5278000000000513e-05, 1.5777999999994075e-05, 1.5764000000001444e-05, 1.5459000000002387e-05, 1.5778000000001013e-05, ...</msg>
<status status="PASS" starttime="20201115 22:00:44.395" endtime="20201115 22:00:44.424"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:44.434" level="INFO">NAME: 00-overhead-14-set</msg>
<status status="PASS" starttime="20201115 22:00:44.432" endtime="20201115 22:00:44.435"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:44.439" level="INFO">VALUE: [1.561099999999871e-05, 1.5889000000005038e-05, 1.608300000000007e-05, 1.5278000000000513e-05, 1.5777999999994075e-05, 1.5764000000001444e-05, 1.5459000000002387e-05, 1.5778000000001013e-05, 1.5930000000004274e-05, 1.543099999999631e-05, 1.561099999999871e-05, 1.5555999999999903e-05, 1.5778000000001013e-05, 1.577700000000154e-05, 1.608300000000007e-05, 1.5471999999995545e-05, 1.5778000000001013e-05, 1.5430000000003774e-05, 1.5458000000002914e-05, 1.533299999999932e-05, 1.563899999999785e-05, 1.5764000000001444e-05, 1.5250000000001374e-05, 1.595899999999595e-05, 1.5764000000001444e-05, 1.609699999999964e-05, 1.561099999999871e-05, 1.5443999999996405e-05, 1.6137999999998875e-05, 1.526300000000147e-05, 1.576300000000197e-05, 1.5945000000003318e-05, 1.5445000000002818e-05, 1.555500000000043e-05, 1.6139000000005288e-05, 1.5278000000000513e-05, 1.561099999999871e-05, 1.5611000000005648e-05, 1.5444000000003344e-05, 1.57769999999946e-05, 1.5277999999993574e-05, 1.611099999999921e-05, 1.5221999999995295e-05, 1.561099999999871e-05, 1.580500000000762e-05, 1.5945000000003318e-05, 1.6125000000005718e-05, 1.613899999999835e-05, 1.5763999999987566e-05, 1.5930000000011213e-05]</msg>
<status status="PASS" starttime="20201115 22:00:44.436" endtime="20201115 22:00:44.440"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.425" endtime="20201115 22:00:44.442"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:44.448" endtime="20201115 22:00:44.451"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:44.456" endtime="20201115 22:00:44.478"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.452" endtime="20201115 22:00:44.480"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.444" endtime="20201115 22:00:44.481"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.919" endtime="20201115 22:00:44.482"></status>
</kw>
<msg timestamp="20201115 22:00:44.482" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:44.505" endtime="20201115 22:00:44.543"></status>
</kw>
<msg timestamp="20201115 22:00:44.545" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:44.501" endtime="20201115 22:00:44.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:44.551" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:44.547" endtime="20201115 22:00:44.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:44.553" endtime="20201115 22:00:44.557"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.494" endtime="20201115 22:00:44.558"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.489" endtime="20201115 22:00:44.560"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:44.576" endtime="20201115 22:00:44.910"></status>
</kw>
<msg timestamp="20201115 22:00:44.917" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040478181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040493972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:44.572" endtime="20201115 22:00:44.917"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:44.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040478181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040493972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:44.919" endtime="20201115 22:00:44.935"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:44.941" endtime="20201115 22:00:44.947"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.566" endtime="20201115 22:00:44.948"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.561" endtime="20201115 22:00:44.950"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:44.960" level="INFO">${RESULT} = [{'time': 0.040493972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.579100000000111e-05, 'source_diff': 1.579100000000111e-05}, {'time': 0.041079722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:44.951" endtime="20201115 22:00:44.961"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:44.990" level="INFO">${OVERHEAD} = {'diff': [1.579100000000111e-05, 1.5443999999996405e-05, 1.529100000000061e-05, 1.5597999999998613e-05, 1.5278000000000513e-05, 1.561099999999871e-05, 1.5430000000003774e-05, 1.562499999999828e-05, 1....</msg>
<status status="PASS" starttime="20201115 22:00:44.962" endtime="20201115 22:00:44.991"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:45.002" level="INFO">NAME: 00-overhead-14-set</msg>
<status status="PASS" starttime="20201115 22:00:44.999" endtime="20201115 22:00:45.002"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:45.007" level="INFO">VALUE: [1.579100000000111e-05, 1.5443999999996405e-05, 1.529100000000061e-05, 1.5597999999998613e-05, 1.5278000000000513e-05, 1.561099999999871e-05, 1.5430000000003774e-05, 1.562499999999828e-05, 1.6083999999999543e-05, 1.612499999999878e-05, 1.611099999999921e-05, 1.5792000000000583e-05, 1.5445000000002818e-05, 1.5945000000003318e-05, 1.5278000000000513e-05, 1.526300000000147e-05, 1.5278000000000513e-05, 1.611099999999921e-05, 1.5736000000002304e-05, 1.5764000000001444e-05, 1.563899999999785e-05, 1.5986000000002554e-05, 1.561099999999871e-05, 1.5264000000000943e-05, 1.6098000000006052e-05, 1.562499999999828e-05, 1.5486000000002054e-05, 1.5445000000002818e-05, 1.612499999999878e-05, 1.5972000000002984e-05, 1.5457999999995975e-05, 1.5778000000001013e-05, 1.5278000000000513e-05, 1.5931000000003748e-05, 1.5736000000002304e-05, 1.545899999999545e-05, 1.5943999999996905e-05, 1.561099999999871e-05, 1.581900000000025e-05, 1.587499999999853e-05, 1.5945000000003318e-05, 1.555500000000043e-05, 1.537499999999803e-05, 1.52769999999941e-05, 1.561099999999871e-05, 1.5277999999993574e-05, 1.6028000000001263e-05, 1.6165999999998015e-05, 1.611099999999921e-05, 1.537499999999803e-05]</msg>
<status status="PASS" starttime="20201115 22:00:45.004" endtime="20201115 22:00:45.008"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.992" endtime="20201115 22:00:45.010"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:45.016" endtime="20201115 22:00:45.018"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:45.024" endtime="20201115 22:00:45.046"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.020" endtime="20201115 22:00:45.047"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.011" endtime="20201115 22:00:45.049"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.483" endtime="20201115 22:00:45.049"></status>
</kw>
<msg timestamp="20201115 22:00:45.050" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:45.073" endtime="20201115 22:00:45.111"></status>
</kw>
<msg timestamp="20201115 22:00:45.113" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:45.069" endtime="20201115 22:00:45.113"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:45.119" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:45.115" endtime="20201115 22:00:45.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:45.121" endtime="20201115 22:00:45.125"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.062" endtime="20201115 22:00:45.126"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.056" endtime="20201115 22:00:45.128"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:45.144" endtime="20201115 22:00:45.479"></status>
</kw>
<msg timestamp="20201115 22:00:45.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040621333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040636986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:45.141" endtime="20201115 22:00:45.487"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:45.505" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040621333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040636986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:45.489" endtime="20201115 22:00:45.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:45.507" endtime="20201115 22:00:45.512"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.134" endtime="20201115 22:00:45.514"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.129" endtime="20201115 22:00:45.515"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:45.526" level="INFO">${RESULT} = [{'time': 0.040636986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.565299999999742e-05, 'source_diff': 1.565299999999742e-05}, {'time': 0.041225806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:45.517" endtime="20201115 22:00:45.526"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:45.556" level="INFO">${OVERHEAD} = {'diff': [1.565299999999742e-05, 1.5777999999994075e-05, 1.5319999999999223e-05, 1.611099999999921e-05, 1.5639000000004788e-05, 1.58889999999981e-05, 1.581900000000025e-05, 1.5471999999995545e-05, 1.6...</msg>
<status status="PASS" starttime="20201115 22:00:45.528" endtime="20201115 22:00:45.556"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:45.567" level="INFO">NAME: 00-overhead-14-set</msg>
<status status="PASS" starttime="20201115 22:00:45.564" endtime="20201115 22:00:45.567"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:45.572" level="INFO">VALUE: [1.565299999999742e-05, 1.5777999999994075e-05, 1.5319999999999223e-05, 1.611099999999921e-05, 1.5639000000004788e-05, 1.58889999999981e-05, 1.581900000000025e-05, 1.5471999999995545e-05, 1.611099999999921e-05, 1.5792000000000583e-05, 1.5278000000000513e-05, 1.6042000000000833e-05, 1.577700000000154e-05, 1.579099999999417e-05, 1.5707999999996225e-05, 1.530500000000018e-05, 1.581900000000025e-05, 1.5429999999996835e-05, 1.5445000000002818e-05, 1.5721999999995795e-05, 1.611099999999921e-05, 1.611099999999921e-05, 1.611099999999921e-05, 1.540299999999717e-05, 1.543099999999631e-05, 1.5972000000002984e-05, 1.5611000000005648e-05, 1.5611999999998183e-05, 1.5264000000000943e-05, 1.5444000000003344e-05, 1.5971999999996045e-05, 1.6139000000005288e-05, 1.533299999999932e-05, 1.615299999999792e-05, 1.5778000000001013e-05, 1.5444000000003344e-05, 1.5653000000004358e-05, 1.5792000000000583e-05, 1.6139000000012227e-05, 1.5292000000000083e-05, 1.6097000000006578e-05, 1.6028000000001263e-05, 1.5611999999998183e-05, 1.5957999999996475e-05, 1.5929999999997335e-05, 1.5528000000000763e-05, 1.5277999999993574e-05, 1.5653000000004358e-05, 1.5985999999995615e-05, 1.562499999999134e-05]</msg>
<status status="PASS" starttime="20201115 22:00:45.569" endtime="20201115 22:00:45.573"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.558" endtime="20201115 22:00:45.574"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:45.581" endtime="20201115 22:00:45.583"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:45.589" endtime="20201115 22:00:45.610"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.585" endtime="20201115 22:00:45.612"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.576" endtime="20201115 22:00:45.614"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.051" endtime="20201115 22:00:45.614"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.785" endtime="20201115 22:00:45.615"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.784" endtime="20201115 22:00:45.615"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:45.620" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:45.643" endtime="20201115 22:00:45.684"></status>
</kw>
<msg timestamp="20201115 22:00:45.685" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:45.640" endtime="20201115 22:00:45.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:45.691" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:45.687" endtime="20201115 22:00:45.691"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:45.693" endtime="20201115 22:00:45.697"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.632" endtime="20201115 22:00:45.698"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.626" endtime="20201115 22:00:45.700"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:45.717" endtime="20201115 22:00:46.055"></status>
</kw>
<msg timestamp="20201115 22:00:46.062" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046105361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046121389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:45.714" endtime="20201115 22:00:46.062"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:46.079" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046105361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046121389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:46.064" endtime="20201115 22:00:46.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:46.082" endtime="20201115 22:00:46.086"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.706" endtime="20201115 22:00:46.087"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.702" endtime="20201115 22:00:46.089"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:46.099" level="INFO">${RESULT} = [{'time': 0.046121389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6028000000001263e-05, 'source_diff': 1.6028000000001263e-05}, {'time': 0.046748139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:46.090" endtime="20201115 22:00:46.100"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:46.129" level="INFO">${OVERHEAD} = {'diff': [1.6028000000001263e-05, 1.6181000000003998e-05, 1.6167000000004428e-05, 1.5555999999999903e-05, 1.6013999999994755e-05, 1.604100000000136e-05, 1.636099999999946e-05, 1.6208000000003664e-05, ...</msg>
<status status="PASS" starttime="20201115 22:00:46.101" endtime="20201115 22:00:46.130"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:46.140" level="INFO">NAME: 00-overhead-15-set</msg>
<status status="PASS" starttime="20201115 22:00:46.138" endtime="20201115 22:00:46.141"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:46.145" level="INFO">VALUE: [1.6028000000001263e-05, 1.6181000000003998e-05, 1.6167000000004428e-05, 1.5555999999999903e-05, 1.6013999999994755e-05, 1.604100000000136e-05, 1.636099999999946e-05, 1.6208000000003664e-05, 1.6028000000001263e-05, 1.586099999999896e-05, 1.5514000000001194e-05, 1.5597999999998613e-05, 1.5709000000002638e-05, 1.58889999999981e-05, 1.602700000000179e-05, 1.6361999999998933e-05, 1.6222000000003234e-05, 1.586099999999896e-05, 1.637499999999903e-05, 1.6027999999994325e-05, 1.5555999999999903e-05, 1.637499999999903e-05, 1.619499999999663e-05, 1.6320000000000223e-05, 1.5861000000005898e-05, 1.566699999999699e-05, 1.6028000000001263e-05, 1.577700000000848e-05, 1.5667000000010867e-05, 1.6209000000003138e-05, 1.6180000000004524e-05, 1.5792000000000583e-05, 1.6193999999997155e-05, 1.5861000000005898e-05, 1.6028000000001263e-05, 1.5541999999993394e-05, 1.583300000000676e-05, 1.5528000000000763e-05, 1.634699999999989e-05, 1.6361000000006398e-05, 1.636099999999252e-05, 1.6014000000008632e-05, 1.6193999999997155e-05, 1.616699999999749e-05, 1.6347999999999363e-05, 1.5707999999989286e-05, 1.6028000000001263e-05, 1.6362000000005872e-05, 1.5570000000006412e-05, 1.5499999999987746e-05]</msg>
<status status="PASS" starttime="20201115 22:00:46.142" endtime="20201115 22:00:46.146"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.131" endtime="20201115 22:00:46.148"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:46.154" endtime="20201115 22:00:46.157"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:46.162" endtime="20201115 22:00:46.184"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.158" endtime="20201115 22:00:46.185"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.149" endtime="20201115 22:00:46.187"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.621" endtime="20201115 22:00:46.188"></status>
</kw>
<msg timestamp="20201115 22:00:46.188" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:46.211" endtime="20201115 22:00:46.251"></status>
</kw>
<msg timestamp="20201115 22:00:46.252" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:46.207" endtime="20201115 22:00:46.253"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:46.259" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:46.255" endtime="20201115 22:00:46.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:46.262" endtime="20201115 22:00:46.265"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.200" endtime="20201115 22:00:46.267"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.195" endtime="20201115 22:00:46.268"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:46.285" endtime="20201115 22:00:46.619"></status>
</kw>
<msg timestamp="20201115 22:00:46.626" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040403792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0404195, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:00:46.281" endtime="20201115 22:00:46.627"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:46.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040403792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0404195, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:00:46.629" endtime="20201115 22:00:46.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:46.647" endtime="20201115 22:00:46.652"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.274" endtime="20201115 22:00:46.654"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.270" endtime="20201115 22:00:46.655"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:46.666" level="INFO">${RESULT} = [{'time': 0.0404195, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5707999999996225e-05, 'source_diff': 1.5707999999996225e-05}, {'time': 0.041048583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:46.657" endtime="20201115 22:00:46.666"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:46.696" level="INFO">${OVERHEAD} = {'diff': [1.5707999999996225e-05, 1.637499999999903e-05, 1.636099999999946e-05, 1.6042000000000833e-05, 1.586099999999896e-05, 1.5528000000000763e-05, 1.5527999999993825e-05, 1.586099999999896e-05, 1....</msg>
<status status="PASS" starttime="20201115 22:00:46.668" endtime="20201115 22:00:46.696"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:46.707" level="INFO">NAME: 00-overhead-15-set</msg>
<status status="PASS" starttime="20201115 22:00:46.704" endtime="20201115 22:00:46.707"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:46.712" level="INFO">VALUE: [1.5707999999996225e-05, 1.637499999999903e-05, 1.636099999999946e-05, 1.6042000000000833e-05, 1.586099999999896e-05, 1.5528000000000763e-05, 1.5527999999993825e-05, 1.586099999999896e-05, 1.6209000000003138e-05, 1.5707999999996225e-05, 1.5847999999998863e-05, 1.5528000000000763e-05, 1.634699999999989e-05, 1.584699999999939e-05, 1.5693999999996655e-05, 1.568099999999656e-05, 1.586099999999896e-05, 1.6042000000000833e-05, 1.5985999999995615e-05, 1.6209000000003138e-05, 1.587499999999853e-05, 1.595899999999595e-05, 1.5681000000003498e-05, 1.6028000000001263e-05, 1.5528000000000763e-05, 1.6193999999997155e-05, 1.637499999999903e-05, 1.6028000000001263e-05, 1.6069999999999973e-05, 1.5542000000000333e-05, 1.602699999999485e-05, 1.637499999999903e-05, 1.6209000000003138e-05, 1.586099999999896e-05, 1.6028000000001263e-05, 1.5694000000003594e-05, 1.618099999999012e-05, 1.566699999999699e-05, 1.5861000000005898e-05, 1.5528000000000763e-05, 1.586099999999202e-05, 1.6165999999998015e-05, 1.5681000000003498e-05, 1.5681000000003498e-05, 1.6193999999997155e-05, 1.637499999999903e-05, 1.5985999999995615e-05, 1.584699999999939e-05, 1.552700000000129e-05, 1.5457999999995975e-05]</msg>
<status status="PASS" starttime="20201115 22:00:46.709" endtime="20201115 22:00:46.713"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.698" endtime="20201115 22:00:46.714"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:46.721" endtime="20201115 22:00:46.723"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:46.729" endtime="20201115 22:00:46.750"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.725" endtime="20201115 22:00:46.752"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.716" endtime="20201115 22:00:46.754"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.189" endtime="20201115 22:00:46.754"></status>
</kw>
<msg timestamp="20201115 22:00:46.755" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:46.778" endtime="20201115 22:00:46.819"></status>
</kw>
<msg timestamp="20201115 22:00:46.820" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:46.775" endtime="20201115 22:00:46.820"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:46.826" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:46.822" endtime="20201115 22:00:46.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:46.828" endtime="20201115 22:00:46.832"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.767" endtime="20201115 22:00:46.834"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.761" endtime="20201115 22:00:46.835"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:46.851" endtime="20201115 22:00:47.185"></status>
</kw>
<msg timestamp="20201115 22:00:47.192" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041065806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041081694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:46.848" endtime="20201115 22:00:47.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:47.210" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041065806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041081694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:47.194" endtime="20201115 22:00:47.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:47.212" endtime="20201115 22:00:47.218"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.841" endtime="20201115 22:00:47.219"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.836" endtime="20201115 22:00:47.221"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:47.231" level="INFO">${RESULT} = [{'time': 0.041081694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5887999999998625e-05, 'source_diff': 1.5887999999998625e-05}, {'time': 0.041707431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:47.222" endtime="20201115 22:00:47.232"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:47.261" level="INFO">${OVERHEAD} = {'diff': [1.5887999999998625e-05, 1.5681000000003498e-05, 1.587499999999853e-05, 1.5695000000003068e-05, 1.6180000000004524e-05, 1.586099999999896e-05, 1.6179999999997585e-05, 1.637499999999903e-05, 1...</msg>
<status status="PASS" starttime="20201115 22:00:47.233" endtime="20201115 22:00:47.262"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:47.272" level="INFO">NAME: 00-overhead-15-set</msg>
<status status="PASS" starttime="20201115 22:00:47.270" endtime="20201115 22:00:47.273"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:47.277" level="INFO">VALUE: [1.5887999999998625e-05, 1.5681000000003498e-05, 1.587499999999853e-05, 1.5695000000003068e-05, 1.6180000000004524e-05, 1.586099999999896e-05, 1.6179999999997585e-05, 1.637499999999903e-05, 1.6209000000003138e-05, 1.62089999999962e-05, 1.6014000000001694e-05, 1.586099999999896e-05, 1.552700000000129e-05, 1.6194000000004094e-05, 1.586099999999896e-05, 1.60690000000005e-05, 1.6028000000001263e-05, 1.5459000000002387e-05, 1.5666000000004454e-05, 1.6362000000005872e-05, 1.5915999999997765e-05, 1.584699999999939e-05, 1.584699999999939e-05, 1.5708000000003164e-05, 1.5542000000000333e-05, 1.634699999999989e-05, 1.618099999999706e-05, 1.5861999999998433e-05, 1.6207999999996725e-05, 1.6027999999994325e-05, 1.6014000000001694e-05, 1.636099999999946e-05, 1.552700000000129e-05, 1.586099999999896e-05, 1.587499999999853e-05, 1.552700000000129e-05, 1.586099999999202e-05, 1.584699999999939e-05, 1.6000000000002124e-05, 1.6041999999993894e-05, 1.6027999999987386e-05, 1.602700000000179e-05, 1.5541999999993394e-05, 1.5763999999987566e-05, 1.6028000000001263e-05, 1.6153000000004858e-05, 1.5693999999996655e-05, 1.5888000000005564e-05, 1.584699999999939e-05, 1.5681000000003498e-05]</msg>
<status status="PASS" starttime="20201115 22:00:47.274" endtime="20201115 22:00:47.278"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.263" endtime="20201115 22:00:47.280"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:47.286" endtime="20201115 22:00:47.289"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:47.294" endtime="20201115 22:00:47.316"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.290" endtime="20201115 22:00:47.318"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.282" endtime="20201115 22:00:47.319"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.756" endtime="20201115 22:00:47.320"></status>
</kw>
<msg timestamp="20201115 22:00:47.321" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:47.344" endtime="20201115 22:00:47.384"></status>
</kw>
<msg timestamp="20201115 22:00:47.385" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:47.340" endtime="20201115 22:00:47.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:47.392" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:47.388" endtime="20201115 22:00:47.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:47.394" endtime="20201115 22:00:47.398"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.333" endtime="20201115 22:00:47.399"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.328" endtime="20201115 22:00:47.401"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:47.418" endtime="20201115 22:00:47.752"></status>
</kw>
<msg timestamp="20201115 22:00:47.759" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041311806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041328, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:00:47.415" endtime="20201115 22:00:47.760"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:47.777" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041311806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041328, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:00:47.762" endtime="20201115 22:00:47.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:47.779" endtime="20201115 22:00:47.785"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.407" endtime="20201115 22:00:47.786"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.402" endtime="20201115 22:00:47.788"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:47.798" level="INFO">${RESULT} = [{'time': 0.041328, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6193999999997155e-05, 'source_diff': 1.6193999999997155e-05}, {'time': 0.041956986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:00:47.789" endtime="20201115 22:00:47.799"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:47.828" level="INFO">${OVERHEAD} = {'diff': [1.6193999999997155e-05, 1.637499999999903e-05, 1.586099999999896e-05, 1.608300000000007e-05, 1.569499999999613e-05, 1.5833999999999293e-05, 1.6028000000001263e-05, 1.608300000000007e-05, 1.6...</msg>
<status status="PASS" starttime="20201115 22:00:47.800" endtime="20201115 22:00:47.829"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:47.839" level="INFO">NAME: 00-overhead-15-set</msg>
<status status="PASS" starttime="20201115 22:00:47.837" endtime="20201115 22:00:47.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:47.844" level="INFO">VALUE: [1.6193999999997155e-05, 1.637499999999903e-05, 1.586099999999896e-05, 1.608300000000007e-05, 1.569499999999613e-05, 1.5833999999999293e-05, 1.6028000000001263e-05, 1.608300000000007e-05, 1.602699999999485e-05, 1.613899999999835e-05, 1.6013999999994755e-05, 1.6207999999996725e-05, 1.5485999999995115e-05, 1.5693999999996655e-05, 1.6195000000003568e-05, 1.6221999999996295e-05, 1.586099999999896e-05, 1.586099999999896e-05, 1.604100000000136e-05, 1.5693999999996655e-05, 1.569499999999613e-05, 1.566699999999699e-05, 1.568099999999656e-05, 1.6042000000000833e-05, 1.6375000000005968e-05, 1.6194000000004094e-05, 1.6193999999997155e-05, 1.5694000000003594e-05, 1.5943999999996905e-05, 1.583299999999982e-05, 1.637499999999903e-05, 1.5694000000003594e-05, 1.6014000000001694e-05, 1.6193999999997155e-05, 1.619499999999663e-05, 1.636099999999252e-05, 1.5527999999986886e-05, 1.6361000000006398e-05, 1.6028000000001263e-05, 1.584699999999939e-05, 1.587499999999853e-05, 1.552700000000129e-05, 1.6361000000006398e-05, 1.634699999999989e-05, 1.6042000000007772e-05, 1.587499999999853e-05, 1.6041999999993894e-05, 1.5528000000000763e-05, 1.6013999999994755e-05, 1.6193999999997155e-05]</msg>
<status status="PASS" starttime="20201115 22:00:47.841" endtime="20201115 22:00:47.845"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.830" endtime="20201115 22:00:47.847"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:47.854" endtime="20201115 22:00:47.857"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:47.862" endtime="20201115 22:00:47.884"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.858" endtime="20201115 22:00:47.886"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.849" endtime="20201115 22:00:47.887"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.322" endtime="20201115 22:00:47.888"></status>
</kw>
<msg timestamp="20201115 22:00:47.888" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:47.911" endtime="20201115 22:00:47.951"></status>
</kw>
<msg timestamp="20201115 22:00:47.953" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:47.908" endtime="20201115 22:00:47.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:47.959" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:47.955" endtime="20201115 22:00:47.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:47.961" endtime="20201115 22:00:47.965"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.900" endtime="20201115 22:00:47.966"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.895" endtime="20201115 22:00:47.968"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:47.984" endtime="20201115 22:00:48.318"></status>
</kw>
<msg timestamp="20201115 22:00:48.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040531819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040547347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:47.981" endtime="20201115 22:00:48.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:48.343" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040531819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040547347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:48.327" endtime="20201115 22:00:48.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:48.345" endtime="20201115 22:00:48.353"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.974" endtime="20201115 22:00:48.354"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.969" endtime="20201115 22:00:48.356"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:48.366" level="INFO">${RESULT} = [{'time': 0.040547347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5528000000000763e-05, 'source_diff': 1.5528000000000763e-05}, {'time': 0.041175236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:48.357" endtime="20201115 22:00:48.367"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:48.396" level="INFO">${OVERHEAD} = {'diff': [1.5528000000000763e-05, 1.5693999999996655e-05, 1.587499999999853e-05, 1.5861000000005898e-05, 1.5528000000000763e-05, 1.5680000000004024e-05, 1.5694000000003594e-05, 1.5847999999998863e-05,...</msg>
<status status="PASS" starttime="20201115 22:00:48.368" endtime="20201115 22:00:48.396"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:48.407" level="INFO">NAME: 00-overhead-15-set</msg>
<status status="PASS" starttime="20201115 22:00:48.404" endtime="20201115 22:00:48.407"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:48.412" level="INFO">VALUE: [1.5528000000000763e-05, 1.5693999999996655e-05, 1.587499999999853e-05, 1.5861000000005898e-05, 1.5528000000000763e-05, 1.5680000000004024e-05, 1.5694000000003594e-05, 1.5847999999998863e-05, 1.6416000000005204e-05, 1.6028000000001263e-05, 1.587499999999853e-05, 1.5542000000000333e-05, 1.5528000000000763e-05, 1.637499999999903e-05, 1.5695000000003068e-05, 1.6193999999997155e-05, 1.604100000000136e-05, 1.558299999999957e-05, 1.633300000000032e-05, 1.63889999999986e-05, 1.5833999999999293e-05, 1.5707999999996225e-05, 1.5889000000005038e-05, 1.634699999999989e-05, 1.5514000000001194e-05, 1.573699999999484e-05, 1.6249999999995435e-05, 1.5986000000002554e-05, 1.6236000000002804e-05, 1.5861000000005898e-05, 1.552700000000129e-05, 1.5708000000003164e-05, 1.5862000000005372e-05, 1.6000000000002124e-05, 1.5708000000003164e-05, 1.5457999999995975e-05, 1.583300000000676e-05, 1.5528000000000763e-05, 1.6209000000003138e-05, 1.6208000000003664e-05, 1.5513999999994255e-05, 1.6000000000002124e-05, 1.634699999999989e-05, 1.640299999999817e-05, 1.5541999999993394e-05, 1.5513999999994255e-05, 1.563899999999785e-05, 1.6193999999997155e-05, 1.566699999999699e-05, 1.602700000000179e-05]</msg>
<status status="PASS" starttime="20201115 22:00:48.409" endtime="20201115 22:00:48.414"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.398" endtime="20201115 22:00:48.415"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:48.421" endtime="20201115 22:00:48.424"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:48.430" endtime="20201115 22:00:48.452"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.425" endtime="20201115 22:00:48.454"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.417" endtime="20201115 22:00:48.455"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.889" endtime="20201115 22:00:48.456"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.618" endtime="20201115 22:00:48.456"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.616" endtime="20201115 22:00:48.457"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:48.462" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:48.485" endtime="20201115 22:00:48.527"></status>
</kw>
<msg timestamp="20201115 22:00:48.528" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:48.481" endtime="20201115 22:00:48.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:48.535" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:48.531" endtime="20201115 22:00:48.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:48.537" endtime="20201115 22:00:48.541"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.474" endtime="20201115 22:00:48.542"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.469" endtime="20201115 22:00:48.544"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:48.560" endtime="20201115 22:00:48.895"></status>
</kw>
<msg timestamp="20201115 22:00:48.902" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046839681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046855611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:48.557" endtime="20201115 22:00:48.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:48.920" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046839681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046855611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:48.904" endtime="20201115 22:00:48.921"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:48.923" endtime="20201115 22:00:48.926"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.550" endtime="20201115 22:00:48.928"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.545" endtime="20201115 22:00:48.929"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:48.940" level="INFO">${RESULT} = [{'time': 0.046855611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5929999999997335e-05, 'source_diff': 1.5929999999997335e-05}, {'time': 0.047521667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:48.931" endtime="20201115 22:00:48.940"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:48.970" level="INFO">${OVERHEAD} = {'diff': [1.5929999999997335e-05, 1.6291999999994144e-05, 1.6111000000006148e-05, 1.616699999999749e-05, 1.6111000000006148e-05, 1.659700000000014e-05, 1.6651999999998945e-05, 1.644499999999688e-05, 1...</msg>
<status status="PASS" starttime="20201115 22:00:48.942" endtime="20201115 22:00:48.970"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:48.981" level="INFO">NAME: 00-overhead-16-set</msg>
<status status="PASS" starttime="20201115 22:00:48.979" endtime="20201115 22:00:48.982"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:48.987" level="INFO">VALUE: [1.5929999999997335e-05, 1.6291999999994144e-05, 1.6111000000006148e-05, 1.616699999999749e-05, 1.6111000000006148e-05, 1.659700000000014e-05, 1.6651999999998945e-05, 1.644499999999688e-05, 1.6347999999999363e-05, 1.6500000000002624e-05, 1.6292000000001083e-05, 1.5778000000001013e-05, 1.6277999999994575e-05, 1.612499999999878e-05, 1.62769999999951e-05, 1.6264000000001944e-05, 1.604100000000136e-05, 1.6278000000001513e-05, 1.662499999999928e-05, 1.5777999999994075e-05, 1.5943999999996905e-05, 1.6487000000002527e-05, 1.579100000000111e-05, 1.5777999999994075e-05, 1.5792000000000583e-05, 1.663899999999885e-05, 1.6431000000011187e-05, 1.6111999999998683e-05, 1.661099999999971e-05, 1.5930000000011213e-05, 1.661099999999971e-05, 1.5958000000010353e-05, 1.608300000000007e-05, 1.5958000000010353e-05, 1.6471999999989606e-05, 1.595899999999595e-05, 1.627700000000898e-05, 1.612499999999184e-05, 1.662499999999234e-05, 1.6445000000003818e-05, 1.6137999999998875e-05, 1.611200000001256e-05, 1.5792000000000583e-05, 1.5929999999997335e-05, 1.5806000000007092e-05, 1.6125000000005718e-05, 1.576300000000197e-05, 1.6570000000007412e-05, 1.5944000000003844e-05, 1.6278000000008452e-05]</msg>
<status status="PASS" starttime="20201115 22:00:48.983" endtime="20201115 22:00:48.988"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.972" endtime="20201115 22:00:48.990"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:48.996" endtime="20201115 22:00:48.999"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:49.005" endtime="20201115 22:00:49.026"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.000" endtime="20201115 22:00:49.028"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.991" endtime="20201115 22:00:49.030"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.463" endtime="20201115 22:00:49.030"></status>
</kw>
<msg timestamp="20201115 22:00:49.031" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:49.053" endtime="20201115 22:00:49.096"></status>
</kw>
<msg timestamp="20201115 22:00:49.097" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:49.050" endtime="20201115 22:00:49.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:49.103" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:49.099" endtime="20201115 22:00:49.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:49.105" endtime="20201115 22:00:49.109"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.043" endtime="20201115 22:00:49.111"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.037" endtime="20201115 22:00:49.112"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:49.128" endtime="20201115 22:00:49.463"></status>
</kw>
<msg timestamp="20201115 22:00:49.470" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040483847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040499806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:49.125" endtime="20201115 22:00:49.470"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:49.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040483847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040499806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:49.472" endtime="20201115 22:00:49.489"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:49.491" endtime="20201115 22:00:49.496"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.118" endtime="20201115 22:00:49.498"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.113" endtime="20201115 22:00:49.500"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:49.510" level="INFO">${RESULT} = [{'time': 0.040499806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.595899999999595e-05, 'source_diff': 1.595899999999595e-05}, {'time': 0.041163736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:49.501" endtime="20201115 22:00:49.511"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:49.540" level="INFO">${OVERHEAD} = {'diff': [1.595899999999595e-05, 1.580500000000068e-05, 1.612499999999878e-05, 1.6457999999996975e-05, 1.612499999999878e-05, 1.6306000000000653e-05, 1.6263999999995005e-05, 1.662499999999928e-05, 1.6...</msg>
<status status="PASS" starttime="20201115 22:00:49.512" endtime="20201115 22:00:49.541"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:49.552" level="INFO">NAME: 00-overhead-16-set</msg>
<status status="PASS" starttime="20201115 22:00:49.550" endtime="20201115 22:00:49.552"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:49.557" level="INFO">VALUE: [1.595899999999595e-05, 1.580500000000068e-05, 1.612499999999878e-05, 1.6457999999996975e-05, 1.612499999999878e-05, 1.6306000000000653e-05, 1.6263999999995005e-05, 1.662499999999928e-05, 1.6542000000001333e-05, 1.5778000000001013e-05, 1.6278000000001513e-05, 1.5943999999996905e-05, 1.5722000000002734e-05, 1.5709000000002638e-05, 1.6292000000001083e-05, 1.609699999999964e-05, 1.579100000000111e-05, 1.5792000000000583e-05, 1.662499999999928e-05, 1.5917000000004178e-05, 1.5929999999997335e-05, 1.613899999999835e-05, 1.5778000000001013e-05, 1.611099999999921e-05, 1.630500000000118e-05, 1.5764000000001444e-05, 1.6445000000003818e-05, 1.609699999999964e-05, 1.6167000000004428e-05, 1.58889999999981e-05, 1.6457999999996975e-05, 1.5791999999993644e-05, 1.579100000000111e-05, 1.659700000000014e-05, 1.661099999999971e-05, 1.6429999999997835e-05, 1.5721999999995795e-05, 1.6292000000001083e-05, 1.6125000000005718e-05, 1.663899999999885e-05, 1.643099999999731e-05, 1.5777999999994075e-05, 1.6249999999995435e-05, 1.5777999999994075e-05, 1.661099999999971e-05, 1.577700000000848e-05, 1.627700000000898e-05, 1.6111000000013087e-05, 1.611099999999921e-05, 1.611099999999921e-05]</msg>
<status status="PASS" starttime="20201115 22:00:49.554" endtime="20201115 22:00:49.558"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.543" endtime="20201115 22:00:49.560"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:49.566" endtime="20201115 22:00:49.569"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:49.574" endtime="20201115 22:00:49.596"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.570" endtime="20201115 22:00:49.597"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.561" endtime="20201115 22:00:49.599"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.032" endtime="20201115 22:00:49.600"></status>
</kw>
<msg timestamp="20201115 22:00:49.600" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:49.623" endtime="20201115 22:00:49.666"></status>
</kw>
<msg timestamp="20201115 22:00:49.667" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:49.620" endtime="20201115 22:00:49.667"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:49.673" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:49.669" endtime="20201115 22:00:49.674"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:49.675" endtime="20201115 22:00:49.679"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.612" endtime="20201115 22:00:49.680"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.607" endtime="20201115 22:00:49.682"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:49.698" endtime="20201115 22:00:50.032"></status>
</kw>
<msg timestamp="20201115 22:00:50.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040757403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040773556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:49.695" endtime="20201115 22:00:50.039"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:50.057" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040757403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040773556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:50.041" endtime="20201115 22:00:50.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:50.059" endtime="20201115 22:00:50.065"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.688" endtime="20201115 22:00:50.066"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.683" endtime="20201115 22:00:50.068"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:50.078" level="INFO">${RESULT} = [{'time': 0.040773556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6153000000004858e-05, 'source_diff': 1.6153000000004858e-05}, {'time': 0.041436667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:50.069" endtime="20201115 22:00:50.084"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:50.114" level="INFO">${OVERHEAD} = {'diff': [1.6153000000004858e-05, 1.5792000000000583e-05, 1.6320000000000223e-05, 1.593099999999681e-05, 1.658300000000057e-05, 1.5987000000002027e-05, 1.5806000000000153e-05, 1.661099999999971e-05, 1...</msg>
<status status="PASS" starttime="20201115 22:00:50.086" endtime="20201115 22:00:50.114"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:50.124" level="INFO">NAME: 00-overhead-16-set</msg>
<status status="PASS" starttime="20201115 22:00:50.122" endtime="20201115 22:00:50.125"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:50.130" level="INFO">VALUE: [1.6153000000004858e-05, 1.5792000000000583e-05, 1.6320000000000223e-05, 1.593099999999681e-05, 1.658300000000057e-05, 1.5987000000002027e-05, 1.5806000000000153e-05, 1.661099999999971e-05, 1.584699999999939e-05, 1.5778000000001013e-05, 1.661099999999971e-05, 1.6278000000001513e-05, 1.5764000000001444e-05, 1.580499999999374e-05, 1.5959000000002888e-05, 1.6249999999995435e-05, 1.6513999999995255e-05, 1.609699999999964e-05, 1.611099999999921e-05, 1.611099999999921e-05, 1.661099999999971e-05, 1.5986000000002554e-05, 1.6457999999996975e-05, 1.661099999999971e-05, 1.5929999999997335e-05, 1.663899999999885e-05, 1.627700000000204e-05, 1.5792000000000583e-05, 1.662499999999928e-05, 1.6000000000002124e-05, 1.6429999999997835e-05, 1.6263999999995005e-05, 1.6139000000005288e-05, 1.6125000000005718e-05, 1.5972000000002984e-05, 1.5944000000003844e-05, 1.62769999999951e-05, 1.5945000000003318e-05, 1.6277999999994575e-05, 1.6165999999998015e-05, 1.6625000000006218e-05, 1.6417000000004678e-05, 1.584699999999939e-05, 1.6459000000010326e-05, 1.643099999999731e-05, 1.6665999999998515e-05, 1.611099999999921e-05, 1.5806000000007092e-05, 1.608300000000007e-05, 1.6125000000005718e-05]</msg>
<status status="PASS" starttime="20201115 22:00:50.127" endtime="20201115 22:00:50.131"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.116" endtime="20201115 22:00:50.132"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:50.138" endtime="20201115 22:00:50.141"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:50.147" endtime="20201115 22:00:50.168"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.142" endtime="20201115 22:00:50.170"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.134" endtime="20201115 22:00:50.171"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.601" endtime="20201115 22:00:50.172"></status>
</kw>
<msg timestamp="20201115 22:00:50.172" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:50.195" endtime="20201115 22:00:50.238"></status>
</kw>
<msg timestamp="20201115 22:00:50.239" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:50.192" endtime="20201115 22:00:50.239"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:50.245" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:50.241" endtime="20201115 22:00:50.246"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:50.247" endtime="20201115 22:00:50.251"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.185" endtime="20201115 22:00:50.253"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.179" endtime="20201115 22:00:50.254"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:50.271" endtime="20201115 22:00:50.605"></status>
</kw>
<msg timestamp="20201115 22:00:50.612" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040445639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040461458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:50.267" endtime="20201115 22:00:50.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:50.630" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040445639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040461458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:50.614" endtime="20201115 22:00:50.630"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:50.633" endtime="20201115 22:00:50.640"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.260" endtime="20201115 22:00:50.642"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.256" endtime="20201115 22:00:50.643"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:50.654" level="INFO">${RESULT} = [{'time': 0.040461458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.581900000000025e-05, 'source_diff': 1.581900000000025e-05}, {'time': 0.041125708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:50.645" endtime="20201115 22:00:50.654"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:50.684" level="INFO">${OVERHEAD} = {'diff': [1.581900000000025e-05, 1.5957999999996475e-05, 1.6639000000005788e-05, 1.5957999999996475e-05, 1.6292000000001083e-05, 1.5777999999994075e-05, 1.659700000000014e-05, 1.5778000000001013e-05, ...</msg>
<status status="PASS" starttime="20201115 22:00:50.656" endtime="20201115 22:00:50.684"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:50.695" level="INFO">NAME: 00-overhead-16-set</msg>
<status status="PASS" starttime="20201115 22:00:50.692" endtime="20201115 22:00:50.695"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:50.700" level="INFO">VALUE: [1.581900000000025e-05, 1.5957999999996475e-05, 1.6639000000005788e-05, 1.5957999999996475e-05, 1.6292000000001083e-05, 1.5777999999994075e-05, 1.659700000000014e-05, 1.5778000000001013e-05, 1.6165999999998015e-05, 1.661099999999971e-05, 1.629100000000161e-05, 1.6681000000004498e-05, 1.5778000000001013e-05, 1.5972000000002984e-05, 1.6431000000004248e-05, 1.613899999999835e-05, 1.644499999999688e-05, 1.5764000000001444e-05, 1.5957999999996475e-05, 1.6292000000001083e-05, 1.663899999999885e-05, 1.608300000000007e-05, 1.612499999999878e-05, 1.5792000000000583e-05, 1.6444000000004344e-05, 1.5791999999993644e-05, 1.6263999999995005e-05, 1.663899999999885e-05, 1.62769999999951e-05, 1.5792000000000583e-05, 1.5903000000004608e-05, 1.577700000000154e-05, 1.618099999999706e-05, 1.6278000000001513e-05, 1.6472000000003484e-05, 1.6292000000001083e-05, 1.5792000000000583e-05, 1.6097000000006578e-05, 1.5972000000002984e-05, 1.6486000000009993e-05, 1.643099999999731e-05, 1.5805999999993214e-05, 1.5778000000007952e-05, 1.5957999999996475e-05, 1.6458000000010853e-05, 1.611099999999921e-05, 1.6137999999998875e-05, 1.6125000000005718e-05, 1.5764000000001444e-05, 1.611099999999921e-05]</msg>
<status status="PASS" starttime="20201115 22:00:50.697" endtime="20201115 22:00:50.701"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.686" endtime="20201115 22:00:50.702"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:50.709" endtime="20201115 22:00:50.711"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:50.717" endtime="20201115 22:00:50.738"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.712" endtime="20201115 22:00:50.740"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.704" endtime="20201115 22:00:50.742"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.174" endtime="20201115 22:00:50.742"></status>
</kw>
<msg timestamp="20201115 22:00:50.743" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:50.765" endtime="20201115 22:00:50.808"></status>
</kw>
<msg timestamp="20201115 22:00:50.809" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:50.762" endtime="20201115 22:00:50.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:50.815" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:50.811" endtime="20201115 22:00:50.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:50.818" endtime="20201115 22:00:50.821"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.755" endtime="20201115 22:00:50.823"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.749" endtime="20201115 22:00:50.824"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:50.841" endtime="20201115 22:00:51.175"></status>
</kw>
<msg timestamp="20201115 22:00:51.182" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040390125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04040625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:00:50.838" endtime="20201115 22:00:51.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:51.201" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040390125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04040625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:00:51.185" endtime="20201115 22:00:51.202"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:51.204" endtime="20201115 22:00:51.209"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.830" endtime="20201115 22:00:51.211"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.826" endtime="20201115 22:00:51.212"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:51.223" level="INFO">${RESULT} = [{'time': 0.04040625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.612499999999878e-05, 'source_diff': 1.612499999999878e-05}, {'time': 0.041071319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:00:51.214" endtime="20201115 22:00:51.223"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:51.253" level="INFO">${OVERHEAD} = {'diff': [1.612499999999878e-05, 1.609699999999964e-05, 1.637499999999903e-05, 1.6347999999999363e-05, 1.611099999999921e-05, 1.5778000000001013e-05, 1.5943999999996905e-05, 1.629100000000161e-05, 1.6...</msg>
<status status="PASS" starttime="20201115 22:00:51.225" endtime="20201115 22:00:51.253"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:51.264" level="INFO">NAME: 00-overhead-16-set</msg>
<status status="PASS" starttime="20201115 22:00:51.261" endtime="20201115 22:00:51.264"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:51.269" level="INFO">VALUE: [1.612499999999878e-05, 1.609699999999964e-05, 1.637499999999903e-05, 1.6347999999999363e-05, 1.611099999999921e-05, 1.5778000000001013e-05, 1.5943999999996905e-05, 1.629100000000161e-05, 1.6457999999996975e-05, 1.631900000000075e-05, 1.6445000000003818e-05, 1.6499999999995685e-05, 1.6292000000001083e-05, 1.5819999999999723e-05, 1.661099999999971e-05, 1.629100000000161e-05, 1.659700000000014e-05, 1.6389000000005538e-05, 1.6250000000002374e-05, 1.662499999999928e-05, 1.6443999999997405e-05, 1.579100000000111e-05, 1.5764000000001444e-05, 1.611099999999921e-05, 1.5973000000002457e-05, 1.579100000000111e-05, 1.612499999999878e-05, 1.5931000000003748e-05, 1.6430000000004774e-05, 1.612499999999878e-05, 1.5778000000001013e-05, 1.5944000000003844e-05, 1.6445000000003818e-05, 1.5959000000002888e-05, 1.5777999999994075e-05, 1.5792000000000583e-05, 1.5777999999994075e-05, 1.579100000000111e-05, 1.611099999999921e-05, 1.5778000000007952e-05, 1.659700000000708e-05, 1.6292000000001083e-05, 1.583300000000676e-05, 1.65969999999932e-05, 1.5749999999994935e-05, 1.629100000000161e-05, 1.5973000000002457e-05, 1.576300000000197e-05, 1.6207999999989786e-05, 1.5777999999994075e-05]</msg>
<status status="PASS" starttime="20201115 22:00:51.266" endtime="20201115 22:00:51.270"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.255" endtime="20201115 22:00:51.271"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:51.278" endtime="20201115 22:00:51.280"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:51.286" endtime="20201115 22:00:51.307"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.281" endtime="20201115 22:00:51.309"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.273" endtime="20201115 22:00:51.311"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.744" endtime="20201115 22:00:51.311"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.459" endtime="20201115 22:00:51.312"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.458" endtime="20201115 22:00:51.312"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:51.317" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:51.340" endtime="20201115 22:00:51.384"></status>
</kw>
<msg timestamp="20201115 22:00:51.385" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:51.336" endtime="20201115 22:00:51.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:51.391" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:51.387" endtime="20201115 22:00:51.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:51.394" endtime="20201115 22:00:51.397"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.329" endtime="20201115 22:00:51.399"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.324" endtime="20201115 22:00:51.401"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:51.418" endtime="20201115 22:00:51.752"></status>
</kw>
<msg timestamp="20201115 22:00:51.759" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045669361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045685389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:51.414" endtime="20201115 22:00:51.760"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:51.777" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045669361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045685389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:51.762" endtime="20201115 22:00:51.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:51.780" endtime="20201115 22:00:51.784"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.407" endtime="20201115 22:00:51.785"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.402" endtime="20201115 22:00:51.787"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:51.797" level="INFO">${RESULT} = [{'time': 0.045685389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6028000000001263e-05, 'source_diff': 1.6028000000001263e-05}, {'time': 0.046389611, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:51.788" endtime="20201115 22:00:51.798"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:51.827" level="INFO">${OVERHEAD} = {'diff': [1.6028000000001263e-05, 1.6707999999997225e-05, 1.6207999999996725e-05, 1.6707999999997225e-05, 1.6556000000000903e-05, 1.686099999999996e-05, 1.637499999999903e-05, 1.6528000000001764e-05, ...</msg>
<status status="PASS" starttime="20201115 22:00:51.799" endtime="20201115 22:00:51.828"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:51.838" level="INFO">NAME: 00-overhead-17-set</msg>
<status status="PASS" starttime="20201115 22:00:51.836" endtime="20201115 22:00:51.839"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:51.843" level="INFO">VALUE: [1.6028000000001263e-05, 1.6707999999997225e-05, 1.6207999999996725e-05, 1.6707999999997225e-05, 1.6556000000000903e-05, 1.686099999999996e-05, 1.637499999999903e-05, 1.6528000000001764e-05, 1.6347999999999363e-05, 1.6901999999999195e-05, 1.669499999999713e-05, 1.6207999999996725e-05, 1.6193999999997155e-05, 1.6208000000003664e-05, 1.6027999999994325e-05, 1.6013999999994755e-05, 1.6013999999994755e-05, 1.6195000000003568e-05, 1.6028000000001263e-05, 1.6179999999997585e-05, 1.6694000000004594e-05, 1.654099999999492e-05, 1.6207999999996725e-05, 1.6542000000001333e-05, 1.6709000000003638e-05, 1.6013999999994755e-05, 1.666699999999799e-05, 1.6694000000011533e-05, 1.6362000000005872e-05, 1.655500000000143e-05, 1.634699999999989e-05, 1.684700000000039e-05, 1.619499999999663e-05, 1.6513999999995255e-05, 1.6333999999992854e-05, 1.602700000000179e-05, 1.619499999999663e-05, 1.6042000000007772e-05, 1.638899999999166e-05, 1.669499999999713e-05, 1.6193999999997155e-05, 1.634699999999989e-05, 1.684700000000039e-05, 1.6709000000003638e-05, 1.6028000000001263e-05, 1.5999999999988246e-05, 1.6209000000003138e-05, 1.6208000000003664e-05, 1.6542000000008272e-05, 1.6305999999993714e-05]</msg>
<status status="PASS" starttime="20201115 22:00:51.840" endtime="20201115 22:00:51.844"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.829" endtime="20201115 22:00:51.846"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:51.852" endtime="20201115 22:00:51.855"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:51.860" endtime="20201115 22:00:51.882"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.856" endtime="20201115 22:00:51.884"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.848" endtime="20201115 22:00:51.885"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.318" endtime="20201115 22:00:51.886"></status>
</kw>
<msg timestamp="20201115 22:00:51.887" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:51.909" endtime="20201115 22:00:51.954"></status>
</kw>
<msg timestamp="20201115 22:00:51.955" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:51.906" endtime="20201115 22:00:51.955"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:51.961" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:51.957" endtime="20201115 22:00:51.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:51.964" endtime="20201115 22:00:51.968"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.899" endtime="20201115 22:00:51.969"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.893" endtime="20201115 22:00:51.971"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:51.987" endtime="20201115 22:00:52.320"></status>
</kw>
<msg timestamp="20201115 22:00:52.327" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040652847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040669389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:51.984" endtime="20201115 22:00:52.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:52.345" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040652847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040669389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:52.330" endtime="20201115 22:00:52.346"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:52.348" endtime="20201115 22:00:52.353"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.977" endtime="20201115 22:00:52.355"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.972" endtime="20201115 22:00:52.356"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:52.366" level="INFO">${RESULT} = [{'time': 0.040669389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6542000000001333e-05, 'source_diff': 1.6542000000001333e-05}, {'time': 0.041373486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:52.358" endtime="20201115 22:00:52.367"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:52.397" level="INFO">${OVERHEAD} = {'diff': [1.6542000000001333e-05, 1.6486000000003054e-05, 1.6347999999999363e-05, 1.687499999999953e-05, 1.6693999999997655e-05, 1.6721999999996795e-05, 1.637499999999903e-05, 1.636099999999946e-05, 1...</msg>
<status status="PASS" starttime="20201115 22:00:52.368" endtime="20201115 22:00:52.397"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:52.407" level="INFO">NAME: 00-overhead-17-set</msg>
<status status="PASS" starttime="20201115 22:00:52.405" endtime="20201115 22:00:52.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:52.413" level="INFO">VALUE: [1.6542000000001333e-05, 1.6486000000003054e-05, 1.6347999999999363e-05, 1.687499999999953e-05, 1.6693999999997655e-05, 1.6721999999996795e-05, 1.637499999999903e-05, 1.636099999999946e-05, 1.6527999999994825e-05, 1.636099999999946e-05, 1.6707999999997225e-05, 1.6471999999996545e-05, 1.686099999999996e-05, 1.6195000000003568e-05, 1.6014000000001694e-05, 1.6179999999997585e-05, 1.5999999999995185e-05, 1.684700000000039e-05, 1.6513999999995255e-05, 1.6209000000003138e-05, 1.686099999999996e-05, 1.6861999999999433e-05, 1.6721999999996795e-05, 1.637499999999903e-05, 1.6028000000001263e-05, 1.686099999999996e-05, 1.6542000000001333e-05, 1.654100000000186e-05, 1.6556000000000903e-05, 1.6694000000004594e-05, 1.6361000000006398e-05, 1.6847999999999863e-05, 1.6721999999996795e-05, 1.684700000000039e-05, 1.6041999999993894e-05, 1.637499999999903e-05, 1.6805999999994214e-05, 1.686099999999302e-05, 1.6861000000006898e-05, 1.6193999999997155e-05, 1.6026999999987912e-05, 1.6861000000006898e-05, 1.6361000000006398e-05, 1.6193999999997155e-05, 1.6069999999993034e-05, 1.6445000000003818e-05, 1.666699999999799e-05, 1.6181000000003998e-05, 1.6528000000001764e-05, 1.6362000000005872e-05]</msg>
<status status="PASS" starttime="20201115 22:00:52.410" endtime="20201115 22:00:52.414"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.398" endtime="20201115 22:00:52.415"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:52.421" endtime="20201115 22:00:52.424"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:52.430" endtime="20201115 22:00:52.452"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.425" endtime="20201115 22:00:52.454"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.417" endtime="20201115 22:00:52.455"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.888" endtime="20201115 22:00:52.456"></status>
</kw>
<msg timestamp="20201115 22:00:52.456" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:52.480" endtime="20201115 22:00:52.524"></status>
</kw>
<msg timestamp="20201115 22:00:52.525" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:52.476" endtime="20201115 22:00:52.526"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:52.531" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:52.528" endtime="20201115 22:00:52.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:52.534" endtime="20201115 22:00:52.537"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.469" endtime="20201115 22:00:52.539"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.463" endtime="20201115 22:00:52.540"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:52.557" endtime="20201115 22:00:52.891"></status>
</kw>
<msg timestamp="20201115 22:00:52.898" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041398389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041414417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:52.554" endtime="20201115 22:00:52.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:52.916" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041398389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041414417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:52.900" endtime="20201115 22:00:52.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:52.918" endtime="20201115 22:00:52.926"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.547" endtime="20201115 22:00:52.927"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.542" endtime="20201115 22:00:52.929"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:52.939" level="INFO">${RESULT} = [{'time': 0.041414417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6028000000001263e-05, 'source_diff': 1.6028000000001263e-05}, {'time': 0.042120444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:52.930" endtime="20201115 22:00:52.940"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:52.969" level="INFO">${OVERHEAD} = {'diff': [1.6028000000001263e-05, 1.6693999999997655e-05, 1.6347999999999363e-05, 1.6000000000002124e-05, 1.636099999999946e-05, 1.6500000000002624e-05, 1.636099999999946e-05, 1.652700000000229e-05, 1...</msg>
<status status="PASS" starttime="20201115 22:00:52.941" endtime="20201115 22:00:52.970"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:52.980" level="INFO">NAME: 00-overhead-17-set</msg>
<status status="PASS" starttime="20201115 22:00:52.978" endtime="20201115 22:00:52.981"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:52.985" level="INFO">VALUE: [1.6028000000001263e-05, 1.6693999999997655e-05, 1.6347999999999363e-05, 1.6000000000002124e-05, 1.636099999999946e-05, 1.6500000000002624e-05, 1.636099999999946e-05, 1.652700000000229e-05, 1.633300000000032e-05, 1.655500000000143e-05, 1.6569000000001e-05, 1.6861999999999433e-05, 1.652700000000229e-05, 1.659700000000014e-05, 1.6028000000001263e-05, 1.684700000000039e-05, 1.637499999999903e-05, 1.686099999999996e-05, 1.6221999999996295e-05, 1.686099999999996e-05, 1.637499999999903e-05, 1.6722000000003734e-05, 1.6056000000000403e-05, 1.655500000000143e-05, 1.6193999999997155e-05, 1.602700000000179e-05, 1.6542000000001333e-05, 1.683300000000082e-05, 1.686099999999996e-05, 1.6750000000002874e-05, 1.6861000000006898e-05, 1.6556000000000903e-05, 1.618099999999012e-05, 1.6013999999994755e-05, 1.6709000000003638e-05, 1.658300000000057e-05, 1.6041999999993894e-05, 1.6208000000003664e-05, 1.6347999999999363e-05, 1.669499999999713e-05, 1.6709000000003638e-05, 1.6208000000003664e-05, 1.6361000000006398e-05, 1.6028000000001263e-05, 1.6347999999999363e-05, 1.686099999999302e-05, 1.684700000000039e-05, 1.6207999999989786e-05, 1.687499999999953e-05, 1.6862000000006372e-05]</msg>
<status status="PASS" starttime="20201115 22:00:52.982" endtime="20201115 22:00:52.986"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.971" endtime="20201115 22:00:52.988"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:52.994" endtime="20201115 22:00:52.997"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:53.003" endtime="20201115 22:00:53.024"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.998" endtime="20201115 22:00:53.026"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.989" endtime="20201115 22:00:53.028"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.457" endtime="20201115 22:00:53.029"></status>
</kw>
<msg timestamp="20201115 22:00:53.029" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:53.052" endtime="20201115 22:00:53.097"></status>
</kw>
<msg timestamp="20201115 22:00:53.098" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:53.049" endtime="20201115 22:00:53.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:53.104" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:53.100" endtime="20201115 22:00:53.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:53.106" endtime="20201115 22:00:53.110"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.042" endtime="20201115 22:00:53.111"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.036" endtime="20201115 22:00:53.113"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:53.129" endtime="20201115 22:00:53.464"></status>
</kw>
<msg timestamp="20201115 22:00:53.471" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041151903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04116825, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:00:53.126" endtime="20201115 22:00:53.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:53.489" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041151903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04116825, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:00:53.473" endtime="20201115 22:00:53.490"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:53.492" endtime="20201115 22:00:53.497"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.119" endtime="20201115 22:00:53.499"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.114" endtime="20201115 22:00:53.500"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:53.511" level="INFO">${RESULT} = [{'time': 0.04116825, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6347000000006828e-05, 'source_diff': 1.6347000000006828e-05}, {'time': 0.041872347, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 22:00:53.502" endtime="20201115 22:00:53.511"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:53.541" level="INFO">${OVERHEAD} = {'diff': [1.6347000000006828e-05, 1.6749999999995935e-05, 1.690299999999867e-05, 1.6375000000005968e-05, 1.618099999999706e-05, 1.6194000000004094e-05, 1.6193999999997155e-05, 1.6693999999997655e-05, ...</msg>
<status status="PASS" starttime="20201115 22:00:53.513" endtime="20201115 22:00:53.541"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:53.551" level="INFO">NAME: 00-overhead-17-set</msg>
<status status="PASS" starttime="20201115 22:00:53.549" endtime="20201115 22:00:53.552"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:53.557" level="INFO">VALUE: [1.6347000000006828e-05, 1.6749999999995935e-05, 1.690299999999867e-05, 1.6375000000005968e-05, 1.618099999999706e-05, 1.6194000000004094e-05, 1.6193999999997155e-05, 1.6693999999997655e-05, 1.686099999999996e-05, 1.6195000000003568e-05, 1.634699999999989e-05, 1.6694000000004594e-05, 1.6042000000000833e-05, 1.652700000000229e-05, 1.6056000000000403e-05, 1.6305999999993714e-05, 1.6695000000004068e-05, 1.640299999999817e-05, 1.636099999999946e-05, 1.6693999999997655e-05, 1.6693999999997655e-05, 1.687499999999953e-05, 1.636099999999946e-05, 1.636099999999946e-05, 1.602700000000179e-05, 1.6681000000004498e-05, 1.654100000000186e-05, 1.686099999999996e-05, 1.687499999999953e-05, 1.6179999999997585e-05, 1.6221999999996295e-05, 1.658300000000057e-05, 1.6652000000005884e-05, 1.687499999999953e-05, 1.6861999999992494e-05, 1.6347999999999363e-05, 1.6862000000006372e-05, 1.6861000000006898e-05, 1.687499999999953e-05, 1.619499999999663e-05, 1.679100000000211e-05, 1.6709000000003638e-05, 1.622299999999577e-05, 1.6180000000004524e-05, 1.686099999999302e-05, 1.6721999999996795e-05, 1.6361000000006398e-05, 1.637499999999903e-05, 1.60410000000083e-05, 1.669499999999713e-05]</msg>
<status status="PASS" starttime="20201115 22:00:53.554" endtime="20201115 22:00:53.558"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.542" endtime="20201115 22:00:53.559"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:53.566" endtime="20201115 22:00:53.569"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:53.574" endtime="20201115 22:00:53.596"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.570" endtime="20201115 22:00:53.598"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.562" endtime="20201115 22:00:53.599"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.030" endtime="20201115 22:00:53.600"></status>
</kw>
<msg timestamp="20201115 22:00:53.601" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:53.625" endtime="20201115 22:00:53.669"></status>
</kw>
<msg timestamp="20201115 22:00:53.671" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:53.621" endtime="20201115 22:00:53.671"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:53.677" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:53.673" endtime="20201115 22:00:53.677"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:53.679" endtime="20201115 22:00:53.683"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.614" endtime="20201115 22:00:53.684"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.608" endtime="20201115 22:00:53.686"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:53.702" endtime="20201115 22:00:54.037"></status>
</kw>
<msg timestamp="20201115 22:00:54.044" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042498042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042514583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:53.699" endtime="20201115 22:00:54.045"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:54.062" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042498042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042514583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:54.046" endtime="20201115 22:00:54.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:54.064" endtime="20201115 22:00:54.070"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.692" endtime="20201115 22:00:54.071"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.687" endtime="20201115 22:00:54.073"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:54.083" level="INFO">${RESULT} = [{'time': 0.042514583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.654100000000186e-05, 'source_diff': 1.654100000000186e-05}, {'time': 0.043220847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:54.074" endtime="20201115 22:00:54.084"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:54.113" level="INFO">${OVERHEAD} = {'diff': [1.654100000000186e-05, 1.6693999999997655e-05, 1.6000000000002124e-05, 1.6389000000005538e-05, 1.6194000000004094e-05, 1.63889999999986e-05, 1.605500000000093e-05, 1.6193999999997155e-05, 1....</msg>
<status status="PASS" starttime="20201115 22:00:54.085" endtime="20201115 22:00:54.114"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:54.124" level="INFO">NAME: 00-overhead-17-set</msg>
<status status="PASS" starttime="20201115 22:00:54.122" endtime="20201115 22:00:54.125"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:54.130" level="INFO">VALUE: [1.654100000000186e-05, 1.6693999999997655e-05, 1.6000000000002124e-05, 1.6389000000005538e-05, 1.6194000000004094e-05, 1.63889999999986e-05, 1.605500000000093e-05, 1.6193999999997155e-05, 1.6722000000003734e-05, 1.6556000000000903e-05, 1.6207999999996725e-05, 1.6542000000001333e-05, 1.6528000000001764e-05, 1.6528000000001764e-05, 1.654100000000186e-05, 1.6195000000003568e-05, 1.6042000000000833e-05, 1.6194000000004094e-05, 1.5959000000002888e-05, 1.6028000000001263e-05, 1.640299999999817e-05, 1.658300000000057e-05, 1.637499999999903e-05, 1.6027999999994325e-05, 1.6320000000000223e-05, 1.6721999999996795e-05, 1.6695000000004068e-05, 1.6042000000000833e-05, 1.687499999999953e-05, 1.637499999999903e-05, 1.637499999999903e-05, 1.6861000000006898e-05, 1.684700000000039e-05, 1.6361000000006398e-05, 1.637499999999903e-05, 1.6208000000003664e-05, 1.665299999999148e-05, 1.633300000000726e-05, 1.687499999999953e-05, 1.6208000000003664e-05, 1.6862000000006372e-05, 1.6056000000000403e-05, 1.6026999999987912e-05, 1.6193999999997155e-05, 1.6514000000009132e-05, 1.637499999999903e-05, 1.6193999999997155e-05, 1.686099999999302e-05, 1.6125000000005718e-05, 1.6028000000001263e-05]</msg>
<status status="PASS" starttime="20201115 22:00:54.127" endtime="20201115 22:00:54.131"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.115" endtime="20201115 22:00:54.133"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:54.139" endtime="20201115 22:00:54.142"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:54.147" endtime="20201115 22:00:54.169"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.143" endtime="20201115 22:00:54.170"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.135" endtime="20201115 22:00:54.172"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.602" endtime="20201115 22:00:54.172"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.315" endtime="20201115 22:00:54.173"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.313" endtime="20201115 22:00:54.174"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:54.178" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:54.201" endtime="20201115 22:00:54.247"></status>
</kw>
<msg timestamp="20201115 22:00:54.249" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:54.198" endtime="20201115 22:00:54.249"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:54.255" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:54.251" endtime="20201115 22:00:54.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:54.257" endtime="20201115 22:00:54.261"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.190" endtime="20201115 22:00:54.262"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.185" endtime="20201115 22:00:54.264"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:54.280" endtime="20201115 22:00:54.616"></status>
</kw>
<msg timestamp="20201115 22:00:54.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045705167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045722319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:54.277" endtime="20201115 22:00:54.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:54.641" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045705167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045722319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:54.625" endtime="20201115 22:00:54.642"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:54.644" endtime="20201115 22:00:54.648"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.270" endtime="20201115 22:00:54.649"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.265" endtime="20201115 22:00:54.651"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:54.662" level="INFO">${RESULT} = [{'time': 0.045722319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7151999999999445e-05, 'source_diff': 1.7151999999999445e-05}, {'time': 0.046463292, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:54.652" endtime="20201115 22:00:54.662"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:54.692" level="INFO">${OVERHEAD} = {'diff': [1.7151999999999445e-05, 1.6292000000001083e-05, 1.6443999999997405e-05, 1.645899999999645e-05, 1.7111999999999683e-05, 1.683300000000082e-05, 1.6277999999994575e-05, 1.6292000000001083e-05, ...</msg>
<status status="PASS" starttime="20201115 22:00:54.664" endtime="20201115 22:00:54.693"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:54.703" level="INFO">NAME: 00-overhead-18-set</msg>
<status status="PASS" starttime="20201115 22:00:54.701" endtime="20201115 22:00:54.704"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:54.709" level="INFO">VALUE: [1.7151999999999445e-05, 1.6292000000001083e-05, 1.6443999999997405e-05, 1.645899999999645e-05, 1.7111999999999683e-05, 1.683300000000082e-05, 1.6277999999994575e-05, 1.6292000000001083e-05, 1.713899999999935e-05, 1.6806000000001153e-05, 1.677700000000254e-05, 1.6415999999998265e-05, 1.705500000000193e-05, 1.6971999999997045e-05, 1.6305999999993714e-05, 1.629099999999467e-05, 1.712499999999978e-05, 1.67769999999956e-05, 1.631900000000075e-05, 1.6792000000001583e-05, 1.712499999999978e-05, 1.7098000000000113e-05, 1.711100000000021e-05, 1.6792000000001583e-05, 1.6944000000004844e-05, 1.715299999999198e-05, 1.711100000000021e-05, 1.7111999999999683e-05, 1.661099999999971e-05, 1.6930000000012213e-05, 1.6792000000001583e-05, 1.6790999999988232e-05, 1.713899999999935e-05, 1.712499999999284e-05, 1.662499999999234e-05, 1.7070000000007912e-05, 1.6792000000001583e-05, 1.662499999999234e-05, 1.6749999999995935e-05, 1.711100000000021e-05, 1.6945000000004318e-05, 1.661099999999971e-05, 1.6777999999995075e-05, 1.6444000000004344e-05, 1.7125000000006718e-05, 1.711100000000021e-05, 1.6929999999998335e-05, 1.6569999999993534e-05, 1.6430000000011713e-05, 1.6929999999998335e-05]</msg>
<status status="PASS" starttime="20201115 22:00:54.706" endtime="20201115 22:00:54.710"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.694" endtime="20201115 22:00:54.712"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:54.718" endtime="20201115 22:00:54.721"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:54.726" endtime="20201115 22:00:54.748"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.722" endtime="20201115 22:00:54.750"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.714" endtime="20201115 22:00:54.751"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.179" endtime="20201115 22:00:54.752"></status>
</kw>
<msg timestamp="20201115 22:00:54.752" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:54.775" endtime="20201115 22:00:54.821"></status>
</kw>
<msg timestamp="20201115 22:00:54.823" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:54.772" endtime="20201115 22:00:54.823"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:54.829" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:54.825" endtime="20201115 22:00:54.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:54.831" endtime="20201115 22:00:54.835"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.765" endtime="20201115 22:00:54.836"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.759" endtime="20201115 22:00:54.838"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:54.854" endtime="20201115 22:00:55.188"></status>
</kw>
<msg timestamp="20201115 22:00:55.195" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040493236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040509833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:54.851" endtime="20201115 22:00:55.195"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:55.213" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040493236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040509833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:55.197" endtime="20201115 22:00:55.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:55.215" endtime="20201115 22:00:55.222"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.844" endtime="20201115 22:00:55.224"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.839" endtime="20201115 22:00:55.226"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:55.236" level="INFO">${RESULT} = [{'time': 0.040509833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.659700000000014e-05, 'source_diff': 1.659700000000014e-05}, {'time': 0.041255931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:55.227" endtime="20201115 22:00:55.237"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:55.266" level="INFO">${OVERHEAD} = {'diff': [1.659700000000014e-05, 1.6292000000001083e-05, 1.6459000000003388e-05, 1.6264000000001944e-05, 1.659700000000014e-05, 1.716699999999849e-05, 1.661099999999971e-05, 1.6945000000004318e-05, 1....</msg>
<status status="PASS" starttime="20201115 22:00:55.238" endtime="20201115 22:00:55.271"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:55.281" level="INFO">NAME: 00-overhead-18-set</msg>
<status status="PASS" starttime="20201115 22:00:55.279" endtime="20201115 22:00:55.282"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:55.287" level="INFO">VALUE: [1.659700000000014e-05, 1.6292000000001083e-05, 1.6459000000003388e-05, 1.6264000000001944e-05, 1.659700000000014e-05, 1.716699999999849e-05, 1.661099999999971e-05, 1.6945000000004318e-05, 1.6945000000004318e-05, 1.643099999999731e-05, 1.695899999999695e-05, 1.6792000000001583e-05, 1.712499999999978e-05, 1.6958000000004414e-05, 1.70969999999937e-05, 1.6277999999994575e-05, 1.6209000000003138e-05, 1.7000000000003124e-05, 1.6263999999995005e-05, 1.6680000000005024e-05, 1.6264000000001944e-05, 1.644499999999688e-05, 1.6472000000003484e-05, 1.6443999999997405e-05, 1.662499999999928e-05, 1.663899999999885e-05, 1.711100000000021e-05, 1.711100000000021e-05, 1.712499999999978e-05, 1.70969999999937e-05, 1.6637999999999376e-05, 1.655500000000143e-05, 1.661099999999971e-05, 1.6792000000001583e-05, 1.6749999999995935e-05, 1.6929999999998335e-05, 1.6445000000003818e-05, 1.6764000000002444e-05, 1.695899999999695e-05, 1.67769999999956e-05, 1.712499999999284e-05, 1.6749999999995935e-05, 1.694499999999044e-05, 1.708300000000107e-05, 1.6777999999995075e-05, 1.713899999999935e-05, 1.6820000000000723e-05, 1.6249999999995435e-05, 1.6929999999998335e-05, 1.711100000000021e-05]</msg>
<status status="PASS" starttime="20201115 22:00:55.284" endtime="20201115 22:00:55.288"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.272" endtime="20201115 22:00:55.289"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:55.296" endtime="20201115 22:00:55.298"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:55.304" endtime="20201115 22:00:55.326"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.299" endtime="20201115 22:00:55.327"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.291" endtime="20201115 22:00:55.329"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.754" endtime="20201115 22:00:55.329"></status>
</kw>
<msg timestamp="20201115 22:00:55.330" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:55.353" endtime="20201115 22:00:55.399"></status>
</kw>
<msg timestamp="20201115 22:00:55.400" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:55.349" endtime="20201115 22:00:55.401"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:55.406" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:55.402" endtime="20201115 22:00:55.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:55.409" endtime="20201115 22:00:55.412"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.342" endtime="20201115 22:00:55.414"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.336" endtime="20201115 22:00:55.415"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:55.432" endtime="20201115 22:00:55.766"></status>
</kw>
<msg timestamp="20201115 22:00:55.773" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040599375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040615653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:55.428" endtime="20201115 22:00:55.774"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:55.791" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040599375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040615653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:55.776" endtime="20201115 22:00:55.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:55.794" endtime="20201115 22:00:55.799"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.421" endtime="20201115 22:00:55.800"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.417" endtime="20201115 22:00:55.802"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:55.812" level="INFO">${RESULT} = [{'time': 0.040615653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6278000000001513e-05, 'source_diff': 1.6278000000001513e-05}, {'time': 0.041361653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:55.803" endtime="20201115 22:00:55.814"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:55.843" level="INFO">${OVERHEAD} = {'diff': [1.6278000000001513e-05, 1.661099999999971e-05, 1.6986000000003554e-05, 1.712499999999978e-05, 1.6943999999997905e-05, 1.716699999999849e-05, 1.62769999999951e-05, 1.6943999999997905e-05, 1.6...</msg>
<status status="PASS" starttime="20201115 22:00:55.815" endtime="20201115 22:00:55.844"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:55.854" level="INFO">NAME: 00-overhead-18-set</msg>
<status status="PASS" starttime="20201115 22:00:55.852" endtime="20201115 22:00:55.855"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:55.859" level="INFO">VALUE: [1.6278000000001513e-05, 1.661099999999971e-05, 1.6986000000003554e-05, 1.712499999999978e-05, 1.6943999999997905e-05, 1.716699999999849e-05, 1.62769999999951e-05, 1.6943999999997905e-05, 1.6458000000003914e-05, 1.6958000000004414e-05, 1.662499999999928e-05, 1.6806000000001153e-05, 1.6792000000001583e-05, 1.709700000000064e-05, 1.6806000000001153e-05, 1.6458000000003914e-05, 1.6945000000004318e-05, 1.6277999999994575e-05, 1.6792000000001583e-05, 1.7070000000000973e-05, 1.711100000000021e-05, 1.712499999999978e-05, 1.6430000000004774e-05, 1.6611999999999183e-05, 1.712499999999978e-05, 1.662499999999928e-05, 1.6778000000002014e-05, 1.6250000000002374e-05, 1.6389000000005538e-05, 1.6929999999998335e-05, 1.661099999999971e-05, 1.6278000000008452e-05, 1.7125000000006718e-05, 1.67769999999956e-05, 1.662499999999234e-05, 1.6485999999996115e-05, 1.6778000000008952e-05, 1.693099999999781e-05, 1.6778000000008952e-05, 1.6457999999996975e-05, 1.6709000000003638e-05, 1.7165999999999015e-05, 1.630499999999424e-05, 1.6957999999997475e-05, 1.6264000000001944e-05, 1.659700000000708e-05, 1.662499999999234e-05, 1.661099999999971e-05, 1.6249999999995435e-05, 1.70969999999937e-05]</msg>
<status status="PASS" starttime="20201115 22:00:55.856" endtime="20201115 22:00:55.860"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.845" endtime="20201115 22:00:55.862"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:55.868" endtime="20201115 22:00:55.871"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:55.876" endtime="20201115 22:00:55.898"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.872" endtime="20201115 22:00:55.900"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.864" endtime="20201115 22:00:55.901"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.331" endtime="20201115 22:00:55.902"></status>
</kw>
<msg timestamp="20201115 22:00:55.902" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:55.925" endtime="20201115 22:00:55.972"></status>
</kw>
<msg timestamp="20201115 22:00:55.973" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:55.922" endtime="20201115 22:00:55.973"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:55.979" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:55.975" endtime="20201115 22:00:55.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:55.981" endtime="20201115 22:00:55.985"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.915" endtime="20201115 22:00:55.986"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.909" endtime="20201115 22:00:55.988"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:56.005" endtime="20201115 22:00:56.339"></status>
</kw>
<msg timestamp="20201115 22:00:56.346" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040651625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040668417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:56.001" endtime="20201115 22:00:56.346"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:56.363" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040651625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040668417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:56.348" endtime="20201115 22:00:56.364"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:56.366" endtime="20201115 22:00:56.372"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.994" endtime="20201115 22:00:56.373"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.989" endtime="20201115 22:00:56.375"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:56.385" level="INFO">${RESULT} = [{'time': 0.040668417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6792000000001583e-05, 'source_diff': 1.6792000000001583e-05}, {'time': 0.041414528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:56.376" endtime="20201115 22:00:56.386"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:56.415" level="INFO">${OVERHEAD} = {'diff': [1.6792000000001583e-05, 1.6264000000001944e-05, 1.680500000000168e-05, 1.6514000000002194e-05, 1.661099999999971e-05, 1.663899999999885e-05, 1.6945000000004318e-05, 1.6278000000001513e-05, 1...</msg>
<status status="PASS" starttime="20201115 22:00:56.387" endtime="20201115 22:00:56.416"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:56.426" level="INFO">NAME: 00-overhead-18-set</msg>
<status status="PASS" starttime="20201115 22:00:56.424" endtime="20201115 22:00:56.427"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:56.431" level="INFO">VALUE: [1.6792000000001583e-05, 1.6264000000001944e-05, 1.680500000000168e-05, 1.6514000000002194e-05, 1.661099999999971e-05, 1.663899999999885e-05, 1.6945000000004318e-05, 1.6278000000001513e-05, 1.712499999999978e-05, 1.712499999999978e-05, 1.679100000000211e-05, 1.630500000000118e-05, 1.661099999999971e-05, 1.6763999999995505e-05, 1.6278000000001513e-05, 1.711100000000021e-05, 1.679100000000211e-05, 1.627700000000204e-05, 1.7098000000000113e-05, 1.6278000000001513e-05, 1.6486000000003054e-05, 1.6445000000003818e-05, 1.6945000000004318e-05, 1.662499999999928e-05, 1.6471999999996545e-05, 1.6556000000000903e-05, 1.711100000000021e-05, 1.644499999999688e-05, 1.644499999999688e-05, 1.6292000000001083e-05, 1.694499999999044e-05, 1.6277999999994575e-05, 1.659700000000708e-05, 1.6457999999996975e-05, 1.6792000000001583e-05, 1.6777999999995075e-05, 1.679100000000211e-05, 1.6264000000001944e-05, 1.6417000000004678e-05, 1.6305999999993714e-05, 1.711100000000021e-05, 1.6638000000013253e-05, 1.661099999999971e-05, 1.6625000000006218e-05, 1.6278000000008452e-05, 1.712499999999284e-05, 1.70969999999937e-05, 1.662499999999234e-05, 1.645899999999645e-05, 1.6292000000001083e-05]</msg>
<status status="PASS" starttime="20201115 22:00:56.428" endtime="20201115 22:00:56.432"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.417" endtime="20201115 22:00:56.434"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:56.440" endtime="20201115 22:00:56.443"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:56.448" endtime="20201115 22:00:56.470"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.444" endtime="20201115 22:00:56.472"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.436" endtime="20201115 22:00:56.473"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.904" endtime="20201115 22:00:56.474"></status>
</kw>
<msg timestamp="20201115 22:00:56.474" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:56.497" endtime="20201115 22:00:56.543"></status>
</kw>
<msg timestamp="20201115 22:00:56.545" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:56.494" endtime="20201115 22:00:56.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:56.551" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:56.547" endtime="20201115 22:00:56.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:56.553" endtime="20201115 22:00:56.557"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.487" endtime="20201115 22:00:56.558"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.481" endtime="20201115 22:00:56.560"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:56.576" endtime="20201115 22:00:56.911"></status>
</kw>
<msg timestamp="20201115 22:00:56.918" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040509528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040526653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:56.573" endtime="20201115 22:00:56.919"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:56.936" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040509528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040526653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:56.921" endtime="20201115 22:00:56.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:56.939" endtime="20201115 22:00:56.944"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.566" endtime="20201115 22:00:56.946"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.561" endtime="20201115 22:00:56.947"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:56.958" level="INFO">${RESULT} = [{'time': 0.040526653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.712499999999978e-05, 'source_diff': 1.712499999999978e-05}, {'time': 0.041274375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:56.949" endtime="20201115 22:00:56.958"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:56.988" level="INFO">${OVERHEAD} = {'diff': [1.712499999999978e-05, 1.6778000000002014e-05, 1.691699999999824e-05, 1.6749999999995935e-05, 1.711100000000021e-05, 1.6625000000006218e-05, 1.711100000000021e-05, 1.643099999999731e-05, 1.6...</msg>
<status status="PASS" starttime="20201115 22:00:56.960" endtime="20201115 22:00:56.988"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:56.999" level="INFO">NAME: 00-overhead-18-set</msg>
<status status="PASS" starttime="20201115 22:00:56.997" endtime="20201115 22:00:57.000"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:57.004" level="INFO">VALUE: [1.712499999999978e-05, 1.6778000000002014e-05, 1.691699999999824e-05, 1.6749999999995935e-05, 1.711100000000021e-05, 1.6625000000006218e-05, 1.711100000000021e-05, 1.643099999999731e-05, 1.6778000000002014e-05, 1.6249999999995435e-05, 1.6930000000005274e-05, 1.6264000000001944e-05, 1.661099999999971e-05, 1.712499999999978e-05, 1.6278000000001513e-05, 1.690299999999867e-05, 1.6278000000001513e-05, 1.709700000000064e-05, 1.661099999999971e-05, 1.662499999999928e-05, 1.694499999999738e-05, 1.6430000000004774e-05, 1.629100000000161e-05, 1.6749999999995935e-05, 1.712499999999978e-05, 1.645899999999645e-05, 1.6945000000004318e-05, 1.659700000000014e-05, 1.6972000000003984e-05, 1.711100000000021e-05, 1.661099999999971e-05, 1.6944000000004844e-05, 1.6792000000001583e-05, 1.7165999999999015e-05, 1.6929999999998335e-05, 1.70969999999937e-05, 1.693099999999781e-05, 1.6944000000004844e-05, 1.713899999999935e-05, 1.62769999999951e-05, 1.659700000000708e-05, 1.6277999999994575e-05, 1.6944000000004844e-05, 1.6264000000001944e-05, 1.6429999999997835e-05, 1.6264000000001944e-05, 1.630499999999424e-05, 1.6777999999995075e-05, 1.6305999999993714e-05, 1.6792000000001583e-05]</msg>
<status status="PASS" starttime="20201115 22:00:57.001" endtime="20201115 22:00:57.005"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.990" endtime="20201115 22:00:57.007"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:57.013" endtime="20201115 22:00:57.016"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:57.021" endtime="20201115 22:00:57.043"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.017" endtime="20201115 22:00:57.045"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.009" endtime="20201115 22:00:57.046"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.476" endtime="20201115 22:00:57.047"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.176" endtime="20201115 22:00:57.047"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.174" endtime="20201115 22:00:57.048"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:57.053" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:57.075" endtime="20201115 22:00:57.124"></status>
</kw>
<msg timestamp="20201115 22:00:57.125" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:57.072" endtime="20201115 22:00:57.125"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:57.131" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:57.127" endtime="20201115 22:00:57.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:57.133" endtime="20201115 22:00:57.137"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.065" endtime="20201115 22:00:57.139"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.059" endtime="20201115 22:00:57.141"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:57.157" endtime="20201115 22:00:57.495"></status>
</kw>
<msg timestamp="20201115 22:00:57.502" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045867069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04588425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:00:57.154" endtime="20201115 22:00:57.502"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:57.520" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045867069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04588425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:00:57.504" endtime="20201115 22:00:57.520"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:57.522" endtime="20201115 22:00:57.526"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.147" endtime="20201115 22:00:57.527"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.142" endtime="20201115 22:00:57.529"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:57.539" level="INFO">${RESULT} = [{'time': 0.04588425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.718099999999806e-05, 'source_diff': 1.718099999999806e-05}, {'time': 0.046669167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:00:57.530" endtime="20201115 22:00:57.540"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:57.569" level="INFO">${OVERHEAD} = {'diff': [1.718099999999806e-05, 1.7348000000000363e-05, 1.67089999999967e-05, 1.68889999999991e-05, 1.704100000000236e-05, 1.687499999999953e-05, 1.6528000000001764e-05, 1.687499999999953e-05, 1.6500...</msg>
<status status="PASS" starttime="20201115 22:00:57.541" endtime="20201115 22:00:57.570"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:57.580" level="INFO">NAME: 00-overhead-19-set</msg>
<status status="PASS" starttime="20201115 22:00:57.578" endtime="20201115 22:00:57.581"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:57.586" level="INFO">VALUE: [1.718099999999806e-05, 1.7348000000000363e-05, 1.67089999999967e-05, 1.68889999999991e-05, 1.704100000000236e-05, 1.687499999999953e-05, 1.6528000000001764e-05, 1.687499999999953e-05, 1.6500000000002624e-05, 1.73889999999996e-05, 1.73889999999996e-05, 1.7209000000004138e-05, 1.654100000000186e-05, 1.6681000000004498e-05, 1.6514000000002194e-05, 1.6929999999998335e-05, 1.702699999999585e-05, 1.736100000000046e-05, 1.733299999999438e-05, 1.718099999999806e-05, 1.6709000000003638e-05, 1.6527999999994825e-05, 1.690299999999867e-05, 1.719499999999763e-05, 1.6541999999994395e-05, 1.706899999999456e-05, 1.7387999999993187e-05, 1.6471999999989606e-05, 1.7181000000004998e-05, 1.7179999999991646e-05, 1.6500000000002624e-05, 1.7222000000011173e-05, 1.7014000000009633e-05, 1.719499999999763e-05, 1.686099999999302e-05, 1.737500000000003e-05, 1.702700000000279e-05, 1.736099999999352e-05, 1.687499999999953e-05, 1.6695000000011007e-05, 1.67369999999889e-05, 1.736099999999352e-05, 1.7084000000000543e-05, 1.686099999999302e-05, 1.6708000000004164e-05, 1.734700000000089e-05, 1.687499999999953e-05, 1.7028000000002264e-05, 1.6693999999997655e-05, 1.6681000000004498e-05]</msg>
<status status="PASS" starttime="20201115 22:00:57.583" endtime="20201115 22:00:57.587"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.571" endtime="20201115 22:00:57.588"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:57.595" endtime="20201115 22:00:57.597"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:57.603" endtime="20201115 22:00:57.625"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.599" endtime="20201115 22:00:57.627"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.590" endtime="20201115 22:00:57.628"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.054" endtime="20201115 22:00:57.629"></status>
</kw>
<msg timestamp="20201115 22:00:57.629" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:57.654" endtime="20201115 22:00:57.702"></status>
</kw>
<msg timestamp="20201115 22:00:57.704" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:57.650" endtime="20201115 22:00:57.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:57.710" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:57.706" endtime="20201115 22:00:57.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:57.713" endtime="20201115 22:00:57.716"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.643" endtime="20201115 22:00:57.718"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.636" endtime="20201115 22:00:57.719"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:57.736" endtime="20201115 22:00:58.072"></status>
</kw>
<msg timestamp="20201115 22:00:58.079" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042469806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042486486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:57.733" endtime="20201115 22:00:58.079"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:58.097" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042469806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042486486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:58.081" endtime="20201115 22:00:58.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:58.099" endtime="20201115 22:00:58.104"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.725" endtime="20201115 22:00:58.106"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.721" endtime="20201115 22:00:58.107"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:58.118" level="INFO">${RESULT} = [{'time': 0.042486486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6679999999998085e-05, 'source_diff': 1.6679999999998085e-05}, {'time': 0.043270583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:58.109" endtime="20201115 22:00:58.118"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:58.148" level="INFO">${OVERHEAD} = {'diff': [1.6679999999998085e-05, 1.687499999999953e-05, 1.6722000000003734e-05, 1.7027999999995325e-05, 1.7028000000002264e-05, 1.704100000000236e-05, 1.7042000000001833e-05, 1.7013999999995755e-05, ...</msg>
<status status="PASS" starttime="20201115 22:00:58.120" endtime="20201115 22:00:58.149"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:58.159" level="INFO">NAME: 00-overhead-19-set</msg>
<status status="PASS" starttime="20201115 22:00:58.157" endtime="20201115 22:00:58.160"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:58.164" level="INFO">VALUE: [1.6679999999998085e-05, 1.687499999999953e-05, 1.6722000000003734e-05, 1.7027999999995325e-05, 1.7028000000002264e-05, 1.704100000000236e-05, 1.7042000000001833e-05, 1.7013999999995755e-05, 1.6861999999999433e-05, 1.702699999999585e-05, 1.7027999999995325e-05, 1.702700000000279e-05, 1.7028000000002264e-05, 1.6999999999996185e-05, 1.6721999999996795e-05, 1.665299999999842e-05, 1.6556000000000903e-05, 1.6707999999997225e-05, 1.687499999999953e-05, 1.6542000000001333e-05, 1.687499999999953e-05, 1.6861999999999433e-05, 1.7223000000003708e-05, 1.736100000000046e-05, 1.7348000000000363e-05, 1.737500000000003e-05, 1.736099999999352e-05, 1.736099999999352e-05, 1.7056000000001403e-05, 1.737500000000003e-05, 1.7027999999988386e-05, 1.686099999999302e-05, 1.6847999999999863e-05, 1.684700000000039e-05, 1.7209000000004138e-05, 1.736099999999352e-05, 1.70410000000093e-05, 1.7056000000001403e-05, 1.6709000000003638e-05, 1.7165999999999015e-05, 1.684700000000039e-05, 1.669499999999713e-05, 1.7042000000008772e-05, 1.7193999999998155e-05, 1.7209000000004138e-05, 1.737500000000003e-05, 1.6693999999997655e-05, 1.6528000000001764e-05, 1.655500000000143e-05, 1.705500000000193e-05]</msg>
<status status="PASS" starttime="20201115 22:00:58.161" endtime="20201115 22:00:58.165"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.150" endtime="20201115 22:00:58.167"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:58.173" endtime="20201115 22:00:58.176"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:58.181" endtime="20201115 22:00:58.203"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.177" endtime="20201115 22:00:58.205"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.169" endtime="20201115 22:00:58.206"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.630" endtime="20201115 22:00:58.207"></status>
</kw>
<msg timestamp="20201115 22:00:58.207" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:58.230" endtime="20201115 22:00:58.279"></status>
</kw>
<msg timestamp="20201115 22:00:58.280" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:58.226" endtime="20201115 22:00:58.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:58.287" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:58.283" endtime="20201115 22:00:58.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:58.289" endtime="20201115 22:00:58.293"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.219" endtime="20201115 22:00:58.294"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.214" endtime="20201115 22:00:58.296"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:58.312" endtime="20201115 22:00:58.647"></status>
</kw>
<msg timestamp="20201115 22:00:58.654" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041291347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041308375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:58.309" endtime="20201115 22:00:58.655"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:58.673" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041291347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041308375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:58.657" endtime="20201115 22:00:58.674"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:58.675" endtime="20201115 22:00:58.680"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.302" endtime="20201115 22:00:58.682"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.297" endtime="20201115 22:00:58.684"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:58.694" level="INFO">${RESULT} = [{'time': 0.041308375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7028000000002264e-05, 'source_diff': 1.7028000000002264e-05}, {'time': 0.042091389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:58.685" endtime="20201115 22:00:58.694"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:58.724" level="INFO">${OVERHEAD} = {'diff': [1.7028000000002264e-05, 1.7028000000002264e-05, 1.7207999999997725e-05, 1.7193999999998155e-05, 1.684700000000039e-05, 1.6708000000004164e-05, 1.6943999999997905e-05, 1.6514000000002194e-05,...</msg>
<status status="PASS" starttime="20201115 22:00:58.696" endtime="20201115 22:00:58.725"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:58.735" level="INFO">NAME: 00-overhead-19-set</msg>
<status status="PASS" starttime="20201115 22:00:58.733" endtime="20201115 22:00:58.736"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:58.740" level="INFO">VALUE: [1.7028000000002264e-05, 1.7028000000002264e-05, 1.7207999999997725e-05, 1.7193999999998155e-05, 1.684700000000039e-05, 1.6708000000004164e-05, 1.6943999999997905e-05, 1.6514000000002194e-05, 1.7041999999994895e-05, 1.6903000000005608e-05, 1.736100000000046e-05, 1.6750000000002874e-05, 1.687499999999953e-05, 1.7305999999994714e-05, 1.687499999999953e-05, 1.718099999999806e-05, 1.7028000000002264e-05, 1.716699999999849e-05, 1.7014000000002694e-05, 1.7042000000001833e-05, 1.686099999999996e-05, 1.740299999999917e-05, 1.6500000000002624e-05, 1.684699999999345e-05, 1.687499999999953e-05, 1.647299999999602e-05, 1.686099999999996e-05, 1.737500000000003e-05, 1.7207999999990786e-05, 1.655500000000143e-05, 1.7417000000005678e-05, 1.652700000000229e-05, 1.683299999999388e-05, 1.684700000000039e-05, 1.652700000000229e-05, 1.734700000000089e-05, 1.687499999999953e-05, 1.7193999999998155e-05, 1.684700000000039e-05, 1.670899999998976e-05, 1.743099999999831e-05, 1.6694000000011533e-05, 1.6861999999992494e-05, 1.7348000000000363e-05, 1.669499999999713e-05, 1.6554999999987552e-05, 1.6862000000006372e-05, 1.647299999998908e-05, 1.7362000000006872e-05, 1.687499999999953e-05]</msg>
<status status="PASS" starttime="20201115 22:00:58.737" endtime="20201115 22:00:58.741"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.726" endtime="20201115 22:00:58.743"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:58.749" endtime="20201115 22:00:58.751"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:58.757" endtime="20201115 22:00:58.779"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.753" endtime="20201115 22:00:58.781"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.744" endtime="20201115 22:00:58.782"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.208" endtime="20201115 22:00:58.784"></status>
</kw>
<msg timestamp="20201115 22:00:58.784" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:58.808" endtime="20201115 22:00:58.856"></status>
</kw>
<msg timestamp="20201115 22:00:58.857" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:58.805" endtime="20201115 22:00:58.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:58.864" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:58.860" endtime="20201115 22:00:58.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:58.866" endtime="20201115 22:00:58.870"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.797" endtime="20201115 22:00:58.872"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.791" endtime="20201115 22:00:58.873"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:58.889" endtime="20201115 22:00:59.226"></status>
</kw>
<msg timestamp="20201115 22:00:59.233" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042458306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042475319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:58.886" endtime="20201115 22:00:59.233"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:59.251" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042458306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042475319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:59.235" endtime="20201115 22:00:59.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:59.254" endtime="20201115 22:00:59.259"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.879" endtime="20201115 22:00:59.261"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.874" endtime="20201115 22:00:59.262"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:59.273" level="INFO">${RESULT} = [{'time': 0.042475319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.701299999999628e-05, 'source_diff': 1.701299999999628e-05}, {'time': 0.0432575, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:00:59.264" endtime="20201115 22:00:59.273"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:59.303" level="INFO">${OVERHEAD} = {'diff': [1.701299999999628e-05, 1.7221999999997295e-05, 1.737500000000003e-05, 1.6971999999997045e-05, 1.7179999999998585e-05, 1.704100000000236e-05, 1.6513999999995255e-05, 1.6542000000001333e-05, 1...</msg>
<status status="PASS" starttime="20201115 22:00:59.275" endtime="20201115 22:00:59.304"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:59.314" level="INFO">NAME: 00-overhead-19-set</msg>
<status status="PASS" starttime="20201115 22:00:59.312" endtime="20201115 22:00:59.315"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:59.320" level="INFO">VALUE: [1.701299999999628e-05, 1.7221999999997295e-05, 1.737500000000003e-05, 1.6971999999997045e-05, 1.7179999999998585e-05, 1.704100000000236e-05, 1.6513999999995255e-05, 1.6542000000001333e-05, 1.7013999999995755e-05, 1.7056000000001403e-05, 1.7014000000002694e-05, 1.736100000000046e-05, 1.719499999999763e-05, 1.6681000000004498e-05, 1.659700000000014e-05, 1.719499999999763e-05, 1.6541999999994395e-05, 1.7014000000002694e-05, 1.7028000000002264e-05, 1.6707999999997225e-05, 1.702700000000279e-05, 1.666699999999799e-05, 1.6709000000003638e-05, 1.683300000000082e-05, 1.7014000000002694e-05, 1.6693999999997655e-05, 1.6693999999997655e-05, 1.7208000000004664e-05, 1.6514000000009132e-05, 1.6694000000011533e-05, 1.6513999999995255e-05, 1.7014000000009633e-05, 1.7013999999995755e-05, 1.737500000000003e-05, 1.6611000000013587e-05, 1.6847999999999863e-05, 1.6527999999987886e-05, 1.669499999999713e-05, 1.7194000000012033e-05, 1.6541999999994395e-05, 1.719499999999763e-05, 1.6708000000004164e-05, 1.7207999999990786e-05, 1.7193999999998155e-05, 1.652700000000229e-05, 1.6693999999997655e-05, 1.6862000000006372e-05, 1.6999999999989246e-05, 1.652700000000229e-05, 1.7028000000002264e-05]</msg>
<status status="PASS" starttime="20201115 22:00:59.317" endtime="20201115 22:00:59.321"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.305" endtime="20201115 22:00:59.322"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:59.329" endtime="20201115 22:00:59.332"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:59.338" endtime="20201115 22:00:59.359"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.333" endtime="20201115 22:00:59.361"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.325" endtime="20201115 22:00:59.362"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.786" endtime="20201115 22:00:59.363"></status>
</kw>
<msg timestamp="20201115 22:00:59.364" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:59.386" endtime="20201115 22:00:59.435"></status>
</kw>
<msg timestamp="20201115 22:00:59.436" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:59.383" endtime="20201115 22:00:59.436"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:59.442" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:59.438" endtime="20201115 22:00:59.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:59.444" endtime="20201115 22:00:59.448"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.376" endtime="20201115 22:00:59.450"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.370" endtime="20201115 22:00:59.451"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:59.468" endtime="20201115 22:00:59.803"></status>
</kw>
<msg timestamp="20201115 22:00:59.810" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040782347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040798833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:59.464" endtime="20201115 22:00:59.810"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:59.828" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040782347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040798833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:59.812" endtime="20201115 22:00:59.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:59.831" endtime="20201115 22:00:59.838"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.457" endtime="20201115 22:00:59.840"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.452" endtime="20201115 22:00:59.841"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:59.852" level="INFO">${RESULT} = [{'time': 0.040798833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6486000000003054e-05, 'source_diff': 1.6486000000003054e-05}, {'time': 0.041581861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:59.843" endtime="20201115 22:00:59.852"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:59.882" level="INFO">${OVERHEAD} = {'diff': [1.6486000000003054e-05, 1.6985999999996615e-05, 1.7361999999999933e-05, 1.719499999999763e-05, 1.7042000000001833e-05, 1.7181000000004998e-05, 1.7319999999994284e-05, 1.687499999999953e-05, ...</msg>
<status status="PASS" starttime="20201115 22:00:59.854" endtime="20201115 22:00:59.882"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:59.893" level="INFO">NAME: 00-overhead-19-set</msg>
<status status="PASS" starttime="20201115 22:00:59.890" endtime="20201115 22:00:59.893"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:59.898" level="INFO">VALUE: [1.6486000000003054e-05, 1.6985999999996615e-05, 1.7361999999999933e-05, 1.719499999999763e-05, 1.7042000000001833e-05, 1.7181000000004998e-05, 1.7319999999994284e-05, 1.687499999999953e-05, 1.6806000000001153e-05, 1.704099999999542e-05, 1.6694000000004594e-05, 1.686099999999996e-05, 1.719499999999763e-05, 1.684700000000039e-05, 1.6472000000003484e-05, 1.716699999999849e-05, 1.6695000000004068e-05, 1.7236000000003804e-05, 1.6528000000001764e-05, 1.6527999999994825e-05, 1.70690000000015e-05, 1.6542000000001333e-05, 1.6514000000002194e-05, 1.684700000000039e-05, 1.7193999999998155e-05, 1.693099999999781e-05, 1.7305999999994714e-05, 1.6653000000005358e-05, 1.686099999999302e-05, 1.6542000000008272e-05, 1.7181000000004998e-05, 1.7028000000002264e-05, 1.7195000000011507e-05, 1.663899999999885e-05, 1.7027999999988386e-05, 1.7041999999994895e-05, 1.6598000000006552e-05, 1.6709000000003638e-05, 1.7389000000006538e-05, 1.687499999999953e-05, 1.662499999999234e-05, 1.736099999999352e-05, 1.7194000000012033e-05, 1.6681000000004498e-05, 1.686099999999302e-05, 1.7207999999990786e-05, 1.684700000000039e-05, 1.6693999999997655e-05, 1.65410000000088e-05, 1.7361000000007398e-05]</msg>
<status status="PASS" starttime="20201115 22:00:59.895" endtime="20201115 22:00:59.900"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.884" endtime="20201115 22:00:59.901"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:59.907" endtime="20201115 22:00:59.910"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:59.916" endtime="20201115 22:00:59.937"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.911" endtime="20201115 22:00:59.939"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.903" endtime="20201115 22:00:59.940"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.365" endtime="20201115 22:00:59.941"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.050" endtime="20201115 22:00:59.942"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.049" endtime="20201115 22:00:59.942"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:59.947" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:59.970" endtime="20201115 22:01:00.020"></status>
</kw>
<msg timestamp="20201115 22:01:00.021" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:59.966" endtime="20201115 22:01:00.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:00.027" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:00.024" endtime="20201115 22:01:00.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:00.030" endtime="20201115 22:01:00.033"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.959" endtime="20201115 22:01:00.035"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.953" endtime="20201115 22:01:00.036"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:00.053" endtime="20201115 22:01:00.387"></status>
</kw>
<msg timestamp="20201115 22:01:00.395" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045702611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045719375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:00.050" endtime="20201115 22:01:00.395"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:00.413" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045702611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045719375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:00.397" endtime="20201115 22:01:00.413"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:00.415" endtime="20201115 22:01:00.419"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.042" endtime="20201115 22:01:00.420"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.038" endtime="20201115 22:01:00.422"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:00.432" level="INFO">${RESULT} = [{'time': 0.045719375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6764000000002444e-05, 'source_diff': 1.6764000000002444e-05}, {'time': 0.0465435, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:00.424" endtime="20201115 22:01:00.433"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:00.463" level="INFO">${OVERHEAD} = {'diff': [1.6764000000002444e-05, 1.741699999999874e-05, 1.759700000000114e-05, 1.6943999999997905e-05, 1.7139000000006288e-05, 1.7444000000005344e-05, 1.6763999999995505e-05, 1.6944000000004844e-05, ...</msg>
<status status="PASS" starttime="20201115 22:01:00.435" endtime="20201115 22:01:00.463"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:00.474" level="INFO">NAME: 00-overhead-20-set</msg>
<status status="PASS" starttime="20201115 22:01:00.471" endtime="20201115 22:01:00.474"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:00.484" level="INFO">VALUE: [1.6764000000002444e-05, 1.741699999999874e-05, 1.759700000000114e-05, 1.6943999999997905e-05, 1.7139000000006288e-05, 1.7444000000005344e-05, 1.6763999999995505e-05, 1.6944000000004844e-05, 1.6778000000002014e-05, 1.6764000000002444e-05, 1.761100000000071e-05, 1.763899999999985e-05, 1.7598000000000613e-05, 1.6986000000003554e-05, 1.7458000000004914e-05, 1.743099999999831e-05, 1.7443999999998405e-05, 1.712499999999978e-05, 1.7098000000000113e-05, 1.762500000000028e-05, 1.693099999999781e-05, 1.6957999999997475e-05, 1.6764000000002444e-05, 1.7625000000007218e-05, 1.7292000000002083e-05, 1.7444000000005344e-05, 1.6764000000002444e-05, 1.7472000000004484e-05, 1.7111999999999683e-05, 1.6764000000002444e-05, 1.712499999999284e-05, 1.6708000000004164e-05, 1.7264000000002944e-05, 1.7472000000004484e-05, 1.72369999999894e-05, 1.6764000000002444e-05, 1.7457999999997975e-05, 1.766699999999899e-05, 1.6805999999994214e-05, 1.7069999999994034e-05, 1.7444000000005344e-05, 1.715299999999198e-05, 1.7431000000012187e-05, 1.6721999999996795e-05, 1.7445000000004818e-05, 1.763899999999985e-05, 1.761100000000071e-05, 1.7597999999993674e-05, 1.7625000000007218e-05, 1.762499999999334e-05]</msg>
<status status="PASS" starttime="20201115 22:01:00.476" endtime="20201115 22:01:00.485"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.465" endtime="20201115 22:01:00.487"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:00.493" endtime="20201115 22:01:00.496"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:00.501" endtime="20201115 22:01:00.523"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.497" endtime="20201115 22:01:00.524"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.488" endtime="20201115 22:01:00.526"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.948" endtime="20201115 22:01:00.527"></status>
</kw>
<msg timestamp="20201115 22:01:00.527" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:00.550" endtime="20201115 22:01:00.600"></status>
</kw>
<msg timestamp="20201115 22:01:00.601" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:00.546" endtime="20201115 22:01:00.602"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:00.607" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:00.603" endtime="20201115 22:01:00.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:00.610" endtime="20201115 22:01:00.613"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.539" endtime="20201115 22:01:00.615"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.534" endtime="20201115 22:01:00.616"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:00.633" endtime="20201115 22:01:00.967"></status>
</kw>
<msg timestamp="20201115 22:01:00.974" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040442222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040459653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:00.629" endtime="20201115 22:01:00.975"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:00.992" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040442222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040459653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:00.976" endtime="20201115 22:01:00.993"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:00.995" endtime="20201115 22:01:01.001"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.622" endtime="20201115 22:01:01.003"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.618" endtime="20201115 22:01:01.005"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:01.016" level="INFO">${RESULT} = [{'time': 0.040459653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.743099999999831e-05, 'source_diff': 1.743099999999831e-05}, {'time': 0.041284972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:01.006" endtime="20201115 22:01:01.016"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:01.046" level="INFO">${OVERHEAD} = {'diff': [1.743099999999831e-05, 1.7153000000005858e-05, 1.7527999999995825e-05, 1.763899999999985e-05, 1.729100000000261e-05, 1.7443999999998405e-05, 1.6778000000002014e-05, 1.6778000000002014e-05, 1...</msg>
<status status="PASS" starttime="20201115 22:01:01.018" endtime="20201115 22:01:01.047"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:01.059" level="INFO">NAME: 00-overhead-20-set</msg>
<status status="PASS" starttime="20201115 22:01:01.055" endtime="20201115 22:01:01.059"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:01.064" level="INFO">VALUE: [1.743099999999831e-05, 1.7153000000005858e-05, 1.7527999999995825e-05, 1.763899999999985e-05, 1.729100000000261e-05, 1.7443999999998405e-05, 1.6778000000002014e-05, 1.6778000000002014e-05, 1.7250000000003374e-05, 1.7070000000000973e-05, 1.6763999999995505e-05, 1.6943999999997905e-05, 1.762500000000028e-05, 1.6792000000001583e-05, 1.762500000000028e-05, 1.762500000000028e-05, 1.6792000000001583e-05, 1.711100000000021e-05, 1.7443999999998405e-05, 1.7443999999998405e-05, 1.7444000000005344e-05, 1.6944000000004844e-05, 1.7292000000002083e-05, 1.711100000000021e-05, 1.6929999999998335e-05, 1.745899999999745e-05, 1.768099999999856e-05, 1.763899999999985e-05, 1.67769999999956e-05, 1.7415999999992327e-05, 1.761100000000071e-05, 1.6957999999997475e-05, 1.761100000000071e-05, 1.6929999999998335e-05, 1.711100000000021e-05, 1.7457999999997975e-05, 1.7445000000004818e-05, 1.72769999999961e-05, 1.680499999999474e-05, 1.7500000000003624e-05, 1.6973000000003458e-05, 1.7457999999997975e-05, 1.7264000000002944e-05, 1.712499999999284e-05, 1.7264000000002944e-05, 1.6957999999997475e-05, 1.768099999999162e-05, 1.677700000000948e-05, 1.711100000000021e-05, 1.6945000000004318e-05]</msg>
<status status="PASS" starttime="20201115 22:01:01.061" endtime="20201115 22:01:01.065"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.048" endtime="20201115 22:01:01.067"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:01.073" endtime="20201115 22:01:01.076"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:01.082" endtime="20201115 22:01:01.103"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.077" endtime="20201115 22:01:01.105"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.069" endtime="20201115 22:01:01.107"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.528" endtime="20201115 22:01:01.107"></status>
</kw>
<msg timestamp="20201115 22:01:01.108" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:01.131" endtime="20201115 22:01:01.181"></status>
</kw>
<msg timestamp="20201115 22:01:01.183" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:01.128" endtime="20201115 22:01:01.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:01.189" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:01.185" endtime="20201115 22:01:01.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:01.191" endtime="20201115 22:01:01.195"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.120" endtime="20201115 22:01:01.197"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.114" endtime="20201115 22:01:01.198"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:01.215" endtime="20201115 22:01:01.563"></status>
</kw>
<msg timestamp="20201115 22:01:01.570" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041324333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041341167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:01.211" endtime="20201115 22:01:01.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:01.589" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041324333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041341167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:01.573" endtime="20201115 22:01:01.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:01.592" endtime="20201115 22:01:01.597"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.204" endtime="20201115 22:01:01.599"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.199" endtime="20201115 22:01:01.600"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:01.611" level="INFO">${RESULT} = [{'time': 0.041341167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6834000000000293e-05, 'source_diff': 1.6834000000000293e-05}, {'time': 0.042168333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:01.602" endtime="20201115 22:01:01.612"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:01.643" level="INFO">${OVERHEAD} = {'diff': [1.6834000000000293e-05, 1.761100000000071e-05, 1.694499999999738e-05, 1.744499999999788e-05, 1.7444000000005344e-05, 1.762500000000028e-05, 1.7457999999997975e-05, 1.709700000000064e-05, 1.7...</msg>
<status status="PASS" starttime="20201115 22:01:01.614" endtime="20201115 22:01:01.643"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:01.654" level="INFO">NAME: 00-overhead-20-set</msg>
<status status="PASS" starttime="20201115 22:01:01.652" endtime="20201115 22:01:01.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:01.659" level="INFO">VALUE: [1.6834000000000293e-05, 1.761100000000071e-05, 1.694499999999738e-05, 1.744499999999788e-05, 1.7444000000005344e-05, 1.762500000000028e-05, 1.7457999999997975e-05, 1.709700000000064e-05, 1.7263999999996005e-05, 1.6929999999998335e-05, 1.6945000000004318e-05, 1.7638000000000376e-05, 1.6764000000002444e-05, 1.7278000000002514e-05, 1.6943999999997905e-05, 1.743099999999831e-05, 1.711100000000021e-05, 1.681900000000125e-05, 1.6792000000001583e-05, 1.6792000000001583e-05, 1.72089999999972e-05, 1.7348000000000363e-05, 1.6903000000005608e-05, 1.7569000000002e-05, 1.759700000000114e-05, 1.67769999999956e-05, 1.7125000000006718e-05, 1.6931000000011687e-05, 1.7264000000002944e-05, 1.6778000000008952e-05, 1.6957999999997475e-05, 1.6778000000008952e-05, 1.6973000000003458e-05, 1.7457999999997975e-05, 1.6985999999996615e-05, 1.694499999999044e-05, 1.7445000000004818e-05, 1.711100000000021e-05, 1.711100000000021e-05, 1.711100000000021e-05, 1.7111999999999683e-05, 1.6764000000002444e-05, 1.7348000000000363e-05, 1.740299999999917e-05, 1.7264000000002944e-05, 1.6777999999995075e-05, 1.7290999999988732e-05, 1.6777999999995075e-05, 1.6762999999989092e-05, 1.7097999999993174e-05]</msg>
<status status="PASS" starttime="20201115 22:01:01.656" endtime="20201115 22:01:01.660"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.645" endtime="20201115 22:01:01.662"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:01.668" endtime="20201115 22:01:01.671"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:01.677" endtime="20201115 22:01:01.699"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.672" endtime="20201115 22:01:01.701"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.664" endtime="20201115 22:01:01.702"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.109" endtime="20201115 22:01:01.703"></status>
</kw>
<msg timestamp="20201115 22:01:01.703" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:01.732" endtime="20201115 22:01:01.785"></status>
</kw>
<msg timestamp="20201115 22:01:01.786" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:01.728" endtime="20201115 22:01:01.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:01.794" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:01.789" endtime="20201115 22:01:01.795"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:01.797" endtime="20201115 22:01:01.802"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.719" endtime="20201115 22:01:01.804"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.712" endtime="20201115 22:01:01.806"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:01.828" endtime="20201115 22:01:02.179"></status>
</kw>
<msg timestamp="20201115 22:01:02.186" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047602694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04762, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201115 22:01:01.823" endtime="20201115 22:01:02.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:02.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047602694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04762, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201115 22:01:02.188" endtime="20201115 22:01:02.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:02.207" endtime="20201115 22:01:02.215"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.815" endtime="20201115 22:01:02.217"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.807" endtime="20201115 22:01:02.218"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:02.229" level="INFO">${RESULT} = [{'time': 0.04762, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7306000000001653e-05, 'source_diff': 1.7306000000001653e-05}, {'time': 0.048442181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:01:02.220" endtime="20201115 22:01:02.230"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:02.260" level="INFO">${OVERHEAD} = {'diff': [1.7306000000001653e-05, 1.6834000000000293e-05, 1.7429999999998835e-05, 1.6763999999995505e-05, 1.7459000000004388e-05, 1.729099999999567e-05, 1.6944000000004844e-05, 1.711100000000021e-05, ...</msg>
<status status="PASS" starttime="20201115 22:01:02.231" endtime="20201115 22:01:02.261"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:02.271" level="INFO">NAME: 00-overhead-20-set</msg>
<status status="PASS" starttime="20201115 22:01:02.269" endtime="20201115 22:01:02.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:02.277" level="INFO">VALUE: [1.7306000000001653e-05, 1.6834000000000293e-05, 1.7429999999998835e-05, 1.6763999999995505e-05, 1.7459000000004388e-05, 1.729099999999567e-05, 1.6944000000004844e-05, 1.711100000000021e-05, 1.711100000000021e-05, 1.6695000000004068e-05, 1.6764000000002444e-05, 1.7264000000002944e-05, 1.6792000000001583e-05, 1.687499999999953e-05, 1.7277999999995575e-05, 1.7277999999995575e-05, 1.763899999999985e-05, 1.711100000000021e-05, 1.6944000000004844e-05, 1.7277999999995575e-05, 1.706899999999456e-05, 1.711100000000021e-05, 1.7292000000002083e-05, 1.7666000000013393e-05, 1.7486000000010993e-05, 1.7444000000005344e-05, 1.711100000000021e-05, 1.762499999999334e-05, 1.761100000000071e-05, 1.763899999999985e-05, 1.6944000000004844e-05, 1.709700000000758e-05, 1.7013999999995755e-05, 1.6764000000002444e-05, 1.762499999999334e-05, 1.7485999999997115e-05, 1.687499999999953e-05, 1.761100000000071e-05, 1.7444000000005344e-05, 1.743099999999831e-05, 1.677700000000948e-05, 1.7290999999988732e-05, 1.6792000000001583e-05, 1.761100000000071e-05, 1.6957999999997475e-05, 1.711100000000021e-05, 1.6944000000004844e-05, 1.7291999999988206e-05, 1.6931000000011687e-05, 1.681900000000125e-05]</msg>
<status status="PASS" starttime="20201115 22:01:02.274" endtime="20201115 22:01:02.278"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.262" endtime="20201115 22:01:02.280"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:02.286" endtime="20201115 22:01:02.289"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:02.295" endtime="20201115 22:01:02.316"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.290" endtime="20201115 22:01:02.318"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.281" endtime="20201115 22:01:02.320"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.705" endtime="20201115 22:01:02.321"></status>
</kw>
<msg timestamp="20201115 22:01:02.321" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:02.345" endtime="20201115 22:01:02.396"></status>
</kw>
<msg timestamp="20201115 22:01:02.397" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:02.341" endtime="20201115 22:01:02.397"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:02.403" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:02.399" endtime="20201115 22:01:02.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:02.406" endtime="20201115 22:01:02.410"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.334" endtime="20201115 22:01:02.411"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.328" endtime="20201115 22:01:02.413"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:02.430" endtime="20201115 22:01:02.779"></status>
</kw>
<msg timestamp="20201115 22:01:02.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041967181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041984444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:02.426" endtime="20201115 22:01:02.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:02.805" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041967181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041984444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:02.789" endtime="20201115 22:01:02.806"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:02.808" endtime="20201115 22:01:02.813"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.419" endtime="20201115 22:01:02.815"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.414" endtime="20201115 22:01:02.816"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:02.827" level="INFO">${RESULT} = [{'time': 0.041984444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.726300000000347e-05, 'source_diff': 1.726300000000347e-05}, {'time': 0.042809667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:02.818" endtime="20201115 22:01:02.828"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:02.858" level="INFO">${OVERHEAD} = {'diff': [1.726300000000347e-05, 1.6764000000002444e-05, 1.6763999999995505e-05, 1.6791999999994645e-05, 1.727700000000304e-05, 1.7278000000002514e-05, 1.745899999999745e-05, 1.684700000000039e-05, 1....</msg>
<status status="PASS" starttime="20201115 22:01:02.829" endtime="20201115 22:01:02.859"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:02.869" level="INFO">NAME: 00-overhead-20-set</msg>
<status status="PASS" starttime="20201115 22:01:02.867" endtime="20201115 22:01:02.870"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:02.875" level="INFO">VALUE: [1.726300000000347e-05, 1.6764000000002444e-05, 1.6763999999995505e-05, 1.6791999999994645e-05, 1.727700000000304e-05, 1.7278000000002514e-05, 1.745899999999745e-05, 1.684700000000039e-05, 1.6778000000002014e-05, 1.6778000000002014e-05, 1.7445000000004818e-05, 1.6777999999995075e-05, 1.7443999999998405e-05, 1.709700000000064e-05, 1.679100000000211e-05, 1.7415999999999265e-05, 1.7429999999998835e-05, 1.759700000000114e-05, 1.761100000000071e-05, 1.7278000000002514e-05, 1.713899999999935e-05, 1.7235999999996865e-05, 1.7263999999996005e-05, 1.676300000000297e-05, 1.759700000000114e-05, 1.6764000000002444e-05, 1.7292000000002083e-05, 1.6777999999995075e-05, 1.7445000000004818e-05, 1.6957999999997475e-05, 1.7457999999997975e-05, 1.6693999999997655e-05, 1.6792000000001583e-05, 1.7444000000005344e-05, 1.6749999999995935e-05, 1.6929999999998335e-05, 1.70969999999937e-05, 1.67769999999956e-05, 1.713899999999935e-05, 1.7249999999996435e-05, 1.7431000000012187e-05, 1.72769999999961e-05, 1.6792000000001583e-05, 1.695899999999695e-05, 1.6777999999995075e-05, 1.7277999999995575e-05, 1.7333999999993854e-05, 1.7291999999988206e-05, 1.745899999999745e-05, 1.6943999999990966e-05]</msg>
<status status="PASS" starttime="20201115 22:01:02.872" endtime="20201115 22:01:02.876"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.860" endtime="20201115 22:01:02.878"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:02.884" endtime="20201115 22:01:02.887"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:02.893" endtime="20201115 22:01:02.915"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.888" endtime="20201115 22:01:02.917"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.880" endtime="20201115 22:01:02.919"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.322" endtime="20201115 22:01:02.919"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.945" endtime="20201115 22:01:02.920"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.943" endtime="20201115 22:01:02.920"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:02.926" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:02.949" endtime="20201115 22:01:03.003"></status>
</kw>
<msg timestamp="20201115 22:01:03.004" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:02.946" endtime="20201115 22:01:03.004"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:03.010" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:03.006" endtime="20201115 22:01:03.011"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:03.012" endtime="20201115 22:01:03.016"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.939" endtime="20201115 22:01:03.018"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.933" endtime="20201115 22:01:03.020"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:03.037" endtime="20201115 22:01:03.390"></status>
</kw>
<msg timestamp="20201115 22:01:03.397" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048176417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048193375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:03.034" endtime="20201115 22:01:03.397"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:03.415" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048176417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048193375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:03.399" endtime="20201115 22:01:03.416"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:03.418" endtime="20201115 22:01:03.422"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.027" endtime="20201115 22:01:03.424"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.021" endtime="20201115 22:01:03.425"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:03.436" level="INFO">${RESULT} = [{'time': 0.048193375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6957999999997475e-05, 'source_diff': 1.6957999999997475e-05}, {'time': 0.049055569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:03.427" endtime="20201115 22:01:03.436"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:03.467" level="INFO">${OVERHEAD} = {'diff': [1.6957999999997475e-05, 1.7401999999999695e-05, 1.7208000000004664e-05, 1.769499999999813e-05, 1.7527999999995825e-05, 1.7764000000003444e-05, 1.786100000000096e-05, 1.7514000000003194e-05, ...</msg>
<status status="PASS" starttime="20201115 22:01:03.438" endtime="20201115 22:01:03.467"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:03.478" level="INFO">NAME: 00-overhead-21-set</msg>
<status status="PASS" starttime="20201115 22:01:03.476" endtime="20201115 22:01:03.479"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:03.484" level="INFO">VALUE: [1.6957999999997475e-05, 1.7401999999999695e-05, 1.7208000000004664e-05, 1.769499999999813e-05, 1.7527999999995825e-05, 1.7764000000003444e-05, 1.786100000000096e-05, 1.7514000000003194e-05, 1.784700000000139e-05, 1.73889999999996e-05, 1.7221999999997295e-05, 1.729100000000261e-05, 1.719499999999763e-05, 1.7194000000005094e-05, 1.7193999999998155e-05, 1.787500000000053e-05, 1.7693999999998655e-05, 1.790299999999967e-05, 1.718099999999112e-05, 1.769499999999813e-05, 1.787500000000053e-05, 1.7195000000011507e-05, 1.754099999999592e-05, 1.7693999999998655e-05, 1.769499999999813e-05, 1.7041999999994895e-05, 1.6959000000010827e-05, 1.7151999999992507e-05, 1.788899999999316e-05, 1.7181000000004998e-05, 1.786099999999402e-05, 1.7208000000004664e-05, 1.787500000000053e-05, 1.7193999999998155e-05, 1.713899999999935e-05, 1.7389000000006538e-05, 1.72369999999894e-05, 1.719499999999763e-05, 1.7388000000007064e-05, 1.7693999999998655e-05, 1.7528000000002764e-05, 1.7208000000004664e-05, 1.704099999999542e-05, 1.7695000000012007e-05, 1.7527999999988886e-05, 1.783299999999488e-05, 1.7889000000007038e-05, 1.7193999999998155e-05, 1.766699999999899e-05, 1.736099999999352e-05]</msg>
<status status="PASS" starttime="20201115 22:01:03.481" endtime="20201115 22:01:03.485"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.469" endtime="20201115 22:01:03.486"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:03.493" endtime="20201115 22:01:03.496"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:03.501" endtime="20201115 22:01:03.524"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.497" endtime="20201115 22:01:03.525"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.488" endtime="20201115 22:01:03.527"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.927" endtime="20201115 22:01:03.527"></status>
</kw>
<msg timestamp="20201115 22:01:03.528" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:03.551" endtime="20201115 22:01:03.605"></status>
</kw>
<msg timestamp="20201115 22:01:03.606" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:03.548" endtime="20201115 22:01:03.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:03.613" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:03.608" endtime="20201115 22:01:03.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:03.615" endtime="20201115 22:01:03.619"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.541" endtime="20201115 22:01:03.621"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.535" endtime="20201115 22:01:03.622"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:03.639" endtime="20201115 22:01:03.986"></status>
</kw>
<msg timestamp="20201115 22:01:03.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041911806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041929167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:03.636" endtime="20201115 22:01:03.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:04.011" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041911806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041929167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:03.996" endtime="20201115 22:01:04.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:04.014" endtime="20201115 22:01:04.019"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.628" endtime="20201115 22:01:04.021"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.624" endtime="20201115 22:01:04.022"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:04.033" level="INFO">${RESULT} = [{'time': 0.041929167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.736100000000046e-05, 'source_diff': 1.736100000000046e-05}, {'time': 0.042794444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:04.024" endtime="20201115 22:01:04.034"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:04.065" level="INFO">${OVERHEAD} = {'diff': [1.736100000000046e-05, 1.754100000000286e-05, 1.763899999999985e-05, 1.736100000000046e-05, 1.702700000000279e-05, 1.755499999999549e-05, 1.734700000000089e-05, 1.7000000000003124e-05, 1.704...</msg>
<status status="PASS" starttime="20201115 22:01:04.035" endtime="20201115 22:01:04.065"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:04.076" level="INFO">NAME: 00-overhead-21-set</msg>
<status status="PASS" starttime="20201115 22:01:04.073" endtime="20201115 22:01:04.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:04.081" level="INFO">VALUE: [1.736100000000046e-05, 1.754100000000286e-05, 1.763899999999985e-05, 1.736100000000046e-05, 1.702700000000279e-05, 1.755499999999549e-05, 1.734700000000089e-05, 1.7000000000003124e-05, 1.7042000000001833e-05, 1.7181000000004998e-05, 1.752700000000329e-05, 1.7707999999998225e-05, 1.7014000000002694e-05, 1.736100000000046e-05, 1.7915999999999765e-05, 1.7542000000002334e-05, 1.769499999999813e-05, 1.7028000000002264e-05, 1.784699999999445e-05, 1.7707999999998225e-05, 1.736100000000046e-05, 1.7250000000003374e-05, 1.7527999999995825e-05, 1.7028000000002264e-05, 1.7805999999995215e-05, 1.769499999999813e-05, 1.7013999999995755e-05, 1.7361000000007398e-05, 1.7193999999998155e-05, 1.734700000000089e-05, 1.736099999999352e-05, 1.786099999999402e-05, 1.787499999998665e-05, 1.7500000000003624e-05, 1.769499999999813e-05, 1.7708000000005164e-05, 1.7042000000008772e-05, 1.6985999999996615e-05, 1.7416000000006204e-05, 1.7500000000003624e-05, 1.7693999999998655e-05, 1.7207999999990786e-05, 1.790299999999967e-05, 1.7000000000003124e-05, 1.713899999999935e-05, 1.7527999999988886e-05, 1.7028000000002264e-05, 1.736099999999352e-05, 1.737500000000003e-05, 1.7028000000002264e-05]</msg>
<status status="PASS" starttime="20201115 22:01:04.078" endtime="20201115 22:01:04.082"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.067" endtime="20201115 22:01:04.084"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:04.090" endtime="20201115 22:01:04.093"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:04.098" endtime="20201115 22:01:04.120"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.094" endtime="20201115 22:01:04.122"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.085" endtime="20201115 22:01:04.123"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.529" endtime="20201115 22:01:04.124"></status>
</kw>
<msg timestamp="20201115 22:01:04.124" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:04.148" endtime="20201115 22:01:04.201"></status>
</kw>
<msg timestamp="20201115 22:01:04.202" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:04.144" endtime="20201115 22:01:04.202"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:04.208" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:04.204" endtime="20201115 22:01:04.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:04.211" endtime="20201115 22:01:04.214"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.137" endtime="20201115 22:01:04.216"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.131" endtime="20201115 22:01:04.217"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:04.234" endtime="20201115 22:01:04.576"></status>
</kw>
<msg timestamp="20201115 22:01:04.583" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041865264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041882972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:04.231" endtime="20201115 22:01:04.583"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:04.601" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041865264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041882972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:04.585" endtime="20201115 22:01:04.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:04.603" endtime="20201115 22:01:04.611"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.223" endtime="20201115 22:01:04.612"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.219" endtime="20201115 22:01:04.614"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:04.624" level="INFO">${RESULT} = [{'time': 0.041882972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7707999999998225e-05, 'source_diff': 1.7707999999998225e-05}, {'time': 0.042751083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:04.615" endtime="20201115 22:01:04.625"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:04.727" level="INFO">${OVERHEAD} = {'diff': [1.7707999999998225e-05, 1.7679999999999085e-05, 1.768099999999856e-05, 1.787500000000053e-05, 1.7042000000001833e-05, 1.7528000000002764e-05, 1.765299999999942e-05, 1.737500000000003e-05, 1....</msg>
<status status="PASS" starttime="20201115 22:01:04.626" endtime="20201115 22:01:04.727"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:04.738" level="INFO">NAME: 00-overhead-21-set</msg>
<status status="PASS" starttime="20201115 22:01:04.736" endtime="20201115 22:01:04.739"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:04.743" level="INFO">VALUE: [1.7707999999998225e-05, 1.7679999999999085e-05, 1.768099999999856e-05, 1.787500000000053e-05, 1.7042000000001833e-05, 1.7528000000002764e-05, 1.765299999999942e-05, 1.737500000000003e-05, 1.6999999999996185e-05, 1.7722000000004734e-05, 1.787499999999359e-05, 1.719499999999763e-05, 1.736100000000046e-05, 1.7042000000001833e-05, 1.787500000000053e-05, 1.7792000000002584e-05, 1.786100000000096e-05, 1.7721999999997795e-05, 1.787500000000053e-05, 1.7485999999997115e-05, 1.736100000000046e-05, 1.7388000000000126e-05, 1.7665999999999515e-05, 1.736100000000046e-05, 1.7792000000002584e-05, 1.786099999999402e-05, 1.7056000000001403e-05, 1.787500000000053e-05, 1.78610000000079e-05, 1.737500000000003e-05, 1.7526999999989412e-05, 1.7708000000005164e-05, 1.786099999999402e-05, 1.737500000000003e-05, 1.7708000000005164e-05, 1.7027999999988386e-05, 1.7389000000006538e-05, 1.78610000000079e-05, 1.7013999999995755e-05, 1.787500000000053e-05, 1.7693999999998655e-05, 1.784700000000139e-05, 1.7028000000002264e-05, 1.7708000000005164e-05, 1.736099999999352e-05, 1.734700000000089e-05, 1.7693999999998655e-05, 1.787500000000053e-05, 1.754099999999592e-05, 1.708300000000107e-05]</msg>
<status status="PASS" starttime="20201115 22:01:04.740" endtime="20201115 22:01:04.744"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.729" endtime="20201115 22:01:04.746"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:04.752" endtime="20201115 22:01:04.755"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:04.760" endtime="20201115 22:01:04.782"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.756" endtime="20201115 22:01:04.784"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.747" endtime="20201115 22:01:04.785"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.126" endtime="20201115 22:01:04.786"></status>
</kw>
<msg timestamp="20201115 22:01:04.787" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:04.811" endtime="20201115 22:01:04.864"></status>
</kw>
<msg timestamp="20201115 22:01:04.865" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:04.807" endtime="20201115 22:01:04.865"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:04.871" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:04.867" endtime="20201115 22:01:04.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:04.873" endtime="20201115 22:01:04.877"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.799" endtime="20201115 22:01:04.879"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.794" endtime="20201115 22:01:04.880"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:04.897" endtime="20201115 22:01:05.236"></status>
</kw>
<msg timestamp="20201115 22:01:05.243" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042847014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042864028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:04.893" endtime="20201115 22:01:05.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:05.263" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042847014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042864028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:05.246" endtime="20201115 22:01:05.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:05.265" endtime="20201115 22:01:05.269"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.886" endtime="20201115 22:01:05.271"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.882" endtime="20201115 22:01:05.272"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:05.283" level="INFO">${RESULT} = [{'time': 0.042864028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7013999999995755e-05, 'source_diff': 1.7013999999995755e-05}, {'time': 0.043728375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:05.274" endtime="20201115 22:01:05.283"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:05.313" level="INFO">${OVERHEAD} = {'diff': [1.7013999999995755e-05, 1.766699999999899e-05, 1.7736000000004304e-05, 1.7041999999994895e-05, 1.787500000000053e-05, 1.737500000000003e-05, 1.786100000000096e-05, 1.737500000000003e-05, 1.7...</msg>
<status status="PASS" starttime="20201115 22:01:05.285" endtime="20201115 22:01:05.314"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:05.324" level="INFO">NAME: 00-overhead-21-set</msg>
<status status="PASS" starttime="20201115 22:01:05.322" endtime="20201115 22:01:05.325"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:05.330" level="INFO">VALUE: [1.7013999999995755e-05, 1.766699999999899e-05, 1.7736000000004304e-05, 1.7041999999994895e-05, 1.787500000000053e-05, 1.737500000000003e-05, 1.786100000000096e-05, 1.737500000000003e-05, 1.7722000000004734e-05, 1.783299999999488e-05, 1.77089999999977e-05, 1.719499999999763e-05, 1.7179999999998585e-05, 1.787500000000053e-05, 1.7208000000004664e-05, 1.7361999999999933e-05, 1.761100000000071e-05, 1.7693999999998655e-05, 1.719499999999763e-05, 1.7764000000003444e-05, 1.702699999999585e-05, 1.7679999999999085e-05, 1.7014000000002694e-05, 1.7445000000004818e-05, 1.7028000000002264e-05, 1.7708000000005164e-05, 1.7528000000002764e-05, 1.787500000000053e-05, 1.7193999999998155e-05, 1.7207999999990786e-05, 1.719499999999763e-05, 1.7222000000011173e-05, 1.784700000000139e-05, 1.743099999999831e-05, 1.7361000000007398e-05, 1.7500000000003624e-05, 1.787500000000053e-05, 1.7736000000004304e-05, 1.711100000000021e-05, 1.7208000000004664e-05, 1.736099999999352e-05, 1.787500000000053e-05, 1.78610000000079e-05, 1.7041999999994895e-05, 1.788899999999316e-05, 1.7721999999997795e-05, 1.7528000000002764e-05, 1.769499999999813e-05, 1.7513999999996255e-05, 1.7820000000001723e-05]</msg>
<status status="PASS" starttime="20201115 22:01:05.327" endtime="20201115 22:01:05.331"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.315" endtime="20201115 22:01:05.332"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:05.339" endtime="20201115 22:01:05.342"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:05.348" endtime="20201115 22:01:05.369"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.343" endtime="20201115 22:01:05.371"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.335" endtime="20201115 22:01:05.372"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.788" endtime="20201115 22:01:05.373"></status>
</kw>
<msg timestamp="20201115 22:01:05.374" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:05.397" endtime="20201115 22:01:05.451"></status>
</kw>
<msg timestamp="20201115 22:01:05.452" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:05.393" endtime="20201115 22:01:05.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:05.459" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:05.454" endtime="20201115 22:01:05.460"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:05.462" endtime="20201115 22:01:05.465"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.386" endtime="20201115 22:01:05.467"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.380" endtime="20201115 22:01:05.468"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:05.485" endtime="20201115 22:01:05.823"></status>
</kw>
<msg timestamp="20201115 22:01:05.830" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042458889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042476528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:05.482" endtime="20201115 22:01:05.830"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:05.848" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042458889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042476528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:05.832" endtime="20201115 22:01:05.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:05.851" endtime="20201115 22:01:05.854"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.474" endtime="20201115 22:01:05.856"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.470" endtime="20201115 22:01:05.858"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:05.869" level="INFO">${RESULT} = [{'time': 0.042476528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.763899999999985e-05, 'source_diff': 1.763899999999985e-05}, {'time': 0.043338653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:05.860" endtime="20201115 22:01:05.870"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:05.900" level="INFO">${OVERHEAD} = {'diff': [1.763899999999985e-05, 1.769499999999813e-05, 1.7514000000003194e-05, 1.734700000000089e-05, 1.7693999999998655e-05, 1.7528000000002764e-05, 1.7181000000004998e-05, 1.7207999999997725e-05, 1...</msg>
<status status="PASS" starttime="20201115 22:01:05.871" endtime="20201115 22:01:05.900"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:05.911" level="INFO">NAME: 00-overhead-21-set</msg>
<status status="PASS" starttime="20201115 22:01:05.908" endtime="20201115 22:01:05.911"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:05.916" level="INFO">VALUE: [1.763899999999985e-05, 1.769499999999813e-05, 1.7514000000003194e-05, 1.734700000000089e-05, 1.7693999999998655e-05, 1.7528000000002764e-05, 1.7181000000004998e-05, 1.7207999999997725e-05, 1.769499999999813e-05, 1.7027999999995325e-05, 1.7014000000002694e-05, 1.7693999999998655e-05, 1.7042000000001833e-05, 1.713899999999935e-05, 1.7056000000001403e-05, 1.736100000000046e-05, 1.7541999999995395e-05, 1.712499999999978e-05, 1.736100000000046e-05, 1.7556000000001903e-05, 1.736100000000046e-05, 1.786100000000096e-05, 1.7028000000002264e-05, 1.7693999999998655e-05, 1.7708000000005164e-05, 1.7028000000002264e-05, 1.7541999999995395e-05, 1.7735999999990426e-05, 1.702700000000279e-05, 1.719499999999763e-05, 1.7041999999994895e-05, 1.7013999999995755e-05, 1.740299999999917e-05, 1.7000000000003124e-05, 1.7513999999996255e-05, 1.787500000000053e-05, 1.702700000000279e-05, 1.7013999999995755e-05, 1.7528000000002764e-05, 1.784700000000139e-05, 1.7028000000002264e-05, 1.768099999999162e-05, 1.7389000000006538e-05, 1.736099999999352e-05, 1.7014000000009633e-05, 1.7028000000002264e-05, 1.7693999999998655e-05, 1.7541999999995395e-05, 1.702700000000279e-05, 1.788899999999316e-05]</msg>
<status status="PASS" starttime="20201115 22:01:05.913" endtime="20201115 22:01:05.924"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.902" endtime="20201115 22:01:05.926"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:05.932" endtime="20201115 22:01:05.935"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:05.941" endtime="20201115 22:01:05.962"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.936" endtime="20201115 22:01:05.964"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.928" endtime="20201115 22:01:05.966"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.375" endtime="20201115 22:01:05.966"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.923" endtime="20201115 22:01:05.967"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.921" endtime="20201115 22:01:05.967"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:05.972" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:05.996" endtime="20201115 22:01:06.051"></status>
</kw>
<msg timestamp="20201115 22:01:06.052" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:05.992" endtime="20201115 22:01:06.053"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:06.060" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:06.055" endtime="20201115 22:01:06.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:06.062" endtime="20201115 22:01:06.066"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.985" endtime="20201115 22:01:06.067"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.979" endtime="20201115 22:01:06.069"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:06.087" endtime="20201115 22:01:06.430"></status>
</kw>
<msg timestamp="20201115 22:01:06.437" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047197, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047214625, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:01:06.084" endtime="20201115 22:01:06.438"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:06.455" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047197, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047214625, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:01:06.439" endtime="20201115 22:01:06.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:06.459" endtime="20201115 22:01:06.463"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.075" endtime="20201115 22:01:06.465"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.070" endtime="20201115 22:01:06.466"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:06.477" level="INFO">${RESULT} = [{'time': 0.047214625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.762500000000028e-05, 'source_diff': 1.762500000000028e-05}, {'time': 0.048122819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:06.468" endtime="20201115 22:01:06.477"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:06.507" level="INFO">${OVERHEAD} = {'diff': [1.762500000000028e-05, 1.811099999999427e-05, 1.7792000000002584e-05, 1.793099999999881e-05, 1.744499999999788e-05, 1.7278000000002514e-05, 1.7236000000003804e-05, 1.7777999999996075e-05, 1....</msg>
<status status="PASS" starttime="20201115 22:01:06.479" endtime="20201115 22:01:06.508"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:06.518" level="INFO">NAME: 00-overhead-22-set</msg>
<status status="PASS" starttime="20201115 22:01:06.516" endtime="20201115 22:01:06.519"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:06.524" level="INFO">VALUE: [1.762500000000028e-05, 1.811099999999427e-05, 1.7792000000002584e-05, 1.793099999999881e-05, 1.744499999999788e-05, 1.7278000000002514e-05, 1.7236000000003804e-05, 1.7777999999996075e-05, 1.7443999999998405e-05, 1.734700000000089e-05, 1.765299999999942e-05, 1.779100000000311e-05, 1.7263999999996005e-05, 1.7777999999996075e-05, 1.811100000000121e-05, 1.798699999999709e-05, 1.745899999999745e-05, 1.7264000000002944e-05, 1.7778000000009953e-05, 1.726300000000347e-05, 1.761100000000071e-05, 1.7736000000004304e-05, 1.7277999999995575e-05, 1.7625000000007218e-05, 1.7292000000002083e-05, 1.7958000000012353e-05, 1.758300000000157e-05, 1.7957999999998475e-05, 1.761100000000071e-05, 1.7486000000010993e-05, 1.766699999999899e-05, 1.7943999999991966e-05, 1.777700000001048e-05, 1.7305999999994714e-05, 1.7612000000000183e-05, 1.75969999999942e-05, 1.7277999999995575e-05, 1.743099999999831e-05, 1.8013999999996755e-05, 1.7944000000005844e-05, 1.812499999999384e-05, 1.811099999998733e-05, 1.729100000000261e-05, 1.762499999999334e-05, 1.7777999999996075e-05, 1.793099999999881e-05, 1.7458000000011853e-05, 1.761100000000071e-05, 1.8125000000007718e-05, 1.79169999999923e-05]</msg>
<status status="PASS" starttime="20201115 22:01:06.520" endtime="20201115 22:01:06.525"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.509" endtime="20201115 22:01:06.527"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:06.533" endtime="20201115 22:01:06.536"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:06.541" endtime="20201115 22:01:06.563"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.537" endtime="20201115 22:01:06.565"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.529" endtime="20201115 22:01:06.566"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.973" endtime="20201115 22:01:06.567"></status>
</kw>
<msg timestamp="20201115 22:01:06.567" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:06.590" endtime="20201115 22:01:06.645"></status>
</kw>
<msg timestamp="20201115 22:01:06.646" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:06.587" endtime="20201115 22:01:06.647"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:06.653" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:06.649" endtime="20201115 22:01:06.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:06.655" endtime="20201115 22:01:06.660"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.580" endtime="20201115 22:01:06.661"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.574" endtime="20201115 22:01:06.663"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:06.681" endtime="20201115 22:01:07.030"></status>
</kw>
<msg timestamp="20201115 22:01:07.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040983736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041001514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:06.676" endtime="20201115 22:01:07.038"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:07.056" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040983736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041001514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:07.040" endtime="20201115 22:01:07.057"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:07.059" endtime="20201115 22:01:07.063"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.669" endtime="20201115 22:01:07.065"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.664" endtime="20201115 22:01:07.066"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:07.077" level="INFO">${RESULT} = [{'time': 0.041001514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7778000000003014e-05, 'source_diff': 1.7778000000003014e-05}, {'time': 0.041905944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:07.068" endtime="20201115 22:01:07.077"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:07.110" level="INFO">${OVERHEAD} = {'diff': [1.7778000000003014e-05, 1.7443999999998405e-05, 1.740299999999917e-05, 1.7929999999999335e-05, 1.793099999999881e-05, 1.7458000000004914e-05, 1.811100000000121e-05, 1.744499999999788e-05, 1....</msg>
<status status="PASS" starttime="20201115 22:01:07.079" endtime="20201115 22:01:07.111"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:07.122" level="INFO">NAME: 00-overhead-22-set</msg>
<status status="PASS" starttime="20201115 22:01:07.120" endtime="20201115 22:01:07.123"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:07.127" level="INFO">VALUE: [1.7778000000003014e-05, 1.7443999999998405e-05, 1.740299999999917e-05, 1.7929999999999335e-05, 1.793099999999881e-05, 1.7458000000004914e-05, 1.811100000000121e-05, 1.744499999999788e-05, 1.761100000000071e-05, 1.812500000000078e-05, 1.7429999999998835e-05, 1.812500000000078e-05, 1.7792000000002584e-05, 1.7943999999998905e-05, 1.7735999999997365e-05, 1.7805999999995215e-05, 1.7833999999994354e-05, 1.812500000000078e-05, 1.7792000000002584e-05, 1.7429999999998835e-05, 1.763899999999985e-05, 1.7943999999998905e-05, 1.809700000000164e-05, 1.761100000000071e-05, 1.7986000000011493e-05, 1.813900000000035e-05, 1.8014000000010633e-05, 1.7791999999988706e-05, 1.8125000000007718e-05, 1.8069999999995034e-05, 1.7777999999996075e-05, 1.7264000000002944e-05, 1.7944000000005844e-05, 1.75969999999942e-05, 1.7445000000004818e-05, 1.811100000000121e-05, 1.779100000000311e-05, 1.7306000000008592e-05, 1.743099999999831e-05, 1.790299999999967e-05, 1.7777999999996075e-05, 1.7292000000002083e-05, 1.811100000000121e-05, 1.761100000000071e-05, 1.7457999999997975e-05, 1.811100000000121e-05, 1.811100000000121e-05, 1.793099999999881e-05, 1.811100000000121e-05, 1.7457999999997975e-05]</msg>
<status status="PASS" starttime="20201115 22:01:07.124" endtime="20201115 22:01:07.128"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.113" endtime="20201115 22:01:07.130"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:07.137" endtime="20201115 22:01:07.139"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:07.145" endtime="20201115 22:01:07.167"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.141" endtime="20201115 22:01:07.169"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.132" endtime="20201115 22:01:07.170"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.569" endtime="20201115 22:01:07.171"></status>
</kw>
<msg timestamp="20201115 22:01:07.171" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:07.195" endtime="20201115 22:01:07.251"></status>
</kw>
<msg timestamp="20201115 22:01:07.252" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:07.192" endtime="20201115 22:01:07.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:07.258" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:07.254" endtime="20201115 22:01:07.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:07.260" endtime="20201115 22:01:07.264"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.184" endtime="20201115 22:01:07.266"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.178" endtime="20201115 22:01:07.267"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:07.285" endtime="20201115 22:01:07.632"></status>
</kw>
<msg timestamp="20201115 22:01:07.640" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042022458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04204025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:01:07.281" endtime="20201115 22:01:07.640"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:07.658" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042022458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04204025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:01:07.642" endtime="20201115 22:01:07.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:07.661" endtime="20201115 22:01:07.665"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.274" endtime="20201115 22:01:07.667"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.269" endtime="20201115 22:01:07.668"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:07.679" level="INFO">${RESULT} = [{'time': 0.04204025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7792000000002584e-05, 'source_diff': 1.7792000000002584e-05}, {'time': 0.042945375, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 22:01:07.670" endtime="20201115 22:01:07.680"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:07.711" level="INFO">${OVERHEAD} = {'diff': [1.7792000000002584e-05, 1.7443999999998405e-05, 1.7945000000005318e-05, 1.761100000000071e-05, 1.793099999999881e-05, 1.7777999999996075e-05, 1.762500000000028e-05, 1.7291999999995145e-05, 1...</msg>
<status status="PASS" starttime="20201115 22:01:07.682" endtime="20201115 22:01:07.712"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:07.722" level="INFO">NAME: 00-overhead-22-set</msg>
<status status="PASS" starttime="20201115 22:01:07.720" endtime="20201115 22:01:07.723"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:07.728" level="INFO">VALUE: [1.7792000000002584e-05, 1.7443999999998405e-05, 1.7945000000005318e-05, 1.761100000000071e-05, 1.793099999999881e-05, 1.7777999999996075e-05, 1.762500000000028e-05, 1.7291999999995145e-05, 1.7943999999998905e-05, 1.811100000000121e-05, 1.7292000000002083e-05, 1.7777999999996075e-05, 1.7431000000005248e-05, 1.762500000000028e-05, 1.811099999999427e-05, 1.7971999999998045e-05, 1.7902000000000196e-05, 1.811100000000121e-05, 1.7222000000004234e-05, 1.812500000000078e-05, 1.762500000000028e-05, 1.7792000000002584e-05, 1.7971999999998045e-05, 1.7985999999997615e-05, 1.7778000000009953e-05, 1.7972000000004984e-05, 1.762499999999334e-05, 1.7792000000002584e-05, 1.7957999999998475e-05, 1.7764000000003444e-05, 1.7945000000005318e-05, 1.7457999999997975e-05, 1.7444000000005344e-05, 1.7236000000003804e-05, 1.762499999999334e-05, 1.72769999999961e-05, 1.7582999999987692e-05, 1.812499999999384e-05, 1.7556000000001903e-05, 1.809700000000858e-05, 1.7917000000006178e-05, 1.7973000000004458e-05, 1.77769999999966e-05, 1.761100000000071e-05, 1.811100000000121e-05, 1.7625000000007218e-05, 1.813900000000035e-05, 1.7764000000003444e-05, 1.7445000000004818e-05, 1.75969999999942e-05]</msg>
<status status="PASS" starttime="20201115 22:01:07.725" endtime="20201115 22:01:07.729"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.713" endtime="20201115 22:01:07.730"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:07.737" endtime="20201115 22:01:07.740"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:07.745" endtime="20201115 22:01:07.767"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.741" endtime="20201115 22:01:07.769"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.732" endtime="20201115 22:01:07.771"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.173" endtime="20201115 22:01:07.771"></status>
</kw>
<msg timestamp="20201115 22:01:07.772" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:07.796" endtime="20201115 22:01:07.851"></status>
</kw>
<msg timestamp="20201115 22:01:07.852" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:07.792" endtime="20201115 22:01:07.853"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:07.858" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:07.854" endtime="20201115 22:01:07.859"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:07.861" endtime="20201115 22:01:07.865"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.785" endtime="20201115 22:01:07.866"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.779" endtime="20201115 22:01:07.868"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:07.885" endtime="20201115 22:01:08.228"></status>
</kw>
<msg timestamp="20201115 22:01:08.236" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042009472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042027069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:07.881" endtime="20201115 22:01:08.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:08.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042009472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042027069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:08.238" endtime="20201115 22:01:08.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:08.257" endtime="20201115 22:01:08.263"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.874" endtime="20201115 22:01:08.264"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.869" endtime="20201115 22:01:08.266"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:08.277" level="INFO">${RESULT} = [{'time': 0.042027069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.759700000000114e-05, 'source_diff': 1.759700000000114e-05}, {'time': 0.042934361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:08.267" endtime="20201115 22:01:08.277"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:08.308" level="INFO">${OVERHEAD} = {'diff': [1.759700000000114e-05, 1.7263999999996005e-05, 1.790299999999967e-05, 1.7791999999995645e-05, 1.7429999999998835e-05, 1.7443999999998405e-05, 1.761100000000071e-05, 1.815299999999992e-05, 1....</msg>
<status status="PASS" starttime="20201115 22:01:08.279" endtime="20201115 22:01:08.308"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:08.319" level="INFO">NAME: 00-overhead-22-set</msg>
<status status="PASS" starttime="20201115 22:01:08.316" endtime="20201115 22:01:08.320"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:08.324" level="INFO">VALUE: [1.759700000000114e-05, 1.7263999999996005e-05, 1.790299999999967e-05, 1.7791999999995645e-05, 1.7429999999998835e-05, 1.7443999999998405e-05, 1.761100000000071e-05, 1.815299999999992e-05, 1.7431000000005248e-05, 1.768099999999856e-05, 1.7792000000002584e-05, 1.7444000000005344e-05, 1.762500000000028e-05, 1.7278000000002514e-05, 1.7485999999997115e-05, 1.733300000000132e-05, 1.745899999999745e-05, 1.7443999999998405e-05, 1.8152000000000446e-05, 1.7957999999998475e-05, 1.812500000000078e-05, 1.7957999999998475e-05, 1.73889999999996e-05, 1.7973000000004458e-05, 1.761100000000071e-05, 1.7763999999989566e-05, 1.743099999999831e-05, 1.7958000000012353e-05, 1.7957999999998475e-05, 1.812499999999384e-05, 1.812499999999384e-05, 1.7973000000004458e-05, 1.811100000000121e-05, 1.779100000000311e-05, 1.7263999999989066e-05, 1.7792000000002584e-05, 1.7791999999988706e-05, 1.744499999999094e-05, 1.729100000000261e-05, 1.7290999999988732e-05, 1.72769999999961e-05, 1.7625000000007218e-05, 1.7457999999997975e-05, 1.8112000000000683e-05, 1.72769999999961e-05, 1.7625000000007218e-05, 1.7584000000001043e-05, 1.7943999999991966e-05, 1.761100000000071e-05, 1.765299999999248e-05]</msg>
<status status="PASS" starttime="20201115 22:01:08.321" endtime="20201115 22:01:08.325"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.310" endtime="20201115 22:01:08.327"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:08.333" endtime="20201115 22:01:08.336"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:08.342" endtime="20201115 22:01:08.364"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.338" endtime="20201115 22:01:08.366"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.329" endtime="20201115 22:01:08.367"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.773" endtime="20201115 22:01:08.368"></status>
</kw>
<msg timestamp="20201115 22:01:08.368" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:08.392" endtime="20201115 22:01:08.448"></status>
</kw>
<msg timestamp="20201115 22:01:08.449" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:08.389" endtime="20201115 22:01:08.449"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:08.455" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:08.451" endtime="20201115 22:01:08.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:08.457" endtime="20201115 22:01:08.461"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.381" endtime="20201115 22:01:08.463"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.375" endtime="20201115 22:01:08.465"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:08.481" endtime="20201115 22:01:08.823"></status>
</kw>
<msg timestamp="20201115 22:01:08.830" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042122681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042140125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:08.478" endtime="20201115 22:01:08.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:08.850" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042122681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042140125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:08.833" endtime="20201115 22:01:08.850"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:08.852" endtime="20201115 22:01:08.857"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.471" endtime="20201115 22:01:08.859"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.466" endtime="20201115 22:01:08.861"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:08.871" level="INFO">${RESULT} = [{'time': 0.042140125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7443999999998405e-05, 'source_diff': 1.7443999999998405e-05}, {'time': 0.043043653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:08.862" endtime="20201115 22:01:08.872"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:08.902" level="INFO">${OVERHEAD} = {'diff': [1.7443999999998405e-05, 1.812500000000078e-05, 1.729099999999567e-05, 1.7235999999996865e-05, 1.72769999999961e-05, 1.7778000000003014e-05, 1.7943999999998905e-05, 1.726300000000347e-05, 1.7...</msg>
<status status="PASS" starttime="20201115 22:01:08.874" endtime="20201115 22:01:08.903"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:08.914" level="INFO">NAME: 00-overhead-22-set</msg>
<status status="PASS" starttime="20201115 22:01:08.911" endtime="20201115 22:01:08.914"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:08.919" level="INFO">VALUE: [1.7443999999998405e-05, 1.812500000000078e-05, 1.729099999999567e-05, 1.7235999999996865e-05, 1.72769999999961e-05, 1.7778000000003014e-05, 1.7943999999998905e-05, 1.726300000000347e-05, 1.7291999999995145e-05, 1.780500000000268e-05, 1.7763999999996505e-05, 1.7612000000000183e-05, 1.7443999999998405e-05, 1.7737000000003778e-05, 1.763899999999985e-05, 1.744499999999788e-05, 1.7777999999996075e-05, 1.7514000000003194e-05, 1.779099999999617e-05, 1.812500000000078e-05, 1.7278000000002514e-05, 1.7971999999998045e-05, 1.8084000000001543e-05, 1.7625000000007218e-05, 1.7305999999994714e-05, 1.7444000000005344e-05, 1.761100000000071e-05, 1.815299999999298e-05, 1.7459000000011327e-05, 1.8138000000000876e-05, 1.743099999999831e-05, 1.811100000000121e-05, 1.761100000000071e-05, 1.7292000000002083e-05, 1.7472000000004484e-05, 1.8125000000007718e-05, 1.8125000000007718e-05, 1.7459000000011327e-05, 1.74169999999918e-05, 1.761100000000071e-05, 1.75969999999942e-05, 1.7277999999995575e-05, 1.7792000000002584e-05, 1.779100000000311e-05, 1.8125000000007718e-05, 1.8013999999996755e-05, 1.7943999999991966e-05, 1.7277999999995575e-05, 1.7292000000002083e-05, 1.812499999999384e-05]</msg>
<status status="PASS" starttime="20201115 22:01:08.916" endtime="20201115 22:01:08.920"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.904" endtime="20201115 22:01:08.922"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:08.928" endtime="20201115 22:01:08.931"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:08.937" endtime="20201115 22:01:08.959"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.932" endtime="20201115 22:01:08.960"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.923" endtime="20201115 22:01:08.962"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.370" endtime="20201115 22:01:08.962"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.970" endtime="20201115 22:01:08.963"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.968" endtime="20201115 22:01:08.964"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:08.968" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:08.992" endtime="20201115 22:01:09.050"></status>
</kw>
<msg timestamp="20201115 22:01:09.051" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:08.989" endtime="20201115 22:01:09.051"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:09.058" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:09.053" endtime="20201115 22:01:09.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:09.060" endtime="20201115 22:01:09.064"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.981" endtime="20201115 22:01:09.065"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.975" endtime="20201115 22:01:09.068"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:09.084" endtime="20201115 22:01:09.436"></status>
</kw>
<msg timestamp="20201115 22:01:09.444" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047633792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047651806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:09.081" endtime="20201115 22:01:09.444"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:09.462" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047633792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047651806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:09.446" endtime="20201115 22:01:09.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:09.465" endtime="20201115 22:01:09.469"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.074" endtime="20201115 22:01:09.470"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.069" endtime="20201115 22:01:09.472"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:09.483" level="INFO">${RESULT} = [{'time': 0.047651806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8013999999996755e-05, 'source_diff': 1.8013999999996755e-05}, {'time': 0.048599403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:09.474" endtime="20201115 22:01:09.483"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:09.516" level="INFO">${OVERHEAD} = {'diff': [1.8013999999996755e-05, 1.7542000000002334e-05, 1.813900000000035e-05, 1.8221999999998295e-05, 1.8221999999998295e-05, 1.8028000000003264e-05, 1.787500000000053e-05, 1.837499999999409e-05, 1...</msg>
<status status="PASS" starttime="20201115 22:01:09.485" endtime="20201115 22:01:09.517"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:09.528" level="INFO">NAME: 00-overhead-23-set</msg>
<status status="PASS" starttime="20201115 22:01:09.525" endtime="20201115 22:01:09.528"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:09.533" level="INFO">VALUE: [1.8013999999996755e-05, 1.7542000000002334e-05, 1.813900000000035e-05, 1.8221999999998295e-05, 1.8221999999998295e-05, 1.8028000000003264e-05, 1.787500000000053e-05, 1.837499999999409e-05, 1.7528000000002764e-05, 1.834700000000189e-05, 1.787500000000053e-05, 1.7749999999996935e-05, 1.802700000000379e-05, 1.8221999999998295e-05, 1.8027999999996325e-05, 1.7541999999995395e-05, 1.7693999999998655e-05, 1.7723000000011147e-05, 1.7887999999993687e-05, 1.7694000000012533e-05, 1.833299999999538e-05, 1.787500000000053e-05, 1.761100000000071e-05, 1.787500000000053e-05, 1.838899999999366e-05, 1.755500000000243e-05, 1.7681000000005498e-05, 1.8209000000005138e-05, 1.75969999999942e-05, 1.758300000000157e-05, 1.7528000000002764e-05, 1.7653000000006358e-05, 1.7708000000005164e-05, 1.8193999999999155e-05, 1.8209000000005138e-05, 1.768099999999162e-05, 1.8028000000003264e-05, 1.8152000000007384e-05, 1.7473000000003958e-05, 1.758300000000157e-05, 1.8028000000003264e-05, 1.7693999999998655e-05, 1.8027999999989386e-05, 1.837500000000103e-05, 1.8028000000003264e-05, 1.786099999999402e-05, 1.7735999999990426e-05, 1.7681000000005498e-05, 1.75410000000098e-05, 1.769499999999813e-05]</msg>
<status status="PASS" starttime="20201115 22:01:09.530" endtime="20201115 22:01:09.534"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.518" endtime="20201115 22:01:09.536"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:09.543" endtime="20201115 22:01:09.545"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:09.551" endtime="20201115 22:01:09.573"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.547" endtime="20201115 22:01:09.575"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.538" endtime="20201115 22:01:09.576"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.970" endtime="20201115 22:01:09.577"></status>
</kw>
<msg timestamp="20201115 22:01:09.577" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:09.601" endtime="20201115 22:01:09.659"></status>
</kw>
<msg timestamp="20201115 22:01:09.660" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:09.598" endtime="20201115 22:01:09.660"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:09.667" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:09.662" endtime="20201115 22:01:09.668"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:09.669" endtime="20201115 22:01:09.673"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.590" endtime="20201115 22:01:09.675"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.584" endtime="20201115 22:01:09.676"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:09.693" endtime="20201115 22:01:10.042"></status>
</kw>
<msg timestamp="20201115 22:01:10.049" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042247083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042264931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:09.689" endtime="20201115 22:01:10.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:10.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042247083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042264931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:10.051" endtime="20201115 22:01:10.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:10.070" endtime="20201115 22:01:10.074"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.682" endtime="20201115 22:01:10.076"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.677" endtime="20201115 22:01:10.077"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:10.088" level="INFO">${RESULT} = [{'time': 0.042264931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7848000000000863e-05, 'source_diff': 1.7848000000000863e-05}, {'time': 0.043210403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:10.079" endtime="20201115 22:01:10.088"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:10.120" level="INFO">${OVERHEAD} = {'diff': [1.7848000000000863e-05, 1.8334000000001793e-05, 1.8179999999999585e-05, 1.758300000000157e-05, 1.7819999999994784e-05, 1.8209000000005138e-05, 1.816699999999949e-05, 1.834699999999495e-05, 1...</msg>
<status status="PASS" starttime="20201115 22:01:10.090" endtime="20201115 22:01:10.121"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:10.132" level="INFO">NAME: 00-overhead-23-set</msg>
<status status="PASS" starttime="20201115 22:01:10.129" endtime="20201115 22:01:10.133"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:10.138" level="INFO">VALUE: [1.7848000000000863e-05, 1.8334000000001793e-05, 1.8179999999999585e-05, 1.758300000000157e-05, 1.7819999999994784e-05, 1.8209000000005138e-05, 1.816699999999949e-05, 1.834699999999495e-05, 1.8194000000006094e-05, 1.8235999999997865e-05, 1.754099999999592e-05, 1.836100000000146e-05, 1.8042000000002834e-05, 1.805500000000293e-05, 1.7513999999996255e-05, 1.7722000000004734e-05, 1.826299999999753e-05, 1.7694000000005594e-05, 1.809700000000164e-05, 1.7499999999996685e-05, 1.786099999999402e-05, 1.768099999999856e-05, 1.787500000000053e-05, 1.752700000000329e-05, 1.7528000000002764e-05, 1.8028000000003264e-05, 1.784700000000139e-05, 1.802700000000379e-05, 1.83610000000084e-05, 1.7541999999995395e-05, 1.787500000000053e-05, 1.83610000000084e-05, 1.7680000000006024e-05, 1.7708000000005164e-05, 1.7722000000011673e-05, 1.787500000000053e-05, 1.7805999999995215e-05, 1.7693999999998655e-05, 1.837500000000103e-05, 1.836099999999452e-05, 1.8041999999995895e-05, 1.7805999999995215e-05, 1.83610000000084e-05, 1.804099999999642e-05, 1.8013999999996755e-05, 1.744499999999094e-05, 1.8041999999995895e-05, 1.754099999999592e-05, 1.7513999999996255e-05, 1.8028000000003264e-05]</msg>
<status status="PASS" starttime="20201115 22:01:10.134" endtime="20201115 22:01:10.139"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.122" endtime="20201115 22:01:10.140"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:10.147" endtime="20201115 22:01:10.150"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:10.157" endtime="20201115 22:01:10.178"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.152" endtime="20201115 22:01:10.180"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.143" endtime="20201115 22:01:10.182"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.578" endtime="20201115 22:01:10.182"></status>
</kw>
<msg timestamp="20201115 22:01:10.183" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:10.207" endtime="20201115 22:01:10.265"></status>
</kw>
<msg timestamp="20201115 22:01:10.266" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:10.203" endtime="20201115 22:01:10.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:10.272" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:10.268" endtime="20201115 22:01:10.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:10.275" endtime="20201115 22:01:10.279"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.196" endtime="20201115 22:01:10.280"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.190" endtime="20201115 22:01:10.282"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:10.299" endtime="20201115 22:01:10.648"></status>
</kw>
<msg timestamp="20201115 22:01:10.655" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042914986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042932694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:10.295" endtime="20201115 22:01:10.655"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:10.673" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042914986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042932694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:10.657" endtime="20201115 22:01:10.674"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:10.676" endtime="20201115 22:01:10.679"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.288" endtime="20201115 22:01:10.681"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.283" endtime="20201115 22:01:10.682"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:10.693" level="INFO">${RESULT} = [{'time': 0.042932694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7707999999998225e-05, 'source_diff': 1.7707999999998225e-05}, {'time': 0.043875986, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:10.684" endtime="20201115 22:01:10.694"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:10.726" level="INFO">${OVERHEAD} = {'diff': [1.7707999999998225e-05, 1.7527999999995825e-05, 1.8264000000003944e-05, 1.8013999999996755e-05, 1.7542000000002334e-05, 1.8042000000002834e-05, 1.8402000000000696e-05, 1.80969999999947e-05, ...</msg>
<status status="PASS" starttime="20201115 22:01:10.696" endtime="20201115 22:01:10.726"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:10.737" level="INFO">NAME: 00-overhead-23-set</msg>
<status status="PASS" starttime="20201115 22:01:10.735" endtime="20201115 22:01:10.738"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:10.744" level="INFO">VALUE: [1.7707999999998225e-05, 1.7527999999995825e-05, 1.8264000000003944e-05, 1.8013999999996755e-05, 1.7542000000002334e-05, 1.8042000000002834e-05, 1.8402000000000696e-05, 1.80969999999947e-05, 1.769499999999813e-05, 1.759700000000114e-05, 1.8014000000003694e-05, 1.836100000000146e-05, 1.787500000000053e-05, 1.790299999999967e-05, 1.7999999999997185e-05, 1.7834000000001293e-05, 1.769499999999813e-05, 1.7999999999997185e-05, 1.787500000000053e-05, 1.8416000000000265e-05, 1.786100000000096e-05, 1.8208000000005664e-05, 1.8235999999990926e-05, 1.801299999999728e-05, 1.7834000000008232e-05, 1.7820000000001723e-05, 1.7625000000007218e-05, 1.7653000000006358e-05, 1.7693999999998655e-05, 1.7527999999988886e-05, 1.755500000000243e-05, 1.758300000000157e-05, 1.7917000000006178e-05, 1.8193999999999155e-05, 1.7513999999996255e-05, 1.838899999999366e-05, 1.7944000000005844e-05, 1.787500000000053e-05, 1.78610000000079e-05, 1.769499999999813e-05, 1.809700000000858e-05, 1.805500000000293e-05, 1.7889000000007038e-05, 1.8208000000005664e-05, 1.806900000000944e-05, 1.8221999999998295e-05, 1.8209000000005138e-05, 1.7528000000002764e-05, 1.8181000000005998e-05, 1.8389000000007538e-05]</msg>
<status status="PASS" starttime="20201115 22:01:10.739" endtime="20201115 22:01:10.746"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.728" endtime="20201115 22:01:10.747"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:10.754" endtime="20201115 22:01:10.757"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:10.762" endtime="20201115 22:01:10.784"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.758" endtime="20201115 22:01:10.786"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.749" endtime="20201115 22:01:10.788"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.184" endtime="20201115 22:01:10.789"></status>
</kw>
<msg timestamp="20201115 22:01:10.789" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:10.813" endtime="20201115 22:01:10.871"></status>
</kw>
<msg timestamp="20201115 22:01:10.872" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:10.810" endtime="20201115 22:01:10.872"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:10.878" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:10.874" endtime="20201115 22:01:10.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:10.880" endtime="20201115 22:01:10.884"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.802" endtime="20201115 22:01:10.886"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.796" endtime="20201115 22:01:10.887"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:10.904" endtime="20201115 22:01:11.247"></status>
</kw>
<msg timestamp="20201115 22:01:11.255" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042775153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042793014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:10.901" endtime="20201115 22:01:11.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:11.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042775153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042793014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:11.257" endtime="20201115 22:01:11.274"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:11.276" endtime="20201115 22:01:11.280"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.894" endtime="20201115 22:01:11.281"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.889" endtime="20201115 22:01:11.283"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:11.294" level="INFO">${RESULT} = [{'time': 0.042793014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.786099999999402e-05, 'source_diff': 1.786099999999402e-05}, {'time': 0.043736403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:11.285" endtime="20201115 22:01:11.294"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:11.326" level="INFO">${OVERHEAD} = {'diff': [1.786099999999402e-05, 1.7499999999996685e-05, 1.7499999999996685e-05, 1.7542000000002334e-05, 1.7485999999997115e-05, 1.754099999999592e-05, 1.7541999999995395e-05, 1.786100000000096e-05, 1...</msg>
<status status="PASS" starttime="20201115 22:01:11.296" endtime="20201115 22:01:11.327"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:11.337" level="INFO">NAME: 00-overhead-23-set</msg>
<status status="PASS" starttime="20201115 22:01:11.335" endtime="20201115 22:01:11.338"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:11.343" level="INFO">VALUE: [1.786099999999402e-05, 1.7499999999996685e-05, 1.7499999999996685e-05, 1.7542000000002334e-05, 1.7485999999997115e-05, 1.754099999999592e-05, 1.7541999999995395e-05, 1.786100000000096e-05, 1.766699999999899e-05, 1.8070000000001973e-05, 1.7707999999998225e-05, 1.8013999999996755e-05, 1.8320000000002223e-05, 1.8055999999995465e-05, 1.8028000000003264e-05, 1.7569000000002e-05, 1.802700000000379e-05, 1.7598000000000613e-05, 1.841699999999974e-05, 1.786100000000096e-05, 1.769499999999813e-05, 1.8292000000003084e-05, 1.7999999999990246e-05, 1.837500000000103e-05, 1.837500000000103e-05, 1.802700000000379e-05, 1.8193999999999155e-05, 1.8013999999996755e-05, 1.7708000000005164e-05, 1.7999999999990246e-05, 1.7792000000002584e-05, 1.786099999999402e-05, 1.7570000000008412e-05, 1.8000000000004124e-05, 1.7541999999995395e-05, 1.751299999999678e-05, 1.8193999999999155e-05, 1.8389000000007538e-05, 1.7749999999996935e-05, 1.787500000000053e-05, 1.8026999999989912e-05, 1.8249999999997435e-05, 1.804099999999642e-05, 1.8013999999996755e-05, 1.7693999999998655e-05, 1.829100000000361e-05, 1.8013999999996755e-05, 1.8180000000006524e-05, 1.7457999999997975e-05, 1.8013999999996755e-05]</msg>
<status status="PASS" starttime="20201115 22:01:11.340" endtime="20201115 22:01:11.344"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.328" endtime="20201115 22:01:11.346"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:11.358" endtime="20201115 22:01:11.361"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:11.367" endtime="20201115 22:01:11.389"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.362" endtime="20201115 22:01:11.390"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.353" endtime="20201115 22:01:11.392"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.791" endtime="20201115 22:01:11.392"></status>
</kw>
<msg timestamp="20201115 22:01:11.393" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:11.417" endtime="20201115 22:01:11.474"></status>
</kw>
<msg timestamp="20201115 22:01:11.475" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:11.413" endtime="20201115 22:01:11.476"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:11.482" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:11.478" endtime="20201115 22:01:11.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:11.484" endtime="20201115 22:01:11.488"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.406" endtime="20201115 22:01:11.490"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.400" endtime="20201115 22:01:11.491"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:11.508" endtime="20201115 22:01:11.859"></status>
</kw>
<msg timestamp="20201115 22:01:11.866" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042038417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042056611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:11.505" endtime="20201115 22:01:11.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:11.885" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042038417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042056611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:11.869" endtime="20201115 22:01:11.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:11.887" endtime="20201115 22:01:11.891"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.498" endtime="20201115 22:01:11.893"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.493" endtime="20201115 22:01:11.895"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:11.906" level="INFO">${RESULT} = [{'time': 0.042056611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8193999999999155e-05, 'source_diff': 1.8193999999999155e-05}, {'time': 0.043005958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:11.896" endtime="20201115 22:01:11.906"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:11.939" level="INFO">${OVERHEAD} = {'diff': [1.8193999999999155e-05, 1.7693999999998655e-05, 1.795899999999795e-05, 1.78890000000001e-05, 1.801299999999728e-05, 1.837500000000103e-05, 1.786100000000096e-05, 1.834700000000189e-05, 1.798...</msg>
<status status="PASS" starttime="20201115 22:01:11.908" endtime="20201115 22:01:11.940"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:11.951" level="INFO">NAME: 00-overhead-23-set</msg>
<status status="PASS" starttime="20201115 22:01:11.948" endtime="20201115 22:01:11.951"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:11.956" level="INFO">VALUE: [1.8193999999999155e-05, 1.7693999999998655e-05, 1.795899999999795e-05, 1.78890000000001e-05, 1.801299999999728e-05, 1.837500000000103e-05, 1.786100000000096e-05, 1.834700000000189e-05, 1.7986000000004554e-05, 1.8027999999996325e-05, 1.8362000000000933e-05, 1.7527999999995825e-05, 1.786100000000096e-05, 1.763899999999985e-05, 1.784700000000139e-05, 1.78890000000001e-05, 1.8348000000001363e-05, 1.7693999999998655e-05, 1.818099999999906e-05, 1.768099999999856e-05, 1.8027999999996325e-05, 1.7679999999999085e-05, 1.769499999999813e-05, 1.7929999999999335e-05, 1.786099999999402e-05, 1.8221999999998295e-05, 1.8027999999989386e-05, 1.808300000000207e-05, 1.804099999999642e-05, 1.8028000000003264e-05, 1.8028000000003264e-05, 1.833299999999538e-05, 1.7681000000005498e-05, 1.7542000000009272e-05, 1.836099999999452e-05, 1.78610000000079e-05, 1.7693999999998655e-05, 1.7528000000002764e-05, 1.7513999999996255e-05, 1.837500000000103e-05, 1.7694000000012533e-05, 1.8249999999997435e-05, 1.83610000000084e-05, 1.769499999999813e-05, 1.7528000000002764e-05, 1.7695000000012007e-05, 1.7513999999996255e-05, 1.7528000000002764e-05, 1.7944000000005844e-05, 1.7999999999990246e-05]</msg>
<status status="PASS" starttime="20201115 22:01:11.953" endtime="20201115 22:01:11.958"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.941" endtime="20201115 22:01:11.959"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:11.966" endtime="20201115 22:01:11.969"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:11.974" endtime="20201115 22:01:11.996"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.970" endtime="20201115 22:01:11.998"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.961" endtime="20201115 22:01:12.000"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.394" endtime="20201115 22:01:12.001"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.966" endtime="20201115 22:01:12.001"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.964" endtime="20201115 22:01:12.002"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:12.007" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:12.030" endtime="20201115 22:01:12.089"></status>
</kw>
<msg timestamp="20201115 22:01:12.090" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:12.026" endtime="20201115 22:01:12.091"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:12.097" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:12.093" endtime="20201115 22:01:12.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:12.099" endtime="20201115 22:01:12.103"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.019" endtime="20201115 22:01:12.105"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.013" endtime="20201115 22:01:12.107"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:12.123" endtime="20201115 22:01:12.475"></status>
</kw>
<msg timestamp="20201115 22:01:12.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047580083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047598194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:12.120" endtime="20201115 22:01:12.483"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:12.501" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047580083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047598194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:12.485" endtime="20201115 22:01:12.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:12.503" endtime="20201115 22:01:12.507"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.113" endtime="20201115 22:01:12.509"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.108" endtime="20201115 22:01:12.510"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:12.521" level="INFO">${RESULT} = [{'time': 0.047598194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.811100000000121e-05, 'source_diff': 1.811100000000121e-05}, {'time': 0.048589458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:12.512" endtime="20201115 22:01:12.522"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:12.554" level="INFO">${OVERHEAD} = {'diff': [1.811100000000121e-05, 1.813900000000035e-05, 1.813900000000035e-05, 1.8277999999996575e-05, 1.8431000000006248e-05, 1.812500000000078e-05, 1.808299999999513e-05, 1.794499999999838e-05, 1.79...</msg>
<status status="PASS" starttime="20201115 22:01:12.524" endtime="20201115 22:01:12.555"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:12.565" level="INFO">NAME: 00-overhead-24-set</msg>
<status status="PASS" starttime="20201115 22:01:12.563" endtime="20201115 22:01:12.566"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:12.572" level="INFO">VALUE: [1.811100000000121e-05, 1.813900000000035e-05, 1.813900000000035e-05, 1.8277999999996575e-05, 1.8431000000006248e-05, 1.812500000000078e-05, 1.808299999999513e-05, 1.794499999999838e-05, 1.7944000000005844e-05, 1.8263999999997005e-05, 1.8443999999999405e-05, 1.841699999999974e-05, 1.7943999999998905e-05, 1.7764000000003444e-05, 1.8264000000003944e-05, 1.8292000000003084e-05, 1.8264000000003944e-05, 1.861100000000171e-05, 1.8125000000007718e-05, 1.844499999999194e-05, 1.862500000000822e-05, 1.783300000000876e-05, 1.8278000000010453e-05, 1.8277999999996575e-05, 1.861100000000171e-05, 1.7945000000005318e-05, 1.8264000000003944e-05, 1.811100000000121e-05, 1.7957999999998475e-05, 1.7944000000005844e-05, 1.862500000000822e-05, 1.85969999999952e-05, 1.8125000000007718e-05, 1.811100000000121e-05, 1.809700000000858e-05, 1.7777999999996075e-05, 1.7805999999995215e-05, 1.7792000000002584e-05, 1.794499999999144e-05, 1.8112000000000683e-05, 1.790299999999967e-05, 1.829100000000361e-05, 1.8264000000003944e-05, 1.8638000000001376e-05, 1.7749999999996935e-05, 1.844499999999194e-05, 1.8457999999998975e-05, 1.7944000000005844e-05, 1.779100000000311e-05, 1.818099999999212e-05]</msg>
<status status="PASS" starttime="20201115 22:01:12.568" endtime="20201115 22:01:12.573"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.556" endtime="20201115 22:01:12.574"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:12.581" endtime="20201115 22:01:12.584"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:12.589" endtime="20201115 22:01:12.611"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.585" endtime="20201115 22:01:12.613"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.576" endtime="20201115 22:01:12.615"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.008" endtime="20201115 22:01:12.615"></status>
</kw>
<msg timestamp="20201115 22:01:12.616" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:12.639" endtime="20201115 22:01:12.698"></status>
</kw>
<msg timestamp="20201115 22:01:12.700" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:12.636" endtime="20201115 22:01:12.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:12.706" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:12.702" endtime="20201115 22:01:12.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:12.709" endtime="20201115 22:01:12.712"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.628" endtime="20201115 22:01:12.714"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.622" endtime="20201115 22:01:12.715"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:12.732" endtime="20201115 22:01:13.081"></status>
</kw>
<msg timestamp="20201115 22:01:13.088" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041767222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041785014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:12.729" endtime="20201115 22:01:13.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:13.107" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041767222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041785014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:13.090" endtime="20201115 22:01:13.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:13.109" endtime="20201115 22:01:13.113"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.722" endtime="20201115 22:01:13.115"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.717" endtime="20201115 22:01:13.116"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:13.127" level="INFO">${RESULT} = [{'time': 0.041785014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7792000000002584e-05, 'source_diff': 1.7792000000002584e-05}, {'time': 0.042774542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:13.118" endtime="20201115 22:01:13.127"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:13.159" level="INFO">${OVERHEAD} = {'diff': [1.7792000000002584e-05, 1.7791999999995645e-05, 1.7777999999996075e-05, 1.7806000000002153e-05, 1.829100000000361e-05, 1.8320000000002223e-05, 1.861100000000171e-05, 1.8431000000006248e-05, ...</msg>
<status status="PASS" starttime="20201115 22:01:13.129" endtime="20201115 22:01:13.160"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:13.172" level="INFO">NAME: 00-overhead-24-set</msg>
<status status="PASS" starttime="20201115 22:01:13.168" endtime="20201115 22:01:13.172"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:13.177" level="INFO">VALUE: [1.7792000000002584e-05, 1.7791999999995645e-05, 1.7777999999996075e-05, 1.7806000000002153e-05, 1.829100000000361e-05, 1.8320000000002223e-05, 1.861100000000171e-05, 1.8431000000006248e-05, 1.815299999999992e-05, 1.790299999999967e-05, 1.8638000000001376e-05, 1.844499999999888e-05, 1.8277999999996575e-05, 1.8306000000002653e-05, 1.8291999999996145e-05, 1.858299999999563e-05, 1.779100000000311e-05, 1.8429999999999835e-05, 1.7778000000003014e-05, 1.8277999999996575e-05, 1.811100000000121e-05, 1.8138000000000876e-05, 1.862500000000822e-05, 1.794499999999144e-05, 1.794499999999144e-05, 1.7777999999996075e-05, 1.8707999999992286e-05, 1.863900000000085e-05, 1.8277999999996575e-05, 1.843099999999931e-05, 1.8541999999996395e-05, 1.8457999999998975e-05, 1.80969999999947e-05, 1.811100000000121e-05, 1.861100000000171e-05, 1.7792000000002584e-05, 1.8444000000006344e-05, 1.7957999999998475e-05, 1.8305999999995715e-05, 1.80969999999947e-05, 1.787500000000053e-05, 1.845899999999845e-05, 1.8277999999996575e-05, 1.8292000000003084e-05, 1.794499999999144e-05, 1.7972000000004984e-05, 1.863900000000085e-05, 1.830499999999624e-05, 1.863900000000085e-05, 1.7957999999998475e-05]</msg>
<status status="PASS" starttime="20201115 22:01:13.174" endtime="20201115 22:01:13.178"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.161" endtime="20201115 22:01:13.180"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:13.186" endtime="20201115 22:01:13.189"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:13.195" endtime="20201115 22:01:13.217"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.190" endtime="20201115 22:01:13.218"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.182" endtime="20201115 22:01:13.220"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.617" endtime="20201115 22:01:13.221"></status>
</kw>
<msg timestamp="20201115 22:01:13.221" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:13.246" endtime="20201115 22:01:13.306"></status>
</kw>
<msg timestamp="20201115 22:01:13.307" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:13.242" endtime="20201115 22:01:13.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:13.313" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:13.309" endtime="20201115 22:01:13.314"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:13.316" endtime="20201115 22:01:13.319"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.235" endtime="20201115 22:01:13.321"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.228" endtime="20201115 22:01:13.323"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:13.339" endtime="20201115 22:01:13.688"></status>
</kw>
<msg timestamp="20201115 22:01:13.695" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043556375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043574653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:13.336" endtime="20201115 22:01:13.696"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:13.714" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043556375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043574653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:13.698" endtime="20201115 22:01:13.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:13.716" endtime="20201115 22:01:13.720"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.329" endtime="20201115 22:01:13.722"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.324" endtime="20201115 22:01:13.724"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:13.735" level="INFO">${RESULT} = [{'time': 0.043574653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8277999999996575e-05, 'source_diff': 1.8277999999996575e-05}, {'time': 0.044564194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:13.725" endtime="20201115 22:01:13.736"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:13.767" level="INFO">${OVERHEAD} = {'diff': [1.8277999999996575e-05, 1.8471999999998545e-05, 1.847299999999802e-05, 1.841699999999974e-05, 1.8471999999998545e-05, 1.845899999999845e-05, 1.861100000000171e-05, 1.7943999999998905e-05, 1....</msg>
<status status="PASS" starttime="20201115 22:01:13.737" endtime="20201115 22:01:13.767"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:13.778" level="INFO">NAME: 00-overhead-24-set</msg>
<status status="PASS" starttime="20201115 22:01:13.776" endtime="20201115 22:01:13.779"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:13.783" level="INFO">VALUE: [1.8277999999996575e-05, 1.8471999999998545e-05, 1.847299999999802e-05, 1.841699999999974e-05, 1.8471999999998545e-05, 1.845899999999845e-05, 1.861100000000171e-05, 1.7943999999998905e-05, 1.794499999999838e-05, 1.811100000000121e-05, 1.7763999999996505e-05, 1.7945000000005318e-05, 1.794499999999838e-05, 1.847299999999802e-05, 1.8457999999998975e-05, 1.7943999999998905e-05, 1.861100000000171e-05, 1.812500000000078e-05, 1.809700000000164e-05, 1.829099999999667e-05, 1.8487000000011466e-05, 1.8292000000003084e-05, 1.812499999999384e-05, 1.8444000000006344e-05, 1.8264000000003944e-05, 1.780500000000962e-05, 1.7778000000009953e-05, 1.865299999999348e-05, 1.794499999999144e-05, 1.7778000000009953e-05, 1.862499999999434e-05, 1.8444000000006344e-05, 1.845899999999845e-05, 1.812499999999384e-05, 1.7943999999991966e-05, 1.77769999999966e-05, 1.8277999999996575e-05, 1.8292000000003084e-05, 1.793099999999881e-05, 1.7764000000003444e-05, 1.8277999999996575e-05, 1.862499999999434e-05, 1.8457999999998975e-05, 1.8278000000010453e-05, 1.7929999999999335e-05, 1.861100000000171e-05, 1.8485999999998115e-05, 1.7764000000003444e-05, 1.7777999999996075e-05, 1.85969999999952e-05]</msg>
<status status="PASS" starttime="20201115 22:01:13.780" endtime="20201115 22:01:13.786"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.769" endtime="20201115 22:01:13.787"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:13.794" endtime="20201115 22:01:13.796"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:13.802" endtime="20201115 22:01:13.824"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.798" endtime="20201115 22:01:13.826"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.789" endtime="20201115 22:01:13.828"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.222" endtime="20201115 22:01:13.828"></status>
</kw>
<msg timestamp="20201115 22:01:13.829" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:13.852" endtime="20201115 22:01:13.912"></status>
</kw>
<msg timestamp="20201115 22:01:13.913" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:13.849" endtime="20201115 22:01:13.914"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:13.920" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:13.915" endtime="20201115 22:01:13.920"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:13.922" endtime="20201115 22:01:13.926"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.841" endtime="20201115 22:01:13.927"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.835" endtime="20201115 22:01:13.929"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:13.946" endtime="20201115 22:01:14.294"></status>
</kw>
<msg timestamp="20201115 22:01:14.301" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042194764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042212861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:13.942" endtime="20201115 22:01:14.302"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:14.320" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042194764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042212861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:14.304" endtime="20201115 22:01:14.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:14.323" endtime="20201115 22:01:14.327"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.935" endtime="20201115 22:01:14.329"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.930" endtime="20201115 22:01:14.330"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:14.341" level="INFO">${RESULT} = [{'time': 0.042212861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.80969999999947e-05, 'source_diff': 1.80969999999947e-05}, {'time': 0.043198208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:01:14.332" endtime="20201115 22:01:14.342"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:14.375" level="INFO">${OVERHEAD} = {'diff': [1.80969999999947e-05, 1.809700000000164e-05, 1.793099999999881e-05, 1.812500000000078e-05, 1.840300000000017e-05, 1.861099999999477e-05, 1.8443999999999405e-05, 1.7957999999998475e-05, 1.861...</msg>
<status status="PASS" starttime="20201115 22:01:14.343" endtime="20201115 22:01:14.375"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:14.386" level="INFO">NAME: 00-overhead-24-set</msg>
<status status="PASS" starttime="20201115 22:01:14.383" endtime="20201115 22:01:14.387"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:14.391" level="INFO">VALUE: [1.80969999999947e-05, 1.809700000000164e-05, 1.793099999999881e-05, 1.812500000000078e-05, 1.840300000000017e-05, 1.861099999999477e-05, 1.8443999999999405e-05, 1.7957999999998475e-05, 1.861100000000171e-05, 1.7944000000005844e-05, 1.776300000000397e-05, 1.7943999999998905e-05, 1.7944000000005844e-05, 1.861100000000171e-05, 1.8291999999996145e-05, 1.8429999999999835e-05, 1.7777999999996075e-05, 1.787500000000053e-05, 1.793099999999881e-05, 1.818099999999906e-05, 1.8291999999996145e-05, 1.858300000000257e-05, 1.777700000001048e-05, 1.790299999999967e-05, 1.8000000000004124e-05, 1.811100000000121e-05, 1.8055999999988526e-05, 1.7999999999990246e-05, 1.85969999999952e-05, 1.788899999999316e-05, 1.7943999999991966e-05, 1.794499999999144e-05, 1.861100000000171e-05, 1.861100000000171e-05, 1.813900000000035e-05, 1.811100000000121e-05, 1.862499999999434e-05, 1.7792000000002584e-05, 1.7944000000005844e-05, 1.7931000000012687e-05, 1.827700000001098e-05, 1.862500000000822e-05, 1.862499999999434e-05, 1.8471999999991606e-05, 1.8277999999996575e-05, 1.80969999999947e-05, 1.7806000000009092e-05, 1.861100000000171e-05, 1.8264000000003944e-05, 1.843099999999931e-05]</msg>
<status status="PASS" starttime="20201115 22:01:14.388" endtime="20201115 22:01:14.392"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.376" endtime="20201115 22:01:14.394"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:14.400" endtime="20201115 22:01:14.404"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:14.410" endtime="20201115 22:01:14.432"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.406" endtime="20201115 22:01:14.434"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.396" endtime="20201115 22:01:14.435"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.830" endtime="20201115 22:01:14.436"></status>
</kw>
<msg timestamp="20201115 22:01:14.437" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:14.460" endtime="20201115 22:01:14.520"></status>
</kw>
<msg timestamp="20201115 22:01:14.521" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:14.457" endtime="20201115 22:01:14.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:14.528" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:14.524" endtime="20201115 22:01:14.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:14.530" endtime="20201115 22:01:14.534"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.449" endtime="20201115 22:01:14.535"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.443" endtime="20201115 22:01:14.537"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:14.554" endtime="20201115 22:01:14.903"></status>
</kw>
<msg timestamp="20201115 22:01:14.911" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042266569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042284833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:14.550" endtime="20201115 22:01:14.912"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:14.930" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042266569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042284833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:14.914" endtime="20201115 22:01:14.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:14.933" endtime="20201115 22:01:14.936"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.543" endtime="20201115 22:01:14.938"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.538" endtime="20201115 22:01:14.940"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:14.950" level="INFO">${RESULT} = [{'time': 0.042284833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8264000000003944e-05, 'source_diff': 1.8264000000003944e-05}, {'time': 0.04327525, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 22:01:14.941" endtime="20201115 22:01:14.951"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:14.982" level="INFO">${OVERHEAD} = {'diff': [1.8264000000003944e-05, 1.863900000000085e-05, 1.8429999999999835e-05, 1.843099999999931e-05, 1.845899999999845e-05, 1.862500000000128e-05, 1.7943999999998905e-05, 1.811100000000121e-05, 1.8...</msg>
<status status="PASS" starttime="20201115 22:01:14.953" endtime="20201115 22:01:14.982"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:14.993" level="INFO">NAME: 00-overhead-24-set</msg>
<status status="PASS" starttime="20201115 22:01:14.991" endtime="20201115 22:01:14.994"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:14.999" level="INFO">VALUE: [1.8264000000003944e-05, 1.863900000000085e-05, 1.8429999999999835e-05, 1.843099999999931e-05, 1.845899999999845e-05, 1.862500000000128e-05, 1.7943999999998905e-05, 1.811100000000121e-05, 1.863900000000085e-05, 1.7763999999996505e-05, 1.8443999999999405e-05, 1.861100000000171e-05, 1.793099999999881e-05, 1.812500000000078e-05, 1.83890000000006e-05, 1.8388000000001126e-05, 1.7777999999996075e-05, 1.779099999999617e-05, 1.7792000000002584e-05, 1.8277999999996575e-05, 1.862500000000128e-05, 1.7929999999999335e-05, 1.779100000000311e-05, 1.7778000000009953e-05, 1.7957999999998475e-05, 1.795899999999795e-05, 1.7973000000004458e-05, 1.7943999999991966e-05, 1.777700000001048e-05, 1.8306000000009592e-05, 1.7915999999992827e-05, 1.862499999999434e-05, 1.8471999999991606e-05, 1.7957999999998475e-05, 1.8277999999996575e-05, 1.7957999999998475e-05, 1.7944000000005844e-05, 1.7792000000002584e-05, 1.8249999999997435e-05, 1.8334000000008732e-05, 1.8457999999998975e-05, 1.862500000000822e-05, 1.7764000000003444e-05, 1.790299999999967e-05, 1.8485999999998115e-05, 1.8125000000007718e-05, 1.863900000000085e-05, 1.8638000000001376e-05, 1.795899999999795e-05, 1.8292000000003084e-05]</msg>
<status status="PASS" starttime="20201115 22:01:14.996" endtime="20201115 22:01:15.000"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.984" endtime="20201115 22:01:15.001"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:15.008" endtime="20201115 22:01:15.011"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:15.017" endtime="20201115 22:01:15.040"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.012" endtime="20201115 22:01:15.041"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.003" endtime="20201115 22:01:15.043"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.438" endtime="20201115 22:01:15.044"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.004" endtime="20201115 22:01:15.044"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.003" endtime="20201115 22:01:15.045"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:15.050" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:15.074" endtime="20201115 22:01:15.135"></status>
</kw>
<msg timestamp="20201115 22:01:15.136" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:15.070" endtime="20201115 22:01:15.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:15.143" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:15.139" endtime="20201115 22:01:15.143"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:15.145" endtime="20201115 22:01:15.149"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.063" endtime="20201115 22:01:15.150"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.057" endtime="20201115 22:01:15.153"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:15.170" endtime="20201115 22:01:15.521"></status>
</kw>
<msg timestamp="20201115 22:01:15.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047827917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047846292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:15.166" endtime="20201115 22:01:15.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:15.547" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047827917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047846292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:15.531" endtime="20201115 22:01:15.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:15.549" endtime="20201115 22:01:15.553"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.159" endtime="20201115 22:01:15.555"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.154" endtime="20201115 22:01:15.556"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:15.567" level="INFO">${RESULT} = [{'time': 0.047846292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.837500000000103e-05, 'source_diff': 1.837500000000103e-05}, {'time': 0.048876931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:15.558" endtime="20201115 22:01:15.568"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:15.598" level="INFO">${OVERHEAD} = {'diff': [1.837500000000103e-05, 1.8112000000000683e-05, 1.884699999999545e-05, 1.887500000000153e-05, 1.8528000000003764e-05, 1.869499999999913e-05, 1.8027999999996325e-05, 1.8193999999999155e-05, 1....</msg>
<status status="PASS" starttime="20201115 22:01:15.569" endtime="20201115 22:01:15.599"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:15.610" level="INFO">NAME: 00-overhead-25-set</msg>
<status status="PASS" starttime="20201115 22:01:15.607" endtime="20201115 22:01:15.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:15.615" level="INFO">VALUE: [1.837500000000103e-05, 1.8112000000000683e-05, 1.884699999999545e-05, 1.887500000000153e-05, 1.8528000000003764e-05, 1.869499999999913e-05, 1.8027999999996325e-05, 1.8193999999999155e-05, 1.837500000000103e-05, 1.887500000000153e-05, 1.837499999999409e-05, 1.852700000000429e-05, 1.816699999999949e-05, 1.887499999999459e-05, 1.887499999999459e-05, 1.856900000000994e-05, 1.8528000000003764e-05, 1.8707999999992286e-05, 1.8707999999992286e-05, 1.8041999999995895e-05, 1.8041999999995895e-05, 1.8528000000003764e-05, 1.8041999999995895e-05, 1.8681000000006498e-05, 1.8708000000006164e-05, 1.8041999999995895e-05, 1.8028000000003264e-05, 1.886099999999502e-05, 1.8722000000012673e-05, 1.8708000000006164e-05, 1.8709000000005638e-05, 1.8027999999989386e-05, 1.8041999999995895e-05, 1.8681000000006498e-05, 1.811100000000121e-05, 1.8028000000003264e-05, 1.8861999999994494e-05, 1.8208000000005664e-05, 1.8389000000007538e-05, 1.8514000000011133e-05, 1.8513999999997255e-05, 1.8193999999999155e-05, 1.834700000000189e-05, 1.884700000000239e-05, 1.8721999999998795e-05, 1.818099999999212e-05, 1.831900000000275e-05, 1.83610000000084e-05, 1.8346999999988012e-05, 1.886099999999502e-05]</msg>
<status status="PASS" starttime="20201115 22:01:15.612" endtime="20201115 22:01:15.616"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.600" endtime="20201115 22:01:15.618"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:15.624" endtime="20201115 22:01:15.627"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:15.634" endtime="20201115 22:01:15.656"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.628" endtime="20201115 22:01:15.658"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.620" endtime="20201115 22:01:15.660"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.051" endtime="20201115 22:01:15.660"></status>
</kw>
<msg timestamp="20201115 22:01:15.661" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:15.685" endtime="20201115 22:01:15.746"></status>
</kw>
<msg timestamp="20201115 22:01:15.747" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:15.681" endtime="20201115 22:01:15.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:15.754" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:15.749" endtime="20201115 22:01:15.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:15.757" endtime="20201115 22:01:15.761"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.674" endtime="20201115 22:01:15.762"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.668" endtime="20201115 22:01:15.764"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:15.781" endtime="20201115 22:01:16.131"></status>
</kw>
<msg timestamp="20201115 22:01:16.138" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042363931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042382278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:15.777" endtime="20201115 22:01:16.139"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:16.157" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042363931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042382278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:16.140" endtime="20201115 22:01:16.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:16.159" endtime="20201115 22:01:16.163"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.770" endtime="20201115 22:01:16.165"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.765" endtime="20201115 22:01:16.166"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:16.177" level="INFO">${RESULT} = [{'time': 0.042382278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.834700000000189e-05, 'source_diff': 1.834700000000189e-05}, {'time': 0.043410694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:16.168" endtime="20201115 22:01:16.178"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:16.208" level="INFO">${OVERHEAD} = {'diff': [1.834700000000189e-05, 1.8221999999998295e-05, 1.8541999999996395e-05, 1.8207999999998725e-05, 1.804100000000336e-05, 1.886099999999502e-05, 1.8207999999998725e-05, 1.88890000000011e-05, 1.8...</msg>
<status status="PASS" starttime="20201115 22:01:16.179" endtime="20201115 22:01:16.209"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:16.219" level="INFO">NAME: 00-overhead-25-set</msg>
<status status="PASS" starttime="20201115 22:01:16.217" endtime="20201115 22:01:16.220"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:16.225" level="INFO">VALUE: [1.834700000000189e-05, 1.8221999999998295e-05, 1.8541999999996395e-05, 1.8207999999998725e-05, 1.804100000000336e-05, 1.886099999999502e-05, 1.8207999999998725e-05, 1.88890000000011e-05, 1.836100000000146e-05, 1.872299999999827e-05, 1.837500000000103e-05, 1.884699999999545e-05, 1.805499999999599e-05, 1.884699999999545e-05, 1.8541999999996395e-05, 1.836100000000146e-05, 1.887500000000153e-05, 1.836100000000146e-05, 1.8749999999997935e-05, 1.834700000000189e-05, 1.886099999999502e-05, 1.869499999999913e-05, 1.8709000000005638e-05, 1.838899999999366e-05, 1.8709000000005638e-05, 1.880499999999674e-05, 1.834700000000189e-05, 1.8542000000010272e-05, 1.838899999999366e-05, 1.8528000000003764e-05, 1.887500000000153e-05, 1.8013999999996755e-05, 1.866699999999999e-05, 1.8028000000003264e-05, 1.887500000000153e-05, 1.8208000000005664e-05, 1.813900000000035e-05, 1.804099999999642e-05, 1.837500000000103e-05, 1.818099999999212e-05, 1.8193999999999155e-05, 1.816699999999949e-05, 1.855500000000343e-05, 1.8013999999996755e-05, 1.8208000000005664e-05, 1.8443999999992466e-05, 1.8541999999996395e-05, 1.8207999999991786e-05, 1.8499999999990746e-05, 1.80410000000103e-05]</msg>
<status status="PASS" starttime="20201115 22:01:16.222" endtime="20201115 22:01:16.226"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.210" endtime="20201115 22:01:16.228"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:16.234" endtime="20201115 22:01:16.237"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:16.242" endtime="20201115 22:01:16.264"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.238" endtime="20201115 22:01:16.266"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.229" endtime="20201115 22:01:16.268"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.662" endtime="20201115 22:01:16.268"></status>
</kw>
<msg timestamp="20201115 22:01:16.269" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:16.295" endtime="20201115 22:01:16.356"></status>
</kw>
<msg timestamp="20201115 22:01:16.358" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:16.290" endtime="20201115 22:01:16.358"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:16.364" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:16.360" endtime="20201115 22:01:16.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:16.367" endtime="20201115 22:01:16.370"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.283" endtime="20201115 22:01:16.372"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.276" endtime="20201115 22:01:16.374"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:16.390" endtime="20201115 22:01:16.741"></status>
</kw>
<msg timestamp="20201115 22:01:16.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044254875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044273403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:16.387" endtime="20201115 22:01:16.749"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:16.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044254875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044273403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:16.751" endtime="20201115 22:01:16.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:16.770" endtime="20201115 22:01:16.774"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.380" endtime="20201115 22:01:16.775"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.375" endtime="20201115 22:01:16.777"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:16.788" level="INFO">${RESULT} = [{'time': 0.044273403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8528000000003764e-05, 'source_diff': 1.8528000000003764e-05}, {'time': 0.045299931, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:16.778" endtime="20201115 22:01:16.788"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:16.821" level="INFO">${OVERHEAD} = {'diff': [1.8528000000003764e-05, 1.819499999999863e-05, 1.8042000000002834e-05, 1.868099999999956e-05, 1.8666000000000516e-05, 1.881900000000325e-05, 1.8042000000002834e-05, 1.8707999999999225e-05, 1...</msg>
<status status="PASS" starttime="20201115 22:01:16.790" endtime="20201115 22:01:16.821"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:16.832" level="INFO">NAME: 00-overhead-25-set</msg>
<status status="PASS" starttime="20201115 22:01:16.830" endtime="20201115 22:01:16.833"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:16.838" level="INFO">VALUE: [1.8528000000003764e-05, 1.819499999999863e-05, 1.8042000000002834e-05, 1.868099999999956e-05, 1.8666000000000516e-05, 1.881900000000325e-05, 1.8042000000002834e-05, 1.8707999999999225e-05, 1.8041999999995895e-05, 1.805500000000293e-05, 1.8528000000003764e-05, 1.813900000000035e-05, 1.8207999999998725e-05, 1.802700000000379e-05, 1.8709000000005638e-05, 1.88890000000011e-05, 1.8236000000004804e-05, 1.818099999999906e-05, 1.8221999999998295e-05, 1.8235999999990926e-05, 1.8556000000002904e-05, 1.8693999999999655e-05, 1.8735999999991426e-05, 1.836099999999452e-05, 1.8541999999996395e-05, 1.8389000000007538e-05, 1.8056000000002403e-05, 1.887500000000153e-05, 1.887500000000153e-05, 1.8041999999995895e-05, 1.83610000000084e-05, 1.837500000000103e-05, 1.887500000000153e-05, 1.8209000000005138e-05, 1.888899999999416e-05, 1.887500000000153e-05, 1.884700000000239e-05, 1.8348000000001363e-05, 1.869499999999913e-05, 1.8028000000003264e-05, 1.8542000000010272e-05, 1.866699999999999e-05, 1.8026999999989912e-05, 1.83610000000084e-05, 1.879100000000411e-05, 1.8709000000005638e-05, 1.8028000000003264e-05, 1.887500000000153e-05, 1.8848000000001863e-05, 1.8194000000013033e-05]</msg>
<status status="PASS" starttime="20201115 22:01:16.834" endtime="20201115 22:01:16.838"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.823" endtime="20201115 22:01:16.840"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:16.847" endtime="20201115 22:01:16.849"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:16.855" endtime="20201115 22:01:16.877"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.851" endtime="20201115 22:01:16.879"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.842" endtime="20201115 22:01:16.880"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.270" endtime="20201115 22:01:16.882"></status>
</kw>
<msg timestamp="20201115 22:01:16.882" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:16.905" endtime="20201115 22:01:16.967"></status>
</kw>
<msg timestamp="20201115 22:01:16.968" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:16.902" endtime="20201115 22:01:16.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:16.975" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:16.970" endtime="20201115 22:01:16.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:16.977" endtime="20201115 22:01:16.981"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.895" endtime="20201115 22:01:16.982"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.889" endtime="20201115 22:01:16.984"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:17.001" endtime="20201115 22:01:17.350"></status>
</kw>
<msg timestamp="20201115 22:01:17.358" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042394861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042413083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:16.997" endtime="20201115 22:01:17.359"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:17.377" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042394861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042413083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:17.361" endtime="20201115 22:01:17.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:17.380" endtime="20201115 22:01:17.384"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.990" endtime="20201115 22:01:17.386"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.985" endtime="20201115 22:01:17.387"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:17.398" level="INFO">${RESULT} = [{'time': 0.042413083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8221999999998295e-05, 'source_diff': 1.8221999999998295e-05}, {'time': 0.043440458, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:17.389" endtime="20201115 22:01:17.399"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:17.429" level="INFO">${OVERHEAD} = {'diff': [1.8221999999998295e-05, 1.8735999999998365e-05, 1.830500000000318e-05, 1.836100000000146e-05, 1.8027999999996325e-05, 1.843099999999931e-05, 1.7987000000004028e-05, 1.8193999999999155e-05, 1...</msg>
<status status="PASS" starttime="20201115 22:01:17.400" endtime="20201115 22:01:17.430"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:17.441" level="INFO">NAME: 00-overhead-25-set</msg>
<status status="PASS" starttime="20201115 22:01:17.438" endtime="20201115 22:01:17.441"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:17.446" level="INFO">VALUE: [1.8221999999998295e-05, 1.8735999999998365e-05, 1.830500000000318e-05, 1.836100000000146e-05, 1.8027999999996325e-05, 1.843099999999931e-05, 1.7987000000004028e-05, 1.8193999999999155e-05, 1.834700000000189e-05, 1.8693999999999655e-05, 1.837500000000103e-05, 1.8207999999998725e-05, 1.886100000000196e-05, 1.8334000000001793e-05, 1.8194000000006094e-05, 1.8181000000005998e-05, 1.834700000000189e-05, 1.8028000000003264e-05, 1.8028000000003264e-05, 1.8194000000006094e-05, 1.8541999999996395e-05, 1.8028000000003264e-05, 1.8387999999994187e-05, 1.838899999999366e-05, 1.887500000000153e-05, 1.8528000000003764e-05, 1.886099999999502e-05, 1.836099999999452e-05, 1.8223000000011647e-05, 1.8679999999993147e-05, 1.8417000000006678e-05, 1.852700000000429e-05, 1.7999999999990246e-05, 1.869499999999913e-05, 1.8180000000006524e-05, 1.8179999999992646e-05, 1.887500000000153e-05, 1.8541999999996395e-05, 1.881900000000325e-05, 1.8541999999996395e-05, 1.837500000000103e-05, 1.866699999999999e-05, 1.869499999999913e-05, 1.88610000000089e-05, 1.8528000000003764e-05, 1.804099999999642e-05, 1.837500000000103e-05, 1.888899999999416e-05, 1.869499999999913e-05, 1.834700000000189e-05]</msg>
<status status="PASS" starttime="20201115 22:01:17.443" endtime="20201115 22:01:17.447"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.431" endtime="20201115 22:01:17.449"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:17.456" endtime="20201115 22:01:17.459"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:17.465" endtime="20201115 22:01:17.487"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.460" endtime="20201115 22:01:17.489"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.451" endtime="20201115 22:01:17.490"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.883" endtime="20201115 22:01:17.491"></status>
</kw>
<msg timestamp="20201115 22:01:17.491" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:17.515" endtime="20201115 22:01:17.577"></status>
</kw>
<msg timestamp="20201115 22:01:17.578" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:17.511" endtime="20201115 22:01:17.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:17.584" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:17.580" endtime="20201115 22:01:17.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:17.586" endtime="20201115 22:01:17.590"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.504" endtime="20201115 22:01:17.592"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.498" endtime="20201115 22:01:17.593"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:17.612" endtime="20201115 22:01:17.975"></status>
</kw>
<msg timestamp="20201115 22:01:17.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042112667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042131556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:17.609" endtime="20201115 22:01:17.982"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:18.001" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042112667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042131556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:17.984" endtime="20201115 22:01:18.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:18.003" endtime="20201115 22:01:18.007"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.600" endtime="20201115 22:01:18.009"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.595" endtime="20201115 22:01:18.010"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:18.022" level="INFO">${RESULT} = [{'time': 0.042131556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.88890000000011e-05, 'source_diff': 1.88890000000011e-05}, {'time': 0.043159194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:01:18.012" endtime="20201115 22:01:18.023"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:18.053" level="INFO">${OVERHEAD} = {'diff': [1.88890000000011e-05, 1.8443999999999405e-05, 1.82089999999982e-05, 1.8193999999999155e-05, 1.8027999999996325e-05, 1.8362000000000933e-05, 1.8694000000006594e-05, 1.852699999999735e-05, 1.8...</msg>
<status status="PASS" starttime="20201115 22:01:18.025" endtime="20201115 22:01:18.054"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:18.065" level="INFO">NAME: 00-overhead-25-set</msg>
<status status="PASS" starttime="20201115 22:01:18.062" endtime="20201115 22:01:18.066"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:18.070" level="INFO">VALUE: [1.88890000000011e-05, 1.8443999999999405e-05, 1.82089999999982e-05, 1.8193999999999155e-05, 1.8027999999996325e-05, 1.8362000000000933e-05, 1.8694000000006594e-05, 1.852699999999735e-05, 1.8000000000004124e-05, 1.834700000000189e-05, 1.819499999999863e-05, 1.8195000000005568e-05, 1.837500000000103e-05, 1.8527999999996825e-05, 1.8471999999998545e-05, 1.8723000000005208e-05, 1.8013999999996755e-05, 1.868099999999956e-05, 1.834700000000189e-05, 1.854099999999692e-05, 1.834700000000189e-05, 1.8222000000012173e-05, 1.83610000000084e-05, 1.8485999999998115e-05, 1.8193999999999155e-05, 1.8041999999995895e-05, 1.870899999999176e-05, 1.869499999999913e-05, 1.8429999999999835e-05, 1.819499999999863e-05, 1.8014000000010633e-05, 1.8193999999999155e-05, 1.8708000000006164e-05, 1.83610000000084e-05, 1.8027999999989386e-05, 1.8346999999988012e-05, 1.837500000000103e-05, 1.887499999998765e-05, 1.851299999999778e-05, 1.887500000000153e-05, 1.8693999999999655e-05, 1.869499999999913e-05, 1.8069999999995034e-05, 1.8721999999998795e-05, 1.812499999999384e-05, 1.8542000000010272e-05, 1.8513999999997255e-05, 1.838899999999366e-05, 1.805500000000293e-05, 1.819499999999863e-05]</msg>
<status status="PASS" starttime="20201115 22:01:18.067" endtime="20201115 22:01:18.072"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.055" endtime="20201115 22:01:18.074"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:18.080" endtime="20201115 22:01:18.083"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:18.089" endtime="20201115 22:01:18.110"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.084" endtime="20201115 22:01:18.112"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.076" endtime="20201115 22:01:18.114"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.492" endtime="20201115 22:01:18.115"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.047" endtime="20201115 22:01:18.115"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.046" endtime="20201115 22:01:18.116"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.556" endtime="20201115 22:01:18.116"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="teardown">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:18.127" endtime="20201115 22:01:18.149"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.123" endtime="20201115 22:01:18.151"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.120" endtime="20201115 22:01:18.151"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:00:06.434" endtime="20201115 22:01:18.153" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Remove List">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:18.173" endtime="20201115 22:01:18.196"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.170" endtime="20201115 22:01:18.197"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:18.233" endtime="20201115 22:01:18.252"></status>
</kw>
<msg timestamp="20201115 22:01:18.253" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:18.229" endtime="20201115 22:01:18.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:18.260" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:18.256" endtime="20201115 22:01:18.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:01:18.267" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:01:18.262" endtime="20201115 22:01:18.268"></status>
</kw>
<status status="FAIL" starttime="20201115 22:01:18.220" endtime="20201115 22:01:18.270"></status>
</kw>
<status status="FAIL" starttime="20201115 22:01:18.214" endtime="20201115 22:01:18.271"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.211" endtime="20201115 22:01:18.272"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:01:18.280" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:01:18.278" endtime="20201115 22:01:18.281"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.274" endtime="20201115 22:01:18.281"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.209" endtime="20201115 22:01:18.281"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.207" endtime="20201115 22:01:18.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:18.284" endtime="20201115 22:01:18.287"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.203" endtime="20201115 22:01:18.289"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.199" endtime="20201115 22:01:18.290"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.167" endtime="20201115 22:01:18.291"></status>
</kw>
<kw name="${n} IN RANGE [ 25 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:18.299" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:18.326" endtime="20201115 22:01:18.343"></status>
</kw>
<msg timestamp="20201115 22:01:18.345" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:18.321" endtime="20201115 22:01:18.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:18.351" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:18.347" endtime="20201115 22:01:18.352"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:18.353" endtime="20201115 22:01:18.357"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.312" endtime="20201115 22:01:18.359"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.305" endtime="20201115 22:01:18.360"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:18.377" endtime="20201115 22:01:18.728"></status>
</kw>
<msg timestamp="20201115 22:01:18.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.1461665, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.146189319, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:01:18.374" endtime="20201115 22:01:18.736"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:18.754" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.1461665, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.146189319, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:01:18.738" endtime="20201115 22:01:18.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:18.756" endtime="20201115 22:01:18.760"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.366" endtime="20201115 22:01:18.762"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.361" endtime="20201115 22:01:18.764"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:18.774" level="INFO">${RESULT} = [{'time': 0.146189319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.281900000000725e-05, 'source_diff': 2.281900000000725e-05}, {'time': 0.146293583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:18.765" endtime="20201115 22:01:18.775"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:18.804" level="INFO">${OVERHEAD} = {'diff': [2.281900000000725e-05, 2.3165999999991138e-05, 2.365300000001236e-05, 2.2973000000009458e-05, 2.3306000000000715e-05, 2.2778000000001075e-05, 2.344399999998359e-05, 2.3458000000003976e-05, 2...</msg>
<status status="PASS" starttime="20201115 22:01:18.776" endtime="20201115 22:01:18.805"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:18.815" level="INFO">NAME: 00-overhead-1-remove</msg>
<status status="PASS" starttime="20201115 22:01:18.813" endtime="20201115 22:01:18.816"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:18.821" level="INFO">VALUE: [2.281900000000725e-05, 2.3165999999991138e-05, 2.365300000001236e-05, 2.2973000000009458e-05, 2.3306000000000715e-05, 2.2778000000001075e-05, 2.344399999998359e-05, 2.3458000000003976e-05, 2.3334000000013733e-05, 2.2957999999989598e-05, 2.3862000000013373e-05, 2.3471999999996607e-05, 2.3638999999991972e-05, 2.381900000000825e-05, 2.3458000000003976e-05, 2.3306000000000715e-05, 2.2972000000009984e-05, 2.2901999999991318e-05, 2.381900000000825e-05, 2.3500000000009624e-05, 2.359700000001408e-05, 2.3638999999991972e-05, 2.3124999999984963e-05, 2.3486000000016993e-05, 2.365300000001236e-05, 2.2791000000021988e-05, 2.347299999999608e-05, 2.3485999999989238e-05, 2.380500000001562e-05, 2.38339999999726e-05, 2.365300000001236e-05, 2.2986000000002615e-05, 2.361100000000671e-05, 2.362499999999934e-05, 2.3319999999993346e-05, 2.362499999999934e-05, 2.3514000000002255e-05, 2.2805999999986337e-05, 2.3181000000011e-05, 2.3250000000002435e-05, 2.3860999999986143e-05, 2.313900000000535e-05, 2.2957999999989598e-05, 2.3638999999991972e-05, 2.329100000000861e-05, 2.3471999999996607e-05, 2.3069999999986157e-05, 2.3639000000019728e-05, 2.345900000000345e-05, 2.330500000000124e-05]</msg>
<status status="PASS" starttime="20201115 22:01:18.817" endtime="20201115 22:01:18.821"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.806" endtime="20201115 22:01:18.823"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:18.829" endtime="20201115 22:01:18.832"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:18.837" endtime="20201115 22:01:18.860"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.833" endtime="20201115 22:01:18.861"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.825" endtime="20201115 22:01:18.863"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.300" endtime="20201115 22:01:18.864"></status>
</kw>
<msg timestamp="20201115 22:01:18.864" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:18.887" endtime="20201115 22:01:18.901"></status>
</kw>
<msg timestamp="20201115 22:01:18.903" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:18.884" endtime="20201115 22:01:18.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:18.909" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:18.905" endtime="20201115 22:01:18.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:18.911" endtime="20201115 22:01:18.915"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.877" endtime="20201115 22:01:18.916"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.871" endtime="20201115 22:01:18.918"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:18.935" endtime="20201115 22:01:19.270"></status>
</kw>
<msg timestamp="20201115 22:01:19.277" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040664986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040687792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:18.931" endtime="20201115 22:01:19.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:19.296" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040664986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040687792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:19.280" endtime="20201115 22:01:19.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:19.298" endtime="20201115 22:01:19.304"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.924" endtime="20201115 22:01:19.305"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.919" endtime="20201115 22:01:19.307"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:19.317" level="INFO">${RESULT} = [{'time': 0.040687792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2806000000000215e-05, 'source_diff': 2.2806000000000215e-05}, {'time': 0.040788, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:01:19.308" endtime="20201115 22:01:19.318"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:19.350" level="INFO">${OVERHEAD} = {'diff': [2.2806000000000215e-05, 2.3292000000001145e-05, 2.3485999999996177e-05, 2.363899999999891e-05, 2.3472000000003546e-05, 2.3820000000000785e-05, 2.3486000000003115e-05, 2.295899999999601e-05, ...</msg>
<status status="PASS" starttime="20201115 22:01:19.319" endtime="20201115 22:01:19.351"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:19.361" level="INFO">NAME: 00-overhead-1-remove</msg>
<status status="PASS" starttime="20201115 22:01:19.359" endtime="20201115 22:01:19.362"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:19.367" level="INFO">VALUE: [2.2806000000000215e-05, 2.3292000000001145e-05, 2.3485999999996177e-05, 2.363899999999891e-05, 2.3472000000003546e-05, 2.3820000000000785e-05, 2.3486000000003115e-05, 2.295899999999601e-05, 2.2736000000002365e-05, 2.331900000000081e-05, 2.32090000000032e-05, 2.3637999999999437e-05, 2.331900000000081e-05, 2.3320000000000285e-05, 2.379100000000217e-05, 2.3500000000002685e-05, 2.3318999999993872e-05, 2.3514000000002255e-05, 2.337499999999909e-05, 2.3457999999997037e-05, 2.27770000000016e-05, 2.3804999999994803e-05, 2.3070000000000035e-05, 2.3820000000000785e-05, 2.312499999999884e-05, 2.2972000000003046e-05, 2.362499999999934e-05, 2.2972000000003046e-05, 2.3250000000002435e-05, 2.3666000000005516e-05, 2.329100000000167e-05, 2.313900000000535e-05, 2.365299999999848e-05, 2.3320000000000285e-05, 2.2833999999999355e-05, 2.2986000000002615e-05, 2.362499999999934e-05, 2.306900000000056e-05, 2.3486000000003115e-05, 2.2986000000002615e-05, 2.347299999999608e-05, 2.313900000000535e-05, 2.363900000000585e-05, 2.3457999999997037e-05, 2.294499999999644e-05, 2.315299999999798e-05, 2.365300000000542e-05, 2.2750000000001935e-05, 2.3458000000003976e-05, 2.333300000000038e-05]</msg>
<status status="PASS" starttime="20201115 22:01:19.364" endtime="20201115 22:01:19.368"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.352" endtime="20201115 22:01:19.370"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:19.376" endtime="20201115 22:01:19.379"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:19.385" endtime="20201115 22:01:19.406"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.380" endtime="20201115 22:01:19.408"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.372" endtime="20201115 22:01:19.409"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.865" endtime="20201115 22:01:19.410"></status>
</kw>
<msg timestamp="20201115 22:01:19.411" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:19.435" endtime="20201115 22:01:19.450"></status>
</kw>
<msg timestamp="20201115 22:01:19.451" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:19.431" endtime="20201115 22:01:19.451"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:19.457" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:19.453" endtime="20201115 22:01:19.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:19.460" endtime="20201115 22:01:19.464"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.423" endtime="20201115 22:01:19.465"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.417" endtime="20201115 22:01:19.467"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:19.483" endtime="20201115 22:01:19.819"></status>
</kw>
<msg timestamp="20201115 22:01:19.826" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042399069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042422194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:19.480" endtime="20201115 22:01:19.827"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:19.845" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042399069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042422194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:19.828" endtime="20201115 22:01:19.845"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:19.847" endtime="20201115 22:01:19.851"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.472" endtime="20201115 22:01:19.852"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.468" endtime="20201115 22:01:19.854"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:19.864" level="INFO">${RESULT} = [{'time': 0.042422194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.312500000000578e-05, 'source_diff': 2.312500000000578e-05}, {'time': 0.042520278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:19.855" endtime="20201115 22:01:19.865"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:19.896" level="INFO">${OVERHEAD} = {'diff': [2.312500000000578e-05, 2.294500000000338e-05, 2.3556000000000965e-05, 2.3320000000000285e-05, 2.2957999999996537e-05, 2.3638000000006376e-05, 2.363900000000585e-05, 2.379100000000217e-05, 2....</msg>
<status status="PASS" starttime="20201115 22:01:19.866" endtime="20201115 22:01:19.896"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:19.907" level="INFO">NAME: 00-overhead-1-remove</msg>
<status status="PASS" starttime="20201115 22:01:19.904" endtime="20201115 22:01:19.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:19.912" level="INFO">VALUE: [2.312500000000578e-05, 2.294500000000338e-05, 2.3556000000000965e-05, 2.3320000000000285e-05, 2.2957999999996537e-05, 2.3638000000006376e-05, 2.363900000000585e-05, 2.379100000000217e-05, 2.311099999999927e-05, 2.3471999999996607e-05, 2.2972000000003046e-05, 2.331900000000081e-05, 2.331900000000081e-05, 2.3097999999999175e-05, 2.3471999999996607e-05, 2.344499999999694e-05, 2.3250000000002435e-05, 2.295899999999601e-05, 2.3805999999994276e-05, 2.311099999999927e-05, 2.2819999999999785e-05, 2.3292000000001145e-05, 2.344499999999694e-05, 2.3471999999996607e-05, 2.2971999999996107e-05, 2.3304999999994302e-05, 2.30969999999997e-05, 2.344499999999694e-05, 2.330500000000124e-05, 2.365299999999848e-05, 2.3598000000006614e-05, 2.293100000000381e-05, 2.362499999999934e-05, 2.2999999999995246e-05, 2.363899999999891e-05, 2.313899999999841e-05, 2.3320000000000285e-05, 2.363899999999891e-05, 2.3778000000002075e-05, 2.380500000000174e-05, 2.3292000000001145e-05, 2.3292000000001145e-05, 2.291700000000424e-05, 2.3305999999993776e-05, 2.368099999999762e-05, 2.3472000000003546e-05, 2.3137999999998937e-05, 2.298699999999515e-05, 2.2806000000000215e-05, 2.2792000000000645e-05]</msg>
<status status="PASS" starttime="20201115 22:01:19.909" endtime="20201115 22:01:19.914"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.898" endtime="20201115 22:01:19.915"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:19.921" endtime="20201115 22:01:19.924"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:19.930" endtime="20201115 22:01:19.951"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.925" endtime="20201115 22:01:19.953"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.917" endtime="20201115 22:01:19.954"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.412" endtime="20201115 22:01:19.955"></status>
</kw>
<msg timestamp="20201115 22:01:19.956" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:19.979" endtime="20201115 22:01:19.993"></status>
</kw>
<msg timestamp="20201115 22:01:19.994" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:19.975" endtime="20201115 22:01:19.995"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:20.001" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:19.997" endtime="20201115 22:01:20.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:20.004" endtime="20201115 22:01:20.008"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.968" endtime="20201115 22:01:20.009"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.962" endtime="20201115 22:01:20.011"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:20.027" endtime="20201115 22:01:20.361"></status>
</kw>
<msg timestamp="20201115 22:01:20.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040640917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040664444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:20.024" endtime="20201115 22:01:20.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:20.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040640917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040664444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:20.371" endtime="20201115 22:01:20.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:20.389" endtime="20201115 22:01:20.393"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.017" endtime="20201115 22:01:20.395"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.012" endtime="20201115 22:01:20.396"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:20.407" level="INFO">${RESULT} = [{'time': 0.040664444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.352700000000235e-05, 'source_diff': 2.352700000000235e-05}, {'time': 0.040768417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:20.398" endtime="20201115 22:01:20.407"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:20.439" level="INFO">${OVERHEAD} = {'diff': [2.352700000000235e-05, 2.3292000000001145e-05, 2.345899999999651e-05, 2.331900000000081e-05, 2.2971999999996107e-05, 2.2972000000003046e-05, 2.3486000000003115e-05, 2.2971999999996107e-05, 2...</msg>
<status status="PASS" starttime="20201115 22:01:20.409" endtime="20201115 22:01:20.439"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:20.450" level="INFO">NAME: 00-overhead-1-remove</msg>
<status status="PASS" starttime="20201115 22:01:20.448" endtime="20201115 22:01:20.451"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:20.456" level="INFO">VALUE: [2.352700000000235e-05, 2.3292000000001145e-05, 2.345899999999651e-05, 2.331900000000081e-05, 2.2971999999996107e-05, 2.2972000000003046e-05, 2.3486000000003115e-05, 2.2971999999996107e-05, 2.334699999999995e-05, 2.3666000000005516e-05, 2.363899999999891e-05, 2.3486000000003115e-05, 2.2972000000003046e-05, 2.3485999999996177e-05, 2.330500000000124e-05, 2.315299999999798e-05, 2.2972000000003046e-05, 2.3485999999996177e-05, 2.312499999999884e-05, 2.363899999999891e-05, 2.2972000000003046e-05, 2.362500000000628e-05, 2.362499999999934e-05, 2.3333999999999855e-05, 2.3472000000003546e-05, 2.294499999999644e-05, 2.331900000000081e-05, 2.3306000000000715e-05, 2.297299999999558e-05, 2.2957999999996537e-05, 2.3179999999997647e-05, 2.280500000000074e-05, 2.3306000000000715e-05, 2.283299999999988e-05, 2.313899999999841e-05, 2.331900000000081e-05, 2.333300000000038e-05, 2.2957999999996537e-05, 2.3790999999995233e-05, 2.3306000000000715e-05, 2.313900000000535e-05, 2.313899999999841e-05, 2.312499999999884e-05, 2.363899999999891e-05, 2.365299999999848e-05, 2.3292000000001145e-05, 2.348699999999565e-05, 2.331900000000081e-05, 2.308300000000013e-05, 2.30969999999997e-05]</msg>
<status status="PASS" starttime="20201115 22:01:20.453" endtime="20201115 22:01:20.457"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.440" endtime="20201115 22:01:20.459"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:20.466" endtime="20201115 22:01:20.469"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:20.475" endtime="20201115 22:01:20.496"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.470" endtime="20201115 22:01:20.498"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.461" endtime="20201115 22:01:20.500"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.957" endtime="20201115 22:01:20.500"></status>
</kw>
<msg timestamp="20201115 22:01:20.501" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:20.524" endtime="20201115 22:01:20.538"></status>
</kw>
<msg timestamp="20201115 22:01:20.539" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:20.520" endtime="20201115 22:01:20.540"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:20.545" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:20.541" endtime="20201115 22:01:20.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:20.548" endtime="20201115 22:01:20.551"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.513" endtime="20201115 22:01:20.553"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.507" endtime="20201115 22:01:20.555"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:20.571" endtime="20201115 22:01:20.906"></status>
</kw>
<msg timestamp="20201115 22:01:20.914" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040821319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040844278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:20.567" endtime="20201115 22:01:20.914"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:20.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040821319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040844278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:20.916" endtime="20201115 22:01:20.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:20.935" endtime="20201115 22:01:20.938"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.560" endtime="20201115 22:01:20.940"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.556" endtime="20201115 22:01:20.941"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:20.952" level="INFO">${RESULT} = [{'time': 0.040844278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.295899999999601e-05, 'source_diff': 2.295899999999601e-05}, {'time': 0.040948444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:20.943" endtime="20201115 22:01:20.952"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:20.984" level="INFO">${OVERHEAD} = {'diff': [2.295899999999601e-05, 2.306900000000056e-05, 2.313899999999841e-05, 2.363899999999891e-05, 2.362499999999934e-05, 2.363899999999891e-05, 2.362499999999934e-05, 2.312499999999884e-05, 2.3320...</msg>
<status status="PASS" starttime="20201115 22:01:20.954" endtime="20201115 22:01:20.984"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:20.995" level="INFO">NAME: 00-overhead-1-remove</msg>
<status status="PASS" starttime="20201115 22:01:20.992" endtime="20201115 22:01:20.995"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:21.000" level="INFO">VALUE: [2.295899999999601e-05, 2.306900000000056e-05, 2.313899999999841e-05, 2.363899999999891e-05, 2.362499999999934e-05, 2.363899999999891e-05, 2.362499999999934e-05, 2.312499999999884e-05, 2.3320000000000285e-05, 2.295900000000295e-05, 2.3472000000003546e-05, 2.3486000000003115e-05, 2.297300000000252e-05, 2.3458000000003976e-05, 2.3707999999997287e-05, 2.3471999999996607e-05, 2.330500000000124e-05, 2.366700000000499e-05, 2.30969999999997e-05, 2.312500000000578e-05, 2.3458000000003976e-05, 2.3193999999997217e-05, 2.379100000000217e-05, 2.365300000000542e-05, 2.27770000000016e-05, 2.3471999999996607e-05, 2.3152000000005446e-05, 2.2790999999994233e-05, 2.365299999999848e-05, 2.363899999999891e-05, 2.312499999999884e-05, 2.363899999999891e-05, 2.380500000000174e-05, 2.313899999999841e-05, 2.363899999999891e-05, 2.313899999999841e-05, 2.331900000000081e-05, 2.347299999999608e-05, 2.363899999999891e-05, 2.362499999999934e-05, 2.3790999999995233e-05, 2.363900000000585e-05, 2.3278000000001575e-05, 2.368100000000456e-05, 2.345900000000345e-05, 2.30969999999997e-05, 2.3806000000001215e-05, 2.283299999999988e-05, 2.2957999999996537e-05, 2.347300000000302e-05]</msg>
<status status="PASS" starttime="20201115 22:01:20.997" endtime="20201115 22:01:21.002"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.985" endtime="20201115 22:01:21.004"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:21.010" endtime="20201115 22:01:21.012"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:21.018" endtime="20201115 22:01:21.040"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.014" endtime="20201115 22:01:21.041"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.005" endtime="20201115 22:01:21.043"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.502" endtime="20201115 22:01:21.044"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.296" endtime="20201115 22:01:21.044"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.295" endtime="20201115 22:01:21.044"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:21.049" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:21.072" endtime="20201115 22:01:21.088"></status>
</kw>
<msg timestamp="20201115 22:01:21.089" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:21.069" endtime="20201115 22:01:21.090"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:21.095" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:21.091" endtime="20201115 22:01:21.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:21.098" endtime="20201115 22:01:21.101"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.061" endtime="20201115 22:01:21.103"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.056" endtime="20201115 22:01:21.104"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:21.121" endtime="20201115 22:01:21.455"></status>
</kw>
<msg timestamp="20201115 22:01:21.462" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045645694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045668931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:21.117" endtime="20201115 22:01:21.462"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:21.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045645694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045668931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:21.464" endtime="20201115 22:01:21.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:21.482" endtime="20201115 22:01:21.486"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.110" endtime="20201115 22:01:21.488"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.106" endtime="20201115 22:01:21.490"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:21.500" level="INFO">${RESULT} = [{'time': 0.045668931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.323700000000234e-05, 'source_diff': 2.323700000000234e-05}, {'time': 0.045810139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:21.491" endtime="20201115 22:01:21.501"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:21.533" level="INFO">${OVERHEAD} = {'diff': [2.323700000000234e-05, 2.340299999999823e-05, 2.3042000000000895e-05, 2.3221999999996357e-05, 2.358300000000063e-05, 2.355500000000149e-05, 2.293099999999687e-05, 2.3750000000002935e-05, 2.3...</msg>
<status status="PASS" starttime="20201115 22:01:21.503" endtime="20201115 22:01:21.534"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:21.545" level="INFO">NAME: 00-overhead-2-remove</msg>
<status status="PASS" starttime="20201115 22:01:21.543" endtime="20201115 22:01:21.546"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:21.551" level="INFO">VALUE: [2.323700000000234e-05, 2.340299999999823e-05, 2.3042000000000895e-05, 2.3221999999996357e-05, 2.358300000000063e-05, 2.355500000000149e-05, 2.293099999999687e-05, 2.3750000000002935e-05, 2.305500000000099e-05, 2.369499999999719e-05, 2.37090000000037e-05, 2.288899999999816e-05, 2.338899999999866e-05, 2.358300000000063e-05, 2.3750000000002935e-05, 2.32090000000032e-05, 2.305500000000099e-05, 2.288899999999816e-05, 2.338899999999866e-05, 2.35970000000002e-05, 2.3568999999994122e-05, 2.3028000000001325e-05, 2.287500000000553e-05, 2.322300000000277e-05, 2.343099999999737e-05, 2.3486000000003115e-05, 2.291700000000424e-05, 2.340299999999823e-05, 2.28890000000051e-05, 2.304100000000142e-05, 2.3708000000004226e-05, 2.337499999999909e-05, 2.356900000000106e-05, 2.305500000000099e-05, 2.3208000000003726e-05, 2.28890000000051e-05, 2.288899999999816e-05, 2.3500000000002685e-05, 2.3054999999994052e-05, 2.290299999999773e-05, 2.3471999999996607e-05, 2.368099999999762e-05, 2.3236000000002865e-05, 2.305500000000099e-05, 2.3486000000003115e-05, 2.304100000000142e-05, 2.3221999999996357e-05, 2.3402000000005696e-05, 2.284699999999945e-05, 2.355500000000149e-05]</msg>
<status status="PASS" starttime="20201115 22:01:21.547" endtime="20201115 22:01:21.552"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.535" endtime="20201115 22:01:21.554"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:21.560" endtime="20201115 22:01:21.563"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:21.568" endtime="20201115 22:01:21.590"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.564" endtime="20201115 22:01:21.591"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.556" endtime="20201115 22:01:21.593"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.050" endtime="20201115 22:01:21.594"></status>
</kw>
<msg timestamp="20201115 22:01:21.594" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:21.617" endtime="20201115 22:01:21.633"></status>
</kw>
<msg timestamp="20201115 22:01:21.634" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:21.614" endtime="20201115 22:01:21.635"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:21.640" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:21.637" endtime="20201115 22:01:21.641"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:21.643" endtime="20201115 22:01:21.646"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.606" endtime="20201115 22:01:21.648"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.601" endtime="20201115 22:01:21.649"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:21.666" endtime="20201115 22:01:22.001"></status>
</kw>
<msg timestamp="20201115 22:01:22.008" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040431667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040454722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:21.662" endtime="20201115 22:01:22.008"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:22.026" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040431667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040454722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:22.010" endtime="20201115 22:01:22.027"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:22.028" endtime="20201115 22:01:22.032"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.655" endtime="20201115 22:01:22.034"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.651" endtime="20201115 22:01:22.035"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:22.046" level="INFO">${RESULT} = [{'time': 0.040454722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.305500000000099e-05, 'source_diff': 2.305500000000099e-05}, {'time': 0.040592958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:22.037" endtime="20201115 22:01:22.046"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:22.076" level="INFO">${OVERHEAD} = {'diff': [2.305500000000099e-05, 2.3540999999994983e-05, 2.288899999999816e-05, 2.340300000000517e-05, 2.3570000000000535e-05, 2.291700000000424e-05, 2.3042000000000895e-05, 2.356900000000106e-05, 2.2...</msg>
<status status="PASS" starttime="20201115 22:01:22.048" endtime="20201115 22:01:22.077"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:22.088" level="INFO">NAME: 00-overhead-2-remove</msg>
<status status="PASS" starttime="20201115 22:01:22.086" endtime="20201115 22:01:22.088"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:22.094" level="INFO">VALUE: [2.305500000000099e-05, 2.3540999999994983e-05, 2.288899999999816e-05, 2.340300000000517e-05, 2.3570000000000535e-05, 2.291700000000424e-05, 2.3042000000000895e-05, 2.356900000000106e-05, 2.28890000000051e-05, 2.32090000000032e-05, 2.305500000000099e-05, 2.3055999999993526e-05, 2.3208000000003726e-05, 2.306900000000056e-05, 2.3222000000003296e-05, 2.3721999999996857e-05, 2.3568999999994122e-05, 2.288899999999816e-05, 2.3736000000003366e-05, 2.333300000000038e-05, 2.308300000000013e-05, 2.305500000000099e-05, 2.304100000000142e-05, 2.287500000000553e-05, 2.3721999999996857e-05, 2.340299999999823e-05, 2.338899999999866e-05, 2.288899999999816e-05, 2.3264000000002005e-05, 2.3250000000002435e-05, 2.343099999999737e-05, 2.3721999999996857e-05, 2.35970000000002e-05, 2.28890000000051e-05, 2.3554999999994553e-05, 2.3736000000003366e-05, 2.291700000000424e-05, 2.3721999999996857e-05, 2.2915999999997827e-05, 2.338899999999866e-05, 2.288899999999816e-05, 2.3222000000003296e-05, 2.338899999999866e-05, 2.3193999999997217e-05, 2.3415999999998327e-05, 2.3040999999994483e-05, 2.287500000000553e-05, 2.290299999999773e-05, 2.3402000000005696e-05, 2.3570000000000535e-05]</msg>
<status status="PASS" starttime="20201115 22:01:22.090" endtime="20201115 22:01:22.095"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.079" endtime="20201115 22:01:22.097"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:22.103" endtime="20201115 22:01:22.106"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:22.111" endtime="20201115 22:01:22.133"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.107" endtime="20201115 22:01:22.135"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.099" endtime="20201115 22:01:22.136"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.595" endtime="20201115 22:01:22.137"></status>
</kw>
<msg timestamp="20201115 22:01:22.137" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:22.160" endtime="20201115 22:01:22.176"></status>
</kw>
<msg timestamp="20201115 22:01:22.177" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:22.156" endtime="20201115 22:01:22.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:22.183" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:22.179" endtime="20201115 22:01:22.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:22.186" endtime="20201115 22:01:22.189"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.149" endtime="20201115 22:01:22.191"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.144" endtime="20201115 22:01:22.192"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:22.209" endtime="20201115 22:01:22.545"></status>
</kw>
<msg timestamp="20201115 22:01:22.552" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040342694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040366417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:22.205" endtime="20201115 22:01:22.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:22.570" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040342694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040366417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:22.554" endtime="20201115 22:01:22.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:22.572" endtime="20201115 22:01:22.576"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.198" endtime="20201115 22:01:22.578"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.194" endtime="20201115 22:01:22.579"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:22.590" level="INFO">${RESULT} = [{'time': 0.040366417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.372300000000327e-05, 'source_diff': 2.372300000000327e-05}, {'time': 0.040502722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:22.581" endtime="20201115 22:01:22.591"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:22.621" level="INFO">${OVERHEAD} = {'diff': [2.372300000000327e-05, 2.3235999999995927e-05, 2.3236000000002865e-05, 2.28890000000051e-05, 2.3249999999995496e-05, 2.337499999999909e-05, 2.3749999999995997e-05, 2.306900000000056e-05, 2.3...</msg>
<status status="PASS" starttime="20201115 22:01:22.592" endtime="20201115 22:01:22.622"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:22.632" level="INFO">NAME: 00-overhead-2-remove</msg>
<status status="PASS" starttime="20201115 22:01:22.630" endtime="20201115 22:01:22.633"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:22.637" level="INFO">VALUE: [2.372300000000327e-05, 2.3235999999995927e-05, 2.3236000000002865e-05, 2.28890000000051e-05, 2.3249999999995496e-05, 2.337499999999909e-05, 2.3749999999995997e-05, 2.306900000000056e-05, 2.3193999999997217e-05, 2.356900000000106e-05, 2.3736000000003366e-05, 2.323700000000234e-05, 2.369499999999719e-05, 2.34169999999978e-05, 2.290299999999773e-05, 2.33890000000056e-05, 2.3721999999996857e-05, 2.288899999999816e-05, 2.3278000000001575e-05, 2.3040999999994483e-05, 2.340300000000517e-05, 2.311099999999927e-05, 2.338899999999866e-05, 2.3249999999995496e-05, 2.3721999999996857e-05, 2.340299999999823e-05, 2.3597999999999675e-05, 2.34169999999978e-05, 2.3402000000005696e-05, 2.35970000000002e-05, 2.338899999999866e-05, 2.340300000000517e-05, 2.34169999999978e-05, 2.294499999999644e-05, 2.355500000000149e-05, 2.3070000000000035e-05, 2.311099999999927e-05, 2.3708000000004226e-05, 2.37090000000037e-05, 2.3222000000003296e-05, 2.3736000000003366e-05, 2.3070000000000035e-05, 2.3264000000002005e-05, 2.32090000000032e-05, 2.33890000000056e-05, 2.3222000000003296e-05, 2.3722000000003796e-05, 2.336099999999952e-05, 2.295899999999601e-05, 2.356900000000106e-05]</msg>
<status status="PASS" starttime="20201115 22:01:22.634" endtime="20201115 22:01:22.638"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.623" endtime="20201115 22:01:22.640"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:22.646" endtime="20201115 22:01:22.650"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:22.656" endtime="20201115 22:01:22.677"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.651" endtime="20201115 22:01:22.679"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.642" endtime="20201115 22:01:22.680"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.138" endtime="20201115 22:01:22.681"></status>
</kw>
<msg timestamp="20201115 22:01:22.682" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:22.704" endtime="20201115 22:01:22.721"></status>
</kw>
<msg timestamp="20201115 22:01:22.722" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:22.701" endtime="20201115 22:01:22.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:22.728" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:22.724" endtime="20201115 22:01:22.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:22.730" endtime="20201115 22:01:22.734"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.694" endtime="20201115 22:01:22.736"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.688" endtime="20201115 22:01:22.737"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:22.753" endtime="20201115 22:01:23.088"></status>
</kw>
<msg timestamp="20201115 22:01:23.095" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040548167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040571889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:22.750" endtime="20201115 22:01:23.095"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:23.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040548167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040571889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:23.097" endtime="20201115 22:01:23.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:23.116" endtime="20201115 22:01:23.120"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.743" endtime="20201115 22:01:23.121"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.738" endtime="20201115 22:01:23.123"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:23.133" level="INFO">${RESULT} = [{'time': 0.040571889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3721999999996857e-05, 'source_diff': 2.3721999999996857e-05}, {'time': 0.040709986, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:23.124" endtime="20201115 22:01:23.134"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:23.164" level="INFO">${OVERHEAD} = {'diff': [2.3721999999996857e-05, 2.3221999999996357e-05, 2.304100000000142e-05, 2.3000000000002185e-05, 2.340299999999823e-05, 2.337499999999909e-05, 2.3221999999996357e-05, 2.338899999999866e-05, 2....</msg>
<status status="PASS" starttime="20201115 22:01:23.136" endtime="20201115 22:01:23.164"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:23.175" level="INFO">NAME: 00-overhead-2-remove</msg>
<status status="PASS" starttime="20201115 22:01:23.172" endtime="20201115 22:01:23.175"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:23.180" level="INFO">VALUE: [2.3721999999996857e-05, 2.3221999999996357e-05, 2.304100000000142e-05, 2.3000000000002185e-05, 2.340299999999823e-05, 2.337499999999909e-05, 2.3221999999996357e-05, 2.338899999999866e-05, 2.305500000000099e-05, 2.35970000000002e-05, 2.288899999999816e-05, 2.3193999999997217e-05, 2.291700000000424e-05, 2.3235999999995927e-05, 2.29169999999973e-05, 2.2929999999997397e-05, 2.3694000000004656e-05, 2.3179999999997647e-05, 2.3236000000002865e-05, 2.288899999999816e-05, 2.29169999999973e-05, 2.308300000000013e-05, 2.355500000000149e-05, 2.3542000000001395e-05, 2.3556000000000965e-05, 2.3263999999995066e-05, 2.288899999999816e-05, 2.37090000000037e-05, 2.338899999999866e-05, 2.3722000000003796e-05, 2.336099999999952e-05, 2.372299999999633e-05, 2.3222000000003296e-05, 2.3028000000001325e-05, 2.3056000000000465e-05, 2.3042000000000895e-05, 2.3541999999994456e-05, 2.287499999999859e-05, 2.355500000000149e-05, 2.294500000000338e-05, 2.3721999999996857e-05, 2.337499999999909e-05, 2.3721999999996857e-05, 2.3707999999997287e-05, 2.3042000000000895e-05, 2.3542000000001395e-05, 2.3042000000000895e-05, 2.3708000000004226e-05, 2.3429999999997897e-05, 2.3083999999999605e-05]</msg>
<status status="PASS" starttime="20201115 22:01:23.177" endtime="20201115 22:01:23.181"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.166" endtime="20201115 22:01:23.182"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:23.189" endtime="20201115 22:01:23.191"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:23.197" endtime="20201115 22:01:23.218"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.193" endtime="20201115 22:01:23.220"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.184" endtime="20201115 22:01:23.222"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.683" endtime="20201115 22:01:23.222"></status>
</kw>
<msg timestamp="20201115 22:01:23.223" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:23.247" endtime="20201115 22:01:23.263"></status>
</kw>
<msg timestamp="20201115 22:01:23.265" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:23.244" endtime="20201115 22:01:23.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:23.271" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:23.267" endtime="20201115 22:01:23.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:23.273" endtime="20201115 22:01:23.277"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.237" endtime="20201115 22:01:23.278"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.229" endtime="20201115 22:01:23.280"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:23.296" endtime="20201115 22:01:23.632"></status>
</kw>
<msg timestamp="20201115 22:01:23.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042046167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042069056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:23.293" endtime="20201115 22:01:23.640"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:23.658" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042046167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042069056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:23.642" endtime="20201115 22:01:23.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:23.660" endtime="20201115 22:01:23.664"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.286" endtime="20201115 22:01:23.666"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.281" endtime="20201115 22:01:23.667"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:23.678" level="INFO">${RESULT} = [{'time': 0.042069056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.288899999999816e-05, 'source_diff': 2.288899999999816e-05}, {'time': 0.042210097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:23.669" endtime="20201115 22:01:23.678"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:23.710" level="INFO">${OVERHEAD} = {'diff': [2.288899999999816e-05, 2.28890000000051e-05, 2.3042000000000895e-05, 2.288899999999816e-05, 2.338899999999866e-05, 2.3570000000000535e-05, 2.2888000000005626e-05, 2.286099999999902e-05, 2.28...</msg>
<status status="PASS" starttime="20201115 22:01:23.680" endtime="20201115 22:01:23.710"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:23.721" level="INFO">NAME: 00-overhead-2-remove</msg>
<status status="PASS" starttime="20201115 22:01:23.719" endtime="20201115 22:01:23.721"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:23.726" level="INFO">VALUE: [2.288899999999816e-05, 2.28890000000051e-05, 2.3042000000000895e-05, 2.288899999999816e-05, 2.338899999999866e-05, 2.3570000000000535e-05, 2.2888000000005626e-05, 2.286099999999902e-05, 2.28890000000051e-05, 2.3056000000000465e-05, 2.340299999999823e-05, 2.3235999999995927e-05, 2.340299999999823e-05, 2.28890000000051e-05, 2.287499999999859e-05, 2.337499999999909e-05, 2.337499999999909e-05, 2.362499999999934e-05, 2.2887999999998687e-05, 2.319500000000363e-05, 2.288899999999816e-05, 2.3236000000002865e-05, 2.3000000000002185e-05, 2.288899999999816e-05, 2.3014000000001755e-05, 2.338899999999866e-05, 2.304100000000142e-05, 2.2986000000002615e-05, 2.304100000000142e-05, 2.355500000000149e-05, 2.3556000000000965e-05, 2.340299999999823e-05, 2.287499999999859e-05, 2.355500000000149e-05, 2.288899999999816e-05, 2.305500000000099e-05, 2.3054999999994052e-05, 2.288899999999816e-05, 2.291700000000424e-05, 2.3721999999996857e-05, 2.306900000000056e-05, 2.3679999999998147e-05, 2.286100000000596e-05, 2.3221999999996357e-05, 2.3236000000002865e-05, 2.3221999999996357e-05, 2.3097999999999175e-05, 2.3222000000003296e-05, 2.288899999999816e-05, 2.2957999999996537e-05]</msg>
<status status="PASS" starttime="20201115 22:01:23.723" endtime="20201115 22:01:23.727"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.712" endtime="20201115 22:01:23.729"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:23.735" endtime="20201115 22:01:23.738"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:23.743" endtime="20201115 22:01:23.765"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.739" endtime="20201115 22:01:23.767"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.730" endtime="20201115 22:01:23.768"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.224" endtime="20201115 22:01:23.769"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.047" endtime="20201115 22:01:23.769"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.045" endtime="20201115 22:01:23.770"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:23.774" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:23.797" endtime="20201115 22:01:23.817"></status>
</kw>
<msg timestamp="20201115 22:01:23.818" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:23.794" endtime="20201115 22:01:23.818"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:23.824" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:23.820" endtime="20201115 22:01:23.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:23.826" endtime="20201115 22:01:23.830"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.787" endtime="20201115 22:01:23.832"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.781" endtime="20201115 22:01:23.834"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:23.850" endtime="20201115 22:01:24.186"></status>
</kw>
<msg timestamp="20201115 22:01:24.193" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047246403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047271222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:23.847" endtime="20201115 22:01:24.194"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:24.211" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047246403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047271222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:24.196" endtime="20201115 22:01:24.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:24.214" endtime="20201115 22:01:24.218"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.840" endtime="20201115 22:01:24.219"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.835" endtime="20201115 22:01:24.221"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:24.231" level="INFO">${RESULT} = [{'time': 0.047271222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.481900000000231e-05, 'source_diff': 2.481900000000231e-05}, {'time': 0.047447319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:24.222" endtime="20201115 22:01:24.232"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:24.262" level="INFO">${OVERHEAD} = {'diff': [2.481900000000231e-05, 2.380500000000174e-05, 2.3971999999997107e-05, 2.3972000000004046e-05, 2.413899999999941e-05, 2.4305999999994776e-05, 2.463899999999991e-05, 2.412499999999984e-05, 2.4...</msg>
<status status="PASS" starttime="20201115 22:01:24.233" endtime="20201115 22:01:24.262"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:24.272" level="INFO">NAME: 00-overhead-3-remove</msg>
<status status="PASS" starttime="20201115 22:01:24.270" endtime="20201115 22:01:24.273"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:24.278" level="INFO">VALUE: [2.481900000000231e-05, 2.380500000000174e-05, 2.3971999999997107e-05, 2.3972000000004046e-05, 2.413899999999941e-05, 2.4305999999994776e-05, 2.463899999999991e-05, 2.412499999999984e-05, 2.413899999999941e-05, 2.3763999999995566e-05, 2.4652000000000007e-05, 2.4305999999994776e-05, 2.3972000000004046e-05, 2.415299999999898e-05, 2.4806000000002215e-05, 2.413899999999941e-05, 2.430500000000224e-05, 2.461100000000077e-05, 2.3986000000003616e-05, 2.413899999999941e-05, 2.413899999999941e-05, 2.465299999999948e-05, 2.4320000000001285e-05, 2.4320000000001285e-05, 2.3999999999996247e-05, 2.415299999999898e-05, 2.3986000000003616e-05, 2.413899999999941e-05, 2.4457999999998037e-05, 2.3971999999997107e-05, 2.395899999999701e-05, 2.4306000000001715e-05, 2.4471999999997607e-05, 2.433300000000138e-05, 2.395899999999701e-05, 2.3999999999996247e-05, 2.4320000000001285e-05, 2.381900000000131e-05, 2.465299999999948e-05, 2.481900000000231e-05, 2.4291999999995206e-05, 2.3957999999997537e-05, 2.4735999999997427e-05, 2.4235999999996927e-05, 2.4151999999999507e-05, 2.447299999999708e-05, 2.3792000000001645e-05, 2.4485999999997177e-05, 2.4137999999999937e-05, 2.4652000000000007e-05]</msg>
<status status="PASS" starttime="20201115 22:01:24.275" endtime="20201115 22:01:24.279"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.263" endtime="20201115 22:01:24.280"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:24.286" endtime="20201115 22:01:24.289"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:24.295" endtime="20201115 22:01:24.316"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.290" endtime="20201115 22:01:24.318"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.282" endtime="20201115 22:01:24.320"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.776" endtime="20201115 22:01:24.320"></status>
</kw>
<msg timestamp="20201115 22:01:24.321" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:24.344" endtime="20201115 22:01:24.362"></status>
</kw>
<msg timestamp="20201115 22:01:24.363" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:24.340" endtime="20201115 22:01:24.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:24.370" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:24.365" endtime="20201115 22:01:24.370"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:24.372" endtime="20201115 22:01:24.376"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.333" endtime="20201115 22:01:24.377"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.327" endtime="20201115 22:01:24.379"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:24.397" endtime="20201115 22:01:24.732"></status>
</kw>
<msg timestamp="20201115 22:01:24.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040720069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040744542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:24.394" endtime="20201115 22:01:24.740"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:24.757" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040720069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040744542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:24.742" endtime="20201115 22:01:24.758"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:24.760" endtime="20201115 22:01:24.764"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.385" endtime="20201115 22:01:24.765"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.380" endtime="20201115 22:01:24.767"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:24.777" level="INFO">${RESULT} = [{'time': 0.040744542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.447300000000402e-05, 'source_diff': 2.447300000000402e-05}, {'time': 0.040923875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:24.768" endtime="20201115 22:01:24.778"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:24.807" level="INFO">${OVERHEAD} = {'diff': [2.447300000000402e-05, 2.4805999999995276e-05, 2.447300000000402e-05, 2.412499999999984e-05, 2.445900000000445e-05, 2.3957999999997537e-05, 2.4348000000000425e-05, 2.4652000000000007e-05, 2....</msg>
<status status="PASS" starttime="20201115 22:01:24.779" endtime="20201115 22:01:24.808"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:24.818" level="INFO">NAME: 00-overhead-3-remove</msg>
<status status="PASS" starttime="20201115 22:01:24.816" endtime="20201115 22:01:24.819"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:24.824" level="INFO">VALUE: [2.447300000000402e-05, 2.4805999999995276e-05, 2.447300000000402e-05, 2.412499999999984e-05, 2.445900000000445e-05, 2.3957999999997537e-05, 2.4348000000000425e-05, 2.4652000000000007e-05, 2.4820000000001785e-05, 2.395900000000395e-05, 2.397300000000352e-05, 2.4292000000002145e-05, 2.445899999999751e-05, 2.3971999999997107e-05, 2.408300000000113e-05, 2.3819999999993846e-05, 2.434700000000095e-05, 2.481900000000231e-05, 2.3957999999997537e-05, 2.3957999999997537e-05, 2.4457999999998037e-05, 2.4499999999996747e-05, 2.3820000000000785e-05, 2.480500000000274e-05, 2.381900000000131e-05, 2.4471999999997607e-05, 2.433300000000138e-05, 2.3834000000000355e-05, 2.4486000000004116e-05, 2.4306000000001715e-05, 2.4290999999995733e-05, 2.434700000000095e-05, 2.447299999999708e-05, 2.3999999999996247e-05, 2.466699999999905e-05, 2.466699999999905e-05, 2.416699999999855e-05, 2.4000000000003185e-05, 2.4500000000003685e-05, 2.465299999999948e-05, 2.4304999999995303e-05, 2.463899999999991e-05, 2.4486000000004116e-05, 2.3792000000001645e-05, 2.4471999999997607e-05, 2.415299999999898e-05, 2.4471999999997607e-05, 2.3985999999996677e-05, 2.4499999999996747e-05, 2.462500000000034e-05]</msg>
<status status="PASS" starttime="20201115 22:01:24.820" endtime="20201115 22:01:24.825"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.809" endtime="20201115 22:01:24.826"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:24.832" endtime="20201115 22:01:24.835"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:24.841" endtime="20201115 22:01:24.862"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.836" endtime="20201115 22:01:24.864"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.828" endtime="20201115 22:01:24.865"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.322" endtime="20201115 22:01:24.866"></status>
</kw>
<msg timestamp="20201115 22:01:24.866" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:24.890" endtime="20201115 22:01:24.908"></status>
</kw>
<msg timestamp="20201115 22:01:24.909" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:24.887" endtime="20201115 22:01:24.910"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:24.915" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:24.911" endtime="20201115 22:01:24.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:24.918" endtime="20201115 22:01:24.921"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.879" endtime="20201115 22:01:24.923"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.873" endtime="20201115 22:01:24.924"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:24.941" endtime="20201115 22:01:25.278"></status>
</kw>
<msg timestamp="20201115 22:01:25.285" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041269222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041293194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:24.938" endtime="20201115 22:01:25.286"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:25.304" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041269222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041293194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:25.288" endtime="20201115 22:01:25.304"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:25.306" endtime="20201115 22:01:25.310"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.930" endtime="20201115 22:01:25.311"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.926" endtime="20201115 22:01:25.313"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:25.323" level="INFO">${RESULT} = [{'time': 0.041293194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3971999999997107e-05, 'source_diff': 2.3971999999997107e-05}, {'time': 0.041471389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:25.314" endtime="20201115 22:01:25.324"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:25.353" level="INFO">${OVERHEAD} = {'diff': [2.3971999999997107e-05, 2.3805999999994276e-05, 2.4791999999995706e-05, 2.4486000000004116e-05, 2.3986000000003616e-05, 2.465299999999948e-05, 2.4472000000004546e-05, 2.44169999999988e-05, 2...</msg>
<status status="PASS" starttime="20201115 22:01:25.325" endtime="20201115 22:01:25.354"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:25.364" level="INFO">NAME: 00-overhead-3-remove</msg>
<status status="PASS" starttime="20201115 22:01:25.362" endtime="20201115 22:01:25.365"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:25.370" level="INFO">VALUE: [2.3971999999997107e-05, 2.3805999999994276e-05, 2.4791999999995706e-05, 2.4486000000004116e-05, 2.3986000000003616e-05, 2.465299999999948e-05, 2.4472000000004546e-05, 2.44169999999988e-05, 2.4179999999998647e-05, 2.4151999999999507e-05, 2.4834000000001355e-05, 2.462500000000034e-05, 2.413899999999941e-05, 2.3985999999996677e-05, 2.463900000000685e-05, 2.4000000000003185e-05, 2.448700000000359e-05, 2.4332999999994442e-05, 2.3764000000002505e-05, 2.4165999999999077e-05, 2.4305999999994776e-05, 2.436100000000052e-05, 2.4277999999995636e-05, 2.4777000000003602e-05, 2.466699999999905e-05, 2.448700000000359e-05, 2.413900000000635e-05, 2.4820000000001785e-05, 2.431900000000181e-05, 2.463899999999991e-05, 2.484700000000145e-05, 2.3985999999996677e-05, 2.465299999999948e-05, 2.4292000000002145e-05, 2.395899999999701e-05, 2.4305999999994776e-05, 2.466699999999905e-05, 2.3806000000001215e-05, 2.462500000000034e-05, 2.3847999999999925e-05, 2.40970000000007e-05, 2.4652000000000007e-05, 2.4014000000002755e-05, 2.462500000000034e-05, 2.3999999999996247e-05, 2.4332999999994442e-05, 2.412499999999984e-05, 2.463899999999991e-05, 2.381900000000131e-05, 2.3820000000000785e-05]</msg>
<status status="PASS" starttime="20201115 22:01:25.367" endtime="20201115 22:01:25.371"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.355" endtime="20201115 22:01:25.372"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:25.378" endtime="20201115 22:01:25.381"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:25.387" endtime="20201115 22:01:25.408"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.382" endtime="20201115 22:01:25.410"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.374" endtime="20201115 22:01:25.411"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.868" endtime="20201115 22:01:25.412"></status>
</kw>
<msg timestamp="20201115 22:01:25.413" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:25.436" endtime="20201115 22:01:25.454"></status>
</kw>
<msg timestamp="20201115 22:01:25.455" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:25.432" endtime="20201115 22:01:25.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:25.461" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:25.457" endtime="20201115 22:01:25.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:25.464" endtime="20201115 22:01:25.467"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.425" endtime="20201115 22:01:25.469"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.420" endtime="20201115 22:01:25.470"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:25.487" endtime="20201115 22:01:25.823"></status>
</kw>
<msg timestamp="20201115 22:01:25.831" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041185333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041209819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:25.483" endtime="20201115 22:01:25.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:25.849" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041185333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041209819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:25.833" endtime="20201115 22:01:25.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:25.851" endtime="20201115 22:01:25.855"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.476" endtime="20201115 22:01:25.857"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.472" endtime="20201115 22:01:25.858"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:25.868" level="INFO">${RESULT} = [{'time': 0.041209819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4486000000004116e-05, 'source_diff': 2.4486000000004116e-05}, {'time': 0.041386194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:25.860" endtime="20201115 22:01:25.869"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:25.901" level="INFO">${OVERHEAD} = {'diff': [2.4486000000004116e-05, 2.481900000000231e-05, 2.4638000000000437e-05, 2.3818999999994372e-05, 2.4306000000001715e-05, 2.4486000000004116e-05, 2.468099999999862e-05, 2.3972000000004046e-05, ...</msg>
<status status="PASS" starttime="20201115 22:01:25.871" endtime="20201115 22:01:25.902"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:25.912" level="INFO">NAME: 00-overhead-3-remove</msg>
<status status="PASS" starttime="20201115 22:01:25.910" endtime="20201115 22:01:25.912"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:25.917" level="INFO">VALUE: [2.4486000000004116e-05, 2.481900000000231e-05, 2.4638000000000437e-05, 2.3818999999994372e-05, 2.4306000000001715e-05, 2.4486000000004116e-05, 2.468099999999862e-05, 2.3972000000004046e-05, 2.431900000000181e-05, 2.4596999999994262e-05, 2.466699999999905e-05, 2.3985999999996677e-05, 2.4320000000001285e-05, 2.3944000000004906e-05, 2.4778000000003075e-05, 2.4318999999994872e-05, 2.415299999999898e-05, 2.418099999999812e-05, 2.430500000000224e-05, 2.430500000000224e-05, 2.4652000000000007e-05, 2.4304999999995303e-05, 2.4472000000004546e-05, 2.3999999999996247e-05, 2.3806000000001215e-05, 2.4499999999996747e-05, 2.416699999999855e-05, 2.431900000000181e-05, 2.4292000000002145e-05, 2.3985999999996677e-05, 2.465299999999948e-05, 2.481900000000231e-05, 2.412499999999984e-05, 2.415300000000592e-05, 2.4318999999994872e-05, 2.4486000000004116e-05, 2.413899999999941e-05, 2.466699999999905e-05, 2.463899999999991e-05, 2.444499999999794e-05, 2.486100000000102e-05, 2.4306000000001715e-05, 2.4207999999997787e-05, 2.4820000000001785e-05, 2.380500000000174e-05, 2.462500000000034e-05, 2.405500000000199e-05, 2.3985999999996677e-05, 2.3944000000004906e-05, 2.415299999999898e-05]</msg>
<status status="PASS" starttime="20201115 22:01:25.914" endtime="20201115 22:01:25.918"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.903" endtime="20201115 22:01:25.920"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:25.927" endtime="20201115 22:01:25.929"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:25.935" endtime="20201115 22:01:25.957"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.930" endtime="20201115 22:01:25.958"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.922" endtime="20201115 22:01:25.960"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.414" endtime="20201115 22:01:25.960"></status>
</kw>
<msg timestamp="20201115 22:01:25.961" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:25.984" endtime="20201115 22:01:26.003"></status>
</kw>
<msg timestamp="20201115 22:01:26.004" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:25.980" endtime="20201115 22:01:26.004"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:26.010" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:26.006" endtime="20201115 22:01:26.011"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:26.012" endtime="20201115 22:01:26.016"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.973" endtime="20201115 22:01:26.017"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.967" endtime="20201115 22:01:26.019"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:26.035" endtime="20201115 22:01:26.382"></status>
</kw>
<msg timestamp="20201115 22:01:26.389" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040531736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040555694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:26.032" endtime="20201115 22:01:26.389"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:26.407" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040531736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040555694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:26.391" endtime="20201115 22:01:26.408"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:26.410" endtime="20201115 22:01:26.413"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.025" endtime="20201115 22:01:26.415"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.020" endtime="20201115 22:01:26.416"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:26.427" level="INFO">${RESULT} = [{'time': 0.040555694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3958000000004476e-05, 'source_diff': 2.3958000000004476e-05}, {'time': 0.040733028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:26.418" endtime="20201115 22:01:26.427"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:26.458" level="INFO">${OVERHEAD} = {'diff': [2.3958000000004476e-05, 2.416699999999855e-05, 2.45970000000012e-05, 2.463899999999991e-05, 2.380500000000174e-05, 2.4665999999999577e-05, 2.4320000000001285e-05, 2.463899999999991e-05, 2.39...</msg>
<status status="PASS" starttime="20201115 22:01:26.429" endtime="20201115 22:01:26.459"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:26.469" level="INFO">NAME: 00-overhead-3-remove</msg>
<status status="PASS" starttime="20201115 22:01:26.467" endtime="20201115 22:01:26.470"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:26.475" level="INFO">VALUE: [2.3958000000004476e-05, 2.416699999999855e-05, 2.45970000000012e-05, 2.463899999999991e-05, 2.380500000000174e-05, 2.4665999999999577e-05, 2.4320000000001285e-05, 2.463899999999991e-05, 2.3985999999996677e-05, 2.4486000000004116e-05, 2.3986000000003616e-05, 2.4471999999997607e-05, 2.418100000000506e-05, 2.465299999999948e-05, 2.430500000000224e-05, 2.3972000000004046e-05, 2.4500000000003685e-05, 2.4472000000004546e-05, 2.465299999999948e-05, 2.434700000000095e-05, 2.440299999999923e-05, 2.463899999999991e-05, 2.4485999999997177e-05, 2.4679999999999147e-05, 2.431900000000181e-05, 2.465299999999948e-05, 2.431900000000181e-05, 2.395900000000395e-05, 2.4320000000001285e-05, 2.433300000000138e-05, 2.384700000000045e-05, 2.4472000000004546e-05, 2.4805999999995276e-05, 2.4805999999995276e-05, 2.436100000000052e-05, 2.395900000000395e-05, 2.4334000000000855e-05, 2.4320000000001285e-05, 2.393100000000481e-05, 2.413899999999941e-05, 2.466699999999905e-05, 2.4082999999994192e-05, 2.4348000000000425e-05, 2.448699999999665e-05, 2.387499999999959e-05, 2.3805999999994276e-05, 2.3806000000001215e-05, 2.4334000000000855e-05, 2.415300000000592e-05, 2.447300000000402e-05]</msg>
<status status="PASS" starttime="20201115 22:01:26.472" endtime="20201115 22:01:26.476"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.460" endtime="20201115 22:01:26.478"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:26.484" endtime="20201115 22:01:26.487"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:26.492" endtime="20201115 22:01:26.514"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.488" endtime="20201115 22:01:26.516"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.480" endtime="20201115 22:01:26.517"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.962" endtime="20201115 22:01:26.518"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.772" endtime="20201115 22:01:26.519"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.770" endtime="20201115 22:01:26.519"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:26.524" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:26.547" endtime="20201115 22:01:26.567"></status>
</kw>
<msg timestamp="20201115 22:01:26.568" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:26.543" endtime="20201115 22:01:26.569"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:26.575" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:26.571" endtime="20201115 22:01:26.575"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:26.577" endtime="20201115 22:01:26.581"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.536" endtime="20201115 22:01:26.582"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.530" endtime="20201115 22:01:26.584"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:26.600" endtime="20201115 22:01:26.951"></status>
</kw>
<msg timestamp="20201115 22:01:26.958" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046084583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046109319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:26.597" endtime="20201115 22:01:26.959"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:26.977" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046084583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046109319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:26.961" endtime="20201115 22:01:26.977"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:26.979" endtime="20201115 22:01:26.983"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.590" endtime="20201115 22:01:26.984"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.585" endtime="20201115 22:01:26.986"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:26.997" level="INFO">${RESULT} = [{'time': 0.046109319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4736000000004366e-05, 'source_diff': 2.4736000000004366e-05}, {'time': 0.046321569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:26.987" endtime="20201115 22:01:26.997"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:27.029" level="INFO">${OVERHEAD} = {'diff': [2.4736000000004366e-05, 2.4221999999997357e-05, 2.4235999999996927e-05, 2.473700000000384e-05, 2.4570000000001535e-05, 2.438899999999966e-05, 2.388899999999916e-05, 2.437500000000009e-05, 2....</msg>
<status status="PASS" starttime="20201115 22:01:26.999" endtime="20201115 22:01:27.029"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:27.040" level="INFO">NAME: 00-overhead-4-remove</msg>
<status status="PASS" starttime="20201115 22:01:27.037" endtime="20201115 22:01:27.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:27.046" level="INFO">VALUE: [2.4736000000004366e-05, 2.4221999999997357e-05, 2.4235999999996927e-05, 2.473700000000384e-05, 2.4570000000001535e-05, 2.438899999999966e-05, 2.388899999999916e-05, 2.437500000000009e-05, 2.438899999999966e-05, 2.4721999999997857e-05, 2.405500000000199e-05, 2.4028000000002325e-05, 2.419500000000463e-05, 2.4763999999996567e-05, 2.418099999999812e-05, 2.4735999999997427e-05, 2.406900000000156e-05, 2.462500000000034e-05, 2.3930000000005336e-05, 2.4040999999995483e-05, 2.4750000000003936e-05, 2.47369999999969e-05, 2.4556000000001965e-05, 2.388899999999916e-05, 2.434700000000095e-05, 2.4499999999996747e-05, 2.456900000000206e-05, 2.4221999999997357e-05, 2.404100000000242e-05, 2.4179999999998647e-05, 2.4334000000000855e-05, 2.4556000000001965e-05, 2.4207999999997787e-05, 2.386100000000002e-05, 2.42770000000031e-05, 2.4084000000000605e-05, 2.4236000000003866e-05, 2.4570000000001535e-05, 2.4221999999997357e-05, 2.438899999999966e-05, 2.440300000000617e-05, 2.4236000000003866e-05, 2.438899999999966e-05, 2.388899999999916e-05, 2.472299999999733e-05, 2.4194000000005156e-05, 2.387499999999959e-05, 2.4680000000006086e-05, 2.4707999999998287e-05, 2.4250000000003435e-05]</msg>
<status status="PASS" starttime="20201115 22:01:27.042" endtime="20201115 22:01:27.047"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.030" endtime="20201115 22:01:27.048"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:27.054" endtime="20201115 22:01:27.057"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:27.063" endtime="20201115 22:01:27.085"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.058" endtime="20201115 22:01:27.086"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.050" endtime="20201115 22:01:27.088"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.525" endtime="20201115 22:01:27.089"></status>
</kw>
<msg timestamp="20201115 22:01:27.089" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:27.112" endtime="20201115 22:01:27.132"></status>
</kw>
<msg timestamp="20201115 22:01:27.134" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:27.108" endtime="20201115 22:01:27.134"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:27.140" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:27.136" endtime="20201115 22:01:27.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:27.142" endtime="20201115 22:01:27.146"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.101" endtime="20201115 22:01:27.147"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.096" endtime="20201115 22:01:27.149"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:27.165" endtime="20201115 22:01:27.512"></status>
</kw>
<msg timestamp="20201115 22:01:27.519" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040841708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040865917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:27.162" endtime="20201115 22:01:27.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:27.537" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040841708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040865917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:27.522" endtime="20201115 22:01:27.538"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:27.540" endtime="20201115 22:01:27.544"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.155" endtime="20201115 22:01:27.545"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.150" endtime="20201115 22:01:27.547"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:27.557" level="INFO">${RESULT} = [{'time': 0.040865917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.42090000000042e-05, 'source_diff': 2.42090000000042e-05}, {'time': 0.04107925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 22:01:27.548" endtime="20201115 22:01:27.558"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:27.589" level="INFO">${OVERHEAD} = {'diff': [2.42090000000042e-05, 2.4055999999994526e-05, 2.422299999999683e-05, 2.440299999999923e-05, 2.4735999999997427e-05, 2.4235999999996927e-05, 2.4540999999995983e-05, 2.4401999999999757e-05, 2....</msg>
<status status="PASS" starttime="20201115 22:01:27.559" endtime="20201115 22:01:27.590"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:27.600" level="INFO">NAME: 00-overhead-4-remove</msg>
<status status="PASS" starttime="20201115 22:01:27.598" endtime="20201115 22:01:27.601"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:27.606" level="INFO">VALUE: [2.42090000000042e-05, 2.4055999999994526e-05, 2.422299999999683e-05, 2.440299999999923e-05, 2.4735999999997427e-05, 2.4235999999996927e-05, 2.4540999999995983e-05, 2.4401999999999757e-05, 2.4222000000004296e-05, 2.438899999999966e-05, 2.4208000000004726e-05, 2.4722000000004796e-05, 2.4556000000001965e-05, 2.388899999999916e-05, 2.3943999999997967e-05, 2.4236000000003866e-05, 2.4236000000003866e-05, 2.472299999999733e-05, 2.4082999999994192e-05, 2.390299999999873e-05, 2.390299999999873e-05, 2.4222000000004296e-05, 2.390300000000567e-05, 2.4042000000001895e-05, 2.3901999999999257e-05, 2.390299999999873e-05, 2.388899999999916e-05, 2.4540999999995983e-05, 2.4568999999995123e-05, 2.3901999999999257e-05, 2.4722000000004796e-05, 2.472299999999733e-05, 2.405500000000199e-05, 2.388899999999916e-05, 2.469500000000513e-05, 2.4542000000002395e-05, 2.406900000000156e-05, 2.4221999999997357e-05, 2.4722000000004796e-05, 2.406900000000156e-05, 2.390299999999873e-05, 2.386100000000002e-05, 2.4763999999996567e-05, 2.4221999999997357e-05, 2.388899999999916e-05, 2.437500000000009e-05, 2.4584000000001105e-05, 2.4555999999995026e-05, 2.4556000000001965e-05, 2.4222000000004296e-05]</msg>
<status status="PASS" starttime="20201115 22:01:27.602" endtime="20201115 22:01:27.606"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.591" endtime="20201115 22:01:27.608"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:27.614" endtime="20201115 22:01:27.617"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:27.622" endtime="20201115 22:01:27.644"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.618" endtime="20201115 22:01:27.646"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.610" endtime="20201115 22:01:27.648"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.090" endtime="20201115 22:01:27.648"></status>
</kw>
<msg timestamp="20201115 22:01:27.649" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:27.671" endtime="20201115 22:01:27.692"></status>
</kw>
<msg timestamp="20201115 22:01:27.693" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:27.668" endtime="20201115 22:01:27.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:27.699" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:27.695" endtime="20201115 22:01:27.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:27.702" endtime="20201115 22:01:27.706"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.661" endtime="20201115 22:01:27.707"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.655" endtime="20201115 22:01:27.709"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:27.726" endtime="20201115 22:01:28.062"></status>
</kw>
<msg timestamp="20201115 22:01:28.069" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040897556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040922097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:27.722" endtime="20201115 22:01:28.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:28.087" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040897556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040922097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:28.071" endtime="20201115 22:01:28.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:28.089" endtime="20201115 22:01:28.093"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.715" endtime="20201115 22:01:28.095"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.710" endtime="20201115 22:01:28.096"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:28.108" level="INFO">${RESULT} = [{'time': 0.040922097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4540999999995983e-05, 'source_diff': 2.4540999999995983e-05}, {'time': 0.041133333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:28.098" endtime="20201115 22:01:28.108"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:28.140" level="INFO">${OVERHEAD} = {'diff': [2.4540999999995983e-05, 2.404100000000242e-05, 2.4542000000002395e-05, 2.388899999999916e-05, 2.4750000000003936e-05, 2.4401999999999757e-05, 2.387499999999959e-05, 2.3985999999996677e-05, 2...</msg>
<status status="PASS" starttime="20201115 22:01:28.110" endtime="20201115 22:01:28.141"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:28.151" level="INFO">NAME: 00-overhead-4-remove</msg>
<status status="PASS" starttime="20201115 22:01:28.149" endtime="20201115 22:01:28.152"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:28.157" level="INFO">VALUE: [2.4540999999995983e-05, 2.404100000000242e-05, 2.4542000000002395e-05, 2.388899999999916e-05, 2.4750000000003936e-05, 2.4401999999999757e-05, 2.387499999999959e-05, 2.3985999999996677e-05, 2.4721999999997857e-05, 2.388899999999916e-05, 2.4056000000001465e-05, 2.4013999999995816e-05, 2.4069999999994096e-05, 2.4749999999996997e-05, 2.472299999999733e-05, 2.454100000000292e-05, 2.4721999999997857e-05, 2.38890000000061e-05, 2.4750000000003936e-05, 2.4554999999995553e-05, 2.456900000000206e-05, 2.4068999999994622e-05, 2.4514000000003255e-05, 2.4721999999997857e-05, 2.4721999999997857e-05, 2.4236000000003866e-05, 2.387499999999959e-05, 2.4207999999997787e-05, 2.4569999999994596e-05, 2.4235999999996927e-05, 2.408300000000113e-05, 2.473700000000384e-05, 2.408300000000113e-05, 2.4054999999995053e-05, 2.390299999999873e-05, 2.4055999999994526e-05, 2.455500000000249e-05, 2.4693999999998717e-05, 2.455500000000249e-05, 2.466699999999905e-05, 2.412499999999984e-05, 2.4721999999997857e-05, 2.469499999999819e-05, 2.390299999999873e-05, 2.388899999999916e-05, 2.461100000000077e-05, 2.4722000000004796e-05, 2.4208000000004726e-05, 2.4541999999995456e-05, 2.4236000000003866e-05]</msg>
<status status="PASS" starttime="20201115 22:01:28.153" endtime="20201115 22:01:28.157"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.142" endtime="20201115 22:01:28.159"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:28.165" endtime="20201115 22:01:28.168"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:28.173" endtime="20201115 22:01:28.195"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.169" endtime="20201115 22:01:28.197"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.161" endtime="20201115 22:01:28.198"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.650" endtime="20201115 22:01:28.199"></status>
</kw>
<msg timestamp="20201115 22:01:28.199" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:28.222" endtime="20201115 22:01:28.242"></status>
</kw>
<msg timestamp="20201115 22:01:28.244" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:28.219" endtime="20201115 22:01:28.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:28.250" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:28.246" endtime="20201115 22:01:28.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:28.252" endtime="20201115 22:01:28.256"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.212" endtime="20201115 22:01:28.257"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.206" endtime="20201115 22:01:28.259"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:28.275" endtime="20201115 22:01:28.610"></status>
</kw>
<msg timestamp="20201115 22:01:28.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040714486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040738694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:28.272" endtime="20201115 22:01:28.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:28.635" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040714486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040738694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:28.619" endtime="20201115 22:01:28.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:28.638" endtime="20201115 22:01:28.642"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.265" endtime="20201115 22:01:28.644"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.260" endtime="20201115 22:01:28.645"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:28.656" level="INFO">${RESULT} = [{'time': 0.040738694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4207999999997787e-05, 'source_diff': 2.4207999999997787e-05}, {'time': 0.040952903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:28.647" endtime="20201115 22:01:28.656"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:28.687" level="INFO">${OVERHEAD} = {'diff': [2.4207999999997787e-05, 2.438899999999966e-05, 2.386100000000002e-05, 2.4721999999997857e-05, 2.387499999999959e-05, 2.38890000000061e-05, 2.4721999999997857e-05, 2.4679999999999147e-05, 2.3...</msg>
<status status="PASS" starttime="20201115 22:01:28.658" endtime="20201115 22:01:28.687"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:28.699" level="INFO">NAME: 00-overhead-4-remove</msg>
<status status="PASS" starttime="20201115 22:01:28.695" endtime="20201115 22:01:28.699"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:28.704" level="INFO">VALUE: [2.4207999999997787e-05, 2.438899999999966e-05, 2.386100000000002e-05, 2.4721999999997857e-05, 2.387499999999959e-05, 2.38890000000061e-05, 2.4721999999997857e-05, 2.4679999999999147e-05, 2.390299999999873e-05, 2.4068999999994622e-05, 2.44169999999988e-05, 2.4068999999994622e-05, 2.4235999999996927e-05, 2.4735999999997427e-05, 2.4612000000000245e-05, 2.4555999999995026e-05, 2.406900000000156e-05, 2.4777999999996136e-05, 2.4722000000004796e-05, 2.455500000000249e-05, 2.4207999999997787e-05, 2.4542000000002395e-05, 2.4028000000002325e-05, 2.387499999999959e-05, 2.4555999999995026e-05, 2.4042000000001895e-05, 2.4735999999997427e-05, 2.4708000000005226e-05, 2.388899999999916e-05, 2.437500000000009e-05, 2.406900000000156e-05, 2.390299999999873e-05, 2.405500000000199e-05, 2.4041999999994956e-05, 2.4736000000004366e-05, 2.4084000000000605e-05, 2.4556000000001965e-05, 2.4401999999999757e-05, 2.388899999999916e-05, 2.387499999999959e-05, 2.4736000000004366e-05, 2.4471999999997607e-05, 2.39169999999983e-05, 2.4235999999996927e-05, 2.4736000000004366e-05, 2.4528000000002825e-05, 2.388899999999916e-05, 2.4735999999997427e-05, 2.438899999999966e-05, 2.4236000000003866e-05]</msg>
<status status="PASS" starttime="20201115 22:01:28.701" endtime="20201115 22:01:28.705"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.688" endtime="20201115 22:01:28.707"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:28.713" endtime="20201115 22:01:28.716"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:28.722" endtime="20201115 22:01:28.744"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.717" endtime="20201115 22:01:28.746"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.708" endtime="20201115 22:01:28.747"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.200" endtime="20201115 22:01:28.748"></status>
</kw>
<msg timestamp="20201115 22:01:28.748" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:28.771" endtime="20201115 22:01:28.791"></status>
</kw>
<msg timestamp="20201115 22:01:28.792" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:28.768" endtime="20201115 22:01:28.793"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:28.798" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:28.795" endtime="20201115 22:01:28.799"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:28.801" endtime="20201115 22:01:28.804"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.760" endtime="20201115 22:01:28.806"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.755" endtime="20201115 22:01:28.807"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:28.824" endtime="20201115 22:01:29.160"></status>
</kw>
<msg timestamp="20201115 22:01:29.168" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040836056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040860167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:28.820" endtime="20201115 22:01:29.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:29.186" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040836056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040860167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:29.170" endtime="20201115 22:01:29.187"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:29.189" endtime="20201115 22:01:29.192"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.813" endtime="20201115 22:01:29.194"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.809" endtime="20201115 22:01:29.196"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:29.206" level="INFO">${RESULT} = [{'time': 0.040860167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.411100000000027e-05, 'source_diff': 2.411100000000027e-05}, {'time': 0.041075292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:29.197" endtime="20201115 22:01:29.207"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:29.237" level="INFO">${OVERHEAD} = {'diff': [2.411100000000027e-05, 2.388899999999916e-05, 2.4735999999997427e-05, 2.4499999999996747e-05, 2.4221999999997357e-05, 2.406900000000156e-05, 2.4221999999997357e-05, 2.406900000000156e-05, 2....</msg>
<status status="PASS" starttime="20201115 22:01:29.208" endtime="20201115 22:01:29.237"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:29.248" level="INFO">NAME: 00-overhead-4-remove</msg>
<status status="PASS" starttime="20201115 22:01:29.245" endtime="20201115 22:01:29.248"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:29.253" level="INFO">VALUE: [2.411100000000027e-05, 2.388899999999916e-05, 2.4735999999997427e-05, 2.4499999999996747e-05, 2.4221999999997357e-05, 2.406900000000156e-05, 2.4221999999997357e-05, 2.406900000000156e-05, 2.4221999999997357e-05, 2.384700000000045e-05, 2.4070000000001035e-05, 2.455500000000249e-05, 2.436100000000052e-05, 2.423700000000334e-05, 2.438899999999966e-05, 2.422299999999683e-05, 2.419499999999769e-05, 2.4040999999995483e-05, 2.405500000000199e-05, 2.4208000000004726e-05, 2.455500000000249e-05, 2.4556000000001965e-05, 2.4388000000000187e-05, 2.4721999999997857e-05, 2.456900000000206e-05, 2.4721999999997857e-05, 2.4236000000003866e-05, 2.4514000000003255e-05, 2.472300000000427e-05, 2.387499999999959e-05, 2.4750000000003936e-05, 2.4556000000001965e-05, 2.4555999999995026e-05, 2.4208000000004726e-05, 2.4207999999997787e-05, 2.4235999999996927e-05, 2.436100000000052e-05, 2.461100000000077e-05, 2.388899999999916e-05, 2.4236000000003866e-05, 2.4541999999995456e-05, 2.415299999999898e-05, 2.423700000000334e-05, 2.4222000000004296e-05, 2.4235999999996927e-05, 2.388899999999916e-05, 2.4193999999998217e-05, 2.4416000000006266e-05, 2.4429999999998897e-05, 2.405500000000199e-05]</msg>
<status status="PASS" starttime="20201115 22:01:29.250" endtime="20201115 22:01:29.255"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.239" endtime="20201115 22:01:29.257"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:29.263" endtime="20201115 22:01:29.266"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:29.271" endtime="20201115 22:01:29.293"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.267" endtime="20201115 22:01:29.295"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.259" endtime="20201115 22:01:29.296"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.749" endtime="20201115 22:01:29.297"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.521" endtime="20201115 22:01:29.297"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.520" endtime="20201115 22:01:29.298"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:29.303" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:29.326" endtime="20201115 22:01:29.347"></status>
</kw>
<msg timestamp="20201115 22:01:29.348" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:29.322" endtime="20201115 22:01:29.349"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:29.355" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:29.351" endtime="20201115 22:01:29.355"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:29.357" endtime="20201115 22:01:29.361"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.315" endtime="20201115 22:01:29.363"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.309" endtime="20201115 22:01:29.364"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:29.381" endtime="20201115 22:01:29.714"></status>
</kw>
<msg timestamp="20201115 22:01:29.721" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04617475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046199375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:01:29.377" endtime="20201115 22:01:29.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:29.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04617475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046199375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:01:29.723" endtime="20201115 22:01:29.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:29.741" endtime="20201115 22:01:29.745"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.370" endtime="20201115 22:01:29.747"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.366" endtime="20201115 22:01:29.749"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:29.760" level="INFO">${RESULT} = [{'time': 0.046199375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.462500000000034e-05, 'source_diff': 2.462500000000034e-05}, {'time': 0.046450653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:29.750" endtime="20201115 22:01:29.760"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:29.790" level="INFO">${OVERHEAD} = {'diff': [2.462500000000034e-05, 2.40970000000007e-05, 2.4820000000001785e-05, 2.3806000000001215e-05, 2.465299999999948e-05, 2.3985999999996677e-05, 2.3972000000004046e-05, 2.462500000000034e-05, 2.4...</msg>
<status status="PASS" starttime="20201115 22:01:29.762" endtime="20201115 22:01:29.791"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:29.801" level="INFO">NAME: 00-overhead-5-remove</msg>
<status status="PASS" starttime="20201115 22:01:29.799" endtime="20201115 22:01:29.802"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:29.808" level="INFO">VALUE: [2.462500000000034e-05, 2.40970000000007e-05, 2.4820000000001785e-05, 2.3806000000001215e-05, 2.465299999999948e-05, 2.3985999999996677e-05, 2.3972000000004046e-05, 2.462500000000034e-05, 2.412499999999984e-05, 2.461100000000077e-05, 2.463900000000685e-05, 2.3778000000002075e-05, 2.4320000000001285e-05, 2.4471999999997607e-05, 2.465299999999948e-05, 2.483300000000188e-05, 2.4277999999995636e-05, 2.415299999999898e-05, 2.465299999999948e-05, 2.413899999999941e-05, 2.4818999999995373e-05, 2.40970000000007e-05, 2.4305999999994776e-05, 2.4292000000002145e-05, 2.3929999999998397e-05, 2.46379999999935e-05, 2.437500000000009e-05, 2.465299999999948e-05, 2.3972000000004046e-05, 2.4278000000002575e-05, 2.480500000000274e-05, 2.4013000000003282e-05, 2.462500000000034e-05, 2.3957999999997537e-05, 2.465299999999948e-05, 2.416699999999855e-05, 2.4805999999995276e-05, 2.3971999999997107e-05, 2.447299999999708e-05, 2.379100000000217e-05, 2.3806000000001215e-05, 2.40970000000007e-05, 2.4471999999997607e-05, 2.4652000000000007e-05, 2.430500000000224e-05, 2.433300000000138e-05, 2.465299999999948e-05, 2.4320000000001285e-05, 2.4305999999994776e-05, 2.463899999999991e-05]</msg>
<status status="PASS" starttime="20201115 22:01:29.804" endtime="20201115 22:01:29.809"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.792" endtime="20201115 22:01:29.810"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:29.817" endtime="20201115 22:01:29.819"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:29.825" endtime="20201115 22:01:29.847"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.821" endtime="20201115 22:01:29.848"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.812" endtime="20201115 22:01:29.850"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.304" endtime="20201115 22:01:29.850"></status>
</kw>
<msg timestamp="20201115 22:01:29.851" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:29.874" endtime="20201115 22:01:29.896"></status>
</kw>
<msg timestamp="20201115 22:01:29.897" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:29.870" endtime="20201115 22:01:29.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:29.904" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:29.900" endtime="20201115 22:01:29.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:29.906" endtime="20201115 22:01:29.910"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.863" endtime="20201115 22:01:29.911"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.858" endtime="20201115 22:01:29.913"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:29.929" endtime="20201115 22:01:30.264"></status>
</kw>
<msg timestamp="20201115 22:01:30.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040728153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040752306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:29.926" endtime="20201115 22:01:30.271"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:30.289" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040728153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040752306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:30.273" endtime="20201115 22:01:30.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:30.291" endtime="20201115 22:01:30.295"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.919" endtime="20201115 22:01:30.297"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.914" endtime="20201115 22:01:30.298"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:30.309" level="INFO">${RESULT} = [{'time': 0.040752306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.415299999999898e-05, 'source_diff': 2.415299999999898e-05}, {'time': 0.041002528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:30.300" endtime="20201115 22:01:30.309"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:30.339" level="INFO">${OVERHEAD} = {'diff': [2.415299999999898e-05, 2.3972000000004046e-05, 2.3943999999997967e-05, 2.3971999999997107e-05, 2.444499999999794e-05, 2.465299999999948e-05, 2.412499999999984e-05, 2.393099999999787e-05, 2.4...</msg>
<status status="PASS" starttime="20201115 22:01:30.311" endtime="20201115 22:01:30.340"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:30.350" level="INFO">NAME: 00-overhead-5-remove</msg>
<status status="PASS" starttime="20201115 22:01:30.348" endtime="20201115 22:01:30.351"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:30.355" level="INFO">VALUE: [2.415299999999898e-05, 2.3972000000004046e-05, 2.3943999999997967e-05, 2.3971999999997107e-05, 2.444499999999794e-05, 2.465299999999948e-05, 2.412499999999984e-05, 2.393099999999787e-05, 2.463899999999991e-05, 2.413899999999941e-05, 2.4306000000001715e-05, 2.3806000000001215e-05, 2.4457999999998037e-05, 2.4249999999996497e-05, 2.381900000000131e-05, 2.463899999999991e-05, 2.3972000000004046e-05, 2.3971999999997107e-05, 2.4471999999997607e-05, 2.448700000000359e-05, 2.469499999999819e-05, 2.387499999999959e-05, 2.4320000000001285e-05, 2.4306000000001715e-05, 2.444499999999794e-05, 2.4472000000004546e-05, 2.4318999999994872e-05, 2.4305999999994776e-05, 2.413899999999941e-05, 2.4472000000004546e-05, 2.4444000000005406e-05, 2.413899999999941e-05, 2.3986000000003616e-05, 2.4292000000002145e-05, 2.397300000000352e-05, 2.463899999999991e-05, 2.415299999999898e-05, 2.4137999999999937e-05, 2.4165999999999077e-05, 2.463899999999991e-05, 2.463899999999991e-05, 2.3818999999994372e-05, 2.3820000000000785e-05, 2.4792000000002645e-05, 2.4804999999995803e-05, 2.4792000000002645e-05, 2.4776999999996663e-05, 2.463899999999991e-05, 2.3972000000004046e-05, 2.4278000000002575e-05]</msg>
<status status="PASS" starttime="20201115 22:01:30.352" endtime="20201115 22:01:30.356"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.341" endtime="20201115 22:01:30.358"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:30.364" endtime="20201115 22:01:30.370"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:30.376" endtime="20201115 22:01:30.398"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.372" endtime="20201115 22:01:30.400"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.360" endtime="20201115 22:01:30.401"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.852" endtime="20201115 22:01:30.402"></status>
</kw>
<msg timestamp="20201115 22:01:30.402" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:30.426" endtime="20201115 22:01:30.448"></status>
</kw>
<msg timestamp="20201115 22:01:30.449" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:30.423" endtime="20201115 22:01:30.449"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:30.455" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:30.451" endtime="20201115 22:01:30.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:30.457" endtime="20201115 22:01:30.461"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.415" endtime="20201115 22:01:30.463"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.409" endtime="20201115 22:01:30.464"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:30.480" endtime="20201115 22:01:30.816"></status>
</kw>
<msg timestamp="20201115 22:01:30.823" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041555972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041580792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:30.477" endtime="20201115 22:01:30.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:30.842" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041555972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041580792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:30.826" endtime="20201115 22:01:30.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:30.844" endtime="20201115 22:01:30.848"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.470" endtime="20201115 22:01:30.849"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.466" endtime="20201115 22:01:30.851"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:30.862" level="INFO">${RESULT} = [{'time': 0.041580792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4820000000001785e-05, 'source_diff': 2.4820000000001785e-05}, {'time': 0.041826958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:30.852" endtime="20201115 22:01:30.862"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:30.892" level="INFO">${OVERHEAD} = {'diff': [2.4820000000001785e-05, 2.4290999999995733e-05, 2.4179999999998647e-05, 2.4320000000001285e-05, 2.4792000000002645e-05, 2.480500000000274e-05, 2.4320000000001285e-05, 2.4151999999999507e-05,...</msg>
<status status="PASS" starttime="20201115 22:01:30.864" endtime="20201115 22:01:30.893"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:30.903" level="INFO">NAME: 00-overhead-5-remove</msg>
<status status="PASS" starttime="20201115 22:01:30.901" endtime="20201115 22:01:30.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:30.908" level="INFO">VALUE: [2.4820000000001785e-05, 2.4290999999995733e-05, 2.4179999999998647e-05, 2.4320000000001285e-05, 2.4792000000002645e-05, 2.480500000000274e-05, 2.4320000000001285e-05, 2.4151999999999507e-05, 2.4486000000004116e-05, 2.4306000000001715e-05, 2.395900000000395e-05, 2.4305999999994776e-05, 2.433300000000138e-05, 2.412499999999984e-05, 2.416700000000549e-05, 2.4306000000001715e-05, 2.4457999999998037e-05, 2.380500000000174e-05, 2.484700000000145e-05, 2.383300000000088e-05, 2.4834000000001355e-05, 2.4805999999995276e-05, 2.4306000000001715e-05, 2.431900000000181e-05, 2.3958000000004476e-05, 2.463899999999991e-05, 2.395900000000395e-05, 2.4137999999999937e-05, 2.4485999999997177e-05, 2.3749999999995997e-05, 2.4457999999998037e-05, 2.444500000000488e-05, 2.412499999999984e-05, 2.4820000000001785e-05, 2.429100000000267e-05, 2.4429999999998897e-05, 2.4749999999996997e-05, 2.4278000000002575e-05, 2.3986000000003616e-05, 2.3972000000004046e-05, 2.3778000000002075e-05, 2.3971999999997107e-05, 2.397300000000352e-05, 2.3806000000001215e-05, 2.408300000000113e-05, 2.4472000000004546e-05, 2.3985999999996677e-05, 2.3957999999997537e-05, 2.430500000000224e-05, 2.3999999999996247e-05]</msg>
<status status="PASS" starttime="20201115 22:01:30.905" endtime="20201115 22:01:30.909"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.894" endtime="20201115 22:01:30.911"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:30.917" endtime="20201115 22:01:30.920"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:30.926" endtime="20201115 22:01:30.948"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.921" endtime="20201115 22:01:30.950"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.913" endtime="20201115 22:01:30.951"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.403" endtime="20201115 22:01:30.952"></status>
</kw>
<msg timestamp="20201115 22:01:30.952" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:30.976" endtime="20201115 22:01:30.998"></status>
</kw>
<msg timestamp="20201115 22:01:30.999" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:30.973" endtime="20201115 22:01:31.000"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:31.006" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:31.002" endtime="20201115 22:01:31.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:31.008" endtime="20201115 22:01:31.012"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.966" endtime="20201115 22:01:31.014"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.959" endtime="20201115 22:01:31.015"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:31.032" endtime="20201115 22:01:31.367"></status>
</kw>
<msg timestamp="20201115 22:01:31.374" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042169486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042193458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:31.029" endtime="20201115 22:01:31.375"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:31.393" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042169486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042193458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:31.377" endtime="20201115 22:01:31.393"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:31.395" endtime="20201115 22:01:31.399"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.022" endtime="20201115 22:01:31.400"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.017" endtime="20201115 22:01:31.402"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:31.413" level="INFO">${RESULT} = [{'time': 0.042193458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3972000000004046e-05, 'source_diff': 2.3972000000004046e-05}, {'time': 0.042440667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:31.404" endtime="20201115 22:01:31.413"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:31.443" level="INFO">${OVERHEAD} = {'diff': [2.3972000000004046e-05, 2.3820000000000785e-05, 2.4471999999997607e-05, 2.398700000000309e-05, 2.412499999999984e-05, 2.413899999999941e-05, 2.463899999999991e-05, 2.4471999999997607e-05, 2....</msg>
<status status="PASS" starttime="20201115 22:01:31.415" endtime="20201115 22:01:31.444"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:31.454" level="INFO">NAME: 00-overhead-5-remove</msg>
<status status="PASS" starttime="20201115 22:01:31.452" endtime="20201115 22:01:31.455"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:31.460" level="INFO">VALUE: [2.3972000000004046e-05, 2.3820000000000785e-05, 2.4471999999997607e-05, 2.398700000000309e-05, 2.412499999999984e-05, 2.413899999999941e-05, 2.463899999999991e-05, 2.4471999999997607e-05, 2.465299999999948e-05, 2.4263999999996066e-05, 2.433300000000138e-05, 2.4137999999999937e-05, 2.4305999999994776e-05, 2.3972000000004046e-05, 2.4457999999998037e-05, 2.4556000000001965e-05, 2.415299999999898e-05, 2.4319999999994346e-05, 2.380500000000174e-05, 2.3958000000004476e-05, 2.4485999999997177e-05, 2.4320000000001285e-05, 2.4665999999999577e-05, 2.462500000000034e-05, 2.4819999999994846e-05, 2.463899999999991e-05, 2.4319999999994346e-05, 2.3972000000004046e-05, 2.381900000000131e-05, 2.413899999999941e-05, 2.411100000000027e-05, 2.463899999999991e-05, 2.4472000000004546e-05, 2.3847999999999925e-05, 2.411100000000027e-05, 2.416699999999855e-05, 2.413899999999941e-05, 2.4348000000000425e-05, 2.431900000000181e-05, 2.466699999999905e-05, 2.4292000000002145e-05, 2.4194000000005156e-05, 2.431900000000181e-05, 2.4320000000001285e-05, 2.4306000000001715e-05, 2.4820000000001785e-05, 2.4818999999995373e-05, 2.4292000000002145e-05, 2.4457999999998037e-05, 2.3818999999994372e-05]</msg>
<status status="PASS" starttime="20201115 22:01:31.456" endtime="20201115 22:01:31.461"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.445" endtime="20201115 22:01:31.463"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:31.469" endtime="20201115 22:01:31.472"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:31.477" endtime="20201115 22:01:31.499"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.473" endtime="20201115 22:01:31.501"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.465" endtime="20201115 22:01:31.502"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.953" endtime="20201115 22:01:31.503"></status>
</kw>
<msg timestamp="20201115 22:01:31.503" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:31.526" endtime="20201115 22:01:31.548"></status>
</kw>
<msg timestamp="20201115 22:01:31.549" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:31.523" endtime="20201115 22:01:31.550"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:31.555" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:31.551" endtime="20201115 22:01:31.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:31.558" endtime="20201115 22:01:31.563"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.516" endtime="20201115 22:01:31.565"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.510" endtime="20201115 22:01:31.566"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:31.582" endtime="20201115 22:01:31.927"></status>
</kw>
<msg timestamp="20201115 22:01:31.934" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040664292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040688278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:31.579" endtime="20201115 22:01:31.934"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:31.952" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040664292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040688278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:31.936" endtime="20201115 22:01:31.953"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:31.955" endtime="20201115 22:01:31.958"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.572" endtime="20201115 22:01:31.960"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.567" endtime="20201115 22:01:31.961"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:31.973" level="INFO">${RESULT} = [{'time': 0.040688278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3986000000003616e-05, 'source_diff': 2.3986000000003616e-05}, {'time': 0.040938458, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:31.963" endtime="20201115 22:01:31.973"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:32.004" level="INFO">${OVERHEAD} = {'diff': [2.3986000000003616e-05, 2.3971999999997107e-05, 2.395900000000395e-05, 2.430500000000224e-05, 2.4292000000002145e-05, 2.4151999999999507e-05, 2.4486000000004116e-05, 2.4304999999995303e-05, ...</msg>
<status status="PASS" starttime="20201115 22:01:31.975" endtime="20201115 22:01:32.004"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:32.015" level="INFO">NAME: 00-overhead-5-remove</msg>
<status status="PASS" starttime="20201115 22:01:32.012" endtime="20201115 22:01:32.015"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:32.020" level="INFO">VALUE: [2.3986000000003616e-05, 2.3971999999997107e-05, 2.395900000000395e-05, 2.430500000000224e-05, 2.4292000000002145e-05, 2.4151999999999507e-05, 2.4486000000004116e-05, 2.4304999999995303e-05, 2.4485999999997177e-05, 2.465299999999948e-05, 2.465300000000642e-05, 2.463899999999991e-05, 2.4485999999997177e-05, 2.4485999999997177e-05, 2.443099999999837e-05, 2.4638000000000437e-05, 2.4305999999994776e-05, 2.4306000000001715e-05, 2.448699999999665e-05, 2.444499999999794e-05, 2.465299999999948e-05, 2.463899999999991e-05, 2.3971999999997107e-05, 2.395900000000395e-05, 2.448700000000359e-05, 2.4485999999997177e-05, 2.45970000000012e-05, 2.463899999999991e-05, 2.415299999999898e-05, 2.4514000000003255e-05, 2.393099999999787e-05, 2.412499999999984e-05, 2.4166000000006016e-05, 2.4319999999994346e-05, 2.4820000000001785e-05, 2.3971999999997107e-05, 2.4471999999997607e-05, 2.4320000000001285e-05, 2.463899999999991e-05, 2.3820000000000785e-05, 2.481900000000231e-05, 2.386100000000002e-05, 2.413900000000635e-05, 2.413899999999941e-05, 2.4318999999994872e-05, 2.4334000000000855e-05, 2.411100000000027e-05, 2.481900000000231e-05, 2.486100000000102e-05, 2.4263999999996066e-05]</msg>
<status status="PASS" starttime="20201115 22:01:32.017" endtime="20201115 22:01:32.021"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.006" endtime="20201115 22:01:32.023"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:32.029" endtime="20201115 22:01:32.032"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:32.037" endtime="20201115 22:01:32.059"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.033" endtime="20201115 22:01:32.061"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.025" endtime="20201115 22:01:32.062"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.504" endtime="20201115 22:01:32.063"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.300" endtime="20201115 22:01:32.064"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.299" endtime="20201115 22:01:32.064"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:32.069" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:32.091" endtime="20201115 22:01:32.115"></status>
</kw>
<msg timestamp="20201115 22:01:32.116" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:32.088" endtime="20201115 22:01:32.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:32.122" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:32.118" endtime="20201115 22:01:32.123"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:32.125" endtime="20201115 22:01:32.128"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.081" endtime="20201115 22:01:32.130"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.075" endtime="20201115 22:01:32.131"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:32.149" endtime="20201115 22:01:32.484"></status>
</kw>
<msg timestamp="20201115 22:01:32.491" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045785958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045810347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:32.146" endtime="20201115 22:01:32.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:32.509" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045785958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045810347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:32.493" endtime="20201115 22:01:32.510"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:32.511" endtime="20201115 22:01:32.515"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.137" endtime="20201115 22:01:32.517"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.133" endtime="20201115 22:01:32.518"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:32.529" level="INFO">${RESULT} = [{'time': 0.045810347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.438899999999966e-05, 'source_diff': 2.438899999999966e-05}, {'time': 0.046093833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:32.520" endtime="20201115 22:01:32.529"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:32.559" level="INFO">${OVERHEAD} = {'diff': [2.438899999999966e-05, 2.4221999999997357e-05, 2.4056000000001465e-05, 2.387499999999959e-05, 2.390299999999873e-05, 2.4070000000001035e-05, 2.4056000000001465e-05, 2.443099999999837e-05, 2....</msg>
<status status="PASS" starttime="20201115 22:01:32.531" endtime="20201115 22:01:32.559"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:32.570" level="INFO">NAME: 00-overhead-6-remove</msg>
<status status="PASS" starttime="20201115 22:01:32.567" endtime="20201115 22:01:32.570"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:32.576" level="INFO">VALUE: [2.438899999999966e-05, 2.4221999999997357e-05, 2.4056000000001465e-05, 2.387499999999959e-05, 2.390299999999873e-05, 2.4070000000001035e-05, 2.4056000000001465e-05, 2.443099999999837e-05, 2.4527999999995886e-05, 2.4221999999997357e-05, 2.438899999999966e-05, 2.440299999999923e-05, 2.4263000000003532e-05, 2.4222000000004296e-05, 2.4221999999997357e-05, 2.4028000000002325e-05, 2.454100000000292e-05, 2.437500000000009e-05, 2.437500000000009e-05, 2.4401999999999757e-05, 2.390299999999873e-05, 2.4264000000003005e-05, 2.4541999999995456e-05, 2.4221999999997357e-05, 2.4250000000003435e-05, 2.418099999999812e-05, 2.4041999999994956e-05, 2.4084000000000605e-05, 2.420899999999726e-05, 2.4749999999996997e-05, 2.455500000000249e-05, 2.43890000000066e-05, 2.4236000000003866e-05, 2.4235999999996927e-05, 2.388899999999916e-05, 2.390299999999873e-05, 2.470899999999776e-05, 2.4235999999996927e-05, 2.4236000000003866e-05, 2.4584000000001105e-05, 2.437500000000009e-05, 2.4777999999996136e-05, 2.387499999999959e-05, 2.4528000000002825e-05, 2.406900000000156e-05, 2.4722000000004796e-05, 2.4042000000001895e-05, 2.4056000000001465e-05, 2.4250000000003435e-05, 2.4221999999997357e-05]</msg>
<status status="PASS" starttime="20201115 22:01:32.572" endtime="20201115 22:01:32.577"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.561" endtime="20201115 22:01:32.578"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:32.585" endtime="20201115 22:01:32.587"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:32.593" endtime="20201115 22:01:32.614"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.588" endtime="20201115 22:01:32.616"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.580" endtime="20201115 22:01:32.618"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.070" endtime="20201115 22:01:32.618"></status>
</kw>
<msg timestamp="20201115 22:01:32.619" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:32.641" endtime="20201115 22:01:32.665"></status>
</kw>
<msg timestamp="20201115 22:01:32.666" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:32.638" endtime="20201115 22:01:32.667"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:32.672" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:32.668" endtime="20201115 22:01:32.673"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:32.675" endtime="20201115 22:01:32.678"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.631" endtime="20201115 22:01:32.680"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.625" endtime="20201115 22:01:32.681"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:32.698" endtime="20201115 22:01:33.041"></status>
</kw>
<msg timestamp="20201115 22:01:33.048" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040457083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040481667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:32.694" endtime="20201115 22:01:33.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:33.066" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040457083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040481667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:33.050" endtime="20201115 22:01:33.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:33.068" endtime="20201115 22:01:33.072"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.687" endtime="20201115 22:01:33.074"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.683" endtime="20201115 22:01:33.075"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:33.086" level="INFO">${RESULT} = [{'time': 0.040481667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4584000000001105e-05, 'source_diff': 2.4584000000001105e-05}, {'time': 0.040764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:01:33.077" endtime="20201115 22:01:33.086"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:33.116" level="INFO">${OVERHEAD} = {'diff': [2.4584000000001105e-05, 2.4193999999998217e-05, 2.4568999999995123e-05, 2.4721999999997857e-05, 2.4263999999996066e-05, 2.388899999999916e-05, 2.388899999999916e-05, 2.4208000000004726e-05, ...</msg>
<status status="PASS" starttime="20201115 22:01:33.088" endtime="20201115 22:01:33.117"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:33.127" level="INFO">NAME: 00-overhead-6-remove</msg>
<status status="PASS" starttime="20201115 22:01:33.125" endtime="20201115 22:01:33.128"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:33.132" level="INFO">VALUE: [2.4584000000001105e-05, 2.4193999999998217e-05, 2.4568999999995123e-05, 2.4721999999997857e-05, 2.4263999999996066e-05, 2.388899999999916e-05, 2.388899999999916e-05, 2.4208000000004726e-05, 2.4179999999998647e-05, 2.436100000000052e-05, 2.4556000000001965e-05, 2.406900000000156e-05, 2.405500000000199e-05, 2.3901999999999257e-05, 2.4416000000006266e-05, 2.455500000000249e-05, 2.4542000000002395e-05, 2.388899999999916e-05, 2.4222000000004296e-05, 2.4098000000000175e-05, 2.4570000000001535e-05, 2.4235999999996927e-05, 2.405500000000199e-05, 2.390299999999873e-05, 2.4055999999994526e-05, 2.388899999999916e-05, 2.39169999999983e-05, 2.4556000000001965e-05, 2.3860999999993082e-05, 2.405500000000199e-05, 2.405500000000199e-05, 2.4236000000003866e-05, 2.405500000000199e-05, 2.461100000000077e-05, 2.412499999999984e-05, 2.4721999999997857e-05, 2.4722000000004796e-05, 2.4735999999997427e-05, 2.472300000000427e-05, 2.445899999999751e-05, 2.390299999999873e-05, 2.437500000000009e-05, 2.4736000000004366e-05, 2.406900000000156e-05, 2.408300000000113e-05, 2.4707999999998287e-05, 2.438899999999966e-05, 2.4070000000001035e-05, 2.3986000000003616e-05, 2.4070000000001035e-05]</msg>
<status status="PASS" starttime="20201115 22:01:33.129" endtime="20201115 22:01:33.133"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.118" endtime="20201115 22:01:33.135"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:33.141" endtime="20201115 22:01:33.144"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:33.149" endtime="20201115 22:01:33.171"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.145" endtime="20201115 22:01:33.172"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.137" endtime="20201115 22:01:33.174"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.620" endtime="20201115 22:01:33.175"></status>
</kw>
<msg timestamp="20201115 22:01:33.175" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:33.198" endtime="20201115 22:01:33.222"></status>
</kw>
<msg timestamp="20201115 22:01:33.223" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:33.195" endtime="20201115 22:01:33.223"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:33.229" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:33.225" endtime="20201115 22:01:33.230"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:33.231" endtime="20201115 22:01:33.235"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.187" endtime="20201115 22:01:33.236"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.182" endtime="20201115 22:01:33.238"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:33.254" endtime="20201115 22:01:33.590"></status>
</kw>
<msg timestamp="20201115 22:01:33.597" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040628403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040652986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:33.251" endtime="20201115 22:01:33.597"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:33.615" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040628403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040652986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:33.599" endtime="20201115 22:01:33.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:33.617" endtime="20201115 22:01:33.621"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.244" endtime="20201115 22:01:33.623"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.239" endtime="20201115 22:01:33.624"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:33.635" level="INFO">${RESULT} = [{'time': 0.040652986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.458300000000163e-05, 'source_diff': 2.458300000000163e-05}, {'time': 0.040936264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:33.626" endtime="20201115 22:01:33.636"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:33.665" level="INFO">${OVERHEAD} = {'diff': [2.458300000000163e-05, 2.4570000000001535e-05, 2.4570000000001535e-05, 2.390299999999873e-05, 2.4056000000001465e-05, 2.4055999999994526e-05, 2.4570000000001535e-05, 2.384700000000045e-05, 2...</msg>
<status status="PASS" starttime="20201115 22:01:33.637" endtime="20201115 22:01:33.666"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:33.676" level="INFO">NAME: 00-overhead-6-remove</msg>
<status status="PASS" starttime="20201115 22:01:33.674" endtime="20201115 22:01:33.677"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:33.682" level="INFO">VALUE: [2.458300000000163e-05, 2.4570000000001535e-05, 2.4570000000001535e-05, 2.390299999999873e-05, 2.4056000000001465e-05, 2.4055999999994526e-05, 2.4570000000001535e-05, 2.384700000000045e-05, 2.470899999999776e-05, 2.39169999999983e-05, 2.386100000000002e-05, 2.462500000000034e-05, 2.4554999999995553e-05, 2.4236000000003866e-05, 2.4556000000001965e-05, 2.4013999999995816e-05, 2.4708000000005226e-05, 2.390299999999873e-05, 2.422300000000377e-05, 2.4735999999997427e-05, 2.456900000000206e-05, 2.437500000000009e-05, 2.438899999999966e-05, 2.406900000000156e-05, 2.420899999999726e-05, 2.438899999999966e-05, 2.4707999999998287e-05, 2.4555999999995026e-05, 2.4679999999999147e-05, 2.390299999999873e-05, 2.4014000000002755e-05, 2.438899999999966e-05, 2.4055999999994526e-05, 2.4055999999994526e-05, 2.4722000000004796e-05, 2.438899999999966e-05, 2.4236000000003866e-05, 2.4179999999998647e-05, 2.4027999999995386e-05, 2.462500000000034e-05, 2.4554999999995553e-05, 2.4042000000001895e-05, 2.4735999999997427e-05, 2.4082999999994192e-05, 2.3915999999998827e-05, 2.4750000000003936e-05, 2.39169999999983e-05, 2.390299999999873e-05, 2.4221999999997357e-05, 2.4054999999995053e-05]</msg>
<status status="PASS" starttime="20201115 22:01:33.679" endtime="20201115 22:01:33.682"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.667" endtime="20201115 22:01:33.684"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:33.690" endtime="20201115 22:01:33.693"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:33.698" endtime="20201115 22:01:33.720"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.694" endtime="20201115 22:01:33.722"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.686" endtime="20201115 22:01:33.723"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.176" endtime="20201115 22:01:33.724"></status>
</kw>
<msg timestamp="20201115 22:01:33.724" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:33.747" endtime="20201115 22:01:33.771"></status>
</kw>
<msg timestamp="20201115 22:01:33.772" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:33.744" endtime="20201115 22:01:33.772"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:33.778" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:33.774" endtime="20201115 22:01:33.779"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:33.780" endtime="20201115 22:01:33.784"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.737" endtime="20201115 22:01:33.786"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.731" endtime="20201115 22:01:33.787"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:33.803" endtime="20201115 22:01:34.140"></status>
</kw>
<msg timestamp="20201115 22:01:34.147" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040582417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040606306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:33.800" endtime="20201115 22:01:34.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:34.165" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040582417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040606306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:34.149" endtime="20201115 22:01:34.166"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:34.168" endtime="20201115 22:01:34.173"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.793" endtime="20201115 22:01:34.175"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.788" endtime="20201115 22:01:34.176"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:34.187" level="INFO">${RESULT} = [{'time': 0.040606306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.388899999999916e-05, 'source_diff': 2.388899999999916e-05}, {'time': 0.040890583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:34.178" endtime="20201115 22:01:34.187"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:34.217" level="INFO">${OVERHEAD} = {'diff': [2.388899999999916e-05, 2.404100000000242e-05, 2.456900000000206e-05, 2.465299999999948e-05, 2.444500000000488e-05, 2.4027999999995386e-05, 2.440299999999923e-05, 2.470899999999776e-05, 2.440...</msg>
<status status="PASS" starttime="20201115 22:01:34.189" endtime="20201115 22:01:34.217"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:34.228" level="INFO">NAME: 00-overhead-6-remove</msg>
<status status="PASS" starttime="20201115 22:01:34.226" endtime="20201115 22:01:34.228"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:34.233" level="INFO">VALUE: [2.388899999999916e-05, 2.404100000000242e-05, 2.456900000000206e-05, 2.465299999999948e-05, 2.444500000000488e-05, 2.4027999999995386e-05, 2.440299999999923e-05, 2.470899999999776e-05, 2.440299999999923e-05, 2.437500000000009e-05, 2.438899999999966e-05, 2.4735999999997427e-05, 2.4235999999996927e-05, 2.4028000000002325e-05, 2.4777999999996136e-05, 2.4056000000001465e-05, 2.438899999999966e-05, 2.388899999999916e-05, 2.408300000000113e-05, 2.4208000000004726e-05, 2.437500000000009e-05, 2.387499999999959e-05, 2.4556000000001965e-05, 2.4221999999997357e-05, 2.387500000000653e-05, 2.455500000000249e-05, 2.387499999999959e-05, 2.4500000000003685e-05, 2.4235999999996927e-05, 2.4235999999996927e-05, 2.419499999999769e-05, 2.472299999999733e-05, 2.4055999999994526e-05, 2.408300000000113e-05, 2.405500000000199e-05, 2.4222000000004296e-05, 2.4056000000001465e-05, 2.388899999999916e-05, 2.4070000000001035e-05, 2.4708000000005226e-05, 2.416700000000549e-05, 2.4708000000005226e-05, 2.437500000000009e-05, 2.390299999999873e-05, 2.4056000000001465e-05, 2.4707999999998287e-05, 2.4722000000004796e-05, 2.4235999999996927e-05, 2.4221999999997357e-05, 2.4070000000001035e-05]</msg>
<status status="PASS" starttime="20201115 22:01:34.230" endtime="20201115 22:01:34.234"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.219" endtime="20201115 22:01:34.236"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:34.242" endtime="20201115 22:01:34.244"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:34.250" endtime="20201115 22:01:34.271"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.246" endtime="20201115 22:01:34.273"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.237" endtime="20201115 22:01:34.275"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.726" endtime="20201115 22:01:34.275"></status>
</kw>
<msg timestamp="20201115 22:01:34.276" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:34.299" endtime="20201115 22:01:34.322"></status>
</kw>
<msg timestamp="20201115 22:01:34.323" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:34.295" endtime="20201115 22:01:34.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:34.330" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:34.326" endtime="20201115 22:01:34.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:34.332" endtime="20201115 22:01:34.336"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.288" endtime="20201115 22:01:34.337"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.282" endtime="20201115 22:01:34.339"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:34.355" endtime="20201115 22:01:34.690"></status>
</kw>
<msg timestamp="20201115 22:01:34.698" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040518875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040542819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:34.351" endtime="20201115 22:01:34.698"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:34.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040518875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040542819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:34.700" endtime="20201115 22:01:34.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:34.718" endtime="20201115 22:01:34.724"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.344" endtime="20201115 22:01:34.725"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.340" endtime="20201115 22:01:34.727"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:34.737" level="INFO">${RESULT} = [{'time': 0.040542819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3943999999997967e-05, 'source_diff': 2.3943999999997967e-05}, {'time': 0.040827236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:34.728" endtime="20201115 22:01:34.738"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:34.767" level="INFO">${OVERHEAD} = {'diff': [2.3943999999997967e-05, 2.4736000000004366e-05, 2.4555999999995026e-05, 2.437500000000009e-05, 2.470899999999776e-05, 2.4222000000004296e-05, 2.4222000000004296e-05, 2.4221999999997357e-05, ...</msg>
<status status="PASS" starttime="20201115 22:01:34.739" endtime="20201115 22:01:34.767"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:34.778" level="INFO">NAME: 00-overhead-6-remove</msg>
<status status="PASS" starttime="20201115 22:01:34.776" endtime="20201115 22:01:34.779"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:34.783" level="INFO">VALUE: [2.3943999999997967e-05, 2.4736000000004366e-05, 2.4555999999995026e-05, 2.437500000000009e-05, 2.470899999999776e-05, 2.4222000000004296e-05, 2.4222000000004296e-05, 2.4221999999997357e-05, 2.4735999999997427e-05, 2.4236000000003866e-05, 2.4721999999997857e-05, 2.4542000000002395e-05, 2.4056000000001465e-05, 2.4555999999995026e-05, 2.4068999999994622e-05, 2.4708000000005226e-05, 2.4735999999997427e-05, 2.4555999999995026e-05, 2.438899999999966e-05, 2.4721999999997857e-05, 2.4222000000004296e-05, 2.438899999999966e-05, 2.4679999999999147e-05, 2.437500000000009e-05, 2.4569999999994596e-05, 2.437500000000009e-05, 2.4236000000003866e-05, 2.462500000000034e-05, 2.390299999999873e-05, 2.4235999999996927e-05, 2.4736000000004366e-05, 2.468099999999862e-05, 2.4542000000002395e-05, 2.388899999999916e-05, 2.437500000000009e-05, 2.461100000000077e-05, 2.470899999999776e-05, 2.436100000000052e-05, 2.438899999999966e-05, 2.4236000000003866e-05, 2.455500000000249e-05, 2.458300000000163e-05, 2.4222000000004296e-05, 2.455500000000249e-05, 2.4014000000002755e-05, 2.438899999999966e-05, 2.4721999999997857e-05, 2.4056000000001465e-05, 2.4401999999999757e-05, 2.4736000000004366e-05]</msg>
<status status="PASS" starttime="20201115 22:01:34.780" endtime="20201115 22:01:34.784"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.769" endtime="20201115 22:01:34.786"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:34.792" endtime="20201115 22:01:34.795"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:34.800" endtime="20201115 22:01:34.822"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.796" endtime="20201115 22:01:34.823"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.788" endtime="20201115 22:01:34.825"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.277" endtime="20201115 22:01:34.826"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.066" endtime="20201115 22:01:34.826"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.065" endtime="20201115 22:01:34.826"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:34.831" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:34.854" endtime="20201115 22:01:34.879"></status>
</kw>
<msg timestamp="20201115 22:01:34.880" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:34.850" endtime="20201115 22:01:34.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:34.887" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:34.883" endtime="20201115 22:01:34.887"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:34.889" endtime="20201115 22:01:34.893"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.843" endtime="20201115 22:01:34.895"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.838" endtime="20201115 22:01:34.896"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:34.913" endtime="20201115 22:01:35.263"></status>
</kw>
<msg timestamp="20201115 22:01:35.270" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045685722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045711361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:34.909" endtime="20201115 22:01:35.271"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:35.289" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045685722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045711361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:35.273" endtime="20201115 22:01:35.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:35.292" endtime="20201115 22:01:35.296"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.902" endtime="20201115 22:01:35.297"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.898" endtime="20201115 22:01:35.299"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:35.310" level="INFO">${RESULT} = [{'time': 0.045711361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.563900000000091e-05, 'source_diff': 2.563900000000091e-05}, {'time': 0.046035792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:35.300" endtime="20201115 22:01:35.310"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:35.341" level="INFO">${OVERHEAD} = {'diff': [2.563900000000091e-05, 2.4985999999997677e-05, 2.515299999999998e-05, 2.562500000000134e-05, 2.513900000000041e-05, 2.5443999999999467e-05, 2.497299999999758e-05, 2.5486000000005116e-05, 2.5...</msg>
<status status="PASS" starttime="20201115 22:01:35.312" endtime="20201115 22:01:35.341"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:35.352" level="INFO">NAME: 00-overhead-7-remove</msg>
<status status="PASS" starttime="20201115 22:01:35.350" endtime="20201115 22:01:35.353"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:35.358" level="INFO">VALUE: [2.563900000000091e-05, 2.4985999999997677e-05, 2.515299999999998e-05, 2.562500000000134e-05, 2.513900000000041e-05, 2.5443999999999467e-05, 2.497299999999758e-05, 2.5486000000005116e-05, 2.504100000000342e-05, 2.5138000000000937e-05, 2.544499999999894e-05, 2.5652000000001007e-05, 2.562500000000134e-05, 2.531900000000281e-05, 2.5680000000000147e-05, 2.562500000000134e-05, 2.512500000000084e-05, 2.5304999999996303e-05, 2.5304999999996303e-05, 2.516700000000649e-05, 2.5306000000002715e-05, 2.545899999999851e-05, 2.5292000000003145e-05, 2.5471999999998607e-05, 2.4792000000002645e-05, 2.5818999999996373e-05, 2.4971999999998107e-05, 2.5471999999998607e-05, 2.547299999999808e-05, 2.480500000000274e-05, 2.4986000000004616e-05, 2.5305999999995776e-05, 2.54169999999998e-05, 2.547299999999808e-05, 2.5014000000003755e-05, 2.530500000000324e-05, 2.5305999999995776e-05, 2.4778000000003075e-05, 2.494500000000538e-05, 2.5304999999996303e-05, 2.4971999999998107e-05, 2.5805999999996276e-05, 2.4943999999998967e-05, 2.531900000000281e-05, 2.5638999999993972e-05, 2.5138999999993472e-05, 2.513900000000041e-05, 2.5277999999996636e-05, 2.4806000000002215e-05, 2.513900000000041e-05]</msg>
<status status="PASS" starttime="20201115 22:01:35.354" endtime="20201115 22:01:35.359"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:35.343" endtime="20201115 22:01:35.360"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:35.367" endtime="20201115 22:01:35.370"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:35.375" endtime="20201115 22:01:35.397"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:35.371" endtime="20201115 22:01:35.399"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:35.362" endtime="20201115 22:01:35.401"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.832" endtime="20201115 22:01:35.401"></status>
</kw>
<msg timestamp="20201115 22:01:35.402" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:35.426" endtime="20201115 22:01:35.452"></status>
</kw>
<msg timestamp="20201115 22:01:35.453" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:35.422" endtime="20201115 22:01:35.454"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:35.461" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:35.456" endtime="20201115 22:01:35.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:35.463" endtime="20201115 22:01:35.467"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:35.415" endtime="20201115 22:01:35.468"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:35.409" endtime="20201115 22:01:35.470"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:35.487" endtime="20201115 22:01:35.837"></status>
</kw>
<msg timestamp="20201115 22:01:35.844" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042235931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04226125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:01:35.484" endtime="20201115 22:01:35.844"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:35.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042235931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04226125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:01:35.846" endtime="20201115 22:01:35.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:35.865" endtime="20201115 22:01:35.870"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:35.476" endtime="20201115 22:01:35.872"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:35.471" endtime="20201115 22:01:35.874"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:35.885" level="INFO">${RESULT} = [{'time': 0.04226125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.531900000000281e-05, 'source_diff': 2.531900000000281e-05}, {'time': 0.042584514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:01:35.875" endtime="20201115 22:01:35.885"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:35.916" level="INFO">${OVERHEAD} = {'diff': [2.531900000000281e-05, 2.4791999999995706e-05, 2.5805999999996276e-05, 2.5318999999995873e-05, 2.511100000000127e-05, 2.5306000000002715e-05, 2.4790999999996233e-05, 2.4957999999998537e-05, ...</msg>
<status status="PASS" starttime="20201115 22:01:35.887" endtime="20201115 22:01:35.916"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:35.927" level="INFO">NAME: 00-overhead-7-remove</msg>
<status status="PASS" starttime="20201115 22:01:35.925" endtime="20201115 22:01:35.928"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:35.932" level="INFO">VALUE: [2.531900000000281e-05, 2.4791999999995706e-05, 2.5805999999996276e-05, 2.5318999999995873e-05, 2.511100000000127e-05, 2.5306000000002715e-05, 2.4790999999996233e-05, 2.4957999999998537e-05, 2.511100000000127e-05, 2.5013999999996817e-05, 2.497300000000452e-05, 2.4721999999997857e-05, 2.5596999999995262e-05, 2.513900000000041e-05, 2.548700000000459e-05, 2.5457999999999037e-05, 2.4986000000004616e-05, 2.4806000000002215e-05, 2.5070000000002035e-05, 2.4972000000005046e-05, 2.5624999999994402e-05, 2.5471999999998607e-05, 2.565300000000048e-05, 2.565300000000048e-05, 2.5306000000002715e-05, 2.497299999999758e-05, 2.4971999999998107e-05, 2.580500000000374e-05, 2.4943999999998967e-05, 2.561100000000177e-05, 2.556900000000306e-05, 2.5805999999996276e-05, 2.5320000000002285e-05, 2.488900000000016e-05, 2.5833999999995416e-05, 2.584700000000245e-05, 2.5471999999998607e-05, 2.5152000000000507e-05, 2.5820000000002785e-05, 2.565300000000048e-05, 2.4957999999998537e-05, 2.547299999999808e-05, 2.515299999999998e-05, 2.4944000000005906e-05, 2.495899999999801e-05, 2.5306000000002715e-05, 2.483300000000188e-05, 2.562500000000134e-05, 2.513900000000041e-05, 2.530500000000324e-05]</msg>
<status status="PASS" starttime="20201115 22:01:35.929" endtime="20201115 22:01:35.933"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:35.918" endtime="20201115 22:01:35.935"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:35.941" endtime="20201115 22:01:35.944"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:35.950" endtime="20201115 22:01:35.973"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:35.946" endtime="20201115 22:01:35.975"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:35.937" endtime="20201115 22:01:35.976"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:35.403" endtime="20201115 22:01:35.977"></status>
</kw>
<msg timestamp="20201115 22:01:35.977" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:36.002" endtime="20201115 22:01:36.028"></status>
</kw>
<msg timestamp="20201115 22:01:36.030" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:35.998" endtime="20201115 22:01:36.030"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:36.036" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:36.032" endtime="20201115 22:01:36.037"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:36.038" endtime="20201115 22:01:36.042"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:35.991" endtime="20201115 22:01:36.044"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:35.984" endtime="20201115 22:01:36.045"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:36.062" endtime="20201115 22:01:36.411"></status>
</kw>
<msg timestamp="20201115 22:01:36.419" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0434215, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043447139, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:01:36.059" endtime="20201115 22:01:36.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:36.437" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0434215, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043447139, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:01:36.421" endtime="20201115 22:01:36.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:36.440" endtime="20201115 22:01:36.445"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:36.051" endtime="20201115 22:01:36.447"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:36.047" endtime="20201115 22:01:36.448"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:36.459" level="INFO">${RESULT} = [{'time': 0.043447139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.563900000000091e-05, 'source_diff': 2.563900000000091e-05}, {'time': 0.043771472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:36.450" endtime="20201115 22:01:36.460"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:36.490" level="INFO">${OVERHEAD} = {'diff': [2.563900000000091e-05, 2.538900000000066e-05, 2.483300000000188e-05, 2.545899999999851e-05, 2.5666000000000577e-05, 2.5568999999996123e-05, 2.5666000000000577e-05, 2.5291999999996206e-05, 2....</msg>
<status status="PASS" starttime="20201115 22:01:36.461" endtime="20201115 22:01:36.491"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:36.502" level="INFO">NAME: 00-overhead-7-remove</msg>
<status status="PASS" starttime="20201115 22:01:36.499" endtime="20201115 22:01:36.502"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:36.507" level="INFO">VALUE: [2.563900000000091e-05, 2.538900000000066e-05, 2.483300000000188e-05, 2.545899999999851e-05, 2.5666000000000577e-05, 2.5568999999996123e-05, 2.5666000000000577e-05, 2.5291999999996206e-05, 2.5624999999994402e-05, 2.5638999999993972e-05, 2.5152000000000507e-05, 2.5638000000001437e-05, 2.5806000000003215e-05, 2.5652000000001007e-05, 2.533300000000238e-05, 2.5014000000003755e-05, 2.5818999999996373e-05, 2.563900000000091e-05, 2.5485999999998177e-05, 2.513900000000041e-05, 2.562500000000134e-05, 2.5263999999997067e-05, 2.563900000000091e-05, 2.5486000000005116e-05, 2.488900000000016e-05, 2.5652000000001007e-05, 2.515299999999998e-05, 2.5584000000002105e-05, 2.57090000000057e-05, 2.563900000000091e-05, 2.515299999999998e-05, 2.581900000000331e-05, 2.5735999999998427e-05, 2.498700000000409e-05, 2.5638999999993972e-05, 2.5542000000003395e-05, 2.530500000000324e-05, 2.5874999999994652e-05, 2.512500000000084e-05, 2.562500000000134e-05, 2.513900000000041e-05, 2.4820000000001785e-05, 2.5319999999995346e-05, 2.498699999999715e-05, 2.479100000000317e-05, 2.513900000000041e-05, 2.5832999999995943e-05, 2.563900000000091e-05, 2.480500000000274e-05, 2.5485999999998177e-05]</msg>
<status status="PASS" starttime="20201115 22:01:36.504" endtime="20201115 22:01:36.508"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:36.492" endtime="20201115 22:01:36.510"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:36.516" endtime="20201115 22:01:36.519"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:36.525" endtime="20201115 22:01:36.548"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:36.520" endtime="20201115 22:01:36.549"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:36.512" endtime="20201115 22:01:36.551"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:35.978" endtime="20201115 22:01:36.552"></status>
</kw>
<msg timestamp="20201115 22:01:36.552" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:36.576" endtime="20201115 22:01:36.602"></status>
</kw>
<msg timestamp="20201115 22:01:36.604" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:36.572" endtime="20201115 22:01:36.604"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:36.610" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:36.606" endtime="20201115 22:01:36.611"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:36.612" endtime="20201115 22:01:36.616"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:36.565" endtime="20201115 22:01:36.618"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:36.559" endtime="20201115 22:01:36.619"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:36.636" endtime="20201115 22:01:36.976"></status>
</kw>
<msg timestamp="20201115 22:01:36.983" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042096694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042121847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:36.633" endtime="20201115 22:01:36.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:37.001" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042096694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042121847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:36.985" endtime="20201115 22:01:37.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:37.004" endtime="20201115 22:01:37.010"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:36.626" endtime="20201115 22:01:37.011"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:36.621" endtime="20201115 22:01:37.013"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:37.024" level="INFO">${RESULT} = [{'time': 0.042121847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.515299999999998e-05, 'source_diff': 2.515299999999998e-05}, {'time': 0.042447278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:37.014" endtime="20201115 22:01:37.024"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:37.054" level="INFO">${OVERHEAD} = {'diff': [2.515299999999998e-05, 2.537500000000109e-05, 2.481900000000231e-05, 2.5638999999993972e-05, 2.5334000000001855e-05, 2.558300000000263e-05, 2.5554999999996553e-05, 2.5471999999998607e-05, 2....</msg>
<status status="PASS" starttime="20201115 22:01:37.026" endtime="20201115 22:01:37.055"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:37.066" level="INFO">NAME: 00-overhead-7-remove</msg>
<status status="PASS" starttime="20201115 22:01:37.064" endtime="20201115 22:01:37.067"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:37.072" level="INFO">VALUE: [2.515299999999998e-05, 2.537500000000109e-05, 2.481900000000231e-05, 2.5638999999993972e-05, 2.5334000000001855e-05, 2.558300000000263e-05, 2.5554999999996553e-05, 2.5471999999998607e-05, 2.5471999999998607e-05, 2.497300000000452e-05, 2.565300000000048e-05, 2.5221999999998357e-05, 2.483300000000188e-05, 2.5360999999994582e-05, 2.4820000000001785e-05, 2.544499999999894e-05, 2.547299999999808e-05, 2.5235999999997927e-05, 2.515299999999998e-05, 2.5834000000002355e-05, 2.5485999999998177e-05, 2.519499999999869e-05, 2.565300000000048e-05, 2.5846999999995512e-05, 2.5485999999998177e-05, 2.516699999999955e-05, 2.4777000000003602e-05, 2.565199999999407e-05, 2.4818999999995373e-05, 2.563900000000091e-05, 2.566700000000005e-05, 2.5013999999996817e-05, 2.563900000000091e-05, 2.5471999999998607e-05, 2.515299999999998e-05, 2.5485999999998177e-05, 2.563900000000091e-05, 2.5292000000003145e-05, 2.4971999999998107e-05, 2.4806000000002215e-05, 2.5526999999997413e-05, 2.512500000000084e-05, 2.5792000000003645e-05, 2.515299999999998e-05, 2.5152000000000507e-05, 2.5291999999996206e-05, 2.512500000000084e-05, 2.5514000000004255e-05, 2.5306000000002715e-05, 2.5804999999996803e-05]</msg>
<status status="PASS" starttime="20201115 22:01:37.069" endtime="20201115 22:01:37.079"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:37.056" endtime="20201115 22:01:37.081"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:37.087" endtime="20201115 22:01:37.090"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:37.096" endtime="20201115 22:01:37.117"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:37.091" endtime="20201115 22:01:37.119"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:37.082" endtime="20201115 22:01:37.121"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:36.553" endtime="20201115 22:01:37.121"></status>
</kw>
<msg timestamp="20201115 22:01:37.122" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:37.145" endtime="20201115 22:01:37.170"></status>
</kw>
<msg timestamp="20201115 22:01:37.172" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:37.141" endtime="20201115 22:01:37.172"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:37.178" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:37.174" endtime="20201115 22:01:37.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:37.180" endtime="20201115 22:01:37.184"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:37.134" endtime="20201115 22:01:37.186"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:37.128" endtime="20201115 22:01:37.187"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:37.204" endtime="20201115 22:01:37.544"></status>
</kw>
<msg timestamp="20201115 22:01:37.551" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041045681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041070986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:37.200" endtime="20201115 22:01:37.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:37.569" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041045681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041070986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:37.553" endtime="20201115 22:01:37.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:37.571" endtime="20201115 22:01:37.579"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:37.193" endtime="20201115 22:01:37.581"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:37.188" endtime="20201115 22:01:37.584"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:37.595" level="INFO">${RESULT} = [{'time': 0.041070986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5304999999996303e-05, 'source_diff': 2.5304999999996303e-05}, {'time': 0.041397347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:37.586" endtime="20201115 22:01:37.596"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:37.625" level="INFO">${OVERHEAD} = {'diff': [2.5304999999996303e-05, 2.565300000000048e-05, 2.4971999999998107e-05, 2.518099999999912e-05, 2.4971999999998107e-05, 2.55970000000022e-05, 2.5318999999995873e-05, 2.5138999999993472e-05, 2....</msg>
<status status="PASS" starttime="20201115 22:01:37.597" endtime="20201115 22:01:37.626"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:37.637" level="INFO">NAME: 00-overhead-7-remove</msg>
<status status="PASS" starttime="20201115 22:01:37.634" endtime="20201115 22:01:37.637"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:37.642" level="INFO">VALUE: [2.5304999999996303e-05, 2.565300000000048e-05, 2.4971999999998107e-05, 2.518099999999912e-05, 2.4971999999998107e-05, 2.55970000000022e-05, 2.5318999999995873e-05, 2.5138999999993472e-05, 2.4792000000002645e-05, 2.563900000000091e-05, 2.4777000000003602e-05, 2.5499999999997747e-05, 2.5804999999996803e-05, 2.562500000000134e-05, 2.5193999999999217e-05, 2.497299999999758e-05, 2.5833999999995416e-05, 2.5138000000000937e-05, 2.547299999999808e-05, 2.543099999999937e-05, 2.563900000000091e-05, 2.4999999999997247e-05, 2.5137999999994e-05, 2.5527999999996887e-05, 2.531900000000281e-05, 2.5320000000002285e-05, 2.561100000000177e-05, 2.5486000000005116e-05, 2.5457999999999037e-05, 2.5638999999993972e-05, 2.4971999999998107e-05, 2.5472000000005546e-05, 2.531900000000281e-05, 2.533300000000238e-05, 2.513900000000041e-05, 2.480500000000274e-05, 2.5485999999998177e-05, 2.5832999999995943e-05, 2.5235999999997927e-05, 2.5304999999996303e-05, 2.565300000000048e-05, 2.563900000000091e-05, 2.5499999999997747e-05, 2.5458000000005976e-05, 2.4736000000004366e-05, 2.5472000000005546e-05, 2.513900000000041e-05, 2.4971999999998107e-05, 2.5290999999996733e-05, 2.513900000000041e-05]</msg>
<status status="PASS" starttime="20201115 22:01:37.639" endtime="20201115 22:01:37.644"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:37.627" endtime="20201115 22:01:37.645"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:37.652" endtime="20201115 22:01:37.654"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:37.661" endtime="20201115 22:01:37.683"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:37.656" endtime="20201115 22:01:37.685"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:37.647" endtime="20201115 22:01:37.686"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:37.123" endtime="20201115 22:01:37.687"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.829" endtime="20201115 22:01:37.687"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.827" endtime="20201115 22:01:37.688"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:37.693" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:37.716" endtime="20201115 22:01:37.743"></status>
</kw>
<msg timestamp="20201115 22:01:37.745" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:37.712" endtime="20201115 22:01:37.745"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:37.751" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:37.747" endtime="20201115 22:01:37.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:37.753" endtime="20201115 22:01:37.757"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:37.705" endtime="20201115 22:01:37.758"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:37.699" endtime="20201115 22:01:37.760"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:37.777" endtime="20201115 22:01:38.119"></status>
</kw>
<msg timestamp="20201115 22:01:38.126" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046580653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046605875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:37.773" endtime="20201115 22:01:38.126"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:38.144" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046580653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046605875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:38.128" endtime="20201115 22:01:38.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:38.147" endtime="20201115 22:01:38.150"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:37.766" endtime="20201115 22:01:38.152"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:37.761" endtime="20201115 22:01:38.153"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:38.164" level="INFO">${RESULT} = [{'time': 0.046605875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5221999999998357e-05, 'source_diff': 2.5221999999998357e-05}, {'time': 0.046966361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:38.155" endtime="20201115 22:01:38.165"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:38.195" level="INFO">${OVERHEAD} = {'diff': [2.5221999999998357e-05, 2.5554999999996553e-05, 2.556900000000306e-05, 2.5221999999998357e-05, 2.488900000000016e-05, 2.556900000000306e-05, 2.5556000000002965e-05, 2.520899999999826e-05, 2....</msg>
<status status="PASS" starttime="20201115 22:01:38.166" endtime="20201115 22:01:38.195"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:38.206" level="INFO">NAME: 00-overhead-8-remove</msg>
<status status="PASS" starttime="20201115 22:01:38.204" endtime="20201115 22:01:38.207"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:38.212" level="INFO">VALUE: [2.5221999999998357e-05, 2.5554999999996553e-05, 2.556900000000306e-05, 2.5221999999998357e-05, 2.488900000000016e-05, 2.556900000000306e-05, 2.5556000000002965e-05, 2.520899999999826e-05, 2.572299999999833e-05, 2.5722000000005796e-05, 2.537500000000109e-05, 2.5570000000002535e-05, 2.556900000000306e-05, 2.5721999999998857e-05, 2.556900000000306e-05, 2.536100000000152e-05, 2.486100000000102e-05, 2.531900000000281e-05, 2.5055999999995526e-05, 2.5721999999998857e-05, 2.536100000000152e-05, 2.515299999999998e-05, 2.5735999999998427e-05, 2.505500000000299e-05, 2.5542000000003395e-05, 2.5292000000003145e-05, 2.5791999999996706e-05, 2.536100000000152e-05, 2.488900000000016e-05, 2.538900000000066e-05, 2.4915999999999827e-05, 2.5249999999997497e-05, 2.537500000000109e-05, 2.5056000000002465e-05, 2.569499999999919e-05, 2.5208000000005726e-05, 2.538900000000066e-05, 2.487500000000059e-05, 2.5721999999998857e-05, 2.4915999999999827e-05, 2.5568999999996123e-05, 2.5554999999996553e-05, 2.5235999999997927e-05, 2.5542000000003395e-05, 2.4888000000000687e-05, 2.5666000000007516e-05, 2.515299999999998e-05, 2.5221999999991418e-05, 2.5527999999996887e-05, 2.5722000000005796e-05]</msg>
<status status="PASS" starttime="20201115 22:01:38.208" endtime="20201115 22:01:38.213"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:38.197" endtime="20201115 22:01:38.215"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:38.221" endtime="20201115 22:01:38.224"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:38.229" endtime="20201115 22:01:38.251"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:38.225" endtime="20201115 22:01:38.253"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:38.216" endtime="20201115 22:01:38.254"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:37.694" endtime="20201115 22:01:38.255"></status>
</kw>
<msg timestamp="20201115 22:01:38.255" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:38.280" endtime="20201115 22:01:38.307"></status>
</kw>
<msg timestamp="20201115 22:01:38.309" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:38.276" endtime="20201115 22:01:38.309"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:38.315" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:38.311" endtime="20201115 22:01:38.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:38.317" endtime="20201115 22:01:38.321"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:38.269" endtime="20201115 22:01:38.323"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:38.263" endtime="20201115 22:01:38.324"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:38.341" endtime="20201115 22:01:38.690"></status>
</kw>
<msg timestamp="20201115 22:01:38.697" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042429806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042455181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:38.337" endtime="20201115 22:01:38.698"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:38.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042429806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042455181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:38.700" endtime="20201115 22:01:38.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:38.719" endtime="20201115 22:01:38.725"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:38.330" endtime="20201115 22:01:38.726"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:38.325" endtime="20201115 22:01:38.728"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:38.739" level="INFO">${RESULT} = [{'time': 0.042455181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.537500000000109e-05, 'source_diff': 2.537500000000109e-05}, {'time': 0.042819597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:38.729" endtime="20201115 22:01:38.739"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:38.770" level="INFO">${OVERHEAD} = {'diff': [2.537500000000109e-05, 2.555500000000349e-05, 2.5610999999994832e-05, 2.5721999999998857e-05, 2.5193999999999217e-05, 2.5570000000002535e-05, 2.5235999999997927e-05, 2.488900000000016e-05, 2...</msg>
<status status="PASS" starttime="20201115 22:01:38.741" endtime="20201115 22:01:38.771"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:38.781" level="INFO">NAME: 00-overhead-8-remove</msg>
<status status="PASS" starttime="20201115 22:01:38.779" endtime="20201115 22:01:38.782"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:38.787" level="INFO">VALUE: [2.537500000000109e-05, 2.555500000000349e-05, 2.5610999999994832e-05, 2.5721999999998857e-05, 2.5193999999999217e-05, 2.5570000000002535e-05, 2.5235999999997927e-05, 2.488900000000016e-05, 2.5249999999997497e-05, 2.488900000000016e-05, 2.57369999999979e-05, 2.5236000000004866e-05, 2.5221999999998357e-05, 2.5056000000002465e-05, 2.536100000000152e-05, 2.5221999999998357e-05, 2.5207999999998787e-05, 2.5055999999995526e-05, 2.5791000000004172e-05, 2.5207999999998787e-05, 2.5000000000004186e-05, 2.566700000000005e-05, 2.50970000000017e-05, 2.5098000000001175e-05, 2.49169999999993e-05, 2.487500000000059e-05, 2.538900000000066e-05, 2.5527999999996887e-05, 2.487500000000059e-05, 2.4888000000000687e-05, 2.5249999999997497e-05, 2.538900000000066e-05, 2.5554999999996553e-05, 2.490299999999973e-05, 2.4888000000000687e-05, 2.5054999999996053e-05, 2.5749999999997997e-05, 2.5306000000002715e-05, 2.5582999999995693e-05, 2.5721999999998857e-05, 2.4915999999999827e-05, 2.5707999999999287e-05, 2.5582999999995693e-05, 2.486100000000102e-05, 2.5221999999998357e-05, 2.5054999999996053e-05, 2.488900000000016e-05, 2.487500000000059e-05, 2.5054999999996053e-05, 2.487500000000059e-05]</msg>
<status status="PASS" starttime="20201115 22:01:38.784" endtime="20201115 22:01:38.788"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:38.772" endtime="20201115 22:01:38.790"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:38.796" endtime="20201115 22:01:38.800"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:38.807" endtime="20201115 22:01:38.829"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:38.801" endtime="20201115 22:01:38.830"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:38.791" endtime="20201115 22:01:38.832"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:38.257" endtime="20201115 22:01:38.833"></status>
</kw>
<msg timestamp="20201115 22:01:38.833" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:38.856" endtime="20201115 22:01:38.884"></status>
</kw>
<msg timestamp="20201115 22:01:38.885" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:38.853" endtime="20201115 22:01:38.885"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:38.891" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:38.887" endtime="20201115 22:01:38.892"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:38.894" endtime="20201115 22:01:38.897"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:38.845" endtime="20201115 22:01:38.899"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:38.840" endtime="20201115 22:01:38.900"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:38.917" endtime="20201115 22:01:39.269"></status>
</kw>
<msg timestamp="20201115 22:01:39.276" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041031583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041056417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:38.914" endtime="20201115 22:01:39.277"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:39.294" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041031583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041056417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:39.279" endtime="20201115 22:01:39.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:39.297" endtime="20201115 22:01:39.302"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:38.906" endtime="20201115 22:01:39.304"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:38.902" endtime="20201115 22:01:39.305"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:39.317" level="INFO">${RESULT} = [{'time': 0.041056417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4833999999994416e-05, 'source_diff': 2.4833999999994416e-05}, {'time': 0.041417958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:39.307" endtime="20201115 22:01:39.317"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:39.347" level="INFO">${OVERHEAD} = {'diff': [2.4833999999994416e-05, 2.5693999999999717e-05, 2.5736000000005366e-05, 2.490299999999973e-05, 2.513900000000041e-05, 2.5554999999996553e-05, 2.488900000000016e-05, 2.522300000000477e-05, 2....</msg>
<status status="PASS" starttime="20201115 22:01:39.319" endtime="20201115 22:01:39.347"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:39.358" level="INFO">NAME: 00-overhead-8-remove</msg>
<status status="PASS" starttime="20201115 22:01:39.355" endtime="20201115 22:01:39.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:39.363" level="INFO">VALUE: [2.4833999999994416e-05, 2.5693999999999717e-05, 2.5736000000005366e-05, 2.490299999999973e-05, 2.513900000000041e-05, 2.5554999999996553e-05, 2.488900000000016e-05, 2.522300000000477e-05, 2.570899999999876e-05, 2.5402000000000757e-05, 2.556900000000306e-05, 2.490299999999973e-05, 2.570899999999876e-05, 2.5568999999996123e-05, 2.5374999999994152e-05, 2.5735999999998427e-05, 2.5736000000005366e-05, 2.5055999999995526e-05, 2.555500000000349e-05, 2.490299999999973e-05, 2.5556000000002965e-05, 2.5486000000005116e-05, 2.5235999999997927e-05, 2.5735999999998427e-05, 2.5028000000003325e-05, 2.5388000000001187e-05, 2.5721999999998857e-05, 2.5556000000002965e-05, 2.4902000000000257e-05, 2.488900000000016e-05, 2.540300000000023e-05, 2.5056000000002465e-05, 2.5235999999997927e-05, 2.5084000000001605e-05, 2.484700000000145e-05, 2.5569999999995596e-05, 2.4902000000000257e-05, 2.5722000000005796e-05, 2.540300000000023e-05, 2.538900000000066e-05, 2.506900000000256e-05, 2.488900000000016e-05, 2.5221999999998357e-05, 2.5735999999998427e-05, 2.5735999999998427e-05, 2.5042000000002895e-05, 2.4915999999999827e-05, 2.529100000000367e-05, 2.5721999999998857e-05, 2.5735999999998427e-05]</msg>
<status status="PASS" starttime="20201115 22:01:39.360" endtime="20201115 22:01:39.364"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:39.349" endtime="20201115 22:01:39.366"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:39.372" endtime="20201115 22:01:39.374"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:39.380" endtime="20201115 22:01:39.402"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:39.376" endtime="20201115 22:01:39.404"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:39.367" endtime="20201115 22:01:39.405"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:38.834" endtime="20201115 22:01:39.406"></status>
</kw>
<msg timestamp="20201115 22:01:39.406" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:39.429" endtime="20201115 22:01:39.457"></status>
</kw>
<msg timestamp="20201115 22:01:39.458" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:39.426" endtime="20201115 22:01:39.458"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:39.464" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:39.460" endtime="20201115 22:01:39.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:39.467" endtime="20201115 22:01:39.470"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:39.418" endtime="20201115 22:01:39.472"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:39.413" endtime="20201115 22:01:39.473"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:39.490" endtime="20201115 22:01:39.825"></status>
</kw>
<msg timestamp="20201115 22:01:39.831" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040813458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040838875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:39.486" endtime="20201115 22:01:39.832"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:39.849" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040813458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040838875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:39.834" endtime="20201115 22:01:39.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:39.852" endtime="20201115 22:01:39.860"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:39.479" endtime="20201115 22:01:39.861"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:39.475" endtime="20201115 22:01:39.863"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:39.873" level="INFO">${RESULT} = [{'time': 0.040838875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.54169999999998e-05, 'source_diff': 2.54169999999998e-05}, {'time': 0.041200319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:01:39.865" endtime="20201115 22:01:39.874"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:39.903" level="INFO">${OVERHEAD} = {'diff': [2.54169999999998e-05, 2.5693999999999717e-05, 2.5056000000002465e-05, 2.569500000000613e-05, 2.506900000000256e-05, 2.5735999999998427e-05, 2.5221999999998357e-05, 2.5443999999999467e-05, 2....</msg>
<status status="PASS" starttime="20201115 22:01:39.876" endtime="20201115 22:01:39.904"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:39.914" level="INFO">NAME: 00-overhead-8-remove</msg>
<status status="PASS" starttime="20201115 22:01:39.912" endtime="20201115 22:01:39.915"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:39.920" level="INFO">VALUE: [2.54169999999998e-05, 2.5693999999999717e-05, 2.5056000000002465e-05, 2.569500000000613e-05, 2.506900000000256e-05, 2.5735999999998427e-05, 2.5221999999998357e-05, 2.5443999999999467e-05, 2.5056000000002465e-05, 2.5555999999996026e-05, 2.5749999999997997e-05, 2.493099999999887e-05, 2.57090000000057e-05, 2.5735999999998427e-05, 2.538900000000066e-05, 2.537500000000109e-05, 2.5221999999998357e-05, 2.5556000000002965e-05, 2.5056000000002465e-05, 2.488900000000016e-05, 2.5568999999996123e-05, 2.5721999999998857e-05, 2.5777999999997137e-05, 2.488900000000016e-05, 2.5513999999997317e-05, 2.488900000000016e-05, 2.5221999999998357e-05, 2.5236000000004866e-05, 2.555500000000349e-05, 2.5429999999999897e-05, 2.5471999999998607e-05, 2.5513999999997317e-05, 2.488900000000016e-05, 2.5570000000002535e-05, 2.5514000000004255e-05, 2.5250000000004436e-05, 2.5528000000003825e-05, 2.5221999999998357e-05, 2.5193999999999217e-05, 2.5040999999996483e-05, 2.5542000000003395e-05, 2.5028000000003325e-05, 2.5749999999997997e-05, 2.487500000000059e-05, 2.5749999999997997e-05, 2.506900000000256e-05, 2.5221999999998357e-05, 2.5249999999997497e-05, 2.5598000000001675e-05, 2.49169999999993e-05]</msg>
<status status="PASS" starttime="20201115 22:01:39.917" endtime="20201115 22:01:39.920"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:39.905" endtime="20201115 22:01:39.922"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:39.928" endtime="20201115 22:01:39.931"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:39.937" endtime="20201115 22:01:39.958"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:39.932" endtime="20201115 22:01:39.960"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:39.924" endtime="20201115 22:01:39.961"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:39.407" endtime="20201115 22:01:39.962"></status>
</kw>
<msg timestamp="20201115 22:01:39.962" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:39.985" endtime="20201115 22:01:40.013"></status>
</kw>
<msg timestamp="20201115 22:01:40.014" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:39.982" endtime="20201115 22:01:40.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:40.020" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:40.016" endtime="20201115 22:01:40.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:40.022" endtime="20201115 22:01:40.026"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:39.975" endtime="20201115 22:01:40.028"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:39.969" endtime="20201115 22:01:40.029"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:40.046" endtime="20201115 22:01:40.380"></status>
</kw>
<msg timestamp="20201115 22:01:40.388" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040714833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040739736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:40.042" endtime="20201115 22:01:40.389"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:40.407" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040714833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040739736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:40.390" endtime="20201115 22:01:40.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:40.409" endtime="20201115 22:01:40.414"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:40.035" endtime="20201115 22:01:40.416"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:40.030" endtime="20201115 22:01:40.418"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:40.428" level="INFO">${RESULT} = [{'time': 0.040739736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.490299999999973e-05, 'source_diff': 2.490299999999973e-05}, {'time': 0.041098181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:40.419" endtime="20201115 22:01:40.429"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:40.458" level="INFO">${OVERHEAD} = {'diff': [2.490299999999973e-05, 2.520899999999826e-05, 2.5735999999998427e-05, 2.5235999999997927e-05, 2.5763999999997567e-05, 2.5749999999997997e-05, 2.5042000000002895e-05, 2.5721999999998857e-05, ...</msg>
<status status="PASS" starttime="20201115 22:01:40.430" endtime="20201115 22:01:40.459"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:40.469" level="INFO">NAME: 00-overhead-8-remove</msg>
<status status="PASS" starttime="20201115 22:01:40.467" endtime="20201115 22:01:40.470"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:40.475" level="INFO">VALUE: [2.490299999999973e-05, 2.520899999999826e-05, 2.5735999999998427e-05, 2.5235999999997927e-05, 2.5763999999997567e-05, 2.5749999999997997e-05, 2.5042000000002895e-05, 2.5721999999998857e-05, 2.5721999999998857e-05, 2.531900000000281e-05, 2.5070000000002035e-05, 2.5040999999996483e-05, 2.5499999999997747e-05, 2.506900000000256e-05, 2.488900000000016e-05, 2.5721999999998857e-05, 2.555500000000349e-05, 2.570899999999876e-05, 2.558300000000263e-05, 2.4915999999999827e-05, 2.490299999999973e-05, 2.488900000000016e-05, 2.556900000000306e-05, 2.490299999999973e-05, 2.558300000000263e-05, 2.512500000000084e-05, 2.488900000000016e-05, 2.5722000000005796e-05, 2.5082999999995192e-05, 2.522300000000477e-05, 2.5542000000003395e-05, 2.5750000000004936e-05, 2.5374999999994152e-05, 2.5014000000003755e-05, 2.5416000000000327e-05, 2.570899999999876e-05, 2.5014000000003755e-05, 2.4848000000000925e-05, 2.5236000000004866e-05, 2.5084000000001605e-05, 2.572299999999833e-05, 2.568099999999962e-05, 2.504100000000342e-05, 2.5083999999994666e-05, 2.5207999999998787e-05, 2.5735999999998427e-05, 2.488900000000016e-05, 2.5207999999998787e-05, 2.5736000000005366e-05, 2.5735999999998427e-05]</msg>
<status status="PASS" starttime="20201115 22:01:40.471" endtime="20201115 22:01:40.475"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:40.460" endtime="20201115 22:01:40.477"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:40.483" endtime="20201115 22:01:40.486"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:40.491" endtime="20201115 22:01:40.513"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:40.487" endtime="20201115 22:01:40.515"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:40.479" endtime="20201115 22:01:40.516"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:39.964" endtime="20201115 22:01:40.517"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:37.690" endtime="20201115 22:01:40.518"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:37.689" endtime="20201115 22:01:40.518"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:40.523" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:40.545" endtime="20201115 22:01:40.575"></status>
</kw>
<msg timestamp="20201115 22:01:40.576" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:40.542" endtime="20201115 22:01:40.577"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:40.582" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:40.579" endtime="20201115 22:01:40.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:40.585" endtime="20201115 22:01:40.589"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:40.535" endtime="20201115 22:01:40.591"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:40.529" endtime="20201115 22:01:40.592"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:40.608" endtime="20201115 22:01:40.959"></status>
</kw>
<msg timestamp="20201115 22:01:40.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045715139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045740514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:40.605" endtime="20201115 22:01:40.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:40.984" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045715139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045740514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:40.969" endtime="20201115 22:01:40.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:40.987" endtime="20201115 22:01:40.991"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:40.598" endtime="20201115 22:01:40.992"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:40.593" endtime="20201115 22:01:40.994"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:41.005" level="INFO">${RESULT} = [{'time': 0.045740514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.537500000000109e-05, 'source_diff': 2.537500000000109e-05}, {'time': 0.046136944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:40.996" endtime="20201115 22:01:41.005"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:41.035" level="INFO">${OVERHEAD} = {'diff': [2.537500000000109e-05, 2.512500000000084e-05, 2.513900000000041e-05, 2.4791999999995706e-05, 2.5528000000003825e-05, 2.5457999999999037e-05, 2.512500000000084e-05, 2.4971999999998107e-05, 2....</msg>
<status status="PASS" starttime="20201115 22:01:41.007" endtime="20201115 22:01:41.035"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:41.046" level="INFO">NAME: 00-overhead-9-remove</msg>
<status status="PASS" starttime="20201115 22:01:41.043" endtime="20201115 22:01:41.046"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:41.051" level="INFO">VALUE: [2.537500000000109e-05, 2.512500000000084e-05, 2.513900000000041e-05, 2.4791999999995706e-05, 2.5528000000003825e-05, 2.5457999999999037e-05, 2.512500000000084e-05, 2.4971999999998107e-05, 2.563900000000091e-05, 2.4999999999997247e-05, 2.5680000000000147e-05, 2.547299999999808e-05, 2.5040999999996483e-05, 2.4985999999997677e-05, 2.480500000000274e-05, 2.5318999999995873e-05, 2.5486000000005116e-05, 2.548700000000459e-05, 2.515299999999998e-05, 2.515299999999998e-05, 2.5721999999998857e-05, 2.5332999999995442e-05, 2.4833999999994416e-05, 2.4834000000001355e-05, 2.5471999999998607e-05, 2.5278000000003575e-05, 2.5124999999993902e-05, 2.5596999999995262e-05, 2.5096999999994762e-05, 2.565300000000048e-05, 2.512500000000084e-05, 2.498700000000409e-05, 2.566700000000005e-05, 2.5152000000000507e-05, 2.4820000000001785e-05, 2.4971999999998107e-05, 2.536100000000152e-05, 2.5305999999995776e-05, 2.4820000000001785e-05, 2.5806000000003215e-05, 2.529100000000367e-05, 2.515299999999998e-05, 2.4971999999998107e-05, 2.5000000000011124e-05, 2.512500000000084e-05, 2.568099999999962e-05, 2.5486000000005116e-05, 2.494500000001232e-05, 2.5472000000012485e-05, 2.5318999999995873e-05]</msg>
<status status="PASS" starttime="20201115 22:01:41.048" endtime="20201115 22:01:41.052"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:41.037" endtime="20201115 22:01:41.053"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:41.060" endtime="20201115 22:01:41.062"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:41.068" endtime="20201115 22:01:41.090"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:41.064" endtime="20201115 22:01:41.091"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:41.055" endtime="20201115 22:01:41.093"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:40.524" endtime="20201115 22:01:41.094"></status>
</kw>
<msg timestamp="20201115 22:01:41.094" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:41.117" endtime="20201115 22:01:41.148"></status>
</kw>
<msg timestamp="20201115 22:01:41.149" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:41.114" endtime="20201115 22:01:41.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:41.156" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:41.152" endtime="20201115 22:01:41.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:41.158" endtime="20201115 22:01:41.162"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:41.106" endtime="20201115 22:01:41.163"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:41.101" endtime="20201115 22:01:41.165"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:41.181" endtime="20201115 22:01:41.528"></status>
</kw>
<msg timestamp="20201115 22:01:41.535" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041517486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041542292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:41.178" endtime="20201115 22:01:41.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:41.553" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041517486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041542292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:41.538" endtime="20201115 22:01:41.554"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:41.556" endtime="20201115 22:01:41.561"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:41.171" endtime="20201115 22:01:41.563"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:41.166" endtime="20201115 22:01:41.564"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:41.575" level="INFO">${RESULT} = [{'time': 0.041542292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4806000000002215e-05, 'source_diff': 2.4806000000002215e-05}, {'time': 0.041940819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:41.566" endtime="20201115 22:01:41.575"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:41.605" level="INFO">${OVERHEAD} = {'diff': [2.4806000000002215e-05, 2.5152000000000507e-05, 2.5138000000000937e-05, 2.5624999999994402e-05, 2.4806000000002215e-05, 2.563900000000091e-05, 2.5179999999999647e-05, 2.4957999999998537e-05,...</msg>
<status status="PASS" starttime="20201115 22:01:41.577" endtime="20201115 22:01:41.605"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:41.615" level="INFO">NAME: 00-overhead-9-remove</msg>
<status status="PASS" starttime="20201115 22:01:41.613" endtime="20201115 22:01:41.616"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:41.621" level="INFO">VALUE: [2.4806000000002215e-05, 2.5152000000000507e-05, 2.5138000000000937e-05, 2.5624999999994402e-05, 2.4806000000002215e-05, 2.563900000000091e-05, 2.5179999999999647e-05, 2.4957999999998537e-05, 2.563900000000091e-05, 2.513900000000041e-05, 2.512500000000084e-05, 2.5486000000005116e-05, 2.5790999999997233e-05, 2.512500000000084e-05, 2.584700000000245e-05, 2.513900000000041e-05, 2.547299999999808e-05, 2.5597999999994736e-05, 2.534700000000195e-05, 2.516699999999955e-05, 2.5778000000004075e-05, 2.538900000000066e-05, 2.4972000000005046e-05, 2.545899999999851e-05, 2.547300000000502e-05, 2.547299999999808e-05, 2.5319999999995346e-05, 2.515299999999998e-05, 2.5485999999998177e-05, 2.5764000000004506e-05, 2.563900000000091e-05, 2.5138000000000937e-05, 2.515299999999998e-05, 2.581900000000331e-05, 2.4971999999998107e-05, 2.5860999999995082e-05, 2.5152000000000507e-05, 2.480500000000274e-05, 2.4804999999995803e-05, 2.5292000000003145e-05, 2.5000000000004186e-05, 2.4971999999998107e-05, 2.4804999999995803e-05, 2.566700000000005e-05, 2.5152000000000507e-05, 2.565300000000048e-05, 2.556900000000306e-05, 2.511100000000127e-05, 2.565300000000048e-05, 2.565300000000048e-05]</msg>
<status status="PASS" starttime="20201115 22:01:41.618" endtime="20201115 22:01:41.622"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:41.606" endtime="20201115 22:01:41.623"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:41.630" endtime="20201115 22:01:41.632"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:41.638" endtime="20201115 22:01:41.660"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:41.634" endtime="20201115 22:01:41.661"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:41.625" endtime="20201115 22:01:41.663"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:41.095" endtime="20201115 22:01:41.664"></status>
</kw>
<msg timestamp="20201115 22:01:41.664" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:41.687" endtime="20201115 22:01:41.717"></status>
</kw>
<msg timestamp="20201115 22:01:41.719" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:41.684" endtime="20201115 22:01:41.719"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:41.725" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:41.721" endtime="20201115 22:01:41.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:41.727" endtime="20201115 22:01:41.731"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:41.677" endtime="20201115 22:01:41.732"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:41.670" endtime="20201115 22:01:41.734"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:41.750" endtime="20201115 22:01:42.090"></status>
</kw>
<msg timestamp="20201115 22:01:42.097" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041604972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041630014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:41.747" endtime="20201115 22:01:42.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:42.115" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041604972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041630014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:42.099" endtime="20201115 22:01:42.115"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:42.117" endtime="20201115 22:01:42.124"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:41.740" endtime="20201115 22:01:42.126"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:41.735" endtime="20201115 22:01:42.128"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:42.138" level="INFO">${RESULT} = [{'time': 0.041630014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5042000000002895e-05, 'source_diff': 2.5042000000002895e-05}, {'time': 0.042026347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:42.129" endtime="20201115 22:01:42.139"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:42.168" level="INFO">${OVERHEAD} = {'diff': [2.5042000000002895e-05, 2.5332999999995442e-05, 2.4986000000004616e-05, 2.563900000000091e-05, 2.5598000000001675e-05, 2.5472000000005546e-05, 2.5485999999998177e-05, 2.563900000000091e-05, ...</msg>
<status status="PASS" starttime="20201115 22:01:42.140" endtime="20201115 22:01:42.169"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:42.180" level="INFO">NAME: 00-overhead-9-remove</msg>
<status status="PASS" starttime="20201115 22:01:42.177" endtime="20201115 22:01:42.180"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:42.185" level="INFO">VALUE: [2.5042000000002895e-05, 2.5332999999995442e-05, 2.4986000000004616e-05, 2.563900000000091e-05, 2.5598000000001675e-05, 2.5472000000005546e-05, 2.5485999999998177e-05, 2.563900000000091e-05, 2.4985999999997677e-05, 2.5291999999996206e-05, 2.513900000000041e-05, 2.5319999999995346e-05, 2.5084000000001605e-05, 2.4985999999997677e-05, 2.512500000000084e-05, 2.5485999999998177e-05, 2.5486000000005116e-05, 2.5790999999997233e-05, 2.565300000000048e-05, 2.5472000000005546e-05, 2.562500000000134e-05, 2.5096999999994762e-05, 2.5485999999998177e-05, 2.5834000000002355e-05, 2.5499999999997747e-05, 2.511100000000127e-05, 2.5707999999999287e-05, 2.497300000000452e-05, 2.5485999999998177e-05, 2.566700000000005e-05, 2.547300000000502e-05, 2.5804999999996803e-05, 2.4957999999998537e-05, 2.5790999999997233e-05, 2.4943999999998967e-05, 2.4972000000005046e-05, 2.5291999999996206e-05, 2.5638999999993972e-05, 2.512500000000084e-05, 2.5486000000005116e-05, 2.5152000000000507e-05, 2.4971999999998107e-05, 2.4971999999998107e-05, 2.5471999999998607e-05, 2.536100000000152e-05, 2.5527000000004352e-05, 2.533300000000238e-05, 2.513900000000041e-05, 2.4958000000005476e-05, 2.530500000000324e-05]</msg>
<status status="PASS" starttime="20201115 22:01:42.182" endtime="20201115 22:01:42.186"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:42.170" endtime="20201115 22:01:42.187"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:42.194" endtime="20201115 22:01:42.196"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:42.202" endtime="20201115 22:01:42.229"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:42.198" endtime="20201115 22:01:42.230"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:42.189" endtime="20201115 22:01:42.232"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:41.665" endtime="20201115 22:01:42.232"></status>
</kw>
<msg timestamp="20201115 22:01:42.233" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:42.256" endtime="20201115 22:01:42.285"></status>
</kw>
<msg timestamp="20201115 22:01:42.286" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:42.252" endtime="20201115 22:01:42.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:42.292" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:42.288" endtime="20201115 22:01:42.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:42.295" endtime="20201115 22:01:42.298"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:42.245" endtime="20201115 22:01:42.300"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:42.240" endtime="20201115 22:01:42.301"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:42.318" endtime="20201115 22:01:42.652"></status>
</kw>
<msg timestamp="20201115 22:01:42.659" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040675917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04070125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:01:42.314" endtime="20201115 22:01:42.659"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:42.677" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040675917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04070125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:01:42.661" endtime="20201115 22:01:42.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:42.679" endtime="20201115 22:01:42.685"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:42.307" endtime="20201115 22:01:42.686"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:42.303" endtime="20201115 22:01:42.688"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:42.698" level="INFO">${RESULT} = [{'time': 0.04070125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.533300000000238e-05, 'source_diff': 2.533300000000238e-05}, {'time': 0.041101653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:01:42.689" endtime="20201115 22:01:42.699"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:42.728" level="INFO">${OVERHEAD} = {'diff': [2.533300000000238e-05, 2.5306000000002715e-05, 2.513900000000041e-05, 2.5485999999998177e-05, 2.5680000000000147e-05, 2.5306000000002715e-05, 2.5292000000003145e-05, 2.5471999999998607e-05, ...</msg>
<status status="PASS" starttime="20201115 22:01:42.700" endtime="20201115 22:01:42.729"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:42.739" level="INFO">NAME: 00-overhead-9-remove</msg>
<status status="PASS" starttime="20201115 22:01:42.737" endtime="20201115 22:01:42.740"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:42.744" level="INFO">VALUE: [2.533300000000238e-05, 2.5306000000002715e-05, 2.513900000000041e-05, 2.5485999999998177e-05, 2.5680000000000147e-05, 2.5306000000002715e-05, 2.5292000000003145e-05, 2.5471999999998607e-05, 2.565300000000048e-05, 2.562500000000134e-05, 2.565300000000048e-05, 2.5486000000005116e-05, 2.566700000000005e-05, 2.562500000000134e-05, 2.5166000000000077e-05, 2.4985999999997677e-05, 2.512500000000084e-05, 2.513900000000041e-05, 2.5152000000000507e-05, 2.5486000000005116e-05, 2.4957999999998537e-05, 2.5805999999996276e-05, 2.512500000000084e-05, 2.534700000000195e-05, 2.548699999999765e-05, 2.5138000000000937e-05, 2.5818999999996373e-05, 2.529100000000367e-05, 2.479100000000317e-05, 2.5471999999998607e-05, 2.5805999999996276e-05, 2.4819999999994846e-05, 2.5250000000004436e-05, 2.495899999999801e-05, 2.565300000000048e-05, 2.5652000000001007e-05, 2.533300000000238e-05, 2.4805999999995276e-05, 2.5471999999998607e-05, 2.5471999999998607e-05, 2.5485999999998177e-05, 2.4790999999996233e-05, 2.5320000000002285e-05, 2.5096999999994762e-05, 2.581900000000331e-05, 2.588900000000116e-05, 2.581900000000331e-05, 2.5485999999998177e-05, 2.5291999999996206e-05, 2.5306000000002715e-05]</msg>
<status status="PASS" starttime="20201115 22:01:42.741" endtime="20201115 22:01:42.746"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:42.730" endtime="20201115 22:01:42.747"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:42.754" endtime="20201115 22:01:42.756"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:42.762" endtime="20201115 22:01:42.783"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:42.758" endtime="20201115 22:01:42.785"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:42.749" endtime="20201115 22:01:42.787"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:42.234" endtime="20201115 22:01:42.787"></status>
</kw>
<msg timestamp="20201115 22:01:42.788" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:42.810" endtime="20201115 22:01:42.839"></status>
</kw>
<msg timestamp="20201115 22:01:42.841" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:42.807" endtime="20201115 22:01:42.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:42.847" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:42.843" endtime="20201115 22:01:42.848"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:42.849" endtime="20201115 22:01:42.853"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:42.800" endtime="20201115 22:01:42.855"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:42.794" endtime="20201115 22:01:42.856"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:42.872" endtime="20201115 22:01:43.208"></status>
</kw>
<msg timestamp="20201115 22:01:43.215" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040328958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040354083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:42.869" endtime="20201115 22:01:43.215"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:43.233" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040328958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040354083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:43.217" endtime="20201115 22:01:43.234"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:43.235" endtime="20201115 22:01:43.241"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:42.862" endtime="20201115 22:01:43.242"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:42.857" endtime="20201115 22:01:43.244"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:43.254" level="INFO">${RESULT} = [{'time': 0.040354083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.512500000000084e-05, 'source_diff': 2.512500000000084e-05}, {'time': 0.040755556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:43.245" endtime="20201115 22:01:43.255"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:43.285" level="INFO">${OVERHEAD} = {'diff': [2.512500000000084e-05, 2.5348000000001425e-05, 2.4972000000005046e-05, 2.495900000000495e-05, 2.5471999999998607e-05, 2.513900000000041e-05, 2.5818999999996373e-05, 2.565300000000048e-05, 2....</msg>
<status status="PASS" starttime="20201115 22:01:43.257" endtime="20201115 22:01:43.285"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:43.295" level="INFO">NAME: 00-overhead-9-remove</msg>
<status status="PASS" starttime="20201115 22:01:43.293" endtime="20201115 22:01:43.296"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:43.301" level="INFO">VALUE: [2.512500000000084e-05, 2.5348000000001425e-05, 2.4972000000005046e-05, 2.495900000000495e-05, 2.5471999999998607e-05, 2.513900000000041e-05, 2.5818999999996373e-05, 2.565300000000048e-05, 2.5278000000003575e-05, 2.561100000000177e-05, 2.563900000000091e-05, 2.530500000000324e-05, 2.531900000000281e-05, 2.5320000000002285e-05, 2.5485999999998177e-05, 2.5306000000002715e-05, 2.5292000000003145e-05, 2.4958000000005476e-05, 2.562500000000134e-05, 2.4971999999998107e-05, 2.4791999999995706e-05, 2.512500000000084e-05, 2.5124999999993902e-05, 2.563900000000091e-05, 2.530500000000324e-05, 2.5471999999998607e-05, 2.5486000000005116e-05, 2.5818999999996373e-05, 2.5472000000005546e-05, 2.5318999999995873e-05, 2.4985999999997677e-05, 2.513900000000041e-05, 2.4806000000002215e-05, 2.563900000000091e-05, 2.5485999999998177e-05, 2.5471999999998607e-05, 2.512500000000084e-05, 2.533300000000238e-05, 2.515299999999998e-05, 2.531900000000281e-05, 2.5263999999997067e-05, 2.4957999999998537e-05, 2.565300000000048e-05, 2.516699999999955e-05, 2.515299999999998e-05, 2.5485999999998177e-05, 2.5471999999998607e-05, 2.547299999999808e-05, 2.5332999999995442e-05, 2.4915999999999827e-05]</msg>
<status status="PASS" starttime="20201115 22:01:43.298" endtime="20201115 22:01:43.302"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:43.286" endtime="20201115 22:01:43.304"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:43.310" endtime="20201115 22:01:43.313"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:43.318" endtime="20201115 22:01:43.340"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:43.314" endtime="20201115 22:01:43.342"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:43.306" endtime="20201115 22:01:43.343"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:42.789" endtime="20201115 22:01:43.344"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:40.520" endtime="20201115 22:01:43.344"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:40.519" endtime="20201115 22:01:43.345"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:43.350" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:43.372" endtime="20201115 22:01:43.404"></status>
</kw>
<msg timestamp="20201115 22:01:43.405" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:43.369" endtime="20201115 22:01:43.405"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:43.411" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:43.407" endtime="20201115 22:01:43.411"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:43.413" endtime="20201115 22:01:43.417"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:43.362" endtime="20201115 22:01:43.418"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:43.356" endtime="20201115 22:01:43.420"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:43.436" endtime="20201115 22:01:43.772"></status>
</kw>
<msg timestamp="20201115 22:01:43.779" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04587925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045904972, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:01:43.433" endtime="20201115 22:01:43.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:43.797" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04587925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045904972, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:01:43.782" endtime="20201115 22:01:43.798"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:43.800" endtime="20201115 22:01:43.804"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:43.426" endtime="20201115 22:01:43.805"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:43.421" endtime="20201115 22:01:43.807"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:43.817" level="INFO">${RESULT} = [{'time': 0.045904972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5721999999998857e-05, 'source_diff': 2.5721999999998857e-05}, {'time': 0.046339472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:43.808" endtime="20201115 22:01:43.818"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:43.847" level="INFO">${OVERHEAD} = {'diff': [2.5721999999998857e-05, 2.487500000000059e-05, 2.513900000000041e-05, 2.5735999999998427e-05, 2.5707999999999287e-05, 2.490299999999973e-05, 2.5236000000004866e-05, 2.508300000000213e-05, 2....</msg>
<status status="PASS" starttime="20201115 22:01:43.819" endtime="20201115 22:01:43.848"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:43.858" level="INFO">NAME: 00-overhead-10-remove</msg>
<status status="PASS" starttime="20201115 22:01:43.856" endtime="20201115 22:01:43.859"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:43.864" level="INFO">VALUE: [2.5721999999998857e-05, 2.487500000000059e-05, 2.513900000000041e-05, 2.5735999999998427e-05, 2.5707999999999287e-05, 2.490299999999973e-05, 2.5236000000004866e-05, 2.508300000000213e-05, 2.5721999999998857e-05, 2.5110999999994332e-05, 2.55970000000022e-05, 2.5055999999995526e-05, 2.5028000000003325e-05, 2.5166000000000077e-05, 2.5221999999998357e-05, 2.5388000000001187e-05, 2.565300000000048e-05, 2.5070000000002035e-05, 2.5221999999998357e-05, 2.5554999999996553e-05, 2.5056000000002465e-05, 2.5054999999996053e-05, 2.565300000000048e-05, 2.488900000000016e-05, 2.556900000000306e-05, 2.5222000000005296e-05, 2.5056000000002465e-05, 2.488900000000016e-05, 2.5693999999999717e-05, 2.5374999999994152e-05, 2.5542000000003395e-05, 2.5556000000002965e-05, 2.5207999999998787e-05, 2.57369999999979e-05, 2.5569999999995596e-05, 2.543100000000631e-05, 2.5208000000005726e-05, 2.540300000000023e-05, 2.5624999999994402e-05, 2.5055999999995526e-05, 2.538900000000066e-05, 2.5278000000003575e-05, 2.538900000000066e-05, 2.504100000000342e-05, 2.5042000000002895e-05, 2.5541999999989518e-05, 2.5179999999999647e-05, 2.5042000000002895e-05, 2.486100000000102e-05, 2.5721999999991918e-05]</msg>
<status status="PASS" starttime="20201115 22:01:43.861" endtime="20201115 22:01:43.865"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:43.849" endtime="20201115 22:01:43.867"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:43.873" endtime="20201115 22:01:43.876"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:43.881" endtime="20201115 22:01:43.903"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:43.877" endtime="20201115 22:01:43.905"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:43.869" endtime="20201115 22:01:43.906"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:43.351" endtime="20201115 22:01:43.907"></status>
</kw>
<msg timestamp="20201115 22:01:43.907" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:43.930" endtime="20201115 22:01:43.961"></status>
</kw>
<msg timestamp="20201115 22:01:43.962" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:43.927" endtime="20201115 22:01:43.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:43.969" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:43.965" endtime="20201115 22:01:43.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:43.971" endtime="20201115 22:01:43.975"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:43.920" endtime="20201115 22:01:43.976"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:43.914" endtime="20201115 22:01:43.978"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:43.994" endtime="20201115 22:01:44.330"></status>
</kw>
<msg timestamp="20201115 22:01:44.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040636472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040661542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:43.991" endtime="20201115 22:01:44.337"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:44.355" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040636472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040661542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:44.339" endtime="20201115 22:01:44.355"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:44.357" endtime="20201115 22:01:44.364"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:43.984" endtime="20201115 22:01:44.366"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:43.979" endtime="20201115 22:01:44.367"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:44.378" level="INFO">${RESULT} = [{'time': 0.040661542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5070000000002035e-05, 'source_diff': 2.5070000000002035e-05}, {'time': 0.041097944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:44.369" endtime="20201115 22:01:44.378"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:44.408" level="INFO">${OVERHEAD} = {'diff': [2.5070000000002035e-05, 2.5526999999997413e-05, 2.5666000000000577e-05, 2.5083999999994666e-05, 2.5721999999998857e-05, 2.5721999999998857e-05, 2.5221999999998357e-05, 2.5068999999995623e-05...</msg>
<status status="PASS" starttime="20201115 22:01:44.380" endtime="20201115 22:01:44.409"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:44.419" level="INFO">NAME: 00-overhead-10-remove</msg>
<status status="PASS" starttime="20201115 22:01:44.417" endtime="20201115 22:01:44.420"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:44.425" level="INFO">VALUE: [2.5070000000002035e-05, 2.5526999999997413e-05, 2.5666000000000577e-05, 2.5083999999994666e-05, 2.5721999999998857e-05, 2.5721999999998857e-05, 2.5221999999998357e-05, 2.5068999999995623e-05, 2.5764000000004506e-05, 2.5526999999997413e-05, 2.4888000000000687e-05, 2.5070000000002035e-05, 2.5249999999997497e-05, 2.538900000000066e-05, 2.537500000000109e-05, 2.5056000000002465e-05, 2.488900000000016e-05, 2.570899999999876e-05, 2.488900000000016e-05, 2.5221999999998357e-05, 2.5179999999999647e-05, 2.5362000000000995e-05, 2.5736000000005366e-05, 2.5221999999998357e-05, 2.5707999999999287e-05, 2.5388000000001187e-05, 2.554100000000392e-05, 2.537500000000109e-05, 2.5041999999995956e-05, 2.538900000000066e-05, 2.537500000000109e-05, 2.4888999999993222e-05, 2.5721999999998857e-05, 2.487500000000059e-05, 2.5540999999996983e-05, 2.5693999999999717e-05, 2.5054999999996053e-05, 2.516699999999955e-05, 2.540300000000023e-05, 2.5235999999997927e-05, 2.5221999999998357e-05, 2.5069999999995096e-05, 2.5735999999998427e-05, 2.5556000000002965e-05, 2.5221999999998357e-05, 2.537500000000109e-05, 2.5221999999998357e-05, 2.5193999999999217e-05, 2.5540999999996983e-05, 2.556900000000306e-05]</msg>
<status status="PASS" starttime="20201115 22:01:44.422" endtime="20201115 22:01:44.426"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.410" endtime="20201115 22:01:44.427"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:44.434" endtime="20201115 22:01:44.436"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:44.442" endtime="20201115 22:01:44.464"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.437" endtime="20201115 22:01:44.466"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.429" endtime="20201115 22:01:44.467"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:43.909" endtime="20201115 22:01:44.468"></status>
</kw>
<msg timestamp="20201115 22:01:44.468" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:44.491" endtime="20201115 22:01:44.522"></status>
</kw>
<msg timestamp="20201115 22:01:44.524" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:44.488" endtime="20201115 22:01:44.524"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:44.530" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:44.526" endtime="20201115 22:01:44.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:44.532" endtime="20201115 22:01:44.536"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.481" endtime="20201115 22:01:44.537"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.475" endtime="20201115 22:01:44.539"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:44.555" endtime="20201115 22:01:44.888"></status>
</kw>
<msg timestamp="20201115 22:01:44.895" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041465083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041490292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:44.552" endtime="20201115 22:01:44.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:44.913" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041465083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041490292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:44.897" endtime="20201115 22:01:44.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:44.916" endtime="20201115 22:01:44.921"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.545" endtime="20201115 22:01:44.922"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.540" endtime="20201115 22:01:44.924"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:44.935" level="INFO">${RESULT} = [{'time': 0.041490292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.520899999999826e-05, 'source_diff': 2.520899999999826e-05}, {'time': 0.041922833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:44.926" endtime="20201115 22:01:44.936"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:44.965" level="INFO">${OVERHEAD} = {'diff': [2.520899999999826e-05, 2.505500000000299e-05, 2.5582999999995693e-05, 2.5735999999998427e-05, 2.4888000000000687e-05, 2.522300000000477e-05, 2.54169999999998e-05, 2.544499999999894e-05, 2.54...</msg>
<status status="PASS" starttime="20201115 22:01:44.938" endtime="20201115 22:01:44.966"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:44.976" level="INFO">NAME: 00-overhead-10-remove</msg>
<status status="PASS" starttime="20201115 22:01:44.974" endtime="20201115 22:01:44.977"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:44.982" level="INFO">VALUE: [2.520899999999826e-05, 2.505500000000299e-05, 2.5582999999995693e-05, 2.5735999999998427e-05, 2.4888000000000687e-05, 2.522300000000477e-05, 2.54169999999998e-05, 2.544499999999894e-05, 2.540300000000023e-05, 2.537500000000109e-05, 2.544499999999894e-05, 2.570899999999876e-05, 2.5221999999998357e-05, 2.5555999999996026e-05, 2.555500000000349e-05, 2.5735999999998427e-05, 2.490299999999973e-05, 2.504100000000342e-05, 2.5042000000002895e-05, 2.5721999999998857e-05, 2.537500000000109e-05, 2.504100000000342e-05, 2.5318999999995873e-05, 2.5070000000002035e-05, 2.537500000000109e-05, 2.5055999999995526e-05, 2.57369999999979e-05, 2.5555999999996026e-05, 2.5000000000004186e-05, 2.490299999999973e-05, 2.561100000000177e-05, 2.5054999999996053e-05, 2.5749999999997997e-05, 2.522300000000477e-05, 2.5054999999996053e-05, 2.5056000000002465e-05, 2.5098000000001175e-05, 2.538900000000066e-05, 2.505500000000299e-05, 2.5278000000003575e-05, 2.5402000000000757e-05, 2.5555999999996026e-05, 2.555500000000349e-05, 2.538900000000066e-05, 2.495899999999801e-05, 2.5070000000002035e-05, 2.540300000000023e-05, 2.556900000000306e-05, 2.5056000000002465e-05, 2.5236000000011805e-05]</msg>
<status status="PASS" starttime="20201115 22:01:44.979" endtime="20201115 22:01:44.982"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.967" endtime="20201115 22:01:44.984"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:44.990" endtime="20201115 22:01:44.993"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:44.999" endtime="20201115 22:01:45.021"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.995" endtime="20201115 22:01:45.022"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.986" endtime="20201115 22:01:45.024"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.470" endtime="20201115 22:01:45.025"></status>
</kw>
<msg timestamp="20201115 22:01:45.025" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:45.048" endtime="20201115 22:01:45.079"></status>
</kw>
<msg timestamp="20201115 22:01:45.080" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:45.044" endtime="20201115 22:01:45.080"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:45.086" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:45.082" endtime="20201115 22:01:45.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:45.089" endtime="20201115 22:01:45.092"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:45.037" endtime="20201115 22:01:45.094"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:45.031" endtime="20201115 22:01:45.095"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:45.112" endtime="20201115 22:01:45.446"></status>
</kw>
<msg timestamp="20201115 22:01:45.453" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040718819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040743889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:45.108" endtime="20201115 22:01:45.454"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:45.471" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040718819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040743889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:45.456" endtime="20201115 22:01:45.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:45.474" endtime="20201115 22:01:45.480"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:45.101" endtime="20201115 22:01:45.481"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:45.097" endtime="20201115 22:01:45.483"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:45.493" level="INFO">${RESULT} = [{'time': 0.040743889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5069999999995096e-05, 'source_diff': 2.5069999999995096e-05}, {'time': 0.0411795, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:45.484" endtime="20201115 22:01:45.494"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:45.524" level="INFO">${OVERHEAD} = {'diff': [2.5069999999995096e-05, 2.558300000000263e-05, 2.5235999999997927e-05, 2.5207999999998787e-05, 2.538900000000066e-05, 2.5041999999995956e-05, 2.519499999999869e-05, 2.5056000000002465e-05, 2...</msg>
<status status="PASS" starttime="20201115 22:01:45.495" endtime="20201115 22:01:45.524"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:45.534" level="INFO">NAME: 00-overhead-10-remove</msg>
<status status="PASS" starttime="20201115 22:01:45.532" endtime="20201115 22:01:45.535"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:45.540" level="INFO">VALUE: [2.5069999999995096e-05, 2.558300000000263e-05, 2.5235999999997927e-05, 2.5207999999998787e-05, 2.538900000000066e-05, 2.5041999999995956e-05, 2.519499999999869e-05, 2.5056000000002465e-05, 2.5736000000005366e-05, 2.5179999999999647e-05, 2.572299999999833e-05, 2.505500000000299e-05, 2.490199999999332e-05, 2.5735999999998427e-05, 2.5222000000005296e-05, 2.487500000000059e-05, 2.5041999999995956e-05, 2.5221999999998357e-05, 2.5749999999997997e-05, 2.5207999999998787e-05, 2.5221999999998357e-05, 2.5235999999997927e-05, 2.538900000000066e-05, 2.5499999999997747e-05, 2.5721999999998857e-05, 2.5554999999996553e-05, 2.555500000000349e-05, 2.5026999999996913e-05, 2.4999999999997247e-05, 2.50970000000017e-05, 2.488900000000016e-05, 2.5402000000000757e-05, 2.504100000000342e-05, 2.5570000000002535e-05, 2.5528000000003825e-05, 2.5070000000002035e-05, 2.5582999999995693e-05, 2.5542000000003395e-05, 2.490299999999973e-05, 2.5221999999998357e-05, 2.5763999999997567e-05, 2.49169999999993e-05, 2.488900000000016e-05, 2.5429999999999897e-05, 2.511100000000127e-05, 2.488900000000016e-05, 2.5735999999998427e-05, 2.5569999999995596e-05, 2.5221999999998357e-05, 2.5569999999995596e-05]</msg>
<status status="PASS" starttime="20201115 22:01:45.537" endtime="20201115 22:01:45.541"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:45.525" endtime="20201115 22:01:45.542"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:45.548" endtime="20201115 22:01:45.551"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:45.557" endtime="20201115 22:01:45.578"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:45.552" endtime="20201115 22:01:45.580"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:45.544" endtime="20201115 22:01:45.581"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:45.026" endtime="20201115 22:01:45.582"></status>
</kw>
<msg timestamp="20201115 22:01:45.582" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:45.605" endtime="20201115 22:01:45.637"></status>
</kw>
<msg timestamp="20201115 22:01:45.638" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:45.602" endtime="20201115 22:01:45.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:45.644" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:45.640" endtime="20201115 22:01:45.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:45.646" endtime="20201115 22:01:45.650"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:45.595" endtime="20201115 22:01:45.651"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:45.589" endtime="20201115 22:01:45.653"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:45.669" endtime="20201115 22:01:46.003"></status>
</kw>
<msg timestamp="20201115 22:01:46.011" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040725931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040750764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:45.666" endtime="20201115 22:01:46.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:46.029" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040725931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040750764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:46.014" endtime="20201115 22:01:46.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:46.032" endtime="20201115 22:01:46.037"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:45.659" endtime="20201115 22:01:46.039"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:45.654" endtime="20201115 22:01:46.040"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:46.051" level="INFO">${RESULT} = [{'time': 0.040750764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.483300000000188e-05, 'source_diff': 2.483300000000188e-05}, {'time': 0.041185389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:46.042" endtime="20201115 22:01:46.051"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:46.081" level="INFO">${OVERHEAD} = {'diff': [2.483300000000188e-05, 2.5042000000002895e-05, 2.5568999999996123e-05, 2.5735999999998427e-05, 2.5013999999996817e-05, 2.5222000000005296e-05, 2.5068999999995623e-05, 2.5084000000001605e-05,...</msg>
<status status="PASS" starttime="20201115 22:01:46.053" endtime="20201115 22:01:46.081"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:46.092" level="INFO">NAME: 00-overhead-10-remove</msg>
<status status="PASS" starttime="20201115 22:01:46.090" endtime="20201115 22:01:46.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:46.097" level="INFO">VALUE: [2.483300000000188e-05, 2.5042000000002895e-05, 2.5568999999996123e-05, 2.5735999999998427e-05, 2.5013999999996817e-05, 2.5222000000005296e-05, 2.5068999999995623e-05, 2.5084000000001605e-05, 2.5221999999998357e-05, 2.558300000000263e-05, 2.5056000000002465e-05, 2.5249999999997497e-05, 2.5708000000006226e-05, 2.5056000000002465e-05, 2.533300000000238e-05, 2.486100000000102e-05, 2.518099999999912e-05, 2.5250000000004436e-05, 2.5221999999998357e-05, 2.537500000000109e-05, 2.522300000000477e-05, 2.5056000000002465e-05, 2.505500000000299e-05, 2.5235999999997927e-05, 2.556900000000306e-05, 2.5402999999993292e-05, 2.572299999999833e-05, 2.4902000000000257e-05, 2.570899999999876e-05, 2.554100000000392e-05, 2.5235999999997927e-05, 2.5721999999998857e-05, 2.5735999999998427e-05, 2.5221999999998357e-05, 2.5554999999996553e-05, 2.538900000000066e-05, 2.506900000000256e-05, 2.5721999999998857e-05, 2.4902000000000257e-05, 2.540300000000023e-05, 2.5582999999995693e-05, 2.5249999999997497e-05, 2.5735999999998427e-05, 2.555500000000349e-05, 2.5235999999997927e-05, 2.4888999999993222e-05, 2.5556000000002965e-05, 2.5556000000002965e-05, 2.487500000000059e-05, 2.5721999999998857e-05]</msg>
<status status="PASS" starttime="20201115 22:01:46.094" endtime="20201115 22:01:46.098"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.083" endtime="20201115 22:01:46.100"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:46.106" endtime="20201115 22:01:46.108"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:46.114" endtime="20201115 22:01:46.136"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.110" endtime="20201115 22:01:46.137"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.101" endtime="20201115 22:01:46.139"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:45.584" endtime="20201115 22:01:46.140"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:43.347" endtime="20201115 22:01:46.140"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:43.346" endtime="20201115 22:01:46.140"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:46.145" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:46.168" endtime="20201115 22:01:46.201"></status>
</kw>
<msg timestamp="20201115 22:01:46.202" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:46.165" endtime="20201115 22:01:46.202"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:46.208" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:46.204" endtime="20201115 22:01:46.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:46.210" endtime="20201115 22:01:46.215"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.157" endtime="20201115 22:01:46.217"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.152" endtime="20201115 22:01:46.218"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:46.234" endtime="20201115 22:01:46.574"></status>
</kw>
<msg timestamp="20201115 22:01:46.581" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045873569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045899722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:46.231" endtime="20201115 22:01:46.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:46.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045873569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045899722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:46.583" endtime="20201115 22:01:46.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:46.601" endtime="20201115 22:01:46.605"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.224" endtime="20201115 22:01:46.606"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.219" endtime="20201115 22:01:46.608"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:46.618" level="INFO">${RESULT} = [{'time': 0.045899722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6152999999994042e-05, 'source_diff': 2.6152999999994042e-05}, {'time': 0.046374472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:46.609" endtime="20201115 22:01:46.619"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:46.648" level="INFO">${OVERHEAD} = {'diff': [2.6152999999994042e-05, 2.5985999999998677e-05, 2.586100000000202e-05, 2.5985999999998677e-05, 2.616700000000055e-05, 2.6471999999999607e-05, 2.6152000000001507e-05, 2.6818999999997373e-05, ...</msg>
<status status="PASS" starttime="20201115 22:01:46.620" endtime="20201115 22:01:46.649"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:46.659" level="INFO">NAME: 00-overhead-11-remove</msg>
<status status="PASS" starttime="20201115 22:01:46.657" endtime="20201115 22:01:46.660"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:46.665" level="INFO">VALUE: [2.6152999999994042e-05, 2.5985999999998677e-05, 2.586100000000202e-05, 2.5985999999998677e-05, 2.616700000000055e-05, 2.6471999999999607e-05, 2.6152000000001507e-05, 2.6818999999997373e-05, 2.665300000000148e-05, 2.5819999999995846e-05, 2.666700000000105e-05, 2.6014000000004756e-05, 2.6263999999998067e-05, 2.5971999999999107e-05, 2.6430000000000897e-05, 2.6320000000003285e-05, 2.6819999999996846e-05, 2.666700000000105e-05, 2.6820000000003785e-05, 2.6834000000003355e-05, 2.5971999999999107e-05, 2.6556000000003965e-05, 2.6721999999999857e-05, 2.662500000000234e-05, 2.662500000000234e-05, 2.606900000000356e-05, 2.615300000000098e-05, 2.5972000000006046e-05, 2.6334000000002855e-05, 2.6305999999996776e-05, 2.613900000000141e-05, 2.5819999999995846e-05, 2.681900000000431e-05, 2.663900000000191e-05, 2.5999999999998247e-05, 2.5999999999998247e-05, 2.6000000000012125e-05, 2.6319999999996346e-05, 2.6499999999998747e-05, 2.6070000000003035e-05, 2.5806000000003215e-05, 2.5986000000005616e-05, 2.6152000000001507e-05, 2.6304999999990364e-05, 2.6166999999993612e-05, 2.6124999999987963e-05, 2.6818999999997373e-05, 2.6333999999988977e-05, 2.5971999999999107e-05, 2.5985999999991738e-05]</msg>
<status status="PASS" starttime="20201115 22:01:46.661" endtime="20201115 22:01:46.665"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.650" endtime="20201115 22:01:46.667"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:46.673" endtime="20201115 22:01:46.676"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:46.681" endtime="20201115 22:01:46.703"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.677" endtime="20201115 22:01:46.705"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.669" endtime="20201115 22:01:46.706"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.146" endtime="20201115 22:01:46.707"></status>
</kw>
<msg timestamp="20201115 22:01:46.707" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:46.730" endtime="20201115 22:01:46.763"></status>
</kw>
<msg timestamp="20201115 22:01:46.764" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:46.727" endtime="20201115 22:01:46.765"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:46.771" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:46.767" endtime="20201115 22:01:46.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:46.773" endtime="20201115 22:01:46.777"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.719" endtime="20201115 22:01:46.778"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.714" endtime="20201115 22:01:46.780"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:46.796" endtime="20201115 22:01:47.133"></status>
</kw>
<msg timestamp="20201115 22:01:47.140" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040558556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040584708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:46.793" endtime="20201115 22:01:47.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:47.159" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040558556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040584708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:47.143" endtime="20201115 22:01:47.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:47.161" endtime="20201115 22:01:47.166"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.786" endtime="20201115 22:01:47.168"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.781" endtime="20201115 22:01:47.169"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:47.180" level="INFO">${RESULT} = [{'time': 0.040584708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.615199999999457e-05, 'source_diff': 2.615199999999457e-05}, {'time': 0.041057167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:47.171" endtime="20201115 22:01:47.180"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:47.210" level="INFO">${OVERHEAD} = {'diff': [2.615199999999457e-05, 2.6305999999996776e-05, 2.606900000000356e-05, 2.6624999999995402e-05, 2.669500000000019e-05, 2.6430000000000897e-05, 2.6513999999998317e-05, 2.6624999999995402e-05, 2...</msg>
<status status="PASS" starttime="20201115 22:01:47.182" endtime="20201115 22:01:47.210"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:47.221" level="INFO">NAME: 00-overhead-11-remove</msg>
<status status="PASS" starttime="20201115 22:01:47.218" endtime="20201115 22:01:47.221"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:47.226" level="INFO">VALUE: [2.615199999999457e-05, 2.6305999999996776e-05, 2.606900000000356e-05, 2.6624999999995402e-05, 2.669500000000019e-05, 2.6430000000000897e-05, 2.6513999999998317e-05, 2.6624999999995402e-05, 2.6666000000001577e-05, 2.6306000000003715e-05, 2.6804999999997803e-05, 2.662500000000234e-05, 2.6556000000003965e-05, 2.665300000000148e-05, 2.6320000000003285e-05, 2.6791999999997707e-05, 2.597299999999858e-05, 2.5971999999999107e-05, 2.5806000000003215e-05, 2.6499999999998747e-05, 2.6319999999996346e-05, 2.6320000000003285e-05, 2.662500000000234e-05, 2.5971999999999107e-05, 2.5805999999996276e-05, 2.6513999999998317e-05, 2.5971999999999107e-05, 2.6166000000001077e-05, 2.6306000000003715e-05, 2.615300000000098e-05, 2.6305999999996776e-05, 2.663900000000191e-05, 2.6305999999996776e-05, 2.662500000000234e-05, 2.5971999999999107e-05, 2.6444000000000467e-05, 2.5985999999998677e-05, 2.5986000000005616e-05, 2.597299999999858e-05, 2.663900000000191e-05, 2.6471999999999607e-05, 2.663900000000191e-05, 2.663900000000191e-05, 2.665300000000148e-05, 2.648700000000559e-05, 2.6318999999996873e-05, 2.598700000000509e-05, 2.615300000000098e-05, 2.5818999999996373e-05, 2.6638999999994972e-05]</msg>
<status status="PASS" starttime="20201115 22:01:47.223" endtime="20201115 22:01:47.227"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.212" endtime="20201115 22:01:47.228"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:47.235" endtime="20201115 22:01:47.237"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:47.243" endtime="20201115 22:01:47.265"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.239" endtime="20201115 22:01:47.266"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.230" endtime="20201115 22:01:47.268"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.708" endtime="20201115 22:01:47.268"></status>
</kw>
<msg timestamp="20201115 22:01:47.269" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:47.296" endtime="20201115 22:01:47.330"></status>
</kw>
<msg timestamp="20201115 22:01:47.331" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:47.293" endtime="20201115 22:01:47.331"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:47.337" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:47.333" endtime="20201115 22:01:47.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:47.340" endtime="20201115 22:01:47.344"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.286" endtime="20201115 22:01:47.345"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.276" endtime="20201115 22:01:47.347"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:47.363" endtime="20201115 22:01:47.699"></status>
</kw>
<msg timestamp="20201115 22:01:47.706" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045260472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045286292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:47.360" endtime="20201115 22:01:47.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:47.724" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045260472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045286292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:47.709" endtime="20201115 22:01:47.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:47.727" endtime="20201115 22:01:47.732"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.353" endtime="20201115 22:01:47.734"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.348" endtime="20201115 22:01:47.735"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:47.746" level="INFO">${RESULT} = [{'time': 0.045286292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5819999999995846e-05, 'source_diff': 2.5819999999995846e-05}, {'time': 0.045755944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:47.737" endtime="20201115 22:01:47.746"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:47.776" level="INFO">${OVERHEAD} = {'diff': [2.5819999999995846e-05, 2.6499999999998747e-05, 2.631900000000381e-05, 2.6499999999998747e-05, 2.6485999999999177e-05, 2.6485999999999177e-05, 2.6318999999996873e-05, 2.5971999999999107e-05,...</msg>
<status status="PASS" starttime="20201115 22:01:47.748" endtime="20201115 22:01:47.776"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:47.787" level="INFO">NAME: 00-overhead-11-remove</msg>
<status status="PASS" starttime="20201115 22:01:47.784" endtime="20201115 22:01:47.787"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:47.792" level="INFO">VALUE: [2.5819999999995846e-05, 2.6499999999998747e-05, 2.631900000000381e-05, 2.6499999999998747e-05, 2.6485999999999177e-05, 2.6485999999999177e-05, 2.6318999999996873e-05, 2.5971999999999107e-05, 2.6471999999999607e-05, 2.5804999999996803e-05, 2.5999999999998247e-05, 2.6318999999996873e-05, 2.666700000000105e-05, 2.6500000000005686e-05, 2.665300000000148e-05, 2.5999999999998247e-05, 2.5985999999998677e-05, 2.6652000000002007e-05, 2.5971999999999107e-05, 2.631900000000381e-05, 2.668100000000062e-05, 2.648700000000559e-05, 2.65970000000032e-05, 2.6041999999996956e-05, 2.647299999999908e-05, 2.631900000000381e-05, 2.6166000000001077e-05, 2.615300000000098e-05, 2.615300000000098e-05, 2.6318999999996873e-05, 2.595899999999901e-05, 2.5736000000005366e-05, 2.663900000000191e-05, 2.608300000000313e-05, 2.663900000000191e-05, 2.6485999999999177e-05, 2.5820000000002785e-05, 2.6499999999998747e-05, 2.6138999999994472e-05, 2.6306000000003715e-05, 2.6666999999994112e-05, 2.615300000000098e-05, 2.6138999999994472e-05, 2.5971999999999107e-05, 2.633300000000338e-05, 2.5735999999998427e-05, 2.598700000000509e-05, 2.662500000000234e-05, 2.6152999999987103e-05, 2.6138999999994472e-05]</msg>
<status status="PASS" starttime="20201115 22:01:47.789" endtime="20201115 22:01:47.793"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.778" endtime="20201115 22:01:47.794"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:47.801" endtime="20201115 22:01:47.803"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:47.809" endtime="20201115 22:01:47.831"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.804" endtime="20201115 22:01:47.833"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.796" endtime="20201115 22:01:47.834"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.270" endtime="20201115 22:01:47.835"></status>
</kw>
<msg timestamp="20201115 22:01:47.835" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:47.858" endtime="20201115 22:01:47.891"></status>
</kw>
<msg timestamp="20201115 22:01:47.892" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:47.855" endtime="20201115 22:01:47.893"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:47.899" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:47.895" endtime="20201115 22:01:47.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:47.901" endtime="20201115 22:01:47.905"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.848" endtime="20201115 22:01:47.906"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.842" endtime="20201115 22:01:47.908"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:47.924" endtime="20201115 22:01:48.259"></status>
</kw>
<msg timestamp="20201115 22:01:48.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040851139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040877792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:47.921" endtime="20201115 22:01:48.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:48.284" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040851139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040877792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:48.269" endtime="20201115 22:01:48.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:48.287" endtime="20201115 22:01:48.292"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.914" endtime="20201115 22:01:48.294"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.909" endtime="20201115 22:01:48.295"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:48.306" level="INFO">${RESULT} = [{'time': 0.040877792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.665300000000148e-05, 'source_diff': 2.665300000000148e-05}, {'time': 0.041351472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:48.297" endtime="20201115 22:01:48.306"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:48.336" level="INFO">${OVERHEAD} = {'diff': [2.665300000000148e-05, 2.663900000000191e-05, 2.612500000000184e-05, 2.613900000000141e-05, 2.613900000000141e-05, 2.615300000000098e-05, 2.6804999999997803e-05, 2.6000000000005186e-05, 2.62...</msg>
<status status="PASS" starttime="20201115 22:01:48.308" endtime="20201115 22:01:48.336"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:48.347" level="INFO">NAME: 00-overhead-11-remove</msg>
<status status="PASS" starttime="20201115 22:01:48.344" endtime="20201115 22:01:48.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:48.353" level="INFO">VALUE: [2.665300000000148e-05, 2.663900000000191e-05, 2.612500000000184e-05, 2.613900000000141e-05, 2.613900000000141e-05, 2.615300000000098e-05, 2.6804999999997803e-05, 2.6000000000005186e-05, 2.6291999999997206e-05, 2.6486000000006116e-05, 2.615300000000098e-05, 2.594499999999944e-05, 2.6319999999996346e-05, 2.663900000000191e-05, 2.6138000000001937e-05, 2.668100000000062e-05, 2.6805999999997276e-05, 2.6014000000004756e-05, 2.580500000000374e-05, 2.6320000000003285e-05, 2.5972000000006046e-05, 2.615300000000098e-05, 2.5985999999998677e-05, 2.647299999999908e-05, 2.5777000000004602e-05, 2.662500000000234e-05, 2.6624999999995402e-05, 2.594499999999944e-05, 2.663900000000191e-05, 2.6819999999996846e-05, 2.6499999999998747e-05, 2.6652999999994542e-05, 2.6471999999999607e-05, 2.612500000000184e-05, 2.6638999999994972e-05, 2.6610999999995832e-05, 2.6471999999999607e-05, 2.6221999999999357e-05, 2.5985999999998677e-05, 2.5957999999999537e-05, 2.6305999999996776e-05, 2.6694000000000717e-05, 2.6666000000001577e-05, 2.6319999999996346e-05, 2.665300000000148e-05, 2.6499999999998747e-05, 2.6166999999993612e-05, 2.6805999999990338e-05, 2.6290999999997733e-05, 2.6305999999989838e-05]</msg>
<status status="PASS" starttime="20201115 22:01:48.349" endtime="20201115 22:01:48.354"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.337" endtime="20201115 22:01:48.356"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:48.362" endtime="20201115 22:01:48.365"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:48.371" endtime="20201115 22:01:48.393"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.367" endtime="20201115 22:01:48.395"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.358" endtime="20201115 22:01:48.396"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.836" endtime="20201115 22:01:48.397"></status>
</kw>
<msg timestamp="20201115 22:01:48.397" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:48.420" endtime="20201115 22:01:48.454"></status>
</kw>
<msg timestamp="20201115 22:01:48.455" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:48.417" endtime="20201115 22:01:48.455"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:48.461" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:48.457" endtime="20201115 22:01:48.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:48.463" endtime="20201115 22:01:48.467"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.410" endtime="20201115 22:01:48.469"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.404" endtime="20201115 22:01:48.470"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:48.486" endtime="20201115 22:01:48.821"></status>
</kw>
<msg timestamp="20201115 22:01:48.828" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040993069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041019556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:48.483" endtime="20201115 22:01:48.828"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:48.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040993069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041019556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:48.830" endtime="20201115 22:01:48.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:48.848" endtime="20201115 22:01:48.855"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.476" endtime="20201115 22:01:48.857"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.471" endtime="20201115 22:01:48.859"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:48.869" level="INFO">${RESULT} = [{'time': 0.041019556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.648699999999865e-05, 'source_diff': 2.648699999999865e-05}, {'time': 0.041491278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:48.860" endtime="20201115 22:01:48.870"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:48.899" level="INFO">${OVERHEAD} = {'diff': [2.648699999999865e-05, 2.6013999999997817e-05, 2.6819999999996846e-05, 2.6819999999996846e-05, 2.6499999999998747e-05, 2.6070000000003035e-05, 2.6318999999996873e-05, 2.6318999999996873e-05,...</msg>
<status status="PASS" starttime="20201115 22:01:48.871" endtime="20201115 22:01:48.899"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:48.910" level="INFO">NAME: 00-overhead-11-remove</msg>
<status status="PASS" starttime="20201115 22:01:48.908" endtime="20201115 22:01:48.910"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:48.915" level="INFO">VALUE: [2.648699999999865e-05, 2.6013999999997817e-05, 2.6819999999996846e-05, 2.6819999999996846e-05, 2.6499999999998747e-05, 2.6070000000003035e-05, 2.6318999999996873e-05, 2.6318999999996873e-05, 2.615300000000098e-05, 2.663900000000191e-05, 2.6652000000002007e-05, 2.5971999999999107e-05, 2.6598000000002675e-05, 2.6804999999997803e-05, 2.594499999999944e-05, 2.647299999999908e-05, 2.6638999999994972e-05, 2.5957999999999537e-05, 2.6152000000001507e-05, 2.6486000000006116e-05, 2.681900000000431e-05, 2.6485999999999177e-05, 2.598699999999815e-05, 2.5777000000004602e-05, 2.5971999999999107e-05, 2.663900000000191e-05, 2.6028000000004325e-05, 2.5971999999999107e-05, 2.597300000000552e-05, 2.6042000000003895e-05, 2.6804999999997803e-05, 2.6320000000003285e-05, 2.6540999999997983e-05, 2.5763999999997567e-05, 2.6791999999997707e-05, 2.5806000000003215e-05, 2.615300000000098e-05, 2.5986000000005616e-05, 2.6305999999996776e-05, 2.6666999999994112e-05, 2.630500000000424e-05, 2.6805999999997276e-05, 2.6458000000000037e-05, 2.5999999999998247e-05, 2.6471999999999607e-05, 2.6485999999999177e-05, 2.634700000000989e-05, 2.666700000000799e-05, 2.6486000000006116e-05, 2.6818999999997373e-05]</msg>
<status status="PASS" starttime="20201115 22:01:48.912" endtime="20201115 22:01:48.917"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.901" endtime="20201115 22:01:48.918"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:48.925" endtime="20201115 22:01:48.927"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:48.933" endtime="20201115 22:01:48.954"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.929" endtime="20201115 22:01:48.956"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.920" endtime="20201115 22:01:48.958"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.399" endtime="20201115 22:01:48.958"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.143" endtime="20201115 22:01:48.959"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.141" endtime="20201115 22:01:48.959"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:48.964" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:48.987" endtime="20201115 22:01:49.022"></status>
</kw>
<msg timestamp="20201115 22:01:49.023" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:48.983" endtime="20201115 22:01:49.024"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:49.029" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:49.025" endtime="20201115 22:01:49.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:49.031" endtime="20201115 22:01:49.035"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.976" endtime="20201115 22:01:49.037"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.970" endtime="20201115 22:01:49.038"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:49.055" endtime="20201115 22:01:49.393"></status>
</kw>
<msg timestamp="20201115 22:01:49.400" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045805514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045831569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:49.052" endtime="20201115 22:01:49.401"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:49.419" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045805514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045831569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:49.403" endtime="20201115 22:01:49.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:49.421" endtime="20201115 22:01:49.425"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.044" endtime="20201115 22:01:49.427"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.040" endtime="20201115 22:01:49.428"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:49.439" level="INFO">${RESULT} = [{'time': 0.045831569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.605500000000399e-05, 'source_diff': 2.605500000000399e-05}, {'time': 0.046341181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:49.430" endtime="20201115 22:01:49.439"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:49.469" level="INFO">${OVERHEAD} = {'diff': [2.605500000000399e-05, 2.640300000000123e-05, 2.6056000000003465e-05, 2.6416000000001327e-05, 2.6721999999999857e-05, 2.6721999999999857e-05, 2.6568999999997123e-05, 2.6721999999999857e-05, ...</msg>
<status status="PASS" starttime="20201115 22:01:49.441" endtime="20201115 22:01:49.469"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:49.480" level="INFO">NAME: 00-overhead-12-remove</msg>
<status status="PASS" starttime="20201115 22:01:49.477" endtime="20201115 22:01:49.480"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:49.486" level="INFO">VALUE: [2.605500000000399e-05, 2.640300000000123e-05, 2.6056000000003465e-05, 2.6416000000001327e-05, 2.6721999999999857e-05, 2.6721999999999857e-05, 2.6568999999997123e-05, 2.6721999999999857e-05, 2.620899999999926e-05, 2.5902999999993792e-05, 2.656900000000406e-05, 2.6055999999996526e-05, 2.590300000000073e-05, 2.638799999999525e-05, 2.587500000000159e-05, 2.5985999999998677e-05, 2.6541999999997457e-05, 2.588900000000116e-05, 2.598699999999815e-05, 2.6402999999994292e-05, 2.6707999999993348e-05, 2.6556000000003965e-05, 2.6250000000005436e-05, 2.588900000000116e-05, 2.5832999999995943e-05, 2.6112000000001745e-05, 2.5902000000001257e-05, 2.640300000000123e-05, 2.6555999999997026e-05, 2.590300000000073e-05, 2.588900000000116e-05, 2.6402999999994292e-05, 2.590300000000073e-05, 2.6541999999990518e-05, 2.640300000000817e-05, 2.6486000000006116e-05, 2.6402999999994292e-05, 2.6402999999994292e-05, 2.6068999999989684e-05, 2.637500000000903e-05, 2.5874999999994652e-05, 2.6542000000004395e-05, 2.588900000000116e-05, 2.6402999999994292e-05, 2.6570000000003535e-05, 2.605500000001093e-05, 2.5902999999993792e-05, 2.6235999999998927e-05, 2.5902999999993792e-05, 2.6721999999992918e-05]</msg>
<status status="PASS" starttime="20201115 22:01:49.482" endtime="20201115 22:01:49.487"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.471" endtime="20201115 22:01:49.488"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:49.495" endtime="20201115 22:01:49.497"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:49.503" endtime="20201115 22:01:49.525"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.499" endtime="20201115 22:01:49.526"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.490" endtime="20201115 22:01:49.528"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.965" endtime="20201115 22:01:49.528"></status>
</kw>
<msg timestamp="20201115 22:01:49.529" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:49.552" endtime="20201115 22:01:49.587"></status>
</kw>
<msg timestamp="20201115 22:01:49.588" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:49.549" endtime="20201115 22:01:49.589"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:49.594" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:49.590" endtime="20201115 22:01:49.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:49.597" endtime="20201115 22:01:49.600"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.541" endtime="20201115 22:01:49.602"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.536" endtime="20201115 22:01:49.603"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:49.620" endtime="20201115 22:01:49.954"></status>
</kw>
<msg timestamp="20201115 22:01:49.961" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041063319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041089417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:49.616" endtime="20201115 22:01:49.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:49.979" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041063319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041089417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:49.963" endtime="20201115 22:01:49.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:49.981" endtime="20201115 22:01:49.986"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.609" endtime="20201115 22:01:49.988"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.605" endtime="20201115 22:01:49.989"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:50.000" level="INFO">${RESULT} = [{'time': 0.041089417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6098000000002175e-05, 'source_diff': 2.6098000000002175e-05}, {'time': 0.041600056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:49.991" endtime="20201115 22:01:50.001"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:50.031" level="INFO">${OVERHEAD} = {'diff': [2.6098000000002175e-05, 2.6056000000003465e-05, 2.6763999999998567e-05, 2.656900000000406e-05, 2.6138999999994472e-05, 2.6250000000005436e-05, 2.6235999999998927e-05, 2.606900000000356e-05, ...</msg>
<status status="PASS" starttime="20201115 22:01:50.003" endtime="20201115 22:01:50.032"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:50.042" level="INFO">NAME: 00-overhead-12-remove</msg>
<status status="PASS" starttime="20201115 22:01:50.040" endtime="20201115 22:01:50.043"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:50.048" level="INFO">VALUE: [2.6098000000002175e-05, 2.6056000000003465e-05, 2.6763999999998567e-05, 2.656900000000406e-05, 2.6138999999994472e-05, 2.6250000000005436e-05, 2.6235999999998927e-05, 2.606900000000356e-05, 2.6235999999998927e-05, 2.6542000000004395e-05, 2.6568999999997123e-05, 2.622300000000577e-05, 2.670899999999976e-05, 2.586100000000202e-05, 2.638900000000166e-05, 2.6721999999999857e-05, 2.6680000000001147e-05, 2.6750000000005936e-05, 2.6763999999998567e-05, 2.637500000000209e-05, 2.6236000000005866e-05, 2.6582999999996693e-05, 2.62090000000062e-05, 2.6235999999998927e-05, 2.5832999999995943e-05, 2.6555999999997026e-05, 2.6304999999997303e-05, 2.6749999999998997e-05, 2.588900000000116e-05, 2.6430000000000897e-05, 2.6235999999998927e-05, 2.638900000000166e-05, 2.6568999999997123e-05, 2.5834000000002355e-05, 2.6360999999995582e-05, 2.6069999999996096e-05, 2.5820000000002785e-05, 2.6721999999999857e-05, 2.5846999999995512e-05, 2.6763999999998567e-05, 2.6207999999999787e-05, 2.640300000000123e-05, 2.6042000000003895e-05, 2.656900000000406e-05, 2.656900000000406e-05, 2.6207999999999787e-05, 2.638900000000166e-05, 2.638900000000166e-05, 2.6749999999992058e-05, 2.588900000000116e-05]</msg>
<status status="PASS" starttime="20201115 22:01:50.044" endtime="20201115 22:01:50.048"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.033" endtime="20201115 22:01:50.050"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:50.056" endtime="20201115 22:01:50.059"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:50.065" endtime="20201115 22:01:50.086"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.060" endtime="20201115 22:01:50.088"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.052" endtime="20201115 22:01:50.089"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.530" endtime="20201115 22:01:50.090"></status>
</kw>
<msg timestamp="20201115 22:01:50.090" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:50.113" endtime="20201115 22:01:50.148"></status>
</kw>
<msg timestamp="20201115 22:01:50.149" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:50.110" endtime="20201115 22:01:50.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:50.156" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:50.152" endtime="20201115 22:01:50.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:50.158" endtime="20201115 22:01:50.162"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.103" endtime="20201115 22:01:50.163"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.097" endtime="20201115 22:01:50.165"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:50.181" endtime="20201115 22:01:50.517"></status>
</kw>
<msg timestamp="20201115 22:01:50.524" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040798208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040824986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:50.178" endtime="20201115 22:01:50.524"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:50.542" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040798208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040824986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:50.526" endtime="20201115 22:01:50.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:50.544" endtime="20201115 22:01:50.550"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.170" endtime="20201115 22:01:50.551"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.166" endtime="20201115 22:01:50.553"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:50.564" level="INFO">${RESULT} = [{'time': 0.040824986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6777999999998137e-05, 'source_diff': 2.6777999999998137e-05}, {'time': 0.041336694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:50.554" endtime="20201115 22:01:50.565"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:50.594" level="INFO">${OVERHEAD} = {'diff': [2.6777999999998137e-05, 2.606900000000356e-05, 2.6556000000003965e-05, 2.590300000000073e-05, 2.5916000000000827e-05, 2.584700000000245e-05, 2.6207999999999787e-05, 2.587500000000159e-05, 2....</msg>
<status status="PASS" starttime="20201115 22:01:50.566" endtime="20201115 22:01:50.595"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:50.605" level="INFO">NAME: 00-overhead-12-remove</msg>
<status status="PASS" starttime="20201115 22:01:50.603" endtime="20201115 22:01:50.606"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:50.610" level="INFO">VALUE: [2.6777999999998137e-05, 2.606900000000356e-05, 2.6556000000003965e-05, 2.590300000000073e-05, 2.5916000000000827e-05, 2.584700000000245e-05, 2.6207999999999787e-05, 2.587500000000159e-05, 2.6207999999999787e-05, 2.6735999999999427e-05, 2.666700000000105e-05, 2.6735999999999427e-05, 2.6207999999999787e-05, 2.6082999999996193e-05, 2.5957999999999537e-05, 2.6556000000003965e-05, 2.656900000000406e-05, 2.612500000000184e-05, 2.6056000000003465e-05, 2.640300000000123e-05, 2.6541999999997457e-05, 2.6388999999994722e-05, 2.6082999999996193e-05, 2.6388999999994722e-05, 2.6194000000000217e-05, 2.6402000000001757e-05, 2.6569999999996596e-05, 2.6084000000002605e-05, 2.6541000000004922e-05, 2.5999999999998247e-05, 2.622299999999883e-05, 2.588900000000116e-05, 2.605500000000399e-05, 2.6068999999996623e-05, 2.6569999999996596e-05, 2.6304999999997303e-05, 2.593099999999987e-05, 2.6222000000006296e-05, 2.6041000000004422e-05, 2.661100000000277e-05, 2.661100000000277e-05, 2.637500000000209e-05, 2.6235999999998927e-05, 2.6235999999998927e-05, 2.5874999999994652e-05, 2.6042000000003895e-05, 2.620899999999926e-05, 2.638900000000166e-05, 2.668100000000062e-05, 2.6180000000000647e-05]</msg>
<status status="PASS" starttime="20201115 22:01:50.607" endtime="20201115 22:01:50.611"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.596" endtime="20201115 22:01:50.613"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:50.619" endtime="20201115 22:01:50.622"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:50.627" endtime="20201115 22:01:50.649"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.623" endtime="20201115 22:01:50.651"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.615" endtime="20201115 22:01:50.652"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.092" endtime="20201115 22:01:50.653"></status>
</kw>
<msg timestamp="20201115 22:01:50.653" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:50.676" endtime="20201115 22:01:50.712"></status>
</kw>
<msg timestamp="20201115 22:01:50.713" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:50.673" endtime="20201115 22:01:50.713"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:50.719" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:50.715" endtime="20201115 22:01:50.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:50.721" endtime="20201115 22:01:50.725"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.666" endtime="20201115 22:01:50.727"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.660" endtime="20201115 22:01:50.728"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:50.744" endtime="20201115 22:01:51.080"></status>
</kw>
<msg timestamp="20201115 22:01:51.087" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041130014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041155903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:50.741" endtime="20201115 22:01:51.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:51.106" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041130014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041155903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:51.090" endtime="20201115 22:01:51.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:51.109" endtime="20201115 22:01:51.116"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.734" endtime="20201115 22:01:51.118"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.729" endtime="20201115 22:01:51.119"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:51.130" level="INFO">${RESULT} = [{'time': 0.041155903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.588900000000116e-05, 'source_diff': 2.588900000000116e-05}, {'time': 0.041668694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:51.121" endtime="20201115 22:01:51.130"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:51.160" level="INFO">${OVERHEAD} = {'diff': [2.588900000000116e-05, 2.6610999999995832e-05, 2.672299999999933e-05, 2.615300000000098e-05, 2.588900000000116e-05, 2.6556000000003965e-05, 2.6721999999999857e-05, 2.6054999999997053e-05, 2....</msg>
<status status="PASS" starttime="20201115 22:01:51.132" endtime="20201115 22:01:51.160"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:51.171" level="INFO">NAME: 00-overhead-12-remove</msg>
<status status="PASS" starttime="20201115 22:01:51.168" endtime="20201115 22:01:51.171"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:51.176" level="INFO">VALUE: [2.588900000000116e-05, 2.6610999999995832e-05, 2.672299999999933e-05, 2.615300000000098e-05, 2.588900000000116e-05, 2.6556000000003965e-05, 2.6721999999999857e-05, 2.6054999999997053e-05, 2.6541999999997457e-05, 2.590300000000073e-05, 2.638900000000166e-05, 2.588900000000116e-05, 2.638900000000166e-05, 2.637500000000209e-05, 2.6249999999998497e-05, 2.588900000000116e-05, 2.6528000000004825e-05, 2.606900000000356e-05, 2.6554999999997553e-05, 2.640300000000123e-05, 2.6291999999997206e-05, 2.670899999999976e-05, 2.6680000000001147e-05, 2.6750000000005936e-05, 2.6444000000000467e-05, 2.668100000000062e-05, 2.638900000000166e-05, 2.6207999999999787e-05, 2.6540999999997983e-05, 2.6042000000003895e-05, 2.67369999999989e-05, 2.619499999999969e-05, 2.606900000000356e-05, 2.638900000000166e-05, 2.6540999999997983e-05, 2.6069999999996096e-05, 2.6514000000005256e-05, 2.6570000000003535e-05, 2.638900000000166e-05, 2.6027999999997387e-05, 2.622299999999883e-05, 2.587500000000159e-05, 2.588900000000116e-05, 2.588900000000116e-05, 2.606900000000356e-05, 2.588900000000116e-05, 2.6263999999998067e-05, 2.6194999999992752e-05, 2.5971999999999107e-05, 2.6068999999989684e-05]</msg>
<status status="PASS" starttime="20201115 22:01:51.173" endtime="20201115 22:01:51.177"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.161" endtime="20201115 22:01:51.178"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:51.185" endtime="20201115 22:01:51.187"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:51.193" endtime="20201115 22:01:51.215"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.189" endtime="20201115 22:01:51.216"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.180" endtime="20201115 22:01:51.218"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.654" endtime="20201115 22:01:51.219"></status>
</kw>
<msg timestamp="20201115 22:01:51.219" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:51.242" endtime="20201115 22:01:51.277"></status>
</kw>
<msg timestamp="20201115 22:01:51.278" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:51.238" endtime="20201115 22:01:51.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:51.284" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:51.280" endtime="20201115 22:01:51.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:51.286" endtime="20201115 22:01:51.290"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.231" endtime="20201115 22:01:51.292"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.226" endtime="20201115 22:01:51.293"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:51.310" endtime="20201115 22:01:51.644"></status>
</kw>
<msg timestamp="20201115 22:01:51.652" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040764208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040790694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:51.306" endtime="20201115 22:01:51.652"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:51.670" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040764208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040790694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:51.654" endtime="20201115 22:01:51.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:51.672" endtime="20201115 22:01:51.678"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.299" endtime="20201115 22:01:51.679"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.295" endtime="20201115 22:01:51.681"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:51.691" level="INFO">${RESULT} = [{'time': 0.040790694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6485999999999177e-05, 'source_diff': 2.6485999999999177e-05}, {'time': 0.041300347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:51.682" endtime="20201115 22:01:51.692"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:51.721" level="INFO">${OVERHEAD} = {'diff': [2.6485999999999177e-05, 2.6735999999999427e-05, 2.615300000000098e-05, 2.638900000000166e-05, 2.5902999999993792e-05, 2.6056000000003465e-05, 2.606900000000356e-05, 2.6584000000003105e-05, 2...</msg>
<status status="PASS" starttime="20201115 22:01:51.693" endtime="20201115 22:01:51.722"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:51.732" level="INFO">NAME: 00-overhead-12-remove</msg>
<status status="PASS" starttime="20201115 22:01:51.730" endtime="20201115 22:01:51.733"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:51.738" level="INFO">VALUE: [2.6485999999999177e-05, 2.6735999999999427e-05, 2.615300000000098e-05, 2.638900000000166e-05, 2.5902999999993792e-05, 2.6056000000003465e-05, 2.606900000000356e-05, 2.6584000000003105e-05, 2.6513999999998317e-05, 2.6555999999997026e-05, 2.6056000000003465e-05, 2.5862000000001495e-05, 2.6485999999999177e-05, 2.6570000000003535e-05, 2.588900000000116e-05, 2.6416999999993862e-05, 2.606900000000356e-05, 2.6221999999999357e-05, 2.6555999999997026e-05, 2.587500000000159e-05, 2.6221999999999357e-05, 2.6292000000004145e-05, 2.640300000000123e-05, 2.6792000000004645e-05, 2.588900000000116e-05, 2.6207999999999787e-05, 2.588900000000116e-05, 2.638900000000166e-05, 2.6221999999999357e-05, 2.6528000000004825e-05, 2.6055999999996526e-05, 2.5888999999994222e-05, 2.6735999999999427e-05, 2.6235999999998927e-05, 2.6610999999995832e-05, 2.655500000000449e-05, 2.6555999999997026e-05, 2.6750000000005936e-05, 2.6735999999999427e-05, 2.6554999999997553e-05, 2.6235999999998927e-05, 2.6735999999999427e-05, 2.6054999999997053e-05, 2.662500000000234e-05, 2.6055999999996526e-05, 2.6042000000003895e-05, 2.6028000000011264e-05, 2.640300000000817e-05, 2.6555999999997026e-05, 2.62369999999984e-05]</msg>
<status status="PASS" starttime="20201115 22:01:51.735" endtime="20201115 22:01:51.738"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.723" endtime="20201115 22:01:51.740"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:51.746" endtime="20201115 22:01:51.749"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:51.755" endtime="20201115 22:01:51.776"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.750" endtime="20201115 22:01:51.778"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.742" endtime="20201115 22:01:51.779"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.220" endtime="20201115 22:01:51.780"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.962" endtime="20201115 22:01:51.781"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.960" endtime="20201115 22:01:51.781"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:51.786" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:51.809" endtime="20201115 22:01:51.846"></status>
</kw>
<msg timestamp="20201115 22:01:51.847" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:51.805" endtime="20201115 22:01:51.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:51.853" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:51.849" endtime="20201115 22:01:51.854"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:51.855" endtime="20201115 22:01:51.860"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.798" endtime="20201115 22:01:51.861"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.792" endtime="20201115 22:01:51.863"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:51.879" endtime="20201115 22:01:52.215"></status>
</kw>
<msg timestamp="20201115 22:01:52.222" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046010333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046036292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:51.876" endtime="20201115 22:01:52.223"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:52.240" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046010333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046036292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:52.225" endtime="20201115 22:01:52.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:52.243" endtime="20201115 22:01:52.247"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.868" endtime="20201115 22:01:52.248"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.864" endtime="20201115 22:01:52.250"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:52.260" level="INFO">${RESULT} = [{'time': 0.046036292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.595899999999901e-05, 'source_diff': 2.595899999999901e-05}, {'time': 0.046583042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:52.251" endtime="20201115 22:01:52.261"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:52.290" level="INFO">${OVERHEAD} = {'diff': [2.595899999999901e-05, 2.6319999999996346e-05, 2.6806000000004215e-05, 2.5792000000003645e-05, 2.663900000000191e-05, 2.6568999999997123e-05, 2.6263999999998067e-05, 2.687500000000259e-05, 2...</msg>
<status status="PASS" starttime="20201115 22:01:52.262" endtime="20201115 22:01:52.291"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:52.301" level="INFO">NAME: 00-overhead-13-remove</msg>
<status status="PASS" starttime="20201115 22:01:52.299" endtime="20201115 22:01:52.302"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:52.307" level="INFO">VALUE: [2.595899999999901e-05, 2.6319999999996346e-05, 2.6806000000004215e-05, 2.5792000000003645e-05, 2.663900000000191e-05, 2.6568999999997123e-05, 2.6263999999998067e-05, 2.687500000000259e-05, 2.6638000000002438e-05, 2.665199999999507e-05, 2.6805999999997276e-05, 2.6471999999999607e-05, 2.6471999999999607e-05, 2.6013999999997817e-05, 2.5805999999996276e-05, 2.6320000000003285e-05, 2.6471999999999607e-05, 2.6012999999998343e-05, 2.580500000000374e-05, 2.6485999999999177e-05, 2.6818999999997373e-05, 2.6124999999994902e-05, 2.6485999999999177e-05, 2.6833999999996416e-05, 2.6485999999999177e-05, 2.665300000000148e-05, 2.583300000000288e-05, 2.6291999999997206e-05, 2.6320000000003285e-05, 2.6638999999994972e-05, 2.6624999999988463e-05, 2.5792000000010584e-05, 2.6305999999989838e-05, 2.6306000000003715e-05, 2.6818999999997373e-05, 2.6834000000003355e-05, 2.6028000000011264e-05, 2.613900000000835e-05, 2.6527999999997887e-05, 2.6028000000011264e-05, 2.615300000000098e-05, 2.5806000000003215e-05, 2.6235999999998927e-05, 2.6652999999987603e-05, 2.6361999999988117e-05, 2.5985999999991738e-05, 2.65970000000032e-05, 2.663900000000885e-05, 2.6138999999994472e-05, 2.6334000000002855e-05]</msg>
<status status="PASS" starttime="20201115 22:01:52.304" endtime="20201115 22:01:52.308"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.292" endtime="20201115 22:01:52.309"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:52.316" endtime="20201115 22:01:52.318"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:52.324" endtime="20201115 22:01:52.345"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.319" endtime="20201115 22:01:52.347"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.311" endtime="20201115 22:01:52.349"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.787" endtime="20201115 22:01:52.349"></status>
</kw>
<msg timestamp="20201115 22:01:52.350" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:52.372" endtime="20201115 22:01:52.409"></status>
</kw>
<msg timestamp="20201115 22:01:52.411" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:52.369" endtime="20201115 22:01:52.415"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:52.421" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:52.417" endtime="20201115 22:01:52.422"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:52.424" endtime="20201115 22:01:52.427"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.362" endtime="20201115 22:01:52.429"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.356" endtime="20201115 22:01:52.431"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:52.447" endtime="20201115 22:01:52.782"></status>
</kw>
<msg timestamp="20201115 22:01:52.789" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040800417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040826722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:52.444" endtime="20201115 22:01:52.789"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:52.807" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040800417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040826722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:52.791" endtime="20201115 22:01:52.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:52.809" endtime="20201115 22:01:52.814"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.437" endtime="20201115 22:01:52.816"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.432" endtime="20201115 22:01:52.818"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:52.828" level="INFO">${RESULT} = [{'time': 0.040826722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.630500000000424e-05, 'source_diff': 2.630500000000424e-05}, {'time': 0.041374333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:52.819" endtime="20201115 22:01:52.829"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:52.858" level="INFO">${OVERHEAD} = {'diff': [2.630500000000424e-05, 2.636100000000252e-05, 2.669500000000019e-05, 2.6138999999994472e-05, 2.643100000000037e-05, 2.6804999999997803e-05, 2.663900000000191e-05, 2.6820000000003785e-05, 2.6...</msg>
<status status="PASS" starttime="20201115 22:01:52.830" endtime="20201115 22:01:52.858"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:52.869" level="INFO">NAME: 00-overhead-13-remove</msg>
<status status="PASS" starttime="20201115 22:01:52.867" endtime="20201115 22:01:52.869"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:52.874" level="INFO">VALUE: [2.630500000000424e-05, 2.636100000000252e-05, 2.669500000000019e-05, 2.6138999999994472e-05, 2.643100000000037e-05, 2.6804999999997803e-05, 2.663900000000191e-05, 2.6820000000003785e-05, 2.613900000000141e-05, 2.615300000000098e-05, 2.6791999999997707e-05, 2.6472000000006546e-05, 2.6652000000002007e-05, 2.647299999999908e-05, 2.6306000000003715e-05, 2.6804999999997803e-05, 2.6638999999994972e-05, 2.6500000000005686e-05, 2.612500000000184e-05, 2.647299999999908e-05, 2.593099999999987e-05, 2.5985999999998677e-05, 2.662500000000234e-05, 2.631900000000381e-05, 2.5958000000006476e-05, 2.5805999999996276e-05, 2.613900000000141e-05, 2.5985999999998677e-05, 2.6290999999997733e-05, 2.6485999999999177e-05, 2.6304999999997303e-05, 2.6290999999997733e-05, 2.613900000000141e-05, 2.663900000000191e-05, 2.612500000000184e-05, 2.5957999999999537e-05, 2.6306000000003715e-05, 2.5749999999997997e-05, 2.613900000000141e-05, 2.6846999999996513e-05, 2.613900000000835e-05, 2.645900000000645e-05, 2.5957999999992598e-05, 2.6652000000002007e-05, 2.6291999999997206e-05, 2.5971999999999107e-05, 2.6319999999996346e-05, 2.6735999999999427e-05, 2.6318999999996873e-05, 2.6040999999990544e-05]</msg>
<status status="PASS" starttime="20201115 22:01:52.871" endtime="20201115 22:01:52.875"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.860" endtime="20201115 22:01:52.877"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:52.883" endtime="20201115 22:01:52.885"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:52.891" endtime="20201115 22:01:52.912"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.887" endtime="20201115 22:01:52.914"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.878" endtime="20201115 22:01:52.916"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.351" endtime="20201115 22:01:52.916"></status>
</kw>
<msg timestamp="20201115 22:01:52.917" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:52.940" endtime="20201115 22:01:52.977"></status>
</kw>
<msg timestamp="20201115 22:01:52.979" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:52.937" endtime="20201115 22:01:52.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:52.985" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:52.981" endtime="20201115 22:01:52.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:52.987" endtime="20201115 22:01:52.991"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.930" endtime="20201115 22:01:52.992"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.923" endtime="20201115 22:01:52.994"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:53.012" endtime="20201115 22:01:53.348"></status>
</kw>
<msg timestamp="20201115 22:01:53.354" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041615583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041642056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:53.009" endtime="20201115 22:01:53.355"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:53.372" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041615583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041642056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:53.357" endtime="20201115 22:01:53.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:53.375" endtime="20201115 22:01:53.382"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.001" endtime="20201115 22:01:53.384"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.996" endtime="20201115 22:01:53.385"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:53.396" level="INFO">${RESULT} = [{'time': 0.041642056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.647299999999908e-05, 'source_diff': 2.647299999999908e-05}, {'time': 0.042189819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:53.387" endtime="20201115 22:01:53.396"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:53.425" level="INFO">${OVERHEAD} = {'diff': [2.647299999999908e-05, 2.5777000000004602e-05, 2.665300000000148e-05, 2.640300000000123e-05, 2.6499999999998747e-05, 2.5958000000006476e-05, 2.6458000000000037e-05, 2.615300000000098e-05, 2....</msg>
<status status="PASS" starttime="20201115 22:01:53.398" endtime="20201115 22:01:53.426"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:53.436" level="INFO">NAME: 00-overhead-13-remove</msg>
<status status="PASS" starttime="20201115 22:01:53.434" endtime="20201115 22:01:53.437"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:53.442" level="INFO">VALUE: [2.647299999999908e-05, 2.5777000000004602e-05, 2.665300000000148e-05, 2.640300000000123e-05, 2.6499999999998747e-05, 2.5958000000006476e-05, 2.6458000000000037e-05, 2.615300000000098e-05, 2.6818999999997373e-05, 2.6444000000000467e-05, 2.6485999999999177e-05, 2.6152000000001507e-05, 2.5986000000005616e-05, 2.5971999999999107e-05, 2.633300000000338e-05, 2.6471999999999607e-05, 2.612500000000184e-05, 2.615300000000098e-05, 2.665300000000148e-05, 2.6166000000001077e-05, 2.6152999999994042e-05, 2.6499999999998747e-05, 2.663900000000191e-05, 2.6319999999996346e-05, 2.6666000000001577e-05, 2.6000000000005186e-05, 2.6805999999997276e-05, 2.5985999999998677e-05, 2.663900000000191e-05, 2.6166999999993612e-05, 2.6610999999995832e-05, 2.6485999999999177e-05, 2.6776999999998663e-05, 2.631900000000381e-05, 2.6499999999998747e-05, 2.5804999999996803e-05, 2.6652999999994542e-05, 2.6348000000002425e-05, 2.6486000000006116e-05, 2.6012999999991404e-05, 2.6152000000001507e-05, 2.6819999999996846e-05, 2.6680000000001147e-05, 2.6471999999999607e-05, 2.6319999999996346e-05, 2.6486000000006116e-05, 2.6486000000006116e-05, 2.6805999999990338e-05, 2.5846999999995512e-05, 2.6152000000001507e-05]</msg>
<status status="PASS" starttime="20201115 22:01:53.439" endtime="20201115 22:01:53.442"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.427" endtime="20201115 22:01:53.444"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:53.450" endtime="20201115 22:01:53.453"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:53.459" endtime="20201115 22:01:53.481"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.454" endtime="20201115 22:01:53.482"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.446" endtime="20201115 22:01:53.484"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.918" endtime="20201115 22:01:53.485"></status>
</kw>
<msg timestamp="20201115 22:01:53.485" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:53.508" endtime="20201115 22:01:53.546"></status>
</kw>
<msg timestamp="20201115 22:01:53.547" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:53.505" endtime="20201115 22:01:53.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:53.553" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:53.549" endtime="20201115 22:01:53.554"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:53.555" endtime="20201115 22:01:53.559"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.498" endtime="20201115 22:01:53.561"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.492" endtime="20201115 22:01:53.562"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:53.578" endtime="20201115 22:01:53.913"></status>
</kw>
<msg timestamp="20201115 22:01:53.920" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041316528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041342708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:53.575" endtime="20201115 22:01:53.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:53.938" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041316528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041342708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:53.922" endtime="20201115 22:01:53.939"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:53.941" endtime="20201115 22:01:53.946"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.568" endtime="20201115 22:01:53.948"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.563" endtime="20201115 22:01:53.949"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:53.960" level="INFO">${RESULT} = [{'time': 0.041342708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6180000000000647e-05, 'source_diff': 2.6180000000000647e-05}, {'time': 0.041896389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:53.951" endtime="20201115 22:01:53.960"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:53.990" level="INFO">${OVERHEAD} = {'diff': [2.6180000000000647e-05, 2.613900000000141e-05, 2.647299999999908e-05, 2.595899999999901e-05, 2.6055999999996526e-05, 2.6458000000000037e-05, 2.5818999999996373e-05, 2.6124999999994902e-05, 2...</msg>
<status status="PASS" starttime="20201115 22:01:53.962" endtime="20201115 22:01:53.990"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:54.001" level="INFO">NAME: 00-overhead-13-remove</msg>
<status status="PASS" starttime="20201115 22:01:53.999" endtime="20201115 22:01:54.002"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:54.007" level="INFO">VALUE: [2.6180000000000647e-05, 2.613900000000141e-05, 2.647299999999908e-05, 2.595899999999901e-05, 2.6055999999996526e-05, 2.6458000000000037e-05, 2.5818999999996373e-05, 2.6124999999994902e-05, 2.5820000000002785e-05, 2.5777000000004602e-05, 2.5806000000003215e-05, 2.5986000000005616e-05, 2.6652999999994542e-05, 2.6291999999997206e-05, 2.663900000000191e-05, 2.5957999999999537e-05, 2.662500000000234e-05, 2.6180000000000647e-05, 2.6166000000001077e-05, 2.6500000000005686e-05, 2.663900000000191e-05, 2.663900000000191e-05, 2.6458000000000037e-05, 2.665300000000148e-05, 2.6486000000006116e-05, 2.612500000000184e-05, 2.6485999999999177e-05, 2.6137999999995e-05, 2.615300000000098e-05, 2.6638999999994972e-05, 2.6485999999999177e-05, 2.647299999999908e-05, 2.6320000000003285e-05, 2.580500000000374e-05, 2.6819999999996846e-05, 2.616700000000055e-05, 2.665300000000148e-05, 2.6124999999994902e-05, 2.6612000000002245e-05, 2.6471999999999607e-05, 2.633300000000338e-05, 2.5806000000003215e-05, 2.630500000000424e-05, 2.6291999999997206e-05, 2.65970000000032e-05, 2.615300000000098e-05, 2.6278000000004575e-05, 2.5791999999996706e-05, 2.6486000000006116e-05, 2.6444000000000467e-05]</msg>
<status status="PASS" starttime="20201115 22:01:54.004" endtime="20201115 22:01:54.008"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.992" endtime="20201115 22:01:54.010"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:54.016" endtime="20201115 22:01:54.019"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:54.024" endtime="20201115 22:01:54.046"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.020" endtime="20201115 22:01:54.048"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.011" endtime="20201115 22:01:54.049"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.486" endtime="20201115 22:01:54.050"></status>
</kw>
<msg timestamp="20201115 22:01:54.050" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:54.073" endtime="20201115 22:01:54.110"></status>
</kw>
<msg timestamp="20201115 22:01:54.112" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:54.070" endtime="20201115 22:01:54.112"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:54.118" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:54.114" endtime="20201115 22:01:54.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:54.120" endtime="20201115 22:01:54.124"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.062" endtime="20201115 22:01:54.126"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.057" endtime="20201115 22:01:54.127"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:54.143" endtime="20201115 22:01:54.479"></status>
</kw>
<msg timestamp="20201115 22:01:54.487" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040859111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04088525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:01:54.140" endtime="20201115 22:01:54.487"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:54.504" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040859111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04088525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:01:54.489" endtime="20201115 22:01:54.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:54.507" endtime="20201115 22:01:54.512"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.133" endtime="20201115 22:01:54.514"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.128" endtime="20201115 22:01:54.515"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:54.526" level="INFO">${RESULT} = [{'time': 0.04088525, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.613900000000141e-05, 'source_diff': 2.613900000000141e-05}, {'time': 0.041436889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:01:54.517" endtime="20201115 22:01:54.526"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:54.556" level="INFO">${OVERHEAD} = {'diff': [2.613900000000141e-05, 2.6652999999994542e-05, 2.5985999999998677e-05, 2.6485999999999177e-05, 2.662500000000234e-05, 2.612500000000184e-05, 2.6666000000001577e-05, 2.6332999999996443e-05, 2...</msg>
<status status="PASS" starttime="20201115 22:01:54.528" endtime="20201115 22:01:54.557"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:54.567" level="INFO">NAME: 00-overhead-13-remove</msg>
<status status="PASS" starttime="20201115 22:01:54.565" endtime="20201115 22:01:54.568"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:54.573" level="INFO">VALUE: [2.613900000000141e-05, 2.6652999999994542e-05, 2.5985999999998677e-05, 2.6485999999999177e-05, 2.662500000000234e-05, 2.612500000000184e-05, 2.6666000000001577e-05, 2.6332999999996443e-05, 2.5971999999999107e-05, 2.6082999999996193e-05, 2.6277999999997637e-05, 2.6472000000006546e-05, 2.6305999999996776e-05, 2.6499999999998747e-05, 2.5791000000004172e-05, 2.6472000000006546e-05, 2.6485999999999177e-05, 2.6320000000003285e-05, 2.6068999999996623e-05, 2.6764000000005506e-05, 2.6471999999999607e-05, 2.645900000000645e-05, 2.6319999999996346e-05, 2.6804999999997803e-05, 2.663900000000191e-05, 2.619499999999969e-05, 2.6805999999997276e-05, 2.648699999999865e-05, 2.6485999999999177e-05, 2.6318999999996873e-05, 2.6166000000001077e-05, 2.630500000000424e-05, 2.5957999999999537e-05, 2.5777000000004602e-05, 2.6846999999996513e-05, 2.6486000000006116e-05, 2.665300000000148e-05, 2.615300000000098e-05, 2.665300000000148e-05, 2.584700000000245e-05, 2.663900000000885e-05, 2.6166000000008016e-05, 2.6014000000004756e-05, 2.6276999999991224e-05, 2.6347999999995486e-05, 2.6638000000009376e-05, 2.6652000000002007e-05, 2.6320000000010224e-05, 2.6290999999997733e-05, 2.666599999999464e-05]</msg>
<status status="PASS" starttime="20201115 22:01:54.570" endtime="20201115 22:01:54.575"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.558" endtime="20201115 22:01:54.577"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:54.583" endtime="20201115 22:01:54.586"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:54.591" endtime="20201115 22:01:54.613"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.587" endtime="20201115 22:01:54.614"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.578" endtime="20201115 22:01:54.616"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.051" endtime="20201115 22:01:54.616"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.784" endtime="20201115 22:01:54.617"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.782" endtime="20201115 22:01:54.617"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:54.622" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:54.645" endtime="20201115 22:01:54.684"></status>
</kw>
<msg timestamp="20201115 22:01:54.685" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:54.642" endtime="20201115 22:01:54.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:54.691" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:54.687" endtime="20201115 22:01:54.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:54.694" endtime="20201115 22:01:54.697"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.634" endtime="20201115 22:01:54.699"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.629" endtime="20201115 22:01:54.700"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:54.717" endtime="20201115 22:01:55.066"></status>
</kw>
<msg timestamp="20201115 22:01:55.073" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046082181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046108222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:54.713" endtime="20201115 22:01:55.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:55.091" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046082181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046108222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:55.075" endtime="20201115 22:01:55.092"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:55.094" endtime="20201115 22:01:55.097"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.706" endtime="20201115 22:01:55.099"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.702" endtime="20201115 22:01:55.100"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:55.111" level="INFO">${RESULT} = [{'time': 0.046108222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6040999999997483e-05, 'source_diff': 2.6040999999997483e-05}, {'time': 0.046696014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:55.102" endtime="20201115 22:01:55.111"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:55.141" level="INFO">${OVERHEAD} = {'diff': [2.6040999999997483e-05, 2.658300000000363e-05, 2.6041000000004422e-05, 2.6221999999999357e-05, 2.606900000000356e-05, 2.6236000000005866e-05, 2.587500000000159e-05, 2.6236000000005866e-05, 2...</msg>
<status status="PASS" starttime="20201115 22:01:55.113" endtime="20201115 22:01:55.141"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:55.152" level="INFO">NAME: 00-overhead-14-remove</msg>
<status status="PASS" starttime="20201115 22:01:55.150" endtime="20201115 22:01:55.153"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:55.158" level="INFO">VALUE: [2.6040999999997483e-05, 2.658300000000363e-05, 2.6041000000004422e-05, 2.6221999999999357e-05, 2.606900000000356e-05, 2.6236000000005866e-05, 2.587500000000159e-05, 2.6236000000005866e-05, 2.608300000000313e-05, 2.6694000000000717e-05, 2.6569999999996596e-05, 2.6402999999994292e-05, 2.59170000000003e-05, 2.6041999999996956e-05, 2.6221999999999357e-05, 2.6569999999996596e-05, 2.6221999999999357e-05, 2.590300000000073e-05, 2.638900000000166e-05, 2.590300000000073e-05, 2.6555999999997026e-05, 2.6249999999998497e-05, 2.588900000000116e-05, 2.6054999999997053e-05, 2.6568999999997123e-05, 2.6264000000005006e-05, 2.6569999999996596e-05, 2.65970000000032e-05, 2.593100000000681e-05, 2.6249999999991558e-05, 2.6374999999995152e-05, 2.59170000000003e-05, 2.6055999999996526e-05, 2.6708000000000287e-05, 2.6402999999994292e-05, 2.590300000000767e-05, 2.6721999999992918e-05, 2.6235999999998927e-05, 2.6722000000006796e-05, 2.590300000000767e-05, 2.6235999999998927e-05, 2.6207999999999787e-05, 2.6708000000000287e-05, 2.6207999999999787e-05, 2.6054999999997053e-05, 2.655500000001143e-05, 2.64170000000008e-05, 2.6598000000002675e-05, 2.6222000000006296e-05, 2.6570000000003535e-05]</msg>
<status status="PASS" starttime="20201115 22:01:55.154" endtime="20201115 22:01:55.159"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.143" endtime="20201115 22:01:55.160"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:55.167" endtime="20201115 22:01:55.169"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:55.175" endtime="20201115 22:01:55.197"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.171" endtime="20201115 22:01:55.199"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.162" endtime="20201115 22:01:55.200"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.623" endtime="20201115 22:01:55.201"></status>
</kw>
<msg timestamp="20201115 22:01:55.201" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:55.224" endtime="20201115 22:01:55.264"></status>
</kw>
<msg timestamp="20201115 22:01:55.265" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:55.221" endtime="20201115 22:01:55.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:55.271" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:55.267" endtime="20201115 22:01:55.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:55.273" endtime="20201115 22:01:55.277"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.214" endtime="20201115 22:01:55.279"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.208" endtime="20201115 22:01:55.280"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:55.296" endtime="20201115 22:01:55.644"></status>
</kw>
<msg timestamp="20201115 22:01:55.651" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041129875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041156125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:55.293" endtime="20201115 22:01:55.651"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:55.669" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041129875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041156125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:55.653" endtime="20201115 22:01:55.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:55.671" endtime="20201115 22:01:55.679"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.286" endtime="20201115 22:01:55.680"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.281" endtime="20201115 22:01:55.682"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:55.692" level="INFO">${RESULT} = [{'time': 0.041156125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6249999999998497e-05, 'source_diff': 2.6249999999998497e-05}, {'time': 0.041742778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:55.683" endtime="20201115 22:01:55.693"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:55.722" level="INFO">${OVERHEAD} = {'diff': [2.6249999999998497e-05, 2.6249999999998497e-05, 2.5985999999998677e-05, 2.6749999999998997e-05, 2.6708000000000287e-05, 2.608300000000313e-05, 2.6735999999999427e-05, 2.6805999999997276e-05,...</msg>
<status status="PASS" starttime="20201115 22:01:55.694" endtime="20201115 22:01:55.723"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:55.734" level="INFO">NAME: 00-overhead-14-remove</msg>
<status status="PASS" starttime="20201115 22:01:55.731" endtime="20201115 22:01:55.734"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:55.739" level="INFO">VALUE: [2.6249999999998497e-05, 2.6249999999998497e-05, 2.5985999999998677e-05, 2.6749999999998997e-05, 2.6708000000000287e-05, 2.608300000000313e-05, 2.6735999999999427e-05, 2.6805999999997276e-05, 2.6721999999999857e-05, 2.6499999999998747e-05, 2.640300000000123e-05, 2.6569999999996596e-05, 2.6306000000003715e-05, 2.612500000000184e-05, 2.6069999999996096e-05, 2.584700000000245e-05, 2.587500000000159e-05, 2.590300000000073e-05, 2.6708000000000287e-05, 2.670899999999976e-05, 2.5874999999994652e-05, 2.6041999999996956e-05, 2.6070000000003035e-05, 2.6291999999997206e-05, 2.6430000000000897e-05, 2.6290999999997733e-05, 2.6598000000002675e-05, 2.6054999999997053e-05, 2.6388999999994722e-05, 2.593099999999987e-05, 2.6568999999997123e-05, 2.6249999999998497e-05, 2.6416000000001327e-05, 2.620899999999926e-05, 2.672299999999933e-05, 2.5943999999999967e-05, 2.64170000000008e-05, 2.656900000000406e-05, 2.6402000000008696e-05, 2.606900000000356e-05, 2.6221999999992418e-05, 2.6374999999995152e-05, 2.6042000000003895e-05, 2.588900000000116e-05, 2.6055999999996526e-05, 2.64170000000008e-05, 2.6735999999999427e-05, 2.656900000000406e-05, 2.658300000001057e-05, 2.6055999999996526e-05]</msg>
<status status="PASS" starttime="20201115 22:01:55.736" endtime="20201115 22:01:55.740"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.725" endtime="20201115 22:01:55.741"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:55.748" endtime="20201115 22:01:55.750"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:55.756" endtime="20201115 22:01:55.778"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.752" endtime="20201115 22:01:55.779"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.743" endtime="20201115 22:01:55.781"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.202" endtime="20201115 22:01:55.782"></status>
</kw>
<msg timestamp="20201115 22:01:55.782" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:55.805" endtime="20201115 22:01:55.844"></status>
</kw>
<msg timestamp="20201115 22:01:55.845" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:55.801" endtime="20201115 22:01:55.845"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:55.851" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:55.847" endtime="20201115 22:01:55.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:55.853" endtime="20201115 22:01:55.857"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.794" endtime="20201115 22:01:55.859"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.789" endtime="20201115 22:01:55.860"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:55.877" endtime="20201115 22:01:56.212"></status>
</kw>
<msg timestamp="20201115 22:01:56.219" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040931208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040957264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:55.873" endtime="20201115 22:01:56.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:56.237" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040931208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040957264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:56.221" endtime="20201115 22:01:56.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:56.239" endtime="20201115 22:01:56.245"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.866" endtime="20201115 22:01:56.246"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.861" endtime="20201115 22:01:56.248"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:56.259" level="INFO">${RESULT} = [{'time': 0.040957264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6056000000003465e-05, 'source_diff': 2.6056000000003465e-05}, {'time': 0.041547306, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:56.249" endtime="20201115 22:01:56.259"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:56.289" level="INFO">${OVERHEAD} = {'diff': [2.6056000000003465e-05, 2.588900000000116e-05, 2.666599999999464e-05, 2.6249999999998497e-05, 2.6749999999998997e-05, 2.6055999999996526e-05, 2.588900000000116e-05, 2.6584000000003105e-05, 2...</msg>
<status status="PASS" starttime="20201115 22:01:56.261" endtime="20201115 22:01:56.290"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:56.300" level="INFO">NAME: 00-overhead-14-remove</msg>
<status status="PASS" starttime="20201115 22:01:56.298" endtime="20201115 22:01:56.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:56.305" level="INFO">VALUE: [2.6056000000003465e-05, 2.588900000000116e-05, 2.666599999999464e-05, 2.6249999999998497e-05, 2.6749999999998997e-05, 2.6055999999996526e-05, 2.588900000000116e-05, 2.6584000000003105e-05, 2.67369999999989e-05, 2.6068999999996623e-05, 2.6235999999998927e-05, 2.640300000000123e-05, 2.6264000000005006e-05, 2.5902000000001257e-05, 2.6026999999997913e-05, 2.622299999999883e-05, 2.6721999999999857e-05, 2.6084000000002605e-05, 2.6541000000004922e-05, 2.605500000000399e-05, 2.5957999999999537e-05, 2.590300000000073e-05, 2.5916999999993362e-05, 2.6735999999999427e-05, 2.6068999999996623e-05, 2.6764000000005506e-05, 2.6070000000003035e-05, 2.6235999999998927e-05, 2.6735999999999427e-05, 2.588900000000116e-05, 2.6749999999998997e-05, 2.6570000000003535e-05, 2.6084000000002605e-05, 2.6721999999999857e-05, 2.6264000000005006e-05, 2.590300000000073e-05, 2.6735999999999427e-05, 2.6722999999992392e-05, 2.6055999999996526e-05, 2.622299999999189e-05, 2.6250000000005436e-05, 2.6207999999999787e-05, 2.6735999999999427e-05, 2.6735999999999427e-05, 2.622299999999189e-05, 2.6750000000005936e-05, 2.67369999999989e-05, 2.6055999999996526e-05, 2.6570000000003535e-05, 2.59170000000003e-05]</msg>
<status status="PASS" starttime="20201115 22:01:56.302" endtime="20201115 22:01:56.306"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.291" endtime="20201115 22:01:56.308"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:56.314" endtime="20201115 22:01:56.317"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:56.322" endtime="20201115 22:01:56.344"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.318" endtime="20201115 22:01:56.346"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.309" endtime="20201115 22:01:56.347"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.783" endtime="20201115 22:01:56.348"></status>
</kw>
<msg timestamp="20201115 22:01:56.348" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:56.371" endtime="20201115 22:01:56.410"></status>
</kw>
<msg timestamp="20201115 22:01:56.411" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:56.368" endtime="20201115 22:01:56.412"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:56.418" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:56.414" endtime="20201115 22:01:56.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:56.420" endtime="20201115 22:01:56.424"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.360" endtime="20201115 22:01:56.425"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.355" endtime="20201115 22:01:56.427"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:56.443" endtime="20201115 22:01:56.778"></status>
</kw>
<msg timestamp="20201115 22:01:56.785" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041106028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041132097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:56.440" endtime="20201115 22:01:56.785"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:56.802" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041106028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041132097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:56.787" endtime="20201115 22:01:56.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:56.805" endtime="20201115 22:01:56.811"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.433" endtime="20201115 22:01:56.812"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.428" endtime="20201115 22:01:56.814"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:56.824" level="INFO">${RESULT} = [{'time': 0.041132097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6068999999996623e-05, 'source_diff': 2.6068999999996623e-05}, {'time': 0.041718778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:56.815" endtime="20201115 22:01:56.825"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:56.854" level="INFO">${OVERHEAD} = {'diff': [2.6068999999996623e-05, 2.6735999999999427e-05, 2.638900000000166e-05, 2.6388999999994722e-05, 2.672299999999933e-05, 2.587500000000159e-05, 2.6068999999996623e-05, 2.64170000000008e-05, 2.6...</msg>
<status status="PASS" starttime="20201115 22:01:56.826" endtime="20201115 22:01:56.855"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:56.865" level="INFO">NAME: 00-overhead-14-remove</msg>
<status status="PASS" starttime="20201115 22:01:56.863" endtime="20201115 22:01:56.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:56.871" level="INFO">VALUE: [2.6068999999996623e-05, 2.6735999999999427e-05, 2.638900000000166e-05, 2.6388999999994722e-05, 2.672299999999933e-05, 2.587500000000159e-05, 2.6068999999996623e-05, 2.64170000000008e-05, 2.6277999999997637e-05, 2.637500000000209e-05, 2.5888999999994222e-05, 2.666700000000105e-05, 2.670899999999976e-05, 2.6221999999999357e-05, 2.588900000000116e-05, 2.6749999999998997e-05, 2.6346999999996012e-05, 2.640300000000123e-05, 2.6235999999998927e-05, 2.5888999999994222e-05, 2.6235999999998927e-05, 2.6541999999997457e-05, 2.6290999999997733e-05, 2.6721999999999857e-05, 2.618100000000012e-05, 2.6221999999999357e-05, 2.5930000000000397e-05, 2.6207999999999787e-05, 2.6360999999995582e-05, 2.606900000000356e-05, 2.587500000000159e-05, 2.638799999999525e-05, 2.5888000000001687e-05, 2.6221999999999357e-05, 2.6555999999997026e-05, 2.60970000000027e-05, 2.6541000000004922e-05, 2.6110999999995332e-05, 2.588900000000116e-05, 2.6070000000003035e-05, 2.6235999999998927e-05, 2.6222000000006296e-05, 2.6013999999990878e-05, 2.6013999999990878e-05, 2.6694000000007656e-05, 2.6222000000006296e-05, 2.5888999999987283e-05, 2.6041000000004422e-05, 2.643100000000731e-05, 2.588900000000116e-05]</msg>
<status status="PASS" starttime="20201115 22:01:56.868" endtime="20201115 22:01:56.871"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.856" endtime="20201115 22:01:56.873"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:56.879" endtime="20201115 22:01:56.882"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:56.888" endtime="20201115 22:01:56.909"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.883" endtime="20201115 22:01:56.911"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.875" endtime="20201115 22:01:56.912"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.349" endtime="20201115 22:01:56.913"></status>
</kw>
<msg timestamp="20201115 22:01:56.913" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:56.936" endtime="20201115 22:01:56.975"></status>
</kw>
<msg timestamp="20201115 22:01:56.976" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:56.933" endtime="20201115 22:01:56.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:56.982" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:56.979" endtime="20201115 22:01:56.983"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:56.985" endtime="20201115 22:01:56.988"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.926" endtime="20201115 22:01:56.990"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.920" endtime="20201115 22:01:56.991"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:57.008" endtime="20201115 22:01:57.344"></status>
</kw>
<msg timestamp="20201115 22:01:57.352" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040713056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040739611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:57.005" endtime="20201115 22:01:57.352"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:57.370" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040713056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040739611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:57.354" endtime="20201115 22:01:57.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:57.372" endtime="20201115 22:01:57.378"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.998" endtime="20201115 22:01:57.379"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.993" endtime="20201115 22:01:57.381"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:57.391" level="INFO">${RESULT} = [{'time': 0.040739611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.655500000000449e-05, 'source_diff': 2.655500000000449e-05}, {'time': 0.041331389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:57.382" endtime="20201115 22:01:57.392"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:57.421" level="INFO">${OVERHEAD} = {'diff': [2.655500000000449e-05, 2.6750000000005936e-05, 2.6069999999996096e-05, 2.6569999999996596e-05, 2.6568999999997123e-05, 2.6068999999996623e-05, 2.67369999999989e-05, 2.640300000000123e-05, 2....</msg>
<status status="PASS" starttime="20201115 22:01:57.393" endtime="20201115 22:01:57.422"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:57.432" level="INFO">NAME: 00-overhead-14-remove</msg>
<status status="PASS" starttime="20201115 22:01:57.430" endtime="20201115 22:01:57.433"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:57.438" level="INFO">VALUE: [2.655500000000449e-05, 2.6750000000005936e-05, 2.6069999999996096e-05, 2.6569999999996596e-05, 2.6568999999997123e-05, 2.6068999999996623e-05, 2.67369999999989e-05, 2.640300000000123e-05, 2.606900000000356e-05, 2.6055999999996526e-05, 2.6735999999999427e-05, 2.6568999999997123e-05, 2.6249999999998497e-05, 2.5902000000001257e-05, 2.608300000000313e-05, 2.6708000000000287e-05, 2.6555999999997026e-05, 2.6721999999999857e-05, 2.6221999999999357e-05, 2.6416000000001327e-05, 2.608300000000313e-05, 2.5888000000001687e-05, 2.6388999999994722e-05, 2.6334000000002855e-05, 2.583300000000288e-05, 2.64170000000008e-05, 2.6235999999998927e-05, 2.587500000000159e-05, 2.6235999999998927e-05, 2.6749999999998997e-05, 2.6027999999997387e-05, 2.67369999999989e-05, 2.6082999999996193e-05, 2.6721999999999857e-05, 2.6068999999996623e-05, 2.6555999999997026e-05, 2.606900000000356e-05, 2.608300000000313e-05, 2.590300000000767e-05, 2.6416000000001327e-05, 2.6180000000000647e-05, 2.6721999999992918e-05, 2.638900000000166e-05, 2.6235999999998927e-05, 2.6070000000003035e-05, 2.6374999999995152e-05, 2.6402999999994292e-05, 2.6569999999989657e-05, 2.636100000000252e-05, 2.620899999999926e-05]</msg>
<status status="PASS" starttime="20201115 22:01:57.434" endtime="20201115 22:01:57.438"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.423" endtime="20201115 22:01:57.440"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:57.446" endtime="20201115 22:01:57.449"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:57.454" endtime="20201115 22:01:57.476"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.450" endtime="20201115 22:01:57.478"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.442" endtime="20201115 22:01:57.479"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.915" endtime="20201115 22:01:57.480"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.620" endtime="20201115 22:01:57.481"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.618" endtime="20201115 22:01:57.481"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:57.486" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:57.508" endtime="20201115 22:01:57.549"></status>
</kw>
<msg timestamp="20201115 22:01:57.550" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:57.505" endtime="20201115 22:01:57.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:57.557" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:57.553" endtime="20201115 22:01:57.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:57.559" endtime="20201115 22:01:57.567"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.498" endtime="20201115 22:01:57.569"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.492" endtime="20201115 22:01:57.570"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:57.587" endtime="20201115 22:01:57.928"></status>
</kw>
<msg timestamp="20201115 22:01:57.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046001903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046029069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:57.584" endtime="20201115 22:01:57.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:57.953" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046001903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046029069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:57.937" endtime="20201115 22:01:57.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:57.956" endtime="20201115 22:01:57.959"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.576" endtime="20201115 22:01:57.961"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.572" endtime="20201115 22:01:57.962"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:57.973" level="INFO">${RESULT} = [{'time': 0.046029069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7166000000002077e-05, 'source_diff': 2.7166000000002077e-05}, {'time': 0.046657972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:57.964" endtime="20201115 22:01:57.973"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:58.004" level="INFO">${OVERHEAD} = {'diff': [2.7166000000002077e-05, 2.715300000000198e-05, 2.7124999999995902e-05, 2.6999999999999247e-05, 2.681900000000431e-05, 2.743100000000137e-05, 2.7513999999999317e-05, 2.7486000000000177e-05, 2...</msg>
<status status="PASS" starttime="20201115 22:01:57.975" endtime="20201115 22:01:58.004"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:58.014" level="INFO">NAME: 00-overhead-15-remove</msg>
<status status="PASS" starttime="20201115 22:01:58.012" endtime="20201115 22:01:58.015"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:58.020" level="INFO">VALUE: [2.7166000000002077e-05, 2.715300000000198e-05, 2.7124999999995902e-05, 2.6999999999999247e-05, 2.681900000000431e-05, 2.743100000000137e-05, 2.7513999999999317e-05, 2.7486000000000177e-05, 2.7472000000000607e-05, 2.7499999999999747e-05, 2.698699999999915e-05, 2.7680000000002147e-05, 2.7486000000000177e-05, 2.7638999999995972e-05, 2.6999999999999247e-05, 2.7305999999997776e-05, 2.6972000000000107e-05, 2.7346999999997013e-05, 2.6805999999997276e-05, 2.713900000000241e-05, 2.7333999999996916e-05, 2.7624999999996402e-05, 2.763900000000291e-05, 2.7486000000000177e-05, 2.6972000000000107e-05, 2.695900000000001e-05, 2.7013999999998817e-05, 2.7806000000005215e-05, 2.7513999999992378e-05, 2.7486000000007116e-05, 2.7041999999991018e-05, 2.6999999999999247e-05, 2.7472000000000607e-05, 2.72369999999994e-05, 2.7318999999997873e-05, 2.6972000000000107e-05, 2.715300000000198e-05, 2.7222999999992892e-05, 2.763900000000985e-05, 2.7334000000003855e-05, 2.706900000000456e-05, 2.6957999999993598e-05, 2.7318999999997873e-05, 2.744500000000094e-05, 2.7638999999995972e-05, 2.7290999999998733e-05, 2.7818999999998373e-05, 2.7306000000004715e-05, 2.7430999999994432e-05, 2.7457999999994098e-05]</msg>
<status status="PASS" starttime="20201115 22:01:58.017" endtime="20201115 22:01:58.021"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.005" endtime="20201115 22:01:58.022"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:58.028" endtime="20201115 22:01:58.031"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:58.037" endtime="20201115 22:01:58.058"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.032" endtime="20201115 22:01:58.060"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.024" endtime="20201115 22:01:58.061"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.487" endtime="20201115 22:01:58.062"></status>
</kw>
<msg timestamp="20201115 22:01:58.063" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:58.085" endtime="20201115 22:01:58.126"></status>
</kw>
<msg timestamp="20201115 22:01:58.128" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:58.082" endtime="20201115 22:01:58.128"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:58.134" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:58.130" endtime="20201115 22:01:58.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:58.137" endtime="20201115 22:01:58.140"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.075" endtime="20201115 22:01:58.142"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.069" endtime="20201115 22:01:58.143"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:58.160" endtime="20201115 22:01:58.497"></status>
</kw>
<msg timestamp="20201115 22:01:58.504" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040758375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040785333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:58.156" endtime="20201115 22:01:58.505"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:58.522" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040758375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040785333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:58.506" endtime="20201115 22:01:58.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:58.525" endtime="20201115 22:01:58.530"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.149" endtime="20201115 22:01:58.531"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.145" endtime="20201115 22:01:58.533"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:58.544" level="INFO">${RESULT} = [{'time': 0.040785333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6958000000000537e-05, 'source_diff': 2.6958000000000537e-05}, {'time': 0.041412097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:58.535" endtime="20201115 22:01:58.544"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:58.574" level="INFO">${OVERHEAD} = {'diff': [2.6958000000000537e-05, 2.715300000000198e-05, 2.788900000000316e-05, 2.6985999999999677e-05, 2.6985999999999677e-05, 2.7152000000002507e-05, 2.7472000000000607e-05, 2.7305000000005242e-05, ...</msg>
<status status="PASS" starttime="20201115 22:01:58.546" endtime="20201115 22:01:58.574"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:58.585" level="INFO">NAME: 00-overhead-15-remove</msg>
<status status="PASS" starttime="20201115 22:01:58.582" endtime="20201115 22:01:58.585"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:58.590" level="INFO">VALUE: [2.6958000000000537e-05, 2.715300000000198e-05, 2.788900000000316e-05, 2.6985999999999677e-05, 2.6985999999999677e-05, 2.7152000000002507e-05, 2.7472000000000607e-05, 2.7305000000005242e-05, 2.763900000000291e-05, 2.7486000000000177e-05, 2.6832999999996943e-05, 2.69170000000013e-05, 2.7666999999995112e-05, 2.765300000000248e-05, 2.712500000000284e-05, 2.6820000000003785e-05, 2.7610999999996833e-05, 2.7277999999998637e-05, 2.6985999999999677e-05, 2.6750000000005936e-05, 2.7305999999997776e-05, 2.681900000000431e-05, 2.6999999999999247e-05, 2.763900000000291e-05, 2.7486000000000177e-05, 2.715300000000198e-05, 2.6999999999999247e-05, 2.765300000000248e-05, 2.7306000000004715e-05, 2.7319999999997346e-05, 2.716599999999514e-05, 2.6972000000000107e-05, 2.7306000000004715e-05, 2.7472000000000607e-05, 2.7334000000003855e-05, 2.7138999999995472e-05, 2.715300000000198e-05, 2.765300000000248e-05, 2.75970000000042e-05, 2.7138999999995472e-05, 2.716700000000849e-05, 2.697299999999958e-05, 2.7638999999995972e-05, 2.7818999999998373e-05, 2.765300000000248e-05, 2.7319999999997346e-05, 2.7638999999995972e-05, 2.6818999999997373e-05, 2.7555999999998027e-05, 2.6819999999996846e-05]</msg>
<status status="PASS" starttime="20201115 22:01:58.587" endtime="20201115 22:01:58.591"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.576" endtime="20201115 22:01:58.592"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:58.599" endtime="20201115 22:01:58.601"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:58.607" endtime="20201115 22:01:58.628"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.602" endtime="20201115 22:01:58.630"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.594" endtime="20201115 22:01:58.631"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.064" endtime="20201115 22:01:58.632"></status>
</kw>
<msg timestamp="20201115 22:01:58.632" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:58.656" endtime="20201115 22:01:58.697"></status>
</kw>
<msg timestamp="20201115 22:01:58.698" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:58.653" endtime="20201115 22:01:58.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:58.705" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:58.701" endtime="20201115 22:01:58.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:58.707" endtime="20201115 22:01:58.711"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.646" endtime="20201115 22:01:58.713"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.639" endtime="20201115 22:01:58.714"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:58.731" endtime="20201115 22:01:59.068"></status>
</kw>
<msg timestamp="20201115 22:01:59.075" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041499806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041527417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:58.728" endtime="20201115 22:01:59.075"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:59.093" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041499806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041527417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:59.077" endtime="20201115 22:01:59.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:59.096" endtime="20201115 22:01:59.101"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.720" endtime="20201115 22:01:59.103"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.716" endtime="20201115 22:01:59.104"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:59.115" level="INFO">${RESULT} = [{'time': 0.041527417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7610999999996833e-05, 'source_diff': 2.7610999999996833e-05}, {'time': 0.04215225, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 22:01:59.106" endtime="20201115 22:01:59.115"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:59.145" level="INFO">${OVERHEAD} = {'diff': [2.7610999999996833e-05, 2.7458000000001037e-05, 2.7306000000004715e-05, 2.716700000000155e-05, 2.6818999999997373e-05, 2.765300000000248e-05, 2.7332999999997443e-05, 2.7318999999997873e-05, ...</msg>
<status status="PASS" starttime="20201115 22:01:59.117" endtime="20201115 22:01:59.145"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:59.156" level="INFO">NAME: 00-overhead-15-remove</msg>
<status status="PASS" starttime="20201115 22:01:59.154" endtime="20201115 22:01:59.157"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:59.161" level="INFO">VALUE: [2.7610999999996833e-05, 2.7458000000001037e-05, 2.7306000000004715e-05, 2.716700000000155e-05, 2.6818999999997373e-05, 2.765300000000248e-05, 2.7332999999997443e-05, 2.7318999999997873e-05, 2.7319999999997346e-05, 2.7777999999999137e-05, 2.7513999999999317e-05, 2.693100000000087e-05, 2.7152999999995042e-05, 2.763900000000291e-05, 2.716700000000155e-05, 2.7166999999994612e-05, 2.7666999999995112e-05, 2.6999999999999247e-05, 2.768100000000162e-05, 2.7304999999998303e-05, 2.7499999999999747e-05, 2.712500000000284e-05, 2.7013999999998817e-05, 2.7138000000002938e-05, 2.712500000000284e-05, 2.7791999999998707e-05, 2.7152999999995042e-05, 2.7458000000001037e-05, 2.7472000000000607e-05, 2.6985999999999677e-05, 2.7848000000003925e-05, 2.7152999999995042e-05, 2.715300000000198e-05, 2.7568999999998123e-05, 2.7596999999990324e-05, 2.712500000000284e-05, 2.7318999999997873e-05, 2.765300000000248e-05, 2.7624999999989464e-05, 2.6805999999990338e-05, 2.7458999999993572e-05, 2.7166000000009016e-05, 2.7306000000004715e-05, 2.6834000000003355e-05, 2.7306000000004715e-05, 2.6985999999992738e-05, 2.6999999999999247e-05, 2.7305999999990838e-05, 2.6986000000006616e-05, 2.6986000000006616e-05]</msg>
<status status="PASS" starttime="20201115 22:01:59.158" endtime="20201115 22:01:59.162"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.147" endtime="20201115 22:01:59.164"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:59.170" endtime="20201115 22:01:59.172"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:59.178" endtime="20201115 22:01:59.200"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.174" endtime="20201115 22:01:59.202"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.165" endtime="20201115 22:01:59.204"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.634" endtime="20201115 22:01:59.204"></status>
</kw>
<msg timestamp="20201115 22:01:59.205" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:59.227" endtime="20201115 22:01:59.268"></status>
</kw>
<msg timestamp="20201115 22:01:59.269" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:59.224" endtime="20201115 22:01:59.270"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:59.276" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:59.272" endtime="20201115 22:01:59.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:59.278" endtime="20201115 22:01:59.282"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.217" endtime="20201115 22:01:59.284"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.211" endtime="20201115 22:01:59.285"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:59.303" endtime="20201115 22:01:59.638"></status>
</kw>
<msg timestamp="20201115 22:01:59.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040818542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040846194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:59.299" endtime="20201115 22:01:59.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:59.663" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040818542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040846194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:59.647" endtime="20201115 22:01:59.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:59.665" endtime="20201115 22:01:59.671"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.292" endtime="20201115 22:01:59.672"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.287" endtime="20201115 22:01:59.674"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:59.684" level="INFO">${RESULT} = [{'time': 0.040846194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7652000000003008e-05, 'source_diff': 2.7652000000003008e-05}, {'time': 0.041474847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:59.675" endtime="20201115 22:01:59.685"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:59.714" level="INFO">${OVERHEAD} = {'diff': [2.7652000000003008e-05, 2.6985999999999677e-05, 2.7596999999997263e-05, 2.712500000000284e-05, 2.7055999999997526e-05, 2.6999999999999247e-05, 2.7277999999998637e-05, 2.731900000000481e-05, ...</msg>
<status status="PASS" starttime="20201115 22:01:59.686" endtime="20201115 22:01:59.715"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:59.726" level="INFO">NAME: 00-overhead-15-remove</msg>
<status status="PASS" starttime="20201115 22:01:59.723" endtime="20201115 22:01:59.727"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:59.731" level="INFO">VALUE: [2.7652000000003008e-05, 2.6985999999999677e-05, 2.7596999999997263e-05, 2.712500000000284e-05, 2.7055999999997526e-05, 2.6999999999999247e-05, 2.7277999999998637e-05, 2.731900000000481e-05, 2.7054999999998053e-05, 2.7306000000004715e-05, 2.7513999999999317e-05, 2.7472000000000607e-05, 2.6985999999999677e-05, 2.7666000000002577e-05, 2.715300000000198e-05, 2.7472000000000607e-05, 2.765300000000248e-05, 2.7555999999998027e-05, 2.6999999999999247e-05, 2.7291999999998207e-05, 2.7486000000000177e-05, 2.7137999999996e-05, 2.7277999999998637e-05, 2.7055999999997526e-05, 2.6820000000003785e-05, 2.7458000000001037e-05, 2.697299999999958e-05, 2.70970000000037e-05, 2.7305000000005242e-05, 2.7304999999998303e-05, 2.745900000000051e-05, 2.765300000000248e-05, 2.698699999999915e-05, 2.747300000000008e-05, 2.6972000000000107e-05, 2.7305000000005242e-05, 2.6818999999997373e-05, 2.747300000000008e-05, 2.7499999999999747e-05, 2.6958000000007476e-05, 2.7638999999995972e-05, 2.7472000000000607e-05, 2.7499999999999747e-05, 2.7318999999997873e-05, 2.7138999999995472e-05, 2.715300000000198e-05, 2.7291999999998207e-05, 2.7652000000003008e-05, 2.7638999999995972e-05, 2.715300000000198e-05]</msg>
<status status="PASS" starttime="20201115 22:01:59.728" endtime="20201115 22:01:59.733"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.716" endtime="20201115 22:01:59.735"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:59.741" endtime="20201115 22:01:59.744"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:59.750" endtime="20201115 22:01:59.772"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.746" endtime="20201115 22:01:59.773"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.737" endtime="20201115 22:01:59.775"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.206" endtime="20201115 22:01:59.776"></status>
</kw>
<msg timestamp="20201115 22:01:59.776" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:59.799" endtime="20201115 22:01:59.840"></status>
</kw>
<msg timestamp="20201115 22:01:59.841" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:59.796" endtime="20201115 22:01:59.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:59.847" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:59.843" endtime="20201115 22:01:59.848"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:59.849" endtime="20201115 22:01:59.853"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.789" endtime="20201115 22:01:59.855"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.783" endtime="20201115 22:01:59.856"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:59.872" endtime="20201115 22:02:00.208"></status>
</kw>
<msg timestamp="20201115 22:02:00.214" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041046167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041073472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:59.869" endtime="20201115 22:02:00.215"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:00.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041046167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041073472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:00.217" endtime="20201115 22:02:00.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:00.235" endtime="20201115 22:02:00.242"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.862" endtime="20201115 22:02:00.244"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.857" endtime="20201115 22:02:00.245"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:00.256" level="INFO">${RESULT} = [{'time': 0.041073472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7304999999998303e-05, 'source_diff': 2.7304999999998303e-05}, {'time': 0.041700375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:00.247" endtime="20201115 22:02:00.256"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:00.286" level="INFO">${OVERHEAD} = {'diff': [2.7304999999998303e-05, 2.6972000000000107e-05, 2.7777999999999137e-05, 2.770900000000076e-05, 2.7499999999999747e-05, 2.7472000000000607e-05, 2.731900000000481e-05, 2.7486000000000177e-05, ...</msg>
<status status="PASS" starttime="20201115 22:02:00.258" endtime="20201115 22:02:00.286"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:00.297" level="INFO">NAME: 00-overhead-15-remove</msg>
<status status="PASS" starttime="20201115 22:02:00.294" endtime="20201115 22:02:00.297"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:00.302" level="INFO">VALUE: [2.7304999999998303e-05, 2.6972000000000107e-05, 2.7777999999999137e-05, 2.770900000000076e-05, 2.7499999999999747e-05, 2.7472000000000607e-05, 2.731900000000481e-05, 2.7486000000000177e-05, 2.7458000000001037e-05, 2.7180000000001647e-05, 2.6833999999996416e-05, 2.7486000000000177e-05, 2.6999999999999247e-05, 2.731900000000481e-05, 2.715300000000198e-05, 2.7486000000000177e-05, 2.7804999999998803e-05, 2.7638999999995972e-05, 2.6972000000000107e-05, 2.715300000000198e-05, 2.7638999999995972e-05, 2.6985999999999677e-05, 2.7805000000005742e-05, 2.740300000000223e-05, 2.718100000000112e-05, 2.7666999999995112e-05, 2.715300000000198e-05, 2.6832999999996943e-05, 2.7458000000001037e-05, 2.7666000000002577e-05, 2.6985999999999677e-05, 2.716700000000155e-05, 2.6818999999997373e-05, 2.765199999999607e-05, 2.6985999999999677e-05, 2.694500000000044e-05, 2.7818999999998373e-05, 2.7444000000001467e-05, 2.7666999999995112e-05, 2.6847999999995986e-05, 2.7013000000006282e-05, 2.7804999999991864e-05, 2.681900000001125e-05, 2.7818999999998373e-05, 2.7806000000005215e-05, 2.7277999999991698e-05, 2.7485999999993238e-05, 2.6847999999995986e-05, 2.698700000000609e-05, 2.765300000000248e-05]</msg>
<status status="PASS" starttime="20201115 22:02:00.299" endtime="20201115 22:02:00.303"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.288" endtime="20201115 22:02:00.305"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:00.311" endtime="20201115 22:02:00.314"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:00.319" endtime="20201115 22:02:00.341"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.315" endtime="20201115 22:02:00.343"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.307" endtime="20201115 22:02:00.344"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.777" endtime="20201115 22:02:00.345"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.483" endtime="20201115 22:02:00.345"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.482" endtime="20201115 22:02:00.346"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:00.350" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:00.373" endtime="20201115 22:02:00.416"></status>
</kw>
<msg timestamp="20201115 22:02:00.418" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:00.370" endtime="20201115 22:02:00.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:00.424" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:00.420" endtime="20201115 22:02:00.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:00.426" endtime="20201115 22:02:00.430"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.363" endtime="20201115 22:02:00.431"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.357" endtime="20201115 22:02:00.433"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:00.449" endtime="20201115 22:02:00.787"></status>
</kw>
<msg timestamp="20201115 22:02:00.794" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046346514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046373528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:00.446" endtime="20201115 22:02:00.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:00.812" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046346514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046373528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:00.796" endtime="20201115 22:02:00.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:00.814" endtime="20201115 22:02:00.818"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.439" endtime="20201115 22:02:00.820"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.434" endtime="20201115 22:02:00.821"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:00.832" level="INFO">${RESULT} = [{'time': 0.046373528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7013999999998817e-05, 'source_diff': 2.7013999999998817e-05}, {'time': 0.047041347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:00.823" endtime="20201115 22:02:00.832"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:00.862" level="INFO">${OVERHEAD} = {'diff': [2.7013999999998817e-05, 2.7249999999999497e-05, 2.7040999999998483e-05, 2.763900000000291e-05, 2.7554999999998553e-05, 2.7069999999997096e-05, 2.7722000000000857e-05, 2.7068999999997623e-05,...</msg>
<status status="PASS" starttime="20201115 22:02:00.834" endtime="20201115 22:02:00.863"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:00.873" level="INFO">NAME: 00-overhead-16-remove</msg>
<status status="PASS" starttime="20201115 22:02:00.871" endtime="20201115 22:02:00.874"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:00.879" level="INFO">VALUE: [2.7013999999998817e-05, 2.7249999999999497e-05, 2.7040999999998483e-05, 2.763900000000291e-05, 2.7554999999998553e-05, 2.7069999999997096e-05, 2.7722000000000857e-05, 2.7068999999997623e-05, 2.7569999999997596e-05, 2.6888000000002688e-05, 2.738900000000266e-05, 2.7556000000004965e-05, 2.717999999999471e-05, 2.7084000000003605e-05, 2.688900000000216e-05, 2.7582999999997693e-05, 2.6888999999995222e-05, 2.69170000000013e-05, 2.706900000000456e-05, 2.7736000000000427e-05, 2.6860999999996082e-05, 2.7721999999993918e-05, 2.7208000000000787e-05, 2.7263999999999067e-05, 2.7722000000000857e-05, 2.7222000000007296e-05, 2.7236000000013805e-05, 2.740199999999582e-05, 2.7721999999993918e-05, 2.688900000000216e-05, 2.7027999999998387e-05, 2.6888999999988283e-05, 2.688900000000216e-05, 2.7596999999990324e-05, 2.7068999999990684e-05, 2.686100000000302e-05, 2.7721999999993918e-05, 2.705500000001193e-05, 2.7708000000001287e-05, 2.7722000000007796e-05, 2.695900000000695e-05, 2.77369999999999e-05, 2.7042000000004895e-05, 2.736100000000352e-05, 2.7555999999998027e-05, 2.688900000000216e-05, 2.7388999999988783e-05, 2.7278000000005576e-05, 2.6902000000009196e-05, 2.74170000000018e-05]</msg>
<status status="PASS" starttime="20201115 22:02:00.875" endtime="20201115 22:02:00.880"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.864" endtime="20201115 22:02:00.882"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:00.888" endtime="20201115 22:02:00.890"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:00.896" endtime="20201115 22:02:00.918"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.892" endtime="20201115 22:02:00.920"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.883" endtime="20201115 22:02:00.921"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.352" endtime="20201115 22:02:00.922"></status>
</kw>
<msg timestamp="20201115 22:02:00.922" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:00.945" endtime="20201115 22:02:00.988"></status>
</kw>
<msg timestamp="20201115 22:02:00.990" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:00.942" endtime="20201115 22:02:00.990"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:00.996" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:00.992" endtime="20201115 22:02:00.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:00.998" endtime="20201115 22:02:01.002"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.935" endtime="20201115 22:02:01.004"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.929" endtime="20201115 22:02:01.005"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:01.022" endtime="20201115 22:02:01.357"></status>
</kw>
<msg timestamp="20201115 22:02:01.364" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041110472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041137375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:01.018" endtime="20201115 22:02:01.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:01.382" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041110472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041137375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:01.366" endtime="20201115 22:02:01.383"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:01.384" endtime="20201115 22:02:01.390"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.011" endtime="20201115 22:02:01.391"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.007" endtime="20201115 22:02:01.393"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:01.403" level="INFO">${RESULT} = [{'time': 0.041137375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6902999999994792e-05, 'source_diff': 2.6902999999994792e-05}, {'time': 0.041805458, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:01.394" endtime="20201115 22:02:01.404"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:01.433" level="INFO">${OVERHEAD} = {'diff': [2.6902999999994792e-05, 2.740199999999582e-05, 2.711100000000327e-05, 2.7235999999999927e-05, 2.7749999999999997e-05, 2.7736000000000427e-05, 2.7069999999997096e-05, 2.7568999999998123e-05, ...</msg>
<status status="PASS" starttime="20201115 22:02:01.406" endtime="20201115 22:02:01.435"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:01.445" level="INFO">NAME: 00-overhead-16-remove</msg>
<status status="PASS" starttime="20201115 22:02:01.443" endtime="20201115 22:02:01.446"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:01.450" level="INFO">VALUE: [2.6902999999994792e-05, 2.740199999999582e-05, 2.711100000000327e-05, 2.7235999999999927e-05, 2.7749999999999997e-05, 2.7736000000000427e-05, 2.7069999999997096e-05, 2.7568999999998123e-05, 2.7555000000005492e-05, 2.722299999999983e-05, 2.722299999999983e-05, 2.7749999999999997e-05, 2.758300000000463e-05, 2.7208000000000787e-05, 2.7722000000000857e-05, 2.7235999999999927e-05, 2.6902000000002257e-05, 2.7583999999997166e-05, 2.7555999999998027e-05, 2.7235999999999927e-05, 2.7541999999998457e-05, 2.7222000000000357e-05, 2.690300000000173e-05, 2.690300000000173e-05, 2.7235999999999927e-05, 2.7249999999999497e-05, 2.7570000000004535e-05, 2.7556000000004965e-05, 2.7277999999998637e-05, 2.7735999999993488e-05, 2.7346999999997013e-05, 2.7736000000000427e-05, 2.6916999999994362e-05, 2.72369999999994e-05, 2.7750000000006936e-05, 2.7500000000013625e-05, 2.7250000000006436e-05, 2.7235999999999927e-05, 2.7542000000005395e-05, 2.738900000000266e-05, 2.742999999999496e-05, 2.7221999999993418e-05, 2.77369999999999e-05, 2.7222999999992892e-05, 2.7235999999999927e-05, 2.7611999999996306e-05, 2.7722000000007796e-05, 2.7388000000003188e-05, 2.7262999999999593e-05, 2.7374999999996152e-05]</msg>
<status status="PASS" starttime="20201115 22:02:01.447" endtime="20201115 22:02:01.451"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.436" endtime="20201115 22:02:01.453"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:01.459" endtime="20201115 22:02:01.462"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:01.467" endtime="20201115 22:02:01.489"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.463" endtime="20201115 22:02:01.491"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.455" endtime="20201115 22:02:01.492"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.923" endtime="20201115 22:02:01.493"></status>
</kw>
<msg timestamp="20201115 22:02:01.494" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:01.516" endtime="20201115 22:02:01.560"></status>
</kw>
<msg timestamp="20201115 22:02:01.561" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:01.513" endtime="20201115 22:02:01.561"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:01.567" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:01.563" endtime="20201115 22:02:01.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:01.569" endtime="20201115 22:02:01.573"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.506" endtime="20201115 22:02:01.575"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.500" endtime="20201115 22:02:01.576"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:01.593" endtime="20201115 22:02:01.942"></status>
</kw>
<msg timestamp="20201115 22:02:01.950" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041067319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041094556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:01.589" endtime="20201115 22:02:01.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:01.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041067319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041094556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:01.953" endtime="20201115 22:02:01.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:01.973" endtime="20201115 22:02:01.979"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.582" endtime="20201115 22:02:01.980"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.578" endtime="20201115 22:02:01.982"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:01.993" level="INFO">${RESULT} = [{'time': 0.041094556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.72369999999994e-05, 'source_diff': 2.72369999999994e-05}, {'time': 0.041758375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:02:01.983" endtime="20201115 22:02:01.993"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:02.023" level="INFO">${OVERHEAD} = {'diff': [2.72369999999994e-05, 2.7068999999997623e-05, 2.772300000000033e-05, 2.7056000000004465e-05, 2.688900000000216e-05, 2.7194000000001217e-05, 2.690300000000173e-05, 2.7749999999999997e-05, 2.7...</msg>
<status status="PASS" starttime="20201115 22:02:01.995" endtime="20201115 22:02:02.024"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:02.034" level="INFO">NAME: 00-overhead-16-remove</msg>
<status status="PASS" starttime="20201115 22:02:02.032" endtime="20201115 22:02:02.035"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:02.040" level="INFO">VALUE: [2.72369999999994e-05, 2.7068999999997623e-05, 2.772300000000033e-05, 2.7056000000004465e-05, 2.688900000000216e-05, 2.7194000000001217e-05, 2.690300000000173e-05, 2.7749999999999997e-05, 2.706900000000456e-05, 2.706900000000456e-05, 2.737500000000309e-05, 2.7235999999999927e-05, 2.690199999999532e-05, 2.6902000000002257e-05, 2.7069999999997096e-05, 2.7722000000000857e-05, 2.6916000000001827e-05, 2.6902000000002257e-05, 2.772300000000033e-05, 2.7249999999999497e-05, 2.738900000000266e-05, 2.7555999999998027e-05, 2.687500000000259e-05, 2.7235999999999927e-05, 2.7652000000003008e-05, 2.7722000000000857e-05, 2.7042000000004895e-05, 2.7277000000006102e-05, 2.737500000000309e-05, 2.688799999999575e-05, 2.7070000000004035e-05, 2.756900000000506e-05, 2.738900000000266e-05, 2.6902999999994792e-05, 2.7694000000008656e-05, 2.7736000000000427e-05, 2.7055999999997526e-05, 2.765300000000248e-05, 2.72369999999994e-05, 2.7736000000000427e-05, 2.7235999999999927e-05, 2.688900000000216e-05, 2.7721999999993918e-05, 2.7554999999998553e-05, 2.7069999999990157e-05, 2.718100000000112e-05, 2.688900000000216e-05, 2.7416000000002327e-05, 2.7736000000000427e-05, 2.738900000000266e-05]</msg>
<status status="PASS" starttime="20201115 22:02:02.037" endtime="20201115 22:02:02.041"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.025" endtime="20201115 22:02:02.042"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:02.048" endtime="20201115 22:02:02.051"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:02.057" endtime="20201115 22:02:02.078"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.052" endtime="20201115 22:02:02.080"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.044" endtime="20201115 22:02:02.081"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.495" endtime="20201115 22:02:02.082"></status>
</kw>
<msg timestamp="20201115 22:02:02.082" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:02.105" endtime="20201115 22:02:02.148"></status>
</kw>
<msg timestamp="20201115 22:02:02.149" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:02.102" endtime="20201115 22:02:02.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:02.156" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:02.151" endtime="20201115 22:02:02.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:02.158" endtime="20201115 22:02:02.161"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.095" endtime="20201115 22:02:02.163"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.089" endtime="20201115 22:02:02.164"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:02.181" endtime="20201115 22:02:02.516"></status>
</kw>
<msg timestamp="20201115 22:02:02.522" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040844542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04087225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:02:02.177" endtime="20201115 22:02:02.523"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:02.540" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040844542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04087225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:02:02.525" endtime="20201115 22:02:02.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:02.543" endtime="20201115 22:02:02.551"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.170" endtime="20201115 22:02:02.552"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.166" endtime="20201115 22:02:02.554"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:02.564" level="INFO">${RESULT} = [{'time': 0.04087225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7708000000001287e-05, 'source_diff': 2.7708000000001287e-05}, {'time': 0.041542153, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 22:02:02.555" endtime="20201115 22:02:02.565"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:02.594" level="INFO">${OVERHEAD} = {'diff': [2.7708000000001287e-05, 2.7555999999998027e-05, 2.7362000000002995e-05, 2.7804999999998803e-05, 2.706900000000456e-05, 2.7235999999999927e-05, 2.738900000000266e-05, 2.7570000000004535e-05, ...</msg>
<status status="PASS" starttime="20201115 22:02:02.566" endtime="20201115 22:02:02.595"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:02.605" level="INFO">NAME: 00-overhead-16-remove</msg>
<status status="PASS" starttime="20201115 22:02:02.603" endtime="20201115 22:02:02.606"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:02.611" level="INFO">VALUE: [2.7708000000001287e-05, 2.7555999999998027e-05, 2.7362000000002995e-05, 2.7804999999998803e-05, 2.706900000000456e-05, 2.7235999999999927e-05, 2.738900000000266e-05, 2.7570000000004535e-05, 2.684700000000345e-05, 2.69170000000013e-05, 2.7554999999998553e-05, 2.7541999999998457e-05, 2.690300000000173e-05, 2.7027999999998387e-05, 2.7749999999999997e-05, 2.6888999999995222e-05, 2.7582999999997693e-05, 2.7235999999999927e-05, 2.7722000000000857e-05, 2.72369999999994e-05, 2.756900000000506e-05, 2.7041999999997957e-05, 2.738900000000266e-05, 2.7222000000000357e-05, 2.7554999999998553e-05, 2.738900000000266e-05, 2.7499999999999747e-05, 2.708300000000413e-05, 2.7570000000004535e-05, 2.7235999999999927e-05, 2.7555000000005492e-05, 2.7708000000001287e-05, 2.766700000000205e-05, 2.686100000000302e-05, 2.7583999999997166e-05, 2.7250000000006436e-05, 2.7444000000001467e-05, 2.7070000000004035e-05, 2.7554999999998553e-05, 2.7054999999998053e-05, 2.7055999999997526e-05, 2.6874999999995652e-05, 2.7221999999993418e-05, 2.7054999999998053e-05, 2.7180000000001647e-05, 2.6985999999992738e-05, 2.7070000000004035e-05, 2.7736000000000427e-05, 2.756900000000506e-05, 2.6846999999996513e-05]</msg>
<status status="PASS" starttime="20201115 22:02:02.607" endtime="20201115 22:02:02.611"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.596" endtime="20201115 22:02:02.613"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:02.619" endtime="20201115 22:02:02.622"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:02.628" endtime="20201115 22:02:02.649"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.623" endtime="20201115 22:02:02.651"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.615" endtime="20201115 22:02:02.652"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.084" endtime="20201115 22:02:02.653"></status>
</kw>
<msg timestamp="20201115 22:02:02.654" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:02.676" endtime="20201115 22:02:02.719"></status>
</kw>
<msg timestamp="20201115 22:02:02.720" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:02.673" endtime="20201115 22:02:02.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:02.727" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:02.723" endtime="20201115 22:02:02.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:02.729" endtime="20201115 22:02:02.733"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.666" endtime="20201115 22:02:02.734"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.660" endtime="20201115 22:02:02.736"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:02.752" endtime="20201115 22:02:03.095"></status>
</kw>
<msg timestamp="20201115 22:02:03.112" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040839667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040867056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:02.749" endtime="20201115 22:02:03.113"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:03.131" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040839667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040867056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:03.115" endtime="20201115 22:02:03.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:03.133" endtime="20201115 22:02:03.139"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.742" endtime="20201115 22:02:03.140"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.737" endtime="20201115 22:02:03.142"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:03.152" level="INFO">${RESULT} = [{'time': 0.040867056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7388999999995722e-05, 'source_diff': 2.7388999999995722e-05}, {'time': 0.041537069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:03.143" endtime="20201115 22:02:03.153"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:03.182" level="INFO">${OVERHEAD} = {'diff': [2.7388999999995722e-05, 2.6902000000002257e-05, 2.7791999999998707e-05, 2.7722000000000857e-05, 2.7222000000000357e-05, 2.69170000000013e-05, 2.7749999999999997e-05, 2.7276999999999163e-05, ...</msg>
<status status="PASS" starttime="20201115 22:02:03.154" endtime="20201115 22:02:03.183"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:03.193" level="INFO">NAME: 00-overhead-16-remove</msg>
<status status="PASS" starttime="20201115 22:02:03.191" endtime="20201115 22:02:03.194"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:03.199" level="INFO">VALUE: [2.7388999999995722e-05, 2.6902000000002257e-05, 2.7791999999998707e-05, 2.7722000000000857e-05, 2.7222000000000357e-05, 2.69170000000013e-05, 2.7749999999999997e-05, 2.7276999999999163e-05, 2.7013999999998817e-05, 2.69170000000013e-05, 2.7056000000004465e-05, 2.688900000000216e-05, 2.7568999999998123e-05, 2.7527999999998887e-05, 2.7736000000000427e-05, 2.688900000000216e-05, 2.722299999999983e-05, 2.6874999999995652e-05, 2.7235999999999927e-05, 2.756900000000506e-05, 2.7040999999998483e-05, 2.7041999999997957e-05, 2.7555999999998027e-05, 2.7555999999998027e-05, 2.7569999999997596e-05, 2.688900000000216e-05, 2.688900000000216e-05, 2.7722000000000857e-05, 2.7568999999998123e-05, 2.740300000000223e-05, 2.7541999999998457e-05, 2.7722000000000857e-05, 2.740300000000223e-05, 2.7221999999993418e-05, 2.7736000000000427e-05, 2.7221999999993418e-05, 2.7721999999993918e-05, 2.69170000000013e-05, 2.738900000000266e-05, 2.7776999999992724e-05, 2.6902999999994792e-05, 2.692999999999446e-05, 2.7250000000006436e-05, 2.7374999999996152e-05, 2.738900000000266e-05, 2.6888999999988283e-05, 2.7541999999991518e-05, 2.7402999999995292e-05, 2.6902999999994792e-05, 2.7055999999997526e-05]</msg>
<status status="PASS" starttime="20201115 22:02:03.195" endtime="20201115 22:02:03.199"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.184" endtime="20201115 22:02:03.201"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:03.207" endtime="20201115 22:02:03.210"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:03.215" endtime="20201115 22:02:03.237"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.211" endtime="20201115 22:02:03.239"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.203" endtime="20201115 22:02:03.240"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.655" endtime="20201115 22:02:03.241"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.348" endtime="20201115 22:02:03.242"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.347" endtime="20201115 22:02:03.242"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:03.247" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:03.270" endtime="20201115 22:02:03.315"></status>
</kw>
<msg timestamp="20201115 22:02:03.316" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:03.266" endtime="20201115 22:02:03.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:03.322" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:03.318" endtime="20201115 22:02:03.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:03.325" endtime="20201115 22:02:03.329"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.259" endtime="20201115 22:02:03.331"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.253" endtime="20201115 22:02:03.332"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:03.348" endtime="20201115 22:02:03.697"></status>
</kw>
<msg timestamp="20201115 22:02:03.704" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046338708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046365486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:03.345" endtime="20201115 22:02:03.705"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:03.722" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046338708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046365486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:03.706" endtime="20201115 22:02:03.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:03.725" endtime="20201115 22:02:03.728"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.338" endtime="20201115 22:02:03.730"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.333" endtime="20201115 22:02:03.731"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:03.742" level="INFO">${RESULT} = [{'time': 0.046365486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6777999999998137e-05, 'source_diff': 2.6777999999998137e-05}, {'time': 0.047073431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:03.733" endtime="20201115 22:02:03.742"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:03.772" level="INFO">${OVERHEAD} = {'diff': [2.6777999999998137e-05, 2.7305999999997776e-05, 2.7291000000005672e-05, 2.7292000000005145e-05, 2.7652999999995542e-05, 2.695900000000001e-05, 2.7069999999997096e-05, 2.7305000000005242e-05,...</msg>
<status status="PASS" starttime="20201115 22:02:03.744" endtime="20201115 22:02:03.772"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:03.783" level="INFO">NAME: 00-overhead-17-remove</msg>
<status status="PASS" starttime="20201115 22:02:03.781" endtime="20201115 22:02:03.784"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:03.788" level="INFO">VALUE: [2.6777999999998137e-05, 2.7305999999997776e-05, 2.7291000000005672e-05, 2.7292000000005145e-05, 2.7652999999995542e-05, 2.695900000000001e-05, 2.7069999999997096e-05, 2.7305000000005242e-05, 2.745900000000051e-05, 2.7333999999996916e-05, 2.6985999999999677e-05, 2.763900000000291e-05, 2.7612000000003245e-05, 2.744500000000094e-05, 2.713900000000241e-05, 2.7290999999998733e-05, 2.715300000000198e-05, 2.6985999999999677e-05, 2.763900000000291e-05, 2.713900000000241e-05, 2.7124999999995902e-05, 2.6819999999996846e-05, 2.7291999999998207e-05, 2.697299999999958e-05, 2.7472000000000607e-05, 2.765300000000248e-05, 2.7499999999999747e-05, 2.7138999999995472e-05, 2.6791999999997707e-05, 2.6930999999993932e-05, 2.7805000000005742e-05, 2.768100000000162e-05, 2.6972000000000107e-05, 2.7610999999996833e-05, 2.7138999999995472e-05, 2.768100000000162e-05, 2.7305000000005242e-05, 2.7818999999998373e-05, 2.7305999999990838e-05, 2.7250000000006436e-05, 2.7110999999996332e-05, 2.7319999999997346e-05, 2.6778000000005076e-05, 2.7638999999995972e-05, 2.7334000000003855e-05, 2.7152000000002507e-05, 2.7306000000004715e-05, 2.7166999999994612e-05, 2.766700000000899e-05, 2.6805999999990338e-05]</msg>
<status status="PASS" starttime="20201115 22:02:03.785" endtime="20201115 22:02:03.789"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.774" endtime="20201115 22:02:03.791"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:03.797" endtime="20201115 22:02:03.800"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:03.805" endtime="20201115 22:02:03.827"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.801" endtime="20201115 22:02:03.829"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.792" endtime="20201115 22:02:03.830"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.248" endtime="20201115 22:02:03.831"></status>
</kw>
<msg timestamp="20201115 22:02:03.831" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:03.855" endtime="20201115 22:02:03.901"></status>
</kw>
<msg timestamp="20201115 22:02:03.902" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:03.851" endtime="20201115 22:02:03.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:03.909" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:03.905" endtime="20201115 22:02:03.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:03.911" endtime="20201115 22:02:03.915"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.844" endtime="20201115 22:02:03.916"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.838" endtime="20201115 22:02:03.918"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:03.934" endtime="20201115 22:02:04.281"></status>
</kw>
<msg timestamp="20201115 22:02:04.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042069972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042097278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:03.931" endtime="20201115 22:02:04.289"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:04.306" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042069972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042097278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:04.291" endtime="20201115 22:02:04.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:04.309" endtime="20201115 22:02:04.314"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.924" endtime="20201115 22:02:04.316"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.919" endtime="20201115 22:02:04.317"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:04.328" level="INFO">${RESULT} = [{'time': 0.042097278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7306000000004715e-05, 'source_diff': 2.7306000000004715e-05}, {'time': 0.042806222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:04.319" endtime="20201115 22:02:04.328"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:04.357" level="INFO">${OVERHEAD} = {'diff': [2.7306000000004715e-05, 2.7818999999998373e-05, 2.6819999999996846e-05, 2.7805999999998277e-05, 2.7458000000001037e-05, 2.6806000000004215e-05, 2.711100000000327e-05, 2.713900000000241e-05, ...</msg>
<status status="PASS" starttime="20201115 22:02:04.330" endtime="20201115 22:02:04.358"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:04.368" level="INFO">NAME: 00-overhead-17-remove</msg>
<status status="PASS" starttime="20201115 22:02:04.366" endtime="20201115 22:02:04.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:04.374" level="INFO">VALUE: [2.7306000000004715e-05, 2.7818999999998373e-05, 2.6819999999996846e-05, 2.7805999999998277e-05, 2.7458000000001037e-05, 2.6806000000004215e-05, 2.711100000000327e-05, 2.713900000000241e-05, 2.7290999999998733e-05, 2.7306000000004715e-05, 2.7304999999998303e-05, 2.713900000000241e-05, 2.6958000000000537e-05, 2.715300000000198e-05, 2.7624999999996402e-05, 2.715300000000198e-05, 2.7291999999998207e-05, 2.7499999999999747e-05, 2.7486000000000177e-05, 2.7512999999999843e-05, 2.7652999999995542e-05, 2.6985999999999677e-05, 2.7319999999997346e-05, 2.7486000000000177e-05, 2.761100000000377e-05, 2.7304999999998303e-05, 2.7652999999995542e-05, 2.697299999999958e-05, 2.7499999999999747e-05, 2.7610999999996833e-05, 2.712500000000284e-05, 2.6972000000000107e-05, 2.688900000000216e-05, 2.75970000000042e-05, 2.7306000000004715e-05, 2.7791999999998707e-05, 2.7306000000004715e-05, 2.7638999999995972e-05, 2.7138999999995472e-05, 2.765300000000248e-05, 2.75970000000042e-05, 2.765300000000248e-05, 2.6818999999997373e-05, 2.7806000000005215e-05, 2.7472000000000607e-05, 2.6805000000004742e-05, 2.70970000000037e-05, 2.7749999999993058e-05, 2.7180000000001647e-05, 2.6804999999990864e-05]</msg>
<status status="PASS" starttime="20201115 22:02:04.370" endtime="20201115 22:02:04.375"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.359" endtime="20201115 22:02:04.376"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:04.382" endtime="20201115 22:02:04.385"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:04.391" endtime="20201115 22:02:04.412"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.386" endtime="20201115 22:02:04.414"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.378" endtime="20201115 22:02:04.415"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.832" endtime="20201115 22:02:04.416"></status>
</kw>
<msg timestamp="20201115 22:02:04.417" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:04.440" endtime="20201115 22:02:04.485"></status>
</kw>
<msg timestamp="20201115 22:02:04.486" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:04.437" endtime="20201115 22:02:04.487"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:04.492" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:04.488" endtime="20201115 22:02:04.493"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:04.495" endtime="20201115 22:02:04.498"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.430" endtime="20201115 22:02:04.500"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.423" endtime="20201115 22:02:04.501"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:04.518" endtime="20201115 22:02:04.853"></status>
</kw>
<msg timestamp="20201115 22:02:04.860" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041676222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041703542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:04.514" endtime="20201115 22:02:04.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:04.878" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041676222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041703542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:04.862" endtime="20201115 22:02:04.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:04.880" endtime="20201115 22:02:04.888"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.507" endtime="20201115 22:02:04.890"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.503" endtime="20201115 22:02:04.891"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:04.902" level="INFO">${RESULT} = [{'time': 0.041703542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7320000000004285e-05, 'source_diff': 2.7320000000004285e-05}, {'time': 0.0424085, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:04.893" endtime="20201115 22:02:04.903"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:04.932" level="INFO">${OVERHEAD} = {'diff': [2.7320000000004285e-05, 2.6985999999999677e-05, 2.6985999999999677e-05, 2.7874999999996652e-05, 2.713900000000241e-05, 2.7472000000000607e-05, 2.766700000000205e-05, 2.766599999999564e-05, 2...</msg>
<status status="PASS" starttime="20201115 22:02:04.904" endtime="20201115 22:02:04.933"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:04.943" level="INFO">NAME: 00-overhead-17-remove</msg>
<status status="PASS" starttime="20201115 22:02:04.941" endtime="20201115 22:02:04.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:04.949" level="INFO">VALUE: [2.7320000000004285e-05, 2.6985999999999677e-05, 2.6985999999999677e-05, 2.7874999999996652e-05, 2.713900000000241e-05, 2.7472000000000607e-05, 2.766700000000205e-05, 2.766599999999564e-05, 2.7304999999998303e-05, 2.713900000000241e-05, 2.7318999999997873e-05, 2.6944000000000967e-05, 2.6985999999999677e-05, 2.7499999999999747e-05, 2.7152000000002507e-05, 2.756900000000506e-05, 2.6777000000005602e-05, 2.715300000000198e-05, 2.7138999999995472e-05, 2.7499999999999747e-05, 2.7555999999998027e-05, 2.695900000000001e-05, 2.7638999999995972e-05, 2.7360999999996582e-05, 2.7471999999993668e-05, 2.7819999999997846e-05, 2.7320000000004285e-05, 2.763900000000291e-05, 2.733300000000438e-05, 2.7708000000001287e-05, 2.6986000000006616e-05, 2.6834000000003355e-05, 2.7499999999999747e-05, 2.7500000000013625e-05, 2.712500000000284e-05, 2.6999999999999247e-05, 2.7708000000001287e-05, 2.7499999999999747e-05, 2.7318999999997873e-05, 2.736100000000352e-05, 2.7486000000007116e-05, 2.6986000000006616e-05, 2.7362000000002995e-05, 2.7306000000004715e-05, 2.7319999999997346e-05, 2.6986000000006616e-05, 2.744500000000094e-05, 2.6958000000007476e-05, 2.765300000000248e-05, 2.6986000000006616e-05]</msg>
<status status="PASS" starttime="20201115 22:02:04.946" endtime="20201115 22:02:04.950"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.934" endtime="20201115 22:02:04.951"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:04.958" endtime="20201115 22:02:04.960"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:04.966" endtime="20201115 22:02:04.988"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.961" endtime="20201115 22:02:04.990"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.953" endtime="20201115 22:02:04.991"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.418" endtime="20201115 22:02:04.992"></status>
</kw>
<msg timestamp="20201115 22:02:04.992" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:05.016" endtime="20201115 22:02:05.060"></status>
</kw>
<msg timestamp="20201115 22:02:05.062" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:05.012" endtime="20201115 22:02:05.062"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:05.068" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:05.064" endtime="20201115 22:02:05.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:05.070" endtime="20201115 22:02:05.074"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.005" endtime="20201115 22:02:05.075"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.999" endtime="20201115 22:02:05.077"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:05.093" endtime="20201115 22:02:05.429"></status>
</kw>
<msg timestamp="20201115 22:02:05.436" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041314472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041342306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:05.090" endtime="20201115 22:02:05.436"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:05.454" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041314472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041342306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:05.438" endtime="20201115 22:02:05.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:05.457" endtime="20201115 22:02:05.462"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.083" endtime="20201115 22:02:05.464"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.078" endtime="20201115 22:02:05.465"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:05.476" level="INFO">${RESULT} = [{'time': 0.041342306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7834000000004355e-05, 'source_diff': 2.7834000000004355e-05}, {'time': 0.042049361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:05.467" endtime="20201115 22:02:05.476"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:05.506" level="INFO">${OVERHEAD} = {'diff': [2.7834000000004355e-05, 2.766700000000205e-05, 2.7319999999997346e-05, 2.715300000000198e-05, 2.7805000000005742e-05, 2.719500000000069e-05, 2.747300000000008e-05, 2.7486000000000177e-05, 2....</msg>
<status status="PASS" starttime="20201115 22:02:05.478" endtime="20201115 22:02:05.506"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:05.516" level="INFO">NAME: 00-overhead-17-remove</msg>
<status status="PASS" starttime="20201115 22:02:05.514" endtime="20201115 22:02:05.517"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:05.522" level="INFO">VALUE: [2.7834000000004355e-05, 2.766700000000205e-05, 2.7319999999997346e-05, 2.715300000000198e-05, 2.7805000000005742e-05, 2.719500000000069e-05, 2.747300000000008e-05, 2.7486000000000177e-05, 2.7152000000002507e-05, 2.7305999999997776e-05, 2.765300000000248e-05, 2.7486000000000177e-05, 2.770900000000076e-05, 2.783300000000488e-05, 2.7472000000000607e-05, 2.7291999999998207e-05, 2.765300000000248e-05, 2.7124999999995902e-05, 2.745900000000051e-05, 2.716599999999514e-05, 2.7152999999995042e-05, 2.7610999999996833e-05, 2.6819999999996846e-05, 2.7027999999998387e-05, 2.716700000000155e-05, 2.7055000000004992e-05, 2.7332999999997443e-05, 2.6999999999999247e-05, 2.7458000000001037e-05, 2.768100000000162e-05, 2.7610999999996833e-05, 2.7819999999997846e-05, 2.7472000000000607e-05, 2.6999999999999247e-05, 2.6986000000006616e-05, 2.6986000000006616e-05, 2.769500000000813e-05, 2.6972000000000107e-05, 2.6985999999992738e-05, 2.6818999999997373e-05, 2.6957999999993598e-05, 2.6819999999996846e-05, 2.7305000000005242e-05, 2.7138999999995472e-05, 2.7805000000005742e-05, 2.7318999999997873e-05, 2.7805000000005742e-05, 2.7638999999995972e-05, 2.7374999999996152e-05, 2.765300000000248e-05]</msg>
<status status="PASS" starttime="20201115 22:02:05.519" endtime="20201115 22:02:05.523"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.508" endtime="20201115 22:02:05.525"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:05.531" endtime="20201115 22:02:05.534"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:05.539" endtime="20201115 22:02:05.561"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.535" endtime="20201115 22:02:05.563"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.527" endtime="20201115 22:02:05.564"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.994" endtime="20201115 22:02:05.565"></status>
</kw>
<msg timestamp="20201115 22:02:05.565" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:05.588" endtime="20201115 22:02:05.633"></status>
</kw>
<msg timestamp="20201115 22:02:05.634" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:05.585" endtime="20201115 22:02:05.635"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:05.640" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:05.636" endtime="20201115 22:02:05.641"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:05.643" endtime="20201115 22:02:05.646"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.578" endtime="20201115 22:02:05.648"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.572" endtime="20201115 22:02:05.649"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:05.666" endtime="20201115 22:02:06.005"></status>
</kw>
<msg timestamp="20201115 22:02:06.012" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040881306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040908958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:05.662" endtime="20201115 22:02:06.013"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:06.031" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040881306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040908958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:06.015" endtime="20201115 22:02:06.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:06.034" endtime="20201115 22:02:06.039"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.655" endtime="20201115 22:02:06.041"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.651" endtime="20201115 22:02:06.042"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:06.053" level="INFO">${RESULT} = [{'time': 0.040908958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7652000000003008e-05, 'source_diff': 2.7652000000003008e-05}, {'time': 0.041616972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:06.044" endtime="20201115 22:02:06.054"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:06.084" level="INFO">${OVERHEAD} = {'diff': [2.7652000000003008e-05, 2.7790999999999233e-05, 2.7848000000003925e-05, 2.740300000000223e-05, 2.7305999999997776e-05, 2.7666000000002577e-05, 2.6985999999999677e-05, 2.698699999999915e-05, ...</msg>
<status status="PASS" starttime="20201115 22:02:06.055" endtime="20201115 22:02:06.085"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:06.096" level="INFO">NAME: 00-overhead-17-remove</msg>
<status status="PASS" starttime="20201115 22:02:06.093" endtime="20201115 22:02:06.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:06.101" level="INFO">VALUE: [2.7652000000003008e-05, 2.7790999999999233e-05, 2.7848000000003925e-05, 2.740300000000223e-05, 2.7305999999997776e-05, 2.7666000000002577e-05, 2.6985999999999677e-05, 2.698699999999915e-05, 2.6958000000000537e-05, 2.7472000000000607e-05, 2.7110999999996332e-05, 2.715300000000198e-05, 2.7486000000000177e-05, 2.6972000000000107e-05, 2.7346999999997013e-05, 2.7305000000005242e-05, 2.7486000000000177e-05, 2.6972000000000107e-05, 2.7069999999997096e-05, 2.7180000000001647e-05, 2.7666999999995112e-05, 2.6985999999999677e-05, 2.763900000000291e-05, 2.6806000000004215e-05, 2.7457999999994098e-05, 2.7638999999995972e-05, 2.7804999999998803e-05, 2.7805999999998277e-05, 2.765300000000248e-05, 2.7499999999999747e-05, 2.6985999999999677e-05, 2.7805000000005742e-05, 2.7652999999988603e-05, 2.7319999999997346e-05, 2.7138999999995472e-05, 2.7304999999991364e-05, 2.6985999999992738e-05, 2.7666999999995112e-05, 2.7013999999991878e-05, 2.7304999999991364e-05, 2.765300000000248e-05, 2.7180000000001647e-05, 2.7554999999998553e-05, 2.7485999999993238e-05, 2.7652000000003008e-05, 2.6818999999997373e-05, 2.6999999999999247e-05, 2.6972000000000107e-05, 2.765300000000248e-05, 2.765300000000248e-05]</msg>
<status status="PASS" starttime="20201115 22:02:06.098" endtime="20201115 22:02:06.103"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.086" endtime="20201115 22:02:06.104"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:06.111" endtime="20201115 22:02:06.114"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:06.119" endtime="20201115 22:02:06.141"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.115" endtime="20201115 22:02:06.143"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.106" endtime="20201115 22:02:06.145"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.567" endtime="20201115 22:02:06.145"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.245" endtime="20201115 22:02:06.146"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.243" endtime="20201115 22:02:06.146"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:06.151" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:06.175" endtime="20201115 22:02:06.223"></status>
</kw>
<msg timestamp="20201115 22:02:06.224" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:06.171" endtime="20201115 22:02:06.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:06.230" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:06.226" endtime="20201115 22:02:06.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:06.232" endtime="20201115 22:02:06.236"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.164" endtime="20201115 22:02:06.238"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.158" endtime="20201115 22:02:06.240"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:06.256" endtime="20201115 22:02:06.607"></status>
</kw>
<msg timestamp="20201115 22:02:06.615" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047641931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047669181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:06.253" endtime="20201115 22:02:06.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:06.633" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047641931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047669181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:06.617" endtime="20201115 22:02:06.634"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:06.636" endtime="20201115 22:02:06.640"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.246" endtime="20201115 22:02:06.641"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.241" endtime="20201115 22:02:06.643"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:06.654" level="INFO">${RESULT} = [{'time': 0.047669181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7249999999999497e-05, 'source_diff': 2.7249999999999497e-05}, {'time': 0.048417278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:06.644" endtime="20201115 22:02:06.654"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:06.684" level="INFO">${OVERHEAD} = {'diff': [2.7249999999999497e-05, 2.7056000000004465e-05, 2.7070000000004035e-05, 2.7222000000000357e-05, 2.7222000000000357e-05, 2.720900000000026e-05, 2.7027999999998387e-05, 2.738900000000266e-05, ...</msg>
<status status="PASS" starttime="20201115 22:02:06.656" endtime="20201115 22:02:06.685"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:06.696" level="INFO">NAME: 00-overhead-18-remove</msg>
<status status="PASS" starttime="20201115 22:02:06.694" endtime="20201115 22:02:06.697"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:06.702" level="INFO">VALUE: [2.7249999999999497e-05, 2.7056000000004465e-05, 2.7070000000004035e-05, 2.7222000000000357e-05, 2.7222000000000357e-05, 2.720900000000026e-05, 2.7027999999998387e-05, 2.738900000000266e-05, 2.768100000000162e-05, 2.7346999999997013e-05, 2.74170000000018e-05, 2.7084000000003605e-05, 2.7180000000001647e-05, 2.7014000000005756e-05, 2.7262999999999593e-05, 2.690300000000173e-05, 2.737500000000309e-05, 2.7680000000002147e-05, 2.7068999999997623e-05, 2.7722000000000857e-05, 2.7235999999999927e-05, 2.7070000000004035e-05, 2.7194000000008156e-05, 2.74170000000018e-05, 2.7554999999998553e-05, 2.7528000000012764e-05, 2.6902999999994792e-05, 2.7583999999997166e-05, 2.7736000000000427e-05, 2.7012999999992404e-05, 2.7249999999992558e-05, 2.706900000000456e-05, 2.738900000000266e-05, 2.7055999999997526e-05, 2.7263999999999067e-05, 2.7374999999996152e-05, 2.745900000000745e-05, 2.7235999999999927e-05, 2.7292000000012084e-05, 2.7096999999989824e-05, 2.7570000000004535e-05, 2.7263999999999067e-05, 2.7235999999999927e-05, 2.7513999999992378e-05, 2.7083999999996666e-05, 2.7249999999992558e-05, 2.688900000000216e-05, 2.7235999999999927e-05, 2.7736000000000427e-05, 2.69170000000013e-05]</msg>
<status status="PASS" starttime="20201115 22:02:06.698" endtime="20201115 22:02:06.703"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.686" endtime="20201115 22:02:06.705"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:06.711" endtime="20201115 22:02:06.714"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:06.720" endtime="20201115 22:02:06.742"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.715" endtime="20201115 22:02:06.744"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.707" endtime="20201115 22:02:06.745"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.152" endtime="20201115 22:02:06.746"></status>
</kw>
<msg timestamp="20201115 22:02:06.746" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:06.770" endtime="20201115 22:02:06.817"></status>
</kw>
<msg timestamp="20201115 22:02:06.819" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:06.766" endtime="20201115 22:02:06.819"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:06.825" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:06.821" endtime="20201115 22:02:06.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:06.827" endtime="20201115 22:02:06.831"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.759" endtime="20201115 22:02:06.833"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.753" endtime="20201115 22:02:06.834"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:06.851" endtime="20201115 22:02:07.201"></status>
</kw>
<msg timestamp="20201115 22:02:07.208" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042264111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042291403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:06.848" endtime="20201115 22:02:07.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:07.227" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042264111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042291403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:07.211" endtime="20201115 22:02:07.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:07.229" endtime="20201115 22:02:07.237"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.841" endtime="20201115 22:02:07.238"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.836" endtime="20201115 22:02:07.240"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:07.251" level="INFO">${RESULT} = [{'time': 0.042291403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7291999999998207e-05, 'source_diff': 2.7291999999998207e-05}, {'time': 0.04303425, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 22:02:07.242" endtime="20201115 22:02:07.252"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:07.282" level="INFO">${OVERHEAD} = {'diff': [2.7291999999998207e-05, 2.7222000000000357e-05, 2.7374999999996152e-05, 2.7055000000004992e-05, 2.7208000000000787e-05, 2.7749999999999997e-05, 2.7222000000000357e-05, 2.7374999999996152e-05...</msg>
<status status="PASS" starttime="20201115 22:02:07.254" endtime="20201115 22:02:07.283"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:07.294" level="INFO">NAME: 00-overhead-18-remove</msg>
<status status="PASS" starttime="20201115 22:02:07.292" endtime="20201115 22:02:07.295"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:07.300" level="INFO">VALUE: [2.7291999999998207e-05, 2.7222000000000357e-05, 2.7374999999996152e-05, 2.7055000000004992e-05, 2.7208000000000787e-05, 2.7749999999999997e-05, 2.7222000000000357e-05, 2.7374999999996152e-05, 2.7069999999997096e-05, 2.7722000000000857e-05, 2.740199999999582e-05, 2.77369999999999e-05, 2.7638000000003438e-05, 2.719500000000069e-05, 2.772300000000033e-05, 2.7221999999993418e-05, 2.688900000000216e-05, 2.7555999999998027e-05, 2.6902000000002257e-05, 2.7570000000004535e-05, 2.7069999999997096e-05, 2.7569999999997596e-05, 2.7069999999997096e-05, 2.7235999999999927e-05, 2.7207999999993848e-05, 2.737500000000309e-05, 2.7722999999993392e-05, 2.715300000000198e-05, 2.740300000000917e-05, 2.7570000000004535e-05, 2.7736000000000427e-05, 2.7554999999998553e-05, 2.687500000000953e-05, 2.7721999999993918e-05, 2.738900000000266e-05, 2.7110999999996332e-05, 2.698699999999221e-05, 2.6874999999995652e-05, 2.7554999999998553e-05, 2.7070000000004035e-05, 2.7570000000004535e-05, 2.722300000000677e-05, 2.7388999999988783e-05, 2.7444000000001467e-05, 2.7082999999997193e-05, 2.7388999999988783e-05, 2.690300000000867e-05, 2.6902999999994792e-05, 2.688900000000216e-05, 2.7540999999992044e-05]</msg>
<status status="PASS" starttime="20201115 22:02:07.297" endtime="20201115 22:02:07.301"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.285" endtime="20201115 22:02:07.302"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:07.309" endtime="20201115 22:02:07.312"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:07.317" endtime="20201115 22:02:07.339"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.313" endtime="20201115 22:02:07.341"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.304" endtime="20201115 22:02:07.343"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.747" endtime="20201115 22:02:07.344"></status>
</kw>
<msg timestamp="20201115 22:02:07.344" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:07.368" endtime="20201115 22:02:07.415"></status>
</kw>
<msg timestamp="20201115 22:02:07.417" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:07.364" endtime="20201115 22:02:07.417"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:07.423" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:07.419" endtime="20201115 22:02:07.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:07.425" endtime="20201115 22:02:07.429"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.357" endtime="20201115 22:02:07.431"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.351" endtime="20201115 22:02:07.432"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:07.449" endtime="20201115 22:02:07.809"></status>
</kw>
<msg timestamp="20201115 22:02:07.816" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042346, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042373222, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:02:07.446" endtime="20201115 22:02:07.816"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:07.834" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042346, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042373222, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:02:07.818" endtime="20201115 22:02:07.835"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:07.837" endtime="20201115 22:02:07.842"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.438" endtime="20201115 22:02:07.844"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.434" endtime="20201115 22:02:07.845"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:07.857" level="INFO">${RESULT} = [{'time': 0.042373222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7222000000000357e-05, 'source_diff': 2.7222000000000357e-05}, {'time': 0.043121153, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:07.847" endtime="20201115 22:02:07.857"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:07.888" level="INFO">${OVERHEAD} = {'diff': [2.7222000000000357e-05, 2.7749999999999997e-05, 2.6888999999995222e-05, 2.740300000000223e-05, 2.7666999999995112e-05, 2.688900000000216e-05, 2.7554999999998553e-05, 2.7499999999999747e-05, ...</msg>
<status status="PASS" starttime="20201115 22:02:07.859" endtime="20201115 22:02:07.888"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:07.899" level="INFO">NAME: 00-overhead-18-remove</msg>
<status status="PASS" starttime="20201115 22:02:07.897" endtime="20201115 22:02:07.900"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:07.905" level="INFO">VALUE: [2.7222000000000357e-05, 2.7749999999999997e-05, 2.6888999999995222e-05, 2.740300000000223e-05, 2.7666999999995112e-05, 2.688900000000216e-05, 2.7554999999998553e-05, 2.7499999999999747e-05, 2.690300000000173e-05, 2.772300000000033e-05, 2.7555999999998027e-05, 2.740300000000223e-05, 2.7555999999998027e-05, 2.7055999999997526e-05, 2.7222000000000357e-05, 2.7070000000004035e-05, 2.7708000000001287e-05, 2.7402000000002757e-05, 2.6888000000002688e-05, 2.7069999999997096e-05, 2.7554999999998553e-05, 2.7055999999997526e-05, 2.740300000000223e-05, 2.7777999999999137e-05, 2.7540999999998983e-05, 2.738900000000266e-05, 2.7722000000000857e-05, 2.772300000000727e-05, 2.7222000000007296e-05, 2.7070000000004035e-05, 2.7570000000004535e-05, 2.687500000000953e-05, 2.7569999999990658e-05, 2.7555999999998027e-05, 2.7042000000004895e-05, 2.74170000000018e-05, 2.7791999999998707e-05, 2.7554999999998553e-05, 2.7542000000005395e-05, 2.770900000000076e-05, 2.7222000000007296e-05, 2.7570000000004535e-05, 2.7416999999987923e-05, 2.7721999999993918e-05, 2.738900000000266e-05, 2.7457999999994098e-05, 2.7235999999999927e-05, 2.7584000000011044e-05, 2.7554999999998553e-05, 2.7402999999995292e-05]</msg>
<status status="PASS" starttime="20201115 22:02:07.902" endtime="20201115 22:02:07.906"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.890" endtime="20201115 22:02:07.907"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:07.914" endtime="20201115 22:02:07.916"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:07.922" endtime="20201115 22:02:07.945"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.918" endtime="20201115 22:02:07.946"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.909" endtime="20201115 22:02:07.948"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.345" endtime="20201115 22:02:07.948"></status>
</kw>
<msg timestamp="20201115 22:02:07.949" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:07.972" endtime="20201115 22:02:08.021"></status>
</kw>
<msg timestamp="20201115 22:02:08.022" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:07.969" endtime="20201115 22:02:08.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:08.028" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:08.024" endtime="20201115 22:02:08.029"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:08.031" endtime="20201115 22:02:08.035"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.962" endtime="20201115 22:02:08.036"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.956" endtime="20201115 22:02:08.038"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:08.055" endtime="20201115 22:02:08.404"></status>
</kw>
<msg timestamp="20201115 22:02:08.411" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042525347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042552431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:08.051" endtime="20201115 22:02:08.412"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:08.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042525347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042552431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:08.414" endtime="20201115 22:02:08.436"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:08.438" endtime="20201115 22:02:08.444"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.044" endtime="20201115 22:02:08.446"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.039" endtime="20201115 22:02:08.447"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:08.458" level="INFO">${RESULT} = [{'time': 0.042552431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7084000000003605e-05, 'source_diff': 2.7084000000003605e-05}, {'time': 0.043297486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:08.449" endtime="20201115 22:02:08.459"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:08.489" level="INFO">${OVERHEAD} = {'diff': [2.7084000000003605e-05, 2.758300000000463e-05, 2.7235999999999927e-05, 2.7041999999997957e-05, 2.7569999999997596e-05, 2.6874999999995652e-05, 2.711100000000327e-05, 2.7749999999999997e-05, ...</msg>
<status status="PASS" starttime="20201115 22:02:08.460" endtime="20201115 22:02:08.489"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:08.500" level="INFO">NAME: 00-overhead-18-remove</msg>
<status status="PASS" starttime="20201115 22:02:08.498" endtime="20201115 22:02:08.501"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:08.506" level="INFO">VALUE: [2.7084000000003605e-05, 2.758300000000463e-05, 2.7235999999999927e-05, 2.7041999999997957e-05, 2.7569999999997596e-05, 2.6874999999995652e-05, 2.711100000000327e-05, 2.7749999999999997e-05, 2.7568999999998123e-05, 2.7736000000000427e-05, 2.6888999999995222e-05, 2.7528000000005826e-05, 2.6888999999995222e-05, 2.738900000000266e-05, 2.7180000000001647e-05, 2.7054999999998053e-05, 2.7749999999999997e-05, 2.6874999999995652e-05, 2.7069999999997096e-05, 2.7040999999998483e-05, 2.7208000000000787e-05, 2.7235999999999927e-05, 2.7568999999998123e-05, 2.7112000000002745e-05, 2.740300000000223e-05, 2.7722000000000857e-05, 2.7555999999998027e-05, 2.6902999999994792e-05, 2.740199999999582e-05, 2.7777000000006602e-05, 2.7262999999999593e-05, 2.7068999999990684e-05, 2.7666999999995112e-05, 2.7736000000000427e-05, 2.7221999999993418e-05, 2.77369999999999e-05, 2.688900000000216e-05, 2.7582999999997693e-05, 2.738900000000266e-05, 2.77369999999999e-05, 2.688900000000216e-05, 2.6902999999994792e-05, 2.7556000000011904e-05, 2.738900000000266e-05, 2.770900000000076e-05, 2.7208000000000787e-05, 2.7221999999993418e-05, 2.7014000000005756e-05, 2.7070000000004035e-05, 2.688900000000216e-05]</msg>
<status status="PASS" starttime="20201115 22:02:08.503" endtime="20201115 22:02:08.507"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.491" endtime="20201115 22:02:08.508"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:08.515" endtime="20201115 22:02:08.517"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:08.523" endtime="20201115 22:02:08.545"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.519" endtime="20201115 22:02:08.547"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.510" endtime="20201115 22:02:08.549"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.950" endtime="20201115 22:02:08.549"></status>
</kw>
<msg timestamp="20201115 22:02:08.550" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:08.573" endtime="20201115 22:02:08.621"></status>
</kw>
<msg timestamp="20201115 22:02:08.622" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:08.570" endtime="20201115 22:02:08.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:08.629" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:08.625" endtime="20201115 22:02:08.629"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:08.631" endtime="20201115 22:02:08.635"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.562" endtime="20201115 22:02:08.636"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.556" endtime="20201115 22:02:08.638"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:08.655" endtime="20201115 22:02:09.005"></status>
</kw>
<msg timestamp="20201115 22:02:09.012" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042080958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042108028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:08.651" endtime="20201115 22:02:09.013"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:09.032" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042080958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042108028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:09.015" endtime="20201115 22:02:09.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:09.034" endtime="20201115 22:02:09.040"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.644" endtime="20201115 22:02:09.042"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.639" endtime="20201115 22:02:09.044"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:09.055" level="INFO">${RESULT} = [{'time': 0.042108028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7069999999997096e-05, 'source_diff': 2.7069999999997096e-05}, {'time': 0.042850819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:09.045" endtime="20201115 22:02:09.055"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:09.085" level="INFO">${OVERHEAD} = {'diff': [2.7069999999997096e-05, 2.7235999999999927e-05, 2.7055999999997526e-05, 2.7249999999999497e-05, 2.7708000000001287e-05, 2.7513999999999317e-05, 2.7222000000000357e-05, 2.7291999999998207e-05...</msg>
<status status="PASS" starttime="20201115 22:02:09.057" endtime="20201115 22:02:09.086"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:09.097" level="INFO">NAME: 00-overhead-18-remove</msg>
<status status="PASS" starttime="20201115 22:02:09.095" endtime="20201115 22:02:09.098"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:09.103" level="INFO">VALUE: [2.7069999999997096e-05, 2.7235999999999927e-05, 2.7055999999997526e-05, 2.7249999999999497e-05, 2.7708000000001287e-05, 2.7513999999999317e-05, 2.7222000000000357e-05, 2.7291999999998207e-05, 2.7666999999995112e-05, 2.7082999999997193e-05, 2.7749999999999997e-05, 2.738799999999625e-05, 2.762500000000334e-05, 2.7513999999999317e-05, 2.738900000000266e-05, 2.7556000000004965e-05, 2.761100000000377e-05, 2.6902999999994792e-05, 2.7749999999999997e-05, 2.706900000000456e-05, 2.738900000000266e-05, 2.7374999999996152e-05, 2.713900000000241e-05, 2.72369999999994e-05, 2.7235999999999927e-05, 2.7749999999999997e-05, 2.7556000000004965e-05, 2.7069999999997096e-05, 2.7749999999993058e-05, 2.7402999999995292e-05, 2.720900000000026e-05, 2.7570000000004535e-05, 2.718100000000112e-05, 2.7708000000001287e-05, 2.6902999999994792e-05, 2.688900000000216e-05, 2.7346999999997013e-05, 2.738900000000266e-05, 2.758300000001157e-05, 2.690300000000867e-05, 2.720900000000026e-05, 2.741599999998845e-05, 2.7708000000001287e-05, 2.7084000000010544e-05, 2.7374999999996152e-05, 2.7221999999993418e-05, 2.7776999999992724e-05, 2.7221999999993418e-05, 2.688900000000216e-05, 2.7221999999993418e-05]</msg>
<status status="PASS" starttime="20201115 22:02:09.099" endtime="20201115 22:02:09.104"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.087" endtime="20201115 22:02:09.105"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:09.112" endtime="20201115 22:02:09.114"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:09.120" endtime="20201115 22:02:09.142"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.116" endtime="20201115 22:02:09.144"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.107" endtime="20201115 22:02:09.145"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.551" endtime="20201115 22:02:09.146"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.149" endtime="20201115 22:02:09.147"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.147" endtime="20201115 22:02:09.147"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:09.152" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:09.176" endtime="20201115 22:02:09.225"></status>
</kw>
<msg timestamp="20201115 22:02:09.227" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:09.172" endtime="20201115 22:02:09.227"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:09.233" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:09.229" endtime="20201115 22:02:09.234"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:09.236" endtime="20201115 22:02:09.240"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.165" endtime="20201115 22:02:09.242"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.159" endtime="20201115 22:02:09.243"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:09.260" endtime="20201115 22:02:09.614"></status>
</kw>
<msg timestamp="20201115 22:02:09.621" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047649069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047677569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:09.257" endtime="20201115 22:02:09.621"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:09.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047649069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047677569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:09.623" endtime="20201115 22:02:09.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:09.642" endtime="20201115 22:02:09.646"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.249" endtime="20201115 22:02:09.647"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.244" endtime="20201115 22:02:09.649"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:09.660" level="INFO">${RESULT} = [{'time': 0.047677569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8500000000000747e-05, 'source_diff': 2.8500000000000747e-05}, {'time': 0.048462486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:09.651" endtime="20201115 22:02:09.660"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:09.763" level="INFO">${OVERHEAD} = {'diff': [2.8500000000000747e-05, 2.8000000000000247e-05, 2.7958000000001537e-05, 2.8124999999996902e-05, 2.8236000000000927e-05, 2.7791999999998707e-05, 2.813900000000341e-05, 2.813900000000341e-05, ...</msg>
<status status="PASS" starttime="20201115 22:02:09.662" endtime="20201115 22:02:09.764"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:09.775" level="INFO">NAME: 00-overhead-19-remove</msg>
<status status="PASS" starttime="20201115 22:02:09.772" endtime="20201115 22:02:09.775"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:09.780" level="INFO">VALUE: [2.8500000000000747e-05, 2.8000000000000247e-05, 2.7958000000001537e-05, 2.8124999999996902e-05, 2.8236000000000927e-05, 2.7791999999998707e-05, 2.813900000000341e-05, 2.813900000000341e-05, 2.795900000000101e-05, 2.8166000000003077e-05, 2.7791999999998707e-05, 2.8818999999999373e-05, 2.7958000000001537e-05, 2.8290999999999733e-05, 2.815300000000298e-05, 2.7986000000000677e-05, 2.7805999999998277e-05, 2.8304999999999303e-05, 2.794399999999503e-05, 2.7848000000010864e-05, 2.863900000001085e-05, 2.8500000000000747e-05, 2.8638999999996972e-05, 2.7972000000001107e-05, 2.7986000000007616e-05, 2.7972000000001107e-05, 2.8485999999994238e-05, 2.8485999999994238e-05, 2.7944000000001967e-05, 2.8138999999996472e-05, 2.8306000000005715e-05, 2.8652999999989603e-05, 2.861100000001171e-05, 2.865300000000348e-05, 2.849999999998687e-05, 2.816700000000949e-05, 2.8305999999991838e-05, 2.8708000000002287e-05, 2.8500000000000747e-05, 2.8472000000001607e-05, 2.8138999999996472e-05, 2.8472000000001607e-05, 2.8818999999999373e-05, 2.863900000001085e-05, 2.8138999999996472e-05, 2.7944000000001967e-05, 2.8110999999997333e-05, 2.8291999999999207e-05, 2.7972000000001107e-05, 2.8832999999992004e-05]</msg>
<status status="PASS" starttime="20201115 22:02:09.777" endtime="20201115 22:02:09.781"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.765" endtime="20201115 22:02:09.782"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:09.789" endtime="20201115 22:02:09.792"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:09.797" endtime="20201115 22:02:09.819"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.793" endtime="20201115 22:02:09.821"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.784" endtime="20201115 22:02:09.823"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.153" endtime="20201115 22:02:09.823"></status>
</kw>
<msg timestamp="20201115 22:02:09.824" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:09.848" endtime="20201115 22:02:09.898"></status>
</kw>
<msg timestamp="20201115 22:02:09.900" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:09.844" endtime="20201115 22:02:09.901"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:09.907" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:09.903" endtime="20201115 22:02:09.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:09.909" endtime="20201115 22:02:09.913"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.836" endtime="20201115 22:02:09.915"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.831" endtime="20201115 22:02:09.916"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:09.933" endtime="20201115 22:02:10.281"></status>
</kw>
<msg timestamp="20201115 22:02:10.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043236306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043264611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:09.929" endtime="20201115 22:02:10.289"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:10.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043236306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043264611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:10.290" endtime="20201115 22:02:10.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:10.309" endtime="20201115 22:02:10.313"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.922" endtime="20201115 22:02:10.315"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.917" endtime="20201115 22:02:10.316"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:10.327" level="INFO">${RESULT} = [{'time': 0.043264611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8304999999999303e-05, 'source_diff': 2.8304999999999303e-05}, {'time': 0.044054056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:10.318" endtime="20201115 22:02:10.327"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:10.358" level="INFO">${OVERHEAD} = {'diff': [2.8304999999999303e-05, 2.8819999999998847e-05, 2.8110999999997333e-05, 2.8013999999999817e-05, 2.8152000000003508e-05, 2.8832999999998943e-05, 2.7818999999998373e-05, 2.8638999999996972e-05...</msg>
<status status="PASS" starttime="20201115 22:02:10.329" endtime="20201115 22:02:10.359"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:10.369" level="INFO">NAME: 00-overhead-19-remove</msg>
<status status="PASS" starttime="20201115 22:02:10.367" endtime="20201115 22:02:10.370"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:10.375" level="INFO">VALUE: [2.8304999999999303e-05, 2.8819999999998847e-05, 2.8110999999997333e-05, 2.8013999999999817e-05, 2.8152000000003508e-05, 2.8832999999998943e-05, 2.7818999999998373e-05, 2.8638999999996972e-05, 2.813900000000341e-05, 2.7805999999998277e-05, 2.8305999999998777e-05, 2.815300000000298e-05, 2.8138000000003938e-05, 2.8500000000000747e-05, 2.8652999999996542e-05, 2.815300000000298e-05, 2.8318999999998873e-05, 2.8000000000000247e-05, 2.815300000000298e-05, 2.8000000000000247e-05, 2.8818999999999373e-05, 2.8486000000001177e-05, 2.8137999999997e-05, 2.8833999999998416e-05, 2.7819999999997846e-05, 2.8485999999994238e-05, 2.8652999999989603e-05, 2.783300000000488e-05, 2.8500000000000747e-05, 2.8346999999998013e-05, 2.781900000001225e-05, 2.8319999999998346e-05, 2.7985999999993738e-05, 2.8083999999997666e-05, 2.783300000000488e-05, 2.815300000000298e-05, 2.8485999999994238e-05, 2.818100000000212e-05, 2.7986000000007616e-05, 2.797300000000058e-05, 2.8319999999998346e-05, 2.8318999999998873e-05, 2.815300000000298e-05, 2.8485999999994238e-05, 2.7832999999991004e-05, 2.7972000000001107e-05, 2.8500000000000747e-05, 2.815300000000298e-05, 2.8318999999998873e-05, 2.8666999999996112e-05]</msg>
<status status="PASS" starttime="20201115 22:02:10.372" endtime="20201115 22:02:10.376"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.360" endtime="20201115 22:02:10.377"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:10.384" endtime="20201115 22:02:10.387"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:10.392" endtime="20201115 22:02:10.414"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.388" endtime="20201115 22:02:10.416"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.379" endtime="20201115 22:02:10.418"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.825" endtime="20201115 22:02:10.418"></status>
</kw>
<msg timestamp="20201115 22:02:10.419" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:10.443" endtime="20201115 22:02:10.495"></status>
</kw>
<msg timestamp="20201115 22:02:10.496" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:10.440" endtime="20201115 22:02:10.496"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:10.502" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:10.498" endtime="20201115 22:02:10.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:10.505" endtime="20201115 22:02:10.508"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.432" endtime="20201115 22:02:10.510"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.426" endtime="20201115 22:02:10.512"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:10.529" endtime="20201115 22:02:10.873"></status>
</kw>
<msg timestamp="20201115 22:02:10.880" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044627194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044655333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:10.525" endtime="20201115 22:02:10.880"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:10.898" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044627194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044655333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:10.882" endtime="20201115 22:02:10.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:10.900" endtime="20201115 22:02:10.904"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.518" endtime="20201115 22:02:10.906"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.513" endtime="20201115 22:02:10.907"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:10.918" level="INFO">${RESULT} = [{'time': 0.044655333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8138999999996472e-05, 'source_diff': 2.8138999999996472e-05}, {'time': 0.045443458, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:10.909" endtime="20201115 22:02:10.918"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:10.948" level="INFO">${OVERHEAD} = {'diff': [2.8138999999996472e-05, 2.8458000000002037e-05, 2.8486000000001177e-05, 2.815300000000298e-05, 2.8819000000006312e-05, 2.7818999999998373e-05, 2.7972000000001107e-05, 2.8000000000000247e-05,...</msg>
<status status="PASS" starttime="20201115 22:02:10.920" endtime="20201115 22:02:10.948"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:10.959" level="INFO">NAME: 00-overhead-19-remove</msg>
<status status="PASS" starttime="20201115 22:02:10.957" endtime="20201115 22:02:10.960"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:10.965" level="INFO">VALUE: [2.8138999999996472e-05, 2.8458000000002037e-05, 2.8486000000001177e-05, 2.815300000000298e-05, 2.8819000000006312e-05, 2.7818999999998373e-05, 2.7972000000001107e-05, 2.8000000000000247e-05, 2.8486000000001177e-05, 2.815300000000298e-05, 2.8486000000001177e-05, 2.8471999999994668e-05, 2.815300000000298e-05, 2.8804999999999803e-05, 2.8000000000000247e-05, 2.8624999999997403e-05, 2.7986000000000677e-05, 2.8652999999996542e-05, 2.8138999999996472e-05, 2.798700000000015e-05, 2.7805000000005742e-05, 2.7972000000001107e-05, 2.8318999999998873e-05, 2.8318999999998873e-05, 2.8791999999999707e-05, 2.8152000000003508e-05, 2.8306000000005715e-05, 2.7806000000005215e-05, 2.866700000000999e-05, 2.8318999999998873e-05, 2.8472000000001607e-05, 2.865300000000348e-05, 2.847300000000108e-05, 2.8346999999998013e-05, 2.8500000000000747e-05, 2.8514000000007256e-05, 2.8778000000007076e-05, 2.8652000000004008e-05, 2.8277000000007102e-05, 2.862500000000434e-05, 2.870900000000176e-05, 2.8346999999998013e-05, 2.8514000000007256e-05, 2.7985999999993738e-05, 2.819399999999528e-05, 2.8332999999991504e-05, 2.7834000000004355e-05, 2.8014000000006756e-05, 2.8277999999992698e-05, 2.7806000000005215e-05]</msg>
<status status="PASS" starttime="20201115 22:02:10.962" endtime="20201115 22:02:10.966"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.950" endtime="20201115 22:02:10.968"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:10.974" endtime="20201115 22:02:10.976"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:10.982" endtime="20201115 22:02:11.004"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.978" endtime="20201115 22:02:11.006"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.969" endtime="20201115 22:02:11.008"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.420" endtime="20201115 22:02:11.008"></status>
</kw>
<msg timestamp="20201115 22:02:11.009" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:11.031" endtime="20201115 22:02:11.080"></status>
</kw>
<msg timestamp="20201115 22:02:11.081" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:11.028" endtime="20201115 22:02:11.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:11.088" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:11.084" endtime="20201115 22:02:11.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:11.090" endtime="20201115 22:02:11.094"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.021" endtime="20201115 22:02:11.096"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.015" endtime="20201115 22:02:11.098"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:11.116" endtime="20201115 22:02:11.451"></status>
</kw>
<msg timestamp="20201115 22:02:11.458" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040945722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040974208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:11.113" endtime="20201115 22:02:11.459"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:11.476" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040945722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040974208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:11.461" endtime="20201115 22:02:11.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:11.479" endtime="20201115 22:02:11.482"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.104" endtime="20201115 22:02:11.484"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.099" endtime="20201115 22:02:11.486"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:11.496" level="INFO">${RESULT} = [{'time': 0.040974208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8486000000001177e-05, 'source_diff': 2.8486000000001177e-05}, {'time': 0.041758278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:11.487" endtime="20201115 22:02:11.497"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:11.526" level="INFO">${OVERHEAD} = {'diff': [2.8486000000001177e-05, 2.8292000000006146e-05, 2.865300000000348e-05, 2.8486999999993712e-05, 2.815199999999657e-05, 2.8500000000000747e-05, 2.813900000000341e-05, 2.8319000000005812e-05, 2...</msg>
<status status="PASS" starttime="20201115 22:02:11.498" endtime="20201115 22:02:11.527"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:11.537" level="INFO">NAME: 00-overhead-19-remove</msg>
<status status="PASS" starttime="20201115 22:02:11.535" endtime="20201115 22:02:11.538"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:11.542" level="INFO">VALUE: [2.8486000000001177e-05, 2.8292000000006146e-05, 2.865300000000348e-05, 2.8486999999993712e-05, 2.815199999999657e-05, 2.8500000000000747e-05, 2.813900000000341e-05, 2.8319000000005812e-05, 2.8486000000001177e-05, 2.8486000000001177e-05, 2.8514000000000317e-05, 2.7930000000002397e-05, 2.7986000000000677e-05, 2.8000000000000247e-05, 2.8333999999997916e-05, 2.843100000000237e-05, 2.7847999999996986e-05, 2.8305999999998777e-05, 2.8124999999996902e-05, 2.813900000000341e-05, 2.845900000000151e-05, 2.7972000000001107e-05, 2.793100000000187e-05, 2.8194000000002217e-05, 2.8319999999998346e-05, 2.7986000000000677e-05, 2.8638999999996972e-05, 2.8334000000004855e-05, 2.7986000000007616e-05, 2.8138999999996472e-05, 2.8791999999999707e-05, 2.813900000001035e-05, 2.8652999999989603e-05, 2.7819999999997846e-05, 2.868100000000262e-05, 2.8485999999994238e-05, 2.8486000000008116e-05, 2.8124999999989964e-05, 2.8319999999998346e-05, 2.815300000000298e-05, 2.8166999999995612e-05, 2.8138999999996472e-05, 2.8638999999996972e-05, 2.818100000000212e-05, 2.8332999999991504e-05, 2.8333999999990978e-05, 2.7972000000001107e-05, 2.8500000000000747e-05, 2.7986000000007616e-05, 2.8138999999996472e-05]</msg>
<status status="PASS" starttime="20201115 22:02:11.539" endtime="20201115 22:02:11.544"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.528" endtime="20201115 22:02:11.546"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:11.552" endtime="20201115 22:02:11.555"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:11.560" endtime="20201115 22:02:11.582"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.556" endtime="20201115 22:02:11.583"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.547" endtime="20201115 22:02:11.585"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.010" endtime="20201115 22:02:11.585"></status>
</kw>
<msg timestamp="20201115 22:02:11.586" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:11.609" endtime="20201115 22:02:11.657"></status>
</kw>
<msg timestamp="20201115 22:02:11.659" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:11.605" endtime="20201115 22:02:11.659"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:11.665" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:11.661" endtime="20201115 22:02:11.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:11.667" endtime="20201115 22:02:11.671"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.598" endtime="20201115 22:02:11.672"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.592" endtime="20201115 22:02:11.674"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:11.690" endtime="20201115 22:02:12.026"></status>
</kw>
<msg timestamp="20201115 22:02:12.033" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040820667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040848458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:11.687" endtime="20201115 22:02:12.034"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:12.051" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040820667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040848458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:12.036" endtime="20201115 22:02:12.052"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:12.054" endtime="20201115 22:02:12.057"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.680" endtime="20201115 22:02:12.059"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.675" endtime="20201115 22:02:12.061"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:12.071" level="INFO">${RESULT} = [{'time': 0.040848458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7790999999999233e-05, 'source_diff': 2.7790999999999233e-05}, {'time': 0.041636472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:12.062" endtime="20201115 22:02:12.072"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:12.103" level="INFO">${OVERHEAD} = {'diff': [2.7790999999999233e-05, 2.8624999999997403e-05, 2.7790999999999233e-05, 2.8819999999998847e-05, 2.8124999999996902e-05, 2.7763000000000093e-05, 2.813900000000341e-05, 2.863900000000391e-05, ...</msg>
<status status="PASS" starttime="20201115 22:02:12.073" endtime="20201115 22:02:12.104"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:12.114" level="INFO">NAME: 00-overhead-19-remove</msg>
<status status="PASS" starttime="20201115 22:02:12.112" endtime="20201115 22:02:12.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:12.120" level="INFO">VALUE: [2.7790999999999233e-05, 2.8624999999997403e-05, 2.7790999999999233e-05, 2.8819999999998847e-05, 2.8124999999996902e-05, 2.7763000000000093e-05, 2.813900000000341e-05, 2.863900000000391e-05, 2.7804999999998803e-05, 2.8638999999996972e-05, 2.8790999999993294e-05, 2.7972000000001107e-05, 2.8332999999998443e-05, 2.8486000000001177e-05, 2.866700000000305e-05, 2.847300000000108e-05, 2.8485999999994238e-05, 2.7972000000001107e-05, 2.8472000000001607e-05, 2.813900000000341e-05, 2.795900000000101e-05, 2.8582999999998693e-05, 2.7736000000000427e-05, 2.815199999999657e-05, 2.8027999999999387e-05, 2.8610999999997833e-05, 2.7805999999998277e-05, 2.812500000000384e-05, 2.7985999999993738e-05, 2.8000000000000247e-05, 2.8666999999996112e-05, 2.812500000000384e-05, 2.8318999999998873e-05, 2.815300000000298e-05, 2.779100000001311e-05, 2.8152000000003508e-05, 2.8304999999992364e-05, 2.8320000000012224e-05, 2.8346999999998013e-05, 2.7819999999997846e-05, 2.7805999999991338e-05, 2.8818999999999373e-05, 2.7986000000007616e-05, 2.8638999999996972e-05, 2.8318999999998873e-05, 2.813900000001035e-05, 2.815300000000298e-05, 2.8290999999999733e-05, 2.8138999999996472e-05, 2.8306000000005715e-05]</msg>
<status status="PASS" starttime="20201115 22:02:12.117" endtime="20201115 22:02:12.121"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.105" endtime="20201115 22:02:12.123"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:12.130" endtime="20201115 22:02:12.132"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:12.138" endtime="20201115 22:02:12.160"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.134" endtime="20201115 22:02:12.162"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.125" endtime="20201115 22:02:12.164"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.587" endtime="20201115 22:02:12.164"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.150" endtime="20201115 22:02:12.165"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.148" endtime="20201115 22:02:12.165"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:12.170" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:12.193" endtime="20201115 22:02:12.244"></status>
</kw>
<msg timestamp="20201115 22:02:12.245" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:12.189" endtime="20201115 22:02:12.245"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:12.251" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:12.247" endtime="20201115 22:02:12.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:12.253" endtime="20201115 22:02:12.257"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.182" endtime="20201115 22:02:12.259"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.177" endtime="20201115 22:02:12.260"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:12.276" endtime="20201115 22:02:12.615"></status>
</kw>
<msg timestamp="20201115 22:02:12.622" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046381986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046410556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:12.273" endtime="20201115 22:02:12.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:12.640" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046381986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046410556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:12.624" endtime="20201115 22:02:12.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:12.642" endtime="20201115 22:02:12.646"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.266" endtime="20201115 22:02:12.647"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.261" endtime="20201115 22:02:12.649"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:12.660" level="INFO">${RESULT} = [{'time': 0.046410556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8569999999998597e-05, 'source_diff': 2.8569999999998597e-05}, {'time': 0.047236708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:12.650" endtime="20201115 22:02:12.660"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:12.690" level="INFO">${OVERHEAD} = {'diff': [2.8569999999998597e-05, 2.8236000000000927e-05, 2.8555999999999027e-05, 2.8110999999997333e-05, 2.8082999999998193e-05, 2.8221999999994418e-05, 2.8736000000001427e-05, 2.840300000000323e-05,...</msg>
<status status="PASS" starttime="20201115 22:02:12.662" endtime="20201115 22:02:12.690"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:12.700" level="INFO">NAME: 00-overhead-20-remove</msg>
<status status="PASS" starttime="20201115 22:02:12.698" endtime="20201115 22:02:12.701"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:12.707" level="INFO">VALUE: [2.8569999999998597e-05, 2.8236000000000927e-05, 2.8555999999999027e-05, 2.8110999999997333e-05, 2.8082999999998193e-05, 2.8221999999994418e-05, 2.8736000000001427e-05, 2.840300000000323e-05, 2.8791999999999707e-05, 2.8555999999999027e-05, 2.8722000000001857e-05, 2.822300000000083e-05, 2.8722000000001857e-05, 2.8388999999996722e-05, 2.8583999999998166e-05, 2.84170000000028e-05, 2.84579999999951e-05, 2.8554999999999553e-05, 2.7888999999996222e-05, 2.858300000000563e-05, 2.8749999999994058e-05, 2.8069999999991158e-05, 2.8749999999994058e-05, 2.8069999999991158e-05, 2.8569000000006062e-05, 2.8513999999993378e-05, 2.8416000000003327e-05, 2.8736000000001427e-05, 2.8222000000008296e-05, 2.8582999999998693e-05, 2.8250000000007436e-05, 2.8736000000001427e-05, 2.808300000001207e-05, 2.8721999999994918e-05, 2.8264000000000067e-05, 2.8736000000001427e-05, 2.8068999999991684e-05, 2.8054999999999053e-05, 2.8721999999994918e-05, 2.8236000000000927e-05, 2.812500000000384e-05, 2.8069999999991158e-05, 2.8736000000001427e-05, 2.8764000000000567e-05, 2.842999999999596e-05, 2.8082999999998193e-05, 2.833300000000538e-05, 2.8542000000006396e-05, 2.8083999999997666e-05, 2.8624999999990464e-05]</msg>
<status status="PASS" starttime="20201115 22:02:12.703" endtime="20201115 22:02:12.707"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.691" endtime="20201115 22:02:12.709"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:12.715" endtime="20201115 22:02:12.718"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:12.723" endtime="20201115 22:02:12.745"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.719" endtime="20201115 22:02:12.747"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.711" endtime="20201115 22:02:12.748"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.171" endtime="20201115 22:02:12.749"></status>
</kw>
<msg timestamp="20201115 22:02:12.749" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:12.772" endtime="20201115 22:02:12.823"></status>
</kw>
<msg timestamp="20201115 22:02:12.824" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:12.769" endtime="20201115 22:02:12.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:12.830" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:12.826" endtime="20201115 22:02:12.831"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:12.832" endtime="20201115 22:02:12.836"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.761" endtime="20201115 22:02:12.837"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.756" endtime="20201115 22:02:12.839"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:12.856" endtime="20201115 22:02:13.190"></status>
</kw>
<msg timestamp="20201115 22:02:13.197" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040610736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040638972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:12.852" endtime="20201115 22:02:13.198"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:13.215" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040610736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040638972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:13.200" endtime="20201115 22:02:13.216"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:13.218" endtime="20201115 22:02:13.223"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.845" endtime="20201115 22:02:13.225"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.840" endtime="20201115 22:02:13.226"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:13.237" level="INFO">${RESULT} = [{'time': 0.040638972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8236000000000927e-05, 'source_diff': 2.8236000000000927e-05}, {'time': 0.041463958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:13.228" endtime="20201115 22:02:13.237"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:13.267" level="INFO">${OVERHEAD} = {'diff': [2.8236000000000927e-05, 2.8054999999999053e-05, 2.840199999999682e-05, 2.8068999999998623e-05, 2.8750000000000997e-05, 2.867999999999621e-05, 2.8555999999999027e-05, 2.8568999999999123e-05, ...</msg>
<status status="PASS" starttime="20201115 22:02:13.239" endtime="20201115 22:02:13.268"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:13.278" level="INFO">NAME: 00-overhead-20-remove</msg>
<status status="PASS" starttime="20201115 22:02:13.276" endtime="20201115 22:02:13.279"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:13.284" level="INFO">VALUE: [2.8236000000000927e-05, 2.8054999999999053e-05, 2.840199999999682e-05, 2.8068999999998623e-05, 2.8750000000000997e-05, 2.867999999999621e-05, 2.8555999999999027e-05, 2.8568999999999123e-05, 2.8597999999997736e-05, 2.8708000000002287e-05, 2.8250000000000497e-05, 2.8721999999994918e-05, 2.8264000000000067e-05, 2.8750000000000997e-05, 2.819500000000169e-05, 2.838900000000366e-05, 2.8026999999999913e-05, 2.8069999999998096e-05, 2.8374999999997152e-05, 2.790199999999632e-05, 2.8568999999999123e-05, 2.8735999999994488e-05, 2.788900000000316e-05, 2.8040999999999483e-05, 2.8082999999998193e-05, 2.862500000000434e-05, 2.8068999999998623e-05, 2.819399999999528e-05, 2.8570000000005535e-05, 2.8722000000008796e-05, 2.8374999999997152e-05, 2.8569000000006062e-05, 2.8554999999999553e-05, 2.8569999999991658e-05, 2.7874999999996652e-05, 2.8416999999988923e-05, 2.8569999999991658e-05, 2.7902999999995792e-05, 2.8222000000008296e-05, 2.8098000000004175e-05, 2.790300000000967e-05, 2.7902999999995792e-05, 2.8236000000000927e-05, 2.8069000000005562e-05, 2.8111999999996806e-05, 2.8221999999994418e-05, 2.8083999999997666e-05, 2.8750000000007936e-05, 2.8722000000008796e-05, 2.8736000000001427e-05]</msg>
<status status="PASS" starttime="20201115 22:02:13.280" endtime="20201115 22:02:13.284"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.269" endtime="20201115 22:02:13.286"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:13.292" endtime="20201115 22:02:13.295"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:13.300" endtime="20201115 22:02:13.322"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.296" endtime="20201115 22:02:13.324"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.288" endtime="20201115 22:02:13.325"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.750" endtime="20201115 22:02:13.326"></status>
</kw>
<msg timestamp="20201115 22:02:13.326" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:13.349" endtime="20201115 22:02:13.400"></status>
</kw>
<msg timestamp="20201115 22:02:13.401" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:13.346" endtime="20201115 22:02:13.401"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:13.407" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:13.403" endtime="20201115 22:02:13.408"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:13.410" endtime="20201115 22:02:13.413"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.339" endtime="20201115 22:02:13.415"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.333" endtime="20201115 22:02:13.416"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:13.432" endtime="20201115 22:02:13.767"></status>
</kw>
<msg timestamp="20201115 22:02:13.774" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040962514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040990597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:13.429" endtime="20201115 22:02:13.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:13.792" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040962514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040990597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:13.776" endtime="20201115 22:02:13.793"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:13.795" endtime="20201115 22:02:13.800"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.422" endtime="20201115 22:02:13.801"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.418" endtime="20201115 22:02:13.803"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:13.814" level="INFO">${RESULT} = [{'time': 0.040990597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8082999999998193e-05, 'source_diff': 2.8082999999998193e-05}, {'time': 0.041816639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:13.804" endtime="20201115 22:02:13.815"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:13.844" level="INFO">${OVERHEAD} = {'diff': [2.8082999999998193e-05, 2.838900000000366e-05, 2.8722999999994392e-05, 2.8236000000000927e-05, 2.8749999999994058e-05, 2.8068999999998623e-05, 2.8568999999999123e-05, 2.8583999999998166e-05,...</msg>
<status status="PASS" starttime="20201115 22:02:13.816" endtime="20201115 22:02:13.845"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:13.855" level="INFO">NAME: 00-overhead-20-remove</msg>
<status status="PASS" starttime="20201115 22:02:13.853" endtime="20201115 22:02:13.856"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:13.860" level="INFO">VALUE: [2.8082999999998193e-05, 2.838900000000366e-05, 2.8722999999994392e-05, 2.8236000000000927e-05, 2.8749999999994058e-05, 2.8068999999998623e-05, 2.8568999999999123e-05, 2.8583999999998166e-05, 2.8555999999999027e-05, 2.8721999999994918e-05, 2.8041999999998957e-05, 2.8236000000000927e-05, 2.82370000000004e-05, 2.8250000000000497e-05, 2.8555000000006492e-05, 2.8582999999998693e-05, 2.8736000000001427e-05, 2.8555999999999027e-05, 2.8236000000000927e-05, 2.8027999999999387e-05, 2.8222999999993892e-05, 2.8652999999996542e-05, 2.7846999999997513e-05, 2.7874999999996652e-05, 2.7958000000001537e-05, 2.838900000000366e-05, 2.8583999999998166e-05, 2.8555999999999027e-05, 2.870900000000176e-05, 2.8374999999997152e-05, 2.8570000000005535e-05, 2.79170000000023e-05, 2.788900000000316e-05, 2.8221999999994418e-05, 2.833300000000538e-05, 2.8194999999994752e-05, 2.7902999999995792e-05, 2.8708000000002287e-05, 2.8736000000001427e-05, 2.7916000000002827e-05, 2.8721999999994918e-05, 2.7888999999989283e-05, 2.8068999999991684e-05, 2.8416999999988923e-05, 2.8068999999991684e-05, 2.8236000000000927e-05, 2.8736000000001427e-05, 2.8555999999999027e-05, 2.8541999999992518e-05, 2.865300000000348e-05]</msg>
<status status="PASS" starttime="20201115 22:02:13.857" endtime="20201115 22:02:13.861"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.846" endtime="20201115 22:02:13.863"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:13.869" endtime="20201115 22:02:13.872"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:13.877" endtime="20201115 22:02:13.899"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.873" endtime="20201115 22:02:13.900"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.865" endtime="20201115 22:02:13.902"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.327" endtime="20201115 22:02:13.902"></status>
</kw>
<msg timestamp="20201115 22:02:13.903" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:13.926" endtime="20201115 22:02:13.977"></status>
</kw>
<msg timestamp="20201115 22:02:13.978" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:13.922" endtime="20201115 22:02:13.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:13.984" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:13.980" endtime="20201115 22:02:13.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:13.987" endtime="20201115 22:02:13.990"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.915" endtime="20201115 22:02:13.992"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.910" endtime="20201115 22:02:13.993"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:14.010" endtime="20201115 22:02:14.359"></status>
</kw>
<msg timestamp="20201115 22:02:14.366" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0407235, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040751736, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:02:14.007" endtime="20201115 22:02:14.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:14.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0407235, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040751736, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:02:14.368" endtime="20201115 22:02:14.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:14.387" endtime="20201115 22:02:14.392"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.000" endtime="20201115 22:02:14.394"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.995" endtime="20201115 22:02:14.395"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:14.406" level="INFO">${RESULT} = [{'time': 0.040751736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8235999999993988e-05, 'source_diff': 2.8235999999993988e-05}, {'time': 0.041576917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:14.397" endtime="20201115 22:02:14.406"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:14.438" level="INFO">${OVERHEAD} = {'diff': [2.8235999999993988e-05, 2.8055999999998527e-05, 2.8402999999996292e-05, 2.8222000000001357e-05, 2.8568999999999123e-05, 2.8222000000001357e-05, 2.8736000000001427e-05, 2.82370000000004e-05, ...</msg>
<status status="PASS" starttime="20201115 22:02:14.408" endtime="20201115 22:02:14.438"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:14.449" level="INFO">NAME: 00-overhead-20-remove</msg>
<status status="PASS" starttime="20201115 22:02:14.447" endtime="20201115 22:02:14.449"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:14.454" level="INFO">VALUE: [2.8235999999993988e-05, 2.8055999999998527e-05, 2.8402999999996292e-05, 2.8222000000001357e-05, 2.8568999999999123e-05, 2.8222000000001357e-05, 2.8736000000001427e-05, 2.82370000000004e-05, 2.788900000000316e-05, 2.788900000000316e-05, 2.8250000000000497e-05, 2.8082999999998193e-05, 2.8055999999998527e-05, 2.8082999999998193e-05, 2.8236000000000927e-05, 2.8055999999998527e-05, 2.8084000000004605e-05, 2.8055999999998527e-05, 2.868100000000262e-05, 2.8721999999994918e-05, 2.7833999999997416e-05, 2.8402999999996292e-05, 2.8250000000000497e-05, 2.788900000000316e-05, 2.7902999999995792e-05, 2.784700000000445e-05, 2.858300000000563e-05, 2.8736000000001427e-05, 2.8776999999993724e-05, 2.8764000000000567e-05, 2.794500000000144e-05, 2.84170000000028e-05, 2.8708000000002287e-05, 2.8749999999994058e-05, 2.8402999999996292e-05, 2.7902999999995792e-05, 2.8416999999988923e-05, 2.8402999999996292e-05, 2.8721999999994918e-05, 2.8069000000005562e-05, 2.8250000000007436e-05, 2.8554999999999553e-05, 2.7902999999995792e-05, 2.7888999999989283e-05, 2.790300000000967e-05, 2.822300000000777e-05, 2.8388999999989784e-05, 2.8277999999992698e-05, 2.8540999999993044e-05, 2.8582999999998693e-05]</msg>
<status status="PASS" starttime="20201115 22:02:14.451" endtime="20201115 22:02:14.455"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.440" endtime="20201115 22:02:14.457"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:14.463" endtime="20201115 22:02:14.466"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:14.471" endtime="20201115 22:02:14.493"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.467" endtime="20201115 22:02:14.495"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.458" endtime="20201115 22:02:14.496"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.904" endtime="20201115 22:02:14.497"></status>
</kw>
<msg timestamp="20201115 22:02:14.497" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:14.520" endtime="20201115 22:02:14.571"></status>
</kw>
<msg timestamp="20201115 22:02:14.572" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:14.516" endtime="20201115 22:02:14.573"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:14.579" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:14.575" endtime="20201115 22:02:14.579"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:14.581" endtime="20201115 22:02:14.584"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.509" endtime="20201115 22:02:14.586"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.504" endtime="20201115 22:02:14.587"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:14.604" endtime="20201115 22:02:14.947"></status>
</kw>
<msg timestamp="20201115 22:02:14.955" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040920153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040948056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:14.601" endtime="20201115 22:02:14.956"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:14.973" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040920153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040948056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:14.957" endtime="20201115 22:02:14.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:14.976" endtime="20201115 22:02:14.979"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.593" endtime="20201115 22:02:14.981"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.589" endtime="20201115 22:02:14.982"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:14.993" level="INFO">${RESULT} = [{'time': 0.040948056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7902999999995792e-05, 'source_diff': 2.7902999999995792e-05}, {'time': 0.041773306, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:14.984" endtime="20201115 22:02:14.994"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:15.025" level="INFO">${OVERHEAD} = {'diff': [2.7902999999995792e-05, 2.812500000000384e-05, 2.8082999999998193e-05, 2.8027999999999387e-05, 2.8222000000001357e-05, 2.8444000000002467e-05, 2.8346999999998013e-05, 2.788900000000316e-05, ...</msg>
<status status="PASS" starttime="20201115 22:02:14.995" endtime="20201115 22:02:15.025"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:15.036" level="INFO">NAME: 00-overhead-20-remove</msg>
<status status="PASS" starttime="20201115 22:02:15.033" endtime="20201115 22:02:15.036"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:15.041" level="INFO">VALUE: [2.7902999999995792e-05, 2.812500000000384e-05, 2.8082999999998193e-05, 2.8027999999999387e-05, 2.8222000000001357e-05, 2.8444000000002467e-05, 2.8346999999998013e-05, 2.788900000000316e-05, 2.7902000000003258e-05, 2.8736000000001427e-05, 2.790300000000273e-05, 2.8388999999996722e-05, 2.8583999999998166e-05, 2.8555999999999027e-05, 2.8444000000002467e-05, 2.790300000000273e-05, 2.788900000000316e-05, 2.8736000000001427e-05, 2.840300000000323e-05, 2.7846999999997513e-05, 2.8221999999994418e-05, 2.790300000000273e-05, 2.822300000000083e-05, 2.8374999999997152e-05, 2.87370000000009e-05, 2.8110999999997333e-05, 2.8250000000000497e-05, 2.823599999998705e-05, 2.8124999999989964e-05, 2.7902999999995792e-05, 2.8054999999999053e-05, 2.8221999999994418e-05, 2.8041999999992018e-05, 2.788900000000316e-05, 2.8569000000006062e-05, 2.844500000000194e-05, 2.8569999999991658e-05, 2.8582999999998693e-05, 2.8749999999994058e-05, 2.8721999999994918e-05, 2.8569000000006062e-05, 2.7902999999995792e-05, 2.841599999998945e-05, 2.87370000000009e-05, 2.8070000000005035e-05, 2.8264000000000067e-05, 2.834700000001189e-05, 2.8221999999994418e-05, 2.8570000000005535e-05, 2.8554999999999553e-05]</msg>
<status status="PASS" starttime="20201115 22:02:15.038" endtime="20201115 22:02:15.042"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.027" endtime="20201115 22:02:15.043"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:15.050" endtime="20201115 22:02:15.052"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:15.058" endtime="20201115 22:02:15.079"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.054" endtime="20201115 22:02:15.081"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.045" endtime="20201115 22:02:15.083"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.498" endtime="20201115 22:02:15.084"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.168" endtime="20201115 22:02:15.084"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.166" endtime="20201115 22:02:15.085"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:15.089" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:15.112" endtime="20201115 22:02:15.165"></status>
</kw>
<msg timestamp="20201115 22:02:15.166" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:15.109" endtime="20201115 22:02:15.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:15.172" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:15.168" endtime="20201115 22:02:15.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:15.174" endtime="20201115 22:02:15.179"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.101" endtime="20201115 22:02:15.180"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.096" endtime="20201115 22:02:15.182"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:15.198" endtime="20201115 22:02:15.533"></status>
</kw>
<msg timestamp="20201115 22:02:15.540" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046240319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046268597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:15.195" endtime="20201115 22:02:15.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:15.558" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046240319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046268597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:15.543" endtime="20201115 22:02:15.559"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:15.561" endtime="20201115 22:02:15.565"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.187" endtime="20201115 22:02:15.566"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.183" endtime="20201115 22:02:15.568"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:15.578" level="INFO">${RESULT} = [{'time': 0.046268597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8277999999999637e-05, 'source_diff': 2.8277999999999637e-05}, {'time': 0.047137722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:15.569" endtime="20201115 22:02:15.579"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:15.610" level="INFO">${OVERHEAD} = {'diff': [2.8277999999999637e-05, 2.8568999999999123e-05, 2.8347999999997486e-05, 2.8152999999996042e-05, 2.8486000000001177e-05, 2.7820000000004785e-05, 2.8486000000001177e-05, 2.815199999999657e-05,...</msg>
<status status="PASS" starttime="20201115 22:02:15.580" endtime="20201115 22:02:15.610"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:15.620" level="INFO">NAME: 00-overhead-21-remove</msg>
<status status="PASS" starttime="20201115 22:02:15.618" endtime="20201115 22:02:15.621"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:15.626" level="INFO">VALUE: [2.8277999999999637e-05, 2.8568999999999123e-05, 2.8347999999997486e-05, 2.8152999999996042e-05, 2.8486000000001177e-05, 2.7820000000004785e-05, 2.8486000000001177e-05, 2.815199999999657e-05, 2.813900000000341e-05, 2.7986000000000677e-05, 2.8264000000000067e-05, 2.8333999999997916e-05, 2.8652999999996542e-05, 2.8610999999997833e-05, 2.847300000000108e-05, 2.8305999999998777e-05, 2.848700000000065e-05, 2.7832999999997943e-05, 2.84579999999951e-05, 2.8806000000006216e-05, 2.8319999999998346e-05, 2.8318999999998873e-05, 2.865300000000348e-05, 2.8306000000005715e-05, 2.865300000000348e-05, 2.8000000000000247e-05, 2.8000000000000247e-05, 2.865300000000348e-05, 2.8291999999999207e-05, 2.848700000000759e-05, 2.792999999999546e-05, 2.8500000000000747e-05, 2.843100000000931e-05, 2.8138999999996472e-05, 2.790300000000967e-05, 2.8306000000005715e-05, 2.8305000000006242e-05, 2.8290999999999733e-05, 2.8111999999996806e-05, 2.812500000000384e-05, 2.7985999999993738e-05, 2.8818999999999373e-05, 2.847300000000108e-05, 2.8486000000008116e-05, 2.812500000000384e-05, 2.8806000000006216e-05, 2.8638999999996972e-05, 2.8624999999990464e-05, 2.8805999999992338e-05, 2.862500000000434e-05]</msg>
<status status="PASS" starttime="20201115 22:02:15.623" endtime="20201115 22:02:15.627"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.611" endtime="20201115 22:02:15.628"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:15.635" endtime="20201115 22:02:15.637"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:15.643" endtime="20201115 22:02:15.664"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.638" endtime="20201115 22:02:15.666"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.630" endtime="20201115 22:02:15.667"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.090" endtime="20201115 22:02:15.668"></status>
</kw>
<msg timestamp="20201115 22:02:15.669" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:15.691" endtime="20201115 22:02:15.744"></status>
</kw>
<msg timestamp="20201115 22:02:15.745" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:15.688" endtime="20201115 22:02:15.746"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:15.752" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:15.748" endtime="20201115 22:02:15.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:15.754" endtime="20201115 22:02:15.758"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.681" endtime="20201115 22:02:15.759"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.675" endtime="20201115 22:02:15.761"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:15.777" endtime="20201115 22:02:16.112"></status>
</kw>
<msg timestamp="20201115 22:02:16.119" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040744028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040771986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:15.774" endtime="20201115 22:02:16.119"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:16.137" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040744028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040771986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:16.121" endtime="20201115 22:02:16.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:16.140" endtime="20201115 22:02:16.143"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.767" endtime="20201115 22:02:16.145"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.762" endtime="20201115 22:02:16.146"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:16.157" level="INFO">${RESULT} = [{'time': 0.040771986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7958000000001537e-05, 'source_diff': 2.7958000000001537e-05}, {'time': 0.041641042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:16.148" endtime="20201115 22:02:16.157"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:16.189" level="INFO">${OVERHEAD} = {'diff': [2.7958000000001537e-05, 2.797300000000058e-05, 2.7986000000000677e-05, 2.8305999999998777e-05, 2.8638999999996972e-05, 2.8652999999996542e-05, 2.813900000000341e-05, 2.8097999999997236e-05, ...</msg>
<status status="PASS" starttime="20201115 22:02:16.159" endtime="20201115 22:02:16.189"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:16.200" level="INFO">NAME: 00-overhead-21-remove</msg>
<status status="PASS" starttime="20201115 22:02:16.197" endtime="20201115 22:02:16.200"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:16.205" level="INFO">VALUE: [2.7958000000001537e-05, 2.797300000000058e-05, 2.7986000000000677e-05, 2.8305999999998777e-05, 2.8638999999996972e-05, 2.8652999999996542e-05, 2.813900000000341e-05, 2.8097999999997236e-05, 2.8472000000001607e-05, 2.8818999999999373e-05, 2.815300000000298e-05, 2.862500000000434e-05, 2.8486000000001177e-05, 2.797300000000058e-05, 2.8610999999997833e-05, 2.7986000000000677e-05, 2.7819000000005312e-05, 2.8666999999996112e-05, 2.8360999999997583e-05, 2.847300000000108e-05, 2.8319999999998346e-05, 2.8250000000000497e-05, 2.8486999999993712e-05, 2.8124999999996902e-05, 2.8624999999997403e-05, 2.8778000000000137e-05, 2.813900000001035e-05, 2.8485999999994238e-05, 2.8570000000005535e-05, 2.7972000000001107e-05, 2.8472000000001607e-05, 2.865199999999013e-05, 2.8348000000011364e-05, 2.8486000000008116e-05, 2.8832999999992004e-05, 2.8318999999998873e-05, 2.7985999999993738e-05, 2.8319999999998346e-05, 2.8082999999998193e-05, 2.8610999999997833e-05, 2.8638999999996972e-05, 2.8778000000007076e-05, 2.7958000000008476e-05, 2.815300000000298e-05, 2.84579999999951e-05, 2.8764000000000567e-05, 2.8069999999991158e-05, 2.8791000000000233e-05, 2.8318999999998873e-05, 2.813900000001035e-05]</msg>
<status status="PASS" starttime="20201115 22:02:16.202" endtime="20201115 22:02:16.206"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.191" endtime="20201115 22:02:16.207"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:16.214" endtime="20201115 22:02:16.216"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:16.222" endtime="20201115 22:02:16.244"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.218" endtime="20201115 22:02:16.245"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.209" endtime="20201115 22:02:16.247"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.670" endtime="20201115 22:02:16.248"></status>
</kw>
<msg timestamp="20201115 22:02:16.248" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:16.273" endtime="20201115 22:02:16.326"></status>
</kw>
<msg timestamp="20201115 22:02:16.327" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:16.269" endtime="20201115 22:02:16.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:16.333" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:16.329" endtime="20201115 22:02:16.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:16.335" endtime="20201115 22:02:16.339"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.262" endtime="20201115 22:02:16.341"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.255" endtime="20201115 22:02:16.342"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:16.359" endtime="20201115 22:02:16.691"></status>
</kw>
<msg timestamp="20201115 22:02:16.698" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043297278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043325931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:16.355" endtime="20201115 22:02:16.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:16.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043297278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043325931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:16.700" endtime="20201115 22:02:16.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:16.719" endtime="20201115 22:02:16.722"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.348" endtime="20201115 22:02:16.724"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.343" endtime="20201115 22:02:16.725"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:16.736" level="INFO">${RESULT} = [{'time': 0.043325931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8652999999996542e-05, 'source_diff': 2.8652999999996542e-05}, {'time': 0.044192208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:16.727" endtime="20201115 22:02:16.736"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:16.769" level="INFO">${OVERHEAD} = {'diff': [2.8652999999996542e-05, 2.7818999999998373e-05, 2.8304999999999303e-05, 2.8000000000000247e-05, 2.8833000000005882e-05, 2.8486000000001177e-05, 2.8320000000005285e-05, 2.8291999999999207e-05...</msg>
<status status="PASS" starttime="20201115 22:02:16.738" endtime="20201115 22:02:16.769"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:16.779" level="INFO">NAME: 00-overhead-21-remove</msg>
<status status="PASS" starttime="20201115 22:02:16.777" endtime="20201115 22:02:16.780"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:16.785" level="INFO">VALUE: [2.8652999999996542e-05, 2.7818999999998373e-05, 2.8304999999999303e-05, 2.8000000000000247e-05, 2.8833000000005882e-05, 2.8486000000001177e-05, 2.8320000000005285e-05, 2.8291999999999207e-05, 2.8000000000000247e-05, 2.8486000000001177e-05, 2.8486000000001177e-05, 2.8666000000003578e-05, 2.8791999999999707e-05, 2.8291999999999207e-05, 2.863900000000391e-05, 2.8374999999997152e-05, 2.8458000000002037e-05, 2.8638999999996972e-05, 2.815300000000298e-05, 2.865300000000348e-05, 2.812500000000384e-05, 2.845900000000151e-05, 2.813900000000341e-05, 2.818100000000212e-05, 2.8305000000006242e-05, 2.7986000000007616e-05, 2.8791000000000233e-05, 2.8818999999999373e-05, 2.813900000001035e-05, 2.7818999999998373e-05, 2.8472000000001607e-05, 2.8000000000000247e-05, 2.8638999999996972e-05, 2.8110999999997333e-05, 2.8666999999996112e-05, 2.8152000000003508e-05, 2.812500000000384e-05, 2.8818999999999373e-05, 2.8500000000000747e-05, 2.8777999999993198e-05, 2.8291999999999207e-05, 2.8791000000000233e-05, 2.797300000000058e-05, 2.8818999999999373e-05, 2.8027999999999387e-05, 2.7806000000005215e-05, 2.8806000000006216e-05, 2.8291999999999207e-05, 2.8138999999996472e-05, 2.831900000001275e-05]</msg>
<status status="PASS" starttime="20201115 22:02:16.782" endtime="20201115 22:02:16.786"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.771" endtime="20201115 22:02:16.787"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:16.793" endtime="20201115 22:02:16.796"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:16.802" endtime="20201115 22:02:16.824"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.797" endtime="20201115 22:02:16.826"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.789" endtime="20201115 22:02:16.827"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.249" endtime="20201115 22:02:16.828"></status>
</kw>
<msg timestamp="20201115 22:02:16.828" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:16.851" endtime="20201115 22:02:16.904"></status>
</kw>
<msg timestamp="20201115 22:02:16.905" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:16.848" endtime="20201115 22:02:16.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:16.911" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:16.907" endtime="20201115 22:02:16.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:16.914" endtime="20201115 22:02:16.917"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.841" endtime="20201115 22:02:16.919"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.835" endtime="20201115 22:02:16.920"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:16.936" endtime="20201115 22:02:17.271"></status>
</kw>
<msg timestamp="20201115 22:02:17.278" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040789889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040818361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:16.933" endtime="20201115 22:02:17.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:17.296" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040789889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040818361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:17.280" endtime="20201115 22:02:17.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:17.299" endtime="20201115 22:02:17.303"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.926" endtime="20201115 22:02:17.305"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.921" endtime="20201115 22:02:17.306"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:17.317" level="INFO">${RESULT} = [{'time': 0.040818361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8471999999994668e-05, 'source_diff': 2.8471999999994668e-05}, {'time': 0.041685361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:17.308" endtime="20201115 22:02:17.317"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:17.348" level="INFO">${OVERHEAD} = {'diff': [2.8471999999994668e-05, 2.8471999999994668e-05, 2.8818999999999373e-05, 2.8638999999996972e-05, 2.862500000000434e-05, 2.865300000000348e-05, 2.8638999999996972e-05, 2.834700000000495e-05, 2...</msg>
<status status="PASS" starttime="20201115 22:02:17.319" endtime="20201115 22:02:17.348"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:17.360" level="INFO">NAME: 00-overhead-21-remove</msg>
<status status="PASS" starttime="20201115 22:02:17.356" endtime="20201115 22:02:17.360"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:17.365" level="INFO">VALUE: [2.8471999999994668e-05, 2.8471999999994668e-05, 2.8818999999999373e-05, 2.8638999999996972e-05, 2.862500000000434e-05, 2.865300000000348e-05, 2.8638999999996972e-05, 2.834700000000495e-05, 2.8804999999999803e-05, 2.7944999999994502e-05, 2.865300000000348e-05, 2.8320000000005285e-05, 2.7806000000005215e-05, 2.7972000000001107e-05, 2.798700000000015e-05, 2.8138999999996472e-05, 2.865199999999707e-05, 2.8332999999998443e-05, 2.847300000000108e-05, 2.7986000000000677e-05, 2.8138000000003938e-05, 2.8500000000000747e-05, 2.866700000000305e-05, 2.8778000000000137e-05, 2.8652999999996542e-05, 2.813900000000341e-05, 2.8652999999989603e-05, 2.8486000000008116e-05, 2.7957999999994598e-05, 2.8638999999996972e-05, 2.862500000000434e-05, 2.865300000000348e-05, 2.8124999999989964e-05, 2.8652000000004008e-05, 2.797300000000058e-05, 2.862500000000434e-05, 2.8818999999999373e-05, 2.7986000000007616e-05, 2.8333999999990978e-05, 2.816700000000949e-05, 2.8319999999998346e-05, 2.7777000000006602e-05, 2.866599999999664e-05, 2.865300000000348e-05, 2.8513999999993378e-05, 2.8000000000000247e-05, 2.815300000000298e-05, 2.8472000000001607e-05, 2.819399999999528e-05, 2.8513999999993378e-05]</msg>
<status status="PASS" starttime="20201115 22:02:17.362" endtime="20201115 22:02:17.367"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.350" endtime="20201115 22:02:17.368"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:17.375" endtime="20201115 22:02:17.377"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:17.383" endtime="20201115 22:02:17.405"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.379" endtime="20201115 22:02:17.406"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.370" endtime="20201115 22:02:17.408"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.829" endtime="20201115 22:02:17.408"></status>
</kw>
<msg timestamp="20201115 22:02:17.409" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:17.432" endtime="20201115 22:02:17.485"></status>
</kw>
<msg timestamp="20201115 22:02:17.486" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:17.428" endtime="20201115 22:02:17.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:17.492" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:17.488" endtime="20201115 22:02:17.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:17.494" endtime="20201115 22:02:17.498"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.421" endtime="20201115 22:02:17.499"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.415" endtime="20201115 22:02:17.501"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:17.517" endtime="20201115 22:02:17.856"></status>
</kw>
<msg timestamp="20201115 22:02:17.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040955167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040982972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:17.514" endtime="20201115 22:02:17.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:17.881" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040955167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040982972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:17.865" endtime="20201115 22:02:17.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:17.883" endtime="20201115 22:02:17.887"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.507" endtime="20201115 22:02:17.888"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.502" endtime="20201115 22:02:17.890"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:17.900" level="INFO">${RESULT} = [{'time': 0.040982972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7804999999998803e-05, 'source_diff': 2.7804999999998803e-05}, {'time': 0.041851125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:17.891" endtime="20201115 22:02:17.901"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:17.932" level="INFO">${OVERHEAD} = {'diff': [2.7804999999998803e-05, 2.8306000000005715e-05, 2.840300000000323e-05, 2.8180000000002647e-05, 2.862500000000434e-05, 2.8652999999996542e-05, 2.8472000000001607e-05, 2.812500000000384e-05, 2...</msg>
<status status="PASS" starttime="20201115 22:02:17.902" endtime="20201115 22:02:17.933"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:17.944" level="INFO">NAME: 00-overhead-21-remove</msg>
<status status="PASS" starttime="20201115 22:02:17.942" endtime="20201115 22:02:17.945"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:17.949" level="INFO">VALUE: [2.7804999999998803e-05, 2.8306000000005715e-05, 2.840300000000323e-05, 2.8180000000002647e-05, 2.862500000000434e-05, 2.8652999999996542e-05, 2.8472000000001607e-05, 2.812500000000384e-05, 2.8137999999997e-05, 2.8319999999998346e-05, 2.845900000000151e-05, 2.798700000000015e-05, 2.8652999999996542e-05, 2.7818999999998373e-05, 2.8500000000000747e-05, 2.8013999999999817e-05, 2.8486000000001177e-05, 2.868100000000262e-05, 2.816599999999614e-05, 2.8332999999998443e-05, 2.8736000000001427e-05, 2.815300000000298e-05, 2.8305999999998777e-05, 2.817999999999571e-05, 2.8000000000000247e-05, 2.8082999999998193e-05, 2.8486000000008116e-05, 2.8138999999996472e-05, 2.865300000000348e-05, 2.7790999999999233e-05, 2.813900000001035e-05, 2.7819999999997846e-05, 2.8152999999989103e-05, 2.7957999999994598e-05, 2.8624999999990464e-05, 2.8472000000001607e-05, 2.7847999999996986e-05, 2.8152000000003508e-05, 2.8666999999996112e-05, 2.8320000000012224e-05, 2.8000000000000247e-05, 2.7957999999994598e-05, 2.8485999999994238e-05, 2.8305000000006242e-05, 2.8319999999998346e-05, 2.8486000000008116e-05, 2.8138999999996472e-05, 2.8416000000003327e-05, 2.8138999999996472e-05, 2.8334000000004855e-05]</msg>
<status status="PASS" starttime="20201115 22:02:17.946" endtime="20201115 22:02:17.952"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.934" endtime="20201115 22:02:17.954"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:17.960" endtime="20201115 22:02:17.963"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:17.969" endtime="20201115 22:02:17.990"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.964" endtime="20201115 22:02:17.992"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.956" endtime="20201115 22:02:17.993"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.410" endtime="20201115 22:02:17.994"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.087" endtime="20201115 22:02:17.995"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.085" endtime="20201115 22:02:17.995"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:18.000" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:18.023" endtime="20201115 22:02:18.078"></status>
</kw>
<msg timestamp="20201115 22:02:18.079" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:18.019" endtime="20201115 22:02:18.079"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:18.085" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:18.081" endtime="20201115 22:02:18.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:18.087" endtime="20201115 22:02:18.091"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.012" endtime="20201115 22:02:18.093"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.006" endtime="20201115 22:02:18.094"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:18.110" endtime="20201115 22:02:18.443"></status>
</kw>
<msg timestamp="20201115 22:02:18.450" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046608736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046637042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:18.107" endtime="20201115 22:02:18.451"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:18.469" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046608736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046637042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:18.452" endtime="20201115 22:02:18.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:18.472" endtime="20201115 22:02:18.476"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.100" endtime="20201115 22:02:18.477"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.095" endtime="20201115 22:02:18.479"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:18.489" level="INFO">${RESULT} = [{'time': 0.046637042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8305999999998777e-05, 'source_diff': 2.8305999999998777e-05}, {'time': 0.047543153, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:18.480" endtime="20201115 22:02:18.490"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:18.520" level="INFO">${OVERHEAD} = {'diff': [2.8305999999998777e-05, 2.8708999999994822e-05, 2.8541999999999457e-05, 2.8236000000000927e-05, 2.8000000000000247e-05, 2.8555999999999027e-05, 2.812500000000384e-05, 2.788900000000316e-05, ...</msg>
<status status="PASS" starttime="20201115 22:02:18.492" endtime="20201115 22:02:18.521"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:18.532" level="INFO">NAME: 00-overhead-22-remove</msg>
<status status="PASS" starttime="20201115 22:02:18.529" endtime="20201115 22:02:18.532"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:18.539" level="INFO">VALUE: [2.8305999999998777e-05, 2.8708999999994822e-05, 2.8541999999999457e-05, 2.8236000000000927e-05, 2.8000000000000247e-05, 2.8555999999999027e-05, 2.812500000000384e-05, 2.788900000000316e-05, 2.8166999999995612e-05, 2.8750000000000997e-05, 2.7874999999996652e-05, 2.8069000000005562e-05, 2.840300000000323e-05, 2.8722000000001857e-05, 2.822300000000083e-05, 2.8236000000000927e-05, 2.8068999999998623e-05, 2.8097999999997236e-05, 2.8249999999993558e-05, 2.838900000000366e-05, 2.8555999999999027e-05, 2.8096999999990824e-05, 2.867999999998927e-05, 2.8055999999998527e-05, 2.79170000000023e-05, 2.8068999999991684e-05, 2.8070000000005035e-05, 2.8208000000001787e-05, 2.8250000000007436e-05, 2.8082999999998193e-05, 2.8069000000005562e-05, 2.787500000001053e-05, 2.8555999999999027e-05, 2.8069999999991158e-05, 2.8249999999993558e-05, 2.820900000000126e-05, 2.873599999998755e-05, 2.822300000000777e-05, 2.8541999999992518e-05, 2.8236000000000927e-05, 2.8569000000006062e-05, 2.788900000000316e-05, 2.8750000000007936e-05, 2.788900000000316e-05, 2.8236000000000927e-05, 2.8694999999995252e-05, 2.8055999999998527e-05, 2.84170000000028e-05, 2.7874999999996652e-05, 2.8221999999994418e-05]</msg>
<status status="PASS" starttime="20201115 22:02:18.534" endtime="20201115 22:02:18.540"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.522" endtime="20201115 22:02:18.542"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:18.549" endtime="20201115 22:02:18.552"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:18.558" endtime="20201115 22:02:18.579"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.553" endtime="20201115 22:02:18.581"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.544" endtime="20201115 22:02:18.582"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.001" endtime="20201115 22:02:18.583"></status>
</kw>
<msg timestamp="20201115 22:02:18.584" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:18.607" endtime="20201115 22:02:18.662"></status>
</kw>
<msg timestamp="20201115 22:02:18.663" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:18.603" endtime="20201115 22:02:18.663"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:18.669" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:18.665" endtime="20201115 22:02:18.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:18.671" endtime="20201115 22:02:18.675"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.596" endtime="20201115 22:02:18.677"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.590" endtime="20201115 22:02:18.678"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:18.695" endtime="20201115 22:02:19.027"></status>
</kw>
<msg timestamp="20201115 22:02:19.034" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041311222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041339944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:18.692" endtime="20201115 22:02:19.034"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:19.052" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041311222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041339944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:19.036" endtime="20201115 22:02:19.053"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:19.054" endtime="20201115 22:02:19.059"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.684" endtime="20201115 22:02:19.061"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.680" endtime="20201115 22:02:19.062"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:19.073" level="INFO">${RESULT} = [{'time': 0.041339944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8722000000001857e-05, 'source_diff': 2.8722000000001857e-05}, {'time': 0.042246208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:19.064" endtime="20201115 22:02:19.074"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:19.106" level="INFO">${OVERHEAD} = {'diff': [2.8722000000001857e-05, 2.838900000000366e-05, 2.793100000000187e-05, 2.8582999999998693e-05, 2.8736000000001427e-05, 2.8388999999996722e-05, 2.840300000000323e-05, 2.834700000000495e-05, 2....</msg>
<status status="PASS" starttime="20201115 22:02:19.075" endtime="20201115 22:02:19.111"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:19.122" level="INFO">NAME: 00-overhead-22-remove</msg>
<status status="PASS" starttime="20201115 22:02:19.120" endtime="20201115 22:02:19.123"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:19.128" level="INFO">VALUE: [2.8722000000001857e-05, 2.838900000000366e-05, 2.793100000000187e-05, 2.8582999999998693e-05, 2.8736000000001427e-05, 2.8388999999996722e-05, 2.840300000000323e-05, 2.834700000000495e-05, 2.8583999999998166e-05, 2.7832999999997943e-05, 2.8222000000001357e-05, 2.8054999999999053e-05, 2.8222000000001357e-05, 2.8610999999997833e-05, 2.8568999999999123e-05, 2.8554999999999553e-05, 2.8554999999999553e-05, 2.8736000000001427e-05, 2.8054999999999053e-05, 2.8722000000001857e-05, 2.8110999999997333e-05, 2.8555000000006492e-05, 2.8236000000000927e-05, 2.838900000000366e-05, 2.8221999999994418e-05, 2.840300000001017e-05, 2.8430999999995432e-05, 2.820900000000126e-05, 2.8736000000001427e-05, 2.8236000000000927e-05, 2.80970000000047e-05, 2.82370000000004e-05, 2.788900000000316e-05, 2.8221999999994418e-05, 2.8222000000008296e-05, 2.7902999999995792e-05, 2.84170000000028e-05, 2.8221999999994418e-05, 2.8083999999997666e-05, 2.790300000000967e-05, 2.8236000000000927e-05, 2.8000000000000247e-05, 2.8083999999997666e-05, 2.7874999999996652e-05, 2.8569000000006062e-05, 2.8069999999991158e-05, 2.8749999999994058e-05, 2.873599999998755e-05, 2.8083999999997666e-05, 2.8721999999994918e-05]</msg>
<status status="PASS" starttime="20201115 22:02:19.125" endtime="20201115 22:02:19.128"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.113" endtime="20201115 22:02:19.130"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:19.136" endtime="20201115 22:02:19.140"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:19.146" endtime="20201115 22:02:19.168"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.142" endtime="20201115 22:02:19.170"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.132" endtime="20201115 22:02:19.172"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.585" endtime="20201115 22:02:19.172"></status>
</kw>
<msg timestamp="20201115 22:02:19.173" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:19.196" endtime="20201115 22:02:19.251"></status>
</kw>
<msg timestamp="20201115 22:02:19.252" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:19.192" endtime="20201115 22:02:19.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:19.259" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:19.254" endtime="20201115 22:02:19.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:19.262" endtime="20201115 22:02:19.265"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.185" endtime="20201115 22:02:19.267"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.179" endtime="20201115 22:02:19.268"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:19.285" endtime="20201115 22:02:19.627"></status>
</kw>
<msg timestamp="20201115 22:02:19.634" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041432556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041460417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:19.282" endtime="20201115 22:02:19.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:19.652" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041432556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041460417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:19.636" endtime="20201115 22:02:19.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:19.654" endtime="20201115 22:02:19.658"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.274" endtime="20201115 22:02:19.659"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.270" endtime="20201115 22:02:19.661"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:19.672" level="INFO">${RESULT} = [{'time': 0.041460417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7860999999997083e-05, 'source_diff': 2.7860999999997083e-05}, {'time': 0.042368819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:19.662" endtime="20201115 22:02:19.673"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:19.703" level="INFO">${OVERHEAD} = {'diff': [2.7860999999997083e-05, 2.8068999999998623e-05, 2.8236000000000927e-05, 2.84170000000028e-05, 2.8084000000004605e-05, 2.841599999999639e-05, 2.8055999999998527e-05, 2.8569999999998597e-05, 2...</msg>
<status status="PASS" starttime="20201115 22:02:19.674" endtime="20201115 22:02:19.703"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:19.714" level="INFO">NAME: 00-overhead-22-remove</msg>
<status status="PASS" starttime="20201115 22:02:19.711" endtime="20201115 22:02:19.714"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:19.719" level="INFO">VALUE: [2.7860999999997083e-05, 2.8068999999998623e-05, 2.8236000000000927e-05, 2.84170000000028e-05, 2.8084000000004605e-05, 2.841599999999639e-05, 2.8055999999998527e-05, 2.8569999999998597e-05, 2.840199999999682e-05, 2.8013999999999817e-05, 2.79170000000023e-05, 2.8250000000000497e-05, 2.8388999999996722e-05, 2.840300000000323e-05, 2.8736000000001427e-05, 2.8402999999996292e-05, 2.8236000000000927e-05, 2.8222000000001357e-05, 2.8264000000000067e-05, 2.8068999999998623e-05, 2.838799999999725e-05, 2.8236000000000927e-05, 2.8472000000001607e-05, 2.8554999999999553e-05, 2.8402999999996292e-05, 2.8040999999992544e-05, 2.836100000000452e-05, 2.8236000000000927e-05, 2.8236000000000927e-05, 2.8110999999997333e-05, 2.870900000000176e-05, 2.8042000000005896e-05, 2.8222000000008296e-05, 2.8570000000005535e-05, 2.8070000000005035e-05, 2.8069999999991158e-05, 2.8222000000008296e-05, 2.8041999999992018e-05, 2.8750000000007936e-05, 2.8082999999998193e-05, 2.8083999999997666e-05, 2.8570000000005535e-05, 2.8082999999998193e-05, 2.85970000000052e-05, 2.838900000000366e-05, 2.870900000000176e-05, 2.8055999999998527e-05, 2.8570000000005535e-05, 2.8221999999994418e-05, 2.8583999999998166e-05]</msg>
<status status="PASS" starttime="20201115 22:02:19.716" endtime="20201115 22:02:19.720"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.705" endtime="20201115 22:02:19.721"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:19.728" endtime="20201115 22:02:19.730"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:19.736" endtime="20201115 22:02:19.759"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.732" endtime="20201115 22:02:19.761"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.723" endtime="20201115 22:02:19.762"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.174" endtime="20201115 22:02:19.763"></status>
</kw>
<msg timestamp="20201115 22:02:19.763" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:19.786" endtime="20201115 22:02:19.841"></status>
</kw>
<msg timestamp="20201115 22:02:19.842" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:19.783" endtime="20201115 22:02:19.842"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:19.848" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:19.844" endtime="20201115 22:02:19.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:19.850" endtime="20201115 22:02:19.854"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.776" endtime="20201115 22:02:19.856"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.770" endtime="20201115 22:02:19.857"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:19.873" endtime="20201115 22:02:20.213"></status>
</kw>
<msg timestamp="20201115 22:02:20.220" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040799083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040827806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:19.870" endtime="20201115 22:02:20.221"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:20.238" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040799083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040827806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:20.223" endtime="20201115 22:02:20.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:20.241" endtime="20201115 22:02:20.245"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.863" endtime="20201115 22:02:20.247"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.858" endtime="20201115 22:02:20.248"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:20.259" level="INFO">${RESULT} = [{'time': 0.040827806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.872300000000133e-05, 'source_diff': 2.872300000000133e-05}, {'time': 0.041732014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:20.250" endtime="20201115 22:02:20.259"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:20.289" level="INFO">${OVERHEAD} = {'diff': [2.872300000000133e-05, 2.7846999999997513e-05, 2.87370000000009e-05, 2.8735999999994488e-05, 2.7916999999995362e-05, 2.8750000000000997e-05, 2.8348000000004425e-05, 2.8554999999999553e-05, 2...</msg>
<status status="PASS" starttime="20201115 22:02:20.261" endtime="20201115 22:02:20.290"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:20.300" level="INFO">NAME: 00-overhead-22-remove</msg>
<status status="PASS" starttime="20201115 22:02:20.298" endtime="20201115 22:02:20.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:20.306" level="INFO">VALUE: [2.872300000000133e-05, 2.7846999999997513e-05, 2.87370000000009e-05, 2.8735999999994488e-05, 2.7916999999995362e-05, 2.8750000000000997e-05, 2.8348000000004425e-05, 2.8554999999999553e-05, 2.8554999999999553e-05, 2.8402999999996292e-05, 2.8082999999998193e-05, 2.790300000000273e-05, 2.8236000000000927e-05, 2.8569999999998597e-05, 2.79170000000023e-05, 2.8222000000001357e-05, 2.8084000000004605e-05, 2.8236000000000927e-05, 2.8402999999996292e-05, 2.7888999999996222e-05, 2.8555999999999027e-05, 2.8554999999999553e-05, 2.8236000000000927e-05, 2.8236000000000927e-05, 2.8513999999993378e-05, 2.8250000000007436e-05, 2.8042000000005896e-05, 2.7902999999995792e-05, 2.8069999999991158e-05, 2.8097999999990297e-05, 2.8249999999993558e-05, 2.8500000000000747e-05, 2.8054999999999053e-05, 2.788900000000316e-05, 2.84170000000028e-05, 2.8236000000000927e-05, 2.8250000000007436e-05, 2.8582999999998693e-05, 2.8721999999994918e-05, 2.8236000000000927e-05, 2.8264000000000067e-05, 2.855500000001343e-05, 2.873599999998755e-05, 2.8430999999995432e-05, 2.819399999999528e-05, 2.8582999999998693e-05, 2.8582999999998693e-05, 2.816599999999614e-05, 2.8222000000008296e-05, 2.82370000000004e-05]</msg>
<status status="PASS" starttime="20201115 22:02:20.302" endtime="20201115 22:02:20.306"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:20.291" endtime="20201115 22:02:20.308"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:20.314" endtime="20201115 22:02:20.317"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:20.322" endtime="20201115 22:02:20.344"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:20.318" endtime="20201115 22:02:20.346"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:20.310" endtime="20201115 22:02:20.347"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.764" endtime="20201115 22:02:20.348"></status>
</kw>
<msg timestamp="20201115 22:02:20.348" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:20.373" endtime="20201115 22:02:20.428"></status>
</kw>
<msg timestamp="20201115 22:02:20.429" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:20.369" endtime="20201115 22:02:20.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:20.435" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:20.431" endtime="20201115 22:02:20.436"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:20.438" endtime="20201115 22:02:20.441"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:20.362" endtime="20201115 22:02:20.443"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:20.355" endtime="20201115 22:02:20.445"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:20.461" endtime="20201115 22:02:20.800"></status>
</kw>
<msg timestamp="20201115 22:02:20.808" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042636403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042664472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:20.458" endtime="20201115 22:02:20.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:20.826" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042636403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042664472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:20.811" endtime="20201115 22:02:20.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:20.829" endtime="20201115 22:02:20.833"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:20.451" endtime="20201115 22:02:20.834"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:20.446" endtime="20201115 22:02:20.836"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:20.846" level="INFO">${RESULT} = [{'time': 0.042664472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8068999999998623e-05, 'source_diff': 2.8068999999998623e-05}, {'time': 0.043573708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:20.837" endtime="20201115 22:02:20.847"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:20.877" level="INFO">${OVERHEAD} = {'diff': [2.8068999999998623e-05, 2.8722000000001857e-05, 2.790300000000273e-05, 2.8374999999997152e-05, 2.8000000000000247e-05, 2.8040999999999483e-05, 2.840300000000323e-05, 2.8722999999994392e-05, ...</msg>
<status status="PASS" starttime="20201115 22:02:20.848" endtime="20201115 22:02:20.877"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:20.888" level="INFO">NAME: 00-overhead-22-remove</msg>
<status status="PASS" starttime="20201115 22:02:20.885" endtime="20201115 22:02:20.888"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:20.893" level="INFO">VALUE: [2.8068999999998623e-05, 2.8722000000001857e-05, 2.790300000000273e-05, 2.8374999999997152e-05, 2.8000000000000247e-05, 2.8040999999999483e-05, 2.840300000000323e-05, 2.8722999999994392e-05, 2.8041999999998957e-05, 2.8069999999998096e-05, 2.868100000000262e-05, 2.8069000000005562e-05, 2.8750000000000997e-05, 2.8514000000000317e-05, 2.8694999999995252e-05, 2.788900000000316e-05, 2.8235999999993988e-05, 2.8554999999999553e-05, 2.819500000000169e-05, 2.7888999999996222e-05, 2.788900000000316e-05, 2.815300000000298e-05, 2.870900000000176e-05, 2.8402999999996292e-05, 2.8555999999999027e-05, 2.8236000000000927e-05, 2.8570000000005535e-05, 2.8402999999996292e-05, 2.8236000000000927e-05, 2.8554999999999553e-05, 2.788900000000316e-05, 2.8110999999997333e-05, 2.838900000000366e-05, 2.8236000000000927e-05, 2.82370000000004e-05, 2.8736000000001427e-05, 2.8027999999999387e-05, 2.8721999999994918e-05, 2.8736000000001427e-05, 2.8736000000001427e-05, 2.8736000000001427e-05, 2.8736000000001427e-05, 2.788900000000316e-05, 2.8736000000001427e-05, 2.7902999999995792e-05, 2.8750000000007936e-05, 2.8568999999992184e-05, 2.8236000000000927e-05, 2.8680000000003147e-05, 2.838900000000366e-05]</msg>
<status status="PASS" starttime="20201115 22:02:20.890" endtime="20201115 22:02:20.894"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:20.878" endtime="20201115 22:02:20.895"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:20.902" endtime="20201115 22:02:20.904"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:20.910" endtime="20201115 22:02:20.931"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:20.905" endtime="20201115 22:02:20.933"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:20.897" endtime="20201115 22:02:20.935"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:20.349" endtime="20201115 22:02:20.935"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.997" endtime="20201115 22:02:20.936"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.996" endtime="20201115 22:02:20.936"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:20.941" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:20.964" endtime="20201115 22:02:21.022"></status>
</kw>
<msg timestamp="20201115 22:02:21.023" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:20.960" endtime="20201115 22:02:21.024"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:21.030" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:21.026" endtime="20201115 22:02:21.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:21.032" endtime="20201115 22:02:21.036"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:20.953" endtime="20201115 22:02:21.038"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:20.947" endtime="20201115 22:02:21.039"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:21.056" endtime="20201115 22:02:21.391"></status>
</kw>
<msg timestamp="20201115 22:02:21.398" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047543847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047573694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:21.052" endtime="20201115 22:02:21.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:21.417" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047543847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047573694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:21.401" endtime="20201115 22:02:21.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:21.419" endtime="20201115 22:02:21.423"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.045" endtime="20201115 22:02:21.425"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.040" endtime="20201115 22:02:21.426"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:21.437" level="INFO">${RESULT} = [{'time': 0.047573694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9846999999999513e-05, 'source_diff': 2.9846999999999513e-05}, {'time': 0.048523875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:21.428" endtime="20201115 22:02:21.438"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:21.470" level="INFO">${OVERHEAD} = {'diff': [2.9846999999999513e-05, 2.8805999999999277e-05, 2.965300000000448e-05, 2.8791999999999707e-05, 2.894500000000244e-05, 2.9666999999997112e-05, 2.8972000000002107e-05, 2.9124999999997903e-05, ...</msg>
<status status="PASS" starttime="20201115 22:02:21.440" endtime="20201115 22:02:21.471"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:21.481" level="INFO">NAME: 00-overhead-23-remove</msg>
<status status="PASS" starttime="20201115 22:02:21.479" endtime="20201115 22:02:21.482"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:21.487" level="INFO">VALUE: [2.9846999999999513e-05, 2.8805999999999277e-05, 2.965300000000448e-05, 2.8791999999999707e-05, 2.894500000000244e-05, 2.9666999999997112e-05, 2.8972000000002107e-05, 2.9124999999997903e-05, 2.9486000000002177e-05, 2.9291000000000733e-05, 2.9806000000000277e-05, 2.9152999999997042e-05, 2.9138999999997472e-05, 2.9152000000004508e-05, 2.94579999999961e-05, 2.8791999999999707e-05, 2.9444000000003467e-05, 2.9138999999997472e-05, 2.948700000000859e-05, 2.9138999999997472e-05, 2.9472000000002607e-05, 2.9846999999999513e-05, 2.9819999999999847e-05, 2.9055000000000053e-05, 2.8985999999994738e-05, 2.9638999999997973e-05, 2.8819999999998847e-05, 2.8819999999998847e-05, 2.9305999999992838e-05, 2.9000000000001247e-05, 2.8944000000002967e-05, 2.9485999999995238e-05, 2.8972000000002107e-05, 2.9138999999997472e-05, 2.9500000000001747e-05, 2.965300000000448e-05, 2.8818999999999373e-05, 2.966700000001099e-05, 2.9500000000001747e-05, 2.916700000001049e-05, 2.9652999999990604e-05, 2.8985999999994738e-05, 2.897199999998823e-05, 2.9666999999997112e-05, 2.8819999999998847e-05, 2.9500000000001747e-05, 2.9332999999992504e-05, 2.8818999999999373e-05, 2.9472000000002607e-05, 2.916599999999714e-05]</msg>
<status status="PASS" starttime="20201115 22:02:21.483" endtime="20201115 22:02:21.487"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.472" endtime="20201115 22:02:21.489"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:21.495" endtime="20201115 22:02:21.498"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:21.503" endtime="20201115 22:02:21.525"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.499" endtime="20201115 22:02:21.527"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.491" endtime="20201115 22:02:21.528"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:20.942" endtime="20201115 22:02:21.529"></status>
</kw>
<msg timestamp="20201115 22:02:21.529" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:21.552" endtime="20201115 22:02:21.609"></status>
</kw>
<msg timestamp="20201115 22:02:21.610" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:21.549" endtime="20201115 22:02:21.611"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:21.617" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:21.613" endtime="20201115 22:02:21.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:21.619" endtime="20201115 22:02:21.623"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.542" endtime="20201115 22:02:21.625"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.536" endtime="20201115 22:02:21.626"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:21.644" endtime="20201115 22:02:21.978"></status>
</kw>
<msg timestamp="20201115 22:02:21.986" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040724278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040753778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:21.641" endtime="20201115 22:02:21.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:22.004" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040724278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040753778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:21.988" endtime="20201115 22:02:22.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:22.006" endtime="20201115 22:02:22.010"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.632" endtime="20201115 22:02:22.012"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.627" endtime="20201115 22:02:22.013"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:22.024" level="INFO">${RESULT} = [{'time': 0.040753778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9499999999994808e-05, 'source_diff': 2.9499999999994808e-05}, {'time': 0.041704528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:22.015" endtime="20201115 22:02:22.024"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:22.054" level="INFO">${OVERHEAD} = {'diff': [2.9499999999994808e-05, 2.947199999999567e-05, 2.9014000000000817e-05, 2.9486000000002177e-05, 2.8986000000001677e-05, 2.918100000000312e-05, 2.9569999999999597e-05, 2.9055999999999527e-05, ...</msg>
<status status="PASS" starttime="20201115 22:02:22.026" endtime="20201115 22:02:22.054"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:22.065" level="INFO">NAME: 00-overhead-23-remove</msg>
<status status="PASS" starttime="20201115 22:02:22.063" endtime="20201115 22:02:22.066"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:22.070" level="INFO">VALUE: [2.9499999999994808e-05, 2.947199999999567e-05, 2.9014000000000817e-05, 2.9486000000002177e-05, 2.8986000000001677e-05, 2.918100000000312e-05, 2.9569999999999597e-05, 2.9055999999999527e-05, 2.9000000000001247e-05, 2.947199999999567e-05, 2.9319999999999347e-05, 2.9513999999994378e-05, 2.8832999999998943e-05, 2.8985999999994738e-05, 2.9346999999999013e-05, 2.8764000000000567e-05, 2.9152999999997042e-05, 2.9318999999999873e-05, 2.9333000000006382e-05, 2.9014000000000817e-05, 2.915300000000398e-05, 2.9152999999997042e-05, 2.9166000000004078e-05, 2.9500000000001747e-05, 2.9652000000005008e-05, 2.9000000000001247e-05, 2.9833999999992478e-05, 2.9138999999997472e-05, 2.9013999999993878e-05, 2.897300000000158e-05, 2.9694999999996252e-05, 2.965199999999113e-05, 2.8818999999999373e-05, 2.897300000000158e-05, 2.9166999999996612e-05, 2.9485999999995238e-05, 2.9652000000005008e-05, 2.9666999999997112e-05, 2.9333000000006382e-05, 2.9819999999999847e-05, 2.915300000000398e-05, 2.9208000000002787e-05, 2.9152999999990103e-05, 2.9041999999993018e-05, 2.9124999999990964e-05, 2.9278000000007576e-05, 2.897199999998823e-05, 2.915300000000398e-05, 2.9137999999998e-05, 2.9000000000001247e-05]</msg>
<status status="PASS" starttime="20201115 22:02:22.067" endtime="20201115 22:02:22.071"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.056" endtime="20201115 22:02:22.073"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:22.079" endtime="20201115 22:02:22.081"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:22.087" endtime="20201115 22:02:22.108"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.083" endtime="20201115 22:02:22.110"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.074" endtime="20201115 22:02:22.112"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.530" endtime="20201115 22:02:22.112"></status>
</kw>
<msg timestamp="20201115 22:02:22.113" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:22.136" endtime="20201115 22:02:22.193"></status>
</kw>
<msg timestamp="20201115 22:02:22.194" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:22.133" endtime="20201115 22:02:22.195"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:22.200" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:22.196" endtime="20201115 22:02:22.201"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:22.203" endtime="20201115 22:02:22.206"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.126" endtime="20201115 22:02:22.208"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.119" endtime="20201115 22:02:22.209"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:22.226" endtime="20201115 22:02:22.565"></status>
</kw>
<msg timestamp="20201115 22:02:22.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041563347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041593167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:22.222" endtime="20201115 22:02:22.573"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:22.590" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041563347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041593167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:22.575" endtime="20201115 22:02:22.591"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:22.593" endtime="20201115 22:02:22.597"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.215" endtime="20201115 22:02:22.598"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.211" endtime="20201115 22:02:22.600"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:22.610" level="INFO">${RESULT} = [{'time': 0.041593167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9819999999999847e-05, 'source_diff': 2.9819999999999847e-05}, {'time': 0.042539347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:22.601" endtime="20201115 22:02:22.611"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:22.640" level="INFO">${OVERHEAD} = {'diff': [2.9819999999999847e-05, 2.89579999999956e-05, 2.965199999999807e-05, 2.9485999999995238e-05, 2.965199999999807e-05, 2.917999999999671e-05, 2.9208000000002787e-05, 2.965300000000448e-05, 2.91...</msg>
<status status="PASS" starttime="20201115 22:02:22.612" endtime="20201115 22:02:22.641"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:22.651" level="INFO">NAME: 00-overhead-23-remove</msg>
<status status="PASS" starttime="20201115 22:02:22.649" endtime="20201115 22:02:22.652"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:22.657" level="INFO">VALUE: [2.9819999999999847e-05, 2.89579999999956e-05, 2.965199999999807e-05, 2.9485999999995238e-05, 2.965199999999807e-05, 2.917999999999671e-05, 2.9208000000002787e-05, 2.965300000000448e-05, 2.916599999999714e-05, 2.963900000000491e-05, 2.9792000000000707e-05, 2.8805999999999277e-05, 2.9694000000003717e-05, 2.9638999999997973e-05, 2.9305999999999777e-05, 2.9319999999999347e-05, 2.8832999999998943e-05, 2.897300000000158e-05, 2.9652999999997542e-05, 2.9318999999999873e-05, 2.8804999999999803e-05, 2.9486000000002177e-05, 2.9318999999999873e-05, 2.9485999999995238e-05, 2.9624999999991464e-05, 2.912500000000484e-05, 2.9000000000001247e-05, 2.8819999999998847e-05, 2.9180000000003647e-05, 2.9500000000001747e-05, 2.8986000000008616e-05, 2.9846999999999513e-05, 2.9138999999997472e-05, 2.945900000000945e-05, 2.9819999999999847e-05, 2.9013999999993878e-05, 2.9762999999988216e-05, 2.934700000001289e-05, 2.8958999999995072e-05, 2.9000000000001247e-05, 2.947199999998873e-05, 2.966599999999764e-05, 2.9819000000000373e-05, 2.965300000000448e-05, 2.9166999999996612e-05, 2.8986000000008616e-05, 2.8834000000005355e-05, 2.9152000000004508e-05, 2.915300000000398e-05, 2.9791000000001233e-05]</msg>
<status status="PASS" starttime="20201115 22:02:22.654" endtime="20201115 22:02:22.658"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.642" endtime="20201115 22:02:22.659"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:22.666" endtime="20201115 22:02:22.668"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:22.674" endtime="20201115 22:02:22.696"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.669" endtime="20201115 22:02:22.698"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.661" endtime="20201115 22:02:22.699"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.114" endtime="20201115 22:02:22.700"></status>
</kw>
<msg timestamp="20201115 22:02:22.700" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:22.723" endtime="20201115 22:02:22.781"></status>
</kw>
<msg timestamp="20201115 22:02:22.782" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:22.720" endtime="20201115 22:02:22.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:22.788" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:22.784" endtime="20201115 22:02:22.789"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:22.790" endtime="20201115 22:02:22.794"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.713" endtime="20201115 22:02:22.796"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.707" endtime="20201115 22:02:22.797"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:22.813" endtime="20201115 22:02:23.162"></status>
</kw>
<msg timestamp="20201115 22:02:23.169" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041110431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041139917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:22.810" endtime="20201115 22:02:23.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:23.187" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041110431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041139917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:23.171" endtime="20201115 22:02:23.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:23.189" endtime="20201115 22:02:23.193"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.803" endtime="20201115 22:02:23.195"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.798" endtime="20201115 22:02:23.196"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:23.207" level="INFO">${RESULT} = [{'time': 0.041139917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9485999999995238e-05, 'source_diff': 2.9485999999995238e-05}, {'time': 0.042085264, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:23.198" endtime="20201115 22:02:23.207"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:23.237" level="INFO">${OVERHEAD} = {'diff': [2.9485999999995238e-05, 2.9013999999993878e-05, 2.9138999999997472e-05, 2.9318999999999873e-05, 2.9305999999999777e-05, 2.9305999999999777e-05, 2.8958000000002537e-05, 2.915300000000398e-05,...</msg>
<status status="PASS" starttime="20201115 22:02:23.209" endtime="20201115 22:02:23.237"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:23.248" level="INFO">NAME: 00-overhead-23-remove</msg>
<status status="PASS" starttime="20201115 22:02:23.245" endtime="20201115 22:02:23.248"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:23.253" level="INFO">VALUE: [2.9485999999995238e-05, 2.9013999999993878e-05, 2.9138999999997472e-05, 2.9318999999999873e-05, 2.9305999999999777e-05, 2.9305999999999777e-05, 2.8958000000002537e-05, 2.915300000000398e-05, 2.8972000000002107e-05, 2.9819000000000373e-05, 2.9472000000002607e-05, 2.9264000000001067e-05, 2.9318999999999873e-05, 2.8985999999994738e-05, 2.9318999999999873e-05, 2.9292000000000207e-05, 2.919500000000269e-05, 2.961100000000577e-05, 2.9514000000001317e-05, 2.9347999999998486e-05, 2.9500000000001747e-05, 2.9305000000000303e-05, 2.9318999999999873e-05, 2.8778000000007076e-05, 2.9777999999994198e-05, 2.9000000000001247e-05, 2.9304999999993364e-05, 2.9318999999999873e-05, 2.947300000000208e-05, 2.8818999999999373e-05, 2.9792000000000707e-05, 2.962500000000534e-05, 2.8819999999998847e-05, 2.912500000000484e-05, 2.9000000000001247e-05, 2.9458999999995572e-05, 2.9819999999999847e-05, 2.8985999999994738e-05, 2.9666999999997112e-05, 2.9819999999999847e-05, 2.8958999999995072e-05, 2.8819999999998847e-05, 2.915300000000398e-05, 2.967999999999027e-05, 2.9638999999997973e-05, 2.94579999999961e-05, 2.9472000000002607e-05, 2.915300000000398e-05, 2.9318999999999873e-05, 2.8874999999997653e-05]</msg>
<status status="PASS" starttime="20201115 22:02:23.250" endtime="20201115 22:02:23.254"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.238" endtime="20201115 22:02:23.256"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:23.262" endtime="20201115 22:02:23.265"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:23.271" endtime="20201115 22:02:23.292"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.266" endtime="20201115 22:02:23.294"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.258" endtime="20201115 22:02:23.296"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.701" endtime="20201115 22:02:23.296"></status>
</kw>
<msg timestamp="20201115 22:02:23.297" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:23.320" endtime="20201115 22:02:23.377"></status>
</kw>
<msg timestamp="20201115 22:02:23.378" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:23.316" endtime="20201115 22:02:23.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:23.384" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:23.380" endtime="20201115 22:02:23.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:23.387" endtime="20201115 22:02:23.390"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.309" endtime="20201115 22:02:23.392"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.303" endtime="20201115 22:02:23.393"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:23.410" endtime="20201115 22:02:23.758"></status>
</kw>
<msg timestamp="20201115 22:02:23.765" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041145667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041174653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:23.406" endtime="20201115 22:02:23.765"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:23.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041145667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041174653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:23.767" endtime="20201115 22:02:23.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:23.785" endtime="20201115 22:02:23.790"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.399" endtime="20201115 22:02:23.792"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.395" endtime="20201115 22:02:23.794"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:23.804" level="INFO">${RESULT} = [{'time': 0.041174653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8986000000001677e-05, 'source_diff': 2.8986000000001677e-05}, {'time': 0.042118958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:23.795" endtime="20201115 22:02:23.805"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:23.837" level="INFO">${OVERHEAD} = {'diff': [2.8986000000001677e-05, 2.8985999999994738e-05, 2.913900000000441e-05, 2.8791999999999707e-05, 2.9166999999996612e-05, 2.9028000000000387e-05, 2.9624999999998403e-05, 2.9000000000001247e-05,...</msg>
<status status="PASS" starttime="20201115 22:02:23.806" endtime="20201115 22:02:23.837"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:23.847" level="INFO">NAME: 00-overhead-23-remove</msg>
<status status="PASS" starttime="20201115 22:02:23.845" endtime="20201115 22:02:23.848"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:23.853" level="INFO">VALUE: [2.8986000000001677e-05, 2.8985999999994738e-05, 2.913900000000441e-05, 2.8791999999999707e-05, 2.9166999999996612e-05, 2.9028000000000387e-05, 2.9624999999998403e-05, 2.9000000000001247e-05, 2.8985999999994738e-05, 2.9805000000000803e-05, 2.9708999999995822e-05, 2.9374999999998153e-05, 2.8832999999998943e-05, 2.9486000000002177e-05, 2.912500000000484e-05, 2.9458000000003037e-05, 2.8985999999994738e-05, 2.915300000000398e-05, 2.9610999999998833e-05, 2.915300000000398e-05, 2.8958000000002537e-05, 2.915199999999757e-05, 2.9472000000002607e-05, 2.89579999999956e-05, 2.8986999999994212e-05, 2.965300000000448e-05, 2.8833999999991478e-05, 2.915199999999063e-05, 2.8819999999998847e-05, 2.8985999999994738e-05, 2.9514000000008256e-05, 2.9666999999997112e-05, 2.962500000000534e-05, 2.9874999999998653e-05, 2.947300000000208e-05, 2.913900000001135e-05, 2.912500000000484e-05, 2.9250000000008436e-05, 2.9846999999999513e-05, 2.8791000000000233e-05, 2.9318999999999873e-05, 2.947199999998873e-05, 2.8986000000008616e-05, 2.965300000000448e-05, 2.947199999998873e-05, 2.9346999999999013e-05, 2.9138999999997472e-05, 2.9333000000006382e-05, 2.9624999999991464e-05, 2.9485999999995238e-05]</msg>
<status status="PASS" starttime="20201115 22:02:23.850" endtime="20201115 22:02:23.854"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.838" endtime="20201115 22:02:23.856"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:23.862" endtime="20201115 22:02:23.865"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:23.870" endtime="20201115 22:02:23.892"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.866" endtime="20201115 22:02:23.894"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.858" endtime="20201115 22:02:23.895"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.298" endtime="20201115 22:02:23.896"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:20.939" endtime="20201115 22:02:23.897"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:20.937" endtime="20201115 22:02:23.897"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:23.902" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:23.925" endtime="20201115 22:02:23.984"></status>
</kw>
<msg timestamp="20201115 22:02:23.985" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:23.921" endtime="20201115 22:02:23.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:23.991" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:23.988" endtime="20201115 22:02:23.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:23.994" endtime="20201115 22:02:24.001"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.914" endtime="20201115 22:02:24.004"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.908" endtime="20201115 22:02:24.005"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:24.022" endtime="20201115 22:02:24.372"></status>
</kw>
<msg timestamp="20201115 22:02:24.379" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046282819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046312208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:24.019" endtime="20201115 22:02:24.380"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:24.397" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046282819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046312208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:24.381" endtime="20201115 22:02:24.398"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:24.400" endtime="20201115 22:02:24.406"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:24.011" endtime="20201115 22:02:24.407"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:24.006" endtime="20201115 22:02:24.409"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:24.420" level="INFO">${RESULT} = [{'time': 0.046312208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9388999999997723e-05, 'source_diff': 2.9388999999997723e-05}, {'time': 0.047301403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:24.410" endtime="20201115 22:02:24.420"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:24.451" level="INFO">${OVERHEAD} = {'diff': [2.9388999999997723e-05, 2.9236000000001927e-05, 2.8888999999997222e-05, 2.9596999999999263e-05, 2.9416999999996862e-05, 2.9041000000000483e-05, 2.9068999999999623e-05, 2.9597999999998736e-05...</msg>
<status status="PASS" starttime="20201115 22:02:24.422" endtime="20201115 22:02:24.451"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:24.462" level="INFO">NAME: 00-overhead-24-remove</msg>
<status status="PASS" starttime="20201115 22:02:24.460" endtime="20201115 22:02:24.463"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:24.473" level="INFO">VALUE: [2.9388999999997723e-05, 2.9236000000001927e-05, 2.8888999999997222e-05, 2.9596999999999263e-05, 2.9416999999996862e-05, 2.9041000000000483e-05, 2.9068999999999623e-05, 2.9597999999998736e-05, 2.9236000000001927e-05, 2.9082999999999193e-05, 2.9222000000002357e-05, 2.89170000000033e-05, 2.9096999999998763e-05, 2.97370000000019e-05, 2.9069999999999097e-05, 2.8888999999997222e-05, 2.9236000000001927e-05, 2.9736000000002427e-05, 2.8902999999996792e-05, 2.9764000000001567e-05, 2.8902999999996792e-05, 2.9083999999998666e-05, 2.9749999999995058e-05, 2.9736000000002427e-05, 2.9666999999997112e-05, 2.897300000000158e-05, 2.9055000000000053e-05, 2.9222999999994892e-05, 2.972199999999592e-05, 2.9736999999988023e-05, 2.888900000000416e-05, 2.9568999999993184e-05, 2.9778000000008076e-05, 2.9722999999995392e-05, 2.9736000000002427e-05, 2.9596999999992324e-05, 2.9028000000000387e-05, 2.8832999999992004e-05, 2.9736000000002427e-05, 2.9680999999989743e-05, 2.9570000000006536e-05, 2.9236000000001927e-05, 2.9055000000000053e-05, 2.9540999999994044e-05, 2.9582999999999693e-05, 2.9110999999998333e-05, 2.9736000000002427e-05, 2.9055999999999527e-05, 2.970799999998941e-05, 2.8916999999989423e-05]</msg>
<status status="PASS" starttime="20201115 22:02:24.464" endtime="20201115 22:02:24.474"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:24.453" endtime="20201115 22:02:24.476"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:24.482" endtime="20201115 22:02:24.485"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:24.490" endtime="20201115 22:02:24.512"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:24.486" endtime="20201115 22:02:24.514"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:24.477" endtime="20201115 22:02:24.516"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.903" endtime="20201115 22:02:24.517"></status>
</kw>
<msg timestamp="20201115 22:02:24.517" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:24.542" endtime="20201115 22:02:24.602"></status>
</kw>
<msg timestamp="20201115 22:02:24.604" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:24.538" endtime="20201115 22:02:24.604"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:24.610" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:24.606" endtime="20201115 22:02:24.611"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:24.612" endtime="20201115 22:02:24.616"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:24.531" endtime="20201115 22:02:24.618"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:24.524" endtime="20201115 22:02:24.619"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:24.636" endtime="20201115 22:02:24.986"></status>
</kw>
<msg timestamp="20201115 22:02:24.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044367986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044397042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:24.633" endtime="20201115 22:02:24.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:25.012" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044367986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044397042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:24.996" endtime="20201115 22:02:25.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:25.015" endtime="20201115 22:02:25.020"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:24.626" endtime="20201115 22:02:25.022"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:24.621" endtime="20201115 22:02:25.024"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:25.034" level="INFO">${RESULT} = [{'time': 0.044397042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9055999999999527e-05, 'source_diff': 2.9055999999999527e-05}, {'time': 0.04538525, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 22:02:25.025" endtime="20201115 22:02:25.035"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:25.065" level="INFO">${OVERHEAD} = {'diff': [2.9055999999999527e-05, 2.9610999999998833e-05, 2.9569000000000123e-05, 2.9068999999999623e-05, 2.9750000000001997e-05, 2.9430000000003897e-05, 2.9374999999998153e-05, 2.9722000000002857e-05...</msg>
<status status="PASS" starttime="20201115 22:02:25.037" endtime="20201115 22:02:25.066"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:25.077" level="INFO">NAME: 00-overhead-24-remove</msg>
<status status="PASS" starttime="20201115 22:02:25.075" endtime="20201115 22:02:25.078"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:25.083" level="INFO">VALUE: [2.9055999999999527e-05, 2.9610999999998833e-05, 2.9569000000000123e-05, 2.9068999999999623e-05, 2.9750000000001997e-05, 2.9430000000003897e-05, 2.9374999999998153e-05, 2.9722000000002857e-05, 2.97370000000019e-05, 2.9222000000002357e-05, 2.9222000000002357e-05, 2.940300000000423e-05, 2.9250000000001497e-05, 2.911100000000527e-05, 2.9583999999999167e-05, 2.9527000000001413e-05, 2.9555000000000553e-05, 2.9542000000000457e-05, 2.8902000000004258e-05, 2.9764000000001567e-05, 2.9556000000000027e-05, 2.9542000000007396e-05, 2.9402999999997292e-05, 2.9402999999997292e-05, 2.9582999999999693e-05, 2.9569999999992658e-05, 2.9722999999995392e-05, 2.965300000000448e-05, 2.9055000000000053e-05, 2.890199999999732e-05, 2.9764000000001567e-05, 2.9388999999990784e-05, 2.9555000000000553e-05, 2.8874999999997653e-05, 2.888900000000416e-05, 2.9554999999986675e-05, 2.940199999999782e-05, 2.9055999999999527e-05, 2.952799999998701e-05, 2.8874999999997653e-05, 2.9222000000009296e-05, 2.8860999999991144e-05, 2.9749999999995058e-05, 2.9222999999994892e-05, 2.9374999999998153e-05, 2.9736000000002427e-05, 2.9528000000000887e-05, 2.9500000000001747e-05, 2.8902000000011197e-05, 2.9055999999999527e-05]</msg>
<status status="PASS" starttime="20201115 22:02:25.080" endtime="20201115 22:02:25.084"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.068" endtime="20201115 22:02:25.085"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:25.092" endtime="20201115 22:02:25.095"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:25.100" endtime="20201115 22:02:25.122"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.096" endtime="20201115 22:02:25.124"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.087" endtime="20201115 22:02:25.126"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:24.518" endtime="20201115 22:02:25.126"></status>
</kw>
<msg timestamp="20201115 22:02:25.127" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:25.150" endtime="20201115 22:02:25.210"></status>
</kw>
<msg timestamp="20201115 22:02:25.211" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:25.147" endtime="20201115 22:02:25.212"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:25.218" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:25.214" endtime="20201115 22:02:25.218"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:25.220" endtime="20201115 22:02:25.224"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.139" endtime="20201115 22:02:25.226"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.133" endtime="20201115 22:02:25.227"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:25.244" endtime="20201115 22:02:25.596"></status>
</kw>
<msg timestamp="20201115 22:02:25.603" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042227319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042256875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:25.240" endtime="20201115 22:02:25.604"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:25.622" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042227319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042256875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:25.605" endtime="20201115 22:02:25.623"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:25.624" endtime="20201115 22:02:25.630"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.233" endtime="20201115 22:02:25.631"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.228" endtime="20201115 22:02:25.633"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:25.645" level="INFO">${RESULT} = [{'time': 0.042256875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9556000000000027e-05, 'source_diff': 2.9556000000000027e-05}, {'time': 0.043249139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:25.635" endtime="20201115 22:02:25.645"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:25.676" level="INFO">${OVERHEAD} = {'diff': [2.9556000000000027e-05, 2.9556000000000027e-05, 2.9750000000001997e-05, 2.8986000000001677e-05, 2.9388999999997723e-05, 2.972199999999592e-05, 2.9055000000000053e-05, 2.9069999999999097e-05,...</msg>
<status status="PASS" starttime="20201115 22:02:25.647" endtime="20201115 22:02:25.676"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:25.687" level="INFO">NAME: 00-overhead-24-remove</msg>
<status status="PASS" starttime="20201115 22:02:25.684" endtime="20201115 22:02:25.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:25.692" level="INFO">VALUE: [2.9556000000000027e-05, 2.9556000000000027e-05, 2.9750000000001997e-05, 2.8986000000001677e-05, 2.9388999999997723e-05, 2.972199999999592e-05, 2.9055000000000053e-05, 2.9069999999999097e-05, 2.9556000000000027e-05, 2.9556000000000027e-05, 2.9388999999997723e-05, 2.9000000000001247e-05, 2.9735999999995488e-05, 2.9556000000000027e-05, 2.9736000000002427e-05, 2.9041000000000483e-05, 2.9388999999997723e-05, 2.89170000000033e-05, 2.8916000000003828e-05, 2.9068999999999623e-05, 2.9055999999999527e-05, 2.972199999999592e-05, 2.9749999999995058e-05, 2.9069000000006562e-05, 2.972199999999592e-05, 2.9736000000002427e-05, 2.918100000000312e-05, 2.94170000000038e-05, 2.9055999999999527e-05, 2.8902999999996792e-05, 2.9055000000000053e-05, 2.922199999999542e-05, 2.9070000000006035e-05, 2.941599999999045e-05, 2.940300000001117e-05, 2.9236000000001927e-05, 2.9082999999999193e-05, 2.9556000000000027e-05, 2.9570000000006536e-05, 2.888900000000416e-05, 2.9556000000000027e-05, 2.9568999999993184e-05, 2.9569000000007062e-05, 2.9152000000004508e-05, 2.9082999999999193e-05, 2.965300000000448e-05, 2.8902999999996792e-05, 2.923599999998805e-05, 2.8888999999990284e-05, 2.9569000000007062e-05]</msg>
<status status="PASS" starttime="20201115 22:02:25.689" endtime="20201115 22:02:25.693"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.677" endtime="20201115 22:02:25.695"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:25.701" endtime="20201115 22:02:25.704"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:25.710" endtime="20201115 22:02:25.732"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.705" endtime="20201115 22:02:25.734"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.697" endtime="20201115 22:02:25.735"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.128" endtime="20201115 22:02:25.736"></status>
</kw>
<msg timestamp="20201115 22:02:25.736" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:25.760" endtime="20201115 22:02:25.820"></status>
</kw>
<msg timestamp="20201115 22:02:25.821" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:25.756" endtime="20201115 22:02:25.822"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:25.828" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:25.824" endtime="20201115 22:02:25.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:25.830" endtime="20201115 22:02:25.834"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.749" endtime="20201115 22:02:25.836"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.743" endtime="20201115 22:02:25.837"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:25.854" endtime="20201115 22:02:26.213"></status>
</kw>
<msg timestamp="20201115 22:02:26.220" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042396014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04242525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:02:25.851" endtime="20201115 22:02:26.220"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:26.239" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042396014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04242525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:02:26.223" endtime="20201115 22:02:26.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:26.242" endtime="20201115 22:02:26.247"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.843" endtime="20201115 22:02:26.249"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.839" endtime="20201115 22:02:26.250"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:26.261" level="INFO">${RESULT} = [{'time': 0.04242525, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9235999999994988e-05, 'source_diff': 2.9235999999994988e-05}, {'time': 0.043414778, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 22:02:26.252" endtime="20201115 22:02:26.262"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:26.295" level="INFO">${OVERHEAD} = {'diff': [2.9235999999994988e-05, 2.9778000000001137e-05, 2.97370000000019e-05, 2.938900000000466e-05, 2.9735999999995488e-05, 2.947199999999567e-05, 2.9082999999999193e-05, 2.9542000000000457e-05, 2....</msg>
<status status="PASS" starttime="20201115 22:02:26.264" endtime="20201115 22:02:26.295"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:26.306" level="INFO">NAME: 00-overhead-24-remove</msg>
<status status="PASS" starttime="20201115 22:02:26.304" endtime="20201115 22:02:26.307"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:26.312" level="INFO">VALUE: [2.9235999999994988e-05, 2.9778000000001137e-05, 2.97370000000019e-05, 2.938900000000466e-05, 2.9735999999995488e-05, 2.947199999999567e-05, 2.9082999999999193e-05, 2.9542000000000457e-05, 2.9250000000001497e-05, 2.972199999999592e-05, 2.9222000000002357e-05, 2.9388999999997723e-05, 2.9041999999999957e-05, 2.9722000000002857e-05, 2.97370000000019e-05, 2.888900000000416e-05, 2.9596999999999263e-05, 2.9236000000001927e-05, 2.9014000000000817e-05, 2.8986000000001677e-05, 2.8902999999996792e-05, 2.9556000000000027e-05, 2.8902999999996792e-05, 2.9096999999991824e-05, 2.9249999999994558e-05, 2.9527000000001413e-05, 2.890300000001067e-05, 2.9222000000009296e-05, 2.9236000000001927e-05, 2.9069000000006562e-05, 2.9388000000005188e-05, 2.9750000000008936e-05, 2.9736000000002427e-05, 2.9070000000006035e-05, 2.9541000000007922e-05, 2.9402999999997292e-05, 2.9722000000009796e-05, 2.9236000000001927e-05, 2.9568999999993184e-05, 2.9749999999995058e-05, 2.9374999999998153e-05, 2.9708000000003287e-05, 2.9402999999997292e-05, 2.9236000000001927e-05, 2.9402999999997292e-05, 2.9068999999992684e-05, 2.923599999998805e-05, 2.9736000000002427e-05, 2.968100000000362e-05, 2.9054999999986175e-05]</msg>
<status status="PASS" starttime="20201115 22:02:26.308" endtime="20201115 22:02:26.313"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:26.297" endtime="20201115 22:02:26.314"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:26.321" endtime="20201115 22:02:26.323"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:26.329" endtime="20201115 22:02:26.351"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:26.325" endtime="20201115 22:02:26.353"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:26.316" endtime="20201115 22:02:26.355"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.737" endtime="20201115 22:02:26.355"></status>
</kw>
<msg timestamp="20201115 22:02:26.356" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:26.379" endtime="20201115 22:02:26.440"></status>
</kw>
<msg timestamp="20201115 22:02:26.441" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:26.376" endtime="20201115 22:02:26.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:26.447" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:26.443" endtime="20201115 22:02:26.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:26.450" endtime="20201115 22:02:26.454"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:26.368" endtime="20201115 22:02:26.455"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:26.362" endtime="20201115 22:02:26.457"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:26.474" endtime="20201115 22:02:26.834"></status>
</kw>
<msg timestamp="20201115 22:02:26.842" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042434014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042463597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:26.470" endtime="20201115 22:02:26.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:26.861" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042434014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042463597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:26.845" endtime="20201115 22:02:26.862"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:26.864" endtime="20201115 22:02:26.868"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:26.463" endtime="20201115 22:02:26.869"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:26.458" endtime="20201115 22:02:26.871"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:26.882" level="INFO">${RESULT} = [{'time': 0.042463597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9582999999999693e-05, 'source_diff': 2.9582999999999693e-05}, {'time': 0.04345575, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 22:02:26.872" endtime="20201115 22:02:26.882"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:26.914" level="INFO">${OVERHEAD} = {'diff': [2.9582999999999693e-05, 2.9208000000002787e-05, 2.938900000000466e-05, 2.9014000000000817e-05, 2.8916999999996362e-05, 2.9055000000000053e-05, 2.9402999999997292e-05, 2.9250000000001497e-05,...</msg>
<status status="PASS" starttime="20201115 22:02:26.884" endtime="20201115 22:02:26.915"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:26.925" level="INFO">NAME: 00-overhead-24-remove</msg>
<status status="PASS" starttime="20201115 22:02:26.923" endtime="20201115 22:02:26.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:26.931" level="INFO">VALUE: [2.9582999999999693e-05, 2.9208000000002787e-05, 2.938900000000466e-05, 2.9014000000000817e-05, 2.8916999999996362e-05, 2.9055000000000053e-05, 2.9402999999997292e-05, 2.9250000000001497e-05, 2.9736000000002427e-05, 2.8902999999996792e-05, 2.9069999999999097e-05, 2.9541000000000983e-05, 2.9374999999998153e-05, 2.922199999999542e-05, 2.9763999999994628e-05, 2.888900000000416e-05, 2.9764000000001567e-05, 2.9055000000000053e-05, 2.9222000000002357e-05, 2.922300000000183e-05, 2.8916000000003828e-05, 2.9082999999999193e-05, 2.9292000000000207e-05, 2.90970000000057e-05, 2.9013999999993878e-05, 2.9416000000004328e-05, 2.9514000000008256e-05, 2.9236000000001927e-05, 2.9556000000000027e-05, 2.9570000000006536e-05, 2.9582999999999693e-05, 2.890199999999732e-05, 2.9749999999995058e-05, 2.9722000000009796e-05, 2.9722000000009796e-05, 2.9402999999997292e-05, 2.9249999999994558e-05, 2.9570000000006536e-05, 2.8902999999996792e-05, 2.9555000000000553e-05, 2.8944000000002967e-05, 2.8888999999990284e-05, 2.9708000000003287e-05, 2.918100000000312e-05, 2.9736000000002427e-05, 2.92370000000014e-05, 2.9416999999989923e-05, 2.9749999999995058e-05, 2.9749999999995058e-05, 2.9055000000000053e-05]</msg>
<status status="PASS" starttime="20201115 22:02:26.928" endtime="20201115 22:02:26.932"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:26.916" endtime="20201115 22:02:26.934"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:26.940" endtime="20201115 22:02:26.943"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:26.948" endtime="20201115 22:02:26.970"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:26.944" endtime="20201115 22:02:26.972"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:26.935" endtime="20201115 22:02:26.974"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:26.357" endtime="20201115 22:02:26.975"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.900" endtime="20201115 22:02:26.975"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.898" endtime="20201115 22:02:26.976"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:26.980" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:27.004" endtime="20201115 22:02:27.067"></status>
</kw>
<msg timestamp="20201115 22:02:27.068" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:27.000" endtime="20201115 22:02:27.068"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:27.074" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:27.070" endtime="20201115 22:02:27.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:27.077" endtime="20201115 22:02:27.081"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:26.993" endtime="20201115 22:02:27.083"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:26.987" endtime="20201115 22:02:27.085"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:27.101" endtime="20201115 22:02:27.460"></status>
</kw>
<msg timestamp="20201115 22:02:27.468" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048253361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048282681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:27.098" endtime="20201115 22:02:27.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:27.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048253361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048282681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:27.470" endtime="20201115 22:02:27.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:27.489" endtime="20201115 22:02:27.493"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.091" endtime="20201115 22:02:27.495"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.086" endtime="20201115 22:02:27.496"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:27.507" level="INFO">${RESULT} = [{'time': 0.048282681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9319999999999347e-05, 'source_diff': 2.9319999999999347e-05}, {'time': 0.049311889, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:27.498" endtime="20201115 22:02:27.507"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:27.540" level="INFO">${OVERHEAD} = {'diff': [2.9319999999999347e-05, 2.9819999999999847e-05, 2.8972000000002107e-05, 2.887500000000459e-05, 2.9318999999999873e-05, 2.897300000000158e-05, 2.9832999999999943e-05, 2.9444000000003467e-05, ...</msg>
<status status="PASS" starttime="20201115 22:02:27.509" endtime="20201115 22:02:27.540"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:27.551" level="INFO">NAME: 00-overhead-25-remove</msg>
<status status="PASS" starttime="20201115 22:02:27.548" endtime="20201115 22:02:27.551"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:27.556" level="INFO">VALUE: [2.9319999999999347e-05, 2.9819999999999847e-05, 2.8972000000002107e-05, 2.887500000000459e-05, 2.9318999999999873e-05, 2.897300000000158e-05, 2.9832999999999943e-05, 2.9444000000003467e-05, 2.966599999999764e-05, 2.9000000000001247e-05, 2.8972000000002107e-05, 2.9000000000001247e-05, 2.963900000000491e-05, 2.9458999999995572e-05, 2.915300000000398e-05, 2.9180999999989243e-05, 2.9138999999997472e-05, 2.9500000000001747e-05, 2.9000000000001247e-05, 2.915300000000398e-05, 2.917999999998977e-05, 2.8736000000001427e-05, 2.965300000000448e-05, 2.9138999999997472e-05, 2.9152999999990103e-05, 2.9138999999997472e-05, 2.8972000000002107e-05, 2.913900000001135e-05, 2.8916999999989423e-05, 2.986100000000602e-05, 2.9124999999990964e-05, 2.965300000000448e-05, 2.917999999998977e-05, 2.9819999999999847e-05, 2.8972000000002107e-05, 2.8805999999992338e-05, 2.8958999999995072e-05, 2.9624999999991464e-05, 2.9138999999997472e-05, 2.9638999999997973e-05, 2.9306000000006716e-05, 2.9638999999997973e-05, 2.9319999999999347e-05, 2.94579999999961e-05, 2.9819000000000373e-05, 2.915300000000398e-05, 2.8818999999999373e-05, 2.916599999999714e-05, 2.8985999999994738e-05, 2.876399999998669e-05]</msg>
<status status="PASS" starttime="20201115 22:02:27.553" endtime="20201115 22:02:27.557"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.541" endtime="20201115 22:02:27.559"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:27.565" endtime="20201115 22:02:27.568"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:27.574" endtime="20201115 22:02:27.596"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.569" endtime="20201115 22:02:27.598"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.561" endtime="20201115 22:02:27.599"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:26.982" endtime="20201115 22:02:27.600"></status>
</kw>
<msg timestamp="20201115 22:02:27.600" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:27.625" endtime="20201115 22:02:27.688"></status>
</kw>
<msg timestamp="20201115 22:02:27.689" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:27.621" endtime="20201115 22:02:27.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:27.696" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:27.692" endtime="20201115 22:02:27.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:27.699" endtime="20201115 22:02:27.702"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.613" endtime="20201115 22:02:27.704"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.607" endtime="20201115 22:02:27.705"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:27.722" endtime="20201115 22:02:28.082"></status>
</kw>
<msg timestamp="20201115 22:02:28.089" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043716167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043745014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:27.719" endtime="20201115 22:02:28.089"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:28.107" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043716167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043745014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:28.091" endtime="20201115 22:02:28.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:28.110" endtime="20201115 22:02:28.114"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.712" endtime="20201115 22:02:28.115"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.707" endtime="20201115 22:02:28.117"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:28.128" level="INFO">${RESULT} = [{'time': 0.043745014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8846999999998513e-05, 'source_diff': 2.8846999999998513e-05}, {'time': 0.044778569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:28.119" endtime="20201115 22:02:28.128"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:28.160" level="INFO">${OVERHEAD} = {'diff': [2.8846999999998513e-05, 2.9860999999999083e-05, 2.8986000000001677e-05, 2.915199999999757e-05, 2.9333999999998916e-05, 2.917999999999671e-05, 2.9652999999997542e-05, 2.9138999999997472e-05, ...</msg>
<status status="PASS" starttime="20201115 22:02:28.130" endtime="20201115 22:02:28.161"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:28.172" level="INFO">NAME: 00-overhead-25-remove</msg>
<status status="PASS" starttime="20201115 22:02:28.169" endtime="20201115 22:02:28.172"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:28.177" level="INFO">VALUE: [2.8846999999998513e-05, 2.9860999999999083e-05, 2.8986000000001677e-05, 2.915199999999757e-05, 2.9333999999998916e-05, 2.917999999999671e-05, 2.9652999999997542e-05, 2.9138999999997472e-05, 2.9832999999999943e-05, 2.9528000000000887e-05, 2.965300000000448e-05, 2.9486000000002177e-05, 2.9152999999997042e-05, 2.8818999999999373e-05, 2.9166999999996612e-05, 2.9360999999998583e-05, 2.897300000000158e-05, 2.9777999999994198e-05, 2.9819999999999847e-05, 2.8764000000000567e-05, 2.966700000001099e-05, 2.9666999999997112e-05, 2.9124999999990964e-05, 2.9319999999999347e-05, 2.9318999999999873e-05, 2.8806000000006216e-05, 2.9666999999997112e-05, 2.9652000000005008e-05, 2.9319999999999347e-05, 2.9819999999999847e-05, 2.965300000000448e-05, 2.9834000000006355e-05, 2.9624999999991464e-05, 2.9152000000004508e-05, 2.8818999999999373e-05, 2.8972000000002107e-05, 2.9624999999991464e-05, 2.9485999999995238e-05, 2.9485999999995238e-05, 2.8972000000002107e-05, 2.8958999999995072e-05, 2.8972000000002107e-05, 2.897199999998823e-05, 2.9485999999995238e-05, 2.9638999999997973e-05, 2.965300000000448e-05, 2.915300000000398e-05, 2.9152999999990103e-05, 2.9152999999990103e-05, 2.9500000000001747e-05]</msg>
<status status="PASS" starttime="20201115 22:02:28.174" endtime="20201115 22:02:28.178"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:28.162" endtime="20201115 22:02:28.180"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:28.186" endtime="20201115 22:02:28.189"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:28.195" endtime="20201115 22:02:28.217"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:28.190" endtime="20201115 22:02:28.219"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:28.182" endtime="20201115 22:02:28.220"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.601" endtime="20201115 22:02:28.221"></status>
</kw>
<msg timestamp="20201115 22:02:28.221" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:28.246" endtime="20201115 22:02:28.308"></status>
</kw>
<msg timestamp="20201115 22:02:28.309" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:28.242" endtime="20201115 22:02:28.310"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:28.316" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:28.312" endtime="20201115 22:02:28.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:28.318" endtime="20201115 22:02:28.322"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:28.235" endtime="20201115 22:02:28.324"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:28.228" endtime="20201115 22:02:28.325"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:28.342" endtime="20201115 22:02:28.704"></status>
</kw>
<msg timestamp="20201115 22:02:28.711" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043288903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043318375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:28.339" endtime="20201115 22:02:28.712"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:28.730" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043288903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043318375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:28.714" endtime="20201115 22:02:28.731"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:28.733" endtime="20201115 22:02:28.737"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:28.331" endtime="20201115 22:02:28.738"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:28.326" endtime="20201115 22:02:28.740"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:28.751" level="INFO">${RESULT} = [{'time': 0.043318375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9472000000002607e-05, 'source_diff': 2.9472000000002607e-05}, {'time': 0.044351514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:28.741" endtime="20201115 22:02:28.751"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:28.785" level="INFO">${OVERHEAD} = {'diff': [2.9472000000002607e-05, 2.9500000000001747e-05, 2.9292000000000207e-05, 2.897300000000158e-05, 2.9318999999999873e-05, 2.9791000000001233e-05, 2.8985999999994738e-05, 2.9806000000000277e-05,...</msg>
<status status="PASS" starttime="20201115 22:02:28.753" endtime="20201115 22:02:28.785"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:28.796" level="INFO">NAME: 00-overhead-25-remove</msg>
<status status="PASS" starttime="20201115 22:02:28.794" endtime="20201115 22:02:28.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:28.801" level="INFO">VALUE: [2.9472000000002607e-05, 2.9500000000001747e-05, 2.9292000000000207e-05, 2.897300000000158e-05, 2.9318999999999873e-05, 2.9791000000001233e-05, 2.8985999999994738e-05, 2.9806000000000277e-05, 2.8971999999995168e-05, 2.916599999999714e-05, 2.962500000000534e-05, 2.94170000000038e-05, 2.8972000000002107e-05, 2.915300000000398e-05, 2.8985999999994738e-05, 2.943100000000337e-05, 2.9597999999998736e-05, 2.9806000000000277e-05, 2.8971999999995168e-05, 2.9819999999999847e-05, 2.9486000000009116e-05, 2.9819999999999847e-05, 2.9166999999996612e-05, 2.969399999999678e-05, 2.9513999999994378e-05, 2.915300000000398e-05, 2.9805000000007742e-05, 2.9500000000001747e-05, 2.9500000000001747e-05, 2.92370000000014e-05, 2.9305999999992838e-05, 2.9083999999998666e-05, 2.9820000000013724e-05, 2.8930999999995932e-05, 2.9304999999993364e-05, 2.937500000001203e-05, 2.9486999999994712e-05, 2.962500000000534e-05, 2.947300000000208e-05, 2.9792000000000707e-05, 2.9638999999997973e-05, 2.9776999999994724e-05, 2.8944999999988563e-05, 2.9138999999997472e-05, 2.9638999999997973e-05, 2.966599999999764e-05, 2.9486000000009116e-05, 2.9818999999986495e-05, 2.9137999999998e-05, 2.9833999999992478e-05]</msg>
<status status="PASS" starttime="20201115 22:02:28.798" endtime="20201115 22:02:28.802"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:28.787" endtime="20201115 22:02:28.804"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:28.810" endtime="20201115 22:02:28.813"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:28.819" endtime="20201115 22:02:28.841"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:28.814" endtime="20201115 22:02:28.843"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:28.806" endtime="20201115 22:02:28.845"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:28.222" endtime="20201115 22:02:28.846"></status>
</kw>
<msg timestamp="20201115 22:02:28.846" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:28.870" endtime="20201115 22:02:28.932"></status>
</kw>
<msg timestamp="20201115 22:02:28.933" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:28.866" endtime="20201115 22:02:28.934"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:28.939" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:28.935" endtime="20201115 22:02:28.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:28.942" endtime="20201115 22:02:28.946"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:28.859" endtime="20201115 22:02:28.947"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:28.853" endtime="20201115 22:02:28.949"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:28.966" endtime="20201115 22:02:29.324"></status>
</kw>
<msg timestamp="20201115 22:02:29.331" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042312361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042341681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:28.962" endtime="20201115 22:02:29.332"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:29.350" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042312361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042341681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:29.334" endtime="20201115 22:02:29.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:29.352" endtime="20201115 22:02:29.356"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:28.955" endtime="20201115 22:02:29.358"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:28.950" endtime="20201115 22:02:29.359"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:29.370" level="INFO">${RESULT} = [{'time': 0.042341681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9319999999999347e-05, 'source_diff': 2.9319999999999347e-05}, {'time': 0.043368861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:29.361" endtime="20201115 22:02:29.370"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:29.402" level="INFO">${OVERHEAD} = {'diff': [2.9319999999999347e-05, 2.9110999999998333e-05, 2.8804999999999803e-05, 2.919500000000269e-05, 2.9792000000000707e-05, 2.9305000000000303e-05, 2.9000000000001247e-05, 2.9472000000002607e-05,...</msg>
<status status="PASS" starttime="20201115 22:02:29.372" endtime="20201115 22:02:29.402"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:29.414" level="INFO">NAME: 00-overhead-25-remove</msg>
<status status="PASS" starttime="20201115 22:02:29.411" endtime="20201115 22:02:29.415"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:29.420" level="INFO">VALUE: [2.9319999999999347e-05, 2.9110999999998333e-05, 2.8804999999999803e-05, 2.919500000000269e-05, 2.9792000000000707e-05, 2.9305000000000303e-05, 2.9000000000001247e-05, 2.9472000000002607e-05, 2.967999999999721e-05, 2.9152999999997042e-05, 2.9666999999997112e-05, 2.9472000000002607e-05, 2.9318999999999873e-05, 2.9485999999995238e-05, 2.9444999999996002e-05, 2.9472000000002607e-05, 2.919500000000269e-05, 2.916700000000355e-05, 2.9832999999999943e-05, 2.9486000000002177e-05, 2.9500000000001747e-05, 2.9166999999996612e-05, 2.9500000000001747e-05, 2.9014000000007756e-05, 2.8818999999999373e-05, 2.9638999999997973e-05, 2.9819999999999847e-05, 2.8985999999994738e-05, 2.9304999999993364e-05, 2.89579999999956e-05, 2.9777999999994198e-05, 2.8818999999999373e-05, 2.8791000000000233e-05, 2.9500000000001747e-05, 2.8972000000002107e-05, 2.9346999999999013e-05, 2.918100000000312e-05, 2.9166999999996612e-05, 2.947300000000208e-05, 2.9000000000001247e-05, 2.9819999999999847e-05, 2.9292000000000207e-05, 2.986100000000602e-05, 2.913900000001135e-05, 2.8972000000002107e-05, 2.9152999999990103e-05, 2.9306000000006716e-05, 2.9305999999992838e-05, 2.965300000000448e-05, 2.919500000000963e-05]</msg>
<status status="PASS" starttime="20201115 22:02:29.417" endtime="20201115 22:02:29.421"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.404" endtime="20201115 22:02:29.423"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:29.430" endtime="20201115 22:02:29.432"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:29.438" endtime="20201115 22:02:29.460"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.434" endtime="20201115 22:02:29.462"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.425" endtime="20201115 22:02:29.463"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:28.847" endtime="20201115 22:02:29.464"></status>
</kw>
<msg timestamp="20201115 22:02:29.465" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:29.488" endtime="20201115 22:02:29.550"></status>
</kw>
<msg timestamp="20201115 22:02:29.552" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:29.485" endtime="20201115 22:02:29.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:29.558" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:29.554" endtime="20201115 22:02:29.559"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:29.560" endtime="20201115 22:02:29.564"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.477" endtime="20201115 22:02:29.566"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.471" endtime="20201115 22:02:29.567"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:29.584" endtime="20201115 22:02:29.935"></status>
</kw>
<msg timestamp="20201115 22:02:29.942" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042392389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042421694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:29.581" endtime="20201115 22:02:29.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:29.960" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042392389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042421694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:29.944" endtime="20201115 22:02:29.961"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:29.963" endtime="20201115 22:02:29.967"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.573" endtime="20201115 22:02:29.969"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.569" endtime="20201115 22:02:29.970"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:29.981" level="INFO">${RESULT} = [{'time': 0.042421694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9305000000000303e-05, 'source_diff': 2.9305000000000303e-05}, {'time': 0.043451083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:29.972" endtime="20201115 22:02:29.981"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:30.013" level="INFO">${OVERHEAD} = {'diff': [2.9305000000000303e-05, 2.913900000000441e-05, 2.9249999999994558e-05, 2.967999999999721e-05, 2.913900000000441e-05, 2.8819999999998847e-05, 2.9819999999999847e-05, 2.891599999999689e-05, 2....</msg>
<status status="PASS" starttime="20201115 22:02:29.983" endtime="20201115 22:02:30.013"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:30.024" level="INFO">NAME: 00-overhead-25-remove</msg>
<status status="PASS" starttime="20201115 22:02:30.022" endtime="20201115 22:02:30.025"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:30.030" level="INFO">VALUE: [2.9305000000000303e-05, 2.913900000000441e-05, 2.9249999999994558e-05, 2.967999999999721e-05, 2.913900000000441e-05, 2.8819999999998847e-05, 2.9819999999999847e-05, 2.891599999999689e-05, 2.945900000000251e-05, 2.9638999999997973e-05, 2.8999999999994308e-05, 2.9305999999999777e-05, 2.965300000000448e-05, 2.895900000000201e-05, 2.9318999999999873e-05, 2.9652999999997542e-05, 2.8986000000001677e-05, 2.9318999999999873e-05, 2.9152999999997042e-05, 2.9166999999996612e-05, 2.9805000000007742e-05, 2.897199999998823e-05, 2.916599999999714e-05, 2.9360999999991644e-05, 2.9472000000002607e-05, 2.9000000000001247e-05, 2.9138999999997472e-05, 2.9152999999990103e-05, 2.9319999999999347e-05, 2.9819999999999847e-05, 2.9819000000000373e-05, 2.947300000000208e-05, 2.9318999999999873e-05, 2.9819000000000373e-05, 2.96379999999985e-05, 2.96379999999985e-05, 2.9332999999992504e-05, 2.9472000000002607e-05, 2.9638999999997973e-05, 2.895900000000895e-05, 2.915300000000398e-05, 2.9110999999998333e-05, 2.9319999999999347e-05, 2.9472000000002607e-05, 2.8819999999998847e-05, 2.9000000000001247e-05, 2.9305999999992838e-05, 2.9638999999997973e-05, 2.9804999999993864e-05, 2.947199999998873e-05]</msg>
<status status="PASS" starttime="20201115 22:02:30.026" endtime="20201115 22:02:30.037"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:30.015" endtime="20201115 22:02:30.039"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:30.045" endtime="20201115 22:02:30.048"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:30.054" endtime="20201115 22:02:30.075"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:30.049" endtime="20201115 22:02:30.077"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:30.040" endtime="20201115 22:02:30.079"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.466" endtime="20201115 22:02:30.079"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:26.978" endtime="20201115 22:02:30.080"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:26.976" endtime="20201115 22:02:30.080"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.293" endtime="20201115 22:02:30.081"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="teardown">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:30.092" endtime="20201115 22:02:30.114"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:30.088" endtime="20201115 22:02:30.116"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:30.085" endtime="20201115 22:02:30.116"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:01:18.160" endtime="20201115 22:02:30.118" critical="yes"></status>
</test>
<status status="PASS" starttime="20201115 21:59:58.101" endtime="20201115 22:02:30.134"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_ztimer_benchmarks</item>
<item name="RIOT-Board">samr21-xpro</item>
<item name="RIOT-Version">2020.10</item>
</metadata>
<status status="PASS" starttime="20201115 21:59:54.276" endtime="20201115 22:02:30.185"></status>
</suite>
<statistics>
<total>
<stat pass="5" fail="0">Critical Tests</stat>
<stat pass="5" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="5" fail="0">APP_tests_ztimer_benchmarks</stat>
<stat pass="5" fail="0">BOARD_samr21-xpro</stat>
<stat pass="5" fail="0">dev</stat>
</tag>
<suite>
<stat pass="5" fail="0" id="s1" name="tests_ztimer_benchmarks">tests_ztimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_ztimer_benchmarks.Timer Version</stat>
<stat pass="4" fail="0" id="s1-s2" name="Timer Overhead">tests_ztimer_benchmarks.Timer Overhead</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
